rank: 1
score: 99.63877360026042
patch: break ;
rank: 1
score: 99.6160888671875
patch: break ; break ;
rank: 1
score: 99.56160191127232
patch: break ; default : break ;
rank: 1
score: 99.4673739346591
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 1
score: 99.4631984544837
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 1
score: 99.45949009486607
patch: typeable = child CaMeL Type . to CaMeL String ( ) ;
rank: 1
score: 99.40768667367789
patch: right CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 1
score: 99.37125069754464
patch: } else { break ; }
rank: 1
score: 99.36064801897321
patch: break ; case Token . ;
rank: 1
score: 99.26453653971355
patch: break ; break ; ;
rank: 2
score: 99.47786458333333
patch: break ; default : ;
rank: 2
score: 99.45966796875
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 2
score: 99.43555908203125
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 2
score: 99.4001220703125
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 2
score: 99.3136319247159
patch: switch ( n . get CaMeL Type ( ) )
rank: 2
score: 99.3123270670573
patch: continue ;
rank: 2
score: 99.24322509765625
patch: return break ; } break ;
rank: 3
score: 99.48419189453125
patch: break ; break ; break ;
rank: 3
score: 99.44871168870192
patch: right CaMeL Type = n . get CaMeL Type ( ) ;
rank: 3
score: 99.4430919828869
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 3
score: 99.42677001953125
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 3
score: 99.34741973876953
patch: break ; default : break ; }
rank: 3
score: 99.2927017211914
patch: break ; case Token . LP :
rank: 3
score: 99.2369893391927
patch: } else = break ;
rank: 3
score: 99.18204498291016
patch: break ; case Token . TYPE :
rank: 3
score: 99.12750244140625
patch: break ; * /
rank: 4
score: 99.40500217013889
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 4
score: 99.35795084635417
patch: right CaMeL Type = parent . get CaMeL JS CaMeL Type ( ) ;
rank: 4
score: 99.2453842163086
patch: break ; break ; if break ;
rank: 4
score: 99.21931675502232
patch: break ; } catch break ;
rank: 4
score: 99.19609631990132
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 4
score: 99.10179792131696
patch: break ; break ; * /
rank: 5
score: 99.42567510190217
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 5
score: 99.41753278459821
patch: typeable = n . get CaMeL First CaMeL Child ( ) ;
rank: 5
score: 99.40222620081019
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 5
score: 99.29663957868304
patch: break ; default : throw ;
rank: 5
score: 99.23764038085938
patch: break ; break ; }
rank: 5
score: 99.2061996459961
patch: } else ;
rank: 5
score: 99.16236877441406
patch: continue ; case Token . LP :
rank: 5
score: 99.09962972005208
patch: } else { break ;
rank: 6
score: 99.40094401041667
patch: right CaMeL Type = child CaMeL Type . to CaMeL String ( ) ;
rank: 6
score: 99.4001220703125
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) ) ;
rank: 6
score: 99.3512451171875
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 6
score: 99.2574821920956
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 6
score: 99.2271728515625
patch: break ; break ; break ; break ;
rank: 6
score: 99.20484924316406
patch: break ; } else { break ;
rank: 6
score: 99.15908813476562
patch: return ;
rank: 6
score: 99.07721710205078
patch: break ; case Token . NAME :
rank: 7
score: 99.4197414232337
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 7
score: 99.38725062779018
patch: typeable = n . get CaMeL JS CaMeL Type ( ) ;
rank: 7
score: 99.3855313387784
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 7
score: 99.25328979492187
patch: right CaMeL Type = visit CaMeL Name ( ;
rank: 7
score: 99.20070103236607
patch: return break ; } else ;
rank: 7
score: 99.14579010009766
patch: break ; break ; } break ;
rank: 7
score: 99.14131673177083
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 7
score: 99.09330531529018
patch: break ; break ; ; ;
rank: 7
score: 99.04482014973958
patch: break ; case Token . TYPE : ;
rank: 8
score: 99.40618896484375
patch: ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 8
score: 99.37875600961539
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 8
score: 99.36933729383681
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 8
score: 99.34619140625
patch: right CaMeL Type = n . get CaMeL Name ( ) ;
rank: 8
score: 99.2502197265625
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 8
score: 99.19737752278645
patch: break ; } else ;
rank: 8
score: 99.1457748413086
patch: break ; break ; break ; }
rank: 8
score: 99.11968672902961
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 8
score: 99.06753976004464
patch: } * * / break ;
rank: 8
score: 99.01291910807292
patch: switch ( n . get CaMeL Type ( ; n . get CaMeL Type ( ) )
rank: 9
score: 99.40087890625
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 9
score: 99.3782489483173
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 9
score: 99.35881958007812
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . report CaMeL
rank: 9
score: 99.34573703342014
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 9
score: 99.19724527994792
patch: } else if break ;
rank: 9
score: 99.08115105879934
patch: break . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 9
score: 99.07663981119792
patch: break ; break ; else
rank: 9
score: 98.99764578683036
patch: break ; default : return ;
rank: 10
score: 99.39268391927084
patch: child CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 10
score: 99.37740384615384
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 10
score: 99.3265151977539
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 10
score: 99.23700714111328
patch: right = visit CaMeL Name ( ;
rank: 10
score: 99.07707134046052
patch: t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 10
score: 99.0742899576823
patch: break ; if break ;
rank: 10
score: 98.99681899126838
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) )
rank: 10
score: 98.97739868164062
patch: break ; ; ;
rank: 11
score: 99.38690185546875
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 11
score: 99.3580322265625
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) ;
rank: 11
score: 99.34980912642045
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 11
score: 99.19954641241776
patch: this . ; this . ; this . ; this . ; this . ; this . ;
rank: 11
score: 99.15510559082031
patch: return break ; } catch break ;
rank: 11
score: 99.07425087376645
patch: continue . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 11
score: 99.06024169921875
patch: break ; break ; if ; break ;
rank: 11
score: 98.99497292258523
patch: switch ( n . get CaMeL Type ( ) ;
rank: 12
score: 99.3857666015625
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( ) ;
rank: 12
score: 99.349365234375
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 12
score: 99.32481166294643
patch: set CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 12
score: 99.14876556396484
patch: } else { break ; } }
rank: 12
score: 99.06521767064145
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 12
score: 99.05685424804688
patch: break ; } break ;
rank: 12
score: 98.98940700954861
patch: break ; case Token . NAME : ;
rank: 12
score: 98.9480209350586
patch: break ; break ; while break ;
rank: 13
score: 99.3821331521739
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 13
score: 99.35443725585938
patch: right = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 13
score: 99.3244873046875
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 13
score: 99.18712660845588
patch: right CaMeL Type = right CaMeL Type . to CaMeL Lower CaMeL Case ( ) ;
rank: 13
score: 99.06405639648438
patch: break ; case Token . FUNCTION :
rank: 13
score: 99.02600969587054
patch: break ; break ; return ;
rank: 13
score: 98.98773193359375
patch: break ; case Token . NULL :
rank: 13
score: 98.93291364397321
patch: break ; * / break ;
rank: 14
score: 99.38115985576923
patch: child CaMeL Type = n . get CaMeL Type ( ) ;
rank: 14
score: 99.35047325721153
patch: right = n . get CaMeL First CaMeL Child ( ) ;
rank: 14
score: 99.34702845982143
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n ) ;
rank: 14
score: 99.32273356119792
patch: right CaMeL Type = child CaMeL Type ;
rank: 14
score: 99.16648763020834
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 14
score: 99.057861328125
patch: return ; case Token . LP :
rank: 14
score: 99.00626627604167
patch: break ; break ; break ; return ;
rank: 14
score: 98.9774502840909
patch: left CaMeL Type = ; right CaMeL Type = ;
rank: 14
score: 98.93213500976563
patch: else { break ;
rank: 15
score: 99.37510329026442
patch: child CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 15
score: 99.34270629882812
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 15
score: 99.31694030761719
patch: validator . set CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 15
score: 99.16062418619792
patch: break ; case Token . break : ;
rank: 15
score: 99.12701416015625
patch: } else { break ; break ;
rank: 15
score: 99.04499816894531
patch: break ; case Token . RETURN :
rank: 15
score: 99.00254821777344
patch: break ; break ; break ; else
rank: 15
score: 98.97086958451705
patch: switch ( node . get CaMeL Type ( ) )
rank: 15
score: 98.9275410970052
patch: } break ; break ;
rank: 16
score: 99.33506774902344
patch: validator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 16
score: 99.33343505859375
patch: ensure CaMeL Typed ( t , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 16
score: 99.3120868389423
patch: right CaMeL Type = t . get CaMeL Type ( ) ;
rank: 16
score: 99.14188878676471
patch: right CaMeL Type = right CaMeL Type . get CaMeL Base CaMeL Type ( ) ;
rank: 16
score: 99.11146763392857
patch: break ; } else break ;
rank: 16
score: 99.04495239257812
patch: break ; case Token . COMMA :
rank: 16
score: 98.99759347098214
patch: break ; if ; break ;
rank: 16
score: 98.95344373914931
patch: break ; case Token . NULL : ;
rank: 16
score: 98.92509242466518
patch: } * * ; break ;
rank: 17
score: 99.37382175611413
patch: left CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 17
score: 99.33435589334239
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 17
score: 99.3316180889423
patch: child CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 17
score: 99.31046549479167
patch: set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 17
score: 99.1413241299716
patch: break ; case Token . ; case Token . ;
rank: 17
score: 99.0385030110677
patch: switch ( n . get CaMeL Type ( ) ) {
rank: 17
score: 98.99067034040179
patch: break ; break ; if ;
rank: 17
score: 98.94780731201172
patch: break ; case Token . STRING :
rank: 17
score: 98.9217020670573
patch: break ; break ; *
rank: 18
score: 99.37315302309783
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 18
score: 99.33148552389706
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 18
score: 99.1412712545956
patch: right CaMeL Type = right CaMeL Type . get CaMeL Qualified CaMeL Name ( ) ;
rank: 18
score: 99.09960065569196
patch: break ; } else return ;
rank: 18
score: 99.02314453125
patch: old CaMeL Name = t . get CaMeL First CaMeL Child ( ) ;
rank: 18
score: 98.98817443847656
patch: break ; break ; else break ;
rank: 18
score: 98.93296305338542
patch: break ; case break :
rank: 18
score: 98.9213155110677
patch: } else ; break ;
rank: 19
score: 99.3312237079327
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 19
score: 99.1409912109375
patch: right CaMeL Type = child CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 19
score: 99.07942417689732
patch: return break ; } catch ;
rank: 19
score: 99.02220394736842
patch: { get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 19
score: 98.98526000976562
patch: if break ; break ;
rank: 19
score: 98.9294766512784
patch: sb . append ( $STRING$ ) . append ( ;
rank: 19
score: 98.91315252130681
patch: i . out . println break false ; break ;
rank: 20
score: 99.36516927083333
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) ;
rank: 20
score: 99.30158434416118
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL
rank: 20
score: 99.13828125
patch: right CaMeL Type = right CaMeL Type . to CaMeL String ( ) ;
rank: 20
score: 99.07040744357639
patch: break ; } else { break ; }
rank: 20
score: 99.01422797309027
patch: t . set CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 20
score: 98.96867065429687
patch: break ; break ; break ; if break ;
rank: 20
score: 98.91302490234375
patch: break ; * / if break ;
rank: 21
score: 99.36339047080592
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 21
score: 99.32958984375
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 21
score: 99.1364974975586
patch: this . ; this . ; this . ; this . ; this . ;
rank: 21
score: 99.07030232747395
patch: } else ; return ;
rank: 21
score: 99.01254611545139
patch: t . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 21
score: 98.94158063616071
patch: break ; break ; / /
rank: 21
score: 98.90944417317708
patch: else { break ; }
rank: 22
score: 99.36243489583333
patch: left CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 22
score: 99.32742513020834
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 22
score: 99.32471720377605
patch: validator . child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 22
score: 99.2929931640625
patch: n . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 22
score: 99.04232788085938
patch: } else { return ;
rank: 22
score: 99.01248329564145
patch: return get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 22
score: 98.9362564086914
patch: break ; if break ; break ;
rank: 22
score: 98.92050170898438
patch: break ; default : return ; }
rank: 22
score: 98.90005493164062
patch: } * * /
rank: 23
score: 99.36123860677084
patch: right CaMeL Type = t . get CaMeL First CaMeL Child ( ) ;
rank: 23
score: 99.32691539417614
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 23
score: 99.32416381835938
patch: validator . set CaMeL JS CaMeL Type ( node . get CaMeL JS CaMeL Type ( ) ) ;
rank: 23
score: 99.2913818359375
patch: right CaMeL Type = parent . get CaMeL Name ( ) ;
rank: 23
score: 99.02703857421875
patch: break ; break ; } }
rank: 23
score: 98.99940249794408
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 23
score: 98.91265190972223
patch: switch ( n . get CaMeL Type ( ; node . get CaMeL Type ( ) )
rank: 23
score: 98.87949916294643
patch: break ; break ; ; *
rank: 24
score: 99.36104329427083
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 24
score: 99.32661743164063
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 24
score: 99.32152210582386
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . report CaMeL
rank: 24
score: 99.29058837890625
patch: validator . set CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 24
score: 99.11593424479166
patch: right CaMeL Type = right CaMeL Type . get CaMeL Name ( ) ;
rank: 24
score: 99.0260009765625
patch: break break ; } catch break ;
rank: 24
score: 98.99856906467014
patch: table . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 24
score: 98.91897583007812
patch: break ; break ; ; break ;
rank: 24
score: 98.9122085571289
patch: break ; case Token . TRUE :
rank: 24
score: 98.86824174360795
patch: i . out . println ( $STRING$ ; break ;
rank: 25
score: 99.35606166294643
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 25
score: 99.32467886117789
patch: typeable = get CaMeL JS CaMeL Type ( n ) ;
rank: 25
score: 99.31747436523438
patch: validator . right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 25
score: 99.28998480902777
patch: set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 25
score: 99.10558403862848
patch: break ; default : throw new ; }
rank: 25
score: 99.02154541015625
patch: } else ; if break ;
rank: 25
score: 98.90936957465277
patch: break ; case ; case Token . ;
rank: 25
score: 98.9074951171875
patch: break ; break ; if break ; break ;
rank: 25
score: 98.86546107700893
patch: else break ; break ; ;
rank: 26
score: 99.35258483886719
patch: ensure CaMeL Typed ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 26
score: 99.31471470424107
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( ) )
rank: 26
score: 99.28993443080357
patch: set CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 26
score: 99.10118910845588
patch: right CaMeL Type = right CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 26
score: 99.00785319010417
patch: } else { break ; break ; }
rank: 26
score: 98.98731231689453
patch: break ; case Token . NEW :
rank: 26
score: 98.90460968017578
patch: break ; default : throw new ;
rank: 26
score: 98.90312957763672
patch: break ; break ; break ; ;
rank: 26
score: 98.86312866210938
patch: break ; ;
rank: 27
score: 99.31784057617188
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 27
score: 99.31232367621527
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 27
score: 99.09735785590277
patch: break ; case Token . NONE : ;
rank: 27
score: 99.00748116629464
patch: } break ; break ; }
rank: 27
score: 98.98689778645833
patch: old CaMeL Name = n . get CaMeL First CaMeL Child ( ) ;
rank: 27
score: 98.90337456597223
patch: break ; case Token . ; * /
rank: 27
score: 98.89943440755208
patch: break ; break ; break ; if ;
rank: 27
score: 98.86195882161458
patch: } * / break ;
rank: 28
score: 99.3474609375
patch: right CaMeL Type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 28
score: 99.31325461647727
patch: right CaMeL Type = child CaMeL Type ; break ;
rank: 28
score: 99.31065063476562
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL
rank: 28
score: 99.0938491821289
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . ;
rank: 28
score: 99.00342475043402
patch: } else { break ; } break ;
rank: 28
score: 98.98162841796875
patch: break ; case Token . CALL :
rank: 28
score: 98.89549424913194
patch: switch ( n . get CaMeL Type ( ; n . get CaMeL Type ( ) ;
rank: 28
score: 98.89293212890625
patch: break ; break ; break ; break ; }
rank: 28
score: 98.86002604166667
patch: finally { break ; }
rank: 29
score: 99.34434204101562
patch: validator = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 29
score: 99.31305252878289
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 29
score: 99.31002807617188
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 29
score: 99.2847149188702
patch: right CaMeL Type = n . get CaMeL Value ( ) ;
rank: 29
score: 99.0902458639706
patch: right CaMeL Type = left CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 29
score: 98.98053385416667
patch: return Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 29
score: 98.89339599609374
patch: break ; default :
rank: 29
score: 98.88856506347656
patch: if break ; break ; break ;
rank: 29
score: 98.8591796875
patch: finally { break ;
rank: 30
score: 99.28270612444196
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL
rank: 30
score: 99.08778381347656
patch: break ; case Token . NONE :
rank: 30
score: 99.00027465820312
patch: } break ;
rank: 30
score: 98.97914123535156
patch: t . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 30
score: 98.89241943359374
patch: break ; case ; case Token . TYPE :
rank: 30
score: 98.88017442491319
patch: break ; break ; } if break ;
rank: 30
score: 98.83952113560268
patch: break ; ; break ; ;
rank: 31
score: 99.311796875
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 31
score: 99.30635402513587
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 31
score: 99.08402745863971
patch: this . ; this . ; this . ; this . ; this . ; ;
rank: 31
score: 98.99834333147321
patch: return break ; break ; }
rank: 31
score: 98.97538926866319
patch: n . set CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 31
score: 98.88688354492187
patch: switch ( n . get CaMeL Type ( ;
rank: 31
score: 98.86386447482639
patch: break ; break ; else if break ;
rank: 32
score: 99.33861586626838
patch: right CaMeL Type = parent . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 32
score: 99.304853515625
patch: validator . set CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 32
score: 99.08357747395833
patch: right CaMeL Type = n . get CaMeL Parent CaMeL Node ( ) ;
rank: 32
score: 98.99778529575893
patch: } else { return ; }
rank: 32
score: 98.97248920641448
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) )
rank: 32
score: 98.88103569878473
patch: right = break ; case Token . ;
rank: 32
score: 98.85689968532986
patch: break ; break ; } break ; }
rank: 32
score: 98.83176676432292
patch: else { break ; ;
rank: 33
score: 99.33454975328948
patch: child CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 33
score: 99.311015625
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 33
score: 98.99484688895089
patch: break ; false ; break ;
rank: 33
score: 98.96772596571181
patch: this . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 33
score: 98.87821451822917
patch: left = break ; case Token . ;
rank: 33
score: 98.85375213623047
patch: break ; } break ; break ;
rank: 33
score: 98.82819366455078
patch: break ; break ; case 1 ;
rank: 34
score: 99.33451334635417
patch: validator . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 34
score: 99.30386555989584
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 ( ) )
rank: 34
score: 98.9882100423177
patch: } else = false ;
rank: 34
score: 98.96675872802734
patch: return || Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 34
score: 98.87727494673295
patch: switch ( t . get CaMeL Type ( ) )
rank: 34
score: 98.84811062282986
patch: break ; break ; return ; break ;
rank: 34
score: 98.82619803292411
patch: } else { break ; ;
rank: 35
score: 99.33343036358173
patch: right CaMeL Type = node . get CaMeL Type ( ) ;
rank: 35
score: 99.30881569602273
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 35
score: 99.27206260279605
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 35
score: 99.07589561060855
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 35
score: 98.9654541015625
patch: binding . expect CaMeL Number ( t . get CaMeL Type ( ) ) ;
rank: 35
score: 98.84565873579545
patch: break ; break ; break ; break ; break ;
rank: 35
score: 98.823974609375
patch: finally { break ; ;
rank: 36
score: 99.33173571134868
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 36
score: 99.3087491122159
patch: right CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 36
score: 99.30115855823864
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 36
score: 99.07347914751838
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type CaMeL Name ( ) ;
rank: 36
score: 98.98720877511161
patch: break ; } } break ;
rank: 36
score: 98.96505533854166
patch: old CaMeL Name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 36
score: 98.86907348632812
patch: break ; case Token . TYPE : ; ;
rank: 36
score: 98.84465196397569
patch: break ; break ; break ; / /
rank: 37
score: 99.33096923828126
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . expect CaMeL
rank: 37
score: 99.30865948016827
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 37
score: 99.2703857421875
patch: right CaMeL Type = t . get CaMeL JS CaMeL Type ( ) ;
rank: 37
score: 98.98381696428571
patch: break break ; } break ;
rank: 37
score: 98.96492513020833
patch: switch ( parent . get CaMeL Type ( ) ) {
rank: 37
score: 98.86617702907986
patch: break ; case Token . TARGET : ;
rank: 37
score: 98.84288194444444
patch: break ; if ; break ; break ;
rank: 37
score: 98.82181803385417
patch: break ; ; break ;
rank: 38
score: 99.330810546875
patch: child CaMeL Type = child CaMeL Type . get CaMeL Type ( ) ;
rank: 38
score: 99.3058612530048
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 38
score: 99.29818115234374
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL
rank: 38
score: 99.07164655412946
patch: break ; default : ; ;
rank: 38
score: 98.98246002197266
patch: } else if break ; break ;
rank: 38
score: 98.96429998224431
patch: return . get CaMeL First CaMeL Child ( ) ;
rank: 38
score: 98.86501736111111
patch: switch ( n . get CaMeL Type ( ; t . get CaMeL Type ( ) )
rank: 38
score: 98.83897181919643
patch: return ; break ; break ;
rank: 38
score: 98.819580078125
patch: i . out . println break ) ; break ;
rank: 39
score: 99.33062744140625
patch: ensure CaMeL Typed ( t , left CaMeL Type ) ;
rank: 39
score: 99.30435001148896
patch: typeable = n . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 39
score: 99.29728393554687
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 39
score: 99.26529634915866
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL
rank: 39
score: 99.07100423177083
patch: right CaMeL Type = right CaMeL Type ;
rank: 39
score: 98.97933523995536
patch: } else ; return break ;
rank: 39
score: 98.96417236328125
patch: state . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 39
score: 98.8635482788086
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ;
rank: 39
score: 98.82954915364583
patch: break ; else break ;
rank: 40
score: 99.29605102539062
patch: validator . left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 40
score: 99.26499938964844
patch: set CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 40
score: 99.06980387369792
patch: right CaMeL Type = ;
rank: 40
score: 98.97657121930804
patch: break break ; } else ;
rank: 40
score: 98.96365356445312
patch: result = Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 40
score: 98.86151123046875
patch: break ; case Token . ; ;
rank: 40
score: 98.80974578857422
patch: break ; break ; ; ; *
rank: 41
score: 99.29302368164062
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 41
score: 99.26426478794643
patch: n . get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 41
score: 99.06480497472427
patch: left CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 41
score: 98.96034240722656
patch: Node left CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 41
score: 98.8580551147461
patch: break ; case Token . TARGET :
rank: 41
score: 98.82097710503473
patch: break ; break ; break ; * /
rank: 41
score: 98.80828857421875
patch: break ; / else { break ;
rank: 42
score: 99.32680876358695
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 42
score: 99.30194091796875
patch: typeable = child CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 42
score: 99.29160563151042
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 42
score: 99.2609130859375
patch: right CaMeL Type = child CaMeL Type . get CaMeL Name ( ) ;
rank: 42
score: 99.06342022235577
patch: right CaMeL Type = visit CaMeL Name ( t , n ;
rank: 42
score: 98.97421264648438
patch: } else = break ; break ;
rank: 42
score: 98.95854187011719
patch: return ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 42
score: 98.85658094618056
patch: left CaMeL Type = ; right CaMeL Type = t . get CaMeL Type ( ) ;
rank: 42
score: 98.82063802083333
patch: break ; break ; if ; return ;
rank: 42
score: 98.8076171875
patch: break ; else { break ;
rank: 43
score: 99.3265380859375
patch: ensure CaMeL Typed ( t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 43
score: 99.06248563878677
patch: this . ; this . ; this . ; ; this . ; this . ;
rank: 43
score: 98.97258649553571
patch: break ; break ; } else
rank: 43
score: 98.95793071546052
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 43
score: 98.85431780133929
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type ;
rank: 43
score: 98.82005310058594
patch: break ; break ; / / /
rank: 43
score: 98.80342864990234
patch: break ; break ; case int ;
rank: 44
score: 99.325927734375
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 44
score: 99.29834923377403
patch: child CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 44
score: 99.29029038373162
patch: validator . child CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 44
score: 99.06202697753906
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 44
score: 98.97174072265625
patch: } else { if break ; }
rank: 44
score: 98.95635986328125
patch: n . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 44
score: 98.85340881347656
patch: break ; case Token . LABEL :
rank: 45
score: 99.32405598958333
patch: child CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 45
score: 99.29750754616477
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 45
score: 99.28963623046874
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 45
score: 99.2540347450658
patch: set CaMeL Type ( n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 45
score: 99.06123570033482
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ;
rank: 45
score: 98.97057233537946
patch: break ; else = break ;
rank: 45
score: 98.95561218261719
patch: break ; case Token . POS :
rank: 45
score: 98.85300856370192
patch: break ; default : break . to CaMeL String ( ) ;
rank: 45
score: 98.81428358289931
patch: break ; break ; if break ; }
rank: 45
score: 98.80278778076172
patch: break ; break ; ; * /
rank: 46
score: 99.29703776041667
patch: child CaMeL Type = child CaMeL Type . to CaMeL String ( ) ;
rank: 46
score: 99.28848161368535
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 46
score: 99.05977376302083
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) . ;
rank: 46
score: 98.96784210205078
patch: break ; } else if break ;
rank: 46
score: 98.95547824435764
patch: return || Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) ;
rank: 46
score: 98.85105985753677
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 46
score: 98.81312866210938
patch: break ; break ; break ; } break ;
rank: 46
score: 98.79631696428571
patch: } * * / break /
rank: 47
score: 99.31717936197917
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( ) ;
rank: 47
score: 99.29559326171875
patch: ensure CaMeL Typed ( left CaMeL Type , right CaMeL Type ) ;
rank: 47
score: 99.28797822840073
patch: validator . child CaMeL Type = t . get CaMeL JS CaMeL Type ( ) ;
rank: 47
score: 99.05879480698529
patch: this . ; this . ; ; this . ; this . ; this . ;
rank: 47
score: 98.96364920479911
patch: break ; } if break ;
rank: 47
score: 98.85
patch: break ; case ;
rank: 47
score: 98.8077880859375
patch: break ; break ; break ; break ; else
rank: 47
score: 98.78105926513672
patch: else break ;
rank: 48
score: 99.31701078869048
patch: right CaMeL Type = get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 48
score: 99.2951129415761
patch: typeable = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 48
score: 99.28527411099138
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 48
score: 99.0542724609375
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type ( ) ;
rank: 48
score: 98.96221051897321
patch: break ; } break ; }
rank: 48
score: 98.94929504394531
patch: return && Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 48
score: 98.84904210707721
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 48
score: 98.8018465909091
patch: break ; break ; break ; if ; break ;
rank: 48
score: 98.78096008300781
patch: break ; break ; for break ;
rank: 49
score: 99.2919677734375
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type ) ;
rank: 49
score: 99.28443060980902
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Name ( ) ) ;
rank: 49
score: 99.24110814144737
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 49
score: 99.05011307565789
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ;
rank: 49
score: 98.95375279017857
patch: return break ; } else {
rank: 49
score: 98.9436099403783
patch: old CaMeL Name = left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 49
score: 98.84504699707031
patch: break ; case Token . class :
rank: 49
score: 98.79833306206598
patch: break ; break ; / / / /
rank: 49
score: 98.78043365478516
patch: break ; break ; ; * *
rank: 50
score: 99.31575833834134
patch: left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 50
score: 99.29108276367188
patch: ensure CaMeL Typed ( t , n ) ;
rank: 50
score: 99.23854573567708
patch: typeable = false ;
rank: 50
score: 99.04231531479779
patch: this . ; ; this . ; this . ; this . ; this . ;
rank: 50
score: 98.95054626464844
patch: } else { return break ; }
rank: 50
score: 98.94217623197116
patch: item = n . get CaMeL First CaMeL Child ( ) ;
rank: 50
score: 98.84288940429687
patch: break ; case Token . TYPE : case ;
rank: 50
score: 98.77825055803571
patch: break ; ; ; * /
rank: 50
score: 98.77723999023438
patch: break ; break ; break ; } return ;
rank: 51
score: 99.2908935546875
patch: ensure CaMeL Typed ( t , n . get CaMeL Type ( ) ) ;
rank: 51
score: 99.2832421875
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ) ;
rank: 51
score: 99.23807198660714
patch: if ( ! child CaMeL Type . matches ( n . get CaMeL
rank: 51
score: 99.04090791590073
patch: this . ; this . ; this . ; this . ; ; this . ;
rank: 51
score: 98.94740513392857
patch: } else { } break ;
rank: 51
score: 98.94215223524306
patch: return ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) ;
rank: 51
score: 98.83884974888393
patch: switch ( n . get CaMeL Type ( ) ) { case ;
rank: 51
score: 98.77615356445312
patch: break ; ; * /
rank: 51
score: 98.76775444878473
patch: break ; break ; if ; * /
rank: 52
score: 99.31417846679688
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 52
score: 99.282666015625
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . add CaMeL
rank: 52
score: 99.23572591145833
patch: validator . right CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 52
score: 99.03818359375
patch: right CaMeL Type = right CaMeL Type . get CaMeL Id ( ) ;
rank: 52
score: 98.94086657072368
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 52
score: 98.83700741038604
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Value ( ) )
rank: 52
score: 98.76689995659723
patch: break ; break ; while ; break ;
rank: 53
score: 99.31103515625
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 53
score: 99.28544477982955
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 53
score: 99.2824198404948
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 53
score: 99.03673638237848
patch: break ; default : break ; } ;
rank: 53
score: 98.94309997558594
patch: return break ; } else break ;
rank: 53
score: 98.93817138671875
patch: state . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 53
score: 98.77542114257812
patch: break ; break ; * * /
rank: 53
score: 98.76455252511161
patch: if ; break ; break ;
rank: 54
score: 99.28494698660714
patch: typeable = get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 54
score: 99.23456774259868
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 54
score: 99.03669176603618
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Id ( ) ;
rank: 54
score: 98.94253540039062
patch: return break ; } else return ;
rank: 54
score: 98.93804253472223
patch: parent . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 54
score: 98.83336724175348
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ) . equals ( ;
rank: 54
score: 98.77492850167411
patch: break ; break ; * ;
rank: 54
score: 98.75578308105469
patch: break ; if ; = break ;
rank: 55
score: 99.28461248224431
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 55
score: 99.23408338758681
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 55
score: 99.03634643554688
patch: break ; ; case Token . ;
rank: 55
score: 98.93981255425348
patch: break ; break ; } catch break ;
rank: 55
score: 98.9369125366211
patch: n . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 55
score: 98.83326551649306
patch: break ; case Token . STRING : ;
rank: 55
score: 98.77057756696429
patch: } * * break break /
rank: 55
score: 98.75504302978516
patch: break ; break ; break ; /
rank: 56
score: 99.30720658735795
patch: right CaMeL Type = validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 56
score: 99.2338397686298
patch: child CaMeL Type = n . get CaMeL Name ( ) ;
rank: 56
score: 99.03518880208334
patch: right CaMeL Type = node . get CaMeL Parent CaMeL Node ( ) ;
rank: 56
score: 98.93743133544922
patch: } else { break ; ; }
rank: 56
score: 98.93684387207031
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 56
score: 98.83296966552734
patch: sb . append ( $STRING$ ) ;
rank: 56
score: 98.76908656529018
patch: } break ; break ; ;
rank: 56
score: 98.75282981178977
patch: break ; break ; if ; break ; break ;
rank: 57
score: 99.28268299932066
patch: typeable = child CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 57
score: 99.23344152113971
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 57
score: 98.93421173095703
patch: Node left CaMeL Type = t . get CaMeL First CaMeL Child ( ) ;
rank: 57
score: 98.93253326416016
patch: break ; } else ; break ;
rank: 57
score: 98.83073425292969
patch: break ; case Token . PREFIX :
rank: 57
score: 98.768798828125
patch: break ; * ; * /
rank: 57
score: 98.74945678710938
patch: break ; break ; } break ; break ;
rank: 58
score: 99.30466871995192
patch: child CaMeL Type = node . get CaMeL Type ( ) ;
rank: 58
score: 99.28252618963069
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 58
score: 98.93214818050987
patch: System . . . . ensure CaMeL Typed ( parent . get CaMeL Type ( ) ) ;
rank: 58
score: 98.9316635131836
patch: } break ; break ; break ;
rank: 58
score: 98.8299560546875
patch: break false ; case Token . ;
rank: 58
score: 98.76854112413194
patch: i . out . println break false ;
rank: 58
score: 98.74654134114583
patch: break ; break ; } / / /
rank: 59
score: 99.30465932992789
patch: child CaMeL Type = t . get CaMeL Type ( ) ;
rank: 59
score: 99.27882690429688
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 59
score: 99.27657948369566
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 59
score: 98.93045043945312
patch: } else { } catch break ;
rank: 59
score: 98.93028259277344
patch: break ; case Token . VOID :
rank: 59
score: 98.82744750976562
patch: break ; case Token . ATTRIBUTE _ FLAG :
rank: 59
score: 98.74586486816406
patch: break ; break ; -- break ;
rank: 60
score: 99.27860942639802
patch: typeable = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 60
score: 99.27573939732143
patch: validator . set CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 60
score: 99.2292236328125
patch: validator . right CaMeL Type = t . get CaMeL Type ( ) ;
rank: 60
score: 99.02940150669643
patch: break ; default ; break ;
rank: 60
score: 98.92795138888889
patch: return . to CaMeL String ( ) ;
rank: 60
score: 98.92562866210938
patch: return break ; break ; break ;
rank: 60
score: 98.8270263671875
patch: switch ( n . get CaMeL Type ( ; type )
rank: 60
score: 98.76741245814732
patch: break ; break ; ; /
rank: 60
score: 98.74242401123047
patch: break ; break ; return ; }
rank: 61
score: 99.30360764723558
patch: left CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 61
score: 99.27628267728366
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 61
score: 99.27485988451087
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 61
score: 99.22903645833334
patch: t . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 61
score: 98.92781066894531
patch: break ; case Token . NOT :
rank: 61
score: 98.92490059988839
patch: } if break ; break ;
rank: 61
score: 98.82390887920673
patch: break ; case Token . TYPE : right CaMeL Type = ;
rank: 61
score: 98.76731872558594
patch: else { break ; if break ;
rank: 62
score: 99.27616577148437
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 62
score: 99.27461460658482
patch: validator . set CaMeL JS CaMeL Type ( child CaMeL Type ) ;
rank: 62
score: 99.02605731670673
patch: this . ; this . ; this . ; this . ;
rank: 62
score: 98.92760213216145
patch: return t . get CaMeL First CaMeL Child ( ) ;
rank: 62
score: 98.92308807373047
patch: } else { } break ; }
rank: 62
score: 98.82246704101563
patch: break ; case Token . TYPE _ PROP :
rank: 62
score: 98.76717376708984
patch: break ; * * / break ;
rank: 62
score: 98.73677571614583
patch: break ; break ; else break ; }
rank: 63
score: 99.3028564453125
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 63
score: 99.27566046463816
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 63
score: 99.27414279513889
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ;
rank: 63
score: 99.2272720336914
patch: set CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 63
score: 99.0229736328125
patch: break ; default ;
rank: 63
score: 98.92729187011719
patch: table . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 63
score: 98.92301940917969
patch: return break ; } if break ;
rank: 63
score: 98.81833718039773
patch: right CaMeL Type = ; right CaMeL Type = ;
rank: 63
score: 98.76356811523438
patch: else break ; ;
rank: 63
score: 98.73400115966797
patch: break ; break ; } return ;
rank: 64
score: 99.27549235026042
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 64
score: 99.2730022927989
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 64
score: 99.2272720336914
patch: set CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 64
score: 99.0217349403783
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 64
score: 98.92699432373047
patch: break ; case Token . NUMBER :
rank: 64
score: 98.8158710186298
patch: break ; switch ( n . get CaMeL Type ( ) )
rank: 64
score: 98.75684271918402
patch: } break ; break ; if break ;
rank: 64
score: 98.73339165581598
patch: break ; break ; if break ; ;
rank: 65
score: 99.30000813802083
patch: left CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 65
score: 99.2748828125
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 65
score: 99.27233208550348
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 65
score: 99.22469075520833
patch: validator . set CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 65
score: 98.92380777994792
patch: get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 65
score: 98.81529889787946
patch: break ; case ; default :
rank: 65
score: 98.75335693359375
patch: } finally { break ;
rank: 65
score: 98.72655571831598
patch: return ; break ; break ; break ;
rank: 66
score: 99.29755045572917
patch: child CaMeL Type = t . get CaMeL First CaMeL Child ( ) ;
rank: 66
score: 99.27309163411458
patch: typeable = n . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 66
score: 99.27229578354779
patch: validator . child CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 66
score: 99.22464192708334
patch: validator . child CaMeL Type = n . get CaMeL Type ( ) ;
rank: 66
score: 99.02080743963069
patch: right = visit CaMeL Name ( t , n ;
rank: 66
score: 98.92376708984375
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) :
rank: 66
score: 98.92054094587054
patch: break break ; } catch ;
rank: 66
score: 98.8150634765625
patch: break ; case Token . TYPE : break ;
rank: 66
score: 98.75272042410714
patch: break ; next ; break ;
rank: 66
score: 98.724853515625
patch: break ; break ; else return ;
rank: 67
score: 99.27286430027173
patch: typeable = child CaMeL Type . to CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 67
score: 99.22151947021484
patch: set CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 67
score: 98.92365579044117
patch: return t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 67
score: 98.91879272460938
patch: break ; } catch ;
rank: 67
score: 98.8133544921875
patch: break ; case Token . ; case Token . TYPE :
rank: 67
score: 98.75046212332589
patch: break ; / else break ;
rank: 67
score: 98.7197265625
patch: break ; break ; if ; if break ;
rank: 68
score: 99.29452311197916
patch: right CaMeL Type = node . get CaMeL First CaMeL Child ( ) ;
rank: 68
score: 99.27225988051471
patch: typeable = child CaMeL Type . to CaMeL String ( left CaMeL Type ) ;
rank: 68
score: 99.22046712239583
patch: parent . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 68
score: 99.0203857421875
patch: right CaMeL Type = right CaMeL Type . get CaMeL Canonical CaMeL Name ( ) ;
rank: 68
score: 98.92337036132812
patch: continue ; case Token . FUNCTION :
rank: 68
score: 98.91483851841518
patch: } else { } else ;
rank: 68
score: 98.8132553100586
patch: break ; case Token . DEFAULT :
rank: 68
score: 98.74924142020089
patch: } else { if break ;
rank: 68
score: 98.71972045898437
patch: return ; break ;
rank: 69
score: 99.29441324869792
patch: validator . expect CaMeL Number ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 69
score: 99.27220323350694
patch: ensure CaMeL Typed ( t , n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 69
score: 99.26704237196181
patch: validator . set CaMeL JS CaMeL Type ( node . get CaMeL Type ( ) ) ;
rank: 69
score: 99.22001342773437
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 69
score: 99.01693564967105
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ;
rank: 69
score: 98.92247517903645
patch: switch ( t . get CaMeL Type ( ) ) {
rank: 69
score: 98.91459147135417
patch: break ; break ; } else return ;
rank: 69
score: 98.81160481770833
patch: break ; case Token . TRUE : ;
rank: 69
score: 98.7476806640625
patch: } * * / break {
rank: 69
score: 98.71650041852679
patch: break ; break ; else ;
rank: 70
score: 99.294052734375
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 70
score: 99.27074256310097
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 70
score: 99.01578776041667
patch: right CaMeL Type = visit CaMeL Name ( t , ;
rank: 70
score: 98.92227333470395
patch: { parent . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 70
score: 98.91307067871094
patch: } else { if ; break ;
rank: 70
score: 98.81094125600961
patch: break ; case Token . NAME : right CaMeL Type = ;
rank: 70
score: 98.7473856608073
patch: break ; else return ;
rank: 70
score: 98.71493530273438
patch: break ; break ; = break ;
rank: 71
score: 99.27046535326087
patch: typeable = right CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 71
score: 99.26421440972223
patch: validator . set CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 71
score: 99.01357550370066
patch: right CaMeL Type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 71
score: 98.92197672526042
patch: binding . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 71
score: 98.91094207763672
patch: return break ;
rank: 71
score: 98.81022644042969
patch: break ; case Token . FALSE :
rank: 71
score: 98.74617222377232
patch: else break ; break ; case
rank: 71
score: 98.71483154296875
patch: break ; break ; break ; / / /
rank: 72
score: 99.28819783528645
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 72
score: 99.27000732421875
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 72
score: 99.21831954152961
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 72
score: 99.01190544577206
patch: right CaMeL Type = right CaMeL Type . get CaMeL Simple CaMeL Name ( ) ;
rank: 72
score: 98.92102989783653
patch: index = n . get CaMeL First CaMeL Child ( ) ;
rank: 72
score: 98.90795026506696
patch: return break ; else return ;
rank: 72
score: 98.80886606069711
patch: switch ( n . get CaMeL Type ; case Token . ;
rank: 72
score: 98.74488067626953
patch: break ; / / / / /
rank: 72
score: 98.71414620535714
patch: break ; else if break ;
rank: 73
score: 99.269384765625
patch: typeable = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 73
score: 99.26095703125
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 73
score: 99.21642388237848
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n ) ;
rank: 73
score: 99.01188151041667
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent ( ) ;
rank: 73
score: 98.92055792557566
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 73
score: 98.90332903180804
patch: break ; * * break ;
rank: 73
score: 98.80755208333333
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . ;
rank: 73
score: 98.7443135579427
patch: } finally ; break ;
rank: 73
score: 98.71260579427083
patch: break ; break ; if break ; else
rank: 74
score: 99.28566331129808
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 74
score: 99.26704738451087
patch: typeable = right CaMeL Type . to CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 74
score: 99.26089590567129
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 74
score: 99.21468098958333
patch: validator . child CaMeL Type = t . get CaMeL Type ( ) ;
rank: 74
score: 99.00983344184027
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( break ) ;
rank: 74
score: 98.91830444335938
patch: case Token . LP :
rank: 74
score: 98.90309143066406
patch: break ; } else = break ;
rank: 74
score: 98.8068359375
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . ;
rank: 74
score: 98.71092393663194
patch: break ; break ; break ; } /
rank: 75
score: 99.285380859375
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 75
score: 99.26449584960938
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 75
score: 99.26024280894886
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL
rank: 75
score: 99.21466936383929
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 75
score: 99.0079345703125
patch: right CaMeL Type = right CaMeL Type . to CaMeL Lower CaMeL Case ( ;
rank: 75
score: 98.91761192908653
patch: item = t . get CaMeL First CaMeL Child ( ) ;
rank: 75
score: 98.90223524305556
patch: return break ; } else { return ;
rank: 75
score: 98.80562337239583
patch: break ; case Token . hash CaMeL Code ( ) :
rank: 75
score: 98.73978969029018
patch: break ; for break ; ;
rank: 75
score: 98.71065848214286
patch: break ; break ; } /
rank: 76
score: 99.28506469726562
patch: validator . expect CaMeL Number ( t . get CaMeL Type ( ) ) ;
rank: 76
score: 99.26389674136513
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 76
score: 99.25913783482143
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 76
score: 99.21290893554688
patch: right CaMeL Type = get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 76
score: 98.91441434972427
patch: old CaMeL Name = left CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 76
score: 98.89888509114583
patch: return break ; } else { break ;
rank: 76
score: 98.80515543619792
patch: if ( ; right CaMeL Type . get CaMeL Name ( ) . equals ( $STRING$ ;
rank: 76
score: 98.73944854736328
patch: break ; ; / * break ;
rank: 76
score: 98.70926513671876
patch: break ; break ; if break ; return ;
rank: 77
score: 99.26329210069444
patch: return n . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 77
score: 99.2585090188419
patch: validator . left CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 77
score: 99.21115112304688
patch: break ; case Token . DEC :
rank: 77
score: 99.00650024414062
patch: break ; default : throw ; }
rank: 77
score: 98.89382934570312
patch: } else = true ;
rank: 77
score: 98.80209585336539
patch: break . to CaMeL String ( ) ; case Token . ;
rank: 77
score: 98.73871612548828
patch: finally { break ; if break ;
rank: 77
score: 98.70787963867187
patch: break ; break ; if ; / / /
rank: 78
score: 99.284462890625
patch: child CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 78
score: 99.26321411132812
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) ;
rank: 78
score: 99.258271484375
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 78
score: 99.21109008789062
patch: right CaMeL Type = get CaMeL Symbol ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 78
score: 99.00611636513158
patch: right ; right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 78
score: 98.91361999511719
patch: continue ; case Token . COMMA :
rank: 78
score: 98.8937255859375
patch: } else { }
rank: 78
score: 98.80091349283855
patch: break ; case Token . TYPE : case Token . ;
rank: 78
score: 98.73819732666016
patch: break ; ; break ; break ;
rank: 78
score: 98.70770263671875
patch: break ; break ; break ; break ; ;
rank: 79
score: 99.28294020432692
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 79
score: 99.26289699388587
patch: typeable = child CaMeL Type . to CaMeL String ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 79
score: 99.25789741847827
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 79
score: 99.21070861816406
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 79
score: 99.00555826822917
patch: left CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 79
score: 98.91178813733552
patch: return t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 79
score: 98.89253452845982
patch: } else ; return false ;
rank: 79
score: 98.79942737926136
patch: switch ( n . get CaMeL Type ( ; ;
rank: 79
score: 98.7359619140625
patch: break ; break ; next ;
rank: 79
score: 98.70716094970703
patch: break ; break ; if ; else
rank: 80
score: 99.28258559283088
patch: right CaMeL Type = scope . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 80
score: 99.26201315487133
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) ;
rank: 80
score: 99.25719684103261
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 80
score: 99.20951334635417
patch: validator . right CaMeL Type = n . get CaMeL Type ( ) ;
rank: 80
score: 99.00457085503473
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 80
score: 98.91158718532986
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ) {
rank: 80
score: 98.89142717633929
patch: break ; } } else ;
rank: 80
score: 98.79922049386161
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type ;
rank: 80
score: 98.73389543805804
patch: * * * / break ;
rank: 80
score: 98.70418294270833
patch: break ; } break ; break ; }
rank: 81
score: 99.25632731119792
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 81
score: 99.208642578125
patch: right CaMeL Type = child CaMeL Type . get CaMeL Value ( ) ;
rank: 81
score: 98.91094970703125
patch: continue ; case Token . RETURN :
rank: 81
score: 98.88429768880208
patch: return ; } else ;
rank: 81
score: 98.79825168185764
patch: left = ; right = child CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 81
score: 98.70389133029514
patch: break ; break ; break ; } }
rank: 82
score: 99.28089971127717
patch: right CaMeL Type = validator . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 82
score: 99.25942160866477
patch: right CaMeL Type = get CaMeL Instance CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 82
score: 99.25508840460526
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n ) ) ;
rank: 82
score: 99.20834585336539
patch: right CaMeL Type = t . get CaMeL Name ( ) ;
rank: 82
score: 98.99761555989583
patch: right CaMeL Type = right CaMeL Type . type CaMeL Name ( ) ;
rank: 82
score: 98.9042904502467
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) :
rank: 82
score: 98.88412039620536
patch: return break ; } finally {
rank: 82
score: 98.796630859375
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ;
rank: 82
score: 98.73094940185547
patch: break ; break ; break ; *
rank: 82
score: 98.70303683810764
patch: break ; } break ; if break ;
rank: 83
score: 99.27920134171195
patch: right CaMeL Type = t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 83
score: 99.258056640625
patch: right CaMeL Type = JS CaMeL Type . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 83
score: 99.25356820913461
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . to CaMeL String ( ) ;
rank: 83
score: 98.90324964021382
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) ) {
rank: 83
score: 98.88328247070312
patch: } if break ;
rank: 83
score: 98.79570007324219
patch: break ; case Token . YES :
rank: 83
score: 98.72897677951389
patch: } else { break ; if break ;
rank: 83
score: 98.701416015625
patch: break ; break ; } / /
rank: 84
score: 99.25620814732143
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 84
score: 99.25241921164773
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 84
score: 99.20722791883681
patch: right CaMeL Type = t . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 84
score: 98.9949462890625
patch: right CaMeL Type = visit CaMeL Name ( t , n , parent ;
rank: 84
score: 98.90169484991776
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ,
rank: 84
score: 98.88253784179688
patch: } break ; }
rank: 84
score: 98.79567173549107
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type ;
rank: 84
score: 98.72586059570312
patch: break ; break ; * / /
rank: 84
score: 98.7003173828125
patch: break ; break ; break ; return ; }
rank: 85
score: 99.27842712402344
patch: set CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 85
score: 99.20604112413194
patch: right CaMeL Type = parent . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 85
score: 98.99473987926136
patch: right CaMeL Type = right CaMeL Type ; break ;
rank: 85
score: 98.90040418836806
patch: get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 85
score: 98.88113403320312
patch: } break ; this . break ;
rank: 85
score: 98.7941650390625
patch: break ; case Token . NAME : ; ;
rank: 85
score: 98.7234130859375
patch: break ; ; ?
rank: 86
score: 99.25552368164062
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 86
score: 99.20602416992188
patch: if ( ! child CaMeL Type . matches ( Node CaMeL Util . op CaMeL
rank: 86
score: 98.90010070800781
patch: break ; case Token . VAR :
rank: 86
score: 98.87998744419643
patch: break ; } else if ;
rank: 86
score: 98.79309760199652
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . get CaMeL Name ;
rank: 86
score: 98.72262234157986
patch: i . next ( ; break ; ;
rank: 87
score: 99.27643500434027
patch: right CaMeL Type = left CaMeL Type ;
rank: 87
score: 99.2553202311198
patch: right = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 87
score: 99.251015625
patch: validator . set CaMeL Name ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 87
score: 98.99159458705357
patch: this . ; this . ; this . ; this . ; ;
rank: 87
score: 98.89875623914931
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 87
score: 98.87869262695312
patch: } else ; break ; break ;
rank: 87
score: 98.79290771484375
patch: break ; default : break false ;
rank: 87
score: 98.72247314453125
patch: } * ; break ;
rank: 87
score: 98.693212890625
patch: if break ; break ; break ; break ;
rank: 88
score: 99.27482096354167
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 88
score: 99.25327845982143
patch: typeable = get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 88
score: 99.25018310546875
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ;
rank: 88
score: 99.20540364583333
patch: this . right CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 88
score: 98.99119059244792
patch: right CaMeL Type = parent . get CaMeL Type ( ;
rank: 88
score: 98.89869689941406
patch: this . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 88
score: 98.87567138671875
patch: return break ; } }
rank: 88
score: 98.79189627511161
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 88
score: 98.72147623697917
patch: break ; out . println break false ;
rank: 89
score: 99.2500751201923
patch: validator . left CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 89
score: 99.20407284007354
patch: set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 89
score: 98.98324924045139
patch: right CaMeL Type = child CaMeL Type . get CaMeL Parent CaMeL Node ( ) . ;
rank: 89
score: 98.89857241981908
patch: t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 89
score: 98.87461853027344
patch: return break ; } } break ;
rank: 89
score: 98.79179551866319
patch: break ; default : throw break ; }
rank: 89
score: 98.69097222222223
patch: break ; break ; * / break ;
rank: 90
score: 99.27056477864583
patch: child CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 90
score: 99.24906652113971
patch: validator . right CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 90
score: 99.20365397135417
patch: if ( ! child CaMeL Type . matches ( Node CaMeL Util . op CaMeL To CaMeL
rank: 90
score: 98.98025716145834
patch: child CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 90
score: 98.89789177389706
patch: return . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 90
score: 98.87435913085938
patch: } else { = break ; }
rank: 90
score: 98.79103440504808
patch: break ; case Token . STRING : right CaMeL Type = ;
rank: 90
score: 98.72017124720982
patch: break ; break ; / ;
rank: 90
score: 98.68915349786931
patch: break ; break ; break ; break ; return ;
rank: 91
score: 99.26845139723558
patch: right CaMeL Type = validator . get CaMeL Type ( ) ;
rank: 91
score: 99.2489346590909
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 91
score: 99.20303344726562
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 91
score: 98.97724465762867
patch: right CaMeL Type = right CaMeL Type . get CaMeL Declaring CaMeL Class ( ) ;
rank: 91
score: 98.89590614720395
patch: break . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 91
score: 98.87078857421875
patch: return break ; } finally ;
rank: 91
score: 98.78917100694444
patch: break ; case Token . ; default :
rank: 91
score: 98.71734064275569
patch: } else { break ; System . out . println
rank: 91
score: 98.68785400390625
patch: break ; if break ; break ; break ;
rank: 92
score: 99.24940557065217
patch: typeable = right CaMeL Type . to CaMeL String ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 92
score: 99.24736938476562
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . report CaMeL
rank: 92
score: 99.20265299479166
patch: validator . right CaMeL Type = n . get CaMeL Name ( ) ;
rank: 92
score: 98.97580973307292
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Name ( ;
rank: 92
score: 98.89501235064338
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 92
score: 98.8692398071289
patch: break ; } finally { break ;
rank: 92
score: 98.78879018930289
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 92
score: 98.71636090959821
patch: break ; ; - * /
rank: 92
score: 98.68671875
patch: break ; break ; if break ; / /
rank: 93
score: 99.26793619791667
patch: right CaMeL Type = n . get CaMeL Last CaMeL Child ( ) ;
rank: 93
score: 99.2491963704427
patch: typeable = n . get CaMeL Type ( ) ;
rank: 93
score: 99.2024169921875
patch: right CaMeL Type = get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 93
score: 98.975341796875
patch: this . ; this . ; this . ; this . ; this . ; return ;
rank: 93
score: 98.88969421386719
patch: return t . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 93
score: 98.86187744140625
patch: } else { return ; } }
rank: 93
score: 98.78774007161458
patch: break ; ; case Token . TYPE :
rank: 93
score: 98.68522338867187
patch: break ; break ; break ; else return ;
rank: 94
score: 99.2672607421875
patch: left CaMeL Type = t . get CaMeL First CaMeL Child ( ) ;
rank: 94
score: 99.24867314877717
patch: typeable = left CaMeL Type . to CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 94
score: 99.24674479166667
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( left CaMeL Type ) ) ;
rank: 94
score: 99.20166829427083
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 94
score: 98.97316080729166
patch: right CaMeL Type = left CaMeL Type . get CaMeL Name ( ) ;
rank: 94
score: 98.8895263671875
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( parent ) ;
rank: 94
score: 98.78689914279514
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ;
rank: 94
score: 98.71276092529297
patch: break ; case 1 : break ;
rank: 94
score: 98.6846415201823
patch: break ; break ; try
rank: 95
score: 99.26498811141305
patch: right CaMeL Type = node . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 95
score: 99.24613229851974
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 95
score: 99.2004627046131
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 95
score: 98.97259051983173
patch: right CaMeL Type = right CaMeL Type = right CaMeL Type ;
rank: 95
score: 98.88849555121527
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 95
score: 98.85931396484375
patch: } else { } catch ;
rank: 95
score: 98.78522406684027
patch: switch ( n . get CaMeL Type ( ; node . get CaMeL Type ( ) ;
rank: 95
score: 98.71192423502605
patch: break ; * ; /
rank: 95
score: 98.68455287388393
patch: break ; return ; break ;
rank: 96
score: 99.26303932883523
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . validator . expect CaMeL
rank: 96
score: 99.245615234375
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) )
rank: 96
score: 99.24428923233695
patch: typeable = left CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 96
score: 99.20017496744792
patch: right CaMeL Type = get CaMeL Type ( n ) ;
rank: 96
score: 98.97206333705357
patch: right CaMeL Type = ; right CaMeL Type = right CaMeL Type ;
rank: 96
score: 98.88749864366319
patch: return t . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 96
score: 98.85423448350694
patch: break ; this . break ; break ;
rank: 96
score: 98.78387451171875
patch: break ; case Token . ; case Token . NAME :
rank: 96
score: 98.71099090576172
patch: } * /
rank: 96
score: 98.68122863769531
patch: break ; break ; ++ break ;
rank: 97
score: 99.2614237467448
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 97
score: 99.2448371438419
patch: validator . left CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 97
score: 99.24281141493056
patch: ensure CaMeL Typed ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 97
score: 99.19975353422619
patch: parent . get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 97
score: 98.88703155517578
patch: parent . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 97
score: 98.783447265625
patch: break ; case Token . compare CaMeL To ( ;
rank: 97
score: 98.71075439453125
patch: break ; ; ; if break ;
rank: 97
score: 98.67941284179688
patch: break ; break ; break ; else break ;
rank: 98
score: 99.25785688920455
patch: right CaMeL Type = validator . get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 98
score: 99.24142323369566
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 98
score: 99.19863746279762
patch: this . get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 98
score: 98.96873121995192
patch: right CaMeL Type ; right CaMeL Type = right CaMeL Type ;
rank: 98
score: 98.88503546463816
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL Name ( ) ) ;
rank: 98
score: 98.84918975830078
patch: break ; * * * break ;
rank: 98
score: 98.78215196397569
patch: break ; case Token . DEFAULT : ;
rank: 98
score: 98.7091064453125
patch: break ; ; / while break ;
rank: 99
score: 99.257080078125
patch: left CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 99
score: 99.24046223958334
patch: child CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 99
score: 99.19637625558036
patch: set CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 99
score: 98.9674072265625
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type ( ;
rank: 99
score: 98.88487333409927
patch: return ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 99
score: 98.84901733398438
patch: } else break ;
rank: 99
score: 98.78199055989583
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type ) ;
rank: 99
score: 98.70863560267857
patch: finally { break ; ; ;
rank: 99
score: 98.67852020263672
patch: break ; else break ; break ;
rank: 100
score: 99.256572265625
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 100
score: 99.24269014246323
patch: child CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 100
score: 99.19557189941406
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 100
score: 98.96722412109375
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ;
rank: 100
score: 98.88388241038604
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) )
rank: 100
score: 98.84809221540179
patch: else = break ; break ;
rank: 100
score: 98.78105163574219
patch: break ; case Token . UNKNOWN :
rank: 100
score: 98.70836639404297
patch: break ; case 1 { break ;
rank: 100
score: 98.67805311414931
patch: break ; break ; ; if break ;
rank: 101
score: 99.2550760904948
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 101
score: 99.24268517127403
patch: validator . child CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 101
score: 99.23942057291667
patch: typeable = get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 101
score: 99.19495239257813
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 101
score: 98.96717593544408
patch: right CaMeL Type ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 101
score: 98.88359832763672
patch: break ; case Token . GETELEM :
rank: 101
score: 98.78024471507354
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Style ( ) )
rank: 101
score: 98.7079366048177
patch: return ; break ; ;
rank: 101
score: 98.6779556274414
patch: break ; break ; / / }
rank: 102
score: 99.25464680989583
patch: right CaMeL Type = this . parent . get CaMeL Type ( ) ;
rank: 102
score: 99.242041015625
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 102
score: 99.23923561789773
patch: right CaMeL Type = get CaMeL Constructor CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 102
score: 98.96687147352431
patch: right CaMeL Type = right CaMeL Type . to CaMeL Lower CaMeL Case ( ) ; ;
rank: 102
score: 98.88184271918402
patch: return t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 102
score: 98.84332275390625
patch: break ; } else { }
rank: 102
score: 98.77940266927084
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type . ;
rank: 102
score: 98.706298828125
patch: i . next ( ; break ;
rank: 102
score: 98.67721896701389
patch: break ; } if break ; break ;
rank: 103
score: 99.25452599158653
patch: validator . expect CaMeL Number ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 103
score: 99.24138047960069
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n ) ;
rank: 103
score: 99.23822985197368
patch: break get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 103
score: 98.96600811298077
patch: parent = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 103
score: 98.88020833333333
patch: return . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 103
score: 98.84318324497768
patch: } break ; } break ;
rank: 103
score: 98.77857163373162
patch: switch ( node . get CaMeL Type ( ) . get CaMeL Type ( ) )
rank: 103
score: 98.70593939887152
patch: logger . append ( $STRING$ ; break ;
rank: 103
score: 98.67410617404514
patch: break ; break ; if ; / /
rank: 104
score: 99.25423490084134
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 104
score: 99.19307668585526
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL
rank: 104
score: 98.96389770507812
patch: left CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . ;
rank: 104
score: 98.87932880108173
patch: expression = n . get CaMeL First CaMeL Child ( ) ;
rank: 104
score: 98.84130096435547
patch: break ; } } catch break ;
rank: 104
score: 98.77809495192308
patch: if ; switch ( n . get CaMeL Type ( ) )
rank: 104
score: 98.70484924316406
patch: break ; break ; case $STRING$ ;
rank: 104
score: 98.673095703125
patch: return ; break ; if break ;
rank: 105
score: 99.25284016927084
patch: left CaMeL Type = validator . get CaMeL First CaMeL Child ( ) ;
rank: 105
score: 99.23993389423077
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 105
score: 99.23788248697916
patch: right CaMeL Type = left CaMeL Type . to CaMeL String ( ) ;
rank: 105
score: 98.96321323939732
patch: right CaMeL Type ; right CaMeL Type = visit CaMeL Name ( ;
rank: 105
score: 98.87767791748047
patch: t . set CaMeL Name ( t . get CaMeL Name ( ) ) ;
rank: 105
score: 98.83993530273438
patch: } break ; null ; break ;
rank: 105
score: 98.77781846788194
patch: break ; case Token . LABEL : ;
rank: 105
score: 98.66950141059027
patch: break ; break ; break ; } else
rank: 106
score: 99.25140021829044
patch: right CaMeL Type = validator . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 106
score: 99.23694719587054
patch: typeable = right CaMeL Type . to CaMeL String ( ) ;
rank: 106
score: 99.19277954101562
patch: validator . add CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 106
score: 98.96251156455592
patch: right CaMeL Type = right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 106
score: 98.87680392795139
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 106
score: 98.839599609375
patch: } else { } finally ;
rank: 106
score: 98.77778455946181
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . get CaMeL Name ;
rank: 106
score: 98.70051792689732
patch: break ; ; ? break ;
rank: 107
score: 99.249736328125
patch: typeable = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 107
score: 99.23836669921874
patch: validator . set CaMeL JS CaMeL Type ( child CaMeL Type . get CaMeL Type ( ) ) ;
rank: 107
score: 99.23690795898438
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 107
score: 99.19264221191406
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 107
score: 98.962060546875
patch: this . ; this . ; this . ; this . ; return ;
rank: 107
score: 98.8760922080592
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ||
rank: 107
score: 98.83790588378906
patch: break ; } else { return ;
rank: 107
score: 98.77755916819854
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) )
rank: 107
score: 98.69878278459821
patch: break ; ; if break ;
rank: 107
score: 98.66370307074652
patch: break ; break ; else ; break ;
rank: 108
score: 99.24960725203805
patch: left CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 108
score: 99.23822265625
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) )
rank: 108
score: 99.19179280598958
patch: validator . add CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 108
score: 98.95906829833984
patch: right CaMeL Type = right CaMeL Type . get CaMeL Base CaMeL Type ( ;
rank: 108
score: 98.8732440655048
patch: field = n . get CaMeL First CaMeL Child ( ) ;
rank: 108
score: 98.83779907226562
patch: } else = false ; break ;
rank: 108
score: 98.77725830078126
patch: break ; case ; case Token . NAME :
rank: 108
score: 98.69853864397321
patch: break ; / catch break ;
rank: 108
score: 98.6634292602539
patch: if break ;
rank: 109
score: 99.24894913383152
patch: child CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 109
score: 99.23772321428571
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL
rank: 109
score: 99.18989562988281
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 109
score: 98.95501708984375
patch: right CaMeL Type = right CaMeL Type . to CaMeL Lower CaMeL Case ( break ) ;
rank: 109
score: 98.87271278782895
patch: System . : ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 109
score: 98.83512878417969
patch: if break ; } catch break ;
rank: 109
score: 98.69634246826172
patch: break ; ; else { break ;
rank: 109
score: 98.66291809082031
patch: break ; break ; throw break ;
rank: 110
score: 99.24863503196023
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . expect CaMeL
rank: 110
score: 99.23764272836539
patch: validator . child CaMeL Type = t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 110
score: 99.2344970703125
patch: validator . typeable = child CaMeL Type . to CaMeL String ( ) ;
rank: 110
score: 99.189697265625
patch: left CaMeL Type = parent . get CaMeL JS CaMeL Type ( ) ;
rank: 110
score: 98.95426722935268
patch: right CaMeL Type = right CaMeL Type . to CaMeL String ( ;
rank: 110
score: 98.87198215060764
patch: t . ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 110
score: 98.83285522460938
patch: return break ; else = break ;
rank: 110
score: 98.77596706814236
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ;
rank: 110
score: 98.69356536865234
patch: break ; break ; case String ;
rank: 110
score: 98.66105433872768
patch: break ; else ; break ;
rank: 111
score: 99.24809126420455
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 111
score: 99.232392578125
patch: typeable = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 111
score: 99.189501953125
patch: validator . right CaMeL Type = t . get CaMeL Name ( ) ;
rank: 111
score: 98.95302447150735
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Name ( ) ;
rank: 111
score: 98.8703254250919
patch: { ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 111
score: 98.83198547363281
patch: break ; } catch ; break ;
rank: 111
score: 98.7744140625
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Code ( ) )
rank: 111
score: 98.69227818080357
patch: else break ; ; * /
rank: 112
score: 99.24757893880208
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 112
score: 99.23624674479167
patch: validator . set CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) ) ;
rank: 112
score: 99.18948800223214
patch: t . get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 112
score: 98.9528579711914
patch: right CaMeL Type = visit CaMeL Name ( t , n , parent ) ;
rank: 112
score: 98.86884014423077
patch: ns = n . get CaMeL First CaMeL Child ( ) ;
rank: 112
score: 98.8289306640625
patch: } else return ;
rank: 112
score: 98.7743807705966
patch: break ; case Token . hash CaMeL Code ( ;
rank: 112
score: 98.69211251395089
patch: } else ; break ; ;
rank: 112
score: 98.65597873263889
patch: break ; else if break ; break ;
rank: 113
score: 99.23615373883929
patch: right CaMeL Type = child CaMeL Type . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 113
score: 99.18874640213816
patch: right CaMeL Type = parent . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 113
score: 98.86773212139423
patch: expr = n . get CaMeL First CaMeL Child ( ) ;
rank: 113
score: 98.82697405133929
patch: } else ; break ; }
rank: 113
score: 98.77341595818015
patch: left CaMeL Type = ; right CaMeL Type = t . get CaMeL Type ( ;
rank: 113
score: 98.65509711371527
patch: break ; if break ; if break ;
rank: 114
score: 99.24624235733695
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 114
score: 99.23606872558594
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 114
score: 99.23133433948864
patch: right CaMeL Type = get CaMeL Return CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 114
score: 99.18811616443452
patch: n . get CaMeL Type ( ) . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 114
score: 98.95208129882812
patch: left CaMeL Type = visit CaMeL Name ( ;
rank: 114
score: 98.86751615084134
patch: pos = n . get CaMeL First CaMeL Child ( ) ;
rank: 114
score: 98.773291015625
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type . ;
rank: 114
score: 98.68734305245536
patch: } * / break ; /
rank: 114
score: 98.65447998046875
patch: break ; break ; if ; = break ;
rank: 115
score: 99.24606323242188
patch: right CaMeL Type = validator . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 115
score: 99.2344970703125
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 115
score: 99.23106166294643
patch: typeable = child CaMeL Type . to CaMeL String ( t . get CaMeL Type ( ) ) ;
rank: 115
score: 99.18790283203126
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 115
score: 98.95193301930146
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Scope ( ) ;
rank: 115
score: 98.86674499511719
patch: return ; case Token . FUNCTION :
rank: 115
score: 98.82147216796875
patch: return ; } else { break ;
rank: 115
score: 98.77255684988839
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type ;
rank: 115
score: 98.68583679199219
patch: break ; break ; case 0 ;
rank: 115
score: 98.65394897460938
patch: break ; break ; if ; break ; }
rank: 116
score: 99.24585723876953
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 116
score: 99.23444475446429
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ; }
rank: 116
score: 99.23087211277173
patch: typeable = t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 116
score: 99.18685208834134
patch: right CaMeL Type = parent . get CaMeL Value ( ) ;
rank: 116
score: 98.86558532714844
patch: return ; case Token . RETURN :
rank: 116
score: 98.82088797433036
patch: return break ; if break ;
rank: 116
score: 98.77234996448864
patch: buffer . append ( $STRING$ ) . append ( ;
rank: 116
score: 98.68548583984375
patch: else = false ; break ;
rank: 116
score: 98.65191650390625
patch: break ; break ; /
rank: 117
score: 99.23377075195313
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) ) ; break ;
rank: 117
score: 99.23057972301136
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 117
score: 98.95135176809211
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 117
score: 98.86518690321181
patch: break ; case Token . BITNOT :
rank: 117
score: 98.8203125
patch: break ; * break ; }
rank: 117
score: 98.77215576171875
patch: break ; case Token . ; if ( ;
rank: 117
score: 98.6852035522461
patch: else break ; ; if break ;
rank: 117
score: 98.65135192871094
patch: break ; break ; if ; {
rank: 118
score: 99.24439086914063
patch: right CaMeL Type = validator . get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 118
score: 99.23365420386905
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ; }
rank: 118
score: 99.22968084161931
patch: right CaMeL Type = get CaMeL This CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 118
score: 99.18440515854779
patch: right CaMeL Type = parent . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 118
score: 98.9504458778783
patch: child CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 118
score: 98.81787981305804
patch: } else { } return ;
rank: 118
score: 98.771533203125
patch: switch ( n . get CaMeL Type ( ) ) { case break :
rank: 118
score: 98.68470764160156
patch: break ; break ; case Integer ;
rank: 118
score: 98.64862060546875
patch: break ; break ; break ; if break ; break ;
rank: 119
score: 99.22925866168478
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL
rank: 119
score: 99.18306477864583
patch: JS CaMeL Type left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 119
score: 98.95005580357143
patch: right CaMeL Type = visit CaMeL Name ( t , n , ;
rank: 119
score: 98.86324637276786
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL
rank: 119
score: 98.81786092122395
patch: return break ; break ;
rank: 119
score: 98.77141864483173
patch: switch ( n . get CaMeL Type ( ) ; default :
rank: 119
score: 98.6839599609375
patch: while break ; break ; ;
rank: 119
score: 98.64854736328125
patch: break ; break ; if ; break ; else
rank: 120
score: 99.2423983487216
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . ensure CaMeL Typed ( ) ;
rank: 120
score: 99.23277452256944
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ) ;
rank: 120
score: 99.18151274181548
patch: validator . get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 120
score: 98.94927014802632
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) . name ;
rank: 120
score: 98.86234283447266
patch: n . set CaMeL Name ( t . get CaMeL Name ( ) ) ;
rank: 120
score: 98.81749616350446
patch: break ; null ; break ;
rank: 120
score: 98.77088080512152
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Declaring CaMeL Class ( ;
rank: 120
score: 98.68366156684027
patch: break ; / / / / / /
rank: 120
score: 98.64808654785156
patch: break ; }
rank: 121
score: 99.24155836838942
patch: left CaMeL Type = t . get CaMeL Type ( ) ;
rank: 121
score: 99.23247736150569
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL
rank: 121
score: 99.22786088423295
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL
rank: 121
score: 99.18136393229166
patch: this . child CaMeL Type = n . get CaMeL Type ( ) ;
rank: 121
score: 98.94869290865384
patch: right = visit CaMeL Name ( t , n , parent ;
rank: 121
score: 98.8605487530048
patch: position = n . get CaMeL First CaMeL Child ( ) ;
rank: 121
score: 98.81439208984375
patch: return break ; } else = break ;
rank: 121
score: 98.77086046006944
patch: break ; case Token . UNKNOWN : ;
rank: 121
score: 98.64774576822917
patch: break ; break ; break ; break ; break ; }
rank: 122
score: 99.24141068892045
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 122
score: 99.2266357421875
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 122
score: 99.18126627604167
patch: right CaMeL Type = child CaMeL Type . get CaMeL Length ( ) ;
rank: 122
score: 98.94795735677083
patch: right CaMeL Type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ;
rank: 122
score: 98.81353759765625
patch: return break ; } else { }
rank: 122
score: 98.77018229166667
patch: break ; case Token . ; break ;
rank: 122
score: 98.68239920479911
patch: break ; ; ; break ;
rank: 122
score: 98.64656829833984
patch: break ; break ; break ; break
rank: 123
score: 99.24014621310764
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . expect CaMeL
rank: 123
score: 99.23114013671875
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 ( ) ) {
rank: 123
score: 99.22637580422794
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) ;
rank: 123
score: 99.18037494860198
patch: = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 123
score: 98.94743041992187
patch: right = visit CaMeL Name ( t , ;
rank: 123
score: 98.85927862870066
patch: continue . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 123
score: 98.81324768066406
patch: return break ; } break ; }
rank: 123
score: 98.76827663845486
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Component CaMeL Type ( ;
rank: 123
score: 98.68150111607143
patch: break ; / ] break ;
rank: 123
score: 98.64288884943181
patch: break ; break ; break ; if ; return ;
rank: 124
score: 99.23753004807692
patch: child CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 124
score: 99.23057047526042
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 124
score: 99.22625122070312
patch: typeable = child CaMeL Type . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 124
score: 99.1799675436581
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 124
score: 98.9471664428711
patch: right CaMeL Type = child CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 124
score: 98.85927327473958
patch: t . ensure CaMeL Typed ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 124
score: 98.81104387555804
patch: } else { break ; else
rank: 124
score: 98.76806640625
patch: break ; case Token . NULL : ; ;
rank: 124
score: 98.68115234375
patch: break ; break ; * ; /
rank: 124
score: 98.64263916015625
patch: break ; break ; / / *
rank: 125
score: 99.2371826171875
patch: right CaMeL Type = validator . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 125
score: 99.23037923177084
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( ) ) {
rank: 125
score: 99.22539672851562
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 125
score: 99.1797119140625
patch: typeable = ! child CaMeL Type . matches ( t . get CaMeL
rank: 125
score: 98.94646895559211
patch: child CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ;
rank: 125
score: 98.8581073467548
patch: key = n . get CaMeL First CaMeL Child ( ) ;
rank: 125
score: 98.80788845486111
patch: return break ; } break ; break ;
rank: 125
score: 98.76799774169922
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type . type ;
rank: 125
score: 98.64140181107955
patch: break ; break ; break ; return ; break ;
rank: 126
score: 99.23604642427884
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 126
score: 99.22979125976562
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 126
score: 99.22416178385417
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . to CaMeL String ( ) ;
rank: 126
score: 99.17910766601562
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL
rank: 126
score: 98.94492885044643
patch: this . ; this . ; ; this . ; this . ;
rank: 126
score: 98.85772150213069
patch: switch ( parent . get CaMeL Type ( ) )
rank: 126
score: 98.80673653738839
patch: return break ; } else }
rank: 126
score: 98.76666937934027
patch: left = ; right = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 126
score: 98.6807861328125
patch: break ; break ; * break ;
rank: 126
score: 98.64059448242188
patch: break ; break ; ; return ;
rank: 127
score: 99.23526204427084
patch: child CaMeL Type = this . parent . get CaMeL Type ( ) ;
rank: 127
score: 99.22885529891305
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 127
score: 99.2238300030048
patch: right = child CaMeL Type . to CaMeL String ( ) ;
rank: 127
score: 99.17883911132813
patch: set CaMeL Type ( n . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 127
score: 98.94240208675987
patch: left ; right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ;
rank: 127
score: 98.85711200420673
patch: arg = n . get CaMeL First CaMeL Child ( ) ;
rank: 127
score: 98.80663452148437
patch: } else if ;
rank: 127
score: 98.76644134521484
patch: left = ; right = right CaMeL Type . to CaMeL String ( ) ;
rank: 127
score: 98.6807528409091
patch: } else { break ; System . out . print
rank: 127
score: 98.64039611816406
patch: break ; break ; } if ;
rank: 128
score: 99.2347079190341
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 128
score: 99.22817813648896
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type ) )
rank: 128
score: 99.22320001775569
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 128
score: 99.17820739746094
patch: validator . set CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 128
score: 98.94234466552734
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ; ;
rank: 128
score: 98.85699462890625
patch: continue ; case Token . STRING :
rank: 128
score: 98.80473327636719
patch: } else = this . break ;
rank: 128
score: 98.76528930664062
patch: break ; case Token . NAME : break ;
rank: 128
score: 98.68055071149554
patch: } * / break ; ;
rank: 128
score: 98.64021131727431
patch: break ; break ; if break ; /
rank: 129
score: 99.23453463040866
patch: right CaMeL Type = Node CaMeL Util . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 129
score: 99.22779337565105
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 129
score: 99.22306315104167
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL Type ( ) ) ;
rank: 129
score: 99.1764667217548
patch: left CaMeL Type = n . get CaMeL Name ( ) ;
rank: 129
score: 98.9415347450658
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ;
rank: 129
score: 98.85639504825367
patch: return ensure CaMeL Typed ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 129
score: 98.80153982979911
patch: break ; for break ; }
rank: 129
score: 98.68028767903645
patch: break ; break ; case
rank: 129
score: 98.63992309570312
patch: break ; break ; if ; ;
rank: 130
score: 99.23422639266305
patch: left CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 130
score: 99.22776884191177
patch: validator . right CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 130
score: 99.22288208007812
patch: typeable = t . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 130
score: 99.17627631293402
patch: get CaMeL Type CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 130
score: 98.94041683799342
patch: right CaMeL Type = node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ;
rank: 130
score: 98.85633850097656
patch: return t . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 130
score: 98.80075073242188
patch: } else { break ; } else
rank: 130
score: 98.76343645368304
patch: break ; case break : ;
rank: 130
score: 98.67991943359375
patch: break ; break ; case Boolean . next ;
rank: 130
score: 98.63913981119792
patch: break ; break ; return ; return ;
rank: 131
score: 99.23369004991319
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 131
score: 99.22752888997395
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . to CaMeL String ( ) ;
rank: 131
score: 99.17608351934524
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( left CaMeL Type ) ) ;
rank: 131
score: 98.94012044270833
patch: this . ; this . ; this . ; ; this . ; ;
rank: 131
score: 98.85437950721153
patch: prefix = n . get CaMeL First CaMeL Child ( ) ;
rank: 131
score: 98.79888916015625
patch: break break ; break ; }
rank: 131
score: 98.76226128472223
patch: if ( right CaMeL Type != null )
rank: 131
score: 98.67984771728516
patch: break ; / ] { break ;
rank: 131
score: 98.63856724330357
patch: break ; break ; else /
rank: 132
score: 99.2312899502841
patch: right CaMeL Type = get CaMeL First CaMeL Child ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 132
score: 99.22622341579861
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 132
score: 99.2219482421875
patch: right = get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 132
score: 98.93842424665179
patch: this . ; ; this . ; this . ; this . ;
rank: 132
score: 98.85378196022727
patch: n . get CaMeL First CaMeL Child ( ) ;
rank: 132
score: 98.76144409179688
patch: left CaMeL Type = ; ; right CaMeL Type = ;
rank: 132
score: 98.67871704101563
patch: i . out . println break false ; ;
rank: 132
score: 98.63717312282986
patch: break ; break ; ; / / /
rank: 133
score: 99.22585042317708
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 133
score: 99.22112165178571
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 133
score: 99.17436872209821
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 133
score: 98.93837668678977
patch: right CaMeL Type = visit CaMeL Name ( t ;
rank: 133
score: 98.85146755642361
patch: if ( ! validator . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) ) {
rank: 133
score: 98.79753112792969
patch: break ; break ; } else ;
rank: 133
score: 98.76064453125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ;
rank: 133
score: 98.67798461914063
patch: break ; case Boolean . value CaMeL Node ;
rank: 133
score: 98.6365478515625
patch: break ; break ; return ; if break ;
rank: 134
score: 99.22938603940217
patch: child CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 134
score: 99.17410098805146
patch: right CaMeL Type = t . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 134
score: 98.85077263327206
patch: if ( Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ) {
rank: 134
score: 98.79630824497768
patch: break ; true ; break ;
rank: 134
score: 98.760498046875
patch: if ( ; right CaMeL Type . get CaMeL Type CaMeL Name ( ;
rank: 134
score: 98.67631530761719
patch: break ; break ; ; ; ;
rank: 134
score: 98.63636997767857
patch: break ; break ; while ;
rank: 135
score: 99.22853440504808
patch: right CaMeL Type = validator . get CaMeL Type CaMeL Of CaMeL This ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 135
score: 99.22426350911458
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 135
score: 99.17391807154605
patch: set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 135
score: 98.93698299632354
patch: this . ; this . ; this . ; this . visit CaMeL Name ( ;
rank: 135
score: 98.85055541992188
patch: continue ; case Token . CALL :
rank: 135
score: 98.79625786675348
patch: else = break ; } catch break ;
rank: 135
score: 98.75919886997768
patch: break ; default : t . set CaMeL Name ( name ) ;
rank: 135
score: 98.67568533761161
patch: break ; ; * * /
rank: 135
score: 98.63562883649554
patch: break ; break ; this ;
rank: 136
score: 99.22424847146739
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 136
score: 99.21989889705883
patch: typeable = right CaMeL Type . to CaMeL String ( left CaMeL Type ) ;
rank: 136
score: 99.17345252403847
patch: switch ( n . get CaMeL First CaMeL Child ( ) )
rank: 136
score: 98.93621826171875
patch: right CaMeL Type = node . get CaMeL Parent CaMeL Node ( ) . ;
rank: 136
score: 98.85016632080078
patch: break ; case Token . GET :
rank: 136
score: 98.79507010323661
patch: return break ; else break ;
rank: 136
score: 98.75902099609375
patch: break ; default : break ; } break ;
rank: 136
score: 98.67455291748047
patch: break ; break ; if null ;
rank: 136
score: 98.63519287109375
patch: break ; if break ; break ; }
rank: 137
score: 99.22410365513393
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n ) ;
rank: 137
score: 98.93614366319444
patch: this . ; this . ; this . ; this . ; ; this . ; ;
rank: 137
score: 98.84955155222039
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) &&
rank: 137
score: 98.79066297743056
patch: break ; break ; } else break ;
rank: 137
score: 98.7581317608173
patch: break ; case Token . TYPE : case Token . TYPE :
rank: 137
score: 98.67437744140625
patch: break ; next ;
rank: 138
score: 99.22637939453125
patch: set CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 138
score: 99.21871815557066
patch: typeable = left CaMeL Type . to CaMeL String ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 138
score: 98.93518938337054
patch: this . ; this . ; this . ; ; this . ;
rank: 138
score: 98.84849548339844
patch: continue ; case Token . NEW :
rank: 138
score: 98.75790066189236
patch: switch ( n . get CaMeL Type ( ; n . get CaMeL Style ( ) )
rank: 138
score: 98.67417689732143
patch: } * ] ; break ;
rank: 138
score: 98.63240559895833
patch: break ; break ; else / / /
rank: 139
score: 99.22609641335227
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 139
score: 99.22328538161058
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 139
score: 99.218017578125
patch: typeable = right CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 139
score: 99.17292022705078
patch: right CaMeL Type = n . get CaMeL Value ( left CaMeL Type ) ;
rank: 139
score: 98.93433295355902
patch: this . ; this . ; this . ; ; this . ; this . ; ;
rank: 139
score: 98.84712942023026
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL Scope ( ) ) ;
rank: 139
score: 98.78823852539062
patch: break ; break ; } catch ;
rank: 139
score: 98.75749376085069
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type . left CaMeL Type ;
rank: 139
score: 98.67384338378906
patch: break ; ; * / break ;
rank: 139
score: 98.63079833984375
patch: break ; break ; } break ; ;
rank: 140
score: 99.22288929332386
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 140
score: 99.218017578125
patch: return n . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 140
score: 99.17225748697916
patch: validator . child CaMeL Type = n . get CaMeL Name ( ) ;
rank: 140
score: 98.93349783761161
patch: right CaMeL Type = visit CaMeL Name ( t , parent ) ;
rank: 140
score: 98.84574381510417
patch: Concrete CaMeL Type left CaMeL Type , right CaMeL Type ;
rank: 140
score: 98.78752305772569
patch: return break ; break ; } break ;
rank: 140
score: 98.75727844238281
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type . type ;
rank: 140
score: 98.67376708984375
patch: } * * break break ;
rank: 141
score: 99.22250764266305
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 141
score: 99.17182006835938
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 141
score: 98.93347981770833
patch: left CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 141
score: 98.84514508928571
patch: n . get CaMeL Type ( ) . case Token . LP :
rank: 141
score: 98.78694370814732
patch: return ; } else return ;
rank: 141
score: 98.7567471590909
patch: break ; case Token . TYPE | Token . ;
rank: 141
score: 98.62669372558594
patch: break ; break ; break ; =
rank: 142
score: 99.2216796875
patch: validator . set CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 142
score: 99.17164248511905
patch: set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 142
score: 98.93240559895834
patch: left CaMeL Type = right CaMeL Type . get CaMeL Name ( ) ;
rank: 142
score: 98.84508514404297
patch: return ; case Token . COMMA :
rank: 142
score: 98.78483363560268
patch: break ; * * * /
rank: 142
score: 98.7567138671875
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . to CaMeL String ;
rank: 142
score: 98.62530517578125
patch: break ; break ; break ; throw
rank: 143
score: 99.222890625
patch: JS CaMeL Type left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 143
score: 99.22162917564656
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ;
rank: 143
score: 99.21773856026786
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 143
score: 99.17143811677632
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL
rank: 143
score: 98.93156433105469
patch: right CaMeL Type = right CaMeL Type . get CaMeL Qualified CaMeL Name ( ;
rank: 143
score: 98.84482709099265
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 143
score: 98.75546603732639
patch: style = break ; case Token . ;
rank: 143
score: 98.66732788085938
patch: break ; * else { break ;
rank: 143
score: 98.6247802734375
patch: break ; break ; break ; if ; else
rank: 144
score: 99.22239332932692
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 144
score: 99.22158813476562
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 144
score: 99.21715777853261
patch: return left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 144
score: 98.93134765625
patch: this . ; this . ; this . ; this . ; break ;
rank: 144
score: 98.84453268612133
patch: { parent . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 144
score: 98.7784423828125
patch: break ; } else return break ;
rank: 144
score: 98.66684299045139
patch: break ; break ; ; * * /
rank: 144
score: 98.62213745117188
patch: break ; break ; else break ; break ;
rank: 145
score: 99.2220791903409
patch: typeable = ! get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 145
score: 99.22149367559524
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL Type ( ) ) )
rank: 145
score: 99.21671549479167
patch: typeable = right CaMeL Type . to CaMeL String ( t . get CaMeL Type ( ) ) ;
rank: 145
score: 99.16904584099265
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL
rank: 145
score: 98.84409586588542
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) )
rank: 145
score: 98.7778549194336
patch: } else { return ; break ;
rank: 145
score: 98.75486246744792
patch: break ; case Token . FALSE : ;
rank: 145
score: 98.66676330566406
patch: break ; break ; System . ;
rank: 145
score: 98.62201538085938
patch: break ; break ; / / / / /
rank: 146
score: 99.2215576171875
patch: ensure CaMeL Typed ( n , left CaMeL Type ) ;
rank: 146
score: 99.22142615685097
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 146
score: 98.93080540707237
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 146
score: 98.84182257401316
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ||
rank: 146
score: 98.77709089006696
patch: break ; } finally { }
rank: 146
score: 98.75359429253473
patch: break ; break ; case Token . ;
rank: 146
score: 98.66658238002232
patch: } * * break ; /
rank: 146
score: 98.62107340494792
patch: break ; break ; / / * /
rank: 147
score: 99.22136124320652
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 147
score: 99.22132286658653
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 147
score: 99.21597290039062
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 147
score: 99.16871337890625
patch: child CaMeL Type = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 147
score: 98.9303448016827
patch: right CaMeL Type = right CaMeL Type . type ( ) ;
rank: 147
score: 98.841796875
patch: item = parent . get CaMeL First CaMeL Child ( ) ;
rank: 147
score: 98.77066476004464
patch: if break ; } break ;
rank: 147
score: 98.75134887695313
patch: break ; case Token . NULL : break ;
rank: 147
score: 98.66639927455357
patch: break ; try ; break ;
rank: 147
score: 98.61898367745536
patch: break ; break ; System ;
rank: 148
score: 99.22113591974431
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . add CaMeL
rank: 148
score: 99.21998697916666
patch: left CaMeL Type = child CaMeL Type . get CaMeL Type ( ) ;
rank: 148
score: 99.21572875976562
patch: left CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 148
score: 99.16829427083333
patch: this . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 148
score: 98.93030395507813
patch: break ; default : throw new ; } ;
rank: 148
score: 98.84132215711806
patch: switch ( child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ) {
rank: 148
score: 98.77044677734375
patch: } else ; if ; break ;
rank: 148
score: 98.75074259440105
patch: break ; case Token . ; case Token . STRING :
rank: 148
score: 98.66621398925781
patch: break ; ; / / / ;
rank: 148
score: 98.61848280164931
patch: break ; break ; ; break ; }
rank: 149
score: 99.22046915690105
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type (
rank: 149
score: 99.21962668678977
patch: right CaMeL Type = validator . get CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 149
score: 99.21565326891448
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 149
score: 99.16763741629464
patch: set CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 149
score: 98.93006896972656
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( break ) ;
rank: 149
score: 98.77015177408855
patch: } else = null ;
rank: 149
score: 98.75069851345486
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type . right CaMeL Type ;
rank: 149
score: 98.6647216796875
patch: break ; out . next ( ; break ;
rank: 149
score: 98.61787109375
patch: break ; break ; break ; if ; ;
rank: 150
score: 99.22037179129464
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; }
rank: 150
score: 99.21849646935097
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( ) ;
rank: 150
score: 99.21553257533482
patch: typeable = t . get CaMeL First CaMeL Child ( ) ;
rank: 150
score: 99.16689453125
patch: value = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 150
score: 98.92996978759766
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 150
score: 98.83763970269098
patch: if ( this . child CaMeL Type . matches CaMeL Int 32 Context ( ) ) {
rank: 150
score: 98.76890345982143
patch: break ; null } break ;
rank: 150
score: 98.74999321831598
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . to CaMeL String ;
rank: 150
score: 98.66471354166667
patch: while break ; break ;
rank: 150
score: 98.6177490234375
patch: break ; break ; break ; ; break ;
rank: 151
score: 99.21835666232639
patch: JS CaMeL Type left CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 151
score: 99.21474783761161
patch: typeable = t . get CaMeL JS CaMeL Type ( ) ;
rank: 151
score: 99.16679077148437
patch: set CaMeL Type ( t . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 151
score: 98.92991420200893
patch: left CaMeL Type = right CaMeL Type ; right CaMeL Type = ;
rank: 151
score: 98.83718532986111
patch: System . . : ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 151
score: 98.76705496651786
patch: } break ; return break ;
rank: 151
score: 98.74959309895833
patch: sb . append ( $STRING$ ) . append ( node . get CaMeL Name ( ) ;
rank: 151
score: 98.664306640625
patch: break ; * / / /
rank: 151
score: 98.6168212890625
patch: break ; break ; break ; } return
rank: 152
score: 99.2201416015625
patch: validator . set CaMeL JS CaMeL Type ( child CaMeL Type . get CaMeL Name ( ) ) ;
rank: 152
score: 99.21790489783653
patch: set CaMeL Name ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 152
score: 99.21396706321023
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 152
score: 98.92940266927083
patch: this . ; ; this . ; ; this . ; this . ;
rank: 152
score: 98.8368389423077
patch: break ? n . get CaMeL First CaMeL Child ( ) :
rank: 152
score: 98.7654037475586
patch: } else = true ; break ;
rank: 152
score: 98.74913024902344
patch: break ; case Token . EMPTY :
rank: 152
score: 98.6163662997159
patch: break ; break ; if break ; break ; }
rank: 153
score: 99.21964518229167
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 153
score: 99.21767171223958
patch: validator = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 153
score: 99.16575927734375
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Value ( ) ) ;
rank: 153
score: 98.92867838541666
patch: left CaMeL Type = ; right CaMeL Type = visit CaMeL Name ( ;
rank: 153
score: 98.835205078125
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) )
rank: 153
score: 98.76525006975446
patch: } else if ; break ;
rank: 153
score: 98.74893188476562
patch: break ; case Token . type :
rank: 153
score: 98.66382707868304
patch: break ; break ; ; ?
rank: 153
score: 98.6162353515625
patch: break ; break ; break ; } / /
rank: 154
score: 99.2176513671875
patch: ensure CaMeL Typed ( n . get CaMeL Type ( ) ) ;
rank: 154
score: 99.21221923828125
patch: result = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 154
score: 99.16559801603618
patch: right CaMeL Type = parent . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 154
score: 98.92778184678819
patch: this . ; this . ; ; this . ; this . ; this . ; ;
rank: 154
score: 98.83461400082237
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 154
score: 98.76377650669643
patch: break ; break ; false ;
rank: 154
score: 98.74685434194711
patch: break ; case Token . TYPE : vars . put ( ;
rank: 154
score: 98.66249084472656
patch: } * * / break ; ;
rank: 154
score: 98.61611106178977
patch: break ; break ; break ; if break ; }
rank: 155
score: 99.21927012567934
patch: validator . set CaMeL Type ( get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 155
score: 99.21697591145833
patch: child CaMeL Type = left CaMeL Type . get CaMeL Type ( ) ;
rank: 155
score: 99.21201578776042
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 155
score: 99.16544799804687
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( left CaMeL Type ) ;
rank: 155
score: 98.92767333984375
patch: this . ; this . ; this . ; this . ; this . ; break ;
rank: 155
score: 98.8339599609375
patch: return || child CaMeL Type . matches CaMeL Int 32 Context ( ) ;
rank: 155
score: 98.76285807291667
patch: } else { return ; } break ;
rank: 155
score: 98.74662272135417
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ) . length ( ;
rank: 155
score: 98.66221400669643
patch: break ; * / / ;
rank: 156
score: 99.16535387541118
patch: right CaMeL Type = n . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 156
score: 98.92757161458333
patch: right CaMeL Type = visit CaMeL Name ( ; right CaMeL Type = ;
rank: 156
score: 98.83381922104779
patch: if ( ! validator . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) )
rank: 156
score: 98.75943429129464
patch: return break ; else ; }
rank: 156
score: 98.74552154541016
patch: break ; default : throw break ;
rank: 156
score: 98.66207885742188
patch: break ; break ; next false ;
rank: 156
score: 98.61395941840277
patch: if ; break ; break ; break ;
rank: 157
score: 99.2189053622159
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 157
score: 99.16531575520834
patch: this . right CaMeL Type = n . get CaMeL Type ( ) ;
rank: 157
score: 98.92709530101104
patch: left CaMeL Type = right CaMeL Type ; right CaMeL Type = right CaMeL Type ;
rank: 157
score: 98.83342742919922
patch: continue ; case Token . POS :
rank: 157
score: 98.75931803385417
patch: return ; } break ;
rank: 157
score: 98.7444091796875
patch: break ; case Token . NULL : case ;
rank: 157
score: 98.66202218191964
patch: break ; * else break ;
rank: 157
score: 98.61371459960938
patch: break ; break ; } break ; return ;
rank: 158
score: 99.21890024038461
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 158
score: 99.21555397727273
patch: child CaMeL Type = validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 158
score: 99.16427001953124
patch: set CaMeL Name ( n . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 158
score: 98.83206939697266
patch: break ; case Token . NEG :
rank: 158
score: 98.75527518136161
patch: } else { return break ;
rank: 158
score: 98.74313354492188
patch: break ; default : t . set CaMeL Name ( ;
rank: 158
score: 98.66171264648438
patch: break ; break ; ; 1 ;
rank: 158
score: 98.6131591796875
patch: break ; break ; break ; else /
rank: 159
score: 99.21886097301136
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 159
score: 99.21510667067308
patch: validator . expect CaMeL Number ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 159
score: 99.16392164963942
patch: child CaMeL Type = n . get CaMeL Value ( ) ;
rank: 159
score: 98.92634133731617
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . name ;
rank: 159
score: 98.83181923314145
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 159
score: 98.75502232142857
patch: else break ; } else ;
rank: 159
score: 98.738916015625
patch: break ; case Token . TYPE : continue ;
rank: 159
score: 98.66048758370536
patch: if break ; break ; ;
rank: 159
score: 98.612890625
patch: break ; break ; break ; break ; /
rank: 160
score: 99.21879359654018
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 160
score: 99.21470289963942
patch: ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 160
score: 99.21018473307292
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 160
score: 99.16375325520833
patch: right CaMeL Type = validator . get CaMeL Type ( n . get CaMeL
rank: 160
score: 98.92592366536458
patch: right = visit CaMeL Name ( t ;
rank: 160
score: 98.83141150841347
patch: field = t . get CaMeL First CaMeL Child ( ) ;
rank: 160
score: 98.75398763020833
patch: break break ; } else { return ;
rank: 160
score: 98.73849666819854
patch: if ( ; right CaMeL Type . get CaMeL Name ( ) . equals ( ;
rank: 160
score: 98.65791459517045
patch: i . out . println ( $STRING$ ; return ;
rank: 160
score: 98.61236572265625
patch: break ; break ; if break ; break ; break ;
rank: 161
score: 99.21869365985577
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 161
score: 99.21441095525569
patch: left CaMeL Type = validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 161
score: 99.16373384915866
patch: right CaMeL Type = t . get CaMeL Value ( ) ;
rank: 161
score: 98.92582194010417
patch: left CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) . ;
rank: 161
score: 98.83132934570312
patch: if ( child CaMeL Type . matches CaMeL Int 32 Context ( ) ) {
rank: 161
score: 98.75314767020089
patch: } if ; return break ;
rank: 161
score: 98.7384502704327
patch: break ; case Token . NAME : vars . put ( ;
rank: 161
score: 98.65640694754464
patch: break ; * / return ;
rank: 161
score: 98.61234283447266
patch: break ; break ; } * /
rank: 162
score: 99.2186279296875
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . report CaMeL
rank: 162
score: 99.20840056046195
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 162
score: 98.83098008897569
patch: return t . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 162
score: 98.75285339355469
patch: break ; } finally { return ;
rank: 162
score: 98.73819580078126
patch: break ; case Token . MIN _ VALUE :
rank: 162
score: 98.6123046875
patch: break ; break ; } if break ; break ;
rank: 163
score: 99.21345658735795
patch: typeable = ! Node CaMeL Util . is CaMeL
rank: 163
score: 99.20828125
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 163
score: 98.92402729235198
patch: left CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 163
score: 98.83091107536765
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( child CaMeL Type ) ;
rank: 163
score: 98.75232696533203
patch: break ; false ; break ; }
rank: 163
score: 98.73817795973558
patch: break ; case Token . PREFIX : right CaMeL Type = ;
rank: 163
score: 98.65443420410156
patch: else { break ; } break ;
rank: 163
score: 98.60994873046874
patch: break ; break ; break ; ; return ;
rank: 164
score: 99.211611328125
patch: typeable = Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 164
score: 99.162109375
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 164
score: 98.9236996299342
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) )
rank: 164
score: 98.83064270019531
patch: return ; case Token . NEW :
rank: 164
score: 98.75018310546875
patch: break ; } } if break ;
rank: 164
score: 98.73663330078125
patch: right = break ; case Token . TYPE :
rank: 164
score: 98.65299224853516
patch: break ; break ; * ; *
rank: 164
score: 98.60566850142045
patch: break ; break ; break ; / / / /
rank: 165
score: 99.2176171875
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 165
score: 99.21125231291118
patch: right CaMeL Type = n . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 165
score: 99.20787963867187
patch: right = get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 165
score: 99.16194875616776
patch: ensure CaMeL Typed ( t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 165
score: 98.92317708333333
patch: break ; ; case Token . NAME :
rank: 165
score: 98.82998996310764
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ,
rank: 165
score: 98.74996609157986
patch: } else { break ; } catch ;
rank: 165
score: 98.73622759650735
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 165
score: 98.65297241210938
patch: break ; out . next ( break ) ;
rank: 165
score: 98.602734375
patch: break ; break ; break ; if ; =
rank: 166
score: 99.21063842773438
patch: right CaMeL Type = child CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 166
score: 99.20770818536931
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 166
score: 99.16145405016448
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 166
score: 98.92218981291118
patch: child CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 166
score: 98.829443359375
patch: return . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 166
score: 98.74884796142578
patch: return break ; else { break ;
rank: 166
score: 98.73251342773438
patch: break ; case Token . NAME : case ;
rank: 166
score: 98.65271606445313
patch: break ; break ; case Boolean . TRUE ;
rank: 166
score: 98.60149468315973
patch: break ; return ; break ; break ;
rank: 167
score: 99.21642049153645
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 167
score: 98.92218695746527
patch: right CaMeL Type = left CaMeL Type . get CaMeL Parent CaMeL Node ( ) . ;
rank: 167
score: 98.82786158511513
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 167
score: 98.74852752685547
patch: return break ; } else if ;
rank: 167
score: 98.73222081801471
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ) . equals ;
rank: 167
score: 98.65264892578125
patch: break ; break ; ; System . ;
rank: 167
score: 98.6013916015625
patch: break ; break ; if ; break ; ;
rank: 168
score: 99.2160977450284
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL
rank: 168
score: 99.2103500366211
patch: validator . expect CaMeL Number ( n . get CaMeL Type ( ) ) ;
rank: 168
score: 99.20626831054688
patch: right CaMeL Type = get CaMeL Type CaMeL Of CaMeL This ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 168
score: 98.92144775390625
patch: if ( ; else { break ; }
rank: 168
score: 98.82784231085526
patch: { get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 168
score: 98.74759928385417
patch: } else return break ;
rank: 168
score: 98.73103601792279
patch: if ( ; right CaMeL Type . get CaMeL Type CaMeL Name ( ) . ;
rank: 168
score: 98.65189615885417
patch: break ; * break ;
rank: 168
score: 98.60079616970486
patch: break ; break ; this ; break ;
rank: 169
score: 99.21591584578805
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 169
score: 99.21027166193181
patch: right CaMeL Type = validator . get CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 169
score: 99.20606578480114
patch: right CaMeL Type = get CaMeL Native CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 169
score: 99.15936957465277
patch: get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 169
score: 98.92128619025735
patch: right ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 169
score: 98.82668169806985
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ;
rank: 169
score: 98.74602399553571
patch: return ; } else break ;
rank: 169
score: 98.73056209788604
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Modifiers ( ) )
rank: 169
score: 98.65184529622395
patch: break ; * * /
rank: 169
score: 98.59995524088542
patch: break ; break ; * / return ;
rank: 170
score: 99.20977783203125
patch: if ( ! Node CaMeL Util . is CaMeL
rank: 170
score: 99.20590049342105
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 170
score: 99.15833197699652
patch: right CaMeL Type = child CaMeL Type . get CaMeL Value ( left CaMeL Type ) ;
rank: 170
score: 98.8258544921875
patch: System . . . . { ensure CaMeL Typed ( t . get CaMeL
rank: 170
score: 98.74395751953125
patch: break ; } finally ;
rank: 170
score: 98.72621256510416
patch: sb . append ( $STRING$ ) . append ( child CaMeL Type . ;
rank: 170
score: 98.6512222290039
patch: break ; / / / / ;
rank: 170
score: 98.59986707899306
patch: break ; break ; break ; else }
rank: 171
score: 99.21535034179688
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . report (
rank: 171
score: 99.20906929347827
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 171
score: 99.20573286576705
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 171
score: 99.15784272693452
patch: set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( left CaMeL Type ) ) ;
rank: 171
score: 98.91899108886719
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( break ) ;
rank: 171
score: 98.82411702473958
patch: t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 171
score: 98.74391174316406
patch: } else if ; return break ;
rank: 171
score: 98.7259521484375
patch: break ; case Token . TYPE : * /
rank: 171
score: 98.6507568359375
patch: break ; break ; case Boolean . FALSE ;
rank: 171
score: 98.59963156960227
patch: break ; break ; if break ; } break ;
rank: 172
score: 99.20860799153645
patch: right CaMeL Type = validator . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 172
score: 99.20504760742188
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 172
score: 99.15738932291667
patch: get CaMeL Type CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 172
score: 98.9183349609375
patch: this . ; this . ; this . ; this . ; this . ; ; ;
rank: 172
score: 98.82399495442708
patch: n . ensure CaMeL Typed ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 172
score: 98.74245876736111
patch: break ; } finally { break ; }
rank: 172
score: 98.72520345052084
patch: switch ( n . get CaMeL Type ( ) ; case Token . ;
rank: 172
score: 98.64928588867187
patch: break ; break ; case Boolean . out ;
rank: 172
score: 98.59807586669922
patch: break ; break ; break ; this
rank: 173
score: 99.214599609375
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL JS CaMeL Type ( ) ) ) {
rank: 173
score: 99.20830535888672
patch: right CaMeL Type = typeable ;
rank: 173
score: 99.20453643798828
patch: validator . typeable = n . get CaMeL JS CaMeL Type ( ) ;
rank: 173
score: 99.1573422080592
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( t . get CaMeL
rank: 173
score: 98.91614583333333
patch: this . ; this . ; this . ; this . ; ; ;
rank: 173
score: 98.8237075805664
patch: switch ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) {
rank: 173
score: 98.7251727764423
patch: if ( ; right CaMeL Type . get CaMeL Type ( ;
rank: 173
score: 98.64824676513672
patch: break ; break ; out ; ;
rank: 173
score: 98.59630584716797
patch: break ; break ; if ; }
rank: 174
score: 99.20829264322917
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 174
score: 99.15678187779018
patch: right CaMeL Type = get CaMeL Type ( left CaMeL Type ) ;
rank: 174
score: 98.91572651110198
patch: right CaMeL Type = n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ;
rank: 174
score: 98.82327609592014
patch: return t . get CaMeL Type ( ) . is CaMeL Expression CaMeL Node ( ) ;
rank: 174
score: 98.74165344238281
patch: break ; } else ; return ;
rank: 174
score: 98.7236328125
patch: break ; case Token . ; case Token . NULL :
rank: 174
score: 98.64781951904297
patch: break ; / / * break ;
rank: 174
score: 98.59476047092014
patch: break ; break ; = ; break ;
rank: 175
score: 99.21372633713942
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 175
score: 99.20388926630434
patch: typeable = child CaMeL Type . get CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 175
score: 99.15572684151786
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 175
score: 98.91546630859375
patch: right CaMeL Type = right CaMeL Type . get CaMeL Name ( ;
rank: 175
score: 98.8219855813419
patch: return get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 175
score: 98.74019949776786
patch: break ; else break ; }
rank: 175
score: 98.72236851283482
patch: break ; default : continue ;
rank: 175
score: 98.6478042602539
patch: } * * / break ; /
rank: 175
score: 98.59356689453125
patch: break ; break ; if ; * / /
rank: 176
score: 99.21368408203125
patch: validator . set CaMeL Type ( child CaMeL Type ) ;
rank: 176
score: 99.2034375
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 176
score: 99.1555926983173
patch: right CaMeL Type = n . get CaMeL Length ( ) ;
rank: 176
score: 98.91493626644737
patch: right CaMeL Type = node . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 176
score: 98.82179019325658
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ,
rank: 176
score: 98.74000549316406
patch: } break ; null * break ;
rank: 176
score: 98.7221171061198
patch: switch ( n . get CaMeL Type ( ) break )
rank: 176
score: 98.64773559570312
patch: break ; break ; switch break ;
rank: 176
score: 98.59301079644098
patch: break ; break ; } / * /
rank: 177
score: 99.21331155711206
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; break ;
rank: 177
score: 99.20644906850961
patch: left CaMeL Type = node . get CaMeL Type ( ) ;
rank: 177
score: 99.2034328294837
patch: typeable = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 177
score: 99.15468139648438
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Scope ( ) ) ;
rank: 177
score: 98.91368272569444
patch: right CaMeL Type = child CaMeL Type . get CaMeL Parent CaMeL Node ( break ) ;
rank: 177
score: 98.82138296274039
patch: index = t . get CaMeL First CaMeL Child ( ) ;
rank: 177
score: 98.7398681640625
patch: break break ; } else break ;
rank: 177
score: 98.72179412841797
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Value ( ;
rank: 177
score: 98.64754909939236
patch: } else ; break ; if break ;
rank: 177
score: 98.5926513671875
patch: return ; break ; } break ;
rank: 178
score: 99.20620727539062
patch: get CaMeL JS CaMeL Type ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 178
score: 99.20301818847656
patch: ensure CaMeL Typed ( n , n . get CaMeL Type ( ) ) ;
rank: 178
score: 98.91365559895833
patch: right CaMeL Type = right CaMeL Type . get CaMeL Base CaMeL Type ( ) ; ;
rank: 178
score: 98.82122124565973
patch: table . ensure CaMeL Typed ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 178
score: 98.73799641927083
patch: return ; } else { break ; }
rank: 178
score: 98.72172407670455
patch: default : throw new Illegal CaMeL State CaMeL Exception ;
rank: 178
score: 98.6474276455966
patch: } break ; break ; System . out . ;
rank: 178
score: 98.5918856534091
patch: break ; break ; break ; break ; / /
rank: 179
score: 99.2053731282552
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 179
score: 99.15430559430804
patch: set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 179
score: 98.91355678013393
patch: left CaMeL Type ; right CaMeL Type = visit CaMeL Name ( ;
rank: 179
score: 98.8206787109375
patch: LOG . : t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 179
score: 98.73750305175781
patch: } else { } if break ;
rank: 179
score: 98.72151453354779
patch: sb . append ( $STRING$ ) . append ( this . get CaMeL Name ( ;
rank: 179
score: 98.64379119873047
patch: break ; ; 1 { break ;
rank: 179
score: 98.59178331163194
patch: if break ; break ; if break ;
rank: 180
score: 99.21238356370192
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 180
score: 99.20517403738839
patch: set CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 180
score: 99.2027587890625
patch: right = get CaMeL Function CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 180
score: 99.15362258184524
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 180
score: 98.91251627604167
patch: this . ; ; this . ; this . ; this . ; this . ; ;
rank: 180
score: 98.81951141357422
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 180
score: 98.73659842354911
patch: break ; if break ; }
rank: 180
score: 98.72107696533203
patch: break ; case Token . SIZE :
rank: 180
score: 98.64215087890625
patch: break ; ; ++ break ;
rank: 180
score: 98.5901870727539
patch: break ; break ; break ; int
rank: 181
score: 99.21233258928571
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) ) ; }
rank: 181
score: 99.20480581430289
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 181
score: 99.20268031529018
patch: typeable = left CaMeL Type . to CaMeL String ( ) ;
rank: 181
score: 99.15336778428819
patch: if ( ! child CaMeL Type . equals ( Node CaMeL Util . op CaMeL To CaMeL
rank: 181
score: 98.91173553466797
patch: right CaMeL Type = n . get CaMeL Parent CaMeL Node ( ) . ;
rank: 181
score: 98.81929738898026
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) {
rank: 181
score: 98.73529924665179
patch: break ; null * break ;
rank: 181
score: 98.72047334558823
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Symbol ( ) )
rank: 181
score: 98.64183349609375
patch: break ; break ; case Integer . 0 ;
rank: 181
score: 98.58944702148438
patch: break ; break ; } if ; break ;
rank: 182
score: 99.21232804008152
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 182
score: 99.20457356770834
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( ) ;
rank: 182
score: 99.20267917798913
patch: return child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 182
score: 99.15328979492188
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL
rank: 182
score: 98.91090152138158
patch: right CaMeL Type = t . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 182
score: 98.81804950420673
patch: idx = n . get CaMeL First CaMeL Child ( ) ;
rank: 182
score: 98.73527526855469
patch: } else ; this . break ;
rank: 182
score: 98.7198486328125
patch: break ; case Token . ; case ;
rank: 182
score: 98.64173126220703
patch: break ; ; - ? break ;
rank: 182
score: 98.58723588423295
patch: break ; break ; else if break ; break ;
rank: 183
score: 99.2123272235577
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 183
score: 99.20413208007812
patch: ensure CaMeL Typed ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 183
score: 99.20143528988487
patch: right = n . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 183
score: 99.15233764648437
patch: set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 183
score: 98.91067504882812
patch: break ; default : visit CaMeL Name ( ;
rank: 183
score: 98.81710052490234
patch: return ; case Token . STRING :
rank: 183
score: 98.73524983723958
patch: } else ; if ;
rank: 183
score: 98.71633013556985
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) ;
rank: 183
score: 98.64120919363839
patch: break ; try { break ;
rank: 183
score: 98.58342950994319
patch: break ; break ; break ; } if break ;
rank: 184
score: 99.21162341889881
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 184
score: 99.20381496263587
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 184
score: 99.20074462890625
patch: typeable = right CaMeL Type . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 184
score: 99.15200660342262
patch: n . get CaMeL Node ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 184
score: 98.910546875
patch: this . ; this . ; ; this . ; this . ; ;
rank: 184
score: 98.81680458470395
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 184
score: 98.73320922851562
patch: return break ; }
rank: 184
score: 98.7160400390625
patch: break ; case Token . ; case break :
rank: 184
score: 98.63820975167411
patch: } * ] break break ;
rank: 184
score: 98.58297729492188
patch: return ; break ; break ; }
rank: 185
score: 99.21152131453805
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( left CaMeL Type ) ) ;
rank: 185
score: 99.15114135742188
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . child CaMeL
rank: 185
score: 98.91027153862848
patch: break ; default : throw new break ;
rank: 185
score: 98.8155029296875
patch: n . get CaMeL Type ( ) . ensure CaMeL Typed ( ) ;
rank: 185
score: 98.73291015625
patch: return break ; this . break ;
rank: 185
score: 98.71518283420139
patch: break ; case Token . PREFIX : ;
rank: 185
score: 98.6368408203125
patch: i . out . println ( $STRING$ ; * /
rank: 185
score: 98.58232879638672
patch: break ; break ; if ; break
rank: 186
score: 99.20283647017045
patch: child CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 186
score: 99.15079074435764
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( parent ) ;
rank: 186
score: 98.90987820095486
patch: right CaMeL Type = right CaMeL Type . get CaMeL Declaring CaMeL Class ( ) . ;
rank: 186
score: 98.81425476074219
patch: t . set CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 186
score: 98.7327880859375
patch: else break ; } break ;
rank: 186
score: 98.71418592664931
patch: break ; case Token . YES : ;
rank: 186
score: 98.63580877130681
patch: i . out . println break false ; break -
rank: 186
score: 98.58201246995192
patch: break ; break ; break ; break ; break ; break ;
rank: 187
score: 99.21079282407408
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 187
score: 99.20208740234375
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 187
score: 99.19902600740132
patch: typeable = get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 187
score: 99.150732421875
patch: n . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 187
score: 98.90946138822116
patch: break ; case Token . ; case Token . break : ;
rank: 187
score: 98.8138068704044
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 187
score: 98.73262786865234
patch: } else ; return break ; }
rank: 187
score: 98.71384684244792
patch: break ; case Token . class : ;
rank: 187
score: 98.63576931423611
patch: break ; break ; * * * /
rank: 187
score: 98.58156331380208
patch: break ; else break ; break ; }
rank: 188
score: 99.21073774857955
patch: if ( parent . get CaMeL Type ( ) !=
rank: 188
score: 99.1988192471591
patch: typeable = ! child CaMeL Type . matches ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 188
score: 99.15030110677084
patch: right CaMeL Type = child CaMeL Type . get CaMeL Count ( ) ;
rank: 188
score: 98.90818093039773
patch: right CaMeL Type = visit CaMeL Name ( ; ;
rank: 188
score: 98.81378643329327
patch: index = n . get CaMeL Last CaMeL Child ( ) ;
rank: 188
score: 98.73200819227431
patch: } else { break ; } finally {
rank: 188
score: 98.7130126953125
patch: break ; case Token . ; | Token . ;
rank: 188
score: 98.6355313387784
patch: i . out . println break false ; break *
rank: 188
score: 98.57982526506696
patch: break ; break ; = ;
rank: 189
score: 99.2106182391827
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ,
rank: 189
score: 99.20098876953125
patch: set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 189
score: 99.19878073299633
patch: typeable = left CaMeL Type . to CaMeL String ( left CaMeL Type ) ;
rank: 189
score: 99.15024820963542
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Value ( ) ) ;
rank: 189
score: 98.90766987047698
patch: this . ; this . ; this . ; this . ; this . parent = parent ;
rank: 189
score: 98.81327989366319
patch: t . ensure CaMeL Typed ( t . get CaMeL Class CaMeL Name ( ) ) ;
rank: 189
score: 98.72923932756696
patch: } else = break ; }
rank: 189
score: 98.71263885498047
patch: break ; case Token . START :
rank: 189
score: 98.63496704101563
patch: break ; out . append ( $STRING$ ) ;
rank: 189
score: 98.57921006944444
patch: break ; if ; break ; return ;
rank: 190
score: 99.20977492559524
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL
rank: 190
score: 99.200849609375
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 190
score: 98.90732709099265
patch: this . ; this . ; this . ; this . right CaMeL Type = ;
rank: 190
score: 98.81291647518383
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL Name ( ) ;
rank: 190
score: 98.71131089154412
patch: if ( ; left CaMeL Type . get CaMeL Type CaMeL Name ( ) . ;
rank: 190
score: 98.6348648071289
patch: break ; break ; case else {
rank: 190
score: 98.57649739583333
patch: break ; break ; break ; break ; } return ;
rank: 191
score: 99.20954241071429
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 191
score: 99.20058186848958
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . expect CaMeL Number ( ) ;
rank: 191
score: 99.19776553199405
patch: typeable = get CaMeL Function CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 191
score: 99.14849853515625
patch: if ( ! child CaMeL Type . is CaMeL Expression CaMeL Node ( ) )
rank: 191
score: 98.90706634521484
patch: right CaMeL Type = right CaMeL Type . to CaMeL String ( break ) ;
rank: 191
score: 98.81177520751953
patch: return t . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 191
score: 98.7276611328125
patch: } else { } return break ;
rank: 191
score: 98.71109008789062
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ;
rank: 191
score: 98.63413307883523
patch: } else ; break ; System . out . print
rank: 191
score: 98.57592095269098
patch: break ; break ; / / / }
rank: 192
score: 99.20912522536058
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 192
score: 99.19711538461539
patch: result = child CaMeL Type . to CaMeL String ( ) ;
rank: 192
score: 99.1461181640625
patch: right CaMeL Type = get CaMeL Parent ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 192
score: 98.90689086914062
patch: right CaMeL Type = right CaMeL Type ; ;
rank: 192
score: 98.81116594587054
patch: n . get CaMeL Type ( ) . case Token . FUNCTION :
rank: 192
score: 98.72466362847223
patch: return break ; else { break ; }
rank: 192
score: 98.70927211216518
patch: switch ( n . get CaMeL Type ; case Token . TYPE :
rank: 192
score: 98.57562255859375
patch: break ; break ; ! break ;
rank: 193
score: 99.2091064453125
patch: validator . set CaMeL Type ( node . get CaMeL Type ( ) ) ;
rank: 193
score: 99.19996337890625
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( left CaMeL Type ) ;
rank: 193
score: 99.19691975911458
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 193
score: 99.14590657552084
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 193
score: 98.90667046440973
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Id ( ;
rank: 193
score: 98.8108269186581
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ,
rank: 193
score: 98.72460259331598
patch: return break ; } finally { return ;
rank: 193
score: 98.70897623697917
patch: if ( ; left CaMeL Type . get CaMeL Type CaMeL Name ( ;
rank: 193
score: 98.63311767578125
patch: break ; break ; 0 ;
rank: 193
score: 98.57559814453126
patch: break ; if ; = break ; break ;
rank: 194
score: 99.20902054398148
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 194
score: 99.1999178799716
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( t . get CaMeL Type ( ) ) ;
rank: 194
score: 98.90640419407895
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Id ( ) ;
rank: 194
score: 98.81033325195312
patch: return ; case Token . CALL :
rank: 194
score: 98.72369384765625
patch: return ; break ; } }
rank: 194
score: 98.7086181640625
patch: left = ; right CaMeL Type = ;
rank: 194
score: 98.5752286044034
patch: break ; break ; } break ; break ; }
rank: 195
score: 99.20853855298913
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( node . get CaMeL First CaMeL Child ( ) ) )
rank: 195
score: 99.1995516690341
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 195
score: 99.19664417613636
patch: child CaMeL Type = child CaMeL Type ; break ;
rank: 195
score: 99.14573974609375
patch: right CaMeL Type = get CaMeL Instance CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 195
score: 98.90635681152344
patch: right CaMeL Type = right CaMeL Type . get CaMeL First CaMeL Child ( ;
rank: 195
score: 98.81024169921875
patch: t . ensure CaMeL Typed ( t . get CaMeL Name ( ) ) ;
rank: 195
score: 98.72296820746527
patch: break break ; } else { break ;
rank: 195
score: 98.70772298177083
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type ) ;
rank: 195
score: 98.63246848366477
patch: } else ; break ; System . out . ;
rank: 195
score: 98.57415093315973
patch: break ; break ; } = break ;
rank: 196
score: 99.20844184027777
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 196
score: 99.19777425130208
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 196
score: 99.19655443274456
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 196
score: 99.1448974609375
patch: n . get CaMeL Type ( ) . matches CaMeL Int 32 ( n . get CaMeL
rank: 196
score: 98.90628212376645
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ;
rank: 196
score: 98.80980088975694
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) )
rank: 196
score: 98.72266303168402
patch: } else { } else = break ;
rank: 196
score: 98.70696662454044
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ; }
rank: 196
score: 98.63187408447266
patch: break ; break ; case break ;
rank: 197
score: 99.19666466346153
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 197
score: 99.14449055989583
patch: validator . right CaMeL Type = t . get CaMeL Value ( ) ;
rank: 197
score: 98.90541585286458
patch: right CaMeL Type = child CaMeL Type . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 197
score: 98.80964660644531
patch: if ( parent . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 197
score: 98.72227478027344
patch: break break ; } else return ;
rank: 197
score: 98.70498221261161
patch: left = ; right = ;
rank: 197
score: 98.5732421875
patch: break ; break ; if ; break ; return ;
rank: 198
score: 99.20793805803571
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 198
score: 99.19619516225961
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 198
score: 99.1951904296875
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 198
score: 99.14385223388672
patch: validator . set CaMeL Name ( t . get CaMeL Name ( ) ) ;
rank: 198
score: 98.90498352050781
patch: child CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . ;
rank: 198
score: 98.80958909254808
patch: id = n . get CaMeL First CaMeL Child ( ) ;
rank: 198
score: 98.72086007254464
patch: if break ; } catch ;
rank: 198
score: 98.70442708333333
patch: break false ; case Token . TYPE :
rank: 198
score: 98.62940216064453
patch: break ; case 1 ; break ;
rank: 198
score: 98.57305297851562
patch: break ; break ; break ; return ; else
rank: 199
score: 99.20791520743535
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ) ;
rank: 199
score: 99.19617716471355
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 199
score: 99.19487847222223
patch: ensure CaMeL Typed ( n , n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 199
score: 99.14369111902573
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Node CaMeL
rank: 199
score: 98.90475124782986
patch: break ; default : case Token . ;
rank: 199
score: 98.80834021935097
patch: return get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 199
score: 98.72009955512152
patch: try { break ; } catch break ;
rank: 199
score: 98.70269775390625
patch: left CaMeL Type = ; right CaMeL Type = type ;
rank: 199
score: 98.57215576171875
patch: break ; break ; ; break ; break ;
rank: 200
score: 99.20732286241319
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL
rank: 200
score: 99.19544067382813
patch: right CaMeL Type = validator . get CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 200
score: 99.1938671875
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 200
score: 99.14136962890625
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 200
score: 98.90465630425348
patch: right = ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 200
score: 98.80786895751953
patch: throw t . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 200
score: 98.71842447916667
patch: else { break ; } break ; }
rank: 200
score: 98.70231797960069
patch: break ; case Token . NAME : :
rank: 200
score: 98.57163307883523
patch: break ; break ; break ; else if break ;
rank: 201
score: 99.20720966045673
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 201
score: 99.19526811079545
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 201
score: 99.19333814538044
patch: break left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 201
score: 99.14134579613095
patch: typeable = validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 201
score: 98.90419921875
patch: this . ; ; this . ; this . ; this . ; ;
rank: 201
score: 98.80759684244792
patch: ! parent . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 201
score: 98.715576171875
patch: break ; break ; } else {
rank: 201
score: 98.69969685872395
patch: if ( ; n . get CaMeL Type ( ; )
rank: 201
score: 98.62787737165179
patch: break ; * ++ break ;
rank: 201
score: 98.57132975260417
patch: break ; if break ; break ; ;
rank: 202
score: 99.20664469401042
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 202
score: 99.19439697265625
patch: JS CaMeL Type left CaMeL Type , right CaMeL Type ;
rank: 202
score: 99.19296700613839
patch: typeable = child CaMeL Type . get CaMeL String ( ) ;
rank: 202
score: 99.14119037828948
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type ( ) ;
rank: 202
score: 98.90323215060764
patch: right = ; left CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 202
score: 98.80497472426471
patch: { get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 202
score: 98.71555582682292
patch: } break ; null ;
rank: 202
score: 98.69921875
patch: if ( ; right CaMeL Type != null )
rank: 202
score: 98.627197265625
patch: case 0 : break ;
rank: 202
score: 98.57041422526042
patch: break ; break ; } break ; /
rank: 203
score: 99.20660759420956
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL
rank: 203
score: 99.1939188639323
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( $STRING$ ) ;
rank: 203
score: 99.19261756310097
patch: right = n . get CaMeL JS CaMeL Type ( ) ;
rank: 203
score: 99.14114815848214
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 203
score: 98.90316009521484
patch: left = visit CaMeL Name ( ;
rank: 203
score: 98.80363464355469
patch: continue ; case Token . VOID :
rank: 203
score: 98.71507045200893
patch: return break ; } return ;
rank: 203
score: 98.69884575737848
patch: break ; case Token . EMPTY : ;
rank: 203
score: 98.626953125
patch: } else { break ; System . out . ;
rank: 203
score: 98.56880950927734
patch: break ; break ; break ; --
rank: 204
score: 99.20639038085938
patch: validator . set CaMeL Type ( left CaMeL Type ) ;
rank: 204
score: 99.1409912109375
patch: eable = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 204
score: 98.900048828125
patch: left CaMeL Type = visit CaMeL Name ( ; right CaMeL Type = ;
rank: 204
score: 98.8033806295956
patch: if ( this . child CaMeL Type . matches CaMeL Int 32 Context ( ) )
rank: 204
score: 98.71495710100446
patch: break break ; } else {
rank: 204
score: 98.69883817784927
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Code ( ) ;
rank: 204
score: 98.62565782335069
patch: } break ; break ; while break ;
rank: 204
score: 98.56845703125
patch: break ; break ; if ; { break ;
rank: 205
score: 99.2062109375
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) )
rank: 205
score: 99.19364107572116
patch: right CaMeL Type = validator . get CaMeL Type CaMeL Of CaMeL This ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 205
score: 98.89780144942434
patch: switch ( n . get CaMeL Type ( ; n . get CaMeL Type ( ) ) )
rank: 205
score: 98.80284208409927
patch: return parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 205
score: 98.71387396918402
patch: return break ; } else if break ;
rank: 205
score: 98.69806671142578
patch: break ; case Token . Var :
rank: 205
score: 98.62562779017857
patch: break ; / * break ;
rank: 206
score: 99.20548288445724
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) ) ; }
rank: 206
score: 99.19359412560097
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 206
score: 98.89698137555804
patch: right = visit CaMeL Name ( t , n , parent ) ;
rank: 206
score: 98.80078803168402
patch: || parent . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 206
score: 98.69631060431985
patch: left = ; right = child CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 206
score: 98.6251220703125
patch: -- break ; break ; ;
rank: 206
score: 98.56769353693181
patch: break ; if ; break ; break ; break ;
rank: 207
score: 99.20524796195652
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 207
score: 99.19310302734375
patch: right CaMeL Type = validator . get CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 207
score: 99.191865234375
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 207
score: 99.1404541015625
patch: right CaMeL Type = get CaMeL Scope ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 207
score: 98.89645225123355
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) . ; ;
rank: 207
score: 98.7994025735294
patch: n . get CaMeL First CaMeL Child ( ) . ensure CaMeL Typed ( ) ;
rank: 207
score: 98.71159144810268
patch: break ; null } else ;
rank: 207
score: 98.6962421123798
patch: switch ( n . get CaMeL Type ( ; n . ;
rank: 207
score: 98.62444305419922
patch: break ; break ; ; false ;
rank: 207
score: 98.56754760742187
patch: break ; break ; break ; / / }
rank: 208
score: 99.20519341362848
patch: if ( ! child CaMeL Type . is CaMeL Object CaMeL Lit CaMeL Key ( ) )
rank: 208
score: 99.19290161132812
patch: get CaMeL JS CaMeL Type ( ) . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 208
score: 99.1917724609375
patch: left CaMeL Type = get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 208
score: 99.13916829427083
patch: validator . right CaMeL Type = n . get CaMeL Value ( ) ;
rank: 208
score: 98.8961181640625
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . ; ;
rank: 208
score: 98.79935455322266
patch: continue ; case Token . NOT :
rank: 208
score: 98.69594029017857
patch: break ; default : break . to CaMeL String ( ) ; }
rank: 208
score: 98.62398274739583
patch: break ; for break ;
rank: 208
score: 98.56691487630208
patch: break ; break ; break ; break ; } break ;
rank: 209
score: 99.20484754774306
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL
rank: 209
score: 98.89527384440105
patch: right = visit CaMeL Name ( t , n , ;
rank: 209
score: 98.79912923177083
patch: old CaMeL Name = left CaMeL Type . get CaMeL Name ( ) ;
rank: 209
score: 98.71028645833333
patch: break ; break ; } } break ;
rank: 209
score: 98.69536590576172
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ;
rank: 209
score: 98.62346540178571
patch: finally { break ; break ;
rank: 209
score: 98.56684705946181
patch: break ; break ; = / / /
rank: 210
score: 99.20446246603261
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL JS CaMeL Type ( ) ) )
rank: 210
score: 99.19272682883523
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 210
score: 99.13798522949219
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n , parent ) ;
rank: 210
score: 98.7988510131836
patch: continue ; case Token . NUMBER :
rank: 210
score: 98.70943450927734
patch: return break ; break ; } else
rank: 210
score: 98.69473266601562
patch: break ; case Token . NULL : case Token . ;
rank: 210
score: 98.5668233235677
patch: break ; break ; break ; break ; if break ;
rank: 211
score: 99.20440673828125
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . to CaMeL String ( ) ;
rank: 211
score: 99.19248046875
patch: this . ensure CaMeL Typed ( t , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 211
score: 99.19059753417969
patch: typeable = child CaMeL Type . to CaMeL String ( ) ; break ;
rank: 211
score: 98.89459838867188
patch: break ; case Token . NONE : ; ;
rank: 211
score: 98.79883575439453
patch: return ; case Token . NUMBER :
rank: 211
score: 98.70885358537946
patch: } else break ; break ;
rank: 211
score: 98.69386800130208
patch: break ; case Token . NAME : case Token . ;
rank: 211
score: 98.5653076171875
patch: break ; break ; } break ; else
rank: 212
score: 99.20311482747395
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 212
score: 99.19056193033855
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 212
score: 98.89398193359375
patch: right CaMeL Type = right CaMeL Type . get CaMeL Qualified CaMeL Name ( ) ; ;
rank: 212
score: 98.79824490017361
patch: if ( this . parent . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 212
score: 98.70858001708984
patch: else break ; } catch break ;
rank: 212
score: 98.69358473557692
patch: switch ( n . get CaMeL Type ( ) ; case ;
rank: 212
score: 98.62126159667969
patch: break ; break ; break ; case
rank: 212
score: 98.56521267361111
patch: break ; break ; return ; if ;
rank: 213
score: 99.2030029296875
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ) {
rank: 213
score: 99.19210111177884
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( node . get CaMeL First CaMeL Child ( ) ) ;
rank: 213
score: 99.18881405101104
patch: typeable = t . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 213
score: 98.8929443359375
patch: right = ; left CaMeL Type = right CaMeL Type ;
rank: 213
score: 98.79759114583334
patch: return && child CaMeL Type . matches CaMeL Int 32 Context ( ) ;
rank: 213
score: 98.70756530761719
patch: } else ; return ; break ;
rank: 213
score: 98.69356536865234
patch: break ; case Token . id :
rank: 213
score: 98.62088775634766
patch: break ; break ; if false ;
rank: 213
score: 98.56463623046875
patch: break ; break ; return ; else
rank: 214
score: 99.202880859375
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL Type ( ) ) )
rank: 214
score: 99.19122869318181
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 214
score: 99.13502261513158
patch: get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 214
score: 98.89271129261364
patch: right CaMeL Type = right CaMeL Type . type ;
rank: 214
score: 98.79682752821181
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ?
rank: 214
score: 98.70717075892857
patch: return ; } } break ;
rank: 214
score: 98.69295654296874
patch: left = ; right = right CaMeL Type ;
rank: 214
score: 98.62081570095486
patch: it . next ( ; break ; ;
rank: 214
score: 98.56446668836806
patch: break ; break ; try if break ;
rank: 215
score: 99.20165143694196
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ;
rank: 215
score: 99.19051920572916
patch: get CaMeL JS CaMeL Type ( ) . ensure CaMeL Typed ( ) ;
rank: 215
score: 99.1884765625
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 215
score: 99.13467407226562
patch: validator . set CaMeL Type ( t . get CaMeL Name ( ) ) ;
rank: 215
score: 98.892333984375
patch: this . ; this . ; this . ; this . ; return this . ;
rank: 215
score: 98.79616411994485
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 215
score: 98.70629119873047
patch: return break ; } return break ;
rank: 215
score: 98.69284057617188
patch: break ; default : return false ;
rank: 215
score: 98.62025669642857
patch: break ; next { break ;
rank: 215
score: 98.56427556818181
patch: break ; break ; if break ; / / /
rank: 216
score: 99.20137293198529
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( Token . LP ) )
rank: 216
score: 99.1901346842448
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 216
score: 99.18815532483552
patch: validator . typeable = n . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 216
score: 99.13377075195312
patch: left CaMeL Type = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 216
score: 98.89194849917763
patch: child CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Id ( ) ;
rank: 216
score: 98.79534233940973
patch: LOG . : t . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 216
score: 98.70627848307292
patch: } else { break ; } else ;
rank: 216
score: 98.69254760742187
patch: break ; case ; default : break ; }
rank: 216
score: 98.61880493164062
patch: break ; break ; * / {
rank: 216
score: 98.56373948317308
patch: break ; break ; break ; if ; break ; break ;
rank: 217
score: 99.20124617866848
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 217
score: 99.18993030894886
patch: child CaMeL Type = validator . get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 217
score: 99.1880615234375
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type ) ;
rank: 217
score: 99.13345336914062
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 217
score: 98.89042524857955
patch: ; right CaMeL Type = visit CaMeL Name ( ;
rank: 217
score: 98.79514447380515
patch: n . get CaMeL Type ( ) . set CaMeL Name ( typeable ) ;
rank: 217
score: 98.70553152901786
patch: } break ; if break ;
rank: 217
score: 98.69182794744319
patch: break ; case Node . ; case Node . ;
rank: 217
score: 98.61879660866477
patch: i . out . println break false ; ; *
rank: 217
score: 98.56368679470486
patch: break ; break ; while ; * /
rank: 218
score: 99.20122612847223
patch: get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 218
score: 99.1896464029948
patch: left CaMeL Type = validator . get CaMeL First CaMeL Child ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 218
score: 99.18796608664773
patch: right = left CaMeL Type . to CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 218
score: 98.88987426757812
patch: right CaMeL Type ; right CaMeL Type = ;
rank: 218
score: 98.79444122314453
patch: break ; case Token . TYPEOF :
rank: 218
score: 98.70527479383681
patch: else = false ; } catch break ;
rank: 218
score: 98.68954467773438
patch: switch ( n . get CaMeL Type ( break ) )
rank: 218
score: 98.61836242675781
patch: finally { break ; } break ;
rank: 218
score: 98.56360541449652
patch: break ; break ; else break ; ;
rank: 219
score: 99.20116248497597
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 219
score: 99.13260498046876
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL
rank: 219
score: 98.88955508961396
patch: this . ; this . ; this . ; this . ; this . visit ;
rank: 219
score: 98.79379708426339
patch: LOG . : t . get CaMeL Type ( ) . break ;
rank: 219
score: 98.70405578613281
patch: else = break ; break ; }
rank: 219
score: 98.68951416015625
patch: left = break ; case Token . TYPE :
rank: 219
score: 98.5631103515625
patch: return ; break ; if ; break ;
rank: 220
score: 99.20061700994319
patch: validator . set CaMeL Name ( t . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 220
score: 99.18836212158203
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 220
score: 99.18639605978261
patch: ensure CaMeL Typed ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 220
score: 99.13209751674107
patch: right CaMeL Type = typeable . get CaMeL Type ( ) ;
rank: 220
score: 98.88945855034723
patch: right = ; right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 220
score: 98.79367501395089
patch: t . get CaMeL Type ( ) . case Token . LP :
rank: 220
score: 98.70368957519531
patch: return break ; break ; } }
rank: 220
score: 98.68912447415866
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 220
score: 98.61773071289062
patch: break ; break ; System . out . ;
rank: 220
score: 98.5629549893466
patch: break ; break ; break ; } break ; }
rank: 221
score: 99.19968483664773
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 221
score: 99.188232421875
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . typeable = false ;
rank: 221
score: 99.186259765625
patch: typeable = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 221
score: 99.1308837890625
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 221
score: 98.88840060763889
patch: right ; right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 221
score: 98.79366361177884
patch: result = parent . get CaMeL JS CaMeL Type ( ) ;
rank: 221
score: 98.70365687779018
patch: else break ; break ; }
rank: 221
score: 98.68907470703125
patch: break ; case ; case Token . STRING :
rank: 221
score: 98.61738586425781
patch: break ; * * / / ;
rank: 221
score: 98.56144409179687
patch: break ; break ; break ; -- break ;
rank: 222
score: 99.1881167763158
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( typeable ) ;
rank: 222
score: 99.13043212890625
patch: set CaMeL Name ( n . get CaMeL Name ( ) ) ;
rank: 222
score: 98.8876953125
patch: right CaMeL Type = node . get CaMeL Type ( ) . get CaMeL Id ( ) ;
rank: 222
score: 98.79335123697916
patch: if ( child CaMeL Type . matches CaMeL Int 32 Context ( ) )
rank: 222
score: 98.7032470703125
patch: break ; } catch ; ;
rank: 222
score: 98.689013671875
patch: break ; case Token . NAME : : ;
rank: 222
score: 98.61724090576172
patch: break ; break ; next true ;
rank: 222
score: 98.56129286024306
patch: break ; break ; break ; / *
rank: 223
score: 99.19954427083333
patch: if ( validator . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 223
score: 99.1878153483073
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 223
score: 99.185478515625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL String ( ) ;
rank: 223
score: 99.13006882440476
patch: n . get CaMeL Type ( ) . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 223
score: 98.88653009588069
patch: left CaMeL Type = right CaMeL Type ; break ;
rank: 223
score: 98.68889617919922
patch: break ; case Token . OTHER :
rank: 223
score: 98.61673736572266
patch: break ; ; ; ? break ;
rank: 223
score: 98.559814453125
patch: } if break ; break ; break ;
rank: 224
score: 99.1982666015625
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 224
score: 99.18781195746527
patch: get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 224
score: 99.18526785714286
patch: typeable = child CaMeL Type . to CaMeL String ( n . get CaMeL Type ( ) ) ;
rank: 224
score: 99.12997000558036
patch: ensure CaMeL Typed ( t . get CaMeL Name ( ) ) ;
rank: 224
score: 98.88602447509766
patch: break ; default : break ; ;
rank: 224
score: 98.79289245605469
patch: Node left CaMeL Type = n . get CaMeL Last CaMeL Child ( ) ;
rank: 224
score: 98.7008285522461
patch: break break ; else = break ;
rank: 224
score: 98.68880615234374
patch: break ; case ; case Token . NULL :
rank: 224
score: 98.61632080078125
patch: else = false ;
rank: 224
score: 98.55877130681819
patch: break ; break ; break ; if break ; else
rank: 225
score: 99.19780137803819
patch: validator . set CaMeL Type ( child CaMeL Type . get CaMeL Type ( ) ) ;
rank: 225
score: 99.1877197265625
patch: $STRING$ = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 225
score: 99.18485514322917
patch: right = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 225
score: 99.12982788085938
patch: typeable = ! child CaMeL Type . matches ( t . get CaMeL Type ( ) ) ;
rank: 225
score: 98.88575744628906
patch: right CaMeL Type = left CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 225
score: 98.79280853271484
patch: switch ( t . get CaMeL Type CaMeL Of CaMeL This ( ) ) {
rank: 225
score: 98.70022583007812
patch: break ; false ; } break ;
rank: 225
score: 98.6884765625
patch: break ; case Token . NAME : * /
rank: 225
score: 98.61580200195313
patch: break ; break ; case String . break ;
rank: 225
score: 98.55867767333984
patch: break ; break ; return ; ;
rank: 226
score: 99.19774451622597
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 226
score: 99.18730024857955
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 226
score: 99.18433779761905
patch: typeable = left CaMeL Type . to CaMeL String ( t . get CaMeL Type ( ) ) ;
rank: 226
score: 98.79249572753906
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) .
rank: 226
score: 98.69927978515625
patch: break ; else = break ; }
rank: 226
score: 98.68788452148438
patch: break ; case Token . TARGET : ; ;
rank: 226
score: 98.61580113002232
patch: break ; / / / /
rank: 226
score: 98.55833740234375
patch: break ; } break ; break ; break ;
rank: 227
score: 99.19772338867188
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL
rank: 227
score: 99.18425436580883
patch: right = n . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 227
score: 99.12930501302084
patch: if ( ! child CaMeL Type . matches ( Token . LP ) )
rank: 227
score: 98.79218292236328
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 Context ( ) )
rank: 227
score: 98.69904242621527
patch: break ; break ; this . break ;
rank: 227
score: 98.68728637695312
patch: break ; case Token . description :
rank: 227
score: 98.61558314732143
patch: break ; ; catch break ;
rank: 227
score: 98.5581766764323
patch: break ; break ; break ; if ; / / /
rank: 228
score: 99.19758436414931
patch: validator . set CaMeL Name ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 228
score: 99.1872314453125
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( typeable ) )
rank: 228
score: 99.182744140625
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type ( ) ;
rank: 228
score: 99.12828871783088
patch: right CaMeL Type = JS CaMeL Type . get CaMeL Type ( n . get CaMeL
rank: 228
score: 98.88442654079861
patch: right CaMeL Type = right CaMeL Type = right CaMeL Type . get CaMeL Type ( ;
rank: 228
score: 98.79117838541667
patch: state . ensure CaMeL Typed ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 228
score: 98.69871012369792
patch: } else { } finally = break ;
rank: 228
score: 98.68727213541666
patch: if ( ; n . get CaMeL Type ( ) == Token . ;
rank: 228
score: 98.615576171875
patch: break ; break ; ; / * break ;
rank: 228
score: 98.55810546875
patch: break ; break ; else / /
rank: 229
score: 99.18719803659539
patch: if ( ! child CaMeL Type . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) {
rank: 229
score: 99.1823397549716
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 229
score: 99.12805938720703
patch: validator . ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 229
score: 98.79096221923828
patch: n . set CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 229
score: 98.69817352294922
patch: return break ; else ; break ;
rank: 229
score: 98.68726303998162
patch: switch ( n . get CaMeL Type ( ) ) { case Token . TYPE :
rank: 229
score: 98.61545632102273
patch: break ; out . append ( $STRING$ ; break ;
rank: 229
score: 98.55758056640624
patch: break ; break ; return ; break ; }
rank: 230
score: 99.18197631835938
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 230
score: 99.12705775669643
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 230
score: 98.88291931152344
patch: right = ;
rank: 230
score: 98.79092227711396
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 Context ( ) ) {
rank: 230
score: 98.69748360770089
patch: if break ; break ; }
rank: 230
score: 98.6866096047794
patch: left = ; right = child CaMeL Type . get CaMeL Child CaMeL Count ( ;
rank: 230
score: 98.55695258246527
patch: break ; else ; break ; break ;
rank: 231
score: 99.19711701766305
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( left CaMeL Type ) ) ;
rank: 231
score: 99.18685913085938
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 231
score: 99.18171875
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . to CaMeL String ( ) ;
rank: 231
score: 99.12682524181548
patch: n . get CaMeL Scope ( ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 231
score: 98.88279965049342
patch: this . ; this . ; this . ; this . ; this . ; super . ;
rank: 231
score: 98.78999159071181
patch: throw t . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ;
rank: 231
score: 98.69734700520833
patch: return break ; } else
rank: 231
score: 98.68655056423611
patch: break ; case Token . id : ;
rank: 231
score: 98.61477661132812
patch: break ; out . next ( ;
rank: 231
score: 98.55659315321181
patch: break ; break ; / * break /
rank: 232
score: 99.1965576171875
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL
rank: 232
score: 99.18154761904762
patch: typeable = n . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 232
score: 99.12643667367789
patch: child CaMeL Type = parent . get CaMeL Name ( ) ;
rank: 232
score: 98.88276110197368
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ; right CaMeL Type = ;
rank: 232
score: 98.78941514756944
patch: t . set CaMeL Name ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 232
score: 98.69590250651042
patch: } else { break ; } else {
rank: 232
score: 98.68654378255208
patch: break ; default : break . to CaMeL String ( ;
rank: 232
score: 98.61428833007812
patch: else break ; break ;
rank: 232
score: 98.55583052201705
patch: break ; break ; if break ; break ; else
rank: 233
score: 99.19610595703125
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ;
rank: 233
score: 99.1864764873798
patch: set CaMeL Name ( t . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 233
score: 99.18101917613636
patch: right CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 233
score: 99.12623291015625
patch: set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 233
score: 98.8825454711914
patch: break ; case Token . break :
rank: 233
score: 98.78830853630515
patch: switch ( child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) )
rank: 233
score: 98.6864242553711
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . name ;
rank: 233
score: 98.6141586303711
patch: break ; break ; ; / /
rank: 234
score: 99.1958516438802
patch: validator . set CaMeL Name ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 234
score: 99.1809833233173
patch: right = t . get CaMeL First CaMeL Child ( ) ;
rank: 234
score: 99.126025390625
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 234
score: 98.88248384915866
patch: right ; switch ( n . get CaMeL Type ( ) )
rank: 234
score: 98.78830135569854
patch: n . get CaMeL Type ( ) . visit CaMeL Get CaMeL Prop ( ) ;
rank: 234
score: 98.69548034667969
patch: else { break ; break ; }
rank: 234
score: 98.68637982536765
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Message ( ) )
rank: 234
score: 98.61275227864583
patch: iter . next break ; break ; ;
rank: 234
score: 98.55555555555556
patch: break ; break ; if ; if ;
rank: 235
score: 99.19571586277173
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 235
score: 99.18614612926136
patch: right CaMeL Type = validator . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 235
score: 99.18095066236413
patch: typeable = right CaMeL Type . to CaMeL String ( left CaMeL Type . to CaMeL String ( ) ) ;
rank: 235
score: 99.12566375732422
patch: right CaMeL Type = ! child CaMeL Type . matches ( t . get CaMeL
rank: 235
score: 98.88221958705357
patch: right CaMeL Type = parent . get CaMeL Type ( ) ; ;
rank: 235
score: 98.78759087456598
patch: t . ensure CaMeL Typed ( ) ;
rank: 235
score: 98.6935043334961
patch: } else = null ; break ;
rank: 235
score: 98.68570963541667
patch: cmp = break ; case Token . ;
rank: 235
score: 98.61224365234375
patch: break ; out . add CaMeL All ( {
rank: 235
score: 98.55549452039931
patch: break ; break ; break ; else else
rank: 236
score: 99.18543590198864
patch: left CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 236
score: 99.18053617931548
patch: typeable = get CaMeL Return CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 236
score: 99.125634765625
patch: typeable = ! child CaMeL Type . matches ( n . get CaMeL
rank: 236
score: 98.88154153262867
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ; break ;
rank: 236
score: 98.7871844951923
patch: n . get CaMeL Type ( ) . set CaMeL Type (
rank: 236
score: 98.69303385416667
patch: break ; null } else = break ;
rank: 236
score: 98.68564077524039
patch: break ; case Token . NULL : right CaMeL Type = ;
rank: 236
score: 98.6119155883789
patch: break ; break ; case next ;
rank: 236
score: 98.55485704210069
patch: if break ; break ; break ; else
rank: 237
score: 99.18515014648438
patch: validator . expect CaMeL Number ( t , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 237
score: 99.17985026041667
patch: child CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 237
score: 99.12562052408855
patch: typeable = true ;
rank: 237
score: 98.88139905427632
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) . get ;
rank: 237
score: 98.78660583496094
patch: t . ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 237
score: 98.69302029079861
patch: return break ; } catch ; break ;
rank: 237
score: 98.68510606553819
patch: break ; case Char CaMeL Sequence . ;
rank: 237
score: 98.61186981201172
patch: else = false ; if break ;
rank: 237
score: 98.55253295898437
patch: break ; break ; break ; if ; /
rank: 238
score: 99.19520152698864
patch: validator . set CaMeL Name ( t . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 238
score: 99.18508911132812
patch: right CaMeL Type = validator . get CaMeL Type ( left CaMeL Type ) ;
rank: 238
score: 99.12504438920455
patch: ensure CaMeL Typed ( t , n . get CaMeL
rank: 238
score: 98.88079071044922
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type CaMeL Name ( ;
rank: 238
score: 98.78618028428819
patch: n . ensure CaMeL Typed ( t . get CaMeL Class CaMeL Name ( ) ) ;
rank: 238
score: 98.6925048828125
patch: } else { break ; else }
rank: 238
score: 98.68424718520221
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 238
score: 98.61183675130208
patch: } break ; break ; System . ;
rank: 238
score: 98.5524658203125
patch: } break ; break ; break ; break ;
rank: 239
score: 99.195048828125
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 239
score: 99.18475341796875
patch: child CaMeL Type = right CaMeL Type ;
rank: 239
score: 99.17961774553571
patch: typeable = right CaMeL Type . to CaMeL String ( n . get CaMeL Type ( ) ) ;
rank: 239
score: 98.88053894042969
patch: break ; case ; default : ;
rank: 239
score: 98.78513470818015
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 239
score: 98.6912841796875
patch: break break ; break ; break ;
rank: 239
score: 98.68419799804687
patch: break ; case Token . NAME : continue ;
rank: 239
score: 98.61164093017578
patch: break ; break ; ; else {
rank: 239
score: 98.55225719105114
patch: break ; break ; if ; * / break ;
rank: 240
score: 99.19503468480603
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ;
rank: 240
score: 99.18473677201705
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type ;
rank: 240
score: 99.179052734375
patch: typeable = child CaMeL Type . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 240
score: 99.12455444335937
patch: set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 240
score: 98.88014131433823
patch: right CaMeL Type = right CaMeL Type ; right CaMeL Type = right CaMeL Type ;
rank: 240
score: 98.78464762369792
patch: return t . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ;
rank: 240
score: 98.6912841796875
patch: break ; } else { break ; else
rank: 240
score: 98.68315294053819
patch: break ; case Token . TYPE | ;
rank: 240
score: 98.61157989501953
patch: break ; break ; ; / :
rank: 240
score: 98.55221557617188
patch: break ; break ; if break ; * /
rank: 241
score: 99.18440755208333
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . validator . expect CaMeL
rank: 241
score: 99.12318638392857
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 241
score: 98.78459337022569
patch: parent . ensure CaMeL Typed ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 241
score: 98.68277740478516
patch: break ; case Token . OR :
rank: 241
score: 98.61155700683594
patch: break ; break ; catch break ;
rank: 241
score: 98.55196380615234
patch: break ; if break ; return ;
rank: 242
score: 99.19464580829327
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 242
score: 99.18345133463542
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 242
score: 99.17900390625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 242
score: 98.87929958767361
patch: right CaMeL Type = ; right CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 242
score: 98.7830078125
patch: n . get CaMeL Type ( ) . expect CaMeL Number ( ) ;
rank: 242
score: 98.68658447265625
patch: } else { = false ; }
rank: 242
score: 98.68103966346153
patch: switch ( n . get CaMeL Type ( ) ) { ;
rank: 242
score: 98.55046929253473
patch: break ; break ; while ; return ;
rank: 243
score: 99.18302408854167
patch: JS CaMeL Type left CaMeL Type ; JS CaMeL Type right CaMeL Type ;
rank: 243
score: 99.17890625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 243
score: 99.12303161621094
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Value ( ) ) ;
rank: 243
score: 98.87844016335227
patch: right ; right CaMeL Type = right CaMeL Type ;
rank: 243
score: 98.78276824951172
patch: switch ( parent . get CaMeL Type CaMeL Of CaMeL This ( ) ) {
rank: 243
score: 98.68638780381944
patch: break ; break ; break ; null ;
rank: 243
score: 98.6807861328125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ;
rank: 243
score: 98.61100769042969
patch: break ; * / / / /
rank: 243
score: 98.54959106445312
patch: break ; return ; if break ;
rank: 244
score: 99.1944644325658
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 244
score: 99.18273344494048
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( left CaMeL Type ) )
rank: 244
score: 99.17735290527344
patch: typeable = left CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 244
score: 99.12237548828125
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL
rank: 244
score: 98.87842906605114
patch: left = ; right = visit CaMeL Name ( ;
rank: 244
score: 98.78227996826172
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( typeable ) ;
rank: 244
score: 98.68519592285156
patch: else = break ; } break ;
rank: 244
score: 98.6802090731534
patch: right CaMeL Type = break ; case Token . ;
rank: 244
score: 98.61054992675781
patch: iter . next ( ; break ;
rank: 244
score: 98.54948286576705
patch: break ; break ; } break ; } break ;
rank: 245
score: 99.19405788845486
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . report CaMeL
rank: 245
score: 99.18247584292763
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . }
rank: 245
score: 99.17727322048611
patch: ensure CaMeL Typed ( t , left CaMeL Type . to CaMeL String ( ) ) ;
rank: 245
score: 99.12208958675987
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 245
score: 98.87832641601562
patch: this . ; this . ; this . ; this . parent = parent ;
rank: 245
score: 98.78178854549633
patch: n . get CaMeL Type ( ) . visit CaMeL Name ( typeable ) ;
rank: 245
score: 98.68490600585938
patch: return ; } else = break ;
rank: 245
score: 98.67935943603516
patch: if ( ; n . get CaMeL Type ( ) == Token . TYPE )
rank: 245
score: 98.60950469970703
patch: break ; case else { break ;
rank: 245
score: 98.54749298095703
patch: break ; break ; break ; System
rank: 246
score: 99.19404907226563
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ; break ;
rank: 246
score: 99.18230523003473
patch: get CaMeL JS CaMeL Type ( left CaMeL Type ) . ensure CaMeL Typed ( ) ;
rank: 246
score: 99.17725626627605
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 246
score: 99.12198486328126
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 246
score: 98.87725830078125
patch: right CaMeL Type = right CaMeL Type ; right CaMeL Type = ;
rank: 246
score: 98.78017171223958
patch: n . set CaMeL Name ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 246
score: 98.68472290039062
patch: return ; } break ; break ;
rank: 246
score: 98.6786639873798
patch: if ( ; n . get CaMeL Type ( ) == ;
rank: 246
score: 98.6094970703125
patch: } * / } break ;
rank: 246
score: 98.54523259943181
patch: break ; break ; break ; } / / /
rank: 247
score: 99.19403076171875
patch: get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) . report CaMeL
rank: 247
score: 99.18218439275569
patch: left CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 247
score: 99.17691040039062
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Name ( ) ) ;
rank: 247
score: 99.12188720703125
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 247
score: 98.87607421875
patch: this . ; this . ; ; this . ; ; this . ;
rank: 247
score: 98.77956814236111
patch: this . ensure CaMeL Typed ( t . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 247
score: 98.68440464564732
patch: break ; } return break ;
rank: 247
score: 98.67851706112133
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ) == null )
rank: 247
score: 98.60939243861607
patch: else { break ; ; ;
rank: 248
score: 99.19336876502403
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ) {
rank: 248
score: 99.18135579427083
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( t . get CaMeL Last CaMeL Child ( ) ) ;
rank: 248
score: 99.17669677734375
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 248
score: 99.12175157335069
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 248
score: 98.87603081597223
patch: right CaMeL Type ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ;
rank: 248
score: 98.77877807617188
patch: Scriptable get CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 248
score: 98.68424769810268
patch: } else if ; return ;
rank: 248
score: 98.60845947265625
patch: break ; * * * / break ;
rank: 248
score: 98.54422760009766
patch: break ; break ; } / }
rank: 249
score: 99.19292743389423
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 249
score: 99.18126331676136
patch: left CaMeL Type = validator . get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 249
score: 99.17649147727273
patch: right = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 249
score: 98.87589721679687
patch: break ; default : child CaMeL Type = ;
rank: 249
score: 98.77840983072916
patch: result = child CaMeL Type . matches CaMeL Int 32 Context ( ) ;
rank: 249
score: 98.68377685546875
patch: break ; for ; break ;
rank: 249
score: 98.67708646334134
patch: break ; case Token . NULL : vars . put ( ;
rank: 249
score: 98.60822405133929
patch: catch break ; break ; ;
rank: 249
score: 98.54401189630681
patch: break ; break ; if ; return ; break ;
rank: 250
score: 99.19257202148438
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL
rank: 250
score: 99.176416015625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . to CaMeL String ( ) ;
rank: 250
score: 99.12112426757812
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL
rank: 250
score: 98.7783203125
patch: table . ensure CaMeL Typed ( t . get CaMeL Name ( ) ) ;
rank: 250
score: 98.68306477864583
patch: break ; } else { break ; ;
rank: 250
score: 98.67616780598958
patch: if ( ; n . get CaMeL Type ( ) ;
rank: 250
score: 98.60736955915179
patch: break ; / ++ break ;
rank: 250
score: 98.54371473524306
patch: break ; break ; / = break ;
rank: 251
score: 99.1925048828125
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 251
score: 99.18008422851562
patch: ensure CaMeL Typed ( t , n , parent ) ;
rank: 251
score: 99.17639741443452
patch: typeable = get CaMeL This CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 251
score: 99.12102399553571
patch: validator . right CaMeL Type = t . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 251
score: 98.87521701388889
patch: left CaMeL Type = ; right CaMeL Type = n . get CaMeL Type ( ) ;
rank: 251
score: 98.7774169921875
patch: System . . . . ensure CaMeL Typed ( t , n ) ;
rank: 251
score: 98.68159315321181
patch: return ; break ; } else return ;
rank: 251
score: 98.67573686079545
patch: left CaMeL Type = ; left CaMeL Type = ;
rank: 251
score: 98.60722351074219
patch: break ; ; break ; next ;
rank: 251
score: 98.54330880301339
patch: break ; } break ; ;
rank: 252
score: 99.179931640625
patch: Child left CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 252
score: 99.17636940696023
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 252
score: 98.87501627604166
patch: this . ; this . ; this . ; ; ; this . ;
rank: 252
score: 98.7773208618164
patch: if ( ! validator . is CaMeL Expression CaMeL Node ( parent ) ) {
rank: 252
score: 98.68135579427083
patch: else = break ; break ; break ;
rank: 252
score: 98.5430020419034
patch: break ; break ; if ; if ; break ;
rank: 253
score: 99.19176432291667
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 253
score: 99.17633734809027
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n ) ;
rank: 253
score: 99.12053479646382
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 253
score: 98.874755859375
patch: right ; right CaMeL Type = visit CaMeL Name ( ;
rank: 253
score: 98.77719455295139
patch: break . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 253
score: 98.68045043945312
patch: return break ; } } else ;
rank: 253
score: 98.67430768694196
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ;
rank: 253
score: 98.6050692471591
patch: } else { break ; System . out . append
rank: 253
score: 98.54286499023438
patch: break ; break ; break ; return ; ;
rank: 254
score: 99.1911853608631
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 254
score: 99.17585555366848
patch: typeable = n . get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 254
score: 99.11952311197916
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( n . get CaMeL
rank: 254
score: 98.87466195913461
patch: right CaMeL Type = visit CaMeL Name ( t , parent ;
rank: 254
score: 98.77716742621527
patch: return parent . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 254
score: 98.6775131225586
patch: break break ; } if break ;
rank: 254
score: 98.67427368164063
patch: break ; case Token . ^ Token . ;
rank: 254
score: 98.60488891601562
patch: it . next ( ; break ;
rank: 254
score: 98.54280598958333
patch: break ; ; if break ; break ;
rank: 255
score: 99.19095552884616
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 255
score: 99.17846069335937
patch: child CaMeL Type = get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 255
score: 99.175439453125
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( n ) ;
rank: 255
score: 99.11862618582589
patch: set CaMeL Type ( t . get CaMeL Name ( ) ) ;
rank: 255
score: 98.87291802300348
patch: left CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 255
score: 98.77651638454861
patch: return parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 255
score: 98.67691802978516
patch: break ; null ; break ; }
rank: 255
score: 98.67310248480902
patch: break . to CaMeL String ( ) ;
rank: 255
score: 98.60471598307292
patch: * * / break ;
rank: 255
score: 98.5426513671875
patch: break ; break ; * / if break ;
rank: 256
score: 99.1906405362216
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . visit CaMeL
rank: 256
score: 99.17807839133523
patch: right CaMeL Type = is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 256
score: 99.17537841796874
patch: typeable = left CaMeL Type . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 256
score: 99.11831430288461
patch: right CaMeL Type = n . get CaMeL Parent ( ) ;
rank: 256
score: 98.87249755859375
patch: left CaMeL Type = ; right CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 256
score: 98.7765121459961
patch: return Node CaMeL Util . op CaMeL To CaMeL Str ( typeable ) ;
rank: 256
score: 98.67511664496527
patch: return break ; break ; break ; }
rank: 256
score: 98.67286592371323
patch: sb . append ( $STRING$ ) . append ( node . get CaMeL Name ( ;
rank: 256
score: 98.60447692871094
patch: else = false ; while break ;
rank: 256
score: 98.53932698567708
patch: break ; ; break ; if break ;
rank: 257
score: 99.1906268780048
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 257
score: 99.17734375
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( child CaMeL Type ) ;
rank: 257
score: 99.17533365885417
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type ( ) ;
rank: 257
score: 98.87056477864583
patch: right CaMeL Type = parent . get CaMeL Type ( ) . to CaMeL String ( ;
rank: 257
score: 98.77629089355469
patch: n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 257
score: 98.675048828125
patch: else = break ; } }
rank: 257
score: 98.6727294921875
patch: sb . append ( $STRING$ ) . append ( this . ;
rank: 257
score: 98.60390799386161
patch: break ; ; ; ; ;
rank: 257
score: 98.53928629557292
patch: break ; break ; / ; break ;
rank: 258
score: 99.18994140625
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 258
score: 99.17494506835938
patch: child CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 258
score: 99.11626586914062
patch: set CaMeL Name ( t . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 258
score: 98.86859809027777
patch: right CaMeL Type = left CaMeL Type . get CaMeL Parent CaMeL Node ( break ) ;
rank: 258
score: 98.77617536272321
patch: this . validator . expect CaMeL Number ( t , n ) ;
rank: 258
score: 98.67405482700893
patch: if break ; } else ;
rank: 258
score: 98.67239815848214
patch: sb . append ( $STRING$ ) . append ( child CaMeL Type ;
rank: 258
score: 98.60379464285714
patch: break ; * catch break ;
rank: 258
score: 98.53922729492187
patch: break ; break ; while ; / / /
rank: 259
score: 99.18992919921875
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 259
score: 99.114990234375
patch: left CaMeL Type = n . get CaMeL Value ( ) ;
rank: 259
score: 98.86767578125
patch: right CaMeL Type = visit CaMeL Name ( t break . get CaMeL Name ( ;
rank: 259
score: 98.77568708147321
patch: switch ( child CaMeL Type . get CaMeL Type ( ) ) {
rank: 259
score: 98.6739501953125
patch: return break ; else break ; }
rank: 259
score: 98.67176011029412
patch: if ( ; right CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ;
rank: 259
score: 98.60376654730902
patch: } else { break ; System . ;
rank: 259
score: 98.53866238064236
patch: if break ; break ; break ; }
rank: 260
score: 99.18988037109375
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . visit CaMeL
rank: 260
score: 99.176025390625
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( typeable ) ) {
rank: 260
score: 99.17492094494048
patch: typeable = get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 260
score: 98.86746036305146
patch: left CaMeL Type = right CaMeL Type . get CaMeL Type CaMeL Name ( ) ;
rank: 260
score: 98.77565104166666
patch: return ensure CaMeL Typed ( parent . get CaMeL Type ( ) ) ;
rank: 260
score: 98.67385864257812
patch: return break ; else if break ;
rank: 260
score: 98.67051696777344
patch: break ; case Token . annotation :
rank: 260
score: 98.60340465198864
patch: break ; break ; case / * : break ;
rank: 260
score: 98.53827459161931
patch: break ; break ; break ; * / break ;
rank: 261
score: 99.18966909555289
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 261
score: 99.1759521484375
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right ;
rank: 261
score: 99.17397238991477
patch: right = left CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 261
score: 99.1123046875
patch: validator . set CaMeL Name ( n . get CaMeL Name ( ) ) ;
rank: 261
score: 98.86737932477679
patch: break ; ; default : ;
rank: 261
score: 98.77509416852679
patch: if ( typeable ) {
rank: 261
score: 98.66902669270833
patch: break ; case Token . LOCAL : ;
rank: 261
score: 98.60283551897321
patch: break ; else break ; ;
rank: 261
score: 98.5371981534091
patch: break ; break ; if break ; if break ;
rank: 262
score: 99.18932574728261
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 262
score: 99.11204127261513
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL Type ( ) ) )
rank: 262
score: 98.86702473958333
patch: break ; default ; ;
rank: 262
score: 98.77507781982422
patch: n . ensure CaMeL Typed ( t . get CaMeL Name ( ) ) ;
rank: 262
score: 98.67314801897321
patch: break ; } } catch ;
rank: 262
score: 98.66871473524306
patch: break ; case Token . SIZE : ;
rank: 262
score: 98.60211181640625
patch: break ; * ; break ;
rank: 262
score: 98.5367660522461
patch: break ; break ; if ; /
rank: 263
score: 99.17548828125
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 263
score: 98.77410888671875
patch: switch ( validator . get CaMeL Type ( ) ) {
rank: 263
score: 98.67307826450893
patch: break ; break ; null ;
rank: 263
score: 98.6686123934659
patch: switch ( n . get CaMeL Type ( ; }
rank: 263
score: 98.60187639508929
patch: break ; break ; } ;
rank: 263
score: 98.53591918945312
patch: break ; break ; break ; _
rank: 264
score: 99.18861083984375
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . remove CaMeL
rank: 264
score: 99.11129150390624
patch: set CaMeL Type ( t . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 264
score: 98.77264811197917
patch: switch ( n . get CaMeL Type CaMeL Of CaMeL This ( ) )
rank: 264
score: 98.6728515625
patch: } else { } break ; break ;
rank: 264
score: 98.66799926757812
patch: break ; case Token . STRING : break ;
rank: 264
score: 98.60125732421875
patch: return ; break ; ; ;
rank: 264
score: 98.534228515625
patch: break ; break ; if ; break ; /
rank: 265
score: 99.17507102272727
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( left CaMeL Type ) ) {
rank: 265
score: 99.11061724494485
patch: ensure CaMeL Typed ( t . get CaMeL Scope ( ) . get CaMeL Type CaMeL
rank: 265
score: 98.86481391059027
patch: right CaMeL Type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ;
rank: 265
score: 98.76929389105902
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 265
score: 98.67227172851562
patch: } else = break ; return ;
rank: 265
score: 98.60117594401042
patch: break ; break ; case String . ;
rank: 265
score: 98.53370666503906
patch: break ; break ; / * /
rank: 266
score: 99.18833414713542
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 266
score: 99.1723124186198
patch: return n . get CaMeL First CaMeL Child ( ) ;
rank: 266
score: 99.10953776041667
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n ) ;
rank: 266
score: 98.8646240234375
patch: left CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( break ) ;
rank: 266
score: 98.76920812270221
patch: t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 266
score: 98.67171478271484
patch: break ; } } return break ;
rank: 266
score: 98.6672722311581
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Return CaMeL Type ;
rank: 266
score: 98.6006851196289
patch: break ; break ; case 1 {
rank: 266
score: 98.53367784288194
patch: break ; if break ; break ; else
rank: 267
score: 99.18791060014205
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 267
score: 99.17498779296875
patch: get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( ) ;
rank: 267
score: 99.17230779474431
patch: left CaMeL Type = get CaMeL Function CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 267
score: 99.10950317382813
patch: set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Value ( ) ) ;
rank: 267
score: 98.86416391225961
patch: this . ; this . ; break ; case Token . ;
rank: 267
score: 98.76897430419922
patch: if ( left CaMeL Type . matches CaMeL Int 32 Context ( ) ) {
rank: 267
score: 98.67166137695312
patch: } else { } finally { }
rank: 267
score: 98.66701834542411
patch: sb . append ( $STRING$ ) . append ( this . name ;
rank: 267
score: 98.60040283203125
patch: break ; break ; case String . FALSE ;
rank: 267
score: 98.53363715277777
patch: break ; break ; break ; break /
rank: 268
score: 99.18785511363636
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 268
score: 99.17477416992188
patch: left CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 268
score: 99.17170854048295
patch: typeable = ! child CaMeL Type . matches ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 268
score: 99.10893419053819
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 268
score: 98.86389923095703
patch: right CaMeL Type = right CaMeL Type . get CaMeL Declaring CaMeL Class ( ;
rank: 268
score: 98.7681884765625
patch: if ( Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) )
rank: 268
score: 98.67162407769098
patch: break ; break ; } else if ;
rank: 268
score: 98.66689453125
patch: break ; case Token . STRING : case ;
rank: 268
score: 98.60029602050781
patch: break ; * / if break {
rank: 268
score: 98.53345404730902
patch: break ; else break ; if break ;
rank: 269
score: 99.1746356670673
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . is CaMeL Expression CaMeL Node ( ) ;
rank: 269
score: 99.17147216796874
patch: typeable = parent . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 269
score: 99.108447265625
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Length ( ) ) ;
rank: 269
score: 98.8638446514423
patch: break ; case Token . NAME : visit CaMeL Name ( ;
rank: 269
score: 98.76810455322266
patch: return parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 269
score: 98.66769409179688
patch: break ; } if ; break ;
rank: 269
score: 98.6667989095052
patch: break ; case Token . TYPE | Token . TYPE :
rank: 269
score: 98.60009765625
patch: break ; break ; while break ; ;
rank: 269
score: 98.53343200683594
patch: break ; break ; break ; t
rank: 270
score: 99.18773352581522
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 270
score: 99.1741943359375
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 270
score: 99.10800606863839
patch: get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 270
score: 98.76740858289931
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ||
rank: 270
score: 98.66568697415866
patch: if ( ; right CaMeL Type . get CaMeL Style ( ;
rank: 270
score: 98.59981689453124
patch: break ; super . break ( break ) ;
rank: 270
score: 98.53323364257812
patch: break ; break ; break ; } * /
rank: 271
score: 99.18742569633152
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 271
score: 99.17388446514423
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 271
score: 99.17094282670455
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 271
score: 99.10775417751736
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 271
score: 98.86275906032986
patch: right = ; left CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 271
score: 98.76728820800781
patch: continue ; case Token . VAR :
rank: 271
score: 98.66709681919643
patch: else break ; } catch ;
rank: 271
score: 98.66429227941177
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Modifiers ( ) ;
rank: 271
score: 98.59953090122768
patch: value break ; break ; ;
rank: 271
score: 98.53300337357955
patch: break ; break ; break ; if ; * /
rank: 272
score: 99.18659319196429
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ;
rank: 272
score: 99.17328752790179
patch: ensure CaMeL Typed ( ) ;
rank: 272
score: 99.17026192801339
patch: right CaMeL Type = get CaMeL First CaMeL Child ( n ) ;
rank: 272
score: 99.10691731770834
patch: n . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 272
score: 98.86263834635416
patch: this . ; ; this . ; this . ; ; this . ;
rank: 272
score: 98.7669677734375
patch: System . : ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 272
score: 98.66655622209821
patch: break ; false ; } }
rank: 272
score: 98.66408284505208
patch: break ; case Token . ; default : break ; }
rank: 272
score: 98.59873744419643
patch: break ; ; - 1 ;
rank: 272
score: 98.532861328125
patch: break ; break ; break ; ++ break ;
rank: 273
score: 99.17323655348558
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 273
score: 99.16994757401316
patch: typeable = ( JS CaMeL Type ) n . get CaMeL First CaMeL Child ( ) ;
rank: 273
score: 99.10660593133224
patch: right CaMeL Type = parent . get CaMeL Class ( ) . get CaMeL Type ( ) ;
rank: 273
score: 98.86229596819196
patch: right CaMeL Type = right CaMeL Type . type CaMeL Name ( ;
rank: 273
score: 98.76638614430146
patch: if ( ! child CaMeL Type . is CaMeL Expression CaMeL Node ( ) ) {
rank: 273
score: 98.66552734375
patch: break break ; } finally {
rank: 273
score: 98.6636603860294
patch: switch ( node . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 273
score: 98.59871673583984
patch: break ; ; / ? break ;
rank: 273
score: 98.53248426649306
patch: break ; break ; break ; else ;
rank: 274
score: 99.18602454144022
patch: ! child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 274
score: 99.17254028320312
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . break ;
rank: 274
score: 99.16908264160156
patch: typeable = ! child CaMeL Type . matches ( left CaMeL Type ) ;
rank: 274
score: 99.10643592247597
patch: right CaMeL Type = get CaMeL Name ( n . get CaMeL
rank: 274
score: 98.86195591517857
patch: left CaMeL Type = ; left CaMeL Type = right CaMeL Type ;
rank: 274
score: 98.7658920288086
patch: return t . get CaMeL Type ( ) . to CaMeL Array ( ) ;
rank: 274
score: 98.66526794433594
patch: } break ; false ; break ;
rank: 274
score: 98.66094207763672
patch: switch ( n . get CaMeL Type ( ; n . get CaMeL Type ;
rank: 274
score: 98.5985107421875
patch: catch break ; break ;
rank: 274
score: 98.53179931640625
patch: break ; if break ; / /
rank: 275
score: 99.18579711914063
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . print CaMeL
rank: 275
score: 99.17249755859375
patch: get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) . expect CaMeL
rank: 275
score: 99.16849949048913
patch: else child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 275
score: 99.10602213541667
patch: set CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 275
score: 98.86181640625
patch: right CaMeL Type = visit CaMeL Name ( t . get CaMeL Name ( ) ) ;
rank: 275
score: 98.76561279296875
patch: Node left CaMeL Type , right CaMeL Type ;
rank: 275
score: 98.66229248046875
patch: break ; break ; } else { }
rank: 275
score: 98.66091739430146
patch: sb . append ( $STRING$ ) . append ( n . get CaMeL Value ( ;
rank: 275
score: 98.59837341308594
patch: break ; break ; / else {
rank: 275
score: 98.53152126736111
patch: break ; if break ; / / /
rank: 276
score: 99.18553161621094
patch: set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 276
score: 99.171630859375
patch: validator . expect CaMeL Number ( t . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 276
score: 99.16830783420139
patch: typeable = n . get CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 276
score: 99.10565185546875
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n , parent ) ;
rank: 276
score: 98.86097547743056
patch: left CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Name ( ;
rank: 276
score: 98.76377650669643
patch: t . get CaMeL Type ( ) . case Token . FUNCTION :
rank: 276
score: 98.66111755371094
patch: } else { break ; else ;
rank: 276
score: 98.66039428710937
patch: break ; case Token . TYPE : : ;
rank: 276
score: 98.5981689453125
patch: break ; break ; case String . next ;
rank: 276
score: 98.53097195095486
patch: break ; break ; break ; continue ;
rank: 277
score: 99.18511284722223
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ) ;
rank: 277
score: 99.1715087890625
patch: right CaMeL Type = validator . get CaMeL Name ( ) ;
rank: 277
score: 99.16825358072917
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 277
score: 99.10529436383929
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) )
rank: 277
score: 98.86077008928571
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type ( ;
rank: 277
score: 98.76368001302083
patch: return ! child CaMeL Type . matches CaMeL Int 32 Context ( ) ;
rank: 277
score: 98.66082000732422
patch: break ; break ; } finally {
rank: 277
score: 98.66024780273438
patch: switch ( n . get CaMeL Type ( ) . equals ( $STRING$ ) )
rank: 277
score: 98.59749145507813
patch: break ; * ;
rank: 278
score: 99.18496306046195
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 278
score: 99.17142333984376
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( left CaMeL Type ) ;
rank: 278
score: 99.10506591796874
patch: get CaMeL Type ( n . get CaMeL Type ( ) ) . to CaMeL String ( ) ;
rank: 278
score: 98.86063639322917
patch: right CaMeL Type = left CaMeL Type . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 278
score: 98.66011810302734
patch: break ; this . break ; }
rank: 278
score: 98.66001981847427
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NAME :
rank: 278
score: 98.53082953559027
patch: break ; } break ; / / /
rank: 279
score: 99.18495530348558
patch: validator . child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 279
score: 99.1711758700284
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 279
score: 99.16771647135417
patch: left CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 279
score: 99.10493396577381
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 279
score: 98.85969682173295
patch: break ; case Token . NONE : ; break ;
rank: 279
score: 98.76279584099265
patch: old CaMeL Name = t . get CaMeL First CaMeL Child ( ) ; break ;
rank: 279
score: 98.6600112915039
patch: } else { } else { }
rank: 279
score: 98.65971105238971
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Declaring CaMeL Class ;
rank: 279
score: 98.59681919642857
patch: break ; while break ; ;
rank: 279
score: 98.53081665039062
patch: break ; break ; break ; if ; }
rank: 280
score: 99.18465523097827
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 280
score: 99.16725755774456
patch: typeable = child CaMeL Type . to CaMeL String ( left CaMeL Type . to CaMeL String ( ) ) ;
rank: 280
score: 98.85904541015626
patch: break ; case Token . NONE : break ;
rank: 280
score: 98.76253015854779
patch: return t . get CaMeL Type ( ) . matches CaMeL Int 32 ( ) ;
rank: 280
score: 98.65971544053819
patch: } else ; if break ; break ;
rank: 280
score: 98.65945434570312
patch: break ; default : log . error ( $STRING$ ) ;
rank: 280
score: 98.59640938895089
patch: finally { break ; } ;
rank: 280
score: 98.53078884548611
patch: break ; ; break ; break ; }
rank: 281
score: 99.18398030598958
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 281
score: 99.1707012469952
patch: validator . set CaMeL Name ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 281
score: 99.16685546875
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 281
score: 99.10383043791118
patch: right CaMeL Type = t . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 281
score: 98.85879516601562
patch: left CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 281
score: 98.7623291015625
patch: continue . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 281
score: 98.65960693359375
patch: break break ; } finally ;
rank: 281
score: 98.6588134765625
patch: if ( ; right CaMeL Type . get CaMeL Name ( ) . length ( ;
rank: 281
score: 98.59600830078125
patch: break ; break ; case int { break ;
rank: 281
score: 98.53009033203125
patch: break ; return ;
rank: 282
score: 99.18388671875
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ;
rank: 282
score: 99.17032877604167
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . get CaMeL
rank: 282
score: 99.16683799342105
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) ; break ;
rank: 282
score: 98.76042175292969
patch: return t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 282
score: 98.65868268694196
patch: } break ; null * /
rank: 282
score: 98.65807427300348
patch: break ; case Token . TYPE : :
rank: 282
score: 98.59563446044922
patch: break ; * / break ; ;
rank: 282
score: 98.529541015625
patch: break ; break ; break ; break ; =
rank: 283
score: 99.18380172164352
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ) ;
rank: 283
score: 99.17014723557692
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 283
score: 98.85743931361607
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ;
rank: 283
score: 98.76034545898438
patch: n . ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 283
score: 98.65747788373162
patch: sb . append ( $STRING$ ) . append ( n . get CaMeL Name ( ;
rank: 283
score: 98.65664236886161
patch: break ; null = break ;
rank: 283
score: 98.5947509765625
patch: } * * ;
rank: 283
score: 98.52951485770089
patch: break ; break ; / *
rank: 284
score: 99.1837158203125
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . to CaMeL String ( ) ;
rank: 284
score: 98.75994873046875
patch: continue ; case Token . BITNOT :
rank: 284
score: 98.65708923339844
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Style ( ;
rank: 284
score: 98.656201171875
patch: else = break ;
rank: 284
score: 98.59454345703125
patch: } * * * / /
rank: 284
score: 98.52943420410156
patch: break ; break ; / break ;
rank: 285
score: 99.18352716619319
patch: right CaMeL Type = get CaMeL Parameter CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 285
score: 99.16991077769886
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . break ;
rank: 285
score: 99.16588745117187
patch: right = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 285
score: 99.10041246916118
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 285
score: 98.75974527994792
patch: LOG . : t . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 285
score: 98.65705702039931
patch: break ; case Token . type : ;
rank: 285
score: 98.65552629743304
patch: return break ; } if ;
rank: 285
score: 98.5936279296875
patch: break ; out . next ( ; break ; ;
rank: 285
score: 98.52939453125
patch: break ; break ; } / / / /
rank: 286
score: 99.16542154947916
patch: right CaMeL Type = child CaMeL Type . get CaMeL String ( ) ;
rank: 286
score: 98.85540008544922
patch: right CaMeL Type = right CaMeL Type . to CaMeL String ( ) ; ;
rank: 286
score: 98.75968424479167
patch: if ( validator . parent . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 286
score: 98.65657043457031
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . value ;
rank: 286
score: 98.65485975477431
patch: } else ; break ; break ; }
rank: 286
score: 98.59267752511161
patch: break ; ; break ; case
rank: 286
score: 98.52901611328124
patch: break ; break ; break ; } if ;
rank: 287
score: 99.16929560122283
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 287
score: 99.16524047851563
patch: child CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 287
score: 99.09945678710938
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL
rank: 287
score: 98.85396321614583
patch: right = ; right CaMeL Type = right CaMeL Type ;
rank: 287
score: 98.75896538628473
patch: n . get CaMeL Type ( ) . ensure CaMeL Typed ( t , n ) ;
rank: 287
score: 98.65617370605469
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . name ;
rank: 287
score: 98.6544189453125
patch: break ; } finally {
rank: 287
score: 98.59262520926339
patch: / * ] = break ;
rank: 287
score: 98.52887517755681
patch: break ; break ; if break ; ; break ;
rank: 288
score: 99.18284776475694
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) ; break ;
rank: 288
score: 99.16508345170455
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 288
score: 99.09808640252976
patch: validator . set CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 288
score: 98.85390403053977
patch: break ; case Token . NAME : ; break ;
rank: 288
score: 98.75879669189453
patch: this . validator . expect CaMeL Number ( t , n , parent ) ;
rank: 288
score: 98.65617101332721
patch: switch ( node . get CaMeL Type ( ) . get CaMeL Value ( ) )
rank: 288
score: 98.65418158637152
patch: return break ; } break ; null ;
rank: 288
score: 98.59246826171875
patch: break ; ; ; ;
rank: 288
score: 98.52885437011719
patch: break ; break ; if ; =
rank: 289
score: 99.18279157366071
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 289
score: 99.16861979166667
patch: set CaMeL Name ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 289
score: 99.16476779513889
patch: typeable = t . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 289
score: 99.09785679408482
patch: if ( ! child CaMeL Type . equals ( n . get CaMeL
rank: 289
score: 98.75819227430556
patch: LOG . : t . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 289
score: 98.65550013950893
patch: right = right CaMeL Type ;
rank: 289
score: 98.65211704799107
patch: return ; } catch break ;
rank: 289
score: 98.59160505022321
patch: } * * ; break /
rank: 289
score: 98.52846457741477
patch: break ; break ; return ; break ; break ;
rank: 290
score: 99.18275553385416
patch: child CaMeL Type = child CaMeL Type . get CaMeL Name ( ) ;
rank: 290
score: 99.16860961914062
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 290
score: 99.09764946831598
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . child CaMeL
rank: 290
score: 98.8533935546875
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ; break ;
rank: 290
score: 98.75804138183594
patch: table . ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 290
score: 98.65537396599265
patch: left = ; right = right CaMeL Type . get CaMeL Parent CaMeL Node ( ;
rank: 290
score: 98.65193394252232
patch: break ; ; break ; }
rank: 291
score: 99.16829780910327
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 291
score: 99.16390991210938
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 291
score: 99.0975112915039
patch: right CaMeL Type = ! child CaMeL Type . matches ( n . get CaMeL
rank: 291
score: 98.85215928819444
patch: this . ; this . ; this . ; this . ; this . this . ;
rank: 291
score: 98.75663926866319
patch: return t . get CaMeL Type ( ) . visit CaMeL Name ( typeable ) ;
rank: 291
score: 98.65528869628906
patch: break ; case Token . namespace :
rank: 291
score: 98.65119171142578
patch: } break ; null } break ;
rank: 291
score: 98.59107055664063
patch: i . add CaMeL All ( break ) ;
rank: 291
score: 98.5283203125
patch: break ; break ; if ; ++ break ;
rank: 292
score: 99.18210073617789
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 292
score: 99.168212890625
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( t ) ;
rank: 292
score: 99.16335042317708
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 292
score: 99.09747992621527
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . child CaMeL
rank: 292
score: 98.75625375600961
patch: } switch ( n . get CaMeL Type ( ) ) {
rank: 292
score: 98.65514026988636
patch: left = ; right = right CaMeL Type . ;
rank: 292
score: 98.65091281467014
patch: return break ; } else ; break ;
rank: 292
score: 98.59085083007812
patch: break ; / / if break {
rank: 292
score: 98.52775743272569
patch: break ; break ; * / / /
rank: 293
score: 99.18196968410327
patch: validator . set CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ) ;
rank: 293
score: 99.16817801339286
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 293
score: 99.1632941750919
patch: typeable = child CaMeL Type . get CaMeL String ( left CaMeL Type ) ;
rank: 293
score: 99.09735979352679
patch: get CaMeL Type ( n . get CaMeL Type ( ) ) .
rank: 293
score: 98.85126604352679
patch: right CaMeL Type = visit CaMeL Name ( t , n ) ;
rank: 293
score: 98.75607479319854
patch: break . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 293
score: 98.65489705403645
patch: if ( ; right CaMeL Type . equals ( $STRING$ ;
rank: 293
score: 98.65007866753473
patch: } else { if ; break ; }
rank: 293
score: 98.58994838169643
patch: break ; * break ; ;
rank: 293
score: 98.52773215553977
patch: break ; break ; break ; if ; / /
rank: 294
score: 99.18187662760417
patch: validator . child CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 294
score: 99.16793690557066
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 294
score: 99.16239013671876
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 294
score: 98.85115356445313
patch: right CaMeL Type = super . visit ( ;
rank: 294
score: 98.75543619791667
patch: return . get CaMeL Type ( ) . is CaMeL Empty ( ) ;
rank: 294
score: 98.65460968017578
patch: break ; case Token . BLOCK :
rank: 294
score: 98.64973449707031
patch: return break ; } } else {
rank: 294
score: 98.58957345145089
patch: } break ; ; break ;
rank: 294
score: 98.52765362079327
patch: break ; break ; if ; break ; break ; break ;
rank: 295
score: 99.18182373046875
patch: validator . set CaMeL Name ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 295
score: 99.167626953125
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 295
score: 99.16197265625
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 295
score: 99.09694417317708
patch: throw child CaMeL Type . to CaMeL String ( ) ;
rank: 295
score: 98.84892442491319
patch: right CaMeL Type = right CaMeL Type . get CaMeL First CaMeL Child ( ) ; ;
rank: 295
score: 98.75497436523438
patch: break ; case Token . GET _ REF _ SPECIAL :
rank: 295
score: 98.65401204427083
patch: ret = break ; case Token . ;
rank: 295
score: 98.64969889322917
patch: } else { return ; break ; }
rank: 295
score: 98.58943314985795
patch: } break ; break ; System . out . print
rank: 295
score: 98.52756076388889
patch: } break ; break ; break ; }
rank: 296
score: 99.18162899925595
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ,
rank: 296
score: 99.167587890625
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 296
score: 98.8486687155331
patch: left CaMeL Type = left CaMeL Type ; right CaMeL Type = right CaMeL Type ;
rank: 296
score: 98.75488959418402
patch: return get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ,
rank: 296
score: 98.65399528952206
patch: if ( ; right CaMeL Type . get CaMeL Style ( ) . equals ( ;
rank: 296
score: 98.64906141493056
patch: else = break ; } else return ;
rank: 296
score: 98.58934783935547
patch: break ; break ; } * *
rank: 297
score: 99.16758422851562
patch: validator . ensure CaMeL Typed ( t , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 297
score: 99.16062622070312
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 297
score: 99.09620361328125
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 297
score: 98.84780883789062
patch: right CaMeL Type = right CaMeL Type . get CaMeL Name ( break ) ;
rank: 297
score: 98.75428771972656
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 297
score: 98.65375434027777
patch: break ; case Token . NUMBER : ;
rank: 297
score: 98.64905657087054
patch: break ; else = false ;
rank: 297
score: 98.58905029296875
patch: break ; ; / / * break /
rank: 297
score: 98.52692328559027
patch: break ; } break ; } break ;
rank: 298
score: 99.18101806640625
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL
rank: 298
score: 99.1673075358073
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL Type ( ) ) ;
rank: 298
score: 99.16047807173295
patch: typeable = ! child CaMeL Type . matches ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 298
score: 99.0961681547619
patch: set CaMeL Type ( get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 298
score: 98.84744601779514
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent CaMeL Node ( ; * /
rank: 298
score: 98.75391303168402
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) _
rank: 298
score: 98.65343128551136
patch: break ; default : throw new ; } break ;
rank: 298
score: 98.64854431152344
patch: break break ; } else { }
rank: 298
score: 98.58901541573661
patch: break ; if break ; ;
rank: 298
score: 98.52406819661458
patch: break ; break ; else / break ;
rank: 299
score: 99.16038513183594
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 299
score: 99.09605006167763
patch: set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 299
score: 98.84722900390625
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . type ( ;
rank: 299
score: 98.75366928998162
patch: t . get CaMeL Type ( ) . set CaMeL Name ( typeable ) ;
rank: 299
score: 98.65299479166667
patch: break ; case Token . ; case Token . class :
rank: 299
score: 98.64805772569444
patch: break ; false ; } catch break ;
rank: 299
score: 98.58876953125
patch: break ; break ; case String . 0 ;
rank: 300
score: 99.18024811921296
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 300
score: 99.16717529296875
patch: right CaMeL Type = validator . op CaMeL To CaMeL Str ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 300
score: 99.09554443359374
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 300
score: 98.84721105238971
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 300
score: 98.7535400390625
patch: n . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 300
score: 98.65296519886364
patch: break ; case Token . ; default : break ;
rank: 300
score: 98.64788818359375
patch: break ; } } else {
rank: 300
score: 98.58826446533203
patch: break ; break ; int * /
rank: 300
score: 98.52254638671874
patch: break ; break ; } else if break ;
rank: 301
score: 99.18019205729166
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 301
score: 98.84700281479779
patch: left ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 301
score: 98.65286254882812
patch: break ; case Token . ALL :
rank: 301
score: 98.64644622802734
patch: break ; * break ; break ;
rank: 301
score: 98.5882568359375
patch: break ; break ; ; / ;
rank: 301
score: 98.52210083007813
patch: break ; break ; break ; / / *
rank: 302
score: 99.16675415039063
patch: right CaMeL Type = validator . get CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 302
score: 99.1599349975586
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL
rank: 302
score: 99.09500558035714
patch: n . get CaMeL Type ( ) . get CaMeL Type ( ) . to CaMeL String ( ) :
rank: 302
score: 98.84699842664931
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type CaMeL Name ( ) ; ;
rank: 302
score: 98.75310516357422
patch: return t . get CaMeL Type ( ) . is CaMeL Empty ( ) ;
rank: 302
score: 98.65277099609375
patch: break ; case Token . ; ; ;
rank: 302
score: 98.64635467529297
patch: return ; } else ; break ;
rank: 302
score: 98.58802625868056
patch: else { break ; } if break ;
rank: 302
score: 98.52198282877605
patch: break ; break ; break ; if ; break ; }
rank: 303
score: 99.1796875
patch: validator . set CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ;
rank: 303
score: 99.16609330610795
patch: right CaMeL Type = validator . visit CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 303
score: 98.84670840992646
patch: right CaMeL Type = right CaMeL Type . to CaMeL Lower CaMeL Case ( ; ;
rank: 303
score: 98.75286865234375
patch: return Node CaMeL Util . is CaMeL Expression CaMeL Node ( typeable ) ;
rank: 303
score: 98.65264892578125
patch: left = ; right = right CaMeL Type . get CaMeL Id ( ) ;
rank: 303
score: 98.64608328683036
patch: return ; } if break ;
rank: 303
score: 98.52178955078125
patch: break ; break ; break ; if ; break
rank: 304
score: 99.16544596354167
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( $STRING$ ) ;
rank: 304
score: 99.1592041015625
patch: typeable = t . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 304
score: 98.8467041015625
patch: right CaMeL Type = child CaMeL Type . get CaMeL Parent ( ) ;
rank: 304
score: 98.75176323784723
patch: return . to CaMeL Array ( ) ;
rank: 304
score: 98.65264129638672
patch: if ( ; right CaMeL Type . get CaMeL Type CaMeL Name ( ) ;
rank: 304
score: 98.64595031738281
patch: } else break ; break ; }
rank: 304
score: 98.5865987141927
patch: break ; break ; next
rank: 304
score: 98.52149047851563
patch: break ; break ; if ; else break ;
rank: 305
score: 99.17901141826923
patch: validator . right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 305
score: 99.16522216796875
patch: validator = get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 305
score: 99.159072265625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 305
score: 99.09419555664063
patch: right CaMeL Type = get CaMeL Class CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 305
score: 98.84660070082721
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . type ;
rank: 305
score: 98.75104118795956
patch: continue . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 305
score: 98.65237862723214
patch: break ; default : t . set CaMeL Name ( $STRING$ ) ;
rank: 305
score: 98.58649291992188
patch: break ; break ; out . next break ;
rank: 305
score: 98.52073974609375
patch: break ; break ; break ; break ; --
rank: 306
score: 99.17873128255208
patch: if ( validator . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 306
score: 99.16436767578125
patch: validator = get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 306
score: 99.09400227864583
patch: if ( ! child CaMeL Type . equals ( Token . FUNCTION ) )
rank: 306
score: 98.84656871448864
patch: break ; case ; case Token . break : ;
rank: 306
score: 98.750732421875
patch: n . get CaMeL Type ( ) . visit CaMeL Name ( t , n ) ;
rank: 306
score: 98.65222886029412
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Length ( ) )
rank: 306
score: 98.64518229166667
patch: return break ; else ;
rank: 306
score: 98.58588518415179
patch: else = true ; break ;
rank: 306
score: 98.52059500558036
patch: break ; break ; try /
rank: 307
score: 99.1785888671875
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 307
score: 99.1639404296875
patch: right CaMeL Type = validator . get CaMeL
rank: 307
score: 99.158955078125
patch: get CaMeL JS CaMeL Type ( n ) . ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 307
score: 99.09376878004808
patch: child CaMeL Type = t . get CaMeL Name ( ) ;
rank: 307
score: 98.84598795572917
patch: right CaMeL Type = visit CaMeL Name ( ; * /
rank: 307
score: 98.75066375732422
patch: return t . get CaMeL Type ( ) . is CaMeL Local ( ) ;
rank: 307
score: 98.65171305338542
patch: default : throw new Illegal CaMeL State CaMeL Exception ; }
rank: 307
score: 98.64494977678571
patch: else { break ; } }
rank: 307
score: 98.58537292480469
patch: break ; break ; / else ;
rank: 307
score: 98.51982286241319
patch: break ; if break ; ; break ;
rank: 308
score: 99.17717950994319
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL
rank: 308
score: 99.163408203125
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 308
score: 99.15882568359375
patch: left CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type ) ;
rank: 308
score: 99.09301147460937
patch: set CaMeL Type ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 308
score: 98.84596880744485
patch: right CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ) . get ;
rank: 308
score: 98.75058419363839
patch: n . get CaMeL Type ( ) . case Token . RETURN :
rank: 308
score: 98.6510009765625
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . value ;
rank: 308
score: 98.64454345703125
patch: } catch break ;
rank: 308
score: 98.58401828342014
patch: i . out . println break ) ;
rank: 308
score: 98.51981353759766
patch: break ; if ; break ; else
rank: 309
score: 99.17715657552084
patch: validator . left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 309
score: 99.16297978940217
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . typeable = true ;
rank: 309
score: 99.1585546875
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 309
score: 98.84552680121527
patch: break ; default : visit CaMeL Name ;
rank: 309
score: 98.74995561079545
patch: type = n . get CaMeL Type ( ) ;
rank: 309
score: 98.65087890625
patch: switch ( n . get CaMeL Type ( ) . equals ( $STRING$ ;
rank: 309
score: 98.64197649274554
patch: if ( break ; break ;
rank: 309
score: 98.51860809326172
patch: break ; break ; new break ;
rank: 310
score: 99.17693481445312
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL
rank: 310
score: 99.161845703125
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 310
score: 99.158017578125
patch: typeable = right CaMeL Type . to CaMeL String ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ;
rank: 310
score: 99.09237816220238
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Value CaMeL
rank: 310
score: 98.74971008300781
patch: continue ; case Token . GETELEM :
rank: 310
score: 98.65086454503677
patch: left = ; right = right CaMeL Type . get CaMeL Child CaMeL Count ( ;
rank: 310
score: 98.63991001674107
patch: } else = false ; }
rank: 310
score: 98.58344116210938
patch: break ; break ; case String . TRUE ;
rank: 310
score: 98.51853942871094
patch: break ; break ; break ; ++
rank: 311
score: 99.09218236019737
patch: set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 311
score: 98.8446044921875
patch: left = ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) ;
rank: 311
score: 98.7496337890625
patch: return ; case Token . POS :
rank: 311
score: 98.65061322380515
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ;
rank: 311
score: 98.63953508649554
patch: return * break ; break ;
rank: 311
score: 98.58327811104911
patch: } break ; break ; int
rank: 311
score: 98.51769409179687
patch: return ; break ; break ; if break ;
rank: 312
score: 99.1768465909091
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 312
score: 99.161279296875
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type = typeable ;
rank: 312
score: 99.15782099184783
patch: typeable = n . get CaMeL JS CaMeL Type ( left CaMeL Type ) . to CaMeL String ( ) ;
rank: 312
score: 99.09093656994048
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Value ( ) . get CaMeL Type CaMeL
rank: 312
score: 98.74930826822917
patch: return ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 312
score: 98.6504150390625
patch: break ; case Token . NULL : : ;
rank: 312
score: 98.63840738932292
patch: return break ; } } if break ;
rank: 312
score: 98.581787109375
patch: break ; break ; out . out ; }
rank: 312
score: 98.51754421657986
patch: break ; break ; / / break /
rank: 313
score: 99.17669921875
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( child CaMeL Type . get CaMeL First CaMeL Child ( ) ) )
rank: 313
score: 99.1576171875
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 313
score: 98.84423149956598
patch: child CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type ( ;
rank: 313
score: 98.74785614013672
patch: return ; case Token . VAR :
rank: 313
score: 98.65000697544643
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 313
score: 98.63809543185764
patch: break ; false ; } else return ;
rank: 313
score: 98.5816650390625
patch: break ; else { break ; }
rank: 313
score: 98.51711203835227
patch: break ; break ; while ; break ; break ;
rank: 314
score: 99.1764803799716
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL Type ( ) ) ) {
rank: 314
score: 99.1603252704327
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 314
score: 99.08991834852431
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL
rank: 314
score: 98.64993896484376
patch: break ; case Token . right CaMeL Type :
rank: 314
score: 98.63794708251953
patch: break ; } } } break ;
rank: 314
score: 98.58121948242187
patch: break ; out . next ( ; return ;
rank: 314
score: 98.51582475142045
patch: if break ; break ; break ; if break ;
rank: 315
score: 99.17641977163461
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 315
score: 99.1598788174716
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 315
score: 99.1571484375
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 315
score: 99.08970811631944
patch: right CaMeL Type = get CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 315
score: 98.84268188476562
patch: right CaMeL Type = right CaMeL Type . get CaMeL Canonical CaMeL Name ( ;
rank: 315
score: 98.6499382467831
patch: if ( right CaMeL Type . get CaMeL Type ( ) . equals ( $STRING$ ;
rank: 315
score: 98.58049926757812
patch: break ; break ; case / : break ;
rank: 315
score: 98.5156021118164
patch: break ; break ; if ; ?
rank: 316
score: 99.17604282924107
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ;
rank: 316
score: 99.15962146577381
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( child CaMeL Type ) )
rank: 316
score: 99.15692138671875
patch: ensure CaMeL Typed ( n , left CaMeL Type . to CaMeL String ( ) ) ;
rank: 316
score: 99.08969116210938
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL
rank: 316
score: 98.84220064603366
patch: left CaMeL Type = visit CaMeL Name ( t , n ;
rank: 316
score: 98.746435546875
patch: if ( ! validator . is CaMeL Expression CaMeL Node ( parent ) )
rank: 316
score: 98.649462890625
patch: left CaMeL Type ; right CaMeL Type = ; right CaMeL Type = ;
rank: 316
score: 98.58007049560547
patch: break ; break ; ; 0 ;
rank: 316
score: 98.5150146484375
patch: break ; break ; if ; + break ;
rank: 317
score: 99.17576090494792
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 317
score: 99.15938626802884
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 317
score: 99.08950805664062
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 317
score: 98.84200286865234
patch: right CaMeL Type = visit CaMeL Name ( t . get CaMeL Name ( ;
rank: 317
score: 98.7461446126302
patch: Scriptable get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 317
score: 98.64926979758523
patch: if ( right CaMeL Type == Token . TYPE )
rank: 317
score: 98.63712565104167
patch: break ; break ; else = break ;
rank: 317
score: 98.57996477399554
patch: * * * break ; /
rank: 317
score: 98.51473999023438
patch: break ; break ; break ; if ; = break ;
rank: 318
score: 99.1755603608631
patch: child CaMeL Type = child CaMeL Type . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 318
score: 99.1592684659091
patch: ensure CaMeL Typed ( t , left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 318
score: 99.15602708899456
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 318
score: 98.84131673177083
patch: right CaMeL Type = left CaMeL Type . get CaMeL Parent ( ) ;
rank: 318
score: 98.74445343017578
patch: this . validator . expect CaMeL Number ( t , left CaMeL Type ) ;
rank: 318
score: 98.64881896972656
patch: break ; case Token . GLOBAL :
rank: 318
score: 98.63679504394531
patch: return break ; } break ; null
rank: 318
score: 98.51388549804688
patch: break ; break ; break ; break ; return ; }
rank: 319
score: 99.17530059814453
patch: validator . set CaMeL JS CaMeL Type ( left CaMeL Type ) ; break ;
rank: 319
score: 99.15578206380208
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 319
score: 99.08868117559524
patch: set CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 319
score: 98.84109836154514
patch: break ; case Token . NO : ;
rank: 319
score: 98.74317842371323
patch: return . get CaMeL First CaMeL Child ( ) . get CaMeL Node ( ) ;
rank: 319
score: 98.64869520399306
patch: right = ; right CaMeL Type = ;
rank: 319
score: 98.63668823242188
patch: } else { } catch ; }
rank: 319
score: 98.57953752790179
patch: } * ; break ; ;
rank: 320
score: 99.1751171875
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) ;
rank: 320
score: 99.1583251953125
patch: JS CaMeL Type child CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 320
score: 98.84039306640625
patch: right CaMeL Type = visit CaMeL Name ( break . get CaMeL Name ( ) ) ;
rank: 320
score: 98.74163348858173
patch: switch ( typeable . get CaMeL Type ( ) ) {
rank: 320
score: 98.64809006911058
patch: break ; default : t . set CaMeL Name ( name ;
rank: 320
score: 98.63648139105902
patch: else { break ; } } break ;
rank: 320
score: 98.5130615234375
patch: break ; break ; break ; break ; } /
rank: 321
score: 99.17415364583333
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 321
score: 99.1582919034091
patch: right CaMeL Type = validator . is CaMeL Expression CaMeL Node ( t . get CaMeL Type ( ) ) ;
rank: 321
score: 99.15525390625
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL String ( ) ;
rank: 321
score: 99.08843672902961
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . {
rank: 321
score: 98.83870442708333
patch: right CaMeL Type = ; right CaMeL Type = right CaMeL Type . ;
rank: 321
score: 98.7415771484375
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( parent . get CaMeL
rank: 321
score: 98.6479961688702
patch: if ; switch ( n . get CaMeL Type ( ) ;
rank: 321
score: 98.63623046875
patch: break ; * * / }
rank: 321
score: 98.57929229736328
patch: } * * * / break ;
rank: 321
score: 98.51296657986111
patch: break ; break ; else else break ;
rank: 322
score: 99.17401677911931
patch: validator . set CaMeL Name ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 322
score: 99.15822531960227
patch: child CaMeL Type = validator . get CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 322
score: 99.15521918402777
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 322
score: 98.83807779947917
patch: right CaMeL Type = right CaMeL Type = right CaMeL Type . type ;
rank: 322
score: 98.74140481387867
patch: return . get CaMeL Type ( ) . visit CaMeL Name ( typeable ) ;
rank: 322
score: 98.64762369791667
patch: break ; case Token . ; vars . put ( ;
rank: 322
score: 98.63600158691406
patch: return break ; } finally { }
rank: 322
score: 98.57928466796875
patch: else break ; break ; ; ;
rank: 322
score: 98.51296164772727
patch: break ; break ; if break ; else break ;
rank: 323
score: 99.173828125
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( ) ) ;
rank: 323
score: 99.15814678485577
patch: right CaMeL Type = current . get CaMeL Type ( ) ;
rank: 323
score: 99.1549072265625
patch: typeable = n . get CaMeL First CaMeL Child ( ) ; break ;
rank: 323
score: 99.08740234375
patch: set CaMeL Type ( n . get CaMeL Scope ( ) . get CaMeL Type CaMeL
rank: 323
score: 98.83793131510417
patch: child CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Name ( ;
rank: 323
score: 98.74095740685097
patch: System . . . . ensure CaMeL Typed ( parent ) ;
rank: 323
score: 98.64731852213542
patch: left CaMeL Type = ; right CaMeL Type = ; ;
rank: 323
score: 98.6357421875
patch: break break ; else return ;
rank: 323
score: 98.57813178168402
patch: -- break ; break ; if break ;
rank: 323
score: 98.51287163628473
patch: break ; break ; else return ; }
rank: 324
score: 99.17348069411058
patch: validator . set CaMeL Name ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 324
score: 99.15719401041666
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( ) ;
rank: 324
score: 99.15489130434783
patch: typeable = left CaMeL Type . to CaMeL String ( left CaMeL Type . to CaMeL String ( ) ) ;
rank: 324
score: 98.83781294389205
patch: break ; default : break ; } if ( ;
rank: 324
score: 98.73964029947916
patch: return . get CaMeL Type ( ) . is CaMeL All ( ) ;
rank: 324
score: 98.64690085018383
patch: left = ; right = child CaMeL Type . get CaMeL Qualified CaMeL Name ( ;
rank: 324
score: 98.63551839192708
patch: } if ; break ;
rank: 324
score: 98.57790305397727
patch: i . out . println break false ; ; ;
rank: 324
score: 98.51264784071181
patch: break ; if break ; } break ;
rank: 325
score: 99.17341796875
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Parameter CaMeL Type ( ) ;
rank: 325
score: 99.15479193793402
patch: right = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 325
score: 99.08717854817708
patch: warn ( t . get CaMeL Type ( ) ) ;
rank: 325
score: 98.83760288783482
patch: right CaMeL Type = ; left CaMeL Type = right CaMeL Type ;
rank: 325
score: 98.73931329900569
patch: n . get CaMeL Type ( ) . break ;
rank: 325
score: 98.64661362591912
patch: left = ; right = child CaMeL Type . get CaMeL First CaMeL Child ( ;
rank: 325
score: 98.63410186767578
patch: } else ; if ( break ;
rank: 325
score: 98.57765197753906
patch: break ; ; ; / / :
rank: 325
score: 98.51251831054688
patch: break ; break ; / / } break ;
rank: 326
score: 99.154658203125
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 326
score: 99.0867919921875
patch: right CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL Type ( ) ) ;
rank: 326
score: 98.8368278952206
patch: right CaMeL Type = left CaMeL Type ; right CaMeL Type = right CaMeL Type ;
rank: 326
score: 98.73920036764706
patch: System . . . . ensure CaMeL Typed ( t , n , parent ) ;
rank: 326
score: 98.64652252197266
patch: break ; default : break break ;
rank: 326
score: 98.5772933959961
patch: break ; * ; if break ;
rank: 326
score: 98.51211886935764
patch: break ; break ; println ; break ;
rank: 327
score: 99.17313639322917
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 327
score: 99.15680486505681
patch: child CaMeL Type = validator . get CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 327
score: 99.15464274088542
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 327
score: 99.08671569824219
patch: if ( ! child CaMeL Type . equals ( Node CaMeL Util . op CaMeL
rank: 327
score: 98.83660481770833
patch: right CaMeL Type = ; right CaMeL Type = visit CaMeL Name ( ;
rank: 327
score: 98.7389907836914
patch: state . ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 327
score: 98.64633614676339
patch: break ; default : throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 327
score: 98.63346644810268
patch: } else { } finally {
rank: 327
score: 98.5767578125
patch: break ; 0 ;
rank: 327
score: 98.5116455078125
patch: break ; break ; break ; * / /
rank: 328
score: 99.173095703125
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 328
score: 99.15653076171876
patch: right CaMeL Type = set CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 328
score: 99.154296875
patch: typeable = ! child CaMeL Type . matches CaMeL Int 32 ( ) ;
rank: 328
score: 99.0862567608173
patch: left CaMeL Type = parent . get CaMeL Name ( ) ;
rank: 328
score: 98.83624267578125
patch: right CaMeL Type = ; right CaMeL Type = n . get CaMeL Type ( ) ;
rank: 328
score: 98.73886108398438
patch: get CaMeL JS CaMeL Type ( n ) . ensure CaMeL Typed ( ) ;
rank: 328
score: 98.64632415771484
patch: break ; case Token . WARNING :
rank: 328
score: 98.63186984592014
patch: return break ; } else = false ;
rank: 328
score: 98.57650756835938
patch: else break ; break ; break ;
rank: 328
score: 98.51024280894886
patch: break ; break ; if break ; break ; ;
rank: 329
score: 99.1729403409091
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . add CaMeL Type (
rank: 329
score: 99.1561748798077
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . matches CaMeL Int 32 Context ( ) ;
rank: 329
score: 99.15391031901042
patch: right = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 329
score: 98.83617401123047
patch: right CaMeL Type = right CaMeL Type . type ( ) . type ( ;
rank: 329
score: 98.73831176757812
patch: break ; case Token . REF _ SPECIAL :
rank: 329
score: 98.64620632595486
patch: body = break ; case Token . ;
rank: 329
score: 98.63175964355469
patch: break ; false ; } else ;
rank: 329
score: 98.57617950439453
patch: break ; break ; / / ;
rank: 329
score: 98.51017456054687
patch: break ; break ; break ; if ; {
rank: 330
score: 99.17290969122024
patch: if ( ! child CaMeL Type . matches ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 330
score: 99.15610573508523
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( child CaMeL Type ) ) {
rank: 330
score: 99.15346165707237
patch: validator . typeable = t . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 330
score: 98.83592878069196
patch: left CaMeL Type = right CaMeL Type . get CaMeL Type ( ;
rank: 330
score: 98.73816636029412
patch: old CaMeL Name = n . get CaMeL First CaMeL Child ( ) ; break ;
rank: 330
score: 98.64607747395833
patch: left = ; right = right CaMeL Type . to CaMeL String ( ;
rank: 330
score: 98.63116455078125
patch: break ; ; } break ;
rank: 330
score: 98.57569122314453
patch: break ; ; ; while break ;
rank: 330
score: 98.50988091362848
patch: break ; break ; break ; ; else
rank: 331
score: 99.1728515625
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 331
score: 99.15554470486111
patch: JS CaMeL Type left CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ;
rank: 331
score: 99.08595581054688
patch: set CaMeL Type ( n . get CaMeL Node ( ) . get CaMeL Type ( ) ) ;
rank: 331
score: 98.8352559407552
patch: break ; case Token . ; case Token . break :
rank: 331
score: 98.73812866210938
patch: state . ensure CaMeL Typed ( t . get CaMeL Name ( ) ) ;
rank: 331
score: 98.64586463341347
patch: left CaMeL Type = ; right CaMeL Type = this . ;
rank: 331
score: 98.63077799479167
patch: break ; * * * break ; }
rank: 331
score: 98.5742919921875
patch: } break ; ;
rank: 331
score: 98.50974343039773
patch: break ; break ; return ; if ; break ;
rank: 332
score: 99.17213597790948
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ) ;
rank: 332
score: 99.15509033203125
patch: right CaMeL Type = ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 332
score: 99.15306454613095
patch: typeable = left CaMeL Type . to CaMeL String ( n . get CaMeL Type ( ) ) ;
rank: 332
score: 98.83367241753473
patch: break ; default : { break ; }
rank: 332
score: 98.73759765625
patch: n . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 332
score: 98.64556884765625
patch: break ; case Token . TYPE | Token . STRING :
rank: 332
score: 98.6307373046875
patch: } else if break ; else
rank: 332
score: 98.57394409179688
patch: break ; / * / break ;
rank: 332
score: 98.50949435763889
patch: break ; break ; else / * /
rank: 333
score: 99.1547607421875
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 333
score: 99.152734375
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL String ( ) ;
rank: 333
score: 99.08390045166016
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL Node CaMeL
rank: 333
score: 98.83333333333333
patch: right CaMeL Type = right CaMeL Type . type ( ;
rank: 333
score: 98.737451171875
patch: t . get CaMeL Type ( ) . ensure CaMeL Typed ( ) ;
rank: 333
score: 98.64547119140624
patch: break ; case Token . ; case ; :
rank: 333
score: 98.63023376464844
patch: } else return break ; break ;
rank: 333
score: 98.57352701822917
patch: break ; catch break ;
rank: 333
score: 98.50943603515626
patch: break ; if ; break ; break ; }
rank: 334
score: 99.17191745923913
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 334
score: 99.15475698617789
patch: child CaMeL Type = type . get CaMeL Type ( ) ;
rank: 334
score: 99.15272216796875
patch: ret = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 334
score: 98.83272552490234
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type ; break ;
rank: 334
score: 98.73727416992188
patch: return t . get CaMeL Type ( ) . get CaMeL
rank: 334
score: 98.6454190340909
patch: break ; default : log . error ( $STRING$ ;
rank: 334
score: 98.57342529296875
patch: break ; break ; case String . out ;
rank: 334
score: 98.50883345170455
patch: if ; break ; break ; break ; break ;
rank: 335
score: 99.083251953125
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL Child CaMeL
rank: 335
score: 98.83108520507812
patch: right CaMeL Type = n . get CaMeL Type ( ;
rank: 335
score: 98.73723602294922
patch: continue ; case Token . DEC :
rank: 335
score: 98.62946234809027
patch: } else if break ; else return ;
rank: 335
score: 98.508251953125
patch: break ; break ; return ; } break ;
rank: 336
score: 99.15419699928977
patch: right CaMeL Type = validator . op CaMeL To CaMeL Str ( t . get CaMeL Type ( ) ) ;
rank: 336
score: 99.08296130952381
patch: validator . set CaMeL Type ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 336
score: 98.73713514539931
patch: return t . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ;
rank: 336
score: 98.64533148871527
patch: break ; case Token . TYPE ; ;
rank: 336
score: 98.62876892089844
patch: break ; } else = false ;
rank: 336
score: 98.5729751586914
patch: break ; ; ; ; break ;
rank: 336
score: 98.5077616373698
patch: break ; break ; break ; break ; break ; else
rank: 337
score: 99.17009171195652
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL JS CaMeL Type ( ) ) )
rank: 337
score: 99.15411376953125
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 337
score: 99.15151638454861
patch: child CaMeL Type = child CaMeL Type ;
rank: 337
score: 99.08224148220486
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . set CaMeL
rank: 337
score: 98.83029409555289
patch: right CaMeL Type = super . visit ( t , parent ;
rank: 337
score: 98.7369613647461
patch: return t . get CaMeL Type ( ) . is CaMeL All ( ) ;
rank: 337
score: 98.64520941840277
patch: bottom = break ; case Token . ;
rank: 337
score: 98.62851291232639
patch: break ; false ; break ; break ;
rank: 337
score: 98.57283782958984
patch: break { break ; if break ;
rank: 337
score: 98.50758056640625
patch: break ; if break ; break ; return ;
rank: 338
score: 99.16959635416667
patch: validator . set CaMeL Name ( t . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 338
score: 99.15380859375
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( $STRING$ ) ;
rank: 338
score: 99.15142059326172
patch: ensure CaMeL Typed ( t , n . get CaMeL Name ( ) ) ;
rank: 338
score: 99.08169216579861
patch: get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) .
rank: 338
score: 98.82819475446429
patch: right CaMeL Type = n . get CaMeL Parent CaMeL Node ( ;
rank: 338
score: 98.73692975725446
patch: switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 338
score: 98.64507293701172
patch: left = ; right = child CaMeL Type . get CaMeL Id ( ) ;
rank: 338
score: 98.62808566623264
patch: else { break ; } } else ;
rank: 338
score: 98.5727783203125
patch: i . out . println break false ; }
rank: 338
score: 98.50722927517361
patch: break ; break ; / / / *
rank: 339
score: 99.16958957248264
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type ) ) {
rank: 339
score: 99.15375225360577
patch: left CaMeL Type = validator . get CaMeL Type ( ) ;
rank: 339
score: 99.08151245117188
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL
rank: 339
score: 98.82757568359375
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent ( break ) ;
rank: 339
score: 98.7369155883789
patch: break ; case Token . THIS :
rank: 339
score: 98.64504770132211
patch: break ; case Token . NAME : case Token . NAME :
rank: 339
score: 98.62713623046875
patch: return ; break ; } catch break ;
rank: 339
score: 98.57186453683036
patch: break ; * break ; /
rank: 339
score: 98.50640869140625
patch: return ; break ; break ; return ;
rank: 340
score: 99.16944469105114
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ; break ;
rank: 340
score: 99.1535135904948
patch: right CaMeL Type = validator . get CaMeL Type CaMeL Of CaMeL This ( n . get CaMeL Type ( ) ) ;
rank: 340
score: 99.1505859375
patch: typeable = n . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 340
score: 99.08140563964844
patch: typeable = n . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 340
score: 98.73653971354166
patch: return . get CaMeL Type ( ) . is CaMeL Local ( ) ;
rank: 340
score: 98.64411477481617
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ) != null )
rank: 340
score: 98.62703159877232
patch: else = break ; return ;
rank: 340
score: 98.57145182291667
patch: break ; ; / * / break ;
rank: 340
score: 98.50639512803819
patch: break ; break ; else / return ;
rank: 341
score: 99.16904994419643
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 341
score: 99.150498046875
patch: typeable = child CaMeL Type . to CaMeL String ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ;
rank: 341
score: 99.0812255859375
patch: if ( ! child CaMeL Type . equals ( Token . LP ) )
rank: 341
score: 98.825830078125
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( break ;
rank: 341
score: 98.73640272352431
patch: } else { typeable = false ;
rank: 341
score: 98.64402770996094
patch: switch ( ; case Token . ;
rank: 341
score: 98.62635803222656
patch: } else { break ; * /
rank: 341
score: 98.57098388671875
patch: break ; ; - while break ;
rank: 341
score: 98.50572374131944
patch: break ; break ; } / / }
rank: 342
score: 99.15305494225544
patch: ensure CaMeL Typed ( t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ,
rank: 342
score: 99.15001860119048
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type CaMeL
rank: 342
score: 99.081201171875
patch: set CaMeL Type ( t . get CaMeL Type ( ) . get CaMeL Value ( ) ) ;
rank: 342
score: 98.82526397705078
patch: right CaMeL Type = n . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 342
score: 98.73452524038461
patch: n . get CaMeL Type ( ) . visit CaMeL Var (
rank: 342
score: 98.64289202008929
patch: break ; case Token . TYPE : break ; case Token . ;
rank: 342
score: 98.62592315673828
patch: break ; * * break ; }
rank: 342
score: 98.570556640625
patch: break ; break ; ; int * /
rank: 342
score: 98.5056884765625
patch: break ; break ; if ; ! break ;
rank: 343
score: 99.15287950303819
patch: JS CaMeL Type left CaMeL Type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 343
score: 99.0810546875
patch: switch ( t . get CaMeL First CaMeL Child ( ) )
rank: 343
score: 98.82406616210938
patch: child CaMeL Type = parent . get CaMeL Type ( ;
rank: 343
score: 98.73448181152344
patch: return parent . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 343
score: 98.64258626302083
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 343
score: 98.62586321149554
patch: return break ; for break ;
rank: 343
score: 98.57047526041667
patch: } * * break ;
rank: 343
score: 98.505126953125
patch: break ; } break ; return ;
rank: 344
score: 99.168486328125
patch: validator . child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 344
score: 99.15287272135417
patch: JS CaMeL Type left CaMeL Type = parent . get CaMeL JS CaMeL Type ( ) ;
rank: 344
score: 99.08092041015625
patch: get CaMeL Type ( n ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 344
score: 98.823974609375
patch: right CaMeL Type = visit CaMeL Name ( t break , parent ) ;
rank: 344
score: 98.73396570542279
patch: t . get CaMeL Type ( ) . visit CaMeL Name ( typeable ) ;
rank: 344
score: 98.64256998697917
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 344
score: 98.62353515625
patch: } break ; break ; else
rank: 344
score: 98.57042694091797
patch: break ; break ; ; / ?
rank: 344
score: 98.50458984375
patch: break ; break ; break ; / / =
rank: 345
score: 99.16843483664773
patch: validator . set CaMeL Name ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 345
score: 99.15187669836956
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) {
rank: 345
score: 99.14948187934027
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 345
score: 99.08078237680289
patch: break ; case Token . LP : typeable = false ;
rank: 345
score: 98.82392035590277
patch: break ; ; ; case Token . ;
rank: 345
score: 98.73335096571181
patch: result = Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ; break ;
rank: 345
score: 98.64220252403847
patch: break ; default : t . set CaMeL Name ( ; }
rank: 345
score: 98.62307303292411
patch: else { break ; ; }
rank: 345
score: 98.5043612393466
patch: break ; break ; if break ; } return ;
rank: 346
score: 99.1514202615489
patch: left CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 346
score: 99.14898126775569
patch: left CaMeL Type = child CaMeL Type ; break ;
rank: 346
score: 99.08001030815973
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 346
score: 98.82366265190973
patch: right = visit CaMeL Name ( ; ;
rank: 346
score: 98.73318481445312
patch: return ; case Token . VOID :
rank: 346
score: 98.64167616102431
patch: break false ; case Token . NAME :
rank: 346
score: 98.62303815569196
patch: } else { continue ; }
rank: 346
score: 98.56976318359375
patch: else = null ; break ;
rank: 346
score: 98.50418090820312
patch: break ; break ; else / }
rank: 347
score: 99.1683682528409
patch: child CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 347
score: 99.14887438322368
patch: right = n . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 347
score: 99.07999674479167
patch: validator . ensure CaMeL Typed ( t , n . get CaMeL Type ( ) ) ;
rank: 347
score: 98.8232421875
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ) . ;
rank: 347
score: 98.733154296875
patch: switch ( t . get CaMeL Type CaMeL Of CaMeL This ( ) )
rank: 347
score: 98.64126586914062
patch: break ; case Token . PROPERTY :
rank: 347
score: 98.62207641601563
patch: break ; false ;
rank: 347
score: 98.50415649414063
patch: break ; break ; break ; throw break ;
rank: 348
score: 99.168134765625
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ) ;
rank: 348
score: 99.15128173828126
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right =
rank: 348
score: 99.14854125976562
patch: type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 348
score: 98.73297119140625
patch: n . get CaMeL Type ( ) . case Token . NEW :
rank: 348
score: 98.64119466145833
patch: break ; case Token . ALL : ;
rank: 348
score: 98.62202962239583
patch: } else = break ; break ; }
rank: 348
score: 98.56843566894531
patch: break ; * / while break ;
rank: 349
score: 99.16783142089844
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 ( n ) )
rank: 349
score: 99.14839099702381
patch: typeable = get CaMeL First CaMeL Child ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 349
score: 99.07975551060268
patch: if ( ! child CaMeL Type . equals ( t . get CaMeL
rank: 349
score: 98.8228515625
patch: left CaMeL Type = visit CaMeL Name ( t , n , parent ;
rank: 349
score: 98.73286946614583
patch: case Token . LP : ensure CaMeL Typed ( t , n ) ;
rank: 349
score: 98.64104461669922
patch: break ; case Token . LOCAL :
rank: 349
score: 98.62059868706598
patch: } else { } else { break ;
rank: 349
score: 98.56821986607143
patch: break ; / / / ;
rank: 349
score: 98.50346156529018
patch: break ; break ; if break ; break ; break ; break ;
rank: 350
score: 99.16762473366477
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . report (
rank: 350
score: 99.15079991957721
patch: typeable = ! child CaMeL Type . is CaMeL Expression CaMeL Node ( ) ;
rank: 350
score: 98.82215465198864
patch: break ; case Token . NULL : ; break ;
rank: 350
score: 98.73208821614584
patch: continue . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 350
score: 98.64102172851562
patch: break ; case Token . READ :
rank: 350
score: 98.61952039930556
patch: if break ; break ; } break ;
rank: 350
score: 98.50247531467014
patch: break ; if break ; else break ;
rank: 351
score: 99.16705791766827
patch: validator . set CaMeL Name ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 351
score: 99.15074398643092
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 351
score: 99.14805908203125
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String CaMeL
rank: 351
score: 99.07935855263158
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Length ( ) ;
rank: 351
score: 98.82169886997768
patch: right CaMeL Type = super . visit ( t , parent ) ;
rank: 351
score: 98.73187662760417
patch: { ensure CaMeL Typed ( t . get CaMeL Type ( ) ) ;
rank: 351
score: 98.64055989583333
patch: break ; case Token . TYPE _ PROP : right CaMeL Type = ;
rank: 351
score: 98.61774553571429
patch: return ; } break ; }
rank: 351
score: 98.56814575195312
patch: break ; break ; case int ; break ;
rank: 352
score: 99.16695601851852
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 352
score: 99.15028447690217
patch: right CaMeL Type = parent . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 352
score: 99.1479427939967
patch: right = child CaMeL Type . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 352
score: 99.07923648231908
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL Of CaMeL
rank: 352
score: 98.82023620605469
patch: right = ; right CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 352
score: 98.7318603515625
patch: switch ( parent . get CaMeL Type CaMeL Of CaMeL This ( ) )
rank: 352
score: 98.64044189453125
patch: break ; default : break break ; }
rank: 352
score: 98.61768341064453
patch: } else ; else = break ;
rank: 352
score: 98.56785583496094
patch: break ; * / { break ;
rank: 352
score: 98.50214301215277
patch: break ; break ; break ; while ;
rank: 353
score: 99.16693115234375
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 353
score: 99.1501973470052
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 353
score: 99.14778645833333
patch: ensure CaMeL Typed ( t , n , $STRING$ ) ;
rank: 353
score: 99.07905883789063
patch: validator . ensure CaMeL Typed ( t , n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 353
score: 98.73179796006944
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( child CaMeL Type . get CaMeL
rank: 353
score: 98.6403449563419
patch: if ( ; right CaMeL Type . get CaMeL Type ( ) . equals ( ;
rank: 353
score: 98.56761823381696
patch: } * * / / /
rank: 353
score: 98.50210232204861
patch: break ; break ; break ; System ;
rank: 354
score: 99.16653575067934
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 354
score: 99.1495361328125
patch: child CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 354
score: 99.14766438802083
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n ) ;
rank: 354
score: 99.07853480747768
patch: if ( ! child CaMeL Type . matches ( parent . get CaMeL
rank: 354
score: 98.81963239397321
patch: right = ; switch ( n . get CaMeL Type ( ) )
rank: 354
score: 98.7313232421875
patch: return . get CaMeL Type ( ) . matches CaMeL Int 32 ( ) ;
rank: 354
score: 98.64033338758681
patch: expr = break ; case Token . ;
rank: 354
score: 98.56745910644531
patch: if break ; break ; ; ;
rank: 355
score: 99.16623757102273
patch: validator . right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 355
score: 99.07765599300987
patch: if ( ! child CaMeL Type . matches ( n . get CaMeL Type ( ) ) )
rank: 355
score: 98.81808907645089
patch: right CaMeL Type = parent . get CaMeL Type ( ) . ;
rank: 355
score: 98.73096575055804
patch: Scriptable get CaMeL Type = n . get CaMeL Type ( ) ;
rank: 355
score: 98.63958740234375
patch: break ; case Token . DEFAULT : ; ;
rank: 355
score: 98.56706237792969
patch: } * * / break break ;
rank: 355
score: 98.50156656901042
patch: break ; break ; break ; break ; else return ;
rank: 356
score: 99.166181640625
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Return CaMeL Type ( ) ;
rank: 356
score: 99.14924760298295
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 356
score: 99.07750854492187
patch: get CaMeL Type CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL
rank: 356
score: 98.81742095947266
patch: right CaMeL Type = visit CaMeL Name ( t , n , parent break ;
rank: 356
score: 98.73073167067308
patch: return ? Node CaMeL Util . op CaMeL To CaMeL Str (
rank: 356
score: 98.63947088068181
patch: if ( ; right CaMeL Type . equals ( ;
rank: 356
score: 98.61474609375
patch: break ; } else * /
rank: 356
score: 98.56685791015624
patch: break ; ; *
rank: 356
score: 98.50087483723958
patch: break ; break ; else ; return ;
rank: 357
score: 99.166015625
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n ) ; break ;
rank: 357
score: 99.1487548828125
patch: JS CaMeL Type left CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) ;
rank: 357
score: 99.14719645182292
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL Type ( ) ) ;
rank: 357
score: 99.07599954044117
patch: set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 357
score: 98.81680297851562
patch: right CaMeL Type = right CaMeL Type . get CaMeL Name ( ) ; ;
rank: 357
score: 98.73057556152344
patch: t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 357
score: 98.6393798828125
patch: left CaMeL Type ; right CaMeL Type = ;
rank: 357
score: 98.61452229817708
patch: return break ; } else return break ;
rank: 357
score: 98.50012817382813
patch: break ; break ; break ; / return ;
rank: 358
score: 99.16576276506696
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 358
score: 99.14713541666667
patch: right = get CaMeL JS CaMeL Type ( n ) ;
rank: 358
score: 99.07578938802084
patch: right CaMeL Type = get CaMeL Instance CaMeL Type ( n . get CaMeL
rank: 358
score: 98.8165283203125
patch: left ; right CaMeL Type = right CaMeL Type ;
rank: 358
score: 98.73055267333984
patch: continue ; case Token . NAME :
rank: 358
score: 98.63909149169922
patch: left = ; right = child CaMeL Type . get CaMeL Name ( ) ;
rank: 358
score: 98.61361258370536
patch: return ; else = break ;
rank: 358
score: 98.56593540736607
patch: else { break ; break ;
rank: 358
score: 98.50008138020833
patch: break ; break ; start ; break ;
rank: 359
score: 99.14748128255208
patch: right CaMeL Type = validator . get CaMeL Type CaMeL Of CaMeL This ( t . get CaMeL Type ( ) ) ;
rank: 359
score: 99.14695739746094
patch: typeable = n . get CaMeL JS CaMeL Type ( ) ; break ;
rank: 359
score: 99.07550726996527
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Value ( ) ) ;
rank: 359
score: 98.81651960100446
patch: right CaMeL Type = visit CaMeL Name ( t , n ; ;
rank: 359
score: 98.73043823242188
patch: t . set CaMeL Type ( Token . FUNCTION ) ;
rank: 359
score: 98.6387939453125
patch: break ; case Token . WARNING : ;
rank: 359
score: 98.61347113715277
patch: return break ; } } catch break ;
rank: 359
score: 98.56558990478516
patch: break ; break ; ; null ;
rank: 359
score: 98.4993896484375
patch: break ; break ; break ; if break ; return ;
rank: 360
score: 99.16531982421876
patch: validator . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . add CaMeL
rank: 360
score: 99.14695142663044
patch: typeable = right CaMeL Type . to CaMeL String ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 360
score: 99.07540189302884
patch: right CaMeL Type = n . get CaMeL Node ( ) ;
rank: 360
score: 98.81609552556819
patch: right = ; right = visit CaMeL Name ( ;
rank: 360
score: 98.7300666360294
patch: throw t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 360
score: 98.63862748579545
patch: left CaMeL Type = break ; case Token . ;
rank: 360
score: 98.61321258544922
patch: break break ; } break ; }
rank: 360
score: 98.56549835205078
patch: break ; case $STRING$ : break ;
rank: 360
score: 98.4990234375
patch: break ; break ; else break ; } break ;
rank: 361
score: 99.16514369419643
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL
rank: 361
score: 99.14685589334239
patch: else left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 361
score: 99.14633178710938
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 361
score: 99.07450045072116
patch: right CaMeL Type = parent . get CaMeL Parent ( ) ;
rank: 361
score: 98.81591033935547
patch: right CaMeL Type = right CaMeL Type . type ( ) . name ( ;
rank: 361
score: 98.72993469238281
patch: return ; case Token . GETELEM :
rank: 361
score: 98.63789876302083
patch: break ; case Token . NULL : :
rank: 361
score: 98.61275482177734
patch: } if break ; break ; }
rank: 361
score: 98.56527370876736
patch: iter . next ( ; break ; ;
rank: 361
score: 98.49884711371527
patch: break ; break ; break ; / }
rank: 362
score: 99.07382381663604
patch: set CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 362
score: 98.81466674804688
patch: right ; right CaMeL Type = right CaMeL Type . get CaMeL Type ( ;
rank: 362
score: 98.72964138454861
patch: if ( ! child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) )
rank: 362
score: 98.63765258789063
patch: break ; case Token . STRING : ; ;
rank: 362
score: 98.61194719587054
patch: break ; else return ; }
rank: 362
score: 98.56520589192708
patch: break ; ; - * / break ;
rank: 362
score: 98.49884033203125
patch: break ; break ; else else
rank: 363
score: 99.16493733723958
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL JS CaMeL Type ( ) ) ) {
rank: 363
score: 99.14650560461956
patch: typeable = child CaMeL Type . to CaMeL String ( left CaMeL Type ) . to CaMeL String ( ) ;
rank: 363
score: 99.14601828835227
patch: validator . expect CaMeL Number ( t . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 363
score: 98.72770860460069
patch: { get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) )
rank: 363
score: 98.63739776611328
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ) . ;
rank: 363
score: 98.61112976074219
patch: } else ; break ; null ;
rank: 363
score: 98.56467507102273
patch: break ; out . println break false ; break ;
rank: 363
score: 98.49862331814236
patch: break ; break ; } -- break ;
rank: 364
score: 99.16492808948864
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL Type ( ) ;
rank: 364
score: 99.1462735262784
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 364
score: 99.14548561789773
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type =
rank: 364
score: 99.07339138454861
patch: warn ( t . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 364
score: 98.7276382446289
patch: break ; case Token . INC :
rank: 364
score: 98.63711547851562
patch: break ; default : report CaMeL Error ( ;
rank: 364
score: 98.61050754123264
patch: } else { if break ; break ;
rank: 364
score: 98.49851481119792
patch: break ; break ; break ; break ; / / /
rank: 365
score: 99.16490173339844
patch: validator . set CaMeL Type ( parent . get CaMeL Name ( ) ) ;
rank: 365
score: 99.14531707763672
patch: right CaMeL Type = get CaMeL First CaMeL Child ( left CaMeL Type ) ;
rank: 365
score: 99.07332763671874
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Id ( ) ) ;
rank: 365
score: 98.81352996826172
patch: right CaMeL Type = ; right CaMeL Type = right CaMeL Type . type ;
rank: 365
score: 98.72690836588542
patch: return . get CaMeL Type ( ) . matches CaMeL Int 32 Context ( false ) ;
rank: 365
score: 98.63690185546875
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 365
score: 98.61031765407986
patch: break break ; } break ; break ;
rank: 365
score: 98.5637435913086
patch: break ; break ; println break ;
rank: 365
score: 98.4984375
patch: break ; break ; / / / / }
rank: 366
score: 99.16482309194711
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ) {
rank: 366
score: 99.14528401692708
patch: ensure CaMeL Typed ( t , n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 366
score: 99.07232666015625
patch: validator . ensure CaMeL Typed ( t , left CaMeL Type ) ;
rank: 366
score: 98.8134432705966
patch: left = visit CaMeL Name ( t , n ;
rank: 366
score: 98.72565375434027
patch: result = Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent , n ) ;
rank: 366
score: 98.63675944010417
patch: break ; case Token . ; case Token . LABEL :
rank: 366
score: 98.61027308872768
patch: break break ; else break ;
rank: 366
score: 98.56338065011161
patch: break ; break ; next *
rank: 366
score: 98.49843343098958
patch: break ; break ; if ; break ; break ; }
rank: 367
score: 99.16468157087054
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) ) ;
rank: 367
score: 99.14551798502605
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 367
score: 99.14508666992188
patch: right CaMeL Type = child CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 367
score: 99.0722720497533
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Value ( ) . get CaMeL Type CaMeL
rank: 367
score: 98.81277901785714
patch: break ; default : throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 367
score: 98.7254638671875
patch: return ; case Token . GET _ REF _ SPECIAL :
rank: 367
score: 98.6364387063419
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . value ( ;
rank: 367
score: 98.60968017578125
patch: break ; } else throw break ;
rank: 367
score: 98.56308419363839
patch: break ; break ; value *
rank: 367
score: 98.4984130859375
patch: break ; break ; break ; * / return ;
rank: 368
score: 99.16453125
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ,
rank: 368
score: 99.14518599076705
patch: right = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 368
score: 99.14492797851562
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( true ) ;
rank: 368
score: 99.07200863486842
patch: set CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 368
score: 98.81195537860577
patch: break ; case Token . break : visit CaMeL Name ( ;
rank: 368
score: 98.72534993489583
patch: if ( left CaMeL Type . matches CaMeL Int 32 Context ( ) )
rank: 368
score: 98.63633219401042
patch: left CaMeL Type = ; right CaMeL Type = break ;
rank: 368
score: 98.60926055908203
patch: } else { } else break ;
rank: 368
score: 98.56209564208984
patch: break ; break ; case ; {
rank: 368
score: 98.4972915649414
patch: break ; break ; try / }
rank: 369
score: 99.1447245279948
patch: child CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 369
score: 99.07137298583984
patch: get CaMeL Type ( n . get CaMeL Type ( ) ) . child CaMeL
rank: 369
score: 98.81167367788461
patch: right = ; left CaMeL Type = right CaMeL Type . ;
rank: 369
score: 98.72516276041667
patch: if ( validator . is CaMeL Expression CaMeL Node ( parent ) ) {
rank: 369
score: 98.6363296508789
patch: break ; case Token . FORMAT :
rank: 369
score: 98.60913957868304
patch: break break ; else ; }
rank: 369
score: 98.49698486328126
patch: if break ; break ; break ; return ;
rank: 370
score: 99.16374860491071
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 370
score: 99.1448046875
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 370
score: 99.1444979580966
patch: right = left CaMeL Type . to CaMeL String ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 370
score: 99.07030639648437
patch: set CaMeL Type ( t . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 370
score: 98.81133563701923
patch: right CaMeL Type = visit CaMeL Name ( t break ) ;
rank: 370
score: 98.72491861979167
patch: result = Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent )
rank: 370
score: 98.63632202148438
patch: break ; case Token . ; case Token . NONE :
rank: 370
score: 98.60817173549107
patch: break ; } else ; }
rank: 370
score: 98.56119210379464
patch: break ; value ; * /
rank: 370
score: 98.49697875976562
patch: break ; break ; } break ; / /
rank: 371
score: 99.163671875
patch: validator . if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 371
score: 99.14403235394022
patch: typeable = child CaMeL Type . to CaMeL String ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 371
score: 99.0701904296875
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 371
score: 98.81099759615384
patch: left CaMeL Type = ; right CaMeL Type = parent . ;
rank: 371
score: 98.724609375
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL
rank: 371
score: 98.63595581054688
patch: break ; case Token . DELIMITER :
rank: 371
score: 98.60709635416667
patch: return break ; } catch ; return ;
rank: 372
score: 99.16355387369792
patch: validator . right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 372
score: 99.14389870383523
patch: right = right CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 372
score: 99.06984165736607
patch: validator . right ( t . get CaMeL Type ( ) ) ;
rank: 372
score: 98.8106689453125
patch: this . ; this . ; this . ; break ;
rank: 372
score: 98.72395155164931
patch: n . ensure CaMeL Typed ( ) ;
rank: 372
score: 98.63595377604166
patch: sb . append ( $STRING$ ) . append ( child CaMeL Type ) ;
rank: 372
score: 98.60675048828125
patch: else { break ; } else return ;
rank: 372
score: 98.56100124782986
patch: } * / break ; if break ;
rank: 372
score: 98.496337890625
patch: break ; break ; break ; return ; return ;
rank: 373
score: 99.16355298913044
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 373
score: 99.14442027698864
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 373
score: 99.14389519942434
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 373
score: 98.8105712890625
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ; ;
rank: 373
score: 98.72389729817708
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) &&
rank: 373
score: 98.63592998798077
patch: if ( ; right CaMeL Type . equals ( $STRING$ ) )
rank: 373
score: 98.60652669270833
patch: break ; this . break ; * /
rank: 373
score: 98.56077575683594
patch: break ; try ; if break ;
rank: 373
score: 98.49623325892857
patch: break ; break ; continue ;
rank: 374
score: 99.1631640625
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ;
rank: 374
score: 99.14429820667614
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 374
score: 99.14374542236328
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( left CaMeL Type ) ;
rank: 374
score: 99.06878051757812
patch: JS CaMeL Type left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 374
score: 98.8102518717448
patch: break ; default break ;
rank: 374
score: 98.72333441840277
patch: return || Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent , n ) ;
rank: 374
score: 98.63540649414062
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Symbol ( ;
rank: 374
score: 98.56071472167969
patch: break ; ; ? if break ;
rank: 374
score: 98.49549865722656
patch: break ; break ; else if ;
rank: 375
score: 99.1631103515625
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . get CaMeL
rank: 375
score: 99.14418723366477
patch: set CaMeL Name ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 375
score: 99.14361281622024
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL
rank: 375
score: 99.06830512152777
patch: right CaMeL Type = get CaMeL Symbol ( n . get CaMeL Type ( ) ) ;
rank: 375
score: 98.8096211751302
patch: left ; right CaMeL Type = visit CaMeL Name ( ;
rank: 375
score: 98.7231216430664
patch: return ; case Token . NOT :
rank: 375
score: 98.6341323852539
patch: if ( right CaMeL Type . get CaMeL Type ( ) . equals ( ;
rank: 375
score: 98.60515485491071
patch: } catch break ; break ;
rank: 375
score: 98.56069510323661
patch: break ; break ; next {
rank: 376
score: 99.16282301682692
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 376
score: 99.14313299005681
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type , $STRING$ ) ;
rank: 376
score: 99.06828002929687
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) . get CaMeL Value ( ) ) ;
rank: 376
score: 98.80907093394886
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 376
score: 98.72259880514706
patch: ! parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 376
score: 98.63411218979779
patch: switch ( node . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 376
score: 98.60423448350694
patch: return break ; } else ; return ;
rank: 376
score: 98.56050327845982
patch: break ; * ? break ;
rank: 377
score: 99.16280110677083
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( node . get CaMeL First CaMeL Child ( ) ) ) {
rank: 377
score: 99.14304517663044
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 377
score: 99.06812337239583
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( n . get CaMeL
rank: 377
score: 98.72185516357422
patch: LOG . : t . get CaMeL Type ( ) . set CaMeL Type (
rank: 377
score: 98.63393332741477
patch: switch ( node . get CaMeL Type ( ) ;
rank: 377
score: 98.60408528645833
patch: break ; } catch break ; break ;
rank: 377
score: 98.5604248046875
patch: * * / break ; /
rank: 377
score: 98.4931640625
patch: break ; if break ; break ; break ; break ;
rank: 378
score: 99.1627197265625
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 378
score: 99.1435546875
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 378
score: 99.1425069173177
patch: return child CaMeL Type . to CaMeL String ( ) ;
rank: 378
score: 99.0679931640625
patch: validator . set CaMeL Type ( get CaMeL Type ( n . get CaMeL
rank: 378
score: 98.72184753417969
patch: t . ensure CaMeL Typed ( t . get CaMeL Scope ( ) ) ;
rank: 378
score: 98.63384399414062
patch: break ; case Token . NULL : * /
rank: 378
score: 98.60304768880208
patch: return break ; } finally { break ;
rank: 378
score: 98.56014404296874
patch: i . out . println break ) ; ;
rank: 379
score: 99.16268117804276
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ; }
rank: 379
score: 99.14152221679687
patch: ensure CaMeL Typed ( t , n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 379
score: 99.06789036800987
patch: right CaMeL Type = n . get CaMeL Value ( ) . get CaMeL Type ( ) ;
rank: 379
score: 98.72157287597656
patch: return ; case Token . GET :
rank: 379
score: 98.63278198242188
patch: left = ; right = right CaMeL Type . get CaMeL Name ( ) ;
rank: 379
score: 98.60256522042411
patch: } finally { break ; }
rank: 379
score: 98.56000627790179
patch: / * ] break break ;
rank: 379
score: 98.49175262451172
patch: break ; if ; break ; }
rank: 380
score: 99.16262950067934
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 380
score: 99.14337158203125
patch: JS CaMeL Type left CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) ;
rank: 380
score: 99.14115397135417
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 380
score: 99.06762084960937
patch: validator . ensure CaMeL Typed ( t , t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 380
score: 98.80673556857639
patch: ; right = visit CaMeL Name ( ;
rank: 380
score: 98.7204948874081
patch: old CaMeL Name = parent . get CaMeL First CaMeL Child ( ) ; break ;
rank: 380
score: 98.63269761029412
patch: if ( right CaMeL Type . get CaMeL Type ( ) == Token . TYPE )
rank: 380
score: 98.55953369140624
patch: break ; * / if break ; break ;
rank: 380
score: 98.4915771484375
patch: break ; break ; if ; if break ; break ;
rank: 381
score: 99.16256553248355
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL
rank: 381
score: 99.14317626953125
patch: ensure CaMeL Typed ( left CaMeL Type ) ;
rank: 381
score: 99.14100864955357
patch: typeable = child CaMeL Type . get CaMeL Type ( ) ;
rank: 381
score: 99.06747671274039
patch: right CaMeL Type = parent . get CaMeL Class ( ) ;
rank: 381
score: 98.80619981553819
patch: break ; default : throw ; } ;
rank: 381
score: 98.720458984375
patch: return t . get CaMeL Type ( ) . boolean CaMeL Value ( ) ;
rank: 381
score: 98.63265228271484
patch: left = ; right = right CaMeL Type . get CaMeL Value ( ) ;
rank: 381
score: 98.60189819335938
patch: break ; } } else break ;
rank: 381
score: 98.55945502387152
patch: break ; break ; * ; * /
rank: 381
score: 98.49127197265625
patch: break ; if break ; else
rank: 382
score: 99.16251627604167
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Parent CaMeL Node ( ) ) ) ;
rank: 382
score: 99.14316277754934
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( typeable ) ;
rank: 382
score: 98.80512237548828
patch: this . ; this . ; ; this . ; ; this . ; ;
rank: 382
score: 98.720458984375
patch: return t . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 382
score: 98.63262580422794
patch: sb . append ( $STRING$ ) . append ( n . get CaMeL Type ( ;
rank: 382
score: 98.60166422526042
patch: break ; while break ;
rank: 382
score: 98.55931599934895
patch: break { break ; ;
rank: 382
score: 98.49083251953125
patch: break ; break ; break ; if false ;
rank: 383
score: 99.16212047230114
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL JS CaMeL Type ( ) ) ) {
rank: 383
score: 99.14299926757812
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . expect CaMeL
rank: 383
score: 99.14006212022569
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 383
score: 99.06697904146634
patch: right CaMeL Type = n . get CaMeL Count ( ) ;
rank: 383
score: 98.80423990885417
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type ; ;
rank: 383
score: 98.72043678977273
patch: get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 383
score: 98.63143920898438
patch: switch ( node . get CaMeL Type ( ) . get CaMeL Type ( ;
rank: 383
score: 98.60157993861607
patch: break ; false ; return ;
rank: 383
score: 98.55914306640625
patch: break ; else ; * /
rank: 383
score: 98.49078369140625
patch: break ; break ; break ; try
rank: 384
score: 99.16199747721355
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 384
score: 99.14285278320312
patch: left CaMeL Type = validator . get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 384
score: 99.13963826497395
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Parent ( ) ) ;
rank: 384
score: 99.06675211588542
patch: validator . ensure CaMeL Typed ( t , n ) ;
rank: 384
score: 98.80422537667411
patch: left CaMeL Type = left CaMeL Type ; right CaMeL Type = ;
rank: 384
score: 98.7203010110294
patch: LOG . : t . get CaMeL Type ( ) . case Token . LP :
rank: 384
score: 98.6314338235294
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Prototype ( ) )
rank: 384
score: 98.5586181640625
patch: break ; out . println break false ; ;
rank: 384
score: 98.49034118652344
patch: break ; break ; } / *
rank: 385
score: 99.1618182842548
patch: validator . left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 385
score: 99.14280192057292
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . ensure CaMeL Typed ( ) ;
rank: 385
score: 99.139619140625
patch: typeable = left CaMeL Type . to CaMeL String ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ;
rank: 385
score: 98.80316925048828
patch: break ; default : right = ;
rank: 385
score: 98.72015935724431
patch: t . ensure CaMeL Typed ( t . get CaMeL
rank: 385
score: 98.63106595552884
patch: break ; default : throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 385
score: 98.59906005859375
patch: } break ; else return ;
rank: 385
score: 98.558349609375
patch: } * * / break ; break ;
rank: 385
score: 98.49015299479167
patch: if break ; break ; break ; break ; break ;
rank: 386
score: 99.16133197985198
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 386
score: 99.14150766225961
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 386
score: 99.06643880208334
patch: typeable = ! get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 386
score: 98.80243598090277
patch: break ; default : break ; ; }
rank: 386
score: 98.71966552734375
patch: return t . get CaMeL Type ( ) . is CaMeL Name ( ) ;
rank: 386
score: 98.55817522321429
patch: break ; * / * /
rank: 386
score: 98.48992919921875
patch: break ; break ; break ; break ; break ; ;
rank: 387
score: 99.14131303267045
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 387
score: 99.1392132302989
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 387
score: 99.06627133018092
patch: set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 387
score: 98.80242919921875
patch: break ; case ; case Token . FUNCTION :
rank: 387
score: 98.71824137369792
patch: return ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent , n ) ;
rank: 387
score: 98.63082885742188
patch: break true ; case Token . ;
rank: 387
score: 98.59896850585938
patch: } else ; }
rank: 387
score: 98.55792999267578
patch: break ; / finally { break ;
rank: 387
score: 98.4890469637784
patch: break ; break ; break ; } return ; }
rank: 388
score: 99.139072265625
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 388
score: 99.0656494140625
patch: typeable = ! child CaMeL Type . matches ( n . get CaMeL Type ( ) ) ;
rank: 388
score: 98.80234375
patch: right CaMeL Type = parent . get CaMeL Type ( ) ; break ;
rank: 388
score: 98.7182388305664
patch: n . get CaMeL Type ( ) . visit CaMeL Name ( t ) ;
rank: 388
score: 98.63079474954044
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . type ( ;
rank: 388
score: 98.59865315755208
patch: } break ; return ;
rank: 388
score: 98.55755615234375
patch: break { break ;
rank: 389
score: 99.16029710036058
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Value ( ) ) ;
rank: 389
score: 99.14111328125
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 389
score: 99.13870849609376
patch: typeable = left CaMeL Type . get CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 389
score: 99.06517269736842
patch: set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 389
score: 98.80215018136161
patch: left CaMeL Type = ; right CaMeL Type = child CaMeL Type ;
rank: 389
score: 98.7181396484375
patch: return Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent , n ) ;
rank: 389
score: 98.63075764973958
patch: break ; case Token . ; return ;
rank: 389
score: 98.59851837158203
patch: return break ; return ; break ;
rank: 389
score: 98.55741882324219
patch: break ; break ; ; ; /
rank: 389
score: 98.48812255859374
patch: break ; break ; if ; ; break ;
rank: 390
score: 99.1599353608631
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 390
score: 99.138623046875
patch: typeable = ! n . get CaMeL First CaMeL Child ( ) ;
rank: 390
score: 99.06484087775735
patch: n . get CaMeL Type ( ) . ensure CaMeL Typed ( t . get CaMeL
rank: 390
score: 98.80206298828125
patch: right ; right = visit CaMeL Name ( ;
rank: 390
score: 98.71801039751838
patch: return Node CaMeL Util . get CaMeL JS CaMeL Type ( parent , n ) ;
rank: 390
score: 98.63043571920956
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . name ( ;
rank: 390
score: 98.59837510850694
patch: } else { break ; } return ;
rank: 390
score: 98.55711146763393
patch: break ; catch break ; ;
rank: 390
score: 98.48695373535156
patch: if ; = break ; break ;
rank: 391
score: 99.1595458984375
patch: if ( parent . get CaMeL Type ( ) != Token . FUNCTION )
rank: 391
score: 99.14048461914062
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . create CaMeL
rank: 391
score: 98.80157470703125
patch: right CaMeL Type = visit CaMeL Name ( break . get CaMeL Name ( ;
rank: 391
score: 98.71779497931985
patch: n . get CaMeL Type ( ) . visit CaMeL Get CaMeL Elem ( ) ;
rank: 391
score: 98.63004927201705
patch: if ( ; right CaMeL Type == Token . ;
rank: 391
score: 98.5977783203125
patch: return break ; return ;
rank: 391
score: 98.55592346191406
patch: while break ; break ; ; ;
rank: 391
score: 98.48679606119792
patch: break ; break ; break ; if break ; / /
rank: 392
score: 99.15947614397321
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 392
score: 99.14030317826705
patch: left CaMeL Type = validator . get CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 392
score: 99.13785226004464
patch: ensure CaMeL Typed ( child CaMeL Type , right CaMeL Type ) ;
rank: 392
score: 99.06475830078125
patch: set CaMeL Type ( n . get CaMeL Scope ( ) . get CaMeL Type ( ) ) ;
rank: 392
score: 98.80150257457386
patch: this . ; this . ; this . ; ;
rank: 392
score: 98.71778157552083
patch: break . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 392
score: 98.62950721153847
patch: if ( ; right CaMeL Type . get CaMeL Name ( ;
rank: 392
score: 98.59748670789931
patch: } break ; get CaMeL State ( ;
rank: 392
score: 98.55575561523438
patch: break ; * / * break ;
rank: 392
score: 98.48635864257812
patch: break ; break ; break ; return
rank: 393
score: 99.159326171875
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL JS CaMeL Type ( ) ) )
rank: 393
score: 99.14015706380208
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( t ) ;
rank: 393
score: 99.06467895507812
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Count ( ) ) ;
rank: 393
score: 98.80067443847656
patch: right CaMeL Type = right CaMeL Type . to CaMeL Lower CaMeL Case ( )
rank: 393
score: 98.71658325195312
patch: binding . expect CaMeL Number ( t . get CaMeL Parent ( ) ) ;
rank: 393
score: 98.62899169921874
patch: break ; default : return ; } break ;
rank: 393
score: 98.59486389160156
patch: break ; break ; } else }
rank: 393
score: 98.5556307705966
patch: i . out . println break false ; break /
rank: 393
score: 98.4853515625
patch: break ; break ; if ; / / / /
rank: 394
score: 99.15911310369319
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL Type (
rank: 394
score: 99.13764105902777
patch: ensure CaMeL Typed ( parent , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 394
score: 99.06376567639802
patch: right CaMeL Type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 394
score: 98.8001708984375
patch: break ; case Token . ; default : ;
rank: 394
score: 98.71649169921875
patch: continue ; case Token . GET :
rank: 394
score: 98.62883843315973
patch: break ; case Token . OTHER : ;
rank: 394
score: 98.59444173177083
patch: return break ; } else throw null ;
rank: 394
score: 98.55560302734375
patch: } break ; ; ;
rank: 394
score: 98.4846903483073
patch: break ; break ; break ; break ; else break ;
rank: 395
score: 99.15901692708333
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL
rank: 395
score: 99.139892578125
patch: child CaMeL Type = validator . get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 395
score: 98.79973493303571
patch: right CaMeL Type = node . get CaMeL Parent CaMeL Node ( ;
rank: 395
score: 98.71623992919922
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 395
score: 98.62877655029297
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Code ( ;
rank: 395
score: 98.55515358664773
patch: i . out . println break false ; break ?
rank: 395
score: 98.48446655273438
patch: break ; if break ; / / / /
rank: 396
score: 99.139697265625
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 396
score: 98.79927280970982
patch: right CaMeL Type = visit CaMeL Name ( t break , parent ;
rank: 396
score: 98.71616498161765
patch: n . get CaMeL Type ( ) . set CaMeL Type ( typeable ) ;
rank: 396
score: 98.62869262695312
patch: break ; default : log . error ( $STRING$ + ;
rank: 396
score: 98.59398057725694
patch: break break ; else { break ; }
rank: 396
score: 98.48330453725961
patch: break ; break ; break ; break ; break ; return ;
rank: 397
score: 99.15888671875
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 397
score: 99.1394930752841
patch: left CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 397
score: 99.13685825892857
patch: typeable = parent . get CaMeL JS CaMeL Type ( ) ;
rank: 397
score: 99.06306537828948
patch: right CaMeL Type = parent . get CaMeL Value ( ) . get CaMeL Type ( ) ;
rank: 397
score: 98.79915618896484
patch: this . ; ; this . ; ; this . ; this . ; ;
rank: 397
score: 98.71541595458984
patch: table . ensure CaMeL Typed ( t . get CaMeL Scope ( ) ) ;
rank: 397
score: 98.62838745117188
patch: break ; case break : break ;
rank: 397
score: 98.59354073660714
patch: break ; end ; break ;
rank: 397
score: 98.5550765991211
patch: break ; / ? if break ;
rank: 398
score: 99.1587890625
patch: validator . if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 398
score: 99.13921564275569
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL
rank: 398
score: 99.06283569335938
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Root ( ) ) ;
rank: 398
score: 98.79903157552083
patch: right = visit CaMeL Name ( t break . get CaMeL Name ( ;
rank: 398
score: 98.71480102539063
patch: return t . get CaMeL Type ( ) ;
rank: 398
score: 98.628173828125
patch: break ; case Token . ; case Token . YES :
rank: 398
score: 98.59248352050781
patch: continue break ; } catch break ;
rank: 398
score: 98.55473327636719
patch: break ; ; break ; ; ;
rank: 398
score: 98.48063151041667
patch: break ; break ; break ; } break ; break ;
rank: 399
score: 99.15870425575658
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) ; break ;
rank: 399
score: 99.1391934481534
patch: get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) . ensure CaMeL Typed ( ) ;
rank: 399
score: 98.79881184895834
patch: break ; default : throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 399
score: 98.71309116908482
patch: get CaMeL JS CaMeL Type ( left CaMeL Type , n ) ;
rank: 399
score: 98.62748887803819
patch: break - 1 ; case Token . ;
rank: 399
score: 98.5924072265625
patch: break ; } else continue ;
rank: 399
score: 98.55446951729911
patch: } * * int * /
rank: 399
score: 98.48046875
patch: return ; break ; }
rank: 400
score: 99.15849958147321
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n ) ;
rank: 400
score: 99.0624640969669
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL
rank: 400
score: 98.79831764914773
patch: right CaMeL Type = left CaMeL Type ; break ;
rank: 400
score: 98.71294759114583
patch: t . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 400
score: 98.59207153320312
patch: break break ; } } break ;
rank: 400
score: 98.55396270751953
patch: break ; ; / ] break ;
rank: 400
score: 98.4803955078125
patch: break ; break ; break ; break ; throw
rank: 401
score: 99.13887293198529
patch: get CaMeL JS CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 401
score: 99.1357421875
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 401
score: 99.06154959542411
patch: switch ( t . get CaMeL First CaMeL Child ( ) ) {
rank: 401
score: 98.71286010742188
patch: } else {
rank: 401
score: 98.62624942555146
patch: sb . append ( $STRING$ ) . append ( type . get CaMeL Name ( ;
rank: 401
score: 98.5918960571289
patch: break ; return ; } break ;
rank: 401
score: 98.55386352539062
patch: break ; ; break ; next {
rank: 401
score: 98.4798916903409
patch: break ; break ; } break ; if break ;
rank: 402
score: 99.158359375
patch: validator . right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 402
score: 99.1385986328125
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . is CaMeL
rank: 402
score: 99.06135864257813
patch: right CaMeL Type = validator . get CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 402
score: 98.7972412109375
patch: break ; default : right CaMeL Type = ;
rank: 402
score: 98.7126105813419
patch: return Node CaMeL Util . is CaMeL Expression CaMeL Node ( left CaMeL Type ) ;
rank: 402
score: 98.62604118795956
patch: if ( ; right CaMeL Type . get CaMeL Type CaMeL Name ( ) == ;
rank: 402
score: 98.59123229980469
patch: return ; } else if break ;
rank: 402
score: 98.55354817708333
patch: break ; ; return ;
rank: 402
score: 98.47930297851562
patch: break ; if ; break ; break ; else
rank: 403
score: 99.15829903738839
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) ) ;
rank: 403
score: 99.13570404052734
patch: right = left CaMeL Type . to CaMeL String ( left CaMeL Type ) ;
rank: 403
score: 99.061279296875
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL
rank: 403
score: 98.7967529296875
patch: this . ; ; this . ; ; this . ; ;
rank: 403
score: 98.7125956217448
patch: this . ensure CaMeL Typed ( t , n ) ;
rank: 403
score: 98.62550264246323
patch: left = ; right = right CaMeL Type . get CaMeL First CaMeL Child ( ;
rank: 403
score: 98.59120396205357
patch: break ; default ++ ; }
rank: 403
score: 98.55353546142578
patch: break ; break ; case value ;
rank: 403
score: 98.47915213448661
patch: break ; break ; } return
rank: 404
score: 99.15816243489583
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 404
score: 99.06116333007813
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Class ( ) ) ;
rank: 404
score: 98.79637451171875
patch: this . ; this . ; this . ;
rank: 404
score: 98.71228790283203
patch: state . ensure CaMeL Typed ( t . get CaMeL Scope ( ) ) ;
rank: 404
score: 98.62525132123162
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ; ;
rank: 404
score: 98.55350494384766
patch: break ; else { if break ;
rank: 404
score: 98.47750854492188
patch: break ; break ; break ; break ; ++
rank: 405
score: 99.15808715820313
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL First CaMeL
rank: 405
score: 99.13735622829861
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . ensure CaMeL
rank: 405
score: 99.1346664428711
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( left CaMeL Type ) ;
rank: 405
score: 99.05935187088816
patch: validator . set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 405
score: 98.79624938964844
patch: right CaMeL Type = right CaMeL Type . type ; right CaMeL Type = ;
rank: 405
score: 98.71141639122597
patch: System . . : ensure CaMeL Typed ( t . get CaMeL
rank: 405
score: 98.59117974175348
patch: } break ; break ; } break ;
rank: 405
score: 98.55348205566406
patch: break ; break ; ; * ;
rank: 405
score: 98.47728382457386
patch: break ; break ; else break ; break ; }
rank: 406
score: 99.15792142427884
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 406
score: 99.1371561686198
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( false ) ;
rank: 406
score: 99.1346435546875
patch: typeable = n . get CaMeL First CaMeL Child ( ) ; }
rank: 406
score: 99.059326171875
patch: child CaMeL Type = get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 406
score: 98.71120318244485
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL Scope ( )
rank: 406
score: 98.62454833984376
patch: break ; case Token . NULL : continue ;
rank: 406
score: 98.59087262834821
patch: break ; false = break ;
rank: 406
score: 98.47689208984374
patch: break ; break ; break ; } / }
rank: 407
score: 99.137109375
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) )
rank: 407
score: 99.13453979492188
patch: right = get CaMeL Constructor CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 407
score: 99.05912950303819
patch: right CaMeL Type = get CaMeL Value ( n . get CaMeL Type ( ) ) ;
rank: 407
score: 98.7953592936198
patch: left = ; right CaMeL Type = right CaMeL Type ;
rank: 407
score: 98.71014404296875
patch: n . get CaMeL Type ( ) . set CaMeL Type ( $STRING$ ) ;
rank: 407
score: 98.62451171875
patch: if ( ; left CaMeL Type . get CaMeL Type ( ;
rank: 407
score: 98.5906982421875
patch: break ; break ; } else continue ;
rank: 407
score: 98.55313546316964
patch: break ; / ? break ;
rank: 407
score: 98.47647094726562
patch: break ; break ; break ; = break ;
rank: 408
score: 99.15758338341347
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( parent . get CaMeL JS CaMeL Type ( ) ) ;
rank: 408
score: 99.1368075284091
patch: right CaMeL Type = validator . is CaMeL Expression CaMeL Node ( n . get CaMeL Type ( ) ) ;
rank: 408
score: 99.13440551757813
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL
rank: 408
score: 98.79529571533203
patch: right CaMeL Type = node . get CaMeL Parent CaMeL Node ( break ) ;
rank: 408
score: 98.71002960205078
patch: binding . expect CaMeL Number ( t . get CaMeL Type ( ) ) .
rank: 408
score: 98.62442220052084
patch: if ( ; right CaMeL Type . get CaMeL Type ( ) == ;
rank: 408
score: 98.5901870727539
patch: return break ; } catch ; }
rank: 408
score: 98.47637384588069
patch: break ; break ; break ; break ; } }
rank: 409
score: 99.13431803385417
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Node ( ) ) ;
rank: 409
score: 99.05901421440973
patch: right CaMeL Type = get CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 409
score: 98.79515838623047
patch: right CaMeL Type = right CaMeL Type . get CaMeL Id ( break ) ;
rank: 409
score: 98.70994657628677
patch: t . get CaMeL Type ( ) . visit CaMeL Get CaMeL Prop ( ) ;
rank: 409
score: 98.62405831473214
patch: if ( right CaMeL Type . get CaMeL Type CaMeL Name ( ;
rank: 409
score: 98.5526123046875
patch: break ; break ; * *
rank: 409
score: 98.47575073242187
patch: break ; break ; ; / / / /
rank: 410
score: 99.15741577148438
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . throw CaMeL
rank: 410
score: 99.134296875
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ; }
rank: 410
score: 99.05860053168402
patch: validator . get CaMeL Type ( n . get CaMeL Type ( ) ) . child CaMeL
rank: 410
score: 98.79369099934895
patch: ; switch ( n . get CaMeL Type ( ) )
rank: 410
score: 98.70960411658653
patch: t . get CaMeL Type ( ) . set CaMeL Type (
rank: 410
score: 98.62403779871323
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . value ) ;
rank: 410
score: 98.58929443359375
patch: break ; while break ; }
rank: 410
score: 98.55247497558594
patch: break ; break ; case $NUMBER$ ;
rank: 410
score: 98.4754638671875
patch: break ; break ; break ; break ; * /
rank: 411
score: 99.15728204900569
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL Type ( ) ) ) {
rank: 411
score: 99.13631399054276
patch: right CaMeL Type = node . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 411
score: 99.134228515625
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . to CaMeL String ( ) ;
rank: 411
score: 99.05837833180146
patch: set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n ) ) ;
rank: 411
score: 98.79356971153847
patch: left = visit CaMeL Name ( t , n , parent ;
rank: 411
score: 98.70903463924633
patch: n . get CaMeL First CaMeL Child ( ) . expect CaMeL Number ( ) ;
rank: 411
score: 98.62349446614583
patch: sb . append ( $STRING$ ) . append ( symbol CaMeL Name ) ;
rank: 411
score: 98.58916473388672
patch: } else ; if break ; }
rank: 412
score: 99.15713500976562
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 412
score: 99.13622368706598
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n , n , parent ) ;
rank: 412
score: 99.13403930664063
patch: typeable = right CaMeL Type . get CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 412
score: 99.05824681332237
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 412
score: 98.79354858398438
patch: this . ; ; this . ; this . ; this . ; return ;
rank: 412
score: 98.7080307006836
patch: continue ; case Token . TRUE :
rank: 412
score: 98.62328383501838
patch: sb . append ( $STRING$ ) . append ( node . get CaMeL Type ( ;
rank: 412
score: 98.58831787109375
patch: } else ; else return ;
rank: 412
score: 98.55223083496094
patch: break ; break ; else * /
rank: 412
score: 98.47472534179687
patch: break ; break ; break ; else / /
rank: 413
score: 99.15701497395834
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 413
score: 99.13617234002976
patch: typeable = ! ( child CaMeL Type . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) ;
rank: 413
score: 99.13385881696429
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 413
score: 99.05819881663604
patch: left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 413
score: 98.7934814453125
patch: left CaMeL Type = right CaMeL Type . get CaMeL Parent ( ) ;
rank: 413
score: 98.70773111979166
patch: old CaMeL Name = left CaMeL Type . get CaMeL Type ( ) ;
rank: 413
score: 98.62275526258681
patch: break ; case Token . DELIMITER : ;
rank: 413
score: 98.58827209472656
patch: return break ; else return ; }
rank: 413
score: 98.55160958426339
patch: } else { break ; int
rank: 413
score: 98.47457885742188
patch: break ; break ; return ; } return ;
rank: 414
score: 99.05815686677632
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL
rank: 414
score: 98.79347229003906
patch: right CaMeL Type = node . get CaMeL Parent CaMeL Node ( ) ; ;
rank: 414
score: 98.7071304321289
patch: continue ; case Token . NEG :
rank: 414
score: 98.62263039981617
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Parent ( ) )
rank: 414
score: 98.58814239501953
patch: } else if ; else break ;
rank: 414
score: 98.5511474609375
patch: break ; break ; else { break ;
rank: 414
score: 98.47340698242188
patch: break ; break ; if break ; if ;
rank: 415
score: 99.15646701388889
patch: validator . get CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 415
score: 99.1352030436198
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( $STRING$ ) ;
rank: 415
score: 99.13317192925348
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) , n ) ;
rank: 415
score: 98.79264068603516
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ( ; * /
rank: 415
score: 98.7069580078125
patch: return Node CaMeL Util . op CaMeL To CaMeL Str ( parent ) ;
rank: 415
score: 98.62252468532986
patch: break ; case ; default : break ;
rank: 415
score: 98.58809116908482
patch: if break ; while break ;
rank: 415
score: 98.55105590820312
patch: break ; break ; case Integer . next ;
rank: 415
score: 98.4725341796875
patch: break ; break ; break ; if break ; /
rank: 416
score: 99.13492838541667
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 416
score: 99.13245738636364
patch: typeable = right CaMeL Type . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 416
score: 99.05772399902344
patch: get CaMeL Type ( n . get CaMeL Type ( ) ) . set CaMeL
rank: 416
score: 98.7069091796875
patch: switch ( ! child CaMeL Type . matches CaMeL Int 32 Context ( ) )
rank: 416
score: 98.6216681985294
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Style ( ) ;
rank: 416
score: 98.58692278180804
patch: break ; } catch ( ;
rank: 416
score: 98.4722391764323
patch: break ; break ; break ; / / / / /
rank: 417
score: 99.156005859375
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 417
score: 99.13226318359375
patch: ensure CaMeL Typed ( left CaMeL Type , n . get CaMeL Type ( ) ) ;
rank: 417
score: 99.05765380859376
patch: right CaMeL Type = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL
rank: 417
score: 98.7068230124081
patch: return Node CaMeL Util . op CaMeL To CaMeL Str ( parent , n ) ;
rank: 417
score: 98.62135314941406
patch: buffer . append ( $STRING$ ) ;
rank: 417
score: 98.58641052246094
patch: return break ; } } if ;
rank: 417
score: 98.550537109375
patch: i . out . println ( $STRING$ + break ;
rank: 417
score: 98.4720791903409
patch: break ; break ; break ; break ; if ;
rank: 418
score: 99.15599609375
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( child CaMeL Type . get CaMeL First CaMeL Child ( ) ) )
rank: 418
score: 99.134794921875
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 418
score: 99.13196411132813
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 418
score: 99.05738321940105
patch: right CaMeL Type = get CaMeL Name ( n ) ;
rank: 418
score: 98.79066819411058
patch: break ; case Token . NONE : visit CaMeL Name ( ;
rank: 418
score: 98.70651245117188
patch: return t . get CaMeL Type ( ) . expect CaMeL Number ( ) ;
rank: 418
score: 98.62134898792614
patch: break ; case Token . MIN _ VALUE : ;
rank: 418
score: 98.58638509114583
patch: break ; false ; }
rank: 418
score: 98.55047607421875
patch: } while break ; break ;
rank: 419
score: 99.15576934814453
patch: validator . set CaMeL JS CaMeL Type ( JS CaMeL Type . FUNCTION ) ;
rank: 419
score: 99.13455200195312
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( node . get CaMeL Type ( ) ) ;
rank: 419
score: 99.13181762695312
patch: ensure CaMeL Typed ( left CaMeL Type , right CaMeL Type . to CaMeL String ( ) ) ;
rank: 419
score: 99.05708451704545
patch: name = n . get CaMeL Type ( ) ;
rank: 419
score: 98.79060872395833
patch: this . ; this . ; this . ; this . right = ;
rank: 419
score: 98.7064437866211
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL JS CaMeL
rank: 419
score: 98.6211181640625
patch: right = break ; case Token . NAME :
rank: 419
score: 98.54989188058036
patch: } finally ; break ; ;
rank: 419
score: 98.47177124023438
patch: break ; break ; break ; ; / /
rank: 420
score: 99.1328594501202
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 420
score: 99.1317138671875
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 420
score: 99.05705710018383
patch: = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 420
score: 98.79052734375
patch: break ; default : throw new ; ;
rank: 420
score: 98.70623779296875
patch: switch ( left CaMeL Type ) {
rank: 420
score: 98.62110137939453
patch: break ; case Token . ADD :
rank: 420
score: 98.58512369791667
patch: else { break ; break ; } }
rank: 420
score: 98.549072265625
patch: break ; * * ; /
rank: 420
score: 98.47127075195313
patch: break ; break ; else break ; return ;
rank: 421
score: 99.155654296875
patch: validator . left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 421
score: 99.13283469460227
patch: left CaMeL Type = validator . get CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 421
score: 98.79045758928571
patch: right CaMeL Type = visit CaMeL Name ( break , parent ) ;
rank: 421
score: 98.70612335205078
patch: break ; case Token . GETPROP :
rank: 421
score: 98.62101745605469
patch: sb . append ( $STRING$ ) . append ( this . get CaMeL Name ;
rank: 421
score: 98.58498128255208
patch: break ; } else {
rank: 421
score: 98.54895782470703
patch: break ; next ; if break ;
rank: 421
score: 98.47109985351562
patch: break ; break ; } break ; break ; break ;
rank: 422
score: 99.15547688802083
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 422
score: 99.13276977539063
patch: get CaMeL JS CaMeL Type ( left CaMeL Type ) . right CaMeL Type = validator . get CaMeL
rank: 422
score: 99.13115583147321
patch: typeable = child CaMeL Type . get CaMeL Name ( ) ;
rank: 422
score: 99.0568618774414
patch: if ( ! child CaMeL Type . matches ( n . get CaMeL Node CaMeL
rank: 422
score: 98.7902323404948
patch: this . ; this . ; this . ; return ;
rank: 422
score: 98.62081909179688
patch: if ( ; left CaMeL Type . get CaMeL Type CaMeL Name ( ) ;
rank: 422
score: 98.58486938476562
patch: } else { else = break ;
rank: 422
score: 98.54871283637152
patch: } * * / if break false ;
rank: 422
score: 98.47102573939732
patch: if break ; ; break ;
rank: 423
score: 99.15524291992188
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 423
score: 99.13275146484375
patch: get CaMeL JS CaMeL Type ( n , n . get CaMeL Type ( ) ) ;
rank: 423
score: 99.13111572265625
patch: right = get CaMeL Instance CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 423
score: 99.05672878689236
patch: left CaMeL Type = get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 423
score: 98.78946685791016
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) ; ;
rank: 423
score: 98.70478372012867
patch: return . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ||
rank: 423
score: 98.62042999267578
patch: break ; case Token . code :
rank: 423
score: 98.58479817708333
patch: break ; } } else { return ;
rank: 423
score: 98.54816545758929
patch: } * * ; break {
rank: 424
score: 99.15512424045139
patch: validator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; break ;
rank: 424
score: 99.13199655633224
patch: typeable = Node CaMeL Util . is CaMeL Expression CaMeL Node ( left CaMeL Type ) ;
rank: 424
score: 99.13084581163194
patch: ensure CaMeL Typed ( node , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 424
score: 99.05663452148437
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL Type ( ) ) ) {
rank: 424
score: 98.78867750901442
patch: right = visit CaMeL Name ( ; right CaMeL Type = ;
rank: 424
score: 98.7041015625
patch: break ; case Token . REGEXP :
rank: 424
score: 98.62034301757812
patch: break ; case Char CaMeL Sequence . TYPE :
rank: 424
score: 98.58455984933036
patch: break ; } } if ;
rank: 424
score: 98.5479736328125
patch: value * break ; break ;
rank: 425
score: 99.15506417410714
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 425
score: 99.1317889873798
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) )
rank: 425
score: 99.1304995888158
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 425
score: 98.70356096540179
patch: return t . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 425
score: 98.62027587890626
patch: break ; case Token . TYPE : return ;
rank: 425
score: 98.58424377441406
patch: break ; * * * * /
rank: 425
score: 98.54758998325893
patch: } else { break ; *
rank: 425
score: 98.47047119140625
patch: break ; if ; break ; if break ;
rank: 426
score: 99.15456717354911
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 426
score: 99.13129340277777
patch: validator . expect CaMeL Number ( t , n . get CaMeL Type ( ) ) ;
rank: 426
score: 99.13031005859375
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( left CaMeL Type ) ;
rank: 426
score: 99.05563354492188
patch: fail ( t . get CaMeL Type ( ) ) ;
rank: 426
score: 98.78720092773438
patch: this . ; this . ; ; this . ; this . ; return ;
rank: 426
score: 98.70354352678571
patch: n . get CaMeL Type ( ) . case Token . CALL :
rank: 426
score: 98.62000325520833
patch: switch ( n . get CaMeL Type ( ) ) { ; case ;
rank: 426
score: 98.58421325683594
patch: } else { } else ; }
rank: 426
score: 98.54753960503473
patch: break ; ; / / / / /
rank: 426
score: 98.47001342773437
patch: break ; break ; break ; / * /
rank: 427
score: 99.15433756510417
patch: validator . child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 427
score: 99.13067016601562
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . right CaMeL Type ;
rank: 427
score: 99.129892578125
patch: get CaMeL JS CaMeL Type ( n ) . ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 427
score: 99.05556640625
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Child CaMeL
rank: 427
score: 98.7867202758789
patch: right CaMeL Type = n . get CaMeL Parent CaMeL Node ( break ) ;
rank: 427
score: 98.70353698730469
patch: return t . get CaMeL Type ( ) . get CaMeL Node ( ) ;
rank: 427
score: 98.61978149414062
patch: break ; case ; case Token . ; :
rank: 427
score: 98.58373260498047
patch: return break ; null ; break ;
rank: 427
score: 98.54739379882812
patch: break ; case ] { break ;
rank: 427
score: 98.46808416193181
patch: break ; break ; / / / / / /
rank: 428
score: 99.15425248579545
patch: validator . child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 428
score: 99.1306088096217
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type ( ) ;
rank: 428
score: 99.12983630952381
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL
rank: 428
score: 99.05553327287946
patch: right CaMeL Type = ! parent . get CaMeL Type ( ) ;
rank: 428
score: 98.78668975830078
patch: right CaMeL Type = parent . get CaMeL Type ( ) . name ( ;
rank: 428
score: 98.70303344726562
patch: break . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This
rank: 428
score: 98.61971609933036
patch: if ( ; right CaMeL Type . get CaMeL Style ( ) ;
rank: 428
score: 98.58340793185764
patch: else = break ; } else break ;
rank: 428
score: 98.54730987548828
patch: break ; ; / / / :
rank: 428
score: 98.46805245535714
patch: if break ; break ; else
rank: 429
score: 99.15421919389205
patch: validator . set CaMeL JS CaMeL Type ( node . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 429
score: 99.1303180197011
patch: typeable = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ;
rank: 429
score: 99.12974548339844
patch: } child CaMeL Type = n . get CaMeL First CaMeL Child ( ) ;
rank: 429
score: 99.05533640008224
patch: if ( t . get CaMeL Name ( ) . is CaMeL Expression CaMeL Node ( ) )
rank: 429
score: 98.7865741436298
patch: left = visit CaMeL Name ( ; right CaMeL Type = ;
rank: 429
score: 98.70201619466145
patch: { parent . ensure CaMeL Typed ( t . get CaMeL
rank: 429
score: 98.61916934742646
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . type ( ;
rank: 429
score: 98.54725864955357
patch: break ; value ; break ;
rank: 429
score: 98.4666748046875
patch: break ; break ; break ; return ; break ; }
rank: 430
score: 99.15390159970238
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 430
score: 99.12990315755208
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL Type ( ) ) ;
rank: 430
score: 98.78651646205357
patch: child CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ;
rank: 430
score: 98.70191301618304
patch: return Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent )
rank: 430
score: 98.61866344105114
patch: switch ( n . ; case Token . TYPE :
rank: 430
score: 98.54710804332386
patch: break ; break ; case case $STRING$ : break ;
rank: 430
score: 98.46599469866071
patch: break ; break ; ; else
rank: 431
score: 99.15369466145833
patch: validator . set CaMeL JS CaMeL Type ( left CaMeL Type ) ; }
rank: 431
score: 99.1296619233631
patch: typeable = ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( typeable ) ;
rank: 431
score: 99.05272498497597
patch: right CaMeL Type = JS CaMeL Type . BIT _ OPERATION ;
rank: 431
score: 98.78599548339844
patch: left CaMeL Type = visit CaMeL Name ( t , n , parent ) ;
rank: 431
score: 98.61858520507812
patch: break ; case Token . DEFAULT : break ;
rank: 431
score: 98.54656304253473
patch: if break ; break ; ; break ;
rank: 431
score: 98.46590169270833
patch: break ; break ; if break ; / / / /
rank: 432
score: 99.15355506310097
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Value ( ) ) ;
rank: 432
score: 99.12961647727273
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( n . get CaMeL Type ( ) ) ;
rank: 432
score: 99.12905051491477
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 432
score: 99.05243598090277
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL
rank: 432
score: 98.78556315104167
patch: this . ; this . ; this . ; break ; default : ;
rank: 432
score: 98.70156625600961
patch: n . get CaMeL Type ( ) . visit CaMeL Name (
rank: 432
score: 98.58186170789931
patch: return break ; this . break ; }
rank: 432
score: 98.54622105189732
patch: break ; case else break ;
rank: 432
score: 98.46385609019886
patch: break ; break ; break ; } } break ;
rank: 433
score: 99.15329996744792
patch: validator . set CaMeL Name ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 433
score: 99.1288425611413
patch: typeable = n . get CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 433
score: 99.05189615885416
patch: typeable = get CaMeL JS CaMeL Type ( n , parent ) ;
rank: 433
score: 98.78545673076923
patch: break ; case Token . TYPE : visit CaMeL Name ( ;
rank: 433
score: 98.70114135742188
patch: switch ( node . get CaMeL Type ( ) ) {
rank: 433
score: 98.61820162259616
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ;
rank: 433
score: 98.58162144252232
patch: break ; ; } else ;
rank: 433
score: 98.54618835449219
patch: } break ; ; if break ;
rank: 433
score: 98.46385609019886
patch: break ; break ; if ; break ; / /
rank: 434
score: 99.1287841796875
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 434
score: 99.1280184659091
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . to CaMeL String ( ) ;
rank: 434
score: 99.0510612936581
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 434
score: 98.78504638671875
patch: right CaMeL Type = right CaMeL Type . ;
rank: 434
score: 98.7010986328125
patch: break ; case Token . LP : / _
rank: 434
score: 98.61808013916016
patch: left = ; right = child CaMeL Type . get CaMeL Type ( ) ;
rank: 434
score: 98.58143615722656
patch: break ; } finally { if ;
rank: 434
score: 98.54595947265625
patch: break ; ; ; ?
rank: 434
score: 98.46377127511161
patch: break ; break ; break ; if break ; break ; break ;
rank: 435
score: 99.15298227163461
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Value ( ) ) ;
rank: 435
score: 99.12851434004934
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 435
score: 99.12782981178977
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 435
score: 99.05105108963816
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL Name ( ) ) )
rank: 435
score: 98.78487141927083
patch: right CaMeL Type = parent . get CaMeL Type ( ) . name ;
rank: 435
score: 98.70090619255515
patch: switch ( n . get CaMeL Type ( ) ) { case Token . LP :
rank: 435
score: 98.61788177490234
patch: if ( ; right CaMeL Type . get CaMeL Name ( ) . equals ;
rank: 435
score: 98.5796890258789
patch: return break ; if break ; }
rank: 435
score: 98.54541015625
patch: break ; out . println ( $STRING$ ; break ;
rank: 435
score: 98.46101518110795
patch: break ; break ; if break ; -- break ;
rank: 436
score: 99.12849609375
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Name ( ) ) ;
rank: 436
score: 99.12782981178977
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 436
score: 99.05031866776316
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( t . get CaMeL
rank: 436
score: 98.78383225661058
patch: break ; case Token . ; case Token . NULL : ;
rank: 436
score: 98.70040893554688
patch: System . . . . { ensure CaMeL Typed ( t , n ) ;
rank: 436
score: 98.61775716145833
patch: if ( ; n . get CaMeL Type ( ) . equals ( ;
rank: 436
score: 98.57918294270833
patch: return break ; } } } break ;
rank: 436
score: 98.54534912109375
patch: * break ; break ;
rank: 436
score: 98.46037153764205
patch: break ; break ; break ; else return ; }
rank: 437
score: 99.15271935096153
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type (
rank: 437
score: 99.1282958984375
patch: validator . typeable = t . get CaMeL JS CaMeL Type ( ) ;
rank: 437
score: 99.12779822716347
patch: right CaMeL Type = this . get CaMeL Type ( ) ;
rank: 437
score: 99.050048828125
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL
rank: 437
score: 98.6994140625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 437
score: 98.61770395132211
patch: left CaMeL Type = ; right CaMeL Type = ; break ;
rank: 437
score: 98.57904052734375
patch: } else if ; * /
rank: 437
score: 98.54523577008929
patch: break ; break ; ; -
rank: 437
score: 98.45868474786931
patch: break ; break ; break ; break ; } else
rank: 438
score: 99.15250069754464
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) ) ;
rank: 438
score: 99.12813313802083
patch: ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 438
score: 99.12754128196023
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 438
score: 99.04987127130681
patch: name = n . get CaMeL Name ( ) ;
rank: 438
score: 98.78327094184027
patch: right = ; left CaMeL Type = ;
rank: 438
score: 98.69902692522321
patch: n . get CaMeL Type ( ) . typeable = false ;
rank: 438
score: 98.61747436523437
patch: break ; case Token . TRUE : break ;
rank: 438
score: 98.57886614118304
patch: } else { } if ;
rank: 438
score: 98.54486083984375
patch: break ; else return ; ;
rank: 438
score: 98.4586514559659
patch: break ; break ; ; if break ; break ;
rank: 439
score: 99.15219350961539
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ; break ;
rank: 439
score: 99.12804158528645
patch: get CaMeL JS CaMeL Type ( ) . ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 439
score: 99.12745079627403
patch: right CaMeL Type = Node CaMeL Util . get CaMeL Type CaMeL Of CaMeL This ( n . get CaMeL Type ( ) ) ;
rank: 439
score: 99.04978434244792
patch: ensure CaMeL Typed ( t , t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 439
score: 98.78269740513393
patch: right CaMeL Type = visit CaMeL Name ( t , n break ;
rank: 439
score: 98.69838169642857
patch: t . get CaMeL Type ( ) . case Token . RETURN :
rank: 439
score: 98.61717878069196
patch: switch ( n . get CaMeL Type ; case Token . NAME :
rank: 439
score: 98.57880401611328
patch: else = break ; } else ;
rank: 439
score: 98.54456787109375
patch: break ; break ; out . next ( ;
rank: 439
score: 98.4559326171875
patch: break ; break ; break ; break ; break ; } break ;
rank: 440
score: 99.15195719401042
patch: validator . expect CaMeL Number ( t . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 440
score: 99.12794189453125
patch: right CaMeL Type = get CaMeL Types ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 440
score: 99.12739868164063
patch: child CaMeL Type = ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 440
score: 99.04972570082721
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Int CaMeL
rank: 440
score: 98.78229166666667
patch: left CaMeL Type = ; left CaMeL Type = right CaMeL Type . ;
rank: 440
score: 98.6962890625
patch: System . . . . ensure CaMeL Typed ( t . get CaMeL Current CaMeL
rank: 440
score: 98.61677381727431
patch: break ; case Token . ERROR : ;
rank: 440
score: 98.57866668701172
patch: } else ; } catch break ;
rank: 440
score: 98.45536295572917
patch: break ; break ; break ; if ; ++ break ;
rank: 441
score: 99.12786865234375
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n ) ;
rank: 441
score: 99.12703450520833
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 441
score: 99.04921311598558
patch: right CaMeL Type = get CaMeL Value ( n . get CaMeL
rank: 441
score: 98.78192901611328
patch: right CaMeL Type = ; break ;
rank: 441
score: 98.69617716471355
patch: n . set CaMeL Type ( Token . FUNCTION ) ;
rank: 441
score: 98.616455078125
patch: break ; case Token . ; case Token . DEFAULT :
rank: 441
score: 98.45480346679688
patch: break ; break ; break ; if ; break ; else
rank: 442
score: 99.15185546875
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 442
score: 99.12698025173611
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL Child CaMeL
rank: 442
score: 99.04920305524554
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( parent ) ;
rank: 442
score: 98.78105817522321
patch: right CaMeL Type = right CaMeL Type ( t , parent ) ;
rank: 442
score: 98.69532877604166
patch: return ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent )
rank: 442
score: 98.61639959161931
patch: break ; case Token . ; break ; default :
rank: 442
score: 98.57827758789062
patch: break break ; else ; break ;
rank: 442
score: 98.54383433948864
patch: break ; break ; out . out ; break ;
rank: 442
score: 98.45430131392045
patch: break ; break ; break ; while ; break ;
rank: 443
score: 99.15181477864583
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . report CaMeL
rank: 443
score: 99.12687882133152
patch: ensure CaMeL Typed ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ,
rank: 443
score: 99.04920111762152
patch: validator . add CaMeL Type ( t , n . get CaMeL Type ( ) ) ;
rank: 443
score: 98.78101524939903
patch: right CaMeL Type = visit CaMeL Name ( t break , ;
rank: 443
score: 98.69499206542969
patch: this . ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 443
score: 98.61598036024306
patch: break + 1 ; case Token . ;
rank: 443
score: 98.5763931274414
patch: else = break ; } catch ;
rank: 443
score: 98.54164632161458
patch: else break ; break ; if break ;
rank: 443
score: 98.45359450120192
patch: break ; break ; break ; if break ; } break ;
rank: 444
score: 99.12681884765625
patch: ensure CaMeL Typed ( left CaMeL Type , child CaMeL Type . to CaMeL String ( ) ) ;
rank: 444
score: 99.1265360514323
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( node . get CaMeL Type ( ) ) ;
rank: 444
score: 99.04911723889802
patch: typeable = validator . get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 444
score: 98.78049538352273
patch: break ; case Token . break : ; break ;
rank: 444
score: 98.69464111328125
patch: t . ensure CaMeL Typed ( t . get CaMeL Node ( ) ) ;
rank: 444
score: 98.61576625279018
patch: break . to CaMeL String ( ) ; case Token . TYPE :
rank: 444
score: 98.5754150390625
patch: } else * /
rank: 444
score: 98.54117431640626
patch: break ; break ; logger . out . ;
rank: 444
score: 98.45330255681819
patch: break ; break ; } break ; / / /
rank: 445
score: 99.1261848000919
patch: right CaMeL Type = child CaMeL Type . to CaMeL String ( ) ; break ;
rank: 445
score: 99.12615003083882
patch: right CaMeL Type = parent . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 445
score: 98.77986363002232
patch: right CaMeL Type = visit CaMeL Name ( ; right CaMeL Type ;
rank: 445
score: 98.69374186197916
patch: item = n . get CaMeL First CaMeL Child ( ) ; break ;
rank: 445
score: 98.61568450927734
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . type ;
rank: 445
score: 98.57508087158203
patch: } else { } } break ;
rank: 445
score: 98.54109330610795
patch: } else ; break ; System . out . println
rank: 445
score: 98.4528475674716
patch: break ; break ; break ; else break ; }
rank: 446
score: 99.15132279829545
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL New CaMeL
rank: 446
score: 99.12596978081598
patch: get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) . expect CaMeL
rank: 446
score: 99.04904513888889
patch: add CaMeL Type ( t , n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 446
score: 98.77972881610577
patch: right = visit CaMeL Name ( t break , parent ) ;
rank: 446
score: 98.69362967354911
patch: return t . get CaMeL Type ( ) . get CaMeL Node CaMeL
rank: 446
score: 98.61508358226104
patch: left = ; right = right CaMeL Type . get CaMeL Value CaMeL Type ( ;
rank: 446
score: 98.57506646050348
patch: break ; } else break ; break ;
rank: 447
score: 99.15067545572917
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) ; }
rank: 447
score: 98.77968343098958
patch: right CaMeL Type = visit CaMeL Name ( t break ;
rank: 447
score: 98.69343566894531
patch: if ( parent . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 447
score: 98.6145881204044
patch: switch ( n . get CaMeL Type ( ) . get CaMeL String ( ) )
rank: 447
score: 98.57503836495536
patch: break ; return ; } }
rank: 447
score: 98.54063197544643
patch: break ; ; ; return ;
rank: 447
score: 98.452392578125
patch: break ; break ; break ; break ; else /
rank: 448
score: 99.15065220424107
patch: validator . expect CaMeL Number ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 448
score: 99.12552012567934
patch: typeable = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL Type ( ) ) ;
rank: 448
score: 98.77875310724431
patch: right = ; left = visit CaMeL Name ( ;
rank: 448
score: 98.69324747721355
patch: System . . . .
rank: 448
score: 98.61457061767578
patch: break ; case Token . ANNOTATION :
rank: 448
score: 98.57447814941406
patch: } else if break ; return ;
rank: 448
score: 98.54011753627232
patch: else { break ; } ;
rank: 448
score: 98.45213734019886
patch: break ; break ; break ; if break ; ;
rank: 449
score: 99.15060546875
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ,
rank: 449
score: 99.12564086914062
patch: child CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 449
score: 99.12542255108173
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( left CaMeL Type ) . get CaMeL Type ( ) ;
rank: 449
score: 99.0480069247159
patch: set CaMeL JS CaMeL Type ( n . get CaMeL
rank: 449
score: 98.77773030598958
patch: right = visit CaMeL Name ( t , parent ) ;
rank: 449
score: 98.69322204589844
patch: this . ensure CaMeL Typed ( t . get CaMeL Scope ( ) ) ;
rank: 449
score: 98.61445886948529
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ;
rank: 449
score: 98.57394409179688
patch: } break ; } catch break ;
rank: 449
score: 98.54010009765625
patch: case 0 ] ; break ;
rank: 449
score: 98.44997336647727
patch: break ; break ; if ; * / return ;
rank: 450
score: 99.15016682942708
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 450
score: 99.1253662109375
patch: left CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 450
score: 98.7776590983073
patch: break ; default : throw new Runtime CaMeL Exception ( ;
rank: 450
score: 98.69316864013672
patch: result = Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ||
rank: 450
score: 98.61431012834821
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; }
rank: 450
score: 98.57389068603516
patch: return ; } } catch break ;
rank: 450
score: 98.53986150568181
patch: i . out . println break false ; * /
rank: 450
score: 98.44919057992789
patch: break ; break ; if break ; break ; break ; }
rank: 451
score: 99.150146484375
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ) ;
rank: 451
score: 99.12515963040866
patch: right CaMeL Type = type . get CaMeL Type ( ) ;
rank: 451
score: 99.12513427734375
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 451
score: 99.04754317434211
patch: validator . set CaMeL Type ( t . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 451
score: 98.77743765024039
patch: right CaMeL Type = ; right CaMeL Type = parent . ;
rank: 451
score: 98.6930908203125
patch: t . get CaMeL Type ( ) . expect CaMeL Number ( ) ;
rank: 451
score: 98.6142578125
patch: break ; case Node . ;
rank: 451
score: 98.57368977864583
patch: break break ; break ; } break ;
rank: 451
score: 98.53929901123047
patch: break ; / / / / {
rank: 451
score: 98.44712320963542
patch: break ; break ; this
rank: 452
score: 99.1499656394676
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 452
score: 99.12470838758681
patch: typeable = Node CaMeL Util . is CaMeL Expression CaMeL Node ( typeable ) ;
rank: 452
score: 99.12462439903847
patch: typeable = get CaMeL First CaMeL Child ( n ) ;
rank: 452
score: 98.77677095853366
patch: break ; case Token . NONE : right CaMeL Type = ;
rank: 452
score: 98.6930643717448
patch: case Token . FUNCTION :
rank: 452
score: 98.61388549804687
patch: break ; case ; case Token . TRUE :
rank: 452
score: 98.57345920138889
patch: break break ; } finally { return ;
rank: 452
score: 98.53926391601563
patch: break ; break ; ; ; if break ;
rank: 452
score: 98.4470547762784
patch: break ; } if break ; break ; break ;
rank: 453
score: 99.14994303385417
patch: validator . set CaMeL Name ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 453
score: 99.12465598366477
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . expect CaMeL Number ( ) ;
rank: 453
score: 99.12419297960069
patch: child CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n ) ;
rank: 453
score: 99.04732473273026
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ; }
rank: 453
score: 98.77654622395833
patch: this . ; this . ; this . ; this . parent = ;
rank: 453
score: 98.6924336751302
patch: get CaMeL JS CaMeL Type ( left CaMeL Type ) .
rank: 453
score: 98.61377671185662
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Value CaMeL Type ;
rank: 453
score: 98.57345581054688
patch: else = false ; break ; }
rank: 453
score: 98.53892299107143
patch: * * / break ; ;
rank: 453
score: 98.44647216796875
patch: break ; break ; break ; break ; break ; break ; }
rank: 454
score: 99.12439575195313
patch: child CaMeL Type = validator . get CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 454
score: 98.69198172433036
patch: n . get CaMeL Type ( ) . case Token . NAME :
rank: 454
score: 98.61376953125
patch: break ; case Token . STRING : case Token . ;
rank: 454
score: 98.57325575086806
patch: } else { } else if break ;
rank: 454
score: 98.53814697265625
patch: break ; break ; try { break ;
rank: 454
score: 98.44635009765625
patch: break ; break ; for ; ; ; ; break ;
rank: 455
score: 99.14962768554688
patch: validator . set CaMeL Name ( parent . get CaMeL Type ( ) ) ;
rank: 455
score: 99.12375775505515
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( ) ; break ;
rank: 455
score: 99.12306518554688
patch: get CaMeL First CaMeL Child ( t , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 455
score: 99.04581124441964
patch: right CaMeL Type = get CaMeL Value ( left CaMeL Type ) ;
rank: 455
score: 98.77531294389205
patch: break ; case Token . TYPE : ; break ;
rank: 455
score: 98.69144381009616
patch: System . . . . ensure CaMeL Typed ( t ) ;
rank: 455
score: 98.61374918619792
patch: break ; case Token . NAME ; ;
rank: 455
score: 98.57315499441964
patch: } break ; } else ;
rank: 455
score: 98.53805541992188
patch: } * * break /
rank: 455
score: 98.4462557705966
patch: break ; break ; break ; / / / }
rank: 456
score: 99.14880901834239
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 456
score: 99.12305850074405
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This (
rank: 456
score: 99.04532623291016
patch: set CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 456
score: 98.77529907226562
patch: this . ; this . ; ; this . ; ;
rank: 456
score: 98.69120025634766
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) :
rank: 456
score: 98.61367458767361
patch: if ( base CaMeL Type != null )
rank: 456
score: 98.57250298394098
patch: } else { } else ; break ;
rank: 456
score: 98.53795623779297
patch: break ; / * / / ;
rank: 456
score: 98.44471324573864
patch: break ; break ; break ; ; / / /
rank: 457
score: 99.12345581054687
patch: typeable = n . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 457
score: 99.1230236235119
patch: child CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 457
score: 99.0448989868164
patch: get CaMeL Type CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 457
score: 98.774658203125
patch: right CaMeL Type ; right CaMeL Type = right CaMeL Type ; break ;
rank: 457
score: 98.69086565290179
patch: System . . . . ensure CaMeL Typed ( parent . get CaMeL
rank: 457
score: 98.61274270450367
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Class ( ) )
rank: 457
score: 98.53788757324219
patch: break ; break ; ; false {
rank: 457
score: 98.44400728665866
patch: break ; break ; break ; break ; if ; break ;
rank: 458
score: 99.1228759765625
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 458
score: 99.122861328125
patch: left CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 458
score: 99.04458279079861
patch: right CaMeL Type = child CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 458
score: 98.77464803059895
patch: left CaMeL Type = visit CaMeL Name ( t , ;
rank: 458
score: 98.69013671875
patch: break ; case Token . Token . LP :
rank: 458
score: 98.6127217610677
patch: if ( right CaMeL Type . get CaMeL Type ( ;
rank: 458
score: 98.53764204545455
patch: break ; out . add CaMeL All ( true ;
rank: 458
score: 98.44394155649039
patch: break ; break ; break ; if break ; break ; }
rank: 459
score: 99.12283935546876
patch: ensure CaMeL Typed ( left CaMeL Type , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 459
score: 99.12283325195312
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL Type ( ) ) ;
rank: 459
score: 99.04442003038194
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( t ) ;
rank: 459
score: 98.77330525716145
patch: this . ; this . ; break ; default : ;
rank: 459
score: 98.68749060997597
patch: old CaMeL Name = parent . get CaMeL Type ( ) ;
rank: 459
score: 98.6126708984375
patch: break ; case Token . PREFIX : case Token . ;
rank: 459
score: 98.57138061523438
patch: = break ; } catch break ;
rank: 459
score: 98.53717803955078
patch: break ; while break ; break ;
rank: 459
score: 98.44347127278645
patch: break ; break ; break ; if ; if break ;
rank: 460
score: 99.14841037326389
patch: validator . set CaMeL Type ( t . get CaMeL Type ( ) ) ; break ;
rank: 460
score: 99.12274169921875
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n , n ) ;
rank: 460
score: 99.1226806640625
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Value ( ) ) ;
rank: 460
score: 98.77298409598214
patch: right CaMeL Type = left CaMeL Type . get CaMeL Name ( ;
rank: 460
score: 98.68668619791667
patch: { get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 460
score: 98.61266072591145
patch: break ; case Token . TYPE | Token . NULL :
rank: 460
score: 98.57106526692708
patch: else break ; } else { break ;
rank: 460
score: 98.5369873046875
patch: break ; break ; end false ;
rank: 460
score: 98.4429931640625
patch: break ; break ; } / / / / /
rank: 461
score: 99.148291015625
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 461
score: 99.12239797491776
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 461
score: 99.04150390625
patch: validator . set CaMeL Type ( Token . LP ) ;
rank: 461
score: 98.77239118303571
patch: right CaMeL Type = left CaMeL Type ; right CaMeL Type = ;
rank: 461
score: 98.6859639485677
patch: LOG . : t . get CaMeL Type ( ) ;
rank: 461
score: 98.61212158203125
patch: default : throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 461
score: 98.57048797607422
patch: if break ; break ; } }
rank: 461
score: 98.53692626953125
patch: break ; next ; ;
rank: 461
score: 98.44214884440105
patch: break ; break ; break ; if ; break ; ;
rank: 462
score: 99.14825080422794
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL
rank: 462
score: 99.12155151367188
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type = false ;
rank: 462
score: 99.04035949707031
patch: if ( ! child CaMeL Type . matches ( Token . LP ) ) {
rank: 462
score: 98.77217610677083
patch: right CaMeL Type ; right CaMeL Type = right CaMeL Type . type ;
rank: 462
score: 98.68560384114583
patch: case Token . FUNCTION : ensure CaMeL Typed ( t , n ) ;
rank: 462
score: 98.61195203993056
patch: break ; case Token . START : ;
rank: 462
score: 98.53632354736328
patch: break ; * ; / / /
rank: 462
score: 98.44143676757812
patch: break ; break ; =
rank: 463
score: 99.1480712890625
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 463
score: 99.12217018821023
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 463
score: 99.12152654474431
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . expect CaMeL All CaMeL
rank: 463
score: 99.03968224158653
patch: right CaMeL Type = get CaMeL Symbol ( n . get CaMeL
rank: 463
score: 98.7721435546875
patch: right CaMeL Type = visit CaMeL Name ( ; left CaMeL Type = ;
rank: 463
score: 98.68389337713069
patch: switch ( validator . get CaMeL Type ( ) )
rank: 463
score: 98.61176300048828
patch: break ; case Token . CHECK :
rank: 463
score: 98.57019805908203
patch: return break ; } } return ;
rank: 463
score: 98.53620147705078
patch: break ; break ; while null ;
rank: 463
score: 98.441162109375
patch: break ; break ; if break ; break ; break
rank: 464
score: 99.14804311899039
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 464
score: 99.12208092730978
patch: typeable = right CaMeL Type . to CaMeL String ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 464
score: 99.12141927083333
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 464
score: 99.03822954963235
patch: log ( Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL
rank: 464
score: 98.77153669084821
patch: right CaMeL Type = child CaMeL Type . get CaMeL Name ( ;
rank: 464
score: 98.68368326822916
patch: n . get CaMeL Type ( ) . get CaMeL Type ( ) :
rank: 464
score: 98.61155072380515
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Symbol ( ) ;
rank: 464
score: 98.57018280029297
patch: } else * * * break ;
rank: 464
score: 98.53565979003906
patch: break ; * / } break ;
rank: 464
score: 98.44047407670455
patch: break ; break ; break ; else / / /
rank: 465
score: 99.12113647460937
patch: validator = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 465
score: 99.03805541992188
patch: if ( ! child CaMeL Type . matches ( n . get CaMeL Child CaMeL
rank: 465
score: 98.77145182291666
patch: right CaMeL Type = ; left CaMeL Type = right CaMeL Type . ;
rank: 465
score: 98.68283517020089
patch: this . validator . ensure CaMeL Typed ( t , n ) ;
rank: 465
score: 98.61148681640626
patch: break ; case Token . TARGET : : ;
rank: 465
score: 98.57017008463542
patch: break break ; } else = break ;
rank: 465
score: 98.5356216430664
patch: break ; * / break ; /
rank: 465
score: 98.43820190429688
patch: break ; break ; break ; break ; -- break ;
rank: 466
score: 99.12108265269886
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 466
score: 99.03784993489583
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( n . get CaMeL
rank: 466
score: 98.77106584821429
patch: right CaMeL Type = right CaMeL Type . get CaMeL Id ( ;
rank: 466
score: 98.68245152064732
patch: n . get CaMeL Type ( ) . case Token . COMMA :
rank: 466
score: 98.61138916015625
patch: break ; case Token . STRING ;
rank: 466
score: 98.56970977783203
patch: } else { break break ; }
rank: 466
score: 98.53523254394531
patch: else break ; else { break ;
rank: 466
score: 98.43794389204545
patch: return ; break ; break ; break ; break ;
rank: 467
score: 99.12142944335938
patch: return n . get CaMeL JS CaMeL Type ( ) ;
rank: 467
score: 99.12081909179688
patch: set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 467
score: 99.03770536534927
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 467
score: 98.769970703125
patch: right CaMeL Type = right CaMeL Type ( ;
rank: 467
score: 98.68243408203125
patch: t . ensure CaMeL Typed ( t , n ) ;
rank: 467
score: 98.61071014404297
patch: if ( ; n . get CaMeL Type ( ) . equals ( $STRING$ ;
rank: 467
score: 98.56855991908482
patch: break ; false * break ;
rank: 467
score: 98.53513881138393
patch: break ; 0 ; break ;
rank: 467
score: 98.43707275390625
patch: break ; break ; break ; break ; } / /
rank: 468
score: 99.0375747680664
patch: add CaMeL Type ( t , n . get CaMeL Type ( ) ) ;
rank: 468
score: 98.76969401041667
patch: right CaMeL Type = right CaMeL Type . type ( ) . name ;
rank: 468
score: 98.68242730034723
patch: return ; case Token . BITNOT :
rank: 468
score: 98.61018880208333
patch: if ( ; right CaMeL Type . get CaMeL Name ( ) . ;
rank: 468
score: 98.56840006510417
patch: return break ; } if ; break ;
rank: 468
score: 98.53498077392578
patch: else = true ; if break ;
rank: 468
score: 98.43584650213069
patch: break ; break ; } break ; return ; }
rank: 469
score: 99.12102716619319
patch: right = n . get CaMeL Type ( ) ;
rank: 469
score: 99.12052648207721
patch: typeable = ! child CaMeL Type . matches CaMeL Int 32 Context ( ) ;
rank: 469
score: 99.03624674479167
patch: n . get CaMeL Type ( ) . to CaMeL String ( ) :
rank: 469
score: 98.68174525669643
patch: n . get CaMeL Type ( ) . case Token . VAR :
rank: 469
score: 98.60969761439732
patch: break ; default : t . set CaMeL Name ( ; break ;
rank: 469
score: 98.56835259331598
patch: break break ; } catch ; break ;
rank: 469
score: 98.53425598144531
patch: break ; finally ; if break ;
rank: 469
score: 98.43581136067708
patch: break ; break ; if break ; return ; break ;
rank: 470
score: 99.14729817708333
patch: validator . set CaMeL Name ( t . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 470
score: 99.1209357766544
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) ; break ;
rank: 470
score: 99.12049102783203
patch: JS CaMeL Type left CaMeL Type , right CaMeL Type , right CaMeL Type ;
rank: 470
score: 99.0358642578125
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 470
score: 98.76799180772569
patch: left CaMeL Type = right CaMeL Type ;
rank: 470
score: 98.68084716796875
patch: return ; case Token . DEC :
rank: 470
score: 98.60951450892857
patch: default : throw new Illegal CaMeL State CaMeL Exception ( break ) ;
rank: 470
score: 98.56832546657986
patch: break ; break ; } } else ;
rank: 470
score: 98.53422328404018
patch: break ; break ; value ;
rank: 470
score: 98.43430739182692
patch: break ; break ; break ; if ; break ; return ;
rank: 471
score: 99.14657156808036
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 471
score: 99.12042791193181
patch: typeable = left CaMeL Type . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 471
score: 99.11945543791118
patch: get CaMeL JS CaMeL Type ( left CaMeL Type ) . right CaMeL Type = typeable ;
rank: 471
score: 99.03572082519531
patch: validator . get CaMeL Type ( n . get CaMeL Type ( ) ) .
rank: 471
score: 98.76723022460938
patch: right = visit CaMeL Name ( ; * /
rank: 471
score: 98.68075125558036
patch: t . get CaMeL Type ( ) . case Token . NEW :
rank: 471
score: 98.60939243861607
patch: break . to CaMeL String ( ) ; case Token . NAME :
rank: 471
score: 98.5677490234375
patch: break ; } else }
rank: 471
score: 98.53401184082031
patch: break ; ; * / / ;
rank: 471
score: 98.43398215553977
patch: break ; break ; if break ; ; return ;
rank: 472
score: 99.146240234375
patch: validator . report ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 472
score: 99.1202725497159
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( left CaMeL Type , $STRING$ ) ;
rank: 472
score: 99.11942232572116
patch: get CaMeL JS CaMeL Type ( left CaMeL Type ) . right CaMeL Type = validator . get CaMeL First CaMeL Child ( ) ;
rank: 472
score: 99.0353644875919
patch: right CaMeL Type = get CaMeL Runtime ( ) . get CaMeL Type CaMeL Of CaMeL
rank: 472
score: 98.76683553059895
patch: break ; case Token . NAME : visit CaMeL Name ;
rank: 472
score: 98.67869215745192
patch: LOG . : t . get CaMeL Type ( ) . {
rank: 472
score: 98.60911865234375
patch: break ; case Token . PREFIX : ; ;
rank: 472
score: 98.567626953125
patch: return break ; * * break ;
rank: 472
score: 98.5337142944336
patch: break ; break ; ; $NUMBER$ ;
rank: 472
score: 98.433837890625
patch: break ; break ; if break ; break ; return ;
rank: 473
score: 99.14466616981908
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 473
score: 99.12006293402777
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 473
score: 99.03481876148896
patch: get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . {
rank: 473
score: 98.766796875
patch: left CaMeL Type = ; left CaMeL Type = visit CaMeL Name ( ;
rank: 473
score: 98.67860630580357
patch: switch ( t . get CaMeL Type CaMeL Name ( ) ) {
rank: 473
score: 98.6087176983173
patch: break ; default : break . to CaMeL String ( ; }
rank: 473
score: 98.56748962402344
patch: break ; * * break ; /
rank: 473
score: 98.53333875868056
patch: break ; break ; ; ; * /
rank: 473
score: 98.43302778764205
patch: break ; break ; if break ; return ; }
rank: 474
score: 99.12005060369319
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 474
score: 99.11921997070313
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 474
score: 99.03403607536765
patch: log ( Node CaMeL Util . op CaMeL To CaMeL Str ( t . get CaMeL
rank: 474
score: 98.67763264973958
patch: LOG . : t . get CaMeL Type ( ) .
rank: 474
score: 98.60811767578124
patch: break ; case Token . NULL : return ;
rank: 474
score: 98.56720842633929
patch: return ; break ; } else
rank: 474
score: 98.53305489676339
patch: break ; next || break ;
rank: 474
score: 98.43299449573864
patch: break ; if ; break ; break ; return ;
rank: 475
score: 99.14463297526042
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n ) . get CaMeL First CaMeL
rank: 475
score: 99.12005060369319
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 475
score: 98.67716761997768
patch: n . get CaMeL Type ( ) . case Token . NOT :
rank: 475
score: 98.56644694010417
patch: } else = break ; else return ;
rank: 475
score: 98.5329360961914
patch: break ; case ] ; break ;
rank: 475
score: 98.43216646634616
patch: break ; break ; break ; break ; / / / /
rank: 476
score: 99.11995849609374
patch: ensure CaMeL Typed ( left CaMeL Type , n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 476
score: 99.11819022042411
patch: visit CaMeL Name ( left CaMeL Type , right CaMeL Type ) ;
rank: 476
score: 99.03331756591797
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL Child CaMeL
rank: 476
score: 98.67716674804687
patch: get CaMeL JS CaMeL Type ( n ) ;
rank: 476
score: 98.6077392578125
patch: break ; case Token . TARGET : case ;
rank: 476
score: 98.56642659505208
patch: } else { } finally { break ;
rank: 476
score: 98.5328598022461
patch: break ; / / * / /
rank: 476
score: 98.43150838216145
patch: break ; break ; break ; } return ; break ;
rank: 477
score: 99.1434326171875
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL String ( ) ;
rank: 477
score: 99.11985270182292
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) ;
rank: 477
score: 99.11793009440105
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL Of CaMeL
rank: 477
score: 99.03186753216912
patch: validator . set CaMeL Type ( t . get CaMeL Type ( ) ) ; }
rank: 477
score: 98.76505737304687
patch: break ; case Token . break : ; ;
rank: 477
score: 98.67609112079327
patch: n . get CaMeL Type ( ) . add CaMeL Type (
rank: 477
score: 98.60763346354166
patch: left CaMeL Type = ; right CaMeL Type = super . visit ( ;
rank: 477
score: 98.56553344726562
patch: break ; } }
rank: 477
score: 98.53274972098214
patch: else { break ; * /
rank: 477
score: 98.4308194247159
patch: if break ; break ; break ; break ; else
rank: 478
score: 99.14306640625
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 478
score: 99.11783203125
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 478
score: 99.03166647518383
patch: right CaMeL Type = ! child CaMeL Type . matches ( left CaMeL Type ) ;
rank: 478
score: 98.76334054129464
patch: left CaMeL Type = parent . get CaMeL Parent CaMeL Node ( ;
rank: 478
score: 98.67584228515625
patch: get CaMeL JS CaMeL Type ( left CaMeL Type , parent ) ;
rank: 478
score: 98.60728454589844
patch: break ; default : continue ; }
rank: 478
score: 98.56499372209821
patch: break ; this . break ;
rank: 478
score: 98.53266906738281
patch: break ; * ; / / ;
rank: 478
score: 98.4306307705966
patch: break ; break ; break ; * / / /
rank: 479
score: 99.14291817801339
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 479
score: 99.11976841517857
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ; break ;
rank: 479
score: 99.11768450055804
patch: this . ensure CaMeL Typed ( t , left CaMeL Type ) ;
rank: 479
score: 98.76242065429688
patch: right CaMeL Type = visit CaMeL Name ( t ) ;
rank: 479
score: 98.67570277622768
patch: result = child CaMeL Type . matches CaMeL Int 32 ( ) ;
rank: 479
score: 98.6063983623798
patch: break ; case Token . TRUE : case Token . TRUE :
rank: 479
score: 98.56435818142361
patch: break ; * break ; } break ;
rank: 479
score: 98.53250122070312
patch: break ; ; ; break ; ;
rank: 479
score: 98.4301249186198
patch: break ; break ; if ; break ; break ; else
rank: 480
score: 99.14263044084821
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 480
score: 99.11972878196023
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 480
score: 99.1175537109375
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 480
score: 99.0304424579327
patch: left CaMeL Type = get CaMeL Type ( n . get CaMeL
rank: 480
score: 98.76238141741071
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ( ;
rank: 480
score: 98.60581461588542
patch: break ; case Token . TYPE | Token . TYPE ;
rank: 480
score: 98.56427680121527
patch: } else ; return break ; break ;
rank: 480
score: 98.531982421875
patch: } * * * /
rank: 480
score: 98.42942457932692
patch: break ; break ; if break ; break ; if break ;
rank: 481
score: 99.14256940569196
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 481
score: 99.11953590029762
patch: typeable = get CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 481
score: 99.117060546875
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 481
score: 98.76202392578125
patch: break ; case Token . NAME ;
rank: 481
score: 98.67495291573661
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) {
rank: 481
score: 98.6052978515625
patch: break ; case Token . UNKNOWN : ; ;
rank: 481
score: 98.56332833426339
patch: } else = true ; }
rank: 481
score: 98.531982421875
patch: break ; break ; case Boolean . 0 ;
rank: 481
score: 98.42894490559895
patch: break ; break ; break ; break ; break ; /
rank: 482
score: 99.14198811848958
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 482
score: 99.1168212890625
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent ) ;
rank: 482
score: 98.75993129185268
patch: right CaMeL Type = right CaMeL Type . type ( ) . ;
rank: 482
score: 98.6748046875
patch: t . get CaMeL Type ( ) . visit CaMeL Name (
rank: 482
score: 98.60528564453125
patch: left CaMeL Type = ; right CaMeL Type = t . get CaMeL Type ;
rank: 482
score: 98.56328473772321
patch: return ; false ; break ;
rank: 482
score: 98.53174591064453
patch: break ; case 0 : break ;
rank: 482
score: 98.42827899639423
patch: break ; if ; break ; break ; break ; break ;
rank: 483
score: 99.14134724934895
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type ( ) ;
rank: 483
score: 99.118720703125
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . to CaMeL String ( ) ;
rank: 483
score: 99.11658824573864
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . matches = false ;
rank: 483
score: 99.0292236328125
patch: if ( n . get CaMeL First CaMeL Child ( ) == n )
rank: 483
score: 98.75939069475446
patch: left CaMeL Type = visit CaMeL Name ( t , n , ;
rank: 483
score: 98.6739501953125
patch: table . ensure CaMeL Typed ( t . get CaMeL
rank: 483
score: 98.60453287760417
patch: break ; case Token . ; case Token . EMPTY :
rank: 483
score: 98.56312779017857
patch: break ; false ; } else
rank: 483
score: 98.4281338778409
patch: break ; } break ; if break ; break ;
rank: 484
score: 99.14110310872395
patch: validator . left CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 484
score: 99.1160137469952
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 484
score: 99.02866908482143
patch: right CaMeL Type = ! n . get CaMeL Type ( ) ;
rank: 484
score: 98.75896344866071
patch: left CaMeL Type = right CaMeL Type . get CaMeL Name ( ;
rank: 484
score: 98.67371622721355
patch: continue ; case Token . GET _ REF _ SPECIAL :
rank: 484
score: 98.6041971842448
patch: break ; case Token . ; case Token . NOT :
rank: 484
score: 98.53146362304688
patch: } * * / return break ;
rank: 484
score: 98.42743474786931
patch: break ; if break ; break ; break ; }
rank: 485
score: 99.11782836914062
patch: typeable = parent . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 485
score: 99.11595662434895
patch: validator . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 485
score: 99.02865600585938
patch: right CaMeL Type = ! child CaMeL Type ;
rank: 485
score: 98.67319161551339
patch: this . ensure CaMeL Typed ( t , n , parent ) ;
rank: 485
score: 98.60354379507211
patch: left CaMeL Type = ; right CaMeL Type = super . ;
rank: 485
score: 98.56196424696181
patch: break ; break ; } return break ;
rank: 485
score: 98.53143310546875
patch: else ; break ; ;
rank: 485
score: 98.42737926136364
patch: break ; break ; break ; else } break ;
rank: 486
score: 99.14090098505434
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( type . get CaMeL First CaMeL Child ( ) ) )
rank: 486
score: 99.1176249186198
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( t . get CaMeL Type ( ) ) ;
rank: 486
score: 99.1156717936198
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( true ) ;
rank: 486
score: 99.0280029296875
patch: set CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL
rank: 486
score: 98.7584228515625
patch: this . ; this . ; this . ; ; ;
rank: 486
score: 98.67050170898438
patch: continue ; case Token . TYPEOF :
rank: 486
score: 98.60254923502605
patch: switch ( n . get CaMeL Type ( ; match )
rank: 486
score: 98.56188092912946
patch: break ; } } finally ;
rank: 486
score: 98.53108215332031
patch: } * * ; break ; /
rank: 486
score: 98.42410982572116
patch: break ; break ; for ; ; ; ; ; break ;
rank: 487
score: 99.11760919744319
patch: right CaMeL Type = JS CaMeL Type . get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 487
score: 99.1156514485677
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( $STRING$ ) ;
rank: 487
score: 99.02798282398896
patch: typeable = get CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 487
score: 98.66993931361607
patch: Node left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 487
score: 98.60230431189903
patch: if ( ; n . get CaMeL Type ( ) != ;
rank: 487
score: 98.56102159288194
patch: } else { if break ; } else
rank: 487
score: 98.53106689453125
patch: break ; ; / / / / / /
rank: 487
score: 98.42393909801136
patch: break ; if break ; break ; if break ;
rank: 488
score: 99.14071890024039
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 (
rank: 488
score: 99.11739979619566
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 488
score: 99.11561075846355
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( t ) ;
rank: 488
score: 98.75640869140625
patch: t . set CaMeL Name ( name ) ;
rank: 488
score: 98.66888427734375
patch: LOG . : t . get CaMeL Type ( ) . set CaMeL
rank: 488
score: 98.60217963324652
patch: if ( left CaMeL Type != null )
rank: 488
score: 98.53083801269531
patch: break ; break ; value * /
rank: 488
score: 98.4237060546875
patch: break ; break ; break ; break ; return ; break ;
rank: 489
score: 99.140625
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL First CaMeL Child ( ) ;
rank: 489
score: 99.117119140625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( t ) ;
rank: 489
score: 99.1154276529948
patch: child CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL Type ( ) ) ;
rank: 489
score: 99.0273681640625
patch: right CaMeL Type = get CaMeL Runtime ( ) . get CaMeL Type CaMeL
rank: 489
score: 98.75617133246527
patch: break ; ; case Token . FUNCTION :
rank: 489
score: 98.6683349609375
patch: return . get CaMeL Type ( ) . visit CaMeL Name (
rank: 489
score: 98.60199381510417
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ;
rank: 489
score: 98.56049455915179
patch: break ; break ; ; }
rank: 489
score: 98.53073459201389
patch: break ; break ; out . next ;
rank: 489
score: 98.42368386008523
patch: break ; break ; break ; } -- break ;
rank: 490
score: 99.14052946671195
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( node . get CaMeL First CaMeL Child ( ) ) )
rank: 490
score: 99.1154052734375
patch: child CaMeL Type = validator . get CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 490
score: 99.02723795572916
patch: right CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL
rank: 490
score: 98.75611290564903
patch: break ; case Token . NULL : visit CaMeL Name ( ;
rank: 490
score: 98.66802106584821
patch: n . get CaMeL Type ( ) . case Token . STRING :
rank: 490
score: 98.60191345214844
patch: left = ; right = child CaMeL Type . get CaMeL Value ( ) ;
rank: 490
score: 98.5590591430664
patch: } else { break ; } finally
rank: 490
score: 98.5305887858073
patch: } * * / /
rank: 490
score: 98.4234286221591
patch: break ; break ; break ; if / / /
rank: 491
score: 99.13988240559895
patch: validator . set CaMeL Name ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 491
score: 99.11691080729166
patch: typeable = child CaMeL Type . to CaMeL String ( ) ; }
rank: 491
score: 99.02616373697917
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL
rank: 491
score: 98.7559814453125
patch: right = visit CaMeL Name ( t break , parent ;
rank: 491
score: 98.66796875
patch: t . get CaMeL Type ( ) . visit CaMeL Var (
rank: 491
score: 98.6017822265625
patch: left = break ; case Token . NAME :
rank: 491
score: 98.53056117466518
patch: } * break ; break ;
rank: 491
score: 98.42329915364583
patch: break ; break ; break ; return ; } break ;
rank: 492
score: 99.1394755045573
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 492
score: 99.025390625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) )
rank: 492
score: 98.75589425223214
patch: right CaMeL Type = right CaMeL Type . get CaMeL Parent ( ;
rank: 492
score: 98.66691371372768
patch: n . get CaMeL Type ( ) . case Token . GETELEM :
rank: 492
score: 98.60155487060547
patch: left = ; right = right CaMeL Type . get CaMeL Type ( ) ;
rank: 492
score: 98.55888536241319
patch: } else { } catch ; break ;
rank: 492
score: 98.52987331814236
patch: break ; break ; * / * /
rank: 492
score: 98.42259632457386
patch: break ; break ; break ; = / / /
rank: 493
score: 99.1390316611842
patch: validator . set CaMeL Name ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 493
score: 99.11671875
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Name ( ) ;
rank: 493
score: 99.0252914428711
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL Int CaMeL
rank: 493
score: 98.75588156960227
patch: parent = parent . get CaMeL Parent ( ) ;
rank: 493
score: 98.55876159667969
patch: } break ; true ; break ;
rank: 493
score: 98.5298360188802
patch: break ; case 1 ;
rank: 493
score: 98.42185280539773
patch: break ; else if break ; break ; break ;
rank: 494
score: 99.13877360026042
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL
rank: 494
score: 99.11503092447917
patch: child CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 494
score: 99.0245830829327
patch: validator . ensure CaMeL Typed ( t , n . get CaMeL
rank: 494
score: 98.66349283854167
patch: return Node CaMeL Util . op CaMeL To CaMeL Str (
rank: 494
score: 98.55870564778645
patch: break ; } if ;
rank: 494
score: 98.52935791015625
patch: break ; ; - * break ;
rank: 494
score: 98.42169189453125
patch: break ; else
rank: 495
score: 99.13866248497597
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( child CaMeL Type . get CaMeL First CaMeL Child ( ) ) ) {
rank: 495
score: 99.1165059407552
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ; break ;
rank: 495
score: 99.11496900475544
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) {
rank: 495
score: 99.02383422851562
patch: get CaMeL Type ( n . get CaMeL Type ( ) ) . get CaMeL
rank: 495
score: 98.75516357421876
patch: left ; right = visit CaMeL Name ( ;
rank: 495
score: 98.6634521484375
patch: } switch ( n . get CaMeL Type ( ) )
rank: 495
score: 98.60092397836539
patch: break ; case Token . TYPE : case Token . NULL :
rank: 495
score: 98.55848388671875
patch: return break ; else
rank: 495
score: 98.52900695800781
patch: catch break ; break ; ; ;
rank: 495
score: 98.42111440805289
patch: break ; break ; if ; break ; break ; return ;
rank: 496
score: 99.13814113451087
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 496
score: 99.1162109375
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Child CaMeL
rank: 496
score: 99.11461046006944
patch: this . ensure CaMeL Typed ( t , n . get CaMeL Type ( ) ) ;
rank: 496
score: 99.02205113002232
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( n ) ;
rank: 496
score: 98.75509207589286
patch: right = visit CaMeL Name ( t , n , parent break ;
rank: 496
score: 98.66226959228516
patch: return ; case Token . NAME :
rank: 496
score: 98.60072835286458
patch: break ; default : break false ; }
rank: 496
score: 98.55809783935547
patch: break ; / * * break ;
rank: 496
score: 98.52886199951172
patch: } * * ; break ; ;
rank: 496
score: 98.41951497395833
patch: break ; break ; break ; break ; ; return ;
rank: 497
score: 99.138017578125
patch: if ( this . child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 497
score: 99.11568509615384
patch: value = child CaMeL Type . to CaMeL String ( ) ;
rank: 497
score: 99.11451134314903
patch: child CaMeL Type = validator . get CaMeL Type ( ) ;
rank: 497
score: 99.021240234375
patch: if ( typeable . matches CaMeL Int 32 ( t . get CaMeL
rank: 497
score: 98.75415649414063
patch: break ; case Token . break : break ;
rank: 497
score: 98.66214599609376
patch: break ; case Token . GET _ REF :
rank: 497
score: 98.60052490234375
patch: pos = break ; case Token . ;
rank: 497
score: 98.5572509765625
patch: break break ; if break ;
rank: 497
score: 98.52763148716518
patch: } * * / break *
rank: 497
score: 98.4195048014323
patch: break ; break ; do
rank: 498
score: 99.13771654211956
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL
rank: 498
score: 99.11562674386161
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( n ) ;
rank: 498
score: 99.1144131747159
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 498
score: 99.02109375
patch: if ( n . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 498
score: 98.60032823350694
patch: break ; case Token . normalize ( ;
rank: 498
score: 98.55707550048828
patch: } else if ; if break ;
rank: 498
score: 98.52744838169643
patch: break ; 0 ; * /
rank: 498
score: 98.41721754807692
patch: break ; break ; if break ; break ; } break ;
rank: 499
score: 99.11555281929348
patch: typeable = child CaMeL Type . to CaMeL String ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 499
score: 99.11440558182566
patch: typeable = visit CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 499
score: 99.01974487304688
patch: ensure CaMeL Typed ( t , t . get CaMeL Type ( ) ) ;
rank: 499
score: 98.753662109375
patch: break ; default : break ; } else { ;
rank: 499
score: 98.66179865056819
patch: type = parent . get CaMeL Type ( ) ;
rank: 499
score: 98.6002909342448
patch: break ; case Token . TYPE : break ; default :
rank: 499
score: 98.55661349826389
patch: break ; break ; } else * /
rank: 499
score: 98.526611328125
patch: } * * / return false ;
rank: 499
score: 98.41676839192708
patch: break ; break ; if ; break ; } break ;
rank: 500
score: 99.1155517578125
patch: typeable = n . get CaMeL JS CaMeL Type ( ) ; }
rank: 500
score: 99.11419122869319
patch: get CaMeL JS CaMeL Type ( t . get CaMeL First CaMeL Child ( ) ) . validator . expect CaMeL
rank: 500
score: 99.01907348632812
patch: right CaMeL Type = get CaMeL Value ( n ) ;
rank: 500
score: 98.66135475852273
patch: case Token . LP : typeable = false ;
rank: 500
score: 98.52657645089286
patch: } * * break break *
rank: 500
score: 98.41672770182292
patch: break ; break ; break ; if / = break ;
rank: 501
score: 99.13746995192308
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type ) . to CaMeL String ( ) ;
rank: 501
score: 99.11412048339844
patch: typeable = ! child CaMeL Type . matches ( child CaMeL Type ) ;
rank: 501
score: 99.01779610770089
patch: if ( ! left CaMeL Type . matches ( t . get CaMeL
rank: 501
score: 98.75116436298077
patch: right CaMeL Type = visit CaMeL Name ( t break . ;
rank: 501
score: 98.65928141276042
patch: return t . get CaMeL Type ( ) . matches (
rank: 501
score: 98.60009155273437
patch: break ; case Token . STRING : : ;
rank: 501
score: 98.55653381347656
patch: break ; null } if break ;
rank: 501
score: 98.41665649414062
patch: break ; break ; break ; if ; break ; /
rank: 502
score: 99.11381022135417
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 502
score: 99.01680210658482
patch: set CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 502
score: 98.74981689453125
patch: break ; case Token . ; case Token . ; :
rank: 502
score: 98.65761496803977
patch: state . ensure CaMeL Typed ( t . get CaMeL
rank: 502
score: 98.5992431640625
patch: break ; default : t . set CaMeL Name ( $STRING$ ;
rank: 502
score: 98.55636596679688
patch: } else if ; else return ;
rank: 502
score: 98.52593122209821
patch: break ; / ++ * /
rank: 502
score: 98.41620427911931
patch: break ; break ; break ; ; if break ;
rank: 503
score: 99.13702862079327
patch: validator . set CaMeL JS CaMeL Type ( node . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ;
rank: 503
score: 99.01581682477679
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 503
score: 98.74922398158482
patch: this . ; this . ; this . ; break ; default :
rank: 503
score: 98.65482584635417
patch: state . ensure CaMeL Typed ( t , n ) ;
rank: 503
score: 98.59876360212054
patch: break ; case Token . TYPE _ PROP : case Token . ;
rank: 503
score: 98.55629475911458
patch: return break ; } } return break ;
rank: 503
score: 98.52531215122768
patch: break ; ; ; / ?
rank: 503
score: 98.4161376953125
patch: break ; } break ; break ; break ; }
rank: 504
score: 99.13688858695652
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL To CaMeL
rank: 504
score: 99.11454264322917
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL String ( ) ;
rank: 504
score: 99.1136474609375
patch: right CaMeL Type = parent . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 504
score: 99.01404571533203
patch: get CaMeL Base CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 504
score: 98.7490234375
patch: this . ; ; this . ; this . ;
rank: 504
score: 98.65431213378906
patch: break ; case Token . SET :
rank: 504
score: 98.59853108723958
patch: if ( ; right CaMeL Type == Token . TYPE )
rank: 504
score: 98.55598667689732
patch: } else return break ; }
rank: 504
score: 98.52512428977273
patch: break ; break ; * * * / break ;
rank: 504
score: 98.41578165690105
patch: break ; break ; if ; / / / / /
rank: 505
score: 99.13672746930804
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 505
score: 99.1127734375
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 505
score: 99.01337541852679
patch: right CaMeL Type = visit CaMeL Name ( n , parent ) ;
rank: 505
score: 98.65367431640625
patch: int left CaMeL Type , right CaMeL Type ;
rank: 505
score: 98.598388671875
patch: break ; case Token . hash CaMeL Code ( ) ;
rank: 505
score: 98.55582101004464
patch: break ; break ; true ;
rank: 505
score: 98.52480643136161
patch: try { break ; ; ;
rank: 505
score: 98.41541466346153
patch: break ; break ; break ; if ; return ; break ;
rank: 506
score: 99.13671875
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 506
score: 99.112763671875
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 506
score: 98.74704415457589
patch: left = visit CaMeL Name ( t , n , parent ) ;
rank: 506
score: 98.65296766493056
patch: return . get CaMeL Name ( ) ;
rank: 506
score: 98.59835815429688
patch: switch ( n . get CaMeL Type ; case Token . TYPE _ PROP :
rank: 506
score: 98.55563015407986
patch: } else if break ; if break ;
rank: 506
score: 98.52419607979911
patch: } / ] = break ;
rank: 506
score: 98.41510009765625
patch: break ; break ; break ; return ; } return ;
rank: 507
score: 99.11411354758523
patch: typeable = t . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 507
score: 99.11213989257813
patch: ensure CaMeL Typed ( t , parent ) ;
rank: 507
score: 99.01255798339844
patch: ensure CaMeL Typed ( t , n . get CaMeL Value ( ) ) ;
rank: 507
score: 98.74684651692708
patch: break ; case Token . ; case Token . FUNCTION :
rank: 507
score: 98.65065696022727
patch: n . ensure CaMeL Typed ( t . get CaMeL
rank: 507
score: 98.59820963541667
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ; }
rank: 507
score: 98.55562046595982
patch: else return ; } else ;
rank: 507
score: 98.52393341064453
patch: break ; break ; / / {
rank: 507
score: 98.4149169921875
patch: break ; break ; break ; break ; else }
rank: 508
score: 99.1362890625
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL JS CaMeL Type ( ) ) )
rank: 508
score: 99.11395263671875
patch: child CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 508
score: 99.11208984375
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . expect CaMeL Number ( t ) ;
rank: 508
score: 99.01239885602679
patch: } child CaMeL Type = n . get CaMeL Type ( ) ;
rank: 508
score: 98.74666748046874
patch: break ; case ; case Token . break :
rank: 508
score: 98.6491928100586
patch: return ; case Token . TRUE :
rank: 508
score: 98.59789276123047
patch: break ; case Token . mode :
rank: 508
score: 98.55436706542969
patch: break ; } finally = break ;
rank: 508
score: 98.5238037109375
patch: * break ; break ; ;
rank: 508
score: 98.41468394886364
patch: if break ; break ; break ; break ; }
rank: 509
score: 99.13605414496527
patch: validator . get CaMeL Type ( n . get CaMeL Type ( ) ) . report CaMeL
rank: 509
score: 99.01206970214844
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL
rank: 509
score: 98.74652099609375
patch: left = ; left CaMeL Type = right CaMeL Type ;
rank: 509
score: 98.648193359375
patch: this . ensure CaMeL Typed ( ) ;
rank: 509
score: 98.59781646728516
patch: break ; case Token . AND :
rank: 509
score: 98.55413818359375
patch: break break ; else { break ;
rank: 509
score: 98.52301703559027
patch: break ; ; break ; while break ;
rank: 509
score: 98.41425030048077
patch: break ; break ; break ; if break ; break ; ;
rank: 510
score: 99.11180701622597
patch: if ( typeable && ! Node CaMeL Util . is CaMeL
rank: 510
score: 99.01142883300781
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 510
score: 98.74521706321023
patch: right = visit CaMeL Name ( t break , ;
rank: 510
score: 98.64518599076705
patch: type = t . get CaMeL Type ( ) ;
rank: 510
score: 98.59777153862848
patch: if ( right CaMeL Type == null )
rank: 510
score: 98.55400848388672
patch: break ; * * break break ;
rank: 510
score: 98.52300262451172
patch: else break ; / / / ;
rank: 510
score: 98.4131368001302
patch: break ; break ; break ; if / / / /
rank: 511
score: 99.13547681725544
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ;
rank: 511
score: 99.1117655436198
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . matches CaMeL Int 32 Context ( ) ;
rank: 511
score: 98.7449239095052
patch: right CaMeL Type = super . visit ( t , ;
rank: 511
score: 98.6413065592448
patch: if ( parent . get CaMeL Type ( ) ) {
rank: 511
score: 98.59768676757812
patch: if ( ; right CaMeL Type . get CaMeL Style ( ) . equals ;
rank: 511
score: 98.55345153808594
patch: break ; true ; break ; }
rank: 511
score: 98.52269744873047
patch: break ; ; / * / /
rank: 511
score: 98.4126864346591
patch: break ; if ; break ; if ; break ;
rank: 512
score: 99.13546875
patch: right CaMeL Type = n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 512
score: 99.11318824404762
patch: typeable = child CaMeL Type . to CaMeL String ( t . get CaMeL Name ( ) ) ;
rank: 512
score: 99.11104642427884
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( node . get CaMeL First CaMeL Child ( ) ) ) {
rank: 512
score: 99.0112548828125
patch: right CaMeL Type = get CaMeL Type ( n . get CaMeL Node CaMeL
rank: 512
score: 98.74432373046875
patch: right CaMeL Type = right CaMeL Type . type ( ) ; ;
rank: 512
score: 98.6412353515625
patch: switch ( typeable . get CaMeL Type ( ) )
rank: 512
score: 98.55338832310268
patch: } break ; null ; }
rank: 512
score: 98.52262878417969
patch: } * * / while break ;
rank: 512
score: 98.4120381673177
patch: break ; break ; if break ; if ; break ;
rank: 513
score: 99.13521999782986
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL
rank: 513
score: 99.1109619140625
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type ;
rank: 513
score: 98.74420166015625
patch: left CaMeL Type = right CaMeL Type ; left CaMeL Type = ;
rank: 513
score: 98.63860529119319
patch: return visit CaMeL Name ( t , n ) ;
rank: 513
score: 98.5958964029948
patch: switch ( n . get CaMeL Type ( ; default :
rank: 513
score: 98.55331759982639
patch: return break ; break ; } catch ;
rank: 513
score: 98.52256774902344
patch: break ; for break ; ; ;
rank: 513
score: 98.41107177734375
patch: break ; break ; throw
rank: 514
score: 99.11082763671875
patch: right CaMeL Type = validator . visit CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 514
score: 98.63566080729167
patch: n . ensure CaMeL Typed ( t , n ) ;
rank: 514
score: 98.59549289279514
patch: break ; case Token . STRING : :
rank: 514
score: 98.52246965680804
patch: value = false ; break ;
rank: 514
score: 98.41103293678977
patch: break ; break ; ; break ; } break ;
rank: 515
score: 99.134423828125
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) )
rank: 515
score: 99.1126708984375
patch: right = left CaMeL Type . to CaMeL String ( ) ;
rank: 515
score: 99.11003766741071
patch: right CaMeL Type = n . get CaMeL Type ( ) ; }
rank: 515
score: 98.74418131510417
patch: break ; case Token . ; case Token . TARGET :
rank: 515
score: 98.6347412109375
patch: return ; case Token . REF _ SPECIAL :
rank: 515
score: 98.59443495008681
patch: form = break ; case Token . ;
rank: 515
score: 98.55198160807292
patch: break ; } else { return ; }
rank: 515
score: 98.52217320033482
patch: else break ; if break ;
rank: 515
score: 98.4108135516827
patch: break ; break ; break ; if break ; / / /
rank: 516
score: 99.13435872395833
patch: set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 516
score: 99.11261664496527
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) ; }
rank: 516
score: 99.10988206129808
patch: right = validator . get CaMeL First CaMeL Child ( ) ;
rank: 516
score: 98.74320162259616
patch: this . ; this . ; break ; default : break ;
rank: 516
score: 98.63311089409723
patch: continue . get CaMeL Type ( ) ;
rank: 516
score: 98.59386444091797
patch: if ( ; right CaMeL Type . get CaMeL Type CaMeL Name ( ; ;
rank: 516
score: 98.55172293526786
patch: } else if break ; }
rank: 516
score: 98.52206420898438
patch: break ; break ; case index ;
rank: 516
score: 98.41058904474431
patch: break ; break ; if break ; else return ;
rank: 517
score: 99.11255560980902
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) , $STRING$ ) ;
rank: 517
score: 99.10985389122597
patch: right CaMeL Type = Node CaMeL Util . get CaMeL Type CaMeL Of CaMeL This ( t . get CaMeL Type ( ) ) ;
rank: 517
score: 99.00698416573661
patch: right CaMeL Type = get CaMeL Instance CaMeL Type ( n ) ;
rank: 517
score: 98.74252658420139
patch: break ; default : ; this . ;
rank: 517
score: 98.63062744140625
patch: continue ; case Token . REF _ SPECIAL :
rank: 517
score: 98.59351942274306
patch: break ; case Token . Var : ;
rank: 517
score: 98.55063302176339
patch: return break ; return ; }
rank: 517
score: 98.52192687988281
patch: break ; break ; int * *
rank: 517
score: 98.40980113636364
patch: break ; break ; } if ; / / /
rank: 518
score: 99.1337890625
patch: if ( this . child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 518
score: 99.1123046875
patch: right CaMeL Type = get CaMeL Base CaMeL Type ( left CaMeL Type ) ;
rank: 518
score: 99.10958158052884
patch: right CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 518
score: 99.0068359375
patch: if ( typeable . matches CaMeL Int 32 ( n . get CaMeL
rank: 518
score: 98.74227201021634
patch: right = ; right CaMeL Type = right CaMeL Type . ;
rank: 518
score: 98.62896173650569
patch: this . ensure CaMeL Typed ( t . get CaMeL
rank: 518
score: 98.59332682291667
patch: sb . append ( $STRING$ ) . append ( type CaMeL Name ) ;
rank: 518
score: 98.55062430245536
patch: break ; case break ; }
rank: 518
score: 98.52176920572917
patch: } finally ; break ; if break ;
rank: 518
score: 98.40871756417411
patch: break ; break ; if ; break ; break ; } break ;
rank: 519
score: 99.11228434244792
patch: typeable = child CaMeL Type . get CaMeL First CaMeL Child ( ) ; break ;
rank: 519
score: 99.10950927734375
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( left CaMeL Type ,
rank: 519
score: 99.00587047230114
patch: right CaMeL Type = get CaMeL Type ( ) ;
rank: 519
score: 98.6263427734375
patch: state . ensure CaMeL Typed ( ) ;
rank: 519
score: 98.59309387207031
patch: left = ; right = child CaMeL Type . get CaMeL Prototype ( ) ;
rank: 519
score: 98.55059051513672
patch: } else ; else { break ;
rank: 519
score: 98.52120535714286
patch: } finally { break ; ;
rank: 519
score: 98.40855994591347
patch: break ; break ; break ; break ; break ; / /
rank: 520
score: 99.133671875
patch: if ( validator . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 520
score: 99.112216796875
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Name ( ) ) ;
rank: 520
score: 99.109375
patch: child CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 520
score: 98.7416659268466
patch: right CaMeL Type = ; break ; default : ;
rank: 520
score: 98.62244762073864
patch: t . set CaMeL Name ( t . get CaMeL
rank: 520
score: 98.59305826822917
patch: break ; case Token . BLOCK : ;
rank: 520
score: 98.55046251085069
patch: } else { break ; } finally ;
rank: 520
score: 98.52089146205357
patch: ++ break ; break ; ;
rank: 520
score: 98.4069073016827
patch: break ; break ; break ; if break ; else break ;
rank: 521
score: 99.1328125
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 521
score: 99.1092529296875
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( parent ) ;
rank: 521
score: 99.00485568576389
patch: right CaMeL Type = n . get CaMeL
rank: 521
score: 98.62235260009766
patch: break ; case Token . ) :
rank: 521
score: 98.59294128417969
patch: switch ( n . get CaMeL Type ( ) ; case Token . TYPE :
rank: 521
score: 98.52068219866071
patch: } * * } break ;
rank: 521
score: 98.40445382254464
patch: break ; break ; break ; break ; break ; } return ;
rank: 522
score: 99.13278537326389
patch: validator . child CaMeL Type = t . get CaMeL JS CaMeL Type ( ) ; }
rank: 522
score: 99.11202566964286
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Child CaMeL
rank: 522
score: 99.10921223958333
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL Type ( ) ) ;
rank: 522
score: 99.00443812779018
patch: validator . error ( t . get CaMeL Type ( ) ) ;
rank: 522
score: 98.622314453125
patch: return ; case Token . NULL :
rank: 522
score: 98.59287331321023
patch: break ; case Token . ATTRIBUTE _ FLAG : ;
rank: 522
score: 98.5495834350586
patch: break ; } catch ; return ;
rank: 522
score: 98.40340482271634
patch: break ; break ; } if break ; break ; break ;
rank: 523
score: 99.1326904296875
patch: validator . set CaMeL JS CaMeL Type ( node . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 523
score: 99.11192830403645
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 523
score: 99.108837890625
patch: left CaMeL Type = validator . get CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 523
score: 99.00437825520834
patch: right CaMeL Type = validator . get CaMeL Type ( t . get CaMeL
rank: 523
score: 98.74119059244792
patch: right CaMeL Type = node . get CaMeL Type ( ;
rank: 523
score: 98.62037242542614
patch: binding . expect CaMeL Number ( t . get CaMeL
rank: 523
score: 98.59237905649039
patch: break ; case Token . STRING : case Token . STRING :
rank: 523
score: 98.54892403738839
patch: } else if ( break ;
rank: 523
score: 98.51959228515625
patch: break ; ; / / / break /
rank: 523
score: 98.40238734654018
patch: break ; break ; break ; break ; break ; if break ;
rank: 524
score: 99.13231404622395
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL JS CaMeL Type ( ) ) ) {
rank: 524
score: 99.11124420166016
patch: typeable = child CaMeL Type . is CaMeL Expression CaMeL Node ( ) ;
rank: 524
score: 99.108720703125
patch: left CaMeL Type = this . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 524
score: 99.00316510881696
patch: if ( ! child CaMeL Type . equals ( parent . get CaMeL
rank: 524
score: 98.73996407645089
patch: this . ; this . ; this . ; this . visit ;
rank: 524
score: 98.6199951171875
patch: break ? get CaMeL JS CaMeL Type ( n ) :
rank: 524
score: 98.59235382080078
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type . type ;
rank: 524
score: 98.54830932617188
patch: break ; false ; if break ;
rank: 524
score: 98.5191421508789
patch: break ; break ; case int {
rank: 524
score: 98.4019775390625
patch: break ; break ; break ; break ; / / }
rank: 525
score: 99.13208946814903
patch: validator . if ( child CaMeL Type . matches CaMeL Int 32 ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 525
score: 99.110849609375
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 525
score: 99.10856797960069
patch: right CaMeL Type = set CaMeL Name ( n . get CaMeL Type ( ) ) ;
rank: 525
score: 99.00301106770833
patch: break ; case Token . LP : }
rank: 525
score: 98.73981267755681
patch: left = ; left = visit CaMeL Name ( ;
rank: 525
score: 98.61736297607422
patch: continue ; case Token . NULL :
rank: 525
score: 98.59212036132813
patch: if ( ; left CaMeL Type != null )
rank: 525
score: 98.54825846354167
patch: else { break ; } } catch ;
rank: 525
score: 98.51910400390625
patch: else = true ; while break ;
rank: 525
score: 98.4019775390625
patch: break ; break ; if break ; break ; break ; return ;
rank: 526
score: 99.132080078125
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Name ( ) ) ;
rank: 526
score: 99.11077880859375
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( n ) ;
rank: 526
score: 99.1084735576923
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . visit CaMeL Get CaMeL Prop ( ) ;
rank: 526
score: 99.00173715444711
patch: child CaMeL Type = get CaMeL Type ( n . get CaMeL
rank: 526
score: 98.73963274274554
patch: right CaMeL Type ; right CaMeL Type = right CaMeL Type ; ;
rank: 526
score: 98.615966796875
patch: n . get CaMeL Type ( ) . visit (
rank: 526
score: 98.59196333451705
patch: break ; case Token . NAME : ; ; ;
rank: 526
score: 98.54705810546875
patch: break ; in ; break ;
rank: 526
score: 98.51885986328125
patch: / * ] = break false ;
rank: 526
score: 98.40172322591145
patch: break ; break ; t
rank: 527
score: 99.1318359375
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 527
score: 99.10837720788044
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ?
rank: 527
score: 98.61577814275569
patch: break ? n . get CaMeL Type ( ) :
rank: 527
score: 98.59191216362848
patch: right = right CaMeL Type ; break ;
rank: 527
score: 98.5469462076823
patch: } break ; false ;
rank: 527
score: 98.51832275390625
patch: try { break ;
rank: 527
score: 98.40167236328125
patch: break ; break ; if ; break ; if break ;
rank: 528
score: 99.13133021763393
patch: validator . left CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 528
score: 99.11055324388587
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 528
score: 99.10809936523438
patch: child CaMeL Type = validator . get CaMeL Name ( t . get CaMeL Type ( ) ) ;
rank: 528
score: 99.00021362304688
patch: get CaMeL JS CaMeL Type ( n , parent ) ;
rank: 528
score: 98.7375996907552
patch: break ; case Token . break : case Token . ;
rank: 528
score: 98.61572265625
patch: level = n . get CaMeL Type ( ) ;
rank: 528
score: 98.591796875
patch: break ; default : options . put ( ;
rank: 528
score: 98.54637315538194
patch: else = break ; else = break ;
rank: 528
score: 98.51831665039063
patch: break ; break ; System . out . append
rank: 528
score: 98.4014892578125
patch: break ; } break ; break ; break ; break ;
rank: 529
score: 99.13088060461956
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 529
score: 99.11021484375
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( left ) ;
rank: 529
score: 99.10801188151042
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 529
score: 99.00019182477679
patch: right CaMeL Type = get CaMeL Type ( n , parent ) ;
rank: 529
score: 98.61541748046875
patch: System . : ensure CaMeL Typed ( t . get CaMeL
rank: 529
score: 98.59112548828125
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type . left ;
rank: 529
score: 98.54594590928819
patch: break ; null ; } catch break ;
rank: 529
score: 98.51810031467014
patch: break ; break ; for break ; ;
rank: 529
score: 98.40070049579327
patch: break ; break ; break ; return ; break ; break ;
rank: 530
score: 99.13074669471153
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL
rank: 530
score: 99.11016555059524
patch: typeable = t . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 530
score: 99.10791015625
patch: get CaMeL JS CaMeL Type ( n , n , parent ) ;
rank: 530
score: 98.99967738560268
patch: right CaMeL Type = ( JS CaMeL Type ) n . get CaMeL
rank: 530
score: 98.6144307454427
patch: case Token . RETURN :
rank: 530
score: 98.59104919433594
patch: left CaMeL Type = ; right CaMeL Type = right CaMeL Type . length ;
rank: 530
score: 98.54541778564453
patch: } else = false ; return ;
rank: 530
score: 98.51799774169922
patch: break ; break ; * * ;
rank: 530
score: 98.39805094401042
patch: break ; break ; if ; break ; else break ;
rank: 531
score: 99.13074669471153
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 531
score: 99.110107421875
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 531
score: 99.1077880859375
patch: right CaMeL Type = set CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 531
score: 98.99870082310268
patch: right CaMeL Type = parent . get CaMeL Type ( ) ; }
rank: 531
score: 98.61164994673295
patch: return ensure CaMeL Typed ( t , n ) ;
rank: 531
score: 98.59059448242188
patch: break ; case Char CaMeL Sequence . NULL :
rank: 531
score: 98.54529486762152
patch: break ; this . break ; } }
rank: 531
score: 98.517822265625
patch: try { break ; ;
rank: 531
score: 98.39800555889423
patch: break ; break ; break ; break ; } / / /
rank: 532
score: 99.13073199728261
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 532
score: 99.110029296875
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL Type ( ) ;
rank: 532
score: 99.10764567057292
patch: right CaMeL Type = parent . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( false ) ;
rank: 532
score: 98.99807303292411
patch: } left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 532
score: 98.73502022879464
patch: right CaMeL Type = n . get CaMeL Type ( ) ; ;
rank: 532
score: 98.61109161376953
patch: continue ; case Token . TYPE :
rank: 532
score: 98.59031846788194
patch: break ; case Token . ; continue ;
rank: 532
score: 98.54513549804688
patch: return break ; false ; break ;
rank: 532
score: 98.51770782470703
patch: break ; * * / / /
rank: 532
score: 98.3975830078125
patch: break ; break ; break ; break ; ; break ;
rank: 533
score: 99.13047790527344
patch: validator . child CaMeL Type = get CaMeL JS CaMeL Type ( n ) ;
rank: 533
score: 99.10997517903645
patch: validator . typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ;
rank: 533
score: 99.1076129415761
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) {
rank: 533
score: 98.99622521033653
patch: set CaMeL Type ( get CaMeL Type ( n . get CaMeL
rank: 533
score: 98.73413957868304
patch: child CaMeL Type = parent . get CaMeL Type ( ) ; ;
rank: 533
score: 98.60989379882812
patch: return get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 533
score: 98.59007568359375
patch: break ; case Token . ; ? * /
rank: 533
score: 98.54496256510417
patch: else = false ; break ; break ;
rank: 533
score: 98.39719645182292
patch: break ; break ; break ; break ; ++ break ;
rank: 534
score: 99.13002080502717
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 534
score: 99.10986328125
patch: typeable = n . get CaMeL JS CaMeL Type ( left CaMeL Type ) ; break ;
rank: 534
score: 99.10715157645089
patch: get CaMeL JS CaMeL Type ( ) . typeable = false ;
rank: 534
score: 98.73381805419922
patch: break ; default : throw ; ;
rank: 534
score: 98.60935465494792
patch: return . get CaMeL Type ( ) ;
rank: 534
score: 98.59004720052083
patch: switch ( ; case Token . TYPE :
rank: 534
score: 98.544921875
patch: return break ; } finally = break ;
rank: 534
score: 98.5164566040039
patch: break ; break ; ; / *
rank: 534
score: 98.3971455891927
patch: break ; break ; break ; if ; * / /
rank: 535
score: 99.12989153180804
patch: validator . expect CaMeL Number ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) .
rank: 535
score: 99.10694173177083
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL
rank: 535
score: 98.99400745738636
patch: ensure CaMeL Typed ( n , n . get CaMeL
rank: 535
score: 98.73351178850446
patch: left CaMeL Type = visit CaMeL Name ( t , parent ) ;
rank: 535
score: 98.60817260742188
patch: return ; case Token . GET _ REF :
rank: 535
score: 98.59003557477679
patch: break ; case Token . ; case Token . MIN _ VALUE :
rank: 535
score: 98.54478236607143
patch: break ; null break ; }
rank: 535
score: 98.516064453125
patch: break ; break ; while break ; break ;
rank: 535
score: 98.3970196063702
patch: break ; break ; if break ; break ; } return ;
rank: 536
score: 99.12978891225961
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL Of CaMeL
rank: 536
score: 99.1090799967448
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Value ( ) ;
rank: 536
score: 99.10691324869792
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( n ) ;
rank: 536
score: 98.99290114182692
patch: break ; case Token . NEW : typeable = false ;
rank: 536
score: 98.73213704427083
patch: this . ; ; this . ; this . ; ;
rank: 536
score: 98.60526275634766
patch: return ; case Token . NEG :
rank: 536
score: 98.58963716947116
patch: break ; case Token . TYPE : case Token . NAME :
rank: 536
score: 98.54465157645089
patch: } else ; } else ;
rank: 536
score: 98.51603393554687
patch: break ; break ; * / * break ;
rank: 536
score: 98.39691631610577
patch: break ; break ; break ; break ; } = break ;
rank: 537
score: 99.12933819110577
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Name ( ) ) ;
rank: 537
score: 99.10877685546875
patch: ensure CaMeL Typed ( n , n ) ;
rank: 537
score: 99.10670872738487
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 537
score: 98.99042217548077
patch: right CaMeL Type = child CaMeL Type ( n . get CaMeL
rank: 537
score: 98.60515802556819
patch: scope = n . get CaMeL Scope ( ) ;
rank: 537
score: 98.58934783935547
patch: left = ; right = child CaMeL Type . get CaMeL Parent ( ) ;
rank: 537
score: 98.54450225830078
patch: break ; } else } break ;
rank: 537
score: 98.51564025878906
patch: } * * / ; break ;
rank: 537
score: 98.39601487379808
patch: break ; break ; if ; if ; break ; break ;
rank: 538
score: 99.108251953125
patch: typeable = child CaMeL Type . to CaMeL String ( t ) ;
rank: 538
score: 99.1065673828125
patch: left CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( $STRING$ ) ;
rank: 538
score: 98.98839653862848
patch: left CaMeL Type = child CaMeL Type ;
rank: 538
score: 98.73141043526786
patch: break ; default : throw Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 538
score: 98.60491265190973
patch: old CaMeL Name = left CaMeL Type ;
rank: 538
score: 98.58927917480469
patch: sb . append ( $STRING$ ) . append ( child CaMeL Type . name ;
rank: 538
score: 98.54433865017361
patch: return break ; else ; break ; }
rank: 538
score: 98.51529269748264
patch: break ; ; * * / break ;
rank: 538
score: 98.39516977163461
patch: break ; break ; break ; } if break ; break ;
rank: 539
score: 99.128095703125
patch: if ( ! child CaMeL Type . matches CaMeL Number CaMeL Context ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 539
score: 99.10788302951389
patch: right = get CaMeL JS CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 539
score: 99.1064453125
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( ) ;
rank: 539
score: 98.72999267578125
patch: ; right CaMeL Type = right CaMeL Type ;
rank: 539
score: 98.60420532226563
patch: T left CaMeL Type , right CaMeL Type ;
rank: 539
score: 98.58924102783203
patch: sb . append ( $STRING$ ) . append ( left CaMeL Type ) . ;
rank: 539
score: 98.54346466064453
patch: break ; } else throw null ;
rank: 539
score: 98.51464080810547
patch: break ; ; * * break ;
rank: 539
score: 98.39459698016827
patch: break ; break ; if break ; break ; break ; ;
rank: 540
score: 99.1280517578125
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 540
score: 99.1077880859375
patch: right CaMeL Type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 540
score: 99.10631103515625
patch: set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 540
score: 98.98778279622395
patch: typeable = t . get CaMeL Type ( ) ;
rank: 540
score: 98.7294209798177
patch: break ; case Token . NAME : ; right = ;
rank: 540
score: 98.60419311523438
patch: continue ; case Token . Token . LP :
rank: 540
score: 98.58876255580357
patch: if ( ; right CaMeL Type . get CaMeL Type ( ) ;
rank: 540
score: 98.54312569754464
patch: return break ; catch break ;
rank: 540
score: 98.51435546875
patch: break ; ; / / / * / /
rank: 540
score: 98.394287109375
patch: break ; break ; if ; = break ; break ;
rank: 541
score: 99.1277717141544
patch: validator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; }
rank: 541
score: 99.10753631591797
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( ) ;
rank: 541
score: 99.10606971153847
patch: right CaMeL Type = scope . get CaMeL Type ( ) ;
rank: 541
score: 98.98670372596153
patch: break ; case Token . TRUE : typeable = false ;
rank: 541
score: 98.7289326985677
patch: this . ; ; this . ; ; this . ;
rank: 541
score: 98.602783203125
patch: switch ( child CaMeL Type ) {
rank: 541
score: 98.58863067626953
patch: if ( ; break ; case ;
rank: 541
score: 98.54269748263889
patch: break ; false ; } else break ;
rank: 541
score: 98.51388888888889
patch: * break ; break ; if break ;
rank: 541
score: 98.393798828125
patch: break ; break ; break ; / / / / }
rank: 542
score: 99.12758608217592
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ; break ;
rank: 542
score: 99.107265625
patch: typeable = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ;
rank: 542
score: 99.10606317934783
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ,
rank: 542
score: 98.98626708984375
patch: if ( ! child CaMeL Type . matches ( parent CaMeL
rank: 542
score: 98.60154418945312
patch: continue ; case Token . LP : / _
rank: 542
score: 98.588623046875
patch: switch ( n . get CaMeL Type ( ; node )
rank: 542
score: 98.54251098632812
patch: } else { } else if ;
rank: 542
score: 98.51354302300348
patch: i . out . println ( $STRING$ ;
rank: 542
score: 98.3925069173177
patch: break ; break ; break ; } if ; break ;
rank: 543
score: 99.12750244140625
patch: child CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 543
score: 99.10715738932292
patch: ensure CaMeL Typed ( t , child CaMeL Type . to CaMeL String ( ) ) ;
rank: 543
score: 98.98593575613839
patch: if ( type . matches CaMeL Int 32 ( n . get CaMeL
rank: 543
score: 98.7286376953125
patch: right CaMeL Type = right CaMeL Type ; left CaMeL Type = ;
rank: 543
score: 98.60153634207589
patch: System . . . . {
rank: 543
score: 98.588623046875
patch: sb . append ( $STRING$ ) . append ( symbol CaMeL Name ( ;
rank: 543
score: 98.54157172309027
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 543
score: 98.39102608816964
patch: break ; break ; break ; break ; if break ; break ;
rank: 544
score: 99.12736511230469
patch: validator . set CaMeL JS CaMeL Type ( child CaMeL Type ) ; break ;
rank: 544
score: 99.10533650716145
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( parent ) ;
rank: 544
score: 98.72800118582589
patch: this . ; this . ; break ; default : break ; }
rank: 544
score: 98.60016632080078
patch: continue ; case Token . INC :
rank: 544
score: 98.58843524639423
patch: break ; case Token . TYPE | Token . TYPE | ;
rank: 544
score: 98.54144287109375
patch: return break ; } else * /
rank: 544
score: 98.51309204101562
patch: break ; break ; next null ;
rank: 544
score: 98.38798014322917
patch: break ; break ; break ; return ; if break ;
rank: 545
score: 99.12662447415866
patch: validator . set CaMeL JS CaMeL Type ( typeable ) ;
rank: 545
score: 99.10485229492187
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( right CaMeL Type ) ;
rank: 545
score: 98.9853848544034
patch: type = n . get CaMeL Name ( ) ;
rank: 545
score: 98.72721354166667
patch: right = visit CaMeL Name ( t , n ; ;
rank: 545
score: 98.59932084517045
patch: if ( parent . get CaMeL Type ( ) )
rank: 545
score: 98.5882568359375
patch: break ; case break : right CaMeL Type = ;
rank: 545
score: 98.54080539279514
patch: break ; break ; else = false ;
rank: 545
score: 98.51088460286458
patch: break ; / / * break ; /
rank: 545
score: 98.38773018973214
patch: break ; break ; break ; if ; break ; break ; }
rank: 546
score: 99.12646484375
patch: validator . if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 546
score: 99.10667835582386
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 546
score: 98.98468017578125
patch: Type left CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 546
score: 98.59862518310547
patch: continue ; case Token . THIS :
rank: 546
score: 98.58822631835938
patch: break ; case Token . TYPE | Token . FALSE :
rank: 546
score: 98.54049246651786
patch: break ; - ++ break ;
rank: 546
score: 98.51051635742188
patch: break ; break ; case Integer . FALSE ;
rank: 546
score: 98.38746056189903
patch: break ; break ; break ; if ; / / / /
rank: 547
score: 99.12629917689732
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 547
score: 99.10465240478516
patch: JS CaMeL Type left CaMeL Type = parent . get CaMeL Type ( ) ;
rank: 547
score: 98.98351178850446
patch: ensure CaMeL Typed ( t . get CaMeL Node ( ) ) ;
rank: 547
score: 98.72584025065105
patch: right = visit CaMeL Name ( t , n ) ;
rank: 547
score: 98.597900390625
patch: break . get CaMeL Type ( ) ;
rank: 547
score: 98.58798217773438
patch: break ; switch ( n . get CaMeL Type ( ;
rank: 547
score: 98.53944227430556
patch: } break ; this . break ; ;
rank: 547
score: 98.51003689236111
patch: break ; break ; case String . break
rank: 547
score: 98.38734944661458
patch: break ; break ; break ; } / / / /
rank: 548
score: 99.12599779211956
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ;
rank: 548
score: 99.10651189630681
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) ; break ;
rank: 548
score: 99.10425743689903
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( ) ;
rank: 548
score: 98.98350941051136
patch: this . right CaMeL Type = child CaMeL Type ;
rank: 548
score: 98.72578568892045
patch: this . ; this . ; ; this . ;
rank: 548
score: 98.59710138494319
patch: return get CaMeL JS CaMeL Type ( n ) ;
rank: 548
score: 98.58778889973958
patch: break ; case Token . ; case Token . PREFIX :
rank: 548
score: 98.53941999162946
patch: } else return ; break ;
rank: 548
score: 98.50995635986328
patch: break ; break ; Iterator * ;
rank: 548
score: 98.38560994466145
patch: break ; break ; break ; if ; -- break ;
rank: 549
score: 99.125263671875
patch: validator . if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 549
score: 99.1063565340909
patch: typeable = get CaMeL Type ( n ) ;
rank: 549
score: 99.10418701171875
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( true ) ;
rank: 549
score: 98.72530110677083
patch: left CaMeL Type = ; right CaMeL Type = parent ;
rank: 549
score: 98.59517415364583
patch: case Token . COMMA :
rank: 549
score: 98.5877456665039
patch: if ( right CaMeL Type . get CaMeL Type ( ) == Token . ;
rank: 549
score: 98.53914969308036
patch: } break ; null break ;
rank: 549
score: 98.50978088378906
patch: break ; break ; ; * {
rank: 549
score: 98.38181559244792
patch: break ; break ; if ; break ; / / /
rank: 550
score: 99.12497182992789
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL JS CaMeL Type ( ) ) ) {
rank: 550
score: 99.10621473524306
patch: ensure CaMeL Typed ( t , t . get CaMeL First CaMeL Child ( ) ) ;
rank: 550
score: 99.10414475661058
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ) {
rank: 550
score: 98.98211669921875
patch: right CaMeL Type = get CaMeL Value ( n , parent ) ;
rank: 550
score: 98.5931884765625
patch: get CaMeL JS CaMeL Type ( n ) .
rank: 550
score: 98.58771514892578
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type ; break ;
rank: 550
score: 98.5390853881836
patch: return ; break ; } else ;
rank: 550
score: 98.50973510742188
patch: break ; for break ; break ;
rank: 550
score: 98.38107534555289
patch: break ; break ; break ; if break ; if break ;
rank: 551
score: 99.10410719651442
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( child CaMeL Type . get CaMeL Type ( ) ) ;
rank: 551
score: 98.98073508522727
patch: this . right CaMeL Type = right CaMeL Type ;
rank: 551
score: 98.59296209161931
patch: return ensure CaMeL Typed ( child CaMeL Type ) ;
rank: 551
score: 98.58698187934027
patch: cp = break ; case Token . ;
rank: 551
score: 98.53901018415179
patch: break break ; } else }
rank: 551
score: 98.50969102647569
patch: break ; break ; ; - * /
rank: 551
score: 98.38078090122768
patch: break ; break ; if ; break ; break ; break ; }
rank: 552
score: 99.12462890625
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ;
rank: 552
score: 99.1055549172794
patch: typeable = ! n . get CaMeL JS CaMeL Type ( ) . matches CaMeL
rank: 552
score: 99.10398512620192
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 552
score: 98.98072160993304
patch: get CaMeL Type ( n . get CaMeL Name ( ) ) ;
rank: 552
score: 98.72415597098214
patch: right = ; left CaMeL Type = right CaMeL Type . type ;
rank: 552
score: 98.5923184481534
patch: case Token . FUNCTION : typeable = false ;
rank: 552
score: 98.58687337239583
patch: break ; case Token . PROPERTY : ;
rank: 552
score: 98.53837890625
patch: break ; null ;
rank: 552
score: 98.50967746310764
patch: break ; / / / * break /
rank: 552
score: 98.37888590494792
patch: break ; break ; else break ; break ; break ;
rank: 553
score: 99.12454659598214
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 553
score: 99.1039530436198
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( null ) ;
rank: 553
score: 98.97934194711539
patch: result = get CaMeL JS CaMeL Type ( n . get CaMeL
rank: 553
score: 98.72368512834821
patch: this . ; this . ; break ; case Token . NONE :
rank: 553
score: 98.59161987304688
patch: Object left CaMeL Type , right CaMeL Type ;
rank: 553
score: 98.58645629882812
patch: sb . append ( $STRING$ ) . append ( right CaMeL Type . get ;
rank: 553
score: 98.53826226128473
patch: else { break ; } catch break ;
rank: 553
score: 98.5096435546875
patch: break ; break ; / / :
rank: 553
score: 98.37876383463542
patch: break ; break ; break ; } return ; return ;
rank: 554
score: 99.12435208834134
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) .
rank: 554
score: 99.10393323396382
patch: validator . get CaMeL JS CaMeL Type ( ) . matches CaMeL Int 32 Context ( ) ;
rank: 554
score: 98.59098677201705
patch: n . get CaMeL Type ( ) . set CaMeL
rank: 554
score: 98.53802490234375
patch: } break ; null }
rank: 554
score: 98.50952826605902
patch: break ; ; / / / ; /
rank: 554
score: 98.37868088942308
patch: break ; break ; else if break ; break ; break ;
rank: 555
score: 99.12407977764423
patch: validator . set CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; }
rank: 555
score: 99.10455729166667
patch: typeable = right CaMeL Type . to CaMeL String ( t ) ;
rank: 555
score: 99.103203125
patch: right CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 555
score: 98.97717895507813
patch: set CaMeL Type ( left CaMeL Type ) ;
rank: 555
score: 98.72147914341518
patch: right CaMeL Type = right CaMeL Type = right CaMeL Type ; ;
rank: 555
score: 98.59025743272569
patch: Scriptable JS CaMeL Type left CaMeL Type ;
rank: 555
score: 98.58602701822916
patch: break ; case Token . TYPE : break ; case Token . TYPE :
rank: 555
score: 98.50866021050348
patch: break ; ; / / * break ;
rank: 555
score: 98.377685546875
patch: break ; break ; break ; break ; else if break ;
rank: 556
score: 99.12345703125
patch: validator . if ( child CaMeL Type . matches CaMeL Int 32 ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 556
score: 98.97494506835938
patch: error ( t . get CaMeL Type ( ) ) ;
rank: 556
score: 98.58895874023438
patch: Decl left CaMeL Type , right CaMeL Type ;
rank: 556
score: 98.5860087076823
patch: break ; default : report CaMeL Error ( $STRING$ ) ;
rank: 556
score: 98.5374755859375
patch: if break ; } else { break ;
rank: 556
score: 98.5082763671875
patch: return break ; ;
rank: 556
score: 98.37732950846355
patch: break ; break ; int
rank: 557
score: 99.12227136948529
patch: child CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL
rank: 557
score: 99.1042247953869
patch: typeable = n . get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 557
score: 99.10283203125
patch: right CaMeL Type = t . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 557
score: 98.97450474330357
patch: validator . is CaMeL Expression CaMeL Node ( t , n ) ;
rank: 557
score: 98.58884499289773
patch: return . get CaMeL Type ( ) . get CaMeL
rank: 557
score: 98.58545532226563
patch: break ; case Token . YES : case ;
rank: 557
score: 98.53737967354911
patch: continue break ; } else ;
rank: 557
score: 98.50660705566406
patch: break ; case / : break ;
rank: 557
score: 98.37694373497597
patch: break ; break ; break ; break ; } break ; }
rank: 558
score: 99.12220764160156
patch: if ( ! child CaMeL Type . matches ( t . get CaMeL First CaMeL
rank: 558
score: 99.104140625
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL String ( ) ) ;
rank: 558
score: 99.10268147786458
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 558
score: 98.7204345703125
patch: break ; default : throw new break ; }
rank: 558
score: 98.58604431152344
patch: return ; case Token . TYPEOF :
rank: 558
score: 98.58484996448864
patch: if ( ; left CaMeL Type . equals ( ;
rank: 558
score: 98.53689575195312
patch: return break ; } break ; else
rank: 558
score: 98.50645446777344
patch: break ; break ; ; ; ?
rank: 558
score: 98.3760477701823
patch: break ; break ; break ; } break ; return ;
rank: 559
score: 99.12119704026442
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 559
score: 99.10250693873355
patch: right CaMeL Type = scope . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 559
score: 98.9708964029948
patch: fail ( n . get CaMeL Type ( ) ) ;
rank: 559
score: 98.72002704326923
patch: ; ; switch ( n . get CaMeL Type ( ) )
rank: 559
score: 98.58598497178819
patch: final JS CaMeL Type left CaMeL Type ;
rank: 559
score: 98.58475435697116
patch: break ; case Token . TYPE : left CaMeL Type = ;
rank: 559
score: 98.53638458251953
patch: } break ; null * * /
rank: 559
score: 98.50553131103516
patch: else = null ; while break ;
rank: 559
score: 98.37575120192308
patch: break ; break ; break ; if ; * / break ;
rank: 560
score: 99.12065067997685
patch: validator . set CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; break ;
rank: 560
score: 99.10357344777961
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL
rank: 560
score: 98.96942608173077
patch: break ; case Token . FUNCTION : typeable = false ;
rank: 560
score: 98.58492279052734
patch: return ; case Token . TYPE :
rank: 560
score: 98.584521484375
patch: break ; case Token . TRUE : ; ;
rank: 560
score: 98.53635079520089
patch: continue break ; } break ;
rank: 560
score: 98.50534057617188
patch: break ; break ; case Boolean . EMPTY ;
rank: 560
score: 98.37565104166667
patch: break ; break ; break ; if ; else break ;
rank: 561
score: 99.120078125
patch: if ( validator . child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 561
score: 99.1034625509511
patch: typeable = n . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL String ( ) ;
rank: 561
score: 99.10159301757812
patch: right CaMeL Type = n . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; ;
rank: 561
score: 98.96924767127403
patch: validator . add CaMeL Type ( t , n . get CaMeL
rank: 561
score: 98.71909401633523
patch: case Token . NAME : case Token . NAME :
rank: 561
score: 98.58455033735795
patch: parent . ensure CaMeL Typed ( t . get CaMeL
rank: 561
score: 98.58437093098958
patch: break ; ; case Token . NULL :
rank: 561
score: 98.53606414794922
patch: } else { return ; ; }
rank: 561
score: 98.5052978515625
patch: else = true ;
rank: 561
score: 98.37550862630208
patch: break ; if ; = break ; break ; break ;
rank: 562
score: 99.11973741319444
patch: validator . left CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 562
score: 99.1015560752467
patch: typeable = visit CaMeL Name ( t . get CaMeL First CaMeL Child ( ) ) ;
rank: 562
score: 98.96860758463542
patch: if ( ! child CaMeL Type . matches ( ) )
rank: 562
score: 98.71888732910156
patch: break ; default : ; return ;
rank: 562
score: 98.58244185014205
patch: return get CaMeL JS CaMeL Type ( parent ) ;
rank: 562
score: 98.53600311279297
patch: return break ; else = false ;
rank: 562
score: 98.50456237792969
patch: } else { break ; ; ;
rank: 562
score: 98.37428792317708
patch: break ; break ; break ; else break ; break ;
rank: 563
score: 99.1193096454327
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ; }
rank: 563
score: 99.102275390625
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( n ) ;
rank: 563
score: 99.10108439127605
patch: get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) . is CaMeL Expression CaMeL Node ( ) ;
rank: 563
score: 98.96852463942308
patch: break ; case Token . VOID : typeable = false ;
rank: 563
score: 98.71885329026442
patch: right CaMeL Type = visit CaMeL Name ( t , t ;
rank: 563
score: 98.5838134765625
patch: break ; case ; case Token . OTHER :
rank: 563
score: 98.57824028862848
patch: } else { typeable = true ;
rank: 563
score: 98.53590393066406
patch: if break ; } else return ;
rank: 563
score: 98.5044677734375
patch: break ; ; /
rank: 563
score: 98.3742167154948
patch: break ; break ; } if ; break ; break ;
rank: 564
score: 99.10204060872395
patch: right CaMeL Type = Node CaMeL Util . get CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 564
score: 99.10076171875
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( node . get CaMeL First CaMeL Child ( ) ) )
rank: 564
score: 98.7185567220052
patch: break ; case Token . ; case Token . PARAMETER :
rank: 564
score: 98.58368682861328
patch: break ; case ; case ; :
rank: 564
score: 98.5775479403409
patch: return ensure CaMeL Typed ( left CaMeL Type ) ;
rank: 564
score: 98.53455352783203
patch: } else ; try = break ;
rank: 564
score: 98.50409613715277
patch: } * ; break ; if break ;
rank: 564
score: 98.373046875
patch: break ; break ; break ; break ; } if break ;
rank: 565
score: 99.1192157451923
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type ( ) ;
rank: 565
score: 99.10203125
patch: typeable = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 565
score: 98.96610884232955
patch: validator . set CaMeL Type ( typeable ) ;
rank: 565
score: 98.7177734375
patch: left = visit CaMeL Name ( t , n , ;
rank: 565
score: 98.5835693359375
patch: break ; case Token . LABEL : ; ;
rank: 565
score: 98.57416449652777
patch: break ; case Token . LP : _
rank: 565
score: 98.53443908691406
patch: break ; true ; } break ;
rank: 565
score: 98.50398254394531
patch: break ; ; * if break ;
rank: 565
score: 98.37263997395833
patch: if break ; break ; break ; break ; return ;
rank: 566
score: 99.119140625
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( t ) ;
rank: 566
score: 99.10151599702381
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type , $STRING$ ) ;
rank: 566
score: 98.96522874098558
patch: right CaMeL Type = get CaMeL Type ( t . get CaMeL
rank: 566
score: 98.7177225748698
patch: right = visit CaMeL Name ; right CaMeL Type = ;
rank: 566
score: 98.5834716796875
patch: break ; case Token . PREFIX : case ;
rank: 566
score: 98.57392883300781
patch: return ; case Token . REGEXP :
rank: 566
score: 98.53417205810547
patch: } else ; return * break ;
rank: 566
score: 98.50384521484375
patch: break { break ; }
rank: 566
score: 98.37218299278847
patch: break ; break ; break ; break ; } return ; }
rank: 567
score: 99.1013671875
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Value ( ) ;
rank: 567
score: 99.1004169170673
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( node . get CaMeL Type ( ) ) ) {
rank: 567
score: 98.96282489483173
patch: } else switch ( n . get CaMeL Type ( ) )
rank: 567
score: 98.71703229631696
patch: right CaMeL Type = resolve CaMeL Type ( t , parent ) ;
rank: 567
score: 98.57212524414062
patch: break ; case Token . LP : break ;
rank: 567
score: 98.53412543402777
patch: else = break ; } } break ;
rank: 567
score: 98.50376383463542
patch: * * / break ; if break ;
rank: 567
score: 98.37192007211539
patch: break ; break ; break ; break ; / = break ;
rank: 568
score: 99.11907552083333
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; }
rank: 568
score: 99.10081990559895
patch: child CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Name ( ) ) ;
rank: 568
score: 99.100390625
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) )
rank: 568
score: 98.96280924479167
patch: right CaMeL Type = get CaMeL Symbol ( n ) ;
rank: 568
score: 98.71670968191964
patch: right CaMeL Type = visit CaMeL Name ( t , parent , ;
rank: 568
score: 98.58308919270833
patch: break ; case ; case Token . ATTRIBUTE _ FLAG :
rank: 568
score: 98.57080078125
patch: continue ; case Token . REGEXP :
rank: 568
score: 98.50328572591145
patch: } else * break ;
rank: 568
score: 98.37057931082589
patch: break ; break ; } break ; break ; break ; break ;
rank: 569
score: 99.11904672475961
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 569
score: 99.10080853630515
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( n ) ;
rank: 569
score: 99.10019155649039
patch: right CaMeL Type = get CaMeL First CaMeL Child ( ) ;
rank: 569
score: 98.96219576322116
patch: break ; case Token . CALL : typeable = false ;
rank: 569
score: 98.58295288085938
patch: break ; case Token . PREFIX : break ;
rank: 569
score: 98.56798553466797
patch: continue ; case Token . GETPROP :
rank: 569
score: 98.53382219587054
patch: break ; break ; } finally
rank: 569
score: 98.5031005859375
patch: break ; break ; case Integer . 0 *
rank: 569
score: 98.37056477864583
patch: break ; break ; break ; if ; ; break ;
rank: 570
score: 99.11853966346153
patch: validator . set CaMeL JS CaMeL Type ( node . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( ) ) ;
rank: 570
score: 99.10065774356617
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 570
score: 98.96175130208333
patch: validator . right ( t , left CaMeL Type ) ;
rank: 570
score: 98.58292643229167
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ;
rank: 570
score: 98.56719970703125
patch: return ; case Token . SET :
rank: 570
score: 98.53358968098958
patch: return ; break ; } else break ;
rank: 570
score: 98.50156860351562
patch: break ; break ; case String . Number ;
rank: 570
score: 98.37013753255208
patch: break ; break ; break ; if ; return ; }
rank: 571
score: 99.117744140625
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Scope ( ) ) ) ;
rank: 571
score: 99.1005222486413
patch: typeable = left CaMeL Type . to CaMeL String ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 571
score: 99.09963650173611
patch: validator = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 571
score: 98.96063787286931
patch: validator . right CaMeL Type = left CaMeL Type ;
rank: 571
score: 98.7158954326923
patch: this . ; ; this . ; this . ; return ;
rank: 571
score: 98.5828106219952
patch: break ; case Token . TYPE ; case Token . TYPE :
rank: 571
score: 98.56632690429687
patch: continue ; case Token . GET _ REF :
rank: 571
score: 98.50154113769531
patch: * * * / break ; /
rank: 571
score: 98.36971341646634
patch: break ; break ; if break ; / / / / /
rank: 572
score: 99.11758127520162
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; break ;
rank: 572
score: 99.09954364483173
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 572
score: 98.71584647042411
patch: right CaMeL Type = visit CaMeL Name ( t , name ) ;
rank: 572
score: 98.5824725811298
patch: break ; case Token . TRUE : case Token . FALSE :
rank: 572
score: 98.56597290039062
patch: break ; case Token . LP : / :
rank: 572
score: 98.53347778320312
patch: return break ; } } } ;
rank: 572
score: 98.50153266059027
patch: break ; break ; ; * break ;
rank: 572
score: 98.36953500600961
patch: break ; break ; break ; else if break ; break ;
rank: 573
score: 99.1003185453869
patch: typeable = right CaMeL Type . to CaMeL String ( t . get CaMeL Name ( ) ) ;
rank: 573
score: 98.58245294744319
patch: if ( ; n . get CaMeL Type ( ;
rank: 573
score: 98.56551513671874
patch: System . . : typeable = false ;
rank: 573
score: 98.5334701538086
patch: } else { } else return ;
rank: 573
score: 98.50149536132812
patch: break ; / else {
rank: 573
score: 98.36895282451923
patch: break ; break ; } break ; break ; break ; }
rank: 574
score: 99.11734771728516
patch: validator . right CaMeL Type = get CaMeL JS CaMeL Type ( n ) ;
rank: 574
score: 99.09973862591912
patch: right = t . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 574
score: 99.09824625651042
patch: right CaMeL Type = validator . get CaMeL Scope ( ) . get CaMeL Type CaMeL Of CaMeL This ( node ) ;
rank: 574
score: 98.71498325892857
patch: this . ; this . ; this . ; return ; default :
rank: 574
score: 98.58131917317708
patch: break ; case Token . ; case Token . COMMA :
rank: 574
score: 98.56463623046875
patch: return ; case Token . Token . LP :
rank: 574
score: 98.53329467773438
patch: } finally { if break ; }
rank: 574
score: 98.50141737196181
patch: else break ; / else { break ;
rank: 574
score: 98.36890520368304
patch: break ; break ; for ; ; ; ; ; ; break ;
rank: 575
score: 99.11688701923077
patch: if ( left CaMeL Type . matches CaMeL Int 32 ( child CaMeL Type . get CaMeL First CaMeL Child ( ) ) ) {
rank: 575
score: 99.09970092773438
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 575
score: 99.09808349609375
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 575
score: 98.9559834798177
patch: typeable = get CaMeL Type ( n . get CaMeL
rank: 575
score: 98.71318223741319
patch: break ; ; case Token . NONE :
rank: 575
score: 98.58104654947917
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Value ;
rank: 575
score: 98.56379530164931
patch: n . get CaMeL Type ( ) ;
rank: 575
score: 98.53319549560547
patch: if break ; } else break ;
rank: 575
score: 98.36818440755208
patch: break ; break ; return ; if break ; break ;
rank: 576
score: 99.11681676793981
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 576
score: 99.09756673177084
patch: ensure CaMeL Typed ( t . get CaMeL First CaMeL Child ( ) ,
rank: 576
score: 98.95570203993056
patch: right CaMeL Type = parent . get CaMeL
rank: 576
score: 98.713134765625
patch: right = visit CaMeL Name ( t , parent ;
rank: 576
score: 98.5804912860577
patch: left = right CaMeL Type ; right = right CaMeL Type ;
rank: 576
score: 98.56089274088542
patch: case Token . STRING :
rank: 576
score: 98.53282819475446
patch: } else { return ; ;
rank: 576
score: 98.4997329711914
patch: break ; break ; * return ;
rank: 576
score: 98.3677978515625
patch: break ; break ; break ; if ; break ; } break ;
rank: 577
score: 98.9534912109375
patch: right CaMeL Type = get CaMeL Parent ( n ) ;
rank: 577
score: 98.71194022042411
patch: break ; default break ; }
rank: 577
score: 98.57991849459134
patch: break ; case Token . ; case Token . TYPE : ;
rank: 577
score: 98.56015014648438
patch: if ( typeable )
rank: 577
score: 98.53268432617188
patch: break ; null ; } else ;
rank: 577
score: 98.49962022569444
patch: case 0 : break ; if break ;
rank: 577
score: 98.36751883370536
patch: break ; break ; break ; break ; } break ; break ;
rank: 578
score: 99.1162109375
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( n ) )
rank: 578
score: 99.09908203125
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL String ( left CaMeL Type ) ;
rank: 578
score: 99.09670785757211
patch: right CaMeL Type = scope . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type CaMeL Of CaMeL This ( )
rank: 578
score: 98.9518330891927
patch: child CaMeL Type = get CaMeL Type ( n ) ;
rank: 578
score: 98.7106689453125
patch: right = visit CaMeL Name ( t break ;
rank: 578
score: 98.57963053385417
patch: super . visit ( t , n , parent ) ;
rank: 578
score: 98.55796508789062
patch: break ; case Token . Token . FUNCTION :
rank: 578
score: 98.5325927734375
patch: else { break ; } else
rank: 578
score: 98.49863009982639
patch: break ; / / / / * /
rank: 578
score: 98.36742146809895
patch: break ; break ; break ; break ; return ; ;
rank: 579
score: 99.11617476851852
patch: if ( ! child CaMeL Type . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) ) )
rank: 579
score: 99.09900919596355
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 579
score: 99.09653883713942
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 579
score: 98.70987642728366
patch: right CaMeL Type = visit CaMeL Name ( t , ; ;
rank: 579
score: 98.57930814302884
patch: break ; case Token . compare CaMeL To ( $STRING$ ) :
rank: 579
score: 98.55708821614583
patch: case Token . CALL :
rank: 579
score: 98.53240966796875
patch: else = break ; } if break ;
rank: 579
score: 98.49852905273437
patch: break ; break ; / / * break ;
rank: 579
score: 98.36592610677083
patch: break ; break ; break ; if ; ! break ;
rank: 580
score: 99.11609604779412
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( left CaMeL Type ) ; }
rank: 580
score: 99.0959375
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . typeable = false ;
rank: 580
score: 98.57845052083333
patch: break ; default : throw new Error ( $STRING$ ) ;
rank: 580
score: 98.55670166015625
patch: return ensure CaMeL Typed ( t . get CaMeL
rank: 580
score: 98.5316162109375
patch: return break ; for break ; }
rank: 580
score: 98.49817572699652
patch: break ; break ; * * break ;
rank: 580
score: 98.36459786551339
patch: break ; break ; break ; break ; break ; return ; }
rank: 581
score: 99.09524739583334
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL
rank: 581
score: 98.951171875
patch: right CaMeL Type = false ;
rank: 581
score: 98.7095477764423
patch: this . ; ; this . ; this . ; break ;
rank: 581
score: 98.57825317382813
patch: break ; case Token . FALSE : ; ;
rank: 581
score: 98.55292510986328
patch: return ; case Token . GETPROP :
rank: 581
score: 98.53129577636719
patch: } else if break ; else ;
rank: 581
score: 98.49803924560547
patch: break ; *
rank: 581
score: 98.36324055989583
patch: break ; if break ; break ; break ; return ;
rank: 582
score: 99.11554586476294
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , $STRING$ ) ;
rank: 582
score: 99.09852091471355
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Name ( ) ;
rank: 582
score: 99.094970703125
patch: child CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 582
score: 98.70953924005681
patch: this . ; this . ; break ; default :
rank: 582
score: 98.5782470703125
patch: break ; case Char CaMeL Sequence . NULL : ;
rank: 582
score: 98.55185546875
patch: { ensure CaMeL Typed ( t . get CaMeL
rank: 582
score: 98.53113471137152
patch: else = break ; break ; } else
rank: 582
score: 98.49754028320312
patch: break ; break ; case Integer . TRUE ;
rank: 582
score: 98.3632303873698
patch: break ; break ; break ; break ; } * /
rank: 583
score: 99.11553955078125
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 583
score: 99.0984375
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL String ( ) ) ;
rank: 583
score: 98.94913736979167
patch: warn ( n . get CaMeL Type ( ) ) ;
rank: 583
score: 98.70934448242187
patch: right CaMeL Type = resolve CaMeL Type ( ;
rank: 583
score: 98.57799353966347
patch: switch ( n . get CaMeL Type ( ) ; TRUE )
rank: 583
score: 98.54962158203125
patch: return ? false : false ;
rank: 583
score: 98.53087022569444
patch: break ; else = break ; break ;
rank: 583
score: 98.49752807617188
patch: break ; * / /
rank: 583
score: 98.36276479867789
patch: break ; break ; break ; if break ; } return ;
rank: 584
score: 99.115
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Node ( ) ) ) ;
rank: 584
score: 99.09837431066177
patch: right CaMeL Type = get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL
rank: 584
score: 99.09448960248162
patch: ensure CaMeL Typed ( t , n . get CaMeL First CaMeL Child ( ) ,
rank: 584
score: 98.70917302911931
patch: right = visit CaMeL Name ( t break ) ;
rank: 584
score: 98.57793426513672
patch: break ; default : if ( ;
rank: 584
score: 98.54886203342014
patch: n . get CaMeL Type ( ) .
rank: 584
score: 98.49750434027777
patch: break ; break ; * * ; /
rank: 584
score: 98.36228590745192
patch: break ; break ; if break ; } break ; break ;
rank: 585
score: 99.11497214988425
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 585
score: 99.0982157389323
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL String ( ) ) ;
rank: 585
score: 99.094091796875
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( node . get CaMeL Type ( ) ) )
rank: 585
score: 98.94544474283855
patch: break ; case Token . LP : n . get CaMeL
rank: 585
score: 98.70890299479167
patch: break ; default : throw new ; } if ( ;
rank: 585
score: 98.5473403930664
patch: return ; case Token . INC :
rank: 585
score: 98.53048366970486
patch: break ; * * break ; break ;
rank: 585
score: 98.49740600585938
patch: break ; break ; * / ;
rank: 585
score: 98.36222330729167
patch: break ; break ; if ; break ; break ; ;
rank: 586
score: 99.09817504882812
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL Parent ( ) ) ;
rank: 586
score: 99.09380782277961
patch: right CaMeL Type = t . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 586
score: 98.94513617621527
patch: break ; case Token . LP : ;
rank: 586
score: 98.7084452311198
patch: break ; case Token . NONE : visit CaMeL Name ;
rank: 586
score: 98.5775858561198
patch: break ; case Token . ; case Token . UNKNOWN :
rank: 586
score: 98.54568481445312
patch: case Token . NEW :
rank: 586
score: 98.52943250868056
patch: return break ; } } else return ;
rank: 586
score: 98.4970703125
patch: finally { break ; break ; }
rank: 586
score: 98.36196664663461
patch: break ; break ; break ; / / / / / /
rank: 587
score: 99.11484200613839
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ,
rank: 587
score: 99.093388671875
patch: if ( ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 587
score: 98.70817057291667
patch: right CaMeL Type ; left = visit CaMeL Name ( ;
rank: 587
score: 98.54477945963542
patch: return ensure CaMeL Typed ( parent ) ;
rank: 587
score: 98.52904510498047
patch: break ; for ; ; break ;
rank: 587
score: 98.4968490600586
patch: break ; ; break ; ; *
rank: 587
score: 98.3616943359375
patch: break ; break ; return ; break ; break ; }
rank: 588
score: 99.09677124023438
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL Name ( ) ) ;
rank: 588
score: 99.09332275390625
patch: JS CaMeL Type left CaMeL Type , right ;
rank: 588
score: 98.9411288174716
patch: add CaMeL Type ( t , n . get CaMeL
rank: 588
score: 98.57704162597656
patch: break ; case Token . ERROR :
rank: 588
score: 98.54451293945313
patch: break ; case Token . Token . RETURN :
rank: 588
score: 98.52850341796875
patch: } else { } finally { return ;
rank: 588
score: 98.36142403738839
patch: break ; break ; if ; if break ; break ; break ;
rank: 589
score: 99.114208984375
patch: validator . set CaMeL JS CaMeL Type ( child CaMeL Type ) ; }
rank: 589
score: 99.09655180431548
patch: right CaMeL Type = JS CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL
rank: 589
score: 99.09247295673077
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) )
rank: 589
score: 98.94107055664062
patch: right CaMeL Type = get CaMeL Type ( parent ) ;
rank: 589
score: 98.706298828125
patch: right ; right CaMeL Type = ;
rank: 589
score: 98.57640380859375
patch: left = ; right = child CaMeL Type ;
rank: 589
score: 98.54102918836806
patch: if ( validator . typeable ) {
rank: 589
score: 98.52842203776042
patch: break break ; break ; break ; }
rank: 589
score: 98.49555121527777
patch: while break ; break ; ; break ;
rank: 589
score: 98.36043294270833
patch: break ; break ; break ; / / = break ;
rank: 590
score: 99.11417362607759
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 590
score: 99.09612165178571
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 590
score: 99.092138671875
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) )
rank: 590
score: 98.70623779296875
patch: break ; default : { ;
rank: 590
score: 98.57636108398438
patch: break ; case Token . ; case ; ?
rank: 590
score: 98.53985595703125
patch: continue ; case Token . FALSE :
rank: 590
score: 98.52825164794922
patch: } break ; return break ; }
rank: 590
score: 98.4955062866211
patch: break ; break ; value * *
rank: 590
score: 98.3597412109375
patch: break ; break ; break ; } break ; } break ;
rank: 591
score: 99.114091796875
patch: if ( validator . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 591
score: 99.09561820652173
patch: typeable = n . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( n ) ;
rank: 591
score: 98.70550537109375
patch: left CaMeL Type = parent . get CaMeL Type ( ;
rank: 591
score: 98.53932189941406
patch: case Token . LP : / _
rank: 591
score: 98.52817789713542
patch: else break ; } break ; break ;
rank: 591
score: 98.49544270833333
patch: else break ; ; ;
rank: 591
score: 98.35872708834134
patch: break ; break ; if ; break ; return ; break ;
rank: 592
score: 99.11365234375
patch: if ( ! child CaMeL Type . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 592
score: 99.09559849330357
patch: ensure CaMeL Typed ( left CaMeL Type , child CaMeL Type ) ;
rank: 592
score: 99.0916748046875
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent . get CaMeL Type ( ) ) ) {
rank: 592
score: 98.93374633789062
patch: break ; case Token . LP : t . get CaMeL
rank: 592
score: 98.70437387319711
patch: right CaMeL Type = right CaMeL Type . get CaMeL Type ;
rank: 592
score: 98.57558186848958
patch: right CaMeL Type = break ; case Token . TYPE :
rank: 592
score: 98.53628540039062
patch: case Token . POS :
rank: 592
score: 98.52779388427734
patch: } break ; null / * /
rank: 592
score: 98.49521484375
patch: break ; break ; case Integer . out ;
rank: 592
score: 98.35757211538461
patch: if ; break ; break ; break ; break ; break ;
rank: 593
score: 99.09523518880208
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 593
score: 99.0916748046875
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( left CaMeL Type . get CaMeL Type ( ) ) ;
rank: 593
score: 98.93297119140625
patch: set CaMeL Type ( child CaMeL Type ) ;
rank: 593
score: 98.57550920758929
patch: break ; case Token . TYPE : right CaMeL Type = ; ;
rank: 593
score: 98.53450012207031
patch: if ( ! typeable ) {
rank: 593
score: 98.52748325892857
patch: break ; } catch ; }
rank: 593
score: 98.4945780436198
patch: } break ; 0 ;
rank: 593
score: 98.35709322415866
patch: break ; break ; if break ; break ; else break ;
rank: 594
score: 99.11332484654018
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 594
score: 99.09519449869792
patch: ensure CaMeL Typed ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ;
rank: 594
score: 99.09049166165866
patch: if ( typeable || ! Node CaMeL Util . is CaMeL
rank: 594
score: 98.92978922526042
patch: info ( t . get CaMeL Type ( ) ) ;
rank: 594
score: 98.70352172851562
patch: break ; default : throw System . err ;
rank: 594
score: 98.57544884314903
patch: break ; case Token . TYPE : case Token . class :
rank: 594
score: 98.53255462646484
patch: return ; case Token . THIS :
rank: 594
score: 98.5274658203125
patch: break break ; } else if ;
rank: 594
score: 98.49439697265625
patch: break ; break ; case Integer . 0 ?
rank: 595
score: 99.11328125
patch: if ( child CaMeL Type != Token . FUNCTION )
rank: 595
score: 99.09517415364583
patch: typeable = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( left CaMeL
rank: 595
score: 99.0900650024414
patch: child CaMeL Type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 595
score: 98.92952104048295
patch: validator . set CaMeL Type ( t . get CaMeL
rank: 595
score: 98.70350477430556
patch: this . ; break ; default : ;
rank: 595
score: 98.5753925030048
patch: left = left CaMeL Type ; right = right CaMeL Type ;
rank: 595
score: 98.53134155273438
patch: System . . . . . {
rank: 595
score: 98.52731323242188
patch: break ; } else
rank: 595
score: 98.49431016710069
patch: break ; * * / if break ;
rank: 595
score: 98.3564453125
patch: break ; break ; if break ; / / = break ;
rank: 596
score: 99.113134765625
patch: if ( right CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL JS CaMeL Type ( ) ) )
rank: 596
score: 99.09511431525735
patch: right CaMeL Type = child CaMeL Type . get CaMeL Type ( ) ; break ;
rank: 596
score: 99.09005737304688
patch: JS CaMeL Type left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 596
score: 98.92917887369792
patch: println ( t . get CaMeL Type ( ) ) ;
rank: 596
score: 98.70249720982143
patch: right = ; right = ;
rank: 596
score: 98.57536969866071
patch: switch ( n . get CaMeL Type ; case Token . STRING :
rank: 596
score: 98.52720811631944
patch: } else { break ; else ; }
rank: 596
score: 98.52412414550781
patch: continue ; case Token . SET :
rank: 596
score: 98.49417114257812
patch: } * * break ; break ;
rank: 596
score: 98.35589130108173
patch: break ; break ; if break ; if break ; break ;
rank: 597
score: 99.0944921875
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Name ( ) ) ;
rank: 597
score: 99.089990234375
patch: ensure CaMeL Typed ( child CaMeL Type ) ;
rank: 597
score: 98.92469787597656
patch: break ; case Token . EQ :
rank: 597
score: 98.70123291015625
patch: break ; case Token . NONE : case Token . ;
rank: 597
score: 98.57501220703125
patch: sb . append ( $STRING$ ) . append ( symbol CaMeL Name ;
rank: 597
score: 98.52667999267578
patch: else break ; else = break ;
rank: 597
score: 98.5222676595052
patch: case Token . NUMBER :
rank: 597
score: 98.49398803710938
patch: -- break ; break ;
rank: 597
score: 98.35548618861607
patch: break ; break ; break ; break ; break ; / / /
rank: 598
score: 99.11226712740384
patch: validator = t . get CaMeL JS CaMeL Type ( ) ;
rank: 598
score: 99.09375
patch: right CaMeL Type = get CaMeL Function CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 598
score: 99.08957926432292
patch: get CaMeL JS CaMeL Type ( n , n ) ;
rank: 598
score: 98.9238789876302
patch: ensure CaMeL Typed ( t , child CaMeL Type ) ;
rank: 598
score: 98.69973520132211
patch: break ; case Token . NULL : case Token . NULL :
rank: 598
score: 98.57492065429688
patch: break ; case Token . TYPE ;
rank: 598
score: 98.52627563476562
patch: return break ; } } catch ;
rank: 598
score: 98.51931423611111
patch: System . : typeable = false ;
rank: 598
score: 98.49183654785156
patch: break ; case int { break ;
rank: 598
score: 98.35531180245536
patch: break ; break ; break ; break ; return ; } break ;
rank: 599
score: 99.11221749441964
patch: validator . child CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 599
score: 99.09345703125
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL Type ( ) ;
rank: 599
score: 99.089248046875
patch: child CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) )
rank: 599
score: 98.92108154296875
patch: validator . set CaMeL Type ( type ) ;
rank: 599
score: 98.69968825120192
patch: this . ; this . ; ; this . ; break ;
rank: 599
score: 98.5748291015625
patch: break ; case Token . TYPE | Token . NAME :
rank: 599
score: 98.52620152064732
patch: break ; in ; return ;
rank: 599
score: 98.51552327473958
patch: return || typeable ;
rank: 599
score: 98.49103461371527
patch: break ; ; / else { break ;
rank: 599
score: 98.35452974759616
patch: break ; break ; break ; break ; } -- break ;
rank: 600
score: 99.112060546875
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; break ;
rank: 600
score: 99.09305245535714
patch: right = get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 600
score: 99.08876255580357
patch: set CaMeL Name ( parent . get CaMeL Type ( ) ) ;
rank: 600
score: 98.91493918678977
patch: ensure CaMeL Typed ( t , t . get CaMeL
rank: 600
score: 98.69949106069711
patch: right CaMeL Type = parent . get CaMeL Type ( ; ;
rank: 600
score: 98.57455679086539
patch: break ; case Token . ; case Token . NAME : ;
rank: 600
score: 98.52618408203125
patch: break ; false ; false ;
rank: 600
score: 98.50929090711806
patch: t . get CaMeL Type ( ) .
rank: 600
score: 98.49100494384766
patch: * * * / break ; ;
rank: 600
score: 98.3544921875
patch: break ; break ; } break ; break ; } break ;
rank: 601
score: 99.11205078125
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ; break ;
rank: 601
score: 99.09271240234375
patch: if ( ! child CaMeL Type . matches CaMeL
rank: 601
score: 99.0879375751202
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL Type ( ) ) ) {
rank: 601
score: 98.9135409268466
patch: validator . set CaMeL Type ( n . get CaMeL
rank: 601
score: 98.69858127170139
patch: break ; ; case Token . LABEL :
rank: 601
score: 98.57366473858173
patch: break ; case Token . TYPE : case Token . STRING :
rank: 601
score: 98.5256576538086
patch: } else { return false ; }
rank: 601
score: 98.50464630126953
patch: state . typeable = false ;
rank: 601
score: 98.49073486328125
patch: break ; break ; / else { break ;
rank: 601
score: 98.35291466346153
patch: break ; break ; if ; * / break ; break ;
rank: 602
score: 99.11204310825893
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 602
score: 99.0875713641827
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type = right CaMeL Type ;
rank: 602
score: 98.91294352213542
patch: break ; case Token . LP : .
rank: 602
score: 98.69854125976562
patch: left = visit CaMeL Name ( t , ;
rank: 602
score: 98.57360076904297
patch: break ; case Token . INCLUDE :
rank: 602
score: 98.52504475911458
patch: break ; ; break ; } break ;
rank: 602
score: 98.50372314453125
patch: return ? true : false ;
rank: 602
score: 98.49039459228516
patch: break ; break ; * / *
rank: 602
score: 98.35189115084134
patch: break ; break ; break ; if break ; -- break ;
rank: 603
score: 99.09225027901786
patch: typeable = get CaMeL JS CaMeL Type ( n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 603
score: 98.9116923014323
patch: left CaMeL Type = get CaMeL Type ( n ) ;
rank: 603
score: 98.69840087890626
patch: break ; ; case Token . break : ;
rank: 603
score: 98.57359619140625
patch: break ; default : vars . put ( ;
rank: 603
score: 98.52478790283203
patch: } else { end ; break ;
rank: 603
score: 98.50237274169922
patch: this . typeable = false ;
rank: 603
score: 98.34925255408653
patch: break ; break ; break ; break ; break ; } /
rank: 604
score: 99.111962890625
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; }
rank: 604
score: 99.09169514973958
patch: right CaMeL Type = get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 604
score: 99.08634765625
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL First CaMeL Child ( ) )
rank: 604
score: 98.9114102450284
patch: right CaMeL Type = child CaMeL Type . get CaMeL
rank: 604
score: 98.6979510967548
patch: this . ; this . ; ; this . ; return ;
rank: 604
score: 98.5733309659091
patch: break ; case Token . TYPE : return false ;
rank: 604
score: 98.52439880371094
patch: break ; } catch break ; }
rank: 604
score: 98.49388122558594
patch: Concrete CaMeL Type left CaMeL Type ;
rank: 604
score: 98.48824310302734
patch: break ; break ; / ; /
rank: 604
score: 98.34803185096153
patch: break ; break ; break ; if break ; break ; else
rank: 605
score: 99.11087740384616
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Code ( ) ) ;
rank: 605
score: 99.09107384314903
patch: right = right CaMeL Type . to CaMeL String ( ) ;
rank: 605
score: 99.0861587524414
patch: child CaMeL Type = typeable ;
rank: 605
score: 98.69788614908855
patch: left CaMeL Type = ; right CaMeL Type = name ;
rank: 605
score: 98.57300676618304
patch: break ; case Token . NAME : break ; case Token . ;
rank: 605
score: 98.52405657087054
patch: break ; else ; return ;
rank: 605
score: 98.49161529541016
patch: return ; case Token . FALSE :
rank: 605
score: 98.48814086914062
patch: break ; break ; ; * * break ;
rank: 605
score: 98.34774344308036
patch: break ; if break ; break ; break ; break ; break ;
rank: 606
score: 99.11078287760417
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( false ) )
rank: 606
score: 99.09095674402573
patch: typeable = child CaMeL Type . get CaMeL First CaMeL Child ( ) ; }
rank: 606
score: 99.085703125
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 606
score: 98.91098022460938
patch: set CaMeL JS CaMeL Type ( n , parent ) ;
rank: 606
score: 98.57236328125
patch: break ; case ; case Token . class :
rank: 606
score: 98.52396392822266
patch: } else { break ; return ;
rank: 606
score: 98.49111938476562
patch: continue ; case Token . ) :
rank: 606
score: 98.48809051513672
patch: break ; ; * / / {
rank: 606
score: 98.34773472377232
patch: break ; break ; break ; if break ; / / / /
rank: 607
score: 99.11048177083333
patch: if ( ! child CaMeL Type . matches ( left CaMeL Type ) )
rank: 607
score: 99.08501953125
patch: child CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) :
rank: 607
score: 98.91073947482639
patch: ensure CaMeL Typed ( t , n ,
rank: 607
score: 98.6963602701823
patch: right CaMeL Type = visit CaMeL Name ( ; break ;
rank: 607
score: 98.572216796875
patch: if ( ; left CaMeL Type . get CaMeL Type ( ) == ;
rank: 607
score: 98.49101039341518
patch: break ? Token . LP :
rank: 607
score: 98.4880615234375
patch: break ; break ; case else { break ;
rank: 607
score: 98.34759051983173
patch: break ; break ; break ; } break ; break ; }
rank: 608
score: 99.11007690429688
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 ( parent ) )
rank: 608
score: 99.089853515625
patch: typeable = child CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 608
score: 99.08490234375
patch: right CaMeL Type = left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL Type ( ) ;
rank: 608
score: 98.91041056315105
patch: right CaMeL Type = get CaMeL Type ( t ) ;
rank: 608
score: 98.6959228515625
patch: right CaMeL Type = ; } else { break ;
rank: 608
score: 98.57216233473558
patch: break ; case Token . TYPE : break ; case break :
rank: 608
score: 98.52362932477679
patch: } else * / break ;
rank: 608
score: 98.48951721191406
patch: break ; System . . . .
rank: 608
score: 98.48782009548611
patch: break ; break ; case else break ;
rank: 608
score: 98.34745570591518
patch: break ; break ; if break ; return ; break ; break ;
rank: 609
score: 99.10993303571429
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ,
rank: 609
score: 99.08939906529018
patch: typeable = n . get CaMeL Type ( ) . get CaMeL
rank: 609
score: 99.084736328125
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent . get CaMeL Type ( ) ) )
rank: 609
score: 98.69482421875
patch: right = ; left CaMeL Type = visit CaMeL Name ( ;
rank: 609
score: 98.57168143136161
patch: break ; case Token . ; case Token . ATTRIBUTE _ FLAG :
rank: 609
score: 98.52353244357639
patch: return break ; else ; } break ;
rank: 609
score: 98.48714192708333
patch: break ; ; / * break ; /
rank: 609
score: 98.4862289428711
patch: System . . . . break ;
rank: 609
score: 98.34726186899039
patch: break ; break ; break ; if ; break ; / /
rank: 610
score: 99.10980902777777
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ; break ;
rank: 610
score: 99.08931187220982
patch: typeable = ! child CaMeL Type . matches ( $STRING$ ) ;
rank: 610
score: 99.08420973557692
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type = child CaMeL Type ;
rank: 610
score: 98.90677897135417
patch: set CaMeL Type ( n . get CaMeL
rank: 610
score: 98.69472249348958
patch: break ; case Token . TYPE : visit CaMeL Name ;
rank: 610
score: 98.57021484375
patch: break ; case Token . TYPE : right CaMeL Type = ; break ;
rank: 610
score: 98.52298990885417
patch: return break ; null ;
rank: 610
score: 98.48651885986328
patch: break ; ; * while break ;
rank: 610
score: 98.486083984375
patch: return left CaMeL Type ;
rank: 610
score: 98.34527118389423
patch: break ; break ; if ; return ; break ; break ;
rank: 611
score: 99.109736328125
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( t . get CaMeL Type CaMeL Of CaMeL This ( ) ) )
rank: 611
score: 99.08840707632211
patch: right = n . get CaMeL Last CaMeL Child ( ) ;
rank: 611
score: 99.08411583533653
patch: right CaMeL Type = Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) :
rank: 611
score: 98.90616861979167
patch: right CaMeL Type = child CaMeL Type ( n ) ;
rank: 611
score: 98.69441053602431
patch: break ; case Token . ; : ;
rank: 611
score: 98.57020874023438
patch: break ; default : throw new Error ( ;
rank: 611
score: 98.4859619140625
patch: } * / break ; break ;
rank: 611
score: 98.48035539899554
patch: switch ( left CaMeL Type )
rank: 611
score: 98.34474690755208
patch: break ; break ; start
rank: 612
score: 99.10931755514706
patch: validator . set CaMeL Name ( n . get CaMeL Type ( ) . get CaMeL
rank: 612
score: 99.0875390625
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL Type ( ) ;
rank: 612
score: 99.0841064453125
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 612
score: 98.5701904296875
patch: break ; case Token . right CaMeL Type : ;
rank: 612
score: 98.52287074497768
patch: } break ; false ; }
rank: 612
score: 98.48564910888672
patch: break ; break ; * else ;
rank: 612
score: 98.47816467285156
patch: break ? case Token . LP :
rank: 612
score: 98.34327043805804
patch: break ; break ; break ; break ; } return ; break ;
rank: 613
score: 99.10895244891827
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) .
rank: 613
score: 99.083603515625
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL Type ( ) ) )
rank: 613
score: 98.69399192116477
patch: right CaMeL Type = ; left CaMeL Type = ;
rank: 613
score: 98.52277289496527
patch: break ; false ; } if break ;
rank: 613
score: 98.48510131835937
patch: break ; break ; case String . break ?
rank: 613
score: 98.47677612304688
patch: result = typeable ;
rank: 613
score: 98.341552734375
patch: break ; break ; break ; break ; } ++ break ;
rank: 614
score: 99.10887830010776
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 614
score: 99.08644205729166
patch: right = n . get CaMeL First CaMeL Child ( ) ; break ;
rank: 614
score: 99.08348083496094
patch: typeable = ! ( n . get CaMeL First CaMeL Child ( ) !=
rank: 614
score: 98.8963955965909
patch: n . get CaMeL JS CaMeL Type ( ) ;
rank: 614
score: 98.69256122295673
patch: right CaMeL Type = visit CaMeL Name ( break , parent ;
rank: 614
score: 98.52265930175781
patch: } else if ; catch break ;
rank: 614
score: 98.48409271240234
patch: break ; / / while break ;
rank: 614
score: 98.46821594238281
patch: } else typeable = false ;
rank: 614
score: 98.34056678185097
patch: break ; if break ; break ; break ; if break ;
rank: 615
score: 99.10846416766827
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ;
rank: 615
score: 99.08543904622395
patch: ensure CaMeL Typed ( t , right CaMeL Type ) ;
rank: 615
score: 99.08326171875
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( typeable . get CaMeL Type ( ) ) ;
rank: 615
score: 98.69152069091797
patch: break ; default : this . ;
rank: 615
score: 98.56972092848558
patch: if ( ; left CaMeL Type . get CaMeL Style ( ;
rank: 615
score: 98.5223388671875
patch: break ; } catch ( break ;
rank: 615
score: 98.4820556640625
patch: if break ; break ; break ; ;
rank: 615
score: 98.46814836774554
patch: case Token . BITNOT :
rank: 615
score: 98.33866060697116
patch: break ; break ; break ; break ; return ; return ;
rank: 616
score: 99.10830583243535
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; return ;
rank: 616
score: 99.0854296875
patch: typeable = child CaMeL Type . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 616
score: 99.08299967447917
patch: right CaMeL Type = n . get CaMeL Type ( ) ; break ;
rank: 616
score: 98.89258922230114
patch: right CaMeL Type = JS CaMeL Type . op CaMeL
rank: 616
score: 98.69109429253473
patch: break ; case Token . FUNCTION : ;
rank: 616
score: 98.5693588256836
patch: break ; case Token . WINDOW :
rank: 616
score: 98.52230398995536
patch: } if ; if break ;
rank: 616
score: 98.4819564819336
patch: break ; / ? / / /
rank: 616
score: 98.46731567382812
patch: return ! typeable ;
rank: 616
score: 98.33822195870536
patch: break ; break ; break ; break ; break ; break ; ;
rank: 617
score: 99.10830252511161
patch: validator . set CaMeL Type ( left CaMeL Type ) ; break ;
rank: 617
score: 99.08457728794643
patch: ensure CaMeL Typed ( t , left CaMeL Type , $STRING$ ) ;
rank: 617
score: 99.08296966552734
patch: right CaMeL Type = validator . get CaMeL First CaMeL Child ( t ) ;
rank: 617
score: 98.89105987548828
patch: ensure CaMeL Typed ( t ) ;
rank: 617
score: 98.69081624348958
patch: break ; default : break ; } else { break ;
rank: 617
score: 98.56844889322916
patch: switch ( n . get CaMeL Type ( ) ; default : break ;
rank: 617
score: 98.52212524414062
patch: break break ; break ; } else
rank: 617
score: 98.48150634765625
patch: } * * / break ; }
rank: 617
score: 98.46590423583984
patch: break ; case Token . ASSIGN :
rank: 617
score: 98.33809988839286
patch: break ; break ; break ; if ; / / / / /
rank: 618
score: 99.10741315569196
patch: validator . child CaMeL Type = t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 618
score: 99.08294921875
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type ( ) ) ; }
rank: 618
score: 99.082548828125
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( n . get CaMeL First CaMeL Child ( ) )
rank: 618
score: 98.887939453125
patch: validator . ensure CaMeL Typed ( t , n ,
rank: 618
score: 98.69009399414062
patch: bottom = visit CaMeL Name ( ;
rank: 618
score: 98.56824747721355
patch: break ; case Token . ; case Token . ; ;
rank: 618
score: 98.52202606201172
patch: } else { in ; break ;
rank: 618
score: 98.4814453125
patch: break ; ; 1 ;
rank: 618
score: 98.4619140625
patch: case Token . VOID :
rank: 618
score: 98.33616286057692
patch: break ; break ; break ; break ; else return ; }
rank: 619
score: 99.1069968894676
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL This CaMeL Type ( ) ) ) ;
rank: 619
score: 98.6895751953125
patch: right CaMeL Type = ; ;
rank: 619
score: 98.5682373046875
patch: left CaMeL Type = ; right CaMeL Type = left CaMeL Type ; ;
rank: 619
score: 98.52153015136719
patch: break ; } if ( break ;
rank: 619
score: 98.47997368706598
patch: break ; ; / / * / /
rank: 619
score: 98.45951538085937
patch: return typeable ;
rank: 619
score: 98.33612060546875
patch: break ; break ; break ; break ; / / / / /
rank: 620
score: 99.082138671875
patch: typeable = right CaMeL Type . to CaMeL String ( t . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 620
score: 99.08179649939903
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . expect CaMeL Number ( ) ;
rank: 620
score: 98.88680013020833
patch: ensure CaMeL Typed ( typeable ) ;
rank: 620
score: 98.68953450520833
patch: break ; case Token . CHECK : ;
rank: 620
score: 98.56822102864584
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 620
score: 98.52083587646484
patch: else = false ; } break ;
rank: 620
score: 98.47953287760417
patch: return break ; / else { break ;
rank: 620
score: 98.44868469238281
patch: default : typeable = false ;
rank: 620
score: 98.33571213942308
patch: break ; break ; } break ; break ; if break ;
rank: 621
score: 99.10508991109914
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , parent ) ) ;
rank: 621
score: 99.081259765625
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( true ) ;
rank: 621
score: 99.081162109375
patch: typeable = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( n ) ;
rank: 621
score: 98.68931070963542
patch: right CaMeL Type = ; right CaMeL Type = parent ;
rank: 621
score: 98.5681864420573
patch: break ; default : t . set CaMeL Type ( ;
rank: 621
score: 98.52042643229167
patch: if break ; } break ; break ;
rank: 621
score: 98.47891574435764
patch: break ; break ; int * * /
rank: 621
score: 98.44785563151042
patch: case Token . NOT :
rank: 621
score: 98.33549281529018
patch: if break ; break ; break ; break ; break ; break ;
rank: 622
score: 99.10437883649554
patch: if ( ! child CaMeL Type . matches CaMeL Int 32 Context (
rank: 622
score: 99.0811016376202
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL Type ( typeable ) ;
rank: 622
score: 99.080361328125
patch: typeable = right CaMeL Type . get CaMeL JS CaMeL Type ( left CaMeL Type . get CaMeL Parent ( ) ) ;
rank: 622
score: 98.68821207682292
patch: right = visit CaMeL Name ( t , n break ;
rank: 622
score: 98.56815962357955
patch: break ; case ; case Char CaMeL Sequence . ;
rank: 622
score: 98.5203857421875
patch: = break ; break ; break ;
rank: 622
score: 98.47884368896484
patch: break ; ; / / break ;
rank: 622
score: 98.43710327148438
patch: case Token . VAR :
rank: 622
score: 98.33515276227679
patch: break ; break ; break ; break ; break ; else break ;
rank: 623
score: 99.10410719651442
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Message ( ) ) ;
rank: 623
score: 99.081064453125
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( false ) ;
rank: 623
score: 98.68779962713069
patch: break ; case ; case Token . NULL : ;
rank: 623
score: 98.56753104073661
patch: switch ( node . get CaMeL Type ( ) ) { case ;
rank: 623
score: 98.52017211914062
patch: return break break ; } break ;
rank: 623
score: 98.47883605957031
patch: break ; * ; / / {
rank: 623
score: 98.4364522298177
patch: Node left CaMeL Type ;
rank: 623
score: 98.3341533954327
patch: break ; break ; break ; break ; else / / /
rank: 624
score: 99.10399451622597
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ; }
rank: 624
score: 98.88446599786931
patch: validator . right CaMeL Type = n . get CaMeL
rank: 624
score: 98.68756103515625
patch: break ; case Token . READ : ;
rank: 624
score: 98.56748046875
patch: if ( n . get CaMeL Type ( ) == Token . TYPE )
rank: 624
score: 98.52001274956598
patch: break ; return ; } else return ;
rank: 624
score: 98.4783706665039
patch: break ; next ; break ; ;
rank: 624
score: 98.43161010742188
patch: true ; break ;
rank: 624
score: 98.33299909319196
patch: break ; break ; if break ; break ; return ; break ;
rank: 625
score: 99.10374098557692
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Code ( ) ) ;
rank: 625
score: 99.080361328125
patch: right CaMeL Type = parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 625
score: 98.88187866210937
patch: super . visit ( t , n ) ;
rank: 625
score: 98.68607584635417
patch: break ; case Token . break : visit CaMeL Name ;
rank: 625
score: 98.56695001775569
patch: break ; case Token . ^ Token . NAME :
rank: 625
score: 98.51930067274306
patch: } else { break ; break ; ;
rank: 625
score: 98.47813585069444
patch: } * * ; break ; break ;
rank: 625
score: 98.41475132533482
patch: else typeable = false ;
rank: 625
score: 98.33201381138393
patch: break ; break ; if ; break ; break ; } return ;
rank: 626
score: 99.10271747295673
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Code ( ) ) ;
rank: 626
score: 99.080244140625
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . matches CaMeL Int 32 ( ) ;
rank: 626
score: 98.68496704101562
patch: right CaMeL Type = right CaMeL Type == null ? ;
rank: 626
score: 98.56652221679687
patch: break ; case Token . NONE : case ;
rank: 626
score: 98.51846652560764
patch: break break ; } else if break ;
rank: 626
score: 98.47791290283203
patch: break ; break ; * else {
rank: 626
score: 98.40933227539062
patch: return : typeable ;
rank: 626
score: 98.33169119698661
patch: break ; break ; break ; if ; = break ; break ;
rank: 627
score: 99.10236467633929
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 627
score: 99.0797119140625
patch: right CaMeL Type = n . get CaMeL Scope ( ) ;
rank: 627
score: 98.87935180664063
patch: right CaMeL Type = child CaMeL Type ; }
rank: 627
score: 98.566455078125
patch: break ; case Token . NONE : : ;
rank: 627
score: 98.51833767361111
patch: return ; break ; } } break ;
rank: 627
score: 98.47745513916016
patch: break ; break ; * / }
rank: 627
score: 98.40401785714286
patch: return ? false : true ;
rank: 627
score: 98.33164760044643
patch: break ; break ; if ; break ; break ; else break ;
rank: 628
score: 99.10203334263393
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 628
score: 99.07961801382211
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( typeable . get CaMeL Type ( ) ) )
rank: 628
score: 99.06867327008929
patch: if ( ! n . get CaMeL Type ( ) . matches CaMeL
rank: 628
score: 98.6827392578125
patch: right = ; left CaMeL Type = right CaMeL Type ; ;
rank: 628
score: 98.56631469726562
patch: sb . append ( $STRING$ ) . append ( ; ;
rank: 628
score: 98.51814270019531
patch: } if ; break ; break ;
rank: 628
score: 98.47726101345486
patch: break ; case case $STRING$ : break ;
rank: 628
score: 98.39927455357143
patch: if ( parent . get CaMeL
rank: 628
score: 98.33133638822116
patch: break ; break ; } break ; break ; = break ;
rank: 629
score: 99.10193323206019
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Type ( ) ) ) ; break ;
rank: 629
score: 99.06827486478366
patch: right = t . get CaMeL JS CaMeL Type ( ) ;
rank: 629
score: 98.8751953125
patch: break ; case Token . LP : ensure CaMeL
rank: 629
score: 98.681640625
patch: break ; ; case Token . STRING :
rank: 629
score: 98.56607055664062
patch: switch ( n . get CaMeL Type ( ; break ;
rank: 629
score: 98.5176010131836
patch: } else { if ; } }
rank: 629
score: 98.47708892822266
patch: break ; break ; ; true ;
rank: 629
score: 98.39901297433036
patch: throw case Token . LP :
rank: 629
score: 98.32991849459134
patch: break ; break ; while ; break ; break ; break ;
rank: 630
score: 99.10174560546875
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . to CaMeL String ( ) ; break ;
rank: 630
score: 99.07887620192308
patch: typeable = ! Node CaMeL Util . is CaMeL Expression CaMeL Node ( t . get CaMeL Last CaMeL Child ( ) ) ;
rank: 630
score: 99.06631033761161
patch: return left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 630
score: 98.8746337890625
patch: get CaMeL Type ( n . get CaMeL
rank: 630
score: 98.681396484375
patch: right CaMeL Type = super . visit ( t break , ;
rank: 630
score: 98.56585693359375
patch: break ; default : report CaMeL Error ( break ) ;
rank: 630
score: 98.51748657226562
patch: } } else { break ; }
rank: 630
score: 98.32909217247597
patch: break ; break ; if break ; break ; break ; else
rank: 631
score: 99.09993489583333
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( value ) ;
rank: 631
score: 99.07881673177083
patch: set CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 631
score: 99.06392728365384
patch: ensure CaMeL Typed ( t , n . get CaMeL Child CaMeL
rank: 631
score: 98.872802734375
patch: validator . typeable = false ;
rank: 631
score: 98.68077087402344
patch: if ( ; else { break ;
rank: 631
score: 98.56575520833333
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ;
rank: 631
score: 98.517333984375
patch: break ; false ; break ; null ;
rank: 631
score: 98.47580295138889
patch: break ; ; ; * / break ;
rank: 631
score: 98.3978983561198
patch: case Token . GETELEM :
rank: 631
score: 98.32840670072116
patch: break ; break ; if break ; break ; else return ;
rank: 632
score: 99.09926932198661
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL Of CaMeL This ( ) .
rank: 632
score: 98.87239583333333
patch: right CaMeL Type = t . get CaMeL
rank: 632
score: 98.67998798076923
patch: break ; default : throw Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 632
score: 98.56537420099431
patch: default : throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 632
score: 98.51702880859375
patch: break ; false } break ;
rank: 632
score: 98.47559814453125
patch: break = break ;
rank: 632
score: 98.39479282924107
patch: { typeable = false ;
rank: 632
score: 98.32833158052884
patch: break ; break ; break ; break ; break ; if ;
rank: 633
score: 99.09867802372685
patch: validator . expect CaMeL Number ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ,
rank: 633
score: 99.07813262939453
patch: get CaMeL JS CaMeL Type ( t . get CaMeL Type ( ) ) ;
rank: 633
score: 99.06170654296875
patch: ensure CaMeL Typed ( n , right CaMeL Type ) ;
rank: 633
score: 98.56529822716347
patch: break ; case Token . TYPE : case Token . type :
rank: 633
score: 98.51689147949219
patch: } else { } } else ;
rank: 633
score: 98.38804408482143
patch: switch ( typeable ) {
rank: 633
score: 98.32650052584134
patch: if break ; break ; break ; if break ; break ;
rank: 634
score: 99.07794658954327
patch: left CaMeL Type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 634
score: 98.67957414899554
patch: if ( ; else break ;
rank: 634
score: 98.56494140625
patch: sb . append ( $STRING$ ) . append ( name ) ;
rank: 634
score: 98.51679338727679
patch: break ; null * * /
rank: 634
score: 98.47550659179687
patch: break ; break ; else { break ; }
rank: 634
score: 98.38725062779018
patch: break ? Token . FUNCTION :
rank: 634
score: 98.32623291015625
patch: return ; break ; else
rank: 635
score: 99.09725215517241
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , $STRING$ ) ) ;
rank: 635
score: 99.07734680175781
patch: typeable = ! typeable ;
rank: 635
score: 98.67793579101563
patch: left CaMeL Type = right CaMeL Type ; ;
rank: 635
score: 98.56480712890625
patch: break ; case Token . DEFAULT : case ;
rank: 635
score: 98.51662868923611
patch: break ; * * break ; * /
rank: 635
score: 98.47538757324219
patch: break ; ; break ; try ;
rank: 635
score: 98.38683210100446
patch: break ; case Token . :
rank: 635
score: 98.32562255859375
patch: break ; break ; break ; if break ; break ; return ;
rank: 636
score: 99.09708658854167
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( 0 ) )
rank: 636
score: 99.0768291766827
patch: left CaMeL Type = validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 636
score: 99.05650983537946
patch: ensure CaMeL Typed ( t . get CaMeL Parent ( ) ) ;
rank: 636
score: 98.86334906684027
patch: break ; case Token . RETURN : }
rank: 636
score: 98.67681884765625
patch: right = visit CaMeL Name ; left CaMeL Type = ;
rank: 636
score: 98.56472778320312
patch: break ; case Token . TYPE | Token . TRUE :
rank: 636
score: 98.5158920288086
patch: } else / * * break ;
rank: 636
score: 98.47536214192708
patch: break ; ; - 1 ; break ;
rank: 636
score: 98.38229370117188
patch: case Token . NAME :
rank: 636
score: 98.32444411057692
patch: break ; break ; break ; } if ; = break ;
rank: 637
score: 99.09638323102679
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) ;
rank: 637
score: 99.0744873046875
patch: right CaMeL Type = n . get CaMeL Type ( ) . get CaMeL
rank: 637
score: 99.05545479910714
patch: typeable = child CaMeL Type . get CaMeL Value ( ) ;
rank: 637
score: 98.86272515190973
patch: break ; case Token . FUNCTION : }
rank: 637
score: 98.56447928292411
patch: break ; case Token . NAME : right CaMeL Type = ; ;
rank: 637
score: 98.51588270399306
patch: return break ; } catch break ; }
rank: 637
score: 98.47502136230469
patch: break ; / / / / :
rank: 637
score: 98.37842668805804
patch: return ? true : true ;
rank: 637
score: 98.32418118990384
patch: break ; break ; break ; } / / / / /
rank: 638
score: 99.09608289930556
patch: validator . set CaMeL Name ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; break ;
rank: 638
score: 99.07400277944711
patch: child CaMeL Type = validator . get CaMeL Name ( ) ;
rank: 638
score: 99.0520528157552
patch: typeable = n . get CaMeL Value ( ) ;
rank: 638
score: 98.86042616102431
patch: child CaMeL Type = left CaMeL Type ;
rank: 638
score: 98.6748379794034
patch: left = visit CaMeL Name ( ; right = ;
rank: 638
score: 98.56429850260416
patch: if ( ; right CaMeL Type . get CaMeL Type ( ) != ;
rank: 638
score: 98.51565551757812
patch: break ; return ; break ; }
rank: 638
score: 98.47494167751736
patch: break ; * / if break break ;
rank: 638
score: 98.36922781808036
patch: break ; case Token . LP
rank: 638
score: 98.32314828725961
patch: break ; break ; if break ; break ; ; break ;
rank: 639
score: 99.09565791377315
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( type ) ;
rank: 639
score: 99.07330791766827
patch: typeable = ! ( ! Node CaMeL Util . is CaMeL
rank: 639
score: 98.85974799262152
patch: child CaMeL Type = n . get CaMeL
rank: 639
score: 98.67376154119319
patch: break ; case Token . LABEL : ; break ;
rank: 639
score: 98.56402587890625
patch: if ( right CaMeL Type . get CaMeL Type ( ) == ;
rank: 639
score: 98.51565115792411
patch: break ; * * * ;
rank: 639
score: 98.47252739800348
patch: } else if break ; while break ;
rank: 639
score: 98.36834716796875
patch: for ( ; ; ) {
rank: 639
score: 98.32296048677884
patch: break ; if ; break ; break ; break ; return ;
rank: 640
score: 99.09471752025463
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( t , n ) ;
rank: 640
score: 98.8543930053711
patch: ensure CaMeL Typed ( type ) ;
rank: 640
score: 98.56340026855469
patch: break ; case Token . RIGHT :
rank: 640
score: 98.51545545789931
patch: } else { } else ; return ;
rank: 640
score: 98.47207302517361
patch: break ; / else { if break ;
rank: 640
score: 98.36778767903645
patch: case Token . TRUE :
rank: 640
score: 98.32294573102679
patch: break ; break ; break ; } break ; break ; break ;
rank: 641
score: 99.07097625732422
patch: right CaMeL Type = validator . get CaMeL JS CaMeL Type ( n ) ;
rank: 641
score: 98.56326293945312
patch: if ( right CaMeL Type != null ) {
rank: 641
score: 98.51537068684895
patch: break break ; } }
rank: 641
score: 98.47188568115234
patch: break ; break ; case ; ;
rank: 641
score: 98.36675153459821
patch: System . . . . ;
rank: 641
score: 98.32151442307692
patch: break ; break ; break ; break ; while ; break ;
rank: 642
score: 99.0940574363426
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ) )
rank: 642
score: 99.0689208984375
patch: JS CaMeL Type left CaMeL Type ; JS CaMeL Type left CaMeL Type ;
rank: 642
score: 99.04630737304687
patch: return n . get CaMeL Type ( ) ;
rank: 642
score: 98.85425415039063
patch: validator . right ( t , n ) ;
rank: 642
score: 98.67202758789062
patch: right CaMeL Type = left CaMeL Type ; ;
rank: 642
score: 98.56324259440105
patch: break ; case Token . ; case Token . LINE :
rank: 642
score: 98.51535034179688
patch: break ; else = false ; }
rank: 642
score: 98.47187042236328
patch: } * * - break * /
rank: 642
score: 98.36558024088542
patch: case Token . NEG :
rank: 642
score: 98.32117638221153
patch: break ; break ; if ; break ; if ; break ;
rank: 643
score: 99.09404839409723
patch: validator . child CaMeL Type = n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 643
score: 98.85359700520833
patch: break ; case Token . LP : {
rank: 643
score: 98.56319580078124
patch: break ; default : throw new Throwable t ;
rank: 643
score: 98.51519097222223
patch: break ; } else ; if break ;
rank: 643
score: 98.47166442871094
patch: break ; break ; ; 1 {
rank: 643
score: 98.36334228515625
patch: case Token . DEC :
rank: 643
score: 98.32088529146634
patch: break ; break ; break ; break ; if break ; }
rank: 644
score: 99.09321812220982
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( n ) ;
rank: 644
score: 98.8448974609375
patch: super . visit ( t , parent ) ;
rank: 644
score: 98.67029486762152
patch: break ; case Token . EOF : ;
rank: 644
score: 98.56287638346355
patch: break ; case Token . NAME : break ; case ;
rank: 644
score: 98.51474338107639
patch: break ; } else ; break ; }
rank: 644
score: 98.47140842013889
patch: break ; break ; ; / * /
rank: 644
score: 98.32045335036058
patch: break ; break ; return ; if ; break ; break ;
rank: 645
score: 98.84469943576389
patch: typeable = ! child CaMeL Type ;
rank: 645
score: 98.6700439453125
patch: this . ; break ; default : break ;
rank: 645
score: 98.5616455078125
patch: break ; case Token . ; case Token . FORMAT :
rank: 645
score: 98.51472981770833
patch: return break ; } else throw break ;
rank: 645
score: 98.47118377685547
patch: break ; / / : break ;
rank: 645
score: 98.35447184244792
patch: case Token . GET :
rank: 645
score: 98.31849016462054
patch: break ; break ; break ; if break ; return ; break ;
rank: 646
score: 99.09271918402777
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . to CaMeL String ( ) ; }
rank: 646
score: 99.06427001953125
patch: get CaMeL JS CaMeL Type ( n , left CaMeL Type ) ;
rank: 646
score: 98.6697998046875
patch: break ; case Token . LABEL : break ;
rank: 646
score: 98.5609882061298
patch: break ; case Token . hash CaMeL Code ( ) : ;
rank: 646
score: 98.51436360677083
patch: break ; false ; break ; return ;
rank: 646
score: 98.47088623046875
patch: i . next ( ; break ; *
rank: 646
score: 98.35324532645089
patch: System . . . . .
rank: 646
score: 98.31805419921875
patch: break ; break ; Logger
rank: 647
score: 99.0634765625
patch: left CaMeL Type = validator . get CaMeL Name ( ) ;
rank: 647
score: 99.0399169921875
patch: ensure CaMeL Typed ( left CaMeL Type , n ) ;
rank: 647
score: 98.5609639485677
patch: break ; case Token . NAME : break ; default :
rank: 647
score: 98.51396942138672
patch: break ; null } catch break ;
rank: 647
score: 98.47008666992187
patch: break ; break ; case 1 : break ;
rank: 647
score: 98.34980119977679
patch: break ? Token . RETURN :
rank: 647
score: 98.31724196213942
patch: break ; break ; if break ; break ; / / /
rank: 648
score: 99.09220096982759
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 648
score: 99.03767903645833
patch: ensure CaMeL Typed ( n , child CaMeL Type ) ;
rank: 648
score: 98.84130859375
patch: break ; case Token . TYPEOF : }
rank: 648
score: 98.5609600360577
patch: sb . append ( $STRING$ ) . append ( ; return ;
rank: 648
score: 98.5138931274414
patch: break break ; else break ; }
rank: 648
score: 98.46981811523438
patch: break ; break ; ; value ;
rank: 648
score: 98.34854125976562
patch: continue ; break ;
rank: 648
score: 98.31710111177884
patch: if break ; break ; break ; break ; break ; }
rank: 649
score: 99.09148763020833
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 649
score: 99.03641451322116
patch: typeable = get CaMeL Type ( left CaMeL Type ) ;
rank: 649
score: 98.66838921440973
patch: break ; default : ; break ; }
rank: 649
score: 98.56083374023437
patch: break ; case Token . EMPTY : ; ;
rank: 649
score: 98.51323590959821
patch: if ; * * * /
rank: 649
score: 98.46970621744792
patch: break ; break ; out . out ;
rank: 649
score: 98.34733363560268
patch: switch ( n . get CaMeL
rank: 649
score: 98.31661283052884
patch: break ; break ; break ; break ; } } break ;
rank: 650
score: 99.09122721354167
patch: validator . child CaMeL Type = t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 650
score: 99.06227329799107
patch: ensure CaMeL Typed ( left CaMeL Type , left CaMeL Type ) ;
rank: 650
score: 98.83734809027777
patch: break ; case Token . CALL : }
rank: 650
score: 98.56057504507211
patch: if ( ; n . get CaMeL Type ( ; type )
rank: 650
score: 98.51286485460069
patch: else { break ; } } else {
rank: 650
score: 98.4688491821289
patch: break ; break ; ; else ;
rank: 650
score: 98.340869140625
patch: flags = false ;
rank: 650
score: 98.31566443810097
patch: break ; break ; break ; break ; if ; return ;
rank: 651
score: 99.08995710100446
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) .
rank: 651
score: 99.0590350811298
patch: right CaMeL Type = right CaMeL Type ; validator . expect CaMeL
rank: 651
score: 99.03405151367187
patch: typeable = child CaMeL Type ; break ;
rank: 651
score: 98.83661566840277
patch: left CaMeL Type = n . get CaMeL
rank: 651
score: 98.66511366102431
patch: break ; default : ; return ; }
rank: 651
score: 98.56049455915179
patch: if ( ; n . get CaMeL Type ( ) . equals ;
rank: 651
score: 98.51229519314236
patch: } else = false ; break ; }
rank: 651
score: 98.46880493164062
patch: break ; / / / / * / /
rank: 651
score: 98.34032331194196
patch: if ( ! typeable )
rank: 651
score: 98.31420026506696
patch: break ; break ; break ; if ; break ; break ; ;
rank: 652
score: 99.08879743303571
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 652
score: 99.0569091796875
patch: right CaMeL Type = typeable ; break ;
rank: 652
score: 98.83611382378473
patch: left CaMeL Type = left CaMeL Type ;
rank: 652
score: 98.66203169389205
patch: break ; case Token . TARGET : ; break ;
rank: 652
score: 98.56028529575893
patch: sb . append ( $STRING$ ) . append ( type CaMeL Name ;
rank: 652
score: 98.51202392578125
patch: return ; } } if break ;
rank: 652
score: 98.4686279296875
patch: else { break ; } else {
rank: 652
score: 98.3325703938802
patch: } else { ensure CaMeL
rank: 652
score: 98.31409630408653
patch: break ; break ; break ; break ; else break ; }
rank: 653
score: 99.08839634486607
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) .
rank: 653
score: 99.02671305338542
patch: typeable = n . get CaMeL Name ( ) ;
rank: 653
score: 98.8360824584961
patch: break ; case Type . RETURN :
rank: 653
score: 98.5595947265625
patch: break ; case Token . TARGET : break ;
rank: 653
score: 98.51199340820312
patch: else = false ; } catch ;
rank: 653
score: 98.46857299804688
patch: break ; break ; case $STRING$ : break ;
rank: 653
score: 98.3316650390625
patch: break ? Token . VOID :
rank: 653
score: 98.31383338341347
patch: break ; if break ; break ; break ; break ; }
rank: 654
score: 99.08768265335648
patch: right CaMeL Type = Node CaMeL Util . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 654
score: 99.05255596454327
patch: right CaMeL Type = left CaMeL Type ; validator . expect CaMeL
rank: 654
score: 98.83572823660714
patch: } typeable = false ;
rank: 654
score: 98.66096327039931
patch: break ; case Token . RETURN : ;
rank: 654
score: 98.55899752103366
patch: if ( ; right CaMeL Type . equals ( $STRING$ ) ;
rank: 654
score: 98.51140485491071
patch: break ; } } } ;
rank: 654
score: 98.46855333116319
patch: break ; ; / * * break ;
rank: 654
score: 98.32867431640625
patch: switch ( parent . get CaMeL
rank: 654
score: 98.31288499098558
patch: break ; break ; break ; break ; ; / / /
rank: 655
score: 99.08768136160714
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ; }
rank: 655
score: 99.05145733173077
patch: typeable = ! child CaMeL Type . matches ( ) ;
rank: 655
score: 99.02388509114583
patch: right = get CaMeL First CaMeL Child ( n ) ;
rank: 655
score: 98.83541259765624
patch: ensure CaMeL Typed ( t , type ) ;
rank: 655
score: 98.66089630126953
patch: break ; default : ; break ;
rank: 655
score: 98.55868530273438
patch: break ; case Token . TYPE : break ; case ;
rank: 655
score: 98.51106092664931
patch: break ; else break ; } break ;
rank: 655
score: 98.46835327148438
patch: break ; break ; case ] ;
rank: 655
score: 98.31252034505208
patch: if ; = break ;
rank: 656
score: 99.08679651331019
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL JS CaMeL Type ( ) ) ; }
rank: 656
score: 99.04924665178571
patch: child CaMeL Type = n . get CaMeL Type ( ) ; }
rank: 656
score: 99.01889870383523
patch: break get CaMeL JS CaMeL Type ( n ) ;
rank: 656
score: 98.83405219184027
patch: child CaMeL Type = Token . FUNCTION ;
rank: 656
score: 98.66034490411931
patch: break ; case Token . STRING : ; break ;
rank: 656
score: 98.55845289963942
patch: break ; case Token . ; case Token . ; * /
rank: 656
score: 98.51097869873047
patch: } break ; break ; null ;
rank: 656
score: 98.4677734375
patch: break ; break ; case String . Float ;
rank: 656
score: 98.32546561104911
patch: ! typeable = false ;
rank: 656
score: 98.31239536830357
patch: break ; break ; break ; return ; break ; } break ;
rank: 657
score: 99.08553059895833
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 657
score: 99.04868386008523
patch: right CaMeL Type = Node CaMeL Util . is CaMeL
rank: 657
score: 98.83381483289931
patch: set CaMeL Type ( typeable ) ;
rank: 657
score: 98.51067437065973
patch: break ; } finally { if break ;
rank: 657
score: 98.46706814236111
patch: } * * / if break true ;
rank: 657
score: 98.32278878348214
patch: break ? Token . COMMA :
rank: 657
score: 98.31215413411458
patch: break ; break ; System
rank: 658
score: 99.08538818359375
patch: if ( ! child CaMeL Type . is CaMeL Local ( ) )
rank: 658
score: 99.01707967122395
patch: set CaMeL JS CaMeL Type ( child CaMeL Type ) ;
rank: 658
score: 98.83224487304688
patch: validator . report ( t , n ) ;
rank: 658
score: 98.658544921875
patch: break ; case ; case Token . TARGET :
rank: 658
score: 98.55747767857143
patch: break ; case Token . ; case Token . TYPE : case ;
rank: 658
score: 98.51055908203125
patch: break ; break ; for break ; }
rank: 658
score: 98.46704779730902
patch: break ; / / / / break /
rank: 658
score: 98.31437465122768
patch: break ? Token . TYPEOF :
rank: 658
score: 98.31149526742789
patch: break ; break ; break ; else return ; } break ;
rank: 659
score: 99.08455403645833
patch: validator . set CaMeL JS CaMeL Type ( parent ) ;
rank: 659
score: 98.83223266601563
patch: add CaMeL Type ( t , n ) ;
rank: 659
score: 98.6583740234375
patch: break ; default : throw ; } break ;
rank: 659
score: 98.55730329241071
patch: right = left CaMeL Type ;
rank: 659
score: 98.51016671316964
patch: break ; } } return ;
rank: 659
score: 98.46638488769531
patch: break ; / / ] break ;
rank: 659
score: 98.31113891601562
patch: result = false ;
rank: 659
score: 98.30959848257211
patch: break ; break ; return ; break ; break ; break ;
rank: 660
score: 99.04074331430289
patch: ensure CaMeL Typed ( left CaMeL Type , typeable ) ;
rank: 660
score: 98.82769012451172
patch: validator . typeable = true ;
rank: 660
score: 98.65744018554688
patch: break ; case Token . ; :
rank: 660
score: 98.55698805588942
patch: break ; case Token . NULL : case Token . TRUE :
rank: 660
score: 98.50965881347656
patch: else = break ; } finally {
rank: 660
score: 98.46611022949219
patch: else = break ; break ; ;
rank: 660
score: 98.30893961588542
patch: break ; return ; }
rank: 660
score: 98.30803571428571
patch: System . . . . :
rank: 661
score: 99.08422009698276
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ; break ;
rank: 661
score: 99.03504638671875
patch: if ( ! child CaMeL Type . is CaMeL
rank: 661
score: 99.0101806640625
patch: ensure CaMeL Typed ( n , $STRING$ ) ;
rank: 661
score: 98.82404920789931
patch: break ; case Token . DEC : }
rank: 661
score: 98.65645345052083
patch: if ( ; break ; default : ;
rank: 661
score: 98.5567138671875
patch: break ; case Token . YES : ; ;
rank: 661
score: 98.50929478236607
patch: } else if break break ;
rank: 661
score: 98.46442260742188
patch: break ; break ; System . out . println
rank: 661
score: 98.30887858072917
patch: return ; if break ;
rank: 661
score: 98.30770438058036
patch: break ? Token . NOT :
rank: 662
score: 99.08421107700893
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 662
score: 99.03474644252232
patch: child CaMeL Type = parent . get CaMeL Type ( ) ; }
rank: 662
score: 99.00901285807292
patch: ensure CaMeL Typed ( t , n , false ) ;
rank: 662
score: 98.82352023654514
patch: ensure CaMeL Typed ( t . get CaMeL
rank: 662
score: 98.55639038085937
patch: break ; case Token . SIZE : ; ;
rank: 662
score: 98.50920274522569
patch: } else ; if ; return break ;
rank: 662
score: 98.46434783935547
patch: break ; case break ; break ;
rank: 662
score: 98.30846228966347
patch: if break ; break ; break ; break ; if break ;
rank: 662
score: 98.30526297433036
patch: LOG . error ( ) ;
rank: 663
score: 99.0841397372159
patch: if ( child CaMeL Type == Token . FUNCTION )
rank: 663
score: 99.00767517089844
patch: typeable = right CaMeL Type ;
rank: 663
score: 98.82288275824652
patch: } break ; case Token . LP :
rank: 663
score: 98.55635375976563
patch: break ; case Token . STRING : * /
rank: 663
score: 98.50885009765625
patch: return break ; return ; } break ;
rank: 663
score: 98.46305338541667
patch: break ; / / * / break ;
rank: 663
score: 98.30838716947116
patch: break ; break ; break ; break ; break ; * /
rank: 663
score: 98.3006591796875
patch: return && typeable ;
rank: 664
score: 99.08380998883929
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) ;
rank: 664
score: 99.03117231889205
patch: ensure CaMeL Typed ( t , left CaMeL Type ,
rank: 664
score: 98.65329996744792
patch: break ; case Token . TRY : ;
rank: 664
score: 98.55615234375
patch: break ; break ; case Token . TYPE :
rank: 664
score: 98.50884137834821
patch: } else ; } break ;
rank: 664
score: 98.46297200520833
patch: break break ; / else { break ;
rank: 664
score: 98.30802699497768
patch: break ; break ; break ; break ; break ; ; break ;
rank: 664
score: 98.29609898158482
patch: switch ( child CaMeL Type )
rank: 665
score: 99.08246901939656
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL Parent CaMeL Node ( ) ) ) ;
rank: 665
score: 98.65096706814236
patch: break ; ; case Token . TARGET :
rank: 665
score: 98.55552321213942
patch: left CaMeL Type = ; ; right CaMeL Type = type ;
rank: 665
score: 98.46289825439453
patch: break ; case $STRING$ ? break ;
rank: 666
score: 99.08244105747768
patch: report ( t . get CaMeL JS CaMeL Type ( ) ) ;
rank: 666
score: 98.81353759765625
patch: get CaMeL Type ( n , parent ) ;
rank: 666
score: 98.65035574776786
patch: right = visit CaMeL Name ;
rank: 666
score: 98.55465698242188
patch: break ; case Token . TYPE ; case Token . ;
rank: 666
score: 98.50853135850694
patch: break ; } } else = break ;
rank: 666
score: 98.30715506417411
patch: break ; break ; if break ; break ; if ; break ;
rank: 666
score: 98.29412841796875
patch: case Token . TYPEOF :
rank: 667
score: 99.08219401041667
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( left CaMeL Type ) . get CaMeL Type ( ) ) ;
rank: 667
score: 98.8110595703125
patch: ensure CaMeL Typed ( t , node ) ;
rank: 667
score: 98.64614529079861
patch: right CaMeL Type = visit CaMeL Name ;
rank: 667
score: 98.55394897460937
patch: break ; default : log . error ( ;
rank: 667
score: 98.50807407924107
patch: break ; null if break ;
rank: 667
score: 98.46227416992187
patch: break ; ; / ] = break false ;
rank: 667
score: 98.30692836216518
patch: break ; break ; break ; break ; break ; } / /
rank: 667
score: 98.28272705078125
patch: true = false ;
rank: 668
score: 99.08189655172414
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( child CaMeL Type ) ;
rank: 668
score: 99.02714029947917
patch: ensure CaMeL Typed ( n , n , parent ) ;
rank: 668
score: 98.80853271484375
patch: typeable = ! ( t . get CaMeL
rank: 668
score: 98.55332641601562
patch: break ; case ; case Token . ; ;
rank: 668
score: 98.46207427978516
patch: } * / break ; / /
rank: 668
score: 98.30498395647321
patch: break ; break ; break ; if ; break ; else break ;
rank: 668
score: 98.28204345703125
patch: case Token . TYPE :
rank: 669
score: 99.08111361799568
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; report CaMeL
rank: 669
score: 99.02642822265625
patch: typeable = ! ( child CaMeL Type ;
rank: 669
score: 98.99892356178977
patch: typeable = ! child CaMeL Type . matches CaMeL
rank: 669
score: 98.8079833984375
patch: right CaMeL Type = visit CaMeL
rank: 669
score: 98.63954467773438
patch: break ; case ; case Token . LABEL :
rank: 669
score: 98.50745307074652
patch: break ; } else { } catch ;
rank: 669
score: 98.46195475260417
patch: break ; case - 1 : break ;
rank: 669
score: 98.30495779854911
patch: break ; break ; break ; break ; return ; break ; }
rank: 669
score: 98.28098842075893
patch: continue ? Token . LP :
rank: 670
score: 99.08104564525463
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( null ) ;
rank: 670
score: 99.02498953683036
patch: right CaMeL Type = t . get CaMeL Type ( ) ; }
rank: 670
score: 98.99884033203125
patch: if ( ! child CaMeL Type . is CaMeL Expression CaMeL
rank: 670
score: 98.55177612304688
patch: break ; case Token . class : ; ;
rank: 670
score: 98.50725446428571
patch: break ; true ; } }
rank: 670
score: 98.46185302734375
patch: break ; ; / / / * /
rank: 670
score: 98.30452183314732
patch: break ; break ; for ; ; ; ; break ; break ;
rank: 670
score: 98.28031703404018
patch: index = n . get CaMeL
rank: 671
score: 99.080810546875
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ; break ;
rank: 671
score: 98.80470106336806
patch: break ; case Token . DEC : .
rank: 671
score: 98.6378402709961
patch: break ; case Token . NO :
rank: 671
score: 98.55164337158203
patch: break ; case Token . COLON :
rank: 671
score: 98.4618408203125
patch: break ; break ; case 0 : break ;
rank: 671
score: 98.27911376953125
patch: continue ? false : false ;
rank: 672
score: 99.08059353298611
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL JS CaMeL Type ( ) ) )
rank: 672
score: 99.02211216517857
patch: Type left CaMeL Type = n . get CaMeL Type ( ) ;
rank: 672
score: 98.80448608398437
patch: break ; case Token . DEC : break ;
rank: 672
score: 98.55079345703125
patch: break ; case Token . normalize ( ) :
rank: 672
score: 98.50700378417969
patch: } else if ( ! break ;
rank: 672
score: 98.46171875
patch: break ; break ; case Boolean . parse _
rank: 672
score: 98.30281284877232
patch: break ; break ; break ; if ; break ; / / /
rank: 672
score: 98.27705891927083
patch: return child CaMeL Type ;
rank: 673
score: 99.08013916015625
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 673
score: 98.99749755859375
patch: ensure CaMeL Typed ( left CaMeL Type ) ; break ;
rank: 673
score: 98.5507080078125
patch: break ; case Token . ; right = ;
rank: 673
score: 98.5068359375
patch: if ; break ; break ; }
rank: 673
score: 98.46082899305556
patch: break ; ; * / if break ;
rank: 673
score: 98.30224609375
patch: break ; break ; break
rank: 673
score: 98.27358572823661
patch: else typeable = true ;
rank: 674
score: 99.07953752790179
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 674
score: 99.02098737444196
patch: right CaMeL Type = right CaMeL Type ; typeable = false ;
rank: 674
score: 98.99583943684895
patch: ensure CaMeL Typed ( left CaMeL Type , $STRING$ ) ;
rank: 674
score: 98.80100795200893
patch: if ( n . get CaMeL
rank: 674
score: 98.63461642795139
patch: right CaMeL Type = ; break ; }
rank: 674
score: 98.54902954101563
patch: left = right CaMeL Type ; right = ;
rank: 674
score: 98.5067850748698
patch: } if ( break ;
rank: 674
score: 98.46056450737848
patch: break ; break ; ; ; break ;
rank: 674
score: 98.3020731608073
patch: break ; break ; String
rank: 674
score: 98.27240862165179
patch: right CaMeL Type = true ;
rank: 675
score: 99.07952880859375
patch: validator . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ;
rank: 675
score: 98.63407592773437
patch: right CaMeL Type ; left CaMeL Type = ;
rank: 675
score: 98.50663539341518
patch: return ; * * * /
rank: 675
score: 98.45916748046875
patch: } * break break ;
rank: 675
score: 98.30179268973214
patch: break ; break ; if ; break ; } break ; break ;
rank: 675
score: 98.27083914620536
patch: final Node left CaMeL Type ;
rank: 676
score: 99.07891376201923
patch: validator . set CaMeL Type ( left CaMeL Type ) ; }
rank: 676
score: 99.0193758877841
patch: set CaMeL JS CaMeL Type ( typeable ) ;
rank: 676
score: 98.99505615234375
patch: ensure CaMeL Typed ( t , n , n ) ;
rank: 676
score: 98.798583984375
patch: right CaMeL Type = get CaMeL
rank: 676
score: 98.63368055555556
patch: break ; case Type . break : ;
rank: 676
score: 98.54844970703125
patch: body = break ; case Token . TYPE :
rank: 676
score: 98.50657435825893
patch: } else if ( false ;
rank: 676
score: 98.45875379774306
patch: break ; ; - / ? break ;
rank: 676
score: 98.29807826450893
patch: break ; break ; break ; if break ; if ; break ;
rank: 676
score: 98.2687744140625
patch: flags = true ;
rank: 677
score: 99.07654622395833
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL Of CaMeL This ( ) .
rank: 677
score: 99.01866803850446
patch: JS CaMeL Type left CaMeL Type = Node CaMeL Util . is CaMeL
rank: 677
score: 98.99393463134766
patch: typeable = child CaMeL Type ;
rank: 677
score: 98.79519314236111
patch: } ensure CaMeL Typed ( t ) ;
rank: 677
score: 98.63340759277344
patch: break ; default : ; ; ;
rank: 677
score: 98.5482421875
patch: break ; case ; case Token . YES :
rank: 677
score: 98.50643920898438
patch: break ; ++ break ; break ;
rank: 677
score: 98.45839233398438
patch: break ; break ; case String . next ?
rank: 677
score: 98.26572963169643
patch: break ? Token . POS :
rank: 678
score: 99.0764581088362
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 678
score: 98.79364013671875
patch: do { typeable = false ;
rank: 678
score: 98.50589328342014
patch: break ; false ; break ; * /
rank: 678
score: 98.29654366629464
patch: break ; break ; if ; break ; break ; break ; ;
rank: 678
score: 98.265380859375
patch: case Token . LP : _
rank: 679
score: 99.01602877103366
patch: JS CaMeL Type left CaMeL Type ; JS CaMeL Type right ;
rank: 679
score: 98.79232788085938
patch: this . typeable = true ;
rank: 679
score: 98.63216145833333
patch: return ; case Token . break : ;
rank: 679
score: 98.54695892333984
patch: break ; case Token . LOOP :
rank: 679
score: 98.50568983289931
patch: break ; break ; } } return ;
rank: 679
score: 98.29585484095982
patch: break ; break ; if ; = break ; break ; break ;
rank: 679
score: 98.26511928013393
patch: { typeable = true ;
rank: 680
score: 99.07579549153645
patch: validator . set CaMeL JS CaMeL Type ( n ) ;
rank: 680
score: 98.63155517578124
patch: break ; case ; case Token . NONE :
rank: 680
score: 98.54543832632211
patch: if ( ; left CaMeL Type . equals ( $STRING$ ) )
rank: 680
score: 98.5054702758789
patch: } break ; return ; break ;
rank: 680
score: 98.45677354600694
patch: break ; case ? ) { break ;
rank: 680
score: 98.29530552455357
patch: break ; break ; break ; if ; break ; if break ;
rank: 680
score: 98.2591552734375
patch: int left CaMeL Type ;
rank: 681
score: 99.0147216796875
patch: ensure CaMeL Typed ( n , parent ) ;
rank: 681
score: 98.98638361150569
patch: left CaMeL Type = left CaMeL Type ; break ;
rank: 681
score: 98.79154052734376
patch: break ; case Token . LP : left CaMeL
rank: 681
score: 98.63107299804688
patch: break ; case Token . EOF :
rank: 681
score: 98.54541954627403
patch: left CaMeL Type = ; right CaMeL Type = break ; ;
rank: 681
score: 98.50496419270833
patch: break ; null * /
rank: 681
score: 98.45597330729167
patch: break ; ; break ; for break ;
rank: 681
score: 98.29462541852679
patch: break ; break ; if ; break ; if break ; break ;
rank: 681
score: 98.25698852539062
patch: case Token . NULL :
rank: 682
score: 98.98073120117188
patch: break ; case Token . LP : return ;
rank: 682
score: 98.79111735026042
patch: break ; case Token . VAR : }
rank: 682
score: 98.6302490234375
patch: break ; default : name = ;
rank: 682
score: 98.54510498046875
patch: break ; ; case ;
rank: 682
score: 98.50361463758681
patch: } else ; break ; } break ;
rank: 682
score: 98.4557861328125
patch: break ; break ; case String . 0 ?
rank: 682
score: 98.29245431082589
patch: break ; break ; break ; break ; else break ; break ;
rank: 682
score: 98.25078735351562
patch: found = false ;
rank: 683
score: 99.0740966796875
patch: validator = n . get CaMeL JS CaMeL Type ( ) ;
rank: 683
score: 99.0130145733173
patch: right CaMeL Type = child CaMeL Type ; validator . expect CaMeL
rank: 683
score: 98.97964477539062
patch: ensure CaMeL Typed ( t , false ) ;
rank: 683
score: 98.62876586914062
patch: break ; default : break ; } return ;
rank: 683
score: 98.50335015190973
patch: return break ; break ; } else ;
rank: 683
score: 98.45573594835069
patch: break ; ; / / * ; /
rank: 683
score: 98.29231480189732
patch: break ; break ; break ; if ; if break ; break ;
rank: 683
score: 98.24740600585938
patch: result = true ;
rank: 684
score: 99.07293701171875
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( parent . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 684
score: 99.01245880126953
patch: left CaMeL Type = typeable ;
rank: 684
score: 98.78597683376736
patch: set CaMeL Name ( n . get CaMeL
rank: 684
score: 98.62781439887152
patch: break ; case Token . Token . ;
rank: 684
score: 98.544189453125
patch: break ; case Token . ; break ; case Token . ;
rank: 684
score: 98.5032958984375
patch: break ; ; } catch break ;
rank: 684
score: 98.45542602539062
patch: break ; break ; case String { break ;
rank: 684
score: 98.28965541294643
patch: break ; break ; if break ; break ; break ; / /
rank: 684
score: 98.23129272460938
patch: throw ! typeable ;
rank: 685
score: 99.0727118130388
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL Parent CaMeL Node ( ) ) ) ;
rank: 685
score: 98.97898559570312
patch: typeable = right CaMeL Type ; break ;
rank: 685
score: 98.62701416015625
patch: break ; default : ; * /
rank: 685
score: 98.5429217998798
patch: if ( ; right CaMeL Type == Token . TYPE || ;
rank: 685
score: 98.50289916992188
patch: break ; } } else return ;
rank: 685
score: 98.45438639322917
patch: break ; / * * break ; /
rank: 685
score: 98.28929792131696
patch: break ; break ; if ; break ; else break ; break ;
rank: 685
score: 98.23089599609375
patch: Object left CaMeL Type ;
rank: 686
score: 99.07245744977679
patch: right CaMeL Type = child CaMeL Type . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 686
score: 98.97890218098958
patch: ensure CaMeL Typed ( child CaMeL Type ) ; break ;
rank: 686
score: 98.78508843315973
patch: break ; case Token . LP : :
rank: 686
score: 98.54238656850961
patch: break ; case Token . TYPE : vars . add ( ;
rank: 686
score: 98.50282287597656
patch: * * * * / break ;
rank: 686
score: 98.45411512586806
patch: break ; / / * / / /
rank: 686
score: 98.28904506138393
patch: break ; if ; = break ; break ; break ; break ;
rank: 686
score: 98.22896575927734
patch: return false ;
rank: 687
score: 99.0707586880388
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( parent ) ;
rank: 687
score: 99.00784301757812
patch: report ( t . get CaMeL Type ( ) ) ;
rank: 687
score: 98.97877197265625
patch: return left CaMeL Type = child CaMeL Type ;
rank: 687
score: 98.78427463107639
patch: break ; case Token . GETELEM : }
rank: 687
score: 98.45396728515625
patch: break ; / / if break { break ;
rank: 687
score: 98.28749593098958
patch: break ; } return ;
rank: 688
score: 99.07058279854911
patch: if ( ! child CaMeL Type . is CaMeL Object CaMeL Lit CaMeL Key ( t . get CaMeL First CaMeL Child ( ) ) ) {
rank: 688
score: 98.78418646918402
patch: break ; case Token . FUNCTION : .
rank: 688
score: 98.53944749098558
patch: if ( right CaMeL Type == Token . TYPE ) break ;
rank: 688
score: 98.5018310546875
patch: } else ; try { break ;
rank: 688
score: 98.45342407226562
patch: break ; out . println break false ; }
rank: 688
score: 98.2874247233073
patch: throw break ; break ;
rank: 688
score: 98.2044169108073
patch: Decl left CaMeL Type ;
rank: 689
score: 99.06954640355603
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 689
score: 98.78326416015625
patch: ensure CaMeL Typed ( t , name ) ;
rank: 689
score: 98.62480163574219
patch: break ; case Token . EXPRESSION :
rank: 689
score: 98.53832135881696
patch: break ; ; case break :
rank: 689
score: 98.50128851996527
patch: break ; break ; break ; false ;
rank: 689
score: 98.4515380859375
patch: break ; ; / * / / /
rank: 689
score: 98.28700474330357
patch: break ; break ; } if ; break ; break ; break ;
rank: 689
score: 98.2034912109375
patch: added = false ;
rank: 690
score: 99.0693359375
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , parent ) ;
rank: 690
score: 98.97682698567708
patch: typeable = child CaMeL Type . get CaMeL Type CaMeL
rank: 690
score: 98.62460327148438
patch: break ; default : {
rank: 690
score: 98.50122833251953
patch: break ; } else * break ;
rank: 690
score: 98.45145670572917
patch: break ; break ; / else break ;
rank: 690
score: 98.28645542689732
patch: break ; break ; break ; break ; } if ; break ;
rank: 690
score: 98.1961669921875
patch: true = true ;
rank: 691
score: 99.06891066028226
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( left CaMeL Type ) ;
rank: 691
score: 98.97310014204545
patch: if ( ! ! child CaMeL Type . matches CaMeL
rank: 691
score: 98.77908935546876
patch: break ; case Token . RETURN : break ;
rank: 691
score: 98.62429373604911
patch: ; right CaMeL Type = ;
rank: 691
score: 98.53380330403645
patch: break ; case Token ;
rank: 691
score: 98.501220703125
patch: } else if break ; break ; }
rank: 691
score: 98.45043267144098
patch: } break ; break ; int * /
rank: 691
score: 98.28528703962054
patch: break ; break ; break ; break ; return ; } return ;
rank: 691
score: 98.19202677408855
patch: case Token . REGEXP :
rank: 692
score: 99.06870814732143
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ; break ;
rank: 692
score: 98.97148895263672
patch: typeable = false ; break ;
rank: 692
score: 98.50073920355902
patch: break ; } else if ; break ;
rank: 692
score: 98.44915161132812
patch: break ; break ; / / * / /
rank: 692
score: 98.28526088169643
patch: break ; break ; break ; for ; ; ; ; break ;
rank: 692
score: 98.19187418619792
patch: case Token . GETPROP :
rank: 693
score: 99.06869014616936
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( child CaMeL Type ) ;
rank: 693
score: 98.99430338541667
patch: ensure CaMeL Typed ( left CaMeL Type , parent ) ;
rank: 693
score: 98.97083629261364
patch: child CaMeL Type = left CaMeL Type ; break ;
rank: 693
score: 98.77855767144098
patch: set CaMeL Type ( t . get CaMeL
rank: 693
score: 98.62202284071181
patch: break ; ; default : break ; }
rank: 693
score: 98.53311157226562
patch: break ; case Token . directory :
rank: 693
score: 98.50056457519531
patch: } else { } new break ;
rank: 693
score: 98.4485595703125
patch: } * * / break ; if break ;
rank: 693
score: 98.28484235491071
patch: break ; break ; break ; break ; } / / / /
rank: 693
score: 98.19110107421875
patch: if (
rank: 694
score: 99.0684814453125
patch: if ( ! Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 694
score: 98.99280894886364
patch: if ( ! ! Node CaMeL Util . is CaMeL
rank: 694
score: 98.77828640407986
patch: n . to CaMeL String ( ) ;
rank: 694
score: 98.62181091308594
patch: break ; case Token . TRY :
rank: 694
score: 98.53271484375
patch: break ; case Token . SWITCH :
rank: 694
score: 98.44800821940105
patch: } else } break ;
rank: 694
score: 98.2842508951823
patch: break ; break ; boolean
rank: 694
score: 98.19047037760417
patch: case Token . THIS :
rank: 695
score: 99.06840988685344
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . ensure CaMeL Typed ( t , n ) ;
rank: 695
score: 98.99223188920455
patch: validator = get CaMeL JS CaMeL Type ( ) ;
rank: 695
score: 98.95759582519531
patch: ensure CaMeL Typed ( n ) ;
rank: 695
score: 98.77562120225694
patch: break ; case Token . VOID : }
rank: 695
score: 98.62120225694444
patch: break ; case Token . LINE : ;
rank: 695
score: 98.52816009521484
patch: break ; case Token . LEFT :
rank: 695
score: 98.49927520751953
patch: return ; } else { return ;
rank: 695
score: 98.44748942057292
patch: while break ; break ; break ; ;
rank: 695
score: 98.28373209635417
patch: break ; -- break ;
rank: 695
score: 98.18202718098958
patch: case Token . INC :
rank: 696
score: 99.06768798828125
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL
rank: 696
score: 98.9903564453125
patch: child CaMeL Type = right CaMeL Type ; break ;
rank: 696
score: 98.9548095703125
patch: ensure CaMeL Typed ( t , true ) ;
rank: 696
score: 98.62020874023438
patch: right = visit CaMeL Name ; ;
rank: 696
score: 98.4986572265625
patch: } break ; } break ; break ;
rank: 696
score: 98.28349086216518
patch: break ; break ; if break ; if ; break ; break ;
rank: 696
score: 98.17550659179688
patch: throw typeable ;
rank: 697
score: 99.06692068917411
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ; break ;
rank: 697
score: 98.769775390625
patch: n . get CaMeL Value ( ) ;
rank: 697
score: 98.6167984008789
patch: right CaMeL Type = parent . ;
rank: 697
score: 98.52395629882812
patch: break ; default : log . ;
rank: 697
score: 98.49837239583333
patch: break ; } else { } break ;
rank: 697
score: 98.4467529296875
patch: break ; case / ? 0 : break ;
rank: 697
score: 98.28275844029018
patch: break ; break ; break ; if ; ++ break ; break ;
rank: 697
score: 98.17514038085938
patch: Scriptable left CaMeL Type ;
rank: 698
score: 99.06672014508929
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . right CaMeL Type = child CaMeL Type ;
rank: 698
score: 98.98817027698864
patch: validator . set CaMeL Name ( typeable ) ;
rank: 698
score: 98.95179443359375
patch: ensure CaMeL Typed ( t , $STRING$ ) ;
rank: 698
score: 98.76668294270833
patch: break ; case Token . COMMA : }
rank: 698
score: 98.61617606026786
patch: break ; } else { ;
rank: 698
score: 98.51945495605469
patch: break ; case Token . RESET :
rank: 698
score: 98.4980239868164
patch: break ; } break ; null ;
rank: 698
score: 98.44648573133681
patch: / * ] = break ; break ;
rank: 698
score: 98.28248814174107
patch: break ; break ; if ; break ; break ; return ; }
rank: 698
score: 98.17279052734375
patch: true ;
rank: 699
score: 99.06598307291667
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 699
score: 98.76655796595982
patch: if ( t . get CaMeL
rank: 699
score: 98.61571393694196
patch: break ; case Token ; ;
rank: 699
score: 98.51798248291016
patch: break ; case Token . declaration :
rank: 699
score: 98.49801635742188
patch: break ; * * * / }
rank: 699
score: 98.44622802734375
patch: break ; ; / * / / / /
rank: 699
score: 98.16749267578125
patch: found = true ;
rank: 700
score: 99.06580852640086
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; validator .
rank: 700
score: 98.98162841796875
patch: visit CaMeL Name ( n , left CaMeL Type ) ;
rank: 700
score: 98.94487970525569
patch: } if ( ! child CaMeL Type . matches CaMeL
rank: 700
score: 98.76566569010417
patch: right CaMeL Type = get CaMeL First CaMeL
rank: 700
score: 98.49742126464844
patch: return break ; } break ; ;
rank: 700
score: 98.44619411892361
patch: break ; * * / break ; /
rank: 700
score: 98.28219168526786
patch: break ; break ; break ; break ; break ; -- break ;
rank: 700
score: 98.1471455891927
patch: case Token . FALSE :
rank: 701
score: 99.06544712611607
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; ;
rank: 701
score: 98.98140092329545
patch: right CaMeL Type = Node CaMeL Util . get CaMeL
rank: 701
score: 98.94365234375
patch: return child CaMeL Type = child CaMeL Type ;
rank: 701
score: 98.76136610243056
patch: break ; case Token . TRUE : }
rank: 701
score: 98.6122817993164
patch: right CaMeL Type = super . ;
rank: 701
score: 98.5158462524414
patch: break ; case Token . BREAK :
rank: 701
score: 98.4973373413086
patch: } else { continue ; } }
rank: 701
score: 98.44589233398438
patch: finally ; break ; ;
rank: 701
score: 98.28077915736607
patch: break ; break ; if ; break ; break ; if break ;
rank: 701
score: 98.14286295572917
patch: int right CaMeL Type ;
rank: 702
score: 99.06497628348214
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 702
score: 98.9790283203125
patch: typeable = Node CaMeL Util . is CaMeL
rank: 702
score: 98.94321511008523
patch: right = t . get CaMeL Type ( ) ;
rank: 702
score: 98.76076931423611
patch: break ; case Token . NEW : }
rank: 702
score: 98.51366424560547
patch: break ; case Token . name :
rank: 702
score: 98.44562377929688
patch: break ; break ; case String . break *
rank: 702
score: 98.2806396484375
patch: break ; break ; break ; break ; break ; else return ;
rank: 702
score: 98.13887532552083
patch: byte left CaMeL Type ;
rank: 703
score: 99.06440952845982
patch: validator . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) .
rank: 703
score: 98.97695922851562
patch: right CaMeL Type = validator . typeable ;
rank: 703
score: 98.75809733072917
patch: right CaMeL Type = get CaMeL JS CaMeL
rank: 703
score: 98.51241302490234
patch: if ( ; right CaMeL Type ;
rank: 703
score: 98.49560546875
patch: break ; } } else { break ;
rank: 703
score: 98.44553833007812
patch: break ; * ?
rank: 703
score: 98.28009033203125
patch: break ; break ; break ; break ; / / = break ;
rank: 703
score: 98.13807373046875
patch: false ; break ;
rank: 704
score: 99.06422642299107
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ; break ;
rank: 704
score: 98.60577392578125
patch: left CaMeL Type = ; break ;
rank: 704
score: 98.51132202148438
patch: break ; case Token . exit :
rank: 704
score: 98.49489339192708
patch: } else { else = break ; }
rank: 704
score: 98.27957589285714
patch: break ; break ; break ; break ; if ; / / /
rank: 704
score: 98.13596598307292
patch: case Token . SET :
rank: 705
score: 99.06361607142857
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ; break ;
rank: 705
score: 98.97516424005681
patch: ensure CaMeL Typed ( t , typeable ) ;
rank: 705
score: 98.93830108642578
patch: ensure CaMeL Typed ( false ) ;
rank: 705
score: 98.75136990017361
patch: } else if ( n . get CaMeL
rank: 705
score: 98.5034408569336
patch: ; break ; case Token . ;
rank: 705
score: 98.49482557508681
patch: } else if break ; else break ;
rank: 705
score: 98.44413452148437
patch: break ; break ; case Boolean . parse ;
rank: 705
score: 98.27916608537946
patch: break ; break ; break ; return ; break ; break ; }
rank: 705
score: 98.13136596679688
patch: false = false ;
rank: 706
score: 99.06349339978448
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; } else
rank: 706
score: 98.97416178385417
patch: ensure CaMeL Typed ( parent , left CaMeL Type ) ;
rank: 706
score: 98.93809814453125
patch: break left CaMeL Type = child CaMeL Type ;
rank: 706
score: 98.74814181857639
patch: break ; case Token . VOID : .
rank: 706
score: 98.60162353515625
patch: right CaMeL Type = ; return ;
rank: 706
score: 98.50322614397321
patch: break ; case ; * /
rank: 706
score: 98.49458143446181
patch: return break ; } break ; null }
rank: 706
score: 98.44312879774306
patch: break ; / else { for break ;
rank: 706
score: 98.27913992745536
patch: break ; break ; break ; break ; break ; / / }
rank: 706
score: 98.10961151123047
patch: return true ;
rank: 707
score: 99.06302315848214
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ) ; break ;
rank: 707
score: 98.96846147017045
patch: typeable = ! Node CaMeL Util . get CaMeL
rank: 707
score: 98.93198852539062
patch: ensure CaMeL Typed ( n , false ) ;
rank: 707
score: 98.60099792480469
patch: if ; right CaMeL Type = ;
rank: 707
score: 98.49331665039062
patch: return ; false ; break ; }
rank: 707
score: 98.44306640625
patch: break ; break ; ; / * / /
rank: 707
score: 98.2784423828125
patch: break ; break ; break ; break ; / / / / }
rank: 707
score: 98.10764567057292
patch: case Token . ) :
rank: 708
score: 99.06254359654018
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; {
rank: 708
score: 98.74700927734375
patch: } break ; case Token . RETURN :
rank: 708
score: 98.59979248046875
patch: right = ; ;
rank: 708
score: 98.49397495814732
patch: break ; case ; case ;
rank: 708
score: 98.49295043945312
patch: break ; break ; } finally ;
rank: 708
score: 98.44258626302083
patch: break ; break ; } * * /
rank: 708
score: 98.27753557477679
patch: break ; break ; break ; if / = break ; break ;
rank: 708
score: 98.10723266601562
patch: added = true ;
rank: 709
score: 99.06243896484375
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child 1 ( ) ) ) ;
rank: 709
score: 98.96826171875
patch: validator = get CaMeL JS CaMeL Type ( n ) ;
rank: 709
score: 98.59963553292411
patch: break ; default : ; }
rank: 709
score: 98.49264526367188
patch: break ; default : break true ;
rank: 709
score: 98.4923095703125
patch: } else throw null ;
rank: 709
score: 98.44240315755208
patch: else break ; * /
rank: 709
score: 98.27737862723214
patch: break ; break ; if ; break ; return ; } break ;
rank: 709
score: 98.10225830078124
patch: result = break ;
rank: 710
score: 99.06241280691964
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Name ( ) ) ; break ;
rank: 710
score: 98.96497802734375
patch: typeable = ! ( parent . get CaMeL
rank: 710
score: 98.92933959960938
patch: ensure CaMeL Typed ( t ) ; break ;
rank: 710
score: 98.74568006727431
patch: break ; case Token . CALL : {
rank: 710
score: 98.49198913574219
patch: break ; case Token . flow :
rank: 710
score: 98.49158477783203
patch: * * * break ; break ;
rank: 710
score: 98.44229736328126
patch: break ; break ; out . append null false
rank: 710
score: 98.27728271484375
patch: break ; break ; else break ; break ; break ; break ;
rank: 710
score: 98.10191853841145
patch: Scriptable get CaMeL Type ;
rank: 711
score: 99.06235688308189
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 711
score: 98.96429443359375
patch: visit CaMeL Name ( t , left CaMeL Type ) ;
rank: 711
score: 98.92476806640624
patch: validator . typeable = child CaMeL Type ;
rank: 711
score: 98.74374389648438
patch: validator . right ( t ) ;
rank: 711
score: 98.594970703125
patch: break ; case Token . LINE :
rank: 711
score: 98.49150933159723
patch: break ; case break ; break ; }
rank: 711
score: 98.4904556274414
patch: break ; case Token . value :
rank: 711
score: 98.44221327039931
patch: break ; / / / * / /
rank: 711
score: 98.27261788504464
patch: break ; break ; } if break ; break ; break ; }
rank: 711
score: 98.10096232096355
patch: if ( validator ) {
rank: 712
score: 98.73778618706598
patch: break ; case Token . POS : }
rank: 712
score: 98.49123128255208
patch: } else = false ; else return ;
rank: 712
score: 98.44200303819444
patch: break ; break ; * / / ;
rank: 712
score: 98.27253069196429
patch: break ; break ; break ; if break ; } break ; }
rank: 712
score: 98.09681193033855
patch: return validator . false ;
rank: 713
score: 99.06223842075893
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) . report CaMeL
rank: 713
score: 98.96277965198864
patch: ensure CaMeL Typed ( ) ; validator . expect CaMeL
rank: 713
score: 98.91531372070312
patch: child CaMeL Type = child CaMeL Type ; }
rank: 713
score: 98.49120415581598
patch: } else { break ; break ; else
rank: 713
score: 98.48805236816406
patch: break ; case Token . CATCH :
rank: 713
score: 98.440966796875
patch: break ; break ; case int : break ;
rank: 713
score: 98.27230398995536
patch: break ; break ; if ; break ; break ; ; break ;
rank: 713
score: 98.09651692708333
patch: } else { t .
rank: 714
score: 99.06209891183036
patch: if ( child CaMeL Type . matches CaMeL Int 32 ( left CaMeL Type . get CaMeL Type CaMeL Of CaMeL This ( ) ) ) {
rank: 714
score: 98.9599365234375
patch: Child left CaMeL Type , right CaMeL Type ;
rank: 714
score: 98.91366577148438
patch: ensure CaMeL Typed ( name ) ;
rank: 714
score: 98.59050750732422
patch: break ; default ; break ; }
rank: 714
score: 98.4910888671875
patch: break ; true ; } catch break ;
rank: 714
score: 98.48793029785156
patch: break ; case Token . PREFIX ;
rank: 714
score: 98.43990071614583
patch: break ; finally ; ;
rank: 714
score: 98.27163260323661
patch: break ; break ; break ; break ; break ; break ; /
rank: 714
score: 98.094970703125
patch: res = typeable ;
rank: 715
score: 99.06143925107759
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , n ) ) ;
rank: 715
score: 98.49057006835938
patch: } else if ; break ; }
rank: 715
score: 98.4859619140625
patch: right = child CaMeL Type ;
rank: 715
score: 98.4396484375
patch: i . out . println break false ; *
rank: 715
score: 98.27144077845982
patch: break ; break ; break ; if ; break ; ; break ;
rank: 715
score: 98.0885009765625
patch: } else { parent .
rank: 716
score: 99.06094796316964
patch: validator . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL Of CaMeL This ( ) .
rank: 716
score: 98.95625813802083
patch: typeable = ! ( child CaMeL Type . is CaMeL
rank: 716
score: 98.73297797309027
patch: break ; case Token . RETURN : .
rank: 716
score: 98.58721923828125
patch: left ; right CaMeL Type = ;
rank: 716
score: 98.48989868164062
patch: } else { } if ; }
rank: 716
score: 98.48284149169922
patch: break ; case Token . replacement :
rank: 716
score: 98.4393819173177
patch: } * * ; /
rank: 716
score: 98.27119663783482
patch: break ; break ; break ; break ; return ; if break ;
rank: 716
score: 98.07589721679688
patch: return right CaMeL Type ;
rank: 717
score: 99.06081717354911
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; }
rank: 717
score: 98.955859375
patch: right CaMeL Type = right CaMeL Type ; }
rank: 717
score: 98.91101684570313
patch: return n . get CaMeL Name ( ) ;
rank: 717
score: 98.72989230685764
patch: break ; case Token . RETURN : {
rank: 717
score: 98.48986138237848
patch: } else { return ; } else {
rank: 717
score: 98.48218790690105
patch: sb . append ( ;
rank: 717
score: 98.27108328683036
patch: break ; break ; if break ; break ; break ; if ;
rank: 717
score: 98.07181803385417
patch: expression = typeable ;
rank: 718
score: 99.06010219029018
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 718
score: 98.7298812866211
patch: break ; case Type . LP :
rank: 718
score: 98.58251190185547
patch: break ; ; default : break ;
rank: 718
score: 98.48983001708984
patch: break ; - 1 ; break ;
rank: 718
score: 98.48158264160156
patch: break ; case Token . version :
rank: 718
score: 98.43936496310764
patch: break ; * ; * / break ;
rank: 718
score: 98.27072579520089
patch: break ; break ; break ; break ; break ; break ; else
rank: 718
score: 98.06781005859375
patch: break ; finally {
rank: 719
score: 99.06001499720982
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( t . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 719
score: 98.95169503348214
patch: typeable = typeable ;
rank: 719
score: 98.908203125
patch: ensure CaMeL Typed ( parent , n ) ;
rank: 719
score: 98.72945149739583
patch: } break ; case Token . DEC :
rank: 719
score: 98.4810562133789
patch: break ; case Token . INDENT :
rank: 719
score: 98.43839111328126
patch: break ; break ; * * / break ;
rank: 719
score: 98.27065604073661
patch: break ; break ; break ; break ; break ; ; return ;
rank: 719
score: 98.0670166015625
patch: false = true ;
rank: 720
score: 99.05959647042411
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ,
rank: 720
score: 98.5789566040039
patch: break ; case Token . PARAMETER :
rank: 720
score: 98.48925103081598
patch: } else { } break ; null ;
rank: 720
score: 98.27025495256696
patch: break ; break ; if break ; / / / / / /
rank: 720
score: 98.05435180664062
patch: return ? ;
rank: 721
score: 99.05912562779018
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) .
rank: 721
score: 98.72903103298611
patch: break ; ; case Token . LP :
rank: 721
score: 98.4792989095052
patch: if ( ; break ;
rank: 721
score: 98.4371826171875
patch: i . next ( ; break ; break ;
rank: 721
score: 98.2694091796875
patch: break ; break ; break ; break ; } return ; return ;
rank: 721
score: 98.05277506510417
patch: AST left CaMeL Type ;
rank: 722
score: 99.0578192349138
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , n ) ;
rank: 722
score: 98.72850799560547
patch: break ; case Node . LP :
rank: 722
score: 98.5710957845052
patch: if ( ; * /
rank: 722
score: 98.4889144897461
patch: return break ; else ; return ;
rank: 722
score: 98.4638671875
patch: break ; default : * /
rank: 722
score: 98.43698459201389
patch: } * * / if break break ;
rank: 722
score: 98.26825823102679
patch: break ; break ; break ; break ; / / } break ;
rank: 722
score: 98.04332275390625
patch: answer = false ;
rank: 723
score: 99.05750528971355
patch: validator . add CaMeL Type ( child CaMeL Type ) ;
rank: 723
score: 98.57003784179688
patch: break ; case Token . NONE ;
rank: 723
score: 98.46098981584821
patch: if ( locale != null )
rank: 723
score: 98.43678792317708
patch: break ; case ? false : break ;
rank: 723
score: 98.26824079241071
patch: break ; break ; break ; break ; else return ; break ;
rank: 723
score: 98.02451782226562
patch: System . . :
rank: 724
score: 99.05597478693181
patch: if ( n . get CaMeL Type ( ) !=
rank: 724
score: 98.940185546875
patch: left CaMeL Type = validator . get CaMeL
rank: 724
score: 98.89612426757813
patch: ensure CaMeL Typed ( node , n ) ;
rank: 724
score: 98.72203063964844
patch: get CaMeL Type ( n ) ;
rank: 724
score: 98.56951904296875
patch: right = ; * /
rank: 724
score: 98.45976911272321
patch: left = break ; case ;
rank: 724
score: 98.43677775065105
patch: break ; ; 1 {
rank: 724
score: 98.26776123046875
patch: break ; break ; if break ; break ; / / / /
rank: 724
score: 98.02122802734375
patch: result ; break ;
rank: 725
score: 99.05582401670259
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , null ) ;
rank: 725
score: 98.93753051757812
patch: typeable = ! ( n . get CaMeL
rank: 725
score: 98.56819152832031
patch: height = visit CaMeL Name ( ;
rank: 725
score: 98.48693084716797
patch: } else { throw break ; }
rank: 725
score: 98.4578857421875
patch: sb . append ( $STRING$ ;
rank: 725
score: 98.436767578125
patch: } break ; break ; case String ;
rank: 725
score: 98.26634870256696
patch: break ; break ; break ; } if ; break ; break ;
rank: 726
score: 99.05578192349138
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( type ) ;
rank: 726
score: 98.93503146701389
patch: set CaMeL Name ( typeable ) ;
rank: 726
score: 98.89202270507812
patch: ensure CaMeL Typed ( n , true ) ;
rank: 726
score: 98.71684919084821
patch: } typeable = true ;
rank: 726
score: 98.48674180772569
patch: break ; else = break ; } }
rank: 726
score: 98.45489501953125
patch: right = break ; case ;
rank: 726
score: 98.43657090928819
patch: break ; case ? ) ; break ;
rank: 726
score: 98.26583426339286
patch: break ; if ; break ; break ; break ; break ; }
rank: 727
score: 99.05568440755208
patch: if ( ! child CaMeL Type . matches CaMeL Int 32
rank: 727
score: 98.88967895507812
patch: right = get CaMeL Type ( n ) ;
rank: 727
score: 98.71672712053571
patch: right CaMeL Type = $STRING$ ;
rank: 727
score: 98.486328125
patch: if break ; this . break ;
rank: 727
score: 98.45011393229167
patch: default : break ; }
rank: 727
score: 98.4359375
patch: break ; break ; case break ; break ;
rank: 727
score: 98.26565987723214
patch: break ; break ; else if break ; break ; break ; }
rank: 727
score: 97.99503173828126
patch: answer = true ;
rank: 728
score: 99.05517578125
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Last CaMeL Child ( ) ) ) ; break ;
rank: 728
score: 98.92648654513889
patch: this . typeable = typeable ;
rank: 728
score: 98.88962809244792
patch: ensure CaMeL Typed ( ) ; break ;
rank: 728
score: 98.71444702148438
patch: break ; case Type . DEC :
rank: 728
score: 98.56233978271484
patch: ; ; right CaMeL Type = ;
rank: 728
score: 98.486328125
patch: break ; true ; break ; break ;
rank: 728
score: 98.43829345703125
patch: break ; case ; break ;
rank: 728
score: 98.43583170572917
patch: break ; break ; ; String * /
rank: 728
score: 98.26548549107143
patch: break ; break ; break ; if ; break ; return ; }
rank: 728
score: 97.99310302734375
patch: changed = false ;
rank: 729
score: 99.05257442079741
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , null ) ) ;
rank: 729
score: 98.48613739013672
patch: break ; this . break ; else
rank: 729
score: 98.43490939670139
patch: } * * / break { break ;
rank: 729
score: 98.4347635904948
patch: left CaMeL Type = ;
rank: 729
score: 98.26539829799107
patch: break ; break ; break ; / / / / } break ;
rank: 729
score: 97.98052368164062
patch: expression = false ;
rank: 730
score: 99.0521484375
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) . report CaMeL
rank: 730
score: 98.9210205078125
patch: this . typeable = child CaMeL Type ;
rank: 730
score: 98.70191192626953
patch: break ; case Token . NE :
rank: 730
score: 98.48537868923611
patch: } else = false ; if break ;
rank: 730
score: 98.43448486328126
patch: break ; break ; case Node . ; ?
rank: 730
score: 98.42874145507812
patch: right = ; break ;
rank: 730
score: 98.26455252511161
patch: break ; break ; break ; break ; -- break ; break ;
rank: 730
score: 97.96890258789062
patch: throw t ;
rank: 731
score: 98.87943267822266
patch: ensure CaMeL Typed ( true ) ;
rank: 731
score: 98.70174407958984
patch: do { typeable = true ;
rank: 731
score: 98.55884660993304
patch: right CaMeL Type = visit ;
rank: 731
score: 98.4852066040039
patch: } else ; } return break ;
rank: 731
score: 98.43403930664063
patch: else = null ;
rank: 731
score: 98.42560686383929
patch: break false ; case break :
rank: 731
score: 98.26290457589286
patch: break ; break ; break ; if break ; break ; / /
rank: 731
score: 97.9620361328125
patch: return ? break ;
rank: 732
score: 99.05207772090517
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( value ) ;
rank: 732
score: 98.878662109375
patch: ensure CaMeL Typed ( t , left CaMeL
rank: 732
score: 98.48518880208333
patch: return break ; } break ; return ;
rank: 732
score: 98.43368530273438
patch: break ; break ; case Boolean . next ?
rank: 732
score: 98.42227608816964
patch: left = right CaMeL Type ;
rank: 732
score: 98.26273018973214
patch: break ; break ; break ; / / / / / / /
rank: 732
score: 97.9586410522461
patch: throw null ;
rank: 733
score: 99.05146641885081
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 733
score: 98.878515625
patch: ensure CaMeL Typed ( t , t ) ;
rank: 733
score: 98.55325317382812
patch: break ; case Token . Branch :
rank: 733
score: 98.48504638671875
patch: } else { try = break ;
rank: 733
score: 98.433544921875
patch: break ; break ; * * * ; /
rank: 733
score: 98.41887555803571
patch: break ; case Type . ;
rank: 733
score: 98.26258341471355
patch: break ; break ; --
rank: 734
score: 98.91566772460938
patch: child CaMeL Type = typeable ; break ;
rank: 734
score: 98.87835693359375
patch: ensure CaMeL Typed ( type ) ; break ;
rank: 734
score: 98.48497772216797
patch: } else = true ; return ;
rank: 734
score: 98.43340386284723
patch: break ; / / / / ; /
rank: 734
score: 98.40669250488281
patch: if ( ;
rank: 734
score: 98.26191929408482
patch: break ; break ; break ; if ; / / = break ;
rank: 734
score: 97.94173583984374
patch: for ( ) {
rank: 735
score: 99.05052869073276
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , false ) ;
rank: 735
score: 98.91471557617187
patch: right CaMeL Type = left CaMeL Type ; }
rank: 735
score: 98.87806532118056
patch: sb . to CaMeL String ( ) ;
rank: 735
score: 98.39138793945312
patch: } else if ( ;
rank: 735
score: 98.26006208147321
patch: break ; break ; if ; break ; break ; else return ;
rank: 735
score: 97.93614501953125
patch: expr = false ;
rank: 736
score: 98.43292914496527
patch: break ; / / else { break ;
rank: 736
score: 98.38890584309895
patch: break ; case ; ;
rank: 736
score: 98.25935581752232
patch: break ; break ; if ; break ; / / = break ;
rank: 736
score: 97.93382568359375
patch: changed = true ;
rank: 737
score: 99.0488037109375
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) .
rank: 737
score: 98.90974731445313
patch: break ; case Token . LP : / /
rank: 737
score: 98.48418511284723
patch: } else { } if ; break ;
rank: 737
score: 98.43189086914063
patch: break ; break ; ; else { break ;
rank: 737
score: 98.38328334263393
patch: break ; == Token . ;
rank: 737
score: 98.2589111328125
patch: break ; if ; break ; break ; break ; } break ;
rank: 737
score: 97.92647552490234
patch: throw false ;
rank: 738
score: 99.04814295614919
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 738
score: 98.90862426757812
patch: validator . right CaMeL Type = typeable ;
rank: 738
score: 98.54533168247768
patch: break ; > - 1 ;
rank: 738
score: 98.48418511284723
patch: } else ; else { break ; }
rank: 738
score: 98.43143717447917
patch: break ; 0 ; ;
rank: 738
score: 98.37308175223214
patch: break ; break ; default :
rank: 738
score: 98.25856236049107
patch: break ; break ; break ; if ; break ; } return ;
rank: 738
score: 97.926123046875
patch: proc = false ;
rank: 739
score: 99.04783472521552
patch: child CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 739
score: 98.90433959960937
patch: Type left CaMeL Type , right CaMeL Type ;
rank: 739
score: 98.86505126953125
patch: ensure CaMeL Typed ( t , null ) ;
rank: 739
score: 98.54509735107422
patch: right CaMeL Type = ; * /
rank: 739
score: 98.48357476128473
patch: break break ; } else ; break ;
rank: 739
score: 98.4306640625
patch: break ; ; / * break ; ;
rank: 739
score: 98.36962018694196
patch: break ; default : error ;
rank: 739
score: 98.25775146484375
patch: break ; break ; break ; break ; break ; return ; ;
rank: 739
score: 97.9226318359375
patch: continue ; finally {
rank: 740
score: 99.0447198275862
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 740
score: 98.90269165039062
patch: right CaMeL Type = typeable = false ;
rank: 740
score: 98.86250813802083
patch: right = child CaMeL Type ; break ;
rank: 740
score: 98.6764907836914
patch: break ; case Token . LP ;
rank: 740
score: 98.48333062065973
patch: break ; } } break ; break ;
rank: 740
score: 98.42953830295139
patch: break ; / * * / break ;
rank: 740
score: 98.36433628627232
patch: break ; } if ( ;
rank: 740
score: 98.25760323660714
patch: break ; break ; break ; if ; break ; break ; else
rank: 740
score: 97.92186279296875
patch: removed = false ;
rank: 741
score: 99.04420629040948
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type . get CaMeL First CaMeL Child ( ) ) ; }
rank: 741
score: 98.85539245605469
patch: typeable = left CaMeL Type ;
rank: 741
score: 98.67501068115234
patch: validator . close ( t ) ;
rank: 741
score: 98.54449462890625
patch: right = ; left = ;
rank: 741
score: 98.48206244574652
patch: if break ; } else if break ;
rank: 741
score: 98.42947387695312
patch: break ; break ; case 1 ; break ;
rank: 741
score: 98.36411830357143
patch: return ; case Token . ;
rank: 741
score: 98.25675746372768
patch: break ; break ; break ; } return ; break ; break ;
rank: 741
score: 97.91956787109375
patch: expression = true ;
rank: 742
score: 99.04386954471983
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( Token . LP ) ;
rank: 742
score: 98.89992268880208
patch: validator . ensure CaMeL Typed ( ) ;
rank: 742
score: 98.67276763916016
patch: n . typeable = false ;
rank: 742
score: 98.48196072048611
patch: if break ; } catch ; break ;
rank: 742
score: 98.42942979600694
patch: break ; break ; case Boolean . ;
rank: 742
score: 98.35537283761161
patch: break ; default : log ;
rank: 742
score: 98.25562395368304
patch: break ; break ; if ; return ; break ; } break ;
rank: 742
score: 97.919091796875
patch: consume ( ) ;
rank: 743
score: 99.04322972790948
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( right CaMeL Type ) ;
rank: 743
score: 98.85225219726563
patch: set CaMeL JS CaMeL Type ( n ) ;
rank: 743
score: 98.48110961914062
patch: break ; } else ? break ;
rank: 743
score: 98.4288330078125
patch: break ; / * / / / /
rank: 743
score: 98.24796549479167
patch: break ; break ; n
rank: 743
score: 97.91845092773437
patch: res = false ;
rank: 744
score: 99.04208669354838
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ; }
rank: 744
score: 98.89302571614583
patch: right CaMeL Type = validator . is CaMeL
rank: 744
score: 98.48106892903645
patch: else = break ; }
rank: 744
score: 98.42862548828126
patch: break ; break ; System . out . print
rank: 744
score: 98.23310546875
patch: if ; break ;
rank: 744
score: 97.90177001953126
patch: if ( ensure CaMeL
rank: 745
score: 99.04172770182292
patch: validator . set CaMeL JS CaMeL Type ( type ) ;
rank: 745
score: 98.848681640625
patch: validator . typeable = right CaMeL Type ;
rank: 745
score: 98.67105102539062
patch: break ; case Type . NAME :
rank: 745
score: 98.54110281808036
patch: ; break ; default : ;
rank: 745
score: 98.480712890625
patch: break ; } finally { return ; }
rank: 745
score: 98.42859564887152
patch: break ; * ; / * break ;
rank: 745
score: 98.32353973388672
patch: break false ;
rank: 745
score: 98.23220825195312
patch: break ; break ; _
rank: 745
score: 97.90162353515625
patch: children = false ;
rank: 746
score: 99.04137789818549
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , $STRING$ ) ;
rank: 746
score: 98.53953552246094
patch: break ; default : { ; }
rank: 746
score: 98.4805908203125
patch: break ; * * * * break ;
rank: 746
score: 98.42857530381944
patch: break ; break ; * * break /
rank: 746
score: 98.3149922688802
patch: right = break ; ;
rank: 746
score: 98.21995035807292
patch: break ; break ; check
rank: 746
score: 97.89796142578125
patch: if ( validator )
rank: 747
score: 99.041259765625
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ; break ;
rank: 747
score: 98.67050170898438
patch: break ; case Type . CALL :
rank: 747
score: 98.48052978515625
patch: break ; null } else return ;
rank: 747
score: 98.4282958984375
patch: break ; break ; try { break ; }
rank: 747
score: 98.31411743164062
patch: left = break ; ;
rank: 747
score: 98.21600341796875
patch: break ; break ; parent
rank: 747
score: 97.88148193359375
patch: loop ; break ;
rank: 748
score: 99.04081086189517
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , $STRING$ ) ;
rank: 748
score: 98.84168701171875
patch: break ; case Token . FUNCTION : break ;
rank: 748
score: 98.47996520996094
patch: return break ; } for break ;
rank: 748
score: 98.42796495225694
patch: break ; break ; out ; break ;
rank: 748
score: 98.21389770507812
patch: break ; / / /
rank: 748
score: 97.88096618652344
patch: if ( !
rank: 749
score: 99.040478515625
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ; }
rank: 749
score: 98.8721435546875
patch: report ( t , left CaMeL Type ) ;
rank: 749
score: 98.6700668334961
patch: if ( parent != null ) {
rank: 749
score: 98.47942437065973
patch: } else { return ; } else ;
rank: 749
score: 98.2872314453125
patch: break ; case ; }
rank: 749
score: 98.20386759440105
patch: break ; break ; count
rank: 749
score: 97.87918701171876
patch: children = break ;
rank: 750
score: 99.04036738954741
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) , true ) ;
rank: 750
score: 98.86988067626953
patch: Node left CaMeL Type , right ;
rank: 750
score: 98.84047241210938
patch: validator . visit ( t , n ) ;
rank: 750
score: 98.47884368896484
patch: break ; } finally ; break ;
rank: 750
score: 98.42754516601562
patch: break ; break ; case 1 { break ;
rank: 750
score: 98.28480021158855
patch: break false ; case ;
rank: 750
score: 98.19461059570312
patch: break ; if ; ;
rank: 750
score: 97.8763671875
patch: ret = false ;
rank: 751
score: 99.04035055226294
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL
rank: 751
score: 98.83803100585938
patch: ensure CaMeL Typed ( n , null ) ;
rank: 751
score: 98.53359985351562
patch: return ; default : ;
rank: 751
score: 98.47882758246527
patch: break ; break ; } } catch ;
rank: 751
score: 98.42650010850694
patch: break ; / case ] ; break ;
rank: 751
score: 98.25821940104167
patch: left = ; break ;
rank: 751
score: 97.856005859375
patch: return ; finally {
rank: 752
score: 99.04012324892241
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( name ) ;
rank: 752
score: 98.86953125
patch: left CaMeL Type = typeable ; break ;
rank: 752
score: 98.6617660522461
patch: break ; case Type . TYPEOF :
rank: 752
score: 98.52984619140625
patch: break ; case Token . $STRING$ :
rank: 752
score: 98.478759765625
patch: } else break ; break ; break ;
rank: 752
score: 98.42646484375
patch: break ; break ; * / if null ;
rank: 752
score: 98.24021402994792
patch: style = break ; ;
rank: 752
score: 98.19091796875
patch: break ; break ; {
rank: 752
score: 97.85576782226562
patch: expr = true ;
rank: 753
score: 99.03987910829741
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; true ;
rank: 753
score: 98.83589680989583
patch: right = left CaMeL Type ; break ;
rank: 753
score: 98.66074916294643
patch: if ( parent != null )
rank: 753
score: 98.52969796316964
patch: break ; default : visit ;
rank: 753
score: 98.47859191894531
patch: return break ; else } break ;
rank: 753
score: 98.42605929904514
patch: break ; * ; / / * /
rank: 753
score: 98.2370096842448
patch: left ; right = ;
rank: 753
score: 98.18246459960938
patch: break ; break ; type
rank: 753
score: 97.84615478515624
patch: null ; break ;
rank: 754
score: 99.03986002604167
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL JS CaMeL Type ( ) . visit CaMeL
rank: 754
score: 98.65838623046875
patch: ensure CaMeL Typed ( node ) ;
rank: 754
score: 98.52824096679687
patch: right = visit ;
rank: 754
score: 98.23203531901042
patch: switch ( ; case ;
rank: 754
score: 98.17868041992188
patch: if ; * / /
rank: 754
score: 97.84028625488281
patch: return t ;
rank: 755
score: 99.03976124730603
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , false ) ) ;
rank: 755
score: 98.65743255615234
patch: if ( ! n . get CaMeL
rank: 755
score: 98.52772739955357
patch: right CaMeL Type = parent ;
rank: 755
score: 98.47825622558594
patch: return break ; if ; break ;
rank: 755
score: 98.42594401041667
patch: break ; / 1 {
rank: 755
score: 98.17636108398438
patch: break ; break ; max
rank: 755
score: 97.83938598632812
patch: res = true ;
rank: 756
score: 99.03889412715517
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; * /
rank: 756
score: 98.81254069010417
patch: ensure CaMeL Typed ( n , left CaMeL
rank: 756
score: 98.52739715576172
patch: break ; default break ; } ;
rank: 756
score: 98.47820281982422
patch: } else { if ( break ;
rank: 756
score: 98.42554321289063
patch: break ; break ; ; / * / ;
rank: 756
score: 98.16682942708333
patch: if ; ! break ;
rank: 756
score: 97.83692016601563
patch: true = break ;
rank: 757
score: 99.03884361530173
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ; break ;
rank: 757
score: 98.52623748779297
patch: right CaMeL Type = this . ;
rank: 757
score: 98.47804260253906
patch: return break ; break ; return ;
rank: 757
score: 98.42510986328125
patch: break ; break ; ; / break ;
rank: 757
score: 98.20180257161458
patch: child CaMeL Type = ;
rank: 757
score: 98.16513061523438
patch: break ; break ; ++
rank: 757
score: 97.83455810546874
patch: n . ensure CaMeL
rank: 758
score: 99.03831324084052
patch: right CaMeL Type = left CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) . get CaMeL
rank: 758
score: 98.80433654785156
patch: typeable = true ; break ;
rank: 758
score: 98.47755940755208
patch: return break ; } } else break ;
rank: 758
score: 98.424951171875
patch: break ; break ; case Boolean . value CaMeL
rank: 758
score: 98.16285400390625
patch: break ; else ;
rank: 758
score: 97.8343017578125
patch: return || break ;
rank: 759
score: 99.03780241935483
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , left CaMeL Type ) ) ;
rank: 759
score: 98.84681919642857
patch: right CaMeL Type = break ;
rank: 759
score: 98.80296495225694
patch: return n ; case Token . LP :
rank: 759
score: 98.5228042602539
patch: break ; case Token . STATEMENT :
rank: 759
score: 98.42437744140625
patch: break ; break ; next { break ;
rank: 759
score: 97.83426513671876
patch: retval = false ;
rank: 760
score: 99.03768184267241
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( null ) ;
rank: 760
score: 98.80206298828125
patch: right CaMeL Type = get CaMeL Value CaMeL
rank: 760
score: 98.65168762207031
patch: break ; case Type . EQ :
rank: 760
score: 98.42428588867188
patch: break ; ; / / / : / {
rank: 760
score: 98.1770528157552
patch: break ; equals ( ;
rank: 760
score: 98.14735921223958
patch: break ; break ; finally
rank: 760
score: 97.83379516601562
patch: removed = true ;
rank: 761
score: 99.03737571022727
patch: if ( parent . get CaMeL Type ( ) ==
rank: 761
score: 98.84141845703125
patch: validator . expect CaMeL
rank: 761
score: 98.64973667689732
patch: typeable = false ; }
rank: 761
score: 98.47636413574219
patch: break ; } break ; false ;
rank: 761
score: 98.42322455512152
patch: else { break ; ; if break ;
rank: 761
score: 98.16975911458333
patch: break ; if ( ;
rank: 761
score: 98.1383056640625
patch: return ; ; break ;
rank: 761
score: 97.82112426757813
patch: ret = true ;
rank: 762
score: 99.03698336693549
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) ) ; }
rank: 762
score: 98.5167236328125
patch: if ( ; * / ;
rank: 762
score: 98.47598266601562
patch: break ; null ; } break ;
rank: 762
score: 98.42308959960937
patch: break ; break ; case Integer ; break ;
rank: 762
score: 98.16575113932292
patch: buffer . append ( ;
rank: 762
score: 98.13812255859375
patch: break ; break ; name
rank: 762
score: 97.81748657226562
patch: result = null ;
rank: 763
score: 99.03675944010416
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ) ; }
rank: 763
score: 98.83722601996527
patch: child CaMeL Type = validator . get CaMeL
rank: 763
score: 98.51543317522321
patch: break ; default ; return ;
rank: 763
score: 98.475830078125
patch: break break ; }
rank: 763
score: 98.42282443576389
patch: i . next ( ; break ; /
rank: 763
score: 98.16356404622395
patch: break ; max = ;
rank: 763
score: 98.13643391927083
patch: break ; return ; else
rank: 763
score: 97.80989990234374
patch: children = true ;
rank: 764
score: 99.03636067708334
patch: get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 764
score: 98.63969421386719
patch: break ; case Node . FUNCTION :
rank: 764
score: 98.50462995256696
patch: break ; default ; throw ;
rank: 764
score: 98.47580295138889
patch: break ; * * / } break ;
rank: 764
score: 98.42278374565973
patch: break ; / - / / / /
rank: 764
score: 98.16062418619792
patch: cache . put ( ;
rank: 764
score: 97.80872802734375
patch: children ; break ;
rank: 765
score: 99.03478190104167
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( typeable ) ;
rank: 765
score: 98.83207194010417
patch: ensure CaMeL Typed ( t , get CaMeL
rank: 765
score: 98.50382777622768
patch: if ( ; else throw ;
rank: 765
score: 98.47522650824652
patch: return break ; else = break ; }
rank: 765
score: 98.42160034179688
patch: break ; break ; case String . next *
rank: 765
score: 98.15303548177083
patch: break Boolean . TRUE ;
rank: 765
score: 98.13306681315105
patch: break ; if ; break
rank: 765
score: 97.80014038085938
patch: flags = break ;
rank: 766
score: 98.82918972439236
patch: validator = child CaMeL Type . get CaMeL
rank: 766
score: 98.63604736328125
patch: } case Token . LP :
rank: 766
score: 98.4751205444336
patch: break ; else ; break ; }
rank: 766
score: 98.42152913411458
patch: break ; ; ; *
rank: 766
score: 98.15092468261719
patch: left = ;
rank: 766
score: 98.12966918945312
patch: break ; break ; set
rank: 766
score: 97.79976196289063
patch: sealed = false ;
rank: 767
score: 99.03304317079741
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) . get CaMeL
rank: 767
score: 98.82851736886161
patch: typeable = ! false ;
rank: 767
score: 98.78525216238839
patch: ensure CaMeL Typed ( t ,
rank: 767
score: 98.6351547241211
patch: ensure CaMeL Typed ( parent ) ;
rank: 767
score: 98.48805454799107
patch: return ; default : break ;
rank: 767
score: 98.47469075520833
patch: break ; ; else { break ; }
rank: 767
score: 98.42099338107639
patch: break ; break ; * int * /
rank: 767
score: 98.12679036458333
patch: for break ; break ;
rank: 767
score: 97.79896850585938
patch: retval = true ;
rank: 768
score: 99.03225181842673
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; false ;
rank: 768
score: 98.6308822631836
patch: typeable = n . get CaMeL
rank: 768
score: 98.42069091796876
patch: break ; break ; } else { break ;
rank: 768
score: 98.1473388671875
patch: break ; default : }
rank: 768
score: 98.12563069661458
patch: break ; break ; first
rank: 768
score: 97.798095703125
patch: state ; break ;
rank: 769
score: 98.62844412667411
patch: this . parent = t ;
rank: 769
score: 98.486572265625
patch: right = ; if ( ;
rank: 769
score: 98.47422960069444
patch: else ; break ; break ; break ;
rank: 769
score: 98.42022094726562
patch: finally { out . append ( $STRING$ ) ;
rank: 769
score: 98.14311218261719
patch: style = ;
rank: 769
score: 98.11880493164062
patch: break ; break ; null
rank: 769
score: 97.79475708007813
patch: return . break ;
rank: 770
score: 99.03062337239584
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type CaMeL Of CaMeL This ( ) ;
rank: 770
score: 98.6239242553711
patch: break ; case Type . FUNCTION :
rank: 770
score: 98.4739761352539
patch: } else = break && break ;
rank: 770
score: 98.4198486328125
patch: break ; break ; if null ; break ;
rank: 770
score: 98.13802083333333
patch: compare CaMeL To ( ;
rank: 770
score: 97.7880859375
patch: t . ensure CaMeL
rank: 771
score: 99.03046875
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL Type CaMeL Of CaMeL This ( ) ) ; break ;
rank: 771
score: 98.75326538085938
patch: typeable = get CaMeL Type CaMeL
rank: 771
score: 98.62340545654297
patch: set CaMeL Type ( type ) ;
rank: 771
score: 98.47983224051339
patch: right CaMeL Type = name ;
rank: 771
score: 98.47341579861111
patch: return break ; break ; } finally {
rank: 771
score: 98.41942681206598
patch: break ; case / ] ; break ;
rank: 771
score: 98.1339619954427
patch: default : break false ;
rank: 771
score: 98.11002604166667
patch: break ; } / /
rank: 771
score: 97.78659057617188
patch: callbacks = false ;
rank: 772
score: 99.02962239583333
patch: right CaMeL Type = child CaMeL Type . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( left CaMeL Type ) ;
rank: 772
score: 98.47957938058036
patch: break ; default : right ;
rank: 772
score: 98.47330474853516
patch: } break ; null = break ;
rank: 772
score: 98.41927761501736
patch: break ; ; / ] = break ;
rank: 772
score: 98.13112386067708
patch: if ( ; return ;
rank: 772
score: 97.7849609375
patch: list . break ;
rank: 773
score: 99.02821451822916
patch: validator . expect CaMeL Number ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) , n ) ;
rank: 773
score: 98.81730821397569
patch: right CaMeL Type = typeable ; }
rank: 773
score: 98.7451171875
patch: ensure CaMeL Typed ( $STRING$ ) ;
rank: 773
score: 98.6192626953125
patch: typeable = null ;
rank: 773
score: 98.47314453125
patch: } else { if ; * /
rank: 773
score: 98.46847970145089
patch: right = visit ; break ;
rank: 773
score: 98.41915893554688
patch: break ; break ; case Integer . 0 /
rank: 773
score: 98.10589599609375
patch: break ; new break ;
rank: 773
score: 97.78372192382812
patch: added = break ;
rank: 774
score: 99.02753092447917
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 774
score: 98.47306315104167
patch: break break ; } catch ; return ;
rank: 774
score: 98.46071079799107
patch: break ; default ; ; ;
rank: 774
score: 98.41890869140624
patch: break ; out . add CaMeL All ( ;
rank: 774
score: 98.12843831380208
patch: loop : if ( ;
rank: 774
score: 97.782666015625
patch: success = false ;
rank: 775
score: 99.02621256510416
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; } else {
rank: 775
score: 98.47298855251736
patch: else break ; break ; } break ;
rank: 775
score: 98.45665631975446
patch: this . ; this . ;
rank: 775
score: 98.41873168945312
patch: break ; ; / / / / / {
rank: 775
score: 98.12770589192708
patch: starts CaMeL With ( ;
rank: 775
score: 97.7806396484375
patch: revalidate ( ) ;
rank: 776
score: 98.813720703125
patch: right CaMeL Type = ! typeable ;
rank: 776
score: 98.70075225830078
patch: ensure CaMeL Typed ( id ) ;
rank: 776
score: 98.47243923611111
patch: break break ; } else ; return ;
rank: 776
score: 98.41848415798611
patch: break ; / else { break ; ;
rank: 776
score: 97.9677978515625
patch: else ; break ;
rank: 776
score: 97.7789306640625
patch: sealed = true ;
rank: 777
score: 98.59089006696429
patch: right CaMeL Type = null ;
rank: 777
score: 98.47208658854167
patch: break ; * * * / return ;
rank: 777
score: 98.45029994419643
patch: break ; default : compare ;
rank: 777
score: 98.41846923828125
patch: break ; break ; case String . 0 *
rank: 777
score: 98.12163696289062
patch: left = break ;
rank: 777
score: 97.96455078125
patch: System ; break ;
rank: 777
score: 97.77656860351563
patch: failed = false ;
rank: 778
score: 98.5865478515625
patch: break ; case Token . DEC
rank: 778
score: 98.47187635633681
patch: break break ; else ; break ; }
rank: 778
score: 98.44915771484375
patch: left ; ; right = ;
rank: 778
score: 98.4180908203125
patch: break ; / else { break ; }
rank: 778
score: 98.1175537109375
patch: break false ; default :
rank: 778
score: 97.963330078125
patch: / ; break ;
rank: 778
score: 97.7765380859375
patch: code = false ;
rank: 779
score: 99.0197509765625
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . set CaMeL JS CaMeL Type ( parent . get CaMeL
rank: 779
score: 98.470947265625
patch: break ; true ; } else return ;
rank: 779
score: 98.44718715122768
patch: break ; case ; default ;
rank: 779
score: 98.41803656684027
patch: break ; * * / break ; ;
rank: 779
score: 98.08143310546875
patch: right = break ;
rank: 779
score: 97.77134704589844
patch: throw $STRING$ ;
rank: 780
score: 99.01969401041667
patch: validator . expect CaMeL Number ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) , $STRING$ ) ;
rank: 780
score: 98.47075059678819
patch: } else = break ; if break ;
rank: 780
score: 98.44480678013393
patch: break ; case ; ; ;
rank: 780
score: 98.41794840494792
patch: break ; / * / break ; /
rank: 780
score: 98.07996826171875
patch: break value = ;
rank: 780
score: 97.76988220214844
patch: continue ; }
rank: 781
score: 99.01888834635416
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 781
score: 98.56105259486607
patch: typeable = true ; }
rank: 781
score: 98.47074381510417
patch: return break ; this . break ; else
rank: 781
score: 98.43951416015625
patch: right ; right = ;
rank: 781
score: 98.4179178873698
patch: * * break ; /
rank: 781
score: 98.06549072265625
patch: left = ; ;
rank: 781
score: 97.89193115234374
patch: break ; System ;
rank: 781
score: 97.76691284179688
patch: IGNORED = false ;
rank: 782
score: 99.0183349609375
patch: validator . set CaMeL JS CaMeL Type ( t . get CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) ) ) ; }
rank: 782
score: 98.55449567522321
patch: right CaMeL Type = n ;
rank: 782
score: 98.4707260131836
patch: return break ; / * break ;
rank: 782
score: 98.41784057617187
patch: break ; / / / / / / /
rank: 782
score: 98.05563354492188
patch: match = false ;
rank: 782
score: 97.7617431640625
patch: return & false ;
rank: 783
score: 99.01805623372395
patch: if ( child CaMeL Type != Token . FUNCTION ) {
rank: 783
score: 98.66972351074219
patch: validator . typeable = n ;
rank: 783
score: 98.47063530815973
patch: break ; else break ; } else ;
rank: 783
score: 98.41739230685764
patch: break ; break ; ; break ; ;
rank: 783
score: 98.01994323730469
patch: bottom = ;
rank: 783
score: 97.81282043457031
patch: throw break ;
rank: 783
score: 97.75828857421875
patch: expression = break ;
rank: 784
score: 99.01748860677084
patch: validator . get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 784
score: 98.7980728149414
patch: typeable = validator . get CaMeL
rank: 784
score: 98.47052764892578
patch: return ; * * * break ;
rank: 784
score: 98.43365478515625
patch: return ; default : throw ;
rank: 784
score: 98.41609497070313
patch: break ; break ; ; * * * /
rank: 784
score: 98.00301513671874
patch: right = false ;
rank: 784
score: 97.75732421875
patch: members = false ;
rank: 785
score: 99.01561686197917
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( n . get CaMeL First CaMeL Child ( ) , left CaMeL Type ) ;
rank: 785
score: 98.6595230102539
patch: break ; case Node . RETURN :
rank: 785
score: 98.46880425347223
patch: try = break ; } catch break ;
rank: 785
score: 98.42288643973214
patch: right = ; } else {
rank: 785
score: 98.41560872395833
patch: break ; * / break ; break ;
rank: 785
score: 98.001904296875
patch: style = break ;
rank: 785
score: 97.78515625
patch: throw new break ;
rank: 785
score: 97.75626220703126
patch: vars = false ;
rank: 786
score: 99.01483154296875
patch: validator . add CaMeL Type ( t , n ) ;
rank: 786
score: 98.78904724121094
patch: JS CaMeL Type left CaMeL Type ;
rank: 786
score: 98.65802764892578
patch: case Token . LP : break ;
rank: 786
score: 98.46826850043402
patch: return break ; else return ; break ;
rank: 786
score: 98.4155517578125
patch: break ; break ; case String . ; ?
rank: 786
score: 98.414794921875
patch: break ; default ; continue ;
rank: 786
score: 97.97962036132813
patch: right = true ;
rank: 786
score: 97.7820068359375
patch: break ; if ;
rank: 786
score: 97.75419921875
patch: this . ensure CaMeL
rank: 787
score: 99.01272786458334
patch: validator . expect CaMeL Number ( t . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Of CaMeL This ( ) , n ) ;
rank: 787
score: 98.78882707868304
patch: right CaMeL Type = type ;
rank: 787
score: 98.46723768446181
patch: break ; * break ; break ; }
rank: 787
score: 98.4149169921875
patch: break ; break ; / * break ;
rank: 787
score: 98.41051374162946
patch: right = ; ; break ;
rank: 787
score: 97.97607421875
patch: right = TRUE ;
rank: 787
score: 97.75330810546875
patch: return & true ;
rank: 788
score: 99.01180826822916
patch: validator . set CaMeL JS CaMeL Type ( parent . get CaMeL JS CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 788
score: 98.53482491629464
patch: right CaMeL Type = this ;
rank: 788
score: 98.46641031901042
patch: else = false ; } else return ;
rank: 788
score: 98.41472032335069
patch: break ; ; / * ; break ;
rank: 788
score: 98.40586344401042
patch: right = visit ; ;
rank: 788
score: 97.9701904296875
patch: default : break ;
rank: 788
score: 97.76489868164063
patch: do ; break ;
rank: 788
score: 97.75187683105469
patch: return parent ;
rank: 789
score: 99.01075846354166
patch: validator . set CaMeL JS CaMeL Type ( get CaMeL JS CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ; } break ;
rank: 789
score: 98.77898297991071
patch: typeable = ! get CaMeL
rank: 789
score: 98.62793986002605
patch: if ( false ) {
rank: 789
score: 98.52847726004464
patch: break ; case Token . VOID
rank: 789
score: 98.46523708767361
patch: } else { = break ; break ;
rank: 789
score: 98.41449652777777
patch: break ; ; / / return break ;
rank: 789
score: 98.40432303292411
patch: if ; else { break ;
rank: 789
score: 97.96586303710937
patch: case Token . ;
rank: 789
score: 97.75029907226562
patch: break ; / /
rank: 789
score: 97.74841918945313
patch: return | true ;
rank: 790
score: 99.00674641927084
patch: right CaMeL Type = JS CaMeL Type . op CaMeL To CaMeL Str ( left CaMeL Type . get CaMeL First CaMeL Child ( ) , $STRING$ ) ;
rank: 790
score: 98.77761840820312
patch: Child left CaMeL Type , right ;
rank: 790
score: 98.52314104352679
patch: switch ( t . get CaMeL
rank: 790
score: 98.465087890625
patch: break ; break ; false ; break ;
rank: 790
score: 98.41402180989583
patch: break ; ; / while break ; ;
rank: 790
score: 97.964990234375
patch: ok = false ;
rank: 790
score: 97.74779052734375
patch: found = break ;
rank: 790
score: 97.73954772949219
patch: break ; try
rank: 791
score: 99.00638834635417
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) ; break ;
rank: 791
score: 98.61489432198661
patch: typeable = ! true ;
rank: 791
score: 98.51762172154018
patch: break ; case Token . COMMA
rank: 791
score: 98.46503363715277
patch: break ; for break ; } break ;
rank: 791
score: 98.41340467664931
patch: break ; ; / / / ; {
rank: 791
score: 98.39639718191964
patch: left = ; left = ;
rank: 791
score: 97.74459228515624
patch: n . break ;
rank: 791
score: 97.73687744140625
patch: else if break ;
rank: 792
score: 98.58502197265625
patch: ensure CaMeL Typed ( n ,
rank: 792
score: 98.51588657924107
patch: this . parent = n ;
rank: 792
score: 98.46371120876736
patch: return break ; else break ; break ;
rank: 792
score: 98.41316731770833
patch: iter . next break ; break ; case
rank: 792
score: 97.94871826171875
patch: match = true ;
rank: 792
score: 97.74383544921875
patch: return = false ;
rank: 792
score: 97.73163452148438
patch: break ; ; else
rank: 793
score: 99.00586751302083
patch: validator . set CaMeL JS CaMeL Type ( n . get CaMeL JS CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) ; break ;
rank: 793
score: 98.77018737792969
patch: validator = ! child CaMeL Type ;
rank: 793
score: 98.57679239908855
patch: typeable = $STRING$ ;
rank: 793
score: 98.46286349826389
patch: if break ; } else = break ;
rank: 793
score: 98.41297743055556
patch: break ; / / / * ; /
rank: 793
score: 98.38666643415179
patch: break ; default : throw {
rank: 793
score: 97.94302978515626
patch: pack ( ) ;
rank: 793
score: 97.74304809570313
patch: return | false ;
rank: 794
score: 99.0051025390625
patch: if ( ! child CaMeL Type . matches (
rank: 794
score: 98.57572428385417
patch: if ( true ) {
rank: 794
score: 98.46280246310764
patch: break ; this . break ; } else
rank: 794
score: 98.41270751953125
patch: break ; / / / / * * /
rank: 794
score: 98.38523646763393
patch: right CaMeL Type ; break ;
rank: 794
score: 97.92940673828124
patch: style = ; ;
rank: 794
score: 97.74132080078125
patch: expr = break ;
rank: 794
score: 97.69109497070312
patch: break ; continue ;
rank: 795
score: 99.00081380208333
patch: validator . set CaMeL JS CaMeL Type ( t ) ;
rank: 795
score: 98.75190952845982
patch: right CaMeL Type = ensure CaMeL
rank: 795
score: 98.46246337890625
patch: break break ; } else
rank: 795
score: 98.41195068359374
patch: break ; / * ] = break false ;
rank: 795
score: 97.92483520507812
patch: break true ;
rank: 795
score: 97.740234375
patch: proc = true ;
rank: 795
score: 97.69036865234375
patch: break ; break
rank: 796
score: 98.74904959542411
patch: validator = child CaMeL Type ;
rank: 796
score: 98.50178745814732
patch: break ; case Token . VAR
rank: 796
score: 98.46242268880208
patch: else = true ; } catch break ;
rank: 796
score: 98.41083984375
patch: break ; ; / / / * * /
rank: 796
score: 97.73450927734375
patch: } * ) ;
rank: 796
score: 97.68988037109375
patch: try ; break ;
rank: 797
score: 98.99884588068181
patch: if ( child CaMeL Type != Token . LP )
rank: 797
score: 98.46221923828125
patch: return break ; } if ; return ;
rank: 797
score: 98.41053263346355
patch: break ; ; else {
rank: 797
score: 98.36825997488839
patch: if ( ; else { ;
rank: 797
score: 97.91575927734375
patch: ok = true ;
rank: 797
score: 97.73309326171875
patch: children . break ;
rank: 797
score: 97.685009765625
patch: break ; else else
rank: 798
score: 98.46170383029514
patch: break ; } else ; return break ;
rank: 798
score: 98.40855712890625
patch: logger . append ( $STRING$ ; break ; ;
rank: 798
score: 98.36692592075893
patch: break ; } ; break ;
rank: 798
score: 97.72418212890625
patch: res ; break ;
rank: 798
score: 97.64925384521484
patch: / break ;
rank: 799
score: 98.46162923177083
patch: break ; } else { if break ;
rank: 799
score: 98.40828247070313
patch: break ; break ; out . append null ;
rank: 799
score: 98.36607142857143
patch: if ( ; else return ;
rank: 799
score: 97.907177734375
patch: if ( ; ;
rank: 799
score: 97.7228759765625
patch: success = true ;
rank: 799
score: 97.640625
patch: break ; else }
rank: 800
score: 98.729248046875
patch: right CaMeL Type = is CaMeL
rank: 800
score: 98.40825805664062
patch: break ; break ; * / if break {
rank: 800
score: 98.36583600725446
patch: right = ; break ; }
rank: 800
score: 97.89864349365234
patch: z = ;
rank: 800
score: 97.72244262695312
patch: throw n ;
rank: 800
score: 97.63333740234376
patch: return ; return ;
rank: 801
score: 98.98235529119319
patch: validator . right CaMeL Type = child CaMeL Type ;
rank: 801
score: 98.48232596261161
patch: right CaMeL Type = value ;
rank: 801
score: 98.46087646484375
patch: break break ; break ;
rank: 801
score: 98.40809936523438
patch: break ; break ; case Boolean . next *
rank: 801
score: 97.89530029296876
patch: cmp = false ;
rank: 801
score: 97.72236938476563
patch: failed = true ;
rank: 801
score: 97.61478271484376
patch: break ; } ;
rank: 802
score: 98.71608189174107
patch: validator = right CaMeL Type ;
rank: 802
score: 98.45832655164931
patch: break ; null ; break ; break ;
rank: 802
score: 98.40792236328124
patch: break ; break ; case Boolean . break ;
rank: 802
score: 98.3626708984375
patch: right = ; ; ;
rank: 802
score: 97.89448852539063
patch: cmp = true ;
rank: 802
score: 97.7218994140625
patch: flags = null ;
rank: 802
score: 97.56439971923828
patch: break ; /
rank: 803
score: 98.97824928977273
patch: case Token . LP : case Token . LP :
rank: 803
score: 98.47997174944196
patch: child CaMeL Type = $STRING$ ;
rank: 803
score: 98.45742458767361
patch: } else = true ; break ; }
rank: 803
score: 98.40724690755208
patch: break ; ; return {
rank: 803
score: 97.89090576171876
patch: repaint ( ) ;
rank: 803
score: 97.52938842773438
patch: ; break ;
rank: 804
score: 98.47328404017857
patch: left CaMeL Type = false ;
rank: 804
score: 98.45731608072917
patch: return break ; break ; if break ;
rank: 804
score: 98.40469970703126
patch: break ; break ; case ; { break ;
rank: 804
score: 97.89073486328125
patch: right = right ;
rank: 804
score: 97.51181030273438
patch: for break ;
rank: 805
score: 98.47310093470982
patch: break ; case Token . TRUE
rank: 805
score: 98.45614624023438
patch: } else { continue ;
rank: 805
score: 98.40438232421874
patch: break ; break ; ; * if break ;
rank: 805
score: 98.28466796875
patch: break ; ; default :
rank: 805
score: 97.87839965820312
patch: cmp = break ;
rank: 805
score: 97.7103515625
patch: state . ensure CaMeL
rank: 805
score: 97.48104858398438
patch: return ; }
rank: 806
score: 98.70664978027344
patch: Type left CaMeL Type , right ;
rank: 806
score: 98.46718924386161
patch: boolean typeable = false ;
rank: 806
score: 98.45506456163194
patch: } else { break ; else return ;
rank: 806
score: 97.8579345703125
patch: filter = true ;
rank: 806
score: 97.70753479003906
patch: System . :
rank: 806
score: 97.37642669677734
patch: m break ;
rank: 807
score: 98.9754305752841
patch: validator . child CaMeL Type = child CaMeL Type ;
rank: 807
score: 98.70474679129464
patch: child CaMeL Type = false ;
rank: 807
score: 98.46098981584821
patch: } typeable = null ;
rank: 807
score: 98.45756312779018
patch: typeable = ! null ;
rank: 807
score: 98.45455593532986
patch: return break ; } else } break ;
rank: 807
score: 98.40376790364583
patch: catch null ; break ;
rank: 807
score: 98.26263427734375
patch: right = ; return ;
rank: 807
score: 97.855712890625
patch: right = FALSE ;
rank: 807
score: 97.70414225260417
patch: result ;
rank: 807
score: 97.36421966552734
patch: -- break ;
rank: 808
score: 98.97524192116477
patch: validator . child CaMeL Type = left CaMeL Type ;
rank: 808
score: 98.69133649553571
patch: child CaMeL Type = type ;
rank: 808
score: 98.46001325334821
patch: break ; case - 1 :
rank: 808
score: 98.45639474051339
patch: right = n . get CaMeL
rank: 808
score: 98.45445421006944
patch: } break ; null ; break ; }
rank: 808
score: 98.40355428059895
patch: break ; value return ;
rank: 808
score: 98.26214599609375
patch: ; ; if ( ;
rank: 808
score: 97.85506591796874
patch: if ( init )
rank: 808
score: 97.69957733154297
patch: throw true ;
rank: 808
score: 97.35834503173828
patch: break ; finally
rank: 809
score: 98.971923828125
patch: if ( t . get CaMeL Type ( ) !=
rank: 809
score: 98.45954241071429
patch: } case Token . RETURN :
rank: 809
score: 98.45399305555556
patch: } break ; break ; break ; else
rank: 809
score: 98.45115443638393
patch: type = child CaMeL Type ;
rank: 809
score: 98.40321044921875
patch: break ; break ; * / { break ;
rank: 809
score: 98.26185099283855
patch: break ; > 0 ;
rank: 809
score: 97.84383544921874
patch: same = false ;
rank: 809
score: 97.6994873046875
patch: return : break ;
rank: 809
score: 97.34132385253906
patch: return ; else
rank: 810
score: 98.45228794642857
patch: if ( parent == n )
rank: 810
score: 98.4028828938802
patch: while break ; ; ?
rank: 810
score: 98.2557881673177
patch: ; if ( ; ;
rank: 810
score: 97.83997192382813
patch: cached = false ;
rank: 810
score: 97.30874633789062
patch: break ; do
rank: 811
score: 98.96827281605114
patch: if ( child CaMeL Type == Token . LP )
rank: 811
score: 98.67386300223214
patch: typeable = ! is CaMeL
rank: 811
score: 98.45125034877232
patch: validator . report = false ;
rank: 811
score: 98.44132777622768
patch: result = child CaMeL Type ;
rank: 811
score: 98.2533203125
patch: right CaMeL Type ;
rank: 811
score: 97.83778076171875
patch: filter = false ;
rank: 811
score: 97.69830932617188
patch: return ? get CaMeL
rank: 811
score: 97.28141021728516
patch: { break ;
rank: 812
score: 98.45247395833333
patch: break ; * * / break ; }
rank: 812
score: 98.44994245256696
patch: break ; case Token . NEW
rank: 812
score: 98.40085856119792
patch: } * * / ;
rank: 812
score: 98.24290974934895
patch: pos = - 1 ;
rank: 812
score: 97.83681640625
patch: same = true ;
rank: 812
score: 97.6797119140625
patch: break ? break ;
rank: 813
score: 98.96464399857955
patch: validator . add CaMeL Type ( typeable ) ;
rank: 813
score: 98.45224338107639
patch: } else { continue ; } break ;
rank: 813
score: 98.44948032924107
patch: boolean typeable = true ;
rank: 813
score: 98.400634765625
patch: break ; break ; * else { break ;
rank: 813
score: 97.83646240234376
patch: bottom = ; ;
rank: 813
score: 97.67965698242188
patch: return validator ;
rank: 813
score: 97.2702865600586
patch: return ; ;
rank: 814
score: 98.45104302300348
patch: } else if break ; } break ;
rank: 814
score: 98.44819859095982
patch: validator . report ( t ,
rank: 814
score: 98.42696707589286
patch: if ( ! true ) {
rank: 814
score: 98.40042114257812
patch: break ; break ; case $STRING$ ; break ;
rank: 814
score: 98.2168680826823
patch: break ; ; default ;
rank: 814
score: 97.835302734375
patch: cached = true ;
rank: 814
score: 97.67916259765624
patch: return : ensure CaMeL
rank: 814
score: 97.20855712890625
patch: break ; boolean
rank: 815
score: 98.45058865017361
patch: return break break ; } else return ;
rank: 815
score: 98.44708251953125
patch: validator . close ( ) ;
rank: 815
score: 98.40030517578126
patch: break ; break ; System . out . break
rank: 815
score: 98.20853678385417
patch: break ; default ; }
rank: 815
score: 97.83255615234376
patch: v = break ;
rank: 815
score: 97.6651611328125
patch: false ;
rank: 815
score: 97.20206451416016
patch: } return ;
rank: 816
score: 98.45011393229167
patch: } else if break ; return break ;
rank: 816
score: 98.44590541294643
patch: } case Token . DEC :
rank: 816
score: 98.40000406901042
patch: break ; ++ break ;
rank: 816
score: 97.6466064453125
patch: } else
rank: 816
score: 97.20050811767578
patch: while break ;
rank: 817
score: 98.63339233398438
patch: typeable = get CaMeL
rank: 817
score: 98.44992404513889
patch: } else { if break ; } }
rank: 817
score: 98.44050816127232
patch: result = right CaMeL Type ;
rank: 817
score: 98.42367117745536
patch: if ( ! false ) {
rank: 817
score: 98.39970703125
patch: break ; break ; case String . FALSE *
rank: 817
score: 97.826123046875
patch: left = true ;
rank: 817
score: 97.17981719970703
patch: break ; this
rank: 818
score: 98.63296072823661
patch: child CaMeL Type = get CaMeL
rank: 818
score: 98.44904242621527
patch: } else = break ; } break ;
rank: 818
score: 98.44011579241071
patch: this . parent = parent ;
rank: 818
score: 98.39940185546875
patch: break ; break ; out . out ; ;
rank: 818
score: 98.18450927734375
patch: if ; right = ;
rank: 818
score: 97.82530975341797
patch: field = ;
rank: 818
score: 97.17288208007812
patch: * break ;
rank: 819
score: 98.9449951171875
patch: if ( ! child CaMeL Type . get CaMeL
rank: 819
score: 98.61524309430804
patch: right CaMeL Type = expect CaMeL
rank: 819
score: 98.44727918836806
patch: break break ; } else = false ;
rank: 819
score: 98.39849243164062
patch: break ; / ?
rank: 819
score: 98.17959594726562
patch: result = ;
rank: 819
score: 97.82181396484376
patch: columns = break ;
rank: 819
score: 97.62460327148438
patch: Scriptable n ;
rank: 820
score: 98.94220581054688
patch: if ( ! child CaMeL Type . equals (
rank: 820
score: 98.44709608289931
patch: return break ; } break ; false ;
rank: 820
score: 98.39844360351563
patch: break ; break ; / ; * break ;
rank: 820
score: 98.17847696940105
patch: ; right = ; ;
rank: 820
score: 97.8205322265625
patch: if ( ; else
rank: 820
score: 97.60896301269531
patch: return left ;
rank: 820
score: 97.10936737060547
patch: / / /
rank: 821
score: 98.60025460379464
patch: child CaMeL Type = break ;
rank: 821
score: 98.44632975260417
patch: } else if ; else if break ;
rank: 821
score: 98.43363734654018
patch: break ; case Token . POS
rank: 821
score: 98.39827880859374
patch: break ; case 1 ? 0 : break ;
rank: 821
score: 98.37757364908855
patch: break ; case 0 :
rank: 821
score: 98.17466227213542
patch: right ; if ( ;
rank: 821
score: 97.8174072265625
patch: enabled = false ;
rank: 821
score: 97.5877914428711
patch: return n ;
rank: 821
score: 97.09526824951172
patch: break ; t
rank: 822
score: 98.59506661551339
patch: child CaMeL Type = ensure CaMeL
rank: 822
score: 98.44566514756944
patch: break ; else = break ; return ;
rank: 822
score: 98.39794311523437
patch: catch break ; ;
rank: 822
score: 98.17394002278645
patch: ; ; right = ;
rank: 822
score: 97.81574096679688
patch: z = break ;
rank: 822
score: 97.5843276977539
patch: { parent .
rank: 822
score: 97.07081604003906
patch: break ; int
rank: 823
score: 98.59440394810268
patch: validator = n . get CaMeL
rank: 823
score: 98.44561767578125
patch: break ; null break ; } break ;
rank: 823
score: 98.42815290178571
patch: break ; case Token . RETURN
rank: 823
score: 98.39708251953125
patch: break ; break ; case * : break ;
rank: 823
score: 97.81290283203126
patch: resolved = false ;
rank: 823
score: 97.58348083496094
patch: / / :
rank: 823
score: 97.05785369873047
patch: final break ;
rank: 824
score: 98.91062418619792
patch: if ( child CaMeL Type . get CaMeL
rank: 824
score: 98.58810860770089
patch: left CaMeL Type = get CaMeL
rank: 824
score: 98.42548479352679
patch: right CaMeL Type = t ;
rank: 824
score: 98.39697875976563
patch: break ; ; / / * : / /
rank: 824
score: 98.16666666666667
patch: width = ; break ;
rank: 824
score: 97.57646942138672
patch: continue ? ;
rank: 824
score: 97.02776336669922
patch: ! break ;
rank: 825
score: 98.5865234375
patch: validator = get CaMeL
rank: 825
score: 98.4444580078125
patch: return break ; } else = null ;
rank: 825
score: 98.42222377232143
patch: this . n = n ;
rank: 825
score: 98.39654541015625
patch: break ; ; / while break ; break ;
rank: 825
score: 98.1646728515625
patch: ; right = ;
rank: 825
score: 97.79773559570313
patch: c = break ;
rank: 825
score: 97.52025604248047
patch: return ) ;
rank: 825
score: 97.01019287109375
patch: int count ;
rank: 826
score: 98.4437255859375
patch: } else { break ; } else }
rank: 826
score: 98.42035784040179
patch: child CaMeL Type = null ;
rank: 826
score: 98.39632161458333
patch: break ; * return ;
rank: 826
score: 98.35519409179688
patch: typeable = value ;
rank: 826
score: 98.16158040364583
patch: right CaMeL Type ; ;
rank: 826
score: 97.79761352539063
patch: bottom = break ;
rank: 826
score: 97.51885986328125
patch: / _
rank: 826
score: 96.97974395751953
patch: public break ;
rank: 827
score: 98.89409722222223
patch: validator . child CaMeL Type = n ;
rank: 827
score: 98.56103515625
patch: left CaMeL Type = type ;
rank: 827
score: 98.44283040364583
patch: } else { } else { return ;
rank: 827
score: 98.41786411830357
patch: validator . right = false ;
rank: 827
score: 98.39456176757812
patch: break ; ; / * break ; break ;
rank: 827
score: 98.35257975260417
patch: break ; case name :
rank: 827
score: 98.15639241536458
patch: result = ; * /
rank: 827
score: 97.79519653320312
patch: body = break ;
rank: 827
score: 97.51133728027344
patch: } ) ;
rank: 827
score: 96.97401428222656
patch: break ; n
rank: 828
score: 98.55954415457589
patch: right = validator . get CaMeL
rank: 828
score: 98.44232855902777
patch: else { break ; } else break ;
rank: 828
score: 98.41587611607143
patch: is CaMeL Call = false ;
rank: 828
score: 98.39278564453124
patch: break ; break ; case String . break _
rank: 828
score: 98.3482666015625
patch: break ; case int ;
rank: 828
score: 98.1558329264323
patch: if ( ; else ;
rank: 828
score: 97.79361572265626
patch: deallocate ( ) ;
rank: 828
score: 97.5105209350586
patch: throw parent ;
rank: 829
score: 98.44207763671875
patch: break ; false ; break ; } }
rank: 829
score: 98.41535295758929
patch: this . n = parent ;
rank: 829
score: 98.39270629882813
patch: break ; / / ] = break false ;
rank: 829
score: 98.3414306640625
patch: typeable = this ;
rank: 829
score: 98.15195719401042
patch: break ; count ++ ;
rank: 829
score: 97.7928466796875
patch: left = false ;
rank: 829
score: 97.47406005859375
patch: } if (
rank: 829
score: 96.94931030273438
patch: catch break ;
rank: 830
score: 98.8801513671875
patch: validator . set CaMeL Type ( parent ) ;
rank: 830
score: 98.54586356026786
patch: if ( validator . get CaMeL
rank: 830
score: 98.4420166015625
patch: break ; - 1 ;
rank: 830
score: 98.41043526785714
patch: } case Token . FUNCTION :
rank: 830
score: 98.39248046875
patch: break ; break ; case int ; next ;
rank: 830
score: 98.3402811686198
patch: typeable = n ;
rank: 830
score: 98.14674886067708
patch: this . ; break ;
rank: 830
score: 97.79132690429688
patch: resolved = true ;
rank: 830
score: 97.4730224609375
patch: int n ;
rank: 830
score: 96.93900299072266
patch: break ; System
rank: 831
score: 98.4410400390625
patch: } if break ; break ; return ;
rank: 831
score: 98.40379028320312
patch: eable = false ;
rank: 831
score: 98.39209594726563
patch: break ; / / if false { break ;
rank: 831
score: 98.33521525065105
patch: break ; case $STRING$ :
rank: 831
score: 98.14174397786458
patch: right = ; continue ;
rank: 831
score: 97.79114990234375
patch: break type = ;
rank: 831
score: 97.47093963623047
patch: break ? ;
rank: 831
score: 96.93489837646484
patch: if ; break
rank: 832
score: 98.54131208147321
patch: validator = parent . get CaMeL
rank: 832
score: 98.44061957465277
patch: return break ; if break ; break ;
rank: 832
score: 98.3912841796875
patch: break ; break ; finally { break ; }
rank: 832
score: 98.1407470703125
patch: if ; else break ;
rank: 832
score: 97.78450317382813
patch: finished = true ;
rank: 832
score: 97.46692657470703
patch: throw this ;
rank: 832
score: 96.92964172363281
patch: break ; out
rank: 833
score: 98.44061957465277
patch: break ; null } else { break ;
rank: 833
score: 98.39092407226562
patch: break ; break ; case String ; break ;
rank: 833
score: 98.38045247395833
patch: if ( typeable ;
rank: 833
score: 98.13978068033855
patch: break ; } * /
rank: 833
score: 97.78294677734375
patch: matches = true ;
rank: 833
score: 97.46653747558594
patch: { if (
rank: 833
score: 96.92459106445312
patch: break ; Logger
rank: 834
score: 98.52362060546875
patch: left CaMeL Type = ensure CaMeL
rank: 834
score: 98.44051106770833
patch: break ; if break ; } catch ;
rank: 834
score: 98.26224772135417
patch: break ; case n :
rank: 834
score: 98.12807210286458
patch: cmp = ; break ;
rank: 834
score: 97.46272277832031
patch: }
rank: 834
score: 96.9218521118164
patch: synchronized break ;
rank: 835
score: 98.44050428602431
patch: return break ; } else { continue ;
rank: 835
score: 98.3899434407552
patch: } break ; ; ?
rank: 835
score: 98.35561116536458
patch: case Token . ASSIGN :
rank: 835
score: 98.12805786132813
patch: result = ; ;
rank: 835
score: 97.77646484375
patch: matches = false ;
rank: 835
score: 97.46028137207031
patch: return ] ;
rank: 835
score: 96.91778564453125
patch: = break ;
rank: 836
score: 98.83930121527777
patch: if ( parent instanceof JS CaMeL Type )
rank: 836
score: 98.51924641927083
patch: Node left , right ;
rank: 836
score: 98.44013129340277
patch: break ; } finally { if ; }
rank: 836
score: 98.38989868164063
patch: break ; break ; if break ; ; ;
rank: 836
score: 97.775537109375
patch: relative = false ;
rank: 836
score: 96.9139633178711
patch: new break ;
rank: 837
score: 98.43995157877605
patch: } catch ; break ;
rank: 837
score: 98.38900756835938
patch: break ; break ; / / if break {
rank: 837
score: 98.30989583333333
patch: throw child CaMeL Type ;
rank: 837
score: 97.77550048828125
patch: enabled = true ;
rank: 837
score: 97.44937133789062
patch: } * :
rank: 837
score: 96.8975601196289
patch: switch break ;
rank: 838
score: 98.43858506944444
patch: break ; null } else { return ;
rank: 838
score: 98.3886474609375
patch: } * * / if break ; break ;
rank: 838
score: 98.23406982421875
patch: right ( t ) ;
rank: 838
score: 98.1188252766927
patch: break ; / * ;
rank: 838
score: 97.77454376220703
patch: priority = ;
rank: 838
score: 97.43126424153645
patch: return :
rank: 838
score: 96.8944091796875
patch: break ; throw
rank: 839
score: 98.51307024274554
patch: left CaMeL Type = break ;
rank: 839
score: 98.43798828125
patch: return break ; * /
rank: 839
score: 98.38785400390626
patch: break ; ; / * / * break ;
rank: 839
score: 98.27962239583333
patch: init ( t ) ;
rank: 839
score: 98.11622111002605
patch: pos = ; break ;
rank: 839
score: 97.77019653320312
patch: style = null ;
rank: 839
score: 96.89276123046875
patch: if false ;
rank: 840
score: 98.51294817243304
patch: validator = ! typeable ;
rank: 840
score: 98.38777669270833
patch: } else { * /
rank: 840
score: 98.115234375
patch: right ; ; break ;
rank: 840
score: 97.7681640625
patch: cancelled = false ;
rank: 840
score: 97.40242004394531
patch: throw this .
rank: 840
score: 96.84272766113281
patch: m n ;
rank: 841
score: 98.51082938058036
patch: validator = left CaMeL Type ;
rank: 841
score: 98.43597412109375
patch: break ; break ; } } if ;
rank: 841
score: 98.38768310546875
patch: break ; ; / / / * break /
rank: 841
score: 98.11025390625
patch: ; if ( ;
rank: 841
score: 97.76573486328125
patch: cancelled = true ;
rank: 841
score: 97.39719645182292
patch: result =
rank: 841
score: 96.8309555053711
patch: break ; count
rank: 842
score: 98.43487548828125
patch: } else if break ; } else {
rank: 842
score: 98.38394165039062
patch: } catch break ; ;
rank: 842
score: 98.25128173828125
patch: eable = true ;
rank: 842
score: 98.2130635579427
patch: = child CaMeL Type ;
rank: 842
score: 97.3947982788086
patch: / * /
rank: 842
score: 96.82011413574219
patch: if n ;
rank: 843
score: 98.80818684895833
patch: validator . report ( t , n ,
rank: 843
score: 98.43295627170139
patch: break ; } else return ; break ;
rank: 843
score: 98.38375854492188
patch: break ; ; / else { break ; }
rank: 843
score: 98.20857747395833
patch: break ; case this :
rank: 843
score: 98.07208251953125
patch: right ; ; ;
rank: 843
score: 97.76494140625
patch: done = true ;
rank: 843
score: 97.38899230957031
patch: VM ) ;
rank: 843
score: 96.81755065917969
patch: int type ;
rank: 844
score: 98.50179617745536
patch: right CaMeL Type = left ;
rank: 844
score: 98.38268432617187
patch: break ; break ; case String . ; *
rank: 844
score: 97.37887573242188
patch: return && !
rank: 845
score: 98.49666050502232
patch: child CaMeL Type = true ;
rank: 845
score: 98.43013509114583
patch: } else { } finally = false ;
rank: 845
score: 98.38205973307292
patch: break ; * return {
rank: 845
score: 98.20200602213542
patch: break ; case 1 :
rank: 845
score: 97.76143798828124
patch: popup = null ;
rank: 845
score: 97.37351989746094
patch: throw return ;
rank: 845
score: 96.80280303955078
patch: m null ;
rank: 846
score: 98.4960428873698
patch: validator = typeable ;
rank: 846
score: 98.42994520399306
patch: } else = true ; else return ;
rank: 846
score: 98.38062540690105
patch: * * break break ;
rank: 846
score: 98.22403971354167
patch: case Token . EQ :
rank: 846
score: 98.03453369140625
patch: right ; break ;
rank: 846
score: 97.75899658203124
patch: finished = false ;
rank: 846
score: 97.37224578857422
patch: } * _
rank: 846
score: 96.79450225830078
patch: break break ;
rank: 847
score: 98.48740931919643
patch: right CaMeL Type = validator ;
rank: 847
score: 98.42899576822917
patch: break ; case break ; } break ;
rank: 847
score: 98.38045247395833
patch: ++ break ; break ;
rank: 847
score: 98.19789632161458
patch: right = typeable ;
rank: 847
score: 98.03411254882812
patch: } else { ;
rank: 847
score: 97.36302947998047
patch: true ) ;
rank: 848
score: 98.77918243408203
patch: report ( t , n ) ;
rank: 848
score: 98.37677001953125
patch: while false ; break ;
rank: 848
score: 98.21581013997395
patch: close ( t ) ;
rank: 848
score: 98.1950174967448
patch: = right CaMeL Type ;
rank: 848
score: 98.0279312133789
patch: right ; ;
rank: 848
score: 97.75411376953124
patch: cp = break ;
rank: 848
score: 97.35469818115234
patch: { this .
rank: 848
score: 96.77975463867188
patch: / ; else
rank: 849
score: 98.42757161458333
patch: } else if break ; } catch ;
rank: 849
score: 98.37109375
patch: if null ; break ;
rank: 849
score: 97.34208679199219
patch: Scriptable t ;
rank: 849
score: 96.77728271484375
patch: / / ;
rank: 850
score: 98.76388985770089
patch: if ( parent == null )
rank: 850
score: 98.48006766183036
patch: left CaMeL Type = is CaMeL
rank: 850
score: 98.42694769965277
patch: break break ; } finally { break ;
rank: 850
score: 98.3692138671875
patch: break break ; ;
rank: 850
score: 98.213134765625
patch: dispose ( t ) ;
rank: 850
score: 98.18504638671875
patch: break typeable ;
rank: 850
score: 97.74285888671875
patch: break false ; ;
rank: 850
score: 97.33589680989583
patch: this .
rank: 851
score: 98.47876848493304
patch: right CaMeL Type = right ;
rank: 851
score: 98.42586263020833
patch: else break ; } else { return ;
rank: 851
score: 98.36876424153645
patch: return break ; ; ;
rank: 851
score: 98.20936075846355
patch: fail ( t ) ;
rank: 851
score: 98.17930094401042
patch: break Token . LP :
rank: 851
score: 97.92965087890624
patch: / * break ;
rank: 851
score: 97.33135986328125
patch: / ) ;
rank: 851
score: 96.63156127929688
patch: System ;
rank: 852
score: 98.42578125
patch: } else { } finally ; break ;
rank: 852
score: 98.36802164713542
patch: / * break break ;
rank: 852
score: 98.20197143554688
patch: validator != null ;
rank: 852
score: 98.1766866048177
patch: right CaMeL Type ++ ;
rank: 852
score: 97.92770385742188
patch: ret = ; ;
rank: 852
score: 97.3285420735677
patch: * /
rank: 852
score: 96.62171936035156
patch: /
rank: 853
score: 98.42572021484375
patch: break ; break ; } } else {
rank: 853
score: 98.36569213867188
patch: break ; } break {
rank: 853
score: 98.19974772135417
patch: switch ( parent ) {
rank: 853
score: 97.7310302734375
patch: form = break ;
rank: 853
score: 96.58774820963542
patch: else ;
rank: 854
score: 98.74236297607422
patch: validator . report ( t ) ;
rank: 854
score: 98.46896798270089
patch: if ( validator . is CaMeL
rank: 854
score: 98.36409505208333
patch: } * * / }
rank: 854
score: 98.16886393229167
patch: typeable = ensure CaMeL
rank: 854
score: 97.89885864257812
patch: ; ; ; ;
rank: 854
score: 97.73070678710937
patch: browse = false ;
rank: 854
score: 97.32292175292969
patch: true break ;
rank: 854
score: 96.5477294921875
patch: / ;
rank: 855
score: 98.73789760044643
patch: if ( validator != null )
rank: 855
score: 98.4222920735677
patch: = break ; break ;
rank: 855
score: 98.36334228515625
patch: break ; * ? /
rank: 855
score: 98.19835408528645
patch: JS CaMeL Type n ;
rank: 855
score: 98.16864013671875
patch: return n . get CaMeL
rank: 855
score: 97.85673828125
patch: if ( ! ;
rank: 855
score: 97.32208251953125
patch: Node left ;
rank: 855
score: 96.49983723958333
patch: / /
rank: 856
score: 98.46337890625
patch: validator = t . get CaMeL
rank: 856
score: 98.4056884765625
patch: } return break ;
rank: 856
score: 98.36065673828125
patch: break ; value * /
rank: 856
score: 98.1845703125
patch: validator = false ;
rank: 856
score: 98.16075642903645
patch: break ; case true :
rank: 856
score: 97.73018188476563
patch: popup = true ;
rank: 856
score: 97.3092041015625
patch: continue break ;
rank: 857
score: 98.45474243164062
patch: report ( t ) ;
rank: 857
score: 98.4043477376302
patch: } break ; true ;
rank: 857
score: 98.35840861002605
patch: break ; case Integer ;
rank: 857
score: 98.17995198567708
patch: typeable = visit CaMeL
rank: 857
score: 98.15672810872395
patch: typeable = VOID ;
rank: 857
score: 97.72772827148438
patch: ts = break ;
rank: 857
score: 97.30406188964844
patch: Scriptable parent ;
rank: 857
score: 96.399658203125
patch: break
rank: 858
score: 98.43118286132812
patch: Child left CaMeL Type ;
rank: 858
score: 98.403076171875
patch: } } else ;
rank: 858
score: 98.357421875
patch: break ; break ; ?
rank: 858
score: 97.840576171875
patch: bottom = visit ;
rank: 858
score: 97.7252426147461
patch: dimension = ;
rank: 858
score: 97.29887390136719
patch: return || !
rank: 858
score: 96.28793334960938
patch: try ;
rank: 859
score: 98.35648600260417
patch: else break ; ; *
rank: 859
score: 97.82783203125
patch: loaded = true ;
rank: 859
score: 97.71969604492188
patch: other = break ;
rank: 859
score: 97.29696655273438
patch: return . ;
rank: 859
score: 96.24288940429688
patch: do ;
rank: 860
score: 98.42591349283855
patch: if ( ! is CaMeL
rank: 860
score: 98.40017700195312
patch: break break ; else ;
rank: 860
score: 98.35450439453125
patch: value = true ;
rank: 860
score: 98.1459248860677
patch: break ; case int :
rank: 860
score: 97.719189453125
patch: cached = break ;
rank: 860
score: 97.29476928710938
patch: result = !
rank: 860
score: 96.1982421875
patch: this ;
rank: 861
score: 98.39613850911458
patch: break ; true ; }
rank: 861
score: 98.35361938476562
patch: value = false ;
rank: 861
score: 98.15211995442708
patch: Type left CaMeL Type ;
rank: 861
score: 98.14170328776042
patch: break ; case String :
rank: 861
score: 97.28830973307292
patch: null ;
rank: 861
score: 96.10292561848958
patch: buffer ;
rank: 862
score: 98.40835571289062
patch: right CaMeL Type =
rank: 862
score: 98.3874003092448
patch: } } if break ;
rank: 862
score: 98.35350545247395
patch: catch false ; break ;
rank: 862
score: 98.15018717447917
patch: error ( $STRING$ ) ;
rank: 862
score: 98.14061482747395
patch: typeable = 0 ;
rank: 862
score: 97.81198120117188
patch: ret = ;
rank: 862
score: 97.71008911132813
patch: clipped = false ;
rank: 862
score: 97.28591918945312
patch: LOG . :
rank: 862
score: 96.03225708007812
patch: LOG ;
rank: 863
score: 98.38466389973958
patch: return ; else return ;
rank: 863
score: 98.13557942708333
patch: typeable = break ;
rank: 863
score: 97.80144653320312
patch: return ; default ;
rank: 863
score: 97.70836791992187
patch: field = break ;
rank: 863
score: 97.28323364257812
patch: return $STRING$ ;
rank: 864
score: 98.38858032226562
patch: Child left , right ;
rank: 864
score: 98.38444010416667
patch: } else ; continue ;
rank: 864
score: 98.3460184733073
patch: break ; case ] ;
rank: 864
score: 98.12943725585937
patch: fail ( ) ;
rank: 864
score: 97.70787353515625
patch: col = break ;
rank: 864
score: 97.27714538574219
patch: Scriptable type ;
rank: 864
score: 95.99336751302083
patch: } }
rank: 865
score: 98.38348388671875
patch: break ; else ; }
rank: 865
score: 98.34366861979167
patch: break ; * / {
rank: 865
score: 98.140380859375
patch: break ; / * /
rank: 865
score: 97.79371337890625
patch: x = ; ;
rank: 865
score: 97.70770874023438
patch: left = TRUE ;
rank: 865
score: 97.27327728271484
patch: true ? ;
rank: 865
score: 95.97788492838542
patch: sb ;
rank: 866
score: 98.69271087646484
patch: if ( typeable == false )
rank: 866
score: 98.37561645507813
patch: } break ; else
rank: 866
score: 98.34300740559895
patch: catch break ; ; ;
rank: 866
score: 98.134521484375
patch: n . get CaMeL
rank: 866
score: 98.11738586425781
patch: break n ;
rank: 866
score: 97.70311279296875
patch: return ; case ;
rank: 866
score: 97.2698974609375
patch: VM ) .
rank: 866
score: 95.96292114257812
patch: logger ;
rank: 867
score: 98.36973571777344
patch: } if ;
rank: 867
score: 98.34250895182292
patch: break ; break ; value
rank: 867
score: 97.7008544921875
patch: before = false ;
rank: 867
score: 97.26575469970703
patch: Scriptable node ;
rank: 867
score: 95.95859781901042
patch: b ;
rank: 868
score: 98.36893717447917
patch: if break ; return ;
rank: 868
score: 98.34147135416667
patch: for break ; ; ;
rank: 868
score: 98.3308817545573
patch: typeable = expect CaMeL
rank: 868
score: 97.78924560546875
patch: right ; right ;
rank: 868
score: 97.25611114501953
patch: break ; case
rank: 868
score: 95.95419311523438
patch: c ;
rank: 869
score: 98.3643798828125
patch: break ; null break ;
rank: 869
score: 98.3389892578125
patch: break ; next return ;
rank: 869
score: 98.0634033203125
patch: ensure CaMeL Typed (
rank: 869
score: 97.787158203125
patch: break - 1 ;
rank: 869
score: 97.69662475585938
patch: form = ;
rank: 869
score: 97.25257873535156
patch: | true ;
rank: 869
score: 95.92371622721355
patch: default ;
rank: 870
score: 98.33656819661458
patch: * else { break ;
rank: 870
score: 98.09222412109375
patch: log ( ) .
rank: 870
score: 97.69426879882812
patch: before = true ;
rank: 870
score: 97.25155639648438
patch: int left ;
rank: 871
score: 98.3357442220052
patch: else = break ; ;
rank: 871
score: 97.77349853515625
patch: ; * / ;
rank: 871
score: 97.69387817382812
patch: detail = false ;
rank: 871
score: 97.25090789794922
patch: int right ;
rank: 871
score: 95.90802001953125
patch: next ;
rank: 872
score: 98.3345438639323
patch: if false ; break ;
rank: 872
score: 98.03250122070312
patch: validator . ensure CaMeL
rank: 872
score: 97.7724365234375
patch: right ; return ;
rank: 872
score: 97.6924072265625
patch: break false ; }
rank: 872
score: 97.24561309814453
patch: int ) {
rank: 872
score: 95.90155029296875
patch: Assert ;
rank: 873
score: 98.3574930826823
patch: } } catch break ;
rank: 873
score: 98.33441162109375
patch: break ; ; finally {
rank: 873
score: 98.07032470703125
patch: validator = true ;
rank: 873
score: 97.76849365234375
patch: return ; default :
rank: 873
score: 97.691357421875
patch: outer = break ;
rank: 873
score: 97.23089599609375
patch: / * :
rank: 873
score: 95.89550018310547
patch: else
rank: 874
score: 98.6404052734375
patch: validator . report CaMeL
rank: 874
score: 98.33279418945312
patch: case $STRING$ : break ;
rank: 874
score: 98.06700439453125
patch: validator . set CaMeL
rank: 874
score: 97.690283203125
patch: popup = false ;
rank: 874
score: 97.2275161743164
patch: { return ;
rank: 874
score: 95.89366658528645
patch: text ;
rank: 875
score: 98.35513305664062
patch: break ; false * /
rank: 875
score: 98.01390380859375
patch: validator . child CaMeL
rank: 875
score: 97.75991821289062
patch: pos = ; ;
rank: 875
score: 97.69010009765626
patch: done = false ;
rank: 875
score: 97.22718811035156
patch: throw validator .
rank: 875
score: 95.84698486328125
patch: * ;
rank: 876
score: 98.35382080078125
patch: } else break ; }
rank: 876
score: 98.325244140625
patch: break ; * *
rank: 876
score: 98.2597147623698
patch: type = typeable ;
rank: 876
score: 97.7597427368164
patch: pos = ;
rank: 876
score: 97.68810424804687
patch: toplevel = false ;
rank: 876
score: 97.21721649169922
patch: / ) {
rank: 876
score: 95.83592732747395
patch: dim ;
rank: 877
score: 98.31558837890626
patch: break ; finally ;
rank: 877
score: 98.25779215494792
patch: typeable = ! ;
rank: 877
score: 97.99696655273438
patch: right = $STRING$ ;
rank: 877
score: 97.96517944335938
patch: if ( typeable
rank: 877
score: 97.21330261230469
patch: | false ;
rank: 877
score: 95.80618286132812
patch: try
rank: 878
score: 98.33364868164062
patch: } break ; * /
rank: 878
score: 98.30081939697266
patch: } * *
rank: 878
score: 98.24378458658855
patch: JS CaMeL Type left ;
rank: 878
score: 97.75173950195312
patch: height = ;
rank: 878
score: 97.68541259765625
patch: horizontal = false ;
rank: 878
score: 97.1899922688802
patch: loop ;
rank: 878
score: 95.78439331054688
patch: count ;
rank: 879
score: 98.3271993001302
patch: continue ; } else ;
rank: 879
score: 98.2949447631836
patch: } * ;
rank: 879
score: 98.231689453125
patch: typeable = is CaMeL
rank: 879
score: 97.68441772460938
patch: if ( break )
rank: 879
score: 97.1853535970052
patch: try {
rank: 879
score: 95.77425130208333
patch: public ;
rank: 880
score: 98.59214564732143
patch: validator . report = true ;
rank: 880
score: 98.32313028971355
patch: } else += null ;
rank: 880
score: 98.28825073242187
patch: else break ; }
rank: 880
score: 97.95850830078125
patch: right = ensure CaMeL
rank: 880
score: 97.74471435546874
patch: type = ; ;
rank: 880
score: 97.68355102539063
patch: relative = true ;
rank: 880
score: 97.17930094401042
patch: children ;
rank: 880
score: 95.768310546875
patch: buf ;
rank: 881
score: 98.32010904947917
patch: return ; * * /
rank: 881
score: 98.28516845703125
patch: return ; ; ;
rank: 881
score: 97.91365966796874
patch: break ; / *
rank: 881
score: 97.74425048828125
patch: outer = true ;
rank: 881
score: 97.1655782063802
patch: state .
rank: 881
score: 95.7677714029948
patch: super ;
rank: 882
score: 98.57935442243304
patch: if ( validator == null )
rank: 882
score: 98.28226928710937
patch: else return break ;
rank: 882
score: 97.74256591796875
patch: this . ; ;
rank: 882
score: 97.6822998046875
patch: right = this ;
rank: 882
score: 97.14786783854167
patch: default :
rank: 882
score: 95.76106770833333
patch: ret ;
rank: 883
score: 98.302490234375
patch: } else throw break ;
rank: 883
score: 98.20949300130208
patch: if ( ! ensure CaMeL
rank: 883
score: 97.936572265625
patch: typeable ++ ;
rank: 883
score: 97.88809204101562
patch: child CaMeL Type ;
rank: 883
score: 97.73763427734374
patch: cmp = ; ;
rank: 883
score: 97.68175048828125
patch: used = false ;
rank: 883
score: 97.10896809895833
patch: VM .
rank: 884
score: 98.53782435825893
patch: if ( child CaMeL Type !=
rank: 884
score: 98.302490234375
patch: if ; * * /
rank: 884
score: 98.2728271484375
patch: break ; ; }
rank: 884
score: 98.19547526041667
patch: ret = typeable ;
rank: 884
score: 97.93161010742188
patch: right = get CaMeL
rank: 884
score: 97.8825174967448
patch: System .
rank: 884
score: 97.73484802246094
patch: type = ;
rank: 884
score: 97.67340087890625
patch: toplevel = true ;
rank: 884
score: 97.08610026041667
patch: loop :
rank: 884
score: 95.7412109375
patch: out ;
rank: 885
score: 98.3020528157552
patch: break ; false ; ;
rank: 885
score: 98.26477661132813
patch: * break ; /
rank: 885
score: 97.91209716796875
patch: right = n ;
rank: 885
score: 97.7320327758789
patch: id = ;
rank: 885
score: 97.67083740234375
patch: break ; case else
rank: 885
score: 97.05404663085938
patch: throw {
rank: 885
score: 95.68629964192708
patch: t ;
rank: 886
score: 98.2619384765625
patch: while break ; ;
rank: 886
score: 97.73143310546875
patch: left = visit ;
rank: 886
score: 97.05218505859375
patch: else {
rank: 886
score: 95.65531412760417
patch: e ;
rank: 887
score: 98.2991231282552
patch: } catch ; return ;
rank: 887
score: 98.250390625
patch: } ++ break ;
rank: 887
score: 98.14913940429688
patch: validator . get CaMeL
rank: 887
score: 97.71776580810547
patch: v = ;
rank: 887
score: 97.66859741210938
patch: field = ; ;
rank: 887
score: 97.04520670572917
patch: do {
rank: 887
score: 95.64565022786458
patch: else else
rank: 888
score: 98.29592895507812
patch: } else { } else
rank: 888
score: 98.2501708984375
patch: } * break ;
rank: 888
score: 98.14534912109374
patch: if ( is CaMeL
rank: 888
score: 97.89903564453125
patch: validator = null ;
rank: 888
score: 97.8606201171875
patch: init ( ) ;
rank: 888
score: 97.710498046875
patch: default : ; ;
rank: 888
score: 97.03368123372395
patch: list .
rank: 888
score: 95.62283325195312
patch: 
rank: 889
score: 98.29359741210938
patch: if ; * /
rank: 889
score: 98.14305419921875
patch: report ( ) ;
rank: 889
score: 97.88525390625
patch: right = null ;
rank: 889
score: 97.8395751953125
patch: exit ( ) ;
rank: 889
score: 97.70952758789062
patch: right = insert ;
rank: 889
score: 97.6630126953125
patch: frame = break ;
rank: 889
score: 97.02194213867188
patch: tmp ;
rank: 889
score: 95.62099202473958
patch: n ;
rank: 890
score: 98.1339599609375
patch: left CaMeL Type ;
rank: 890
score: 97.70912475585938
patch: ; ; break ;
rank: 890
score: 96.97922770182292
patch: scope .
rank: 890
score: 95.6083984375
patch: break /
rank: 891
score: 98.4913330078125
patch: validator . clear ( ) ;
rank: 891
score: 98.29224853515625
patch: } } break ;
rank: 891
score: 98.24427490234375
patch: break ; 1 ;
rank: 891
score: 98.11228637695312
patch: child CaMeL Type =
rank: 891
score: 97.87125396728516
patch: break NUMBER :
rank: 891
score: 97.83402099609376
patch: break ; / :
rank: 891
score: 97.708203125
patch: id = ; ;
rank: 891
score: 96.96231079101562
patch: t .
rank: 891
score: 95.60648600260417
patch: finally ;
rank: 892
score: 98.2921142578125
patch: break ; false break ;
rank: 892
score: 98.239599609375
patch: break = false ;
rank: 892
score: 98.10360107421874
patch: cfw . expect CaMeL
rank: 892
score: 97.85174560546875
patch: break $STRING$ :
rank: 892
score: 97.83153076171875
patch: validator != null :
rank: 892
score: 97.65362548828125
patch: version = ;
rank: 892
score: 96.95992024739583
patch: / *
rank: 892
score: 95.60574340820312
patch: } finally
rank: 893
score: 98.47818429129464
patch: if ( parent instanceof Token )
rank: 893
score: 98.29066975911458
patch: } / * * /
rank: 893
score: 98.23890991210938
patch: value = null ;
rank: 893
score: 97.83037719726562
patch: System . break ;
rank: 893
score: 97.65297241210938
patch: sum = break ;
rank: 894
score: 98.47360665457589
patch: right CaMeL Type = report CaMeL
rank: 894
score: 98.28870646158855
patch: return break ; false ;
rank: 894
score: 98.23718872070313
patch: break ; ; 1
rank: 894
score: 98.06093139648438
patch: left CaMeL Type =
rank: 894
score: 97.81880493164063
patch: warn ( ) ;
rank: 894
score: 97.65226440429687
patch: left = FALSE ;
rank: 894
score: 96.94185384114583
patch: state ;
rank: 894
score: 95.58397420247395
patch: g ;
rank: 895
score: 98.2876688639323
patch: break ; null } }
rank: 895
score: 97.82626953125
patch: typeable = ;
rank: 895
score: 97.69501342773438
patch: ; ; * /
rank: 895
score: 97.65155639648438
patch: z = ; ;
rank: 895
score: 96.92875162760417
patch: break :
rank: 895
score: 95.55326334635417
patch: } ;
rank: 896
score: 98.28519694010417
patch: } finally { return ;
rank: 896
score: 97.69476928710938
patch: visible = true ;
rank: 896
score: 97.65137329101563
patch: minor = break ;
rank: 896
score: 96.9215799967448
patch: return !
rank: 896
score: 95.5361836751302
patch: msg ;
rank: 897
score: 98.28513590494792
patch: } if break ; }
rank: 897
score: 98.2165283203125
patch: else break ; *
rank: 897
score: 98.01204833984374
patch: report = false ;
rank: 897
score: 97.822607421875
patch: validator != false ;
rank: 897
score: 97.80743408203125
patch: here = false ;
rank: 897
score: 97.68347930908203
patch: ; ; ;
rank: 897
score: 97.64835205078126
patch: ef = break ;
rank: 897
score: 96.88972473144531
patch: {
rank: 897
score: 95.53162638346355
patch: area ;
rank: 898
score: 98.2843994140625
patch: ret = break ;
rank: 898
score: 98.2094970703125
patch: } while break ;
rank: 898
score: 98.0062255859375
patch: if ( true )
rank: 898
score: 97.80386962890626
patch: validator . left CaMeL
rank: 898
score: 97.79732666015624
patch: right , right ;
rank: 898
score: 97.68282318115234
patch: x = ;
rank: 898
score: 97.64613037109375
patch: used = true ;
rank: 898
score: 96.88297526041667
patch: / :
rank: 898
score: 95.518798828125
patch: iterator ;
rank: 899
score: 98.2841796875
patch: return * break ;
rank: 899
score: 97.79711303710937
patch: right CaMeL Type :
rank: 899
score: 97.78899536132812
patch: validator . is CaMeL
rank: 899
score: 97.68271484375
patch: right = add ;
rank: 899
score: 97.6446044921875
patch: horizontal = true ;
rank: 899
score: 96.88081868489583
patch: Assert .
rank: 899
score: 95.50634765625
patch: parent ;
rank: 900
score: 98.45846121651786
patch: if ( parent == false )
rank: 900
score: 98.28312174479167
patch: if ( break break ;
rank: 900
score: 97.78612060546875
patch: right ( ) ;
rank: 900
score: 97.64341735839844
patch: dim = ;
rank: 900
score: 96.87637329101562
patch: return
rank: 900
score: 95.4971211751302
patch: } try
rank: 901
score: 98.28282674153645
patch: return ; } catch ;
rank: 901
score: 98.18824462890625
patch: break = null ;
rank: 901
score: 98.00026448567708
patch: ensure CaMeL
rank: 901
score: 97.6760986328125
patch: right = append ;
rank: 901
score: 97.6426025390625
patch: unique = false ;
rank: 901
score: 96.87022908528645
patch: scope ;
rank: 901
score: 95.4925537109375
patch: } do
rank: 902
score: 98.28267415364583
patch: } else if ; else
rank: 902
score: 98.1836669921875
patch: return ; * /
rank: 902
score: 97.991162109375
patch: result = get CaMeL
rank: 902
score: 97.78263092041016
patch: break $STRING$ ;
rank: 902
score: 97.77861328125
patch: break ; case ?
rank: 902
score: 96.86377970377605
patch: continue :
rank: 902
score: 95.48343912760417
patch: / else
rank: 903
score: 98.28231811523438
patch: break ; null return ;
rank: 903
score: 98.17442626953125
patch: } else * ;
rank: 903
score: 97.98260498046875
patch: validator = expect CaMeL
rank: 903
score: 97.63873291015625
patch: visible = false ;
rank: 903
score: 96.85995483398438
patch: table .
rank: 903
score: 95.45705159505208
patch: start ;
rank: 904
score: 98.28078206380208
patch: break ; ; } }
rank: 904
score: 97.9779296875
patch: op CaMeL To CaMeL
rank: 904
score: 97.77607421875
patch: } return false ;
rank: 904
score: 97.63646850585937
patch: modified = true ;
rank: 904
score: 96.8447265625
patch: res ;
rank: 904
score: 95.37458801269531
patch: finally
rank: 905
score: 98.28007202148437
patch: if break ; }
rank: 905
score: 98.16749267578125
patch: finally ; break ;
rank: 905
score: 97.96936645507813
patch: if ( false )
rank: 905
score: 97.65101318359375
patch: x = break ;
rank: 905
score: 97.63267822265625
patch: break + 1 ;
rank: 905
score: 96.83188883463542
patch: list ;
rank: 905
score: 95.32527160644531
patch: throw
rank: 906
score: 98.27870686848958
patch: else = false ; }
rank: 906
score: 98.15529174804688
patch: break ; ; -
rank: 906
score: 97.96509399414063
patch: validator = ensure CaMeL
rank: 906
score: 97.75584716796875
patch: get CaMeL Int CaMeL
rank: 906
score: 97.63262939453125
patch: invocation = true ;
rank: 906
score: 97.62889862060547
patch: ; * /
rank: 906
score: 96.81884765625
patch: n .
rank: 906
score: 95.19125366210938
patch: do
rank: 907
score: 98.2775390625
patch: return break break ;
rank: 907
score: 98.15421142578126
patch: else break ; /
rank: 907
score: 97.62405395507812
patch: break * /
rank: 907
score: 96.80979410807292
patch: finally {
rank: 907
score: 95.0170669555664
patch: result
rank: 908
score: 98.27726236979167
patch: if break ; } else
rank: 908
score: 98.14290771484374
patch: break ; value ;
rank: 908
score: 97.76546630859374
patch: validator != false :
rank: 908
score: 96.8084716796875
patch: return ||
rank: 908
score: 94.8240737915039
patch: *
rank: 909
score: 98.27549438476562
patch: } break ; null
rank: 909
score: 98.27523803710938
patch: if ( ! false )
rank: 909
score: 98.140234375
patch: catch ( $STRING$ ?
rank: 909
score: 97.93373413085938
patch: report = true ;
rank: 909
score: 97.7501953125
patch: reset ( ) ;
rank: 909
score: 97.62849731445313
patch: ci = break ;
rank: 909
score: 97.58897399902344
patch: cmp = ;
rank: 909
score: 96.79878743489583
patch: parent .
rank: 909
score: 94.68936157226562
patch: public
rank: 910
score: 98.27475992838542
patch: } else -- break ;
rank: 910
score: 98.13930053710938
patch: catch ( $STRING$ ;
rank: 910
score: 97.62713623046875
patch: expr = ;
rank: 910
score: 97.54943084716797
patch: position = ;
rank: 910
score: 96.7702128092448
patch: index ;
rank: 910
score: 94.5352783203125
patch: ;
rank: 911
score: 98.26295979817708
patch: } if ; return ;
rank: 911
score: 97.73954010009766
patch: typeable ;
rank: 911
score: 97.67892456054688
patch: set CaMeL
rank: 911
score: 96.75586954752605
patch: result :
rank: 911
score: 94.51751708984375
patch: start
rank: 912
score: 98.26198323567708
patch: break ; return break ;
rank: 912
score: 98.24449666341145
patch: if ( ! true )
rank: 912
score: 98.12763671875
patch: value break ; ;
rank: 912
score: 97.49555969238281
patch: body = ;
rank: 912
score: 96.74110921223958
patch: m _
rank: 912
score: 94.3811264038086
patch: ret
rank: 913
score: 97.81864166259766
patch: Child left ;
rank: 913
score: 97.58445739746094
patch: match ( ;
rank: 913
score: 97.49137369791667
patch: right ;
rank: 913
score: 96.72865804036458
patch: last CaMeL
rank: 913
score: 94.34890747070312
patch: System
rank: 914
score: 98.26133219401042
patch: break break ; null ;
rank: 914
score: 98.23551432291667
patch: report ( n ) ;
rank: 914
score: 98.1206787109375
patch: } * / /
rank: 914
score: 97.81707763671875
patch: validator . create CaMeL
rank: 914
score: 97.57765197753906
patch: node = ;
rank: 914
score: 97.4842758178711
patch: detail = ;
rank: 914
score: 94.29779052734375
patch: count
rank: 915
score: 98.25345458984376
patch: break ; true ;
rank: 915
score: 98.2287841796875
patch: if ( parent ==
rank: 915
score: 98.11941528320312
patch: * break ; ;
rank: 915
score: 97.53688049316406
patch: cu = ;
rank: 915
score: 97.48370361328125
patch: default : ;
rank: 915
score: 96.70762125651042
patch: true :
rank: 915
score: 94.27171325683594
patch: pos
rank: 916
score: 98.20721435546875
patch: validator . add CaMeL
rank: 916
score: 97.812744140625
patch: if ( get CaMeL
rank: 916
score: 97.55542755126953
patch: break VOID ;
rank: 916
score: 97.51547241210938
patch: c = ;
rank: 916
score: 97.46617126464844
patch: prev = ;
rank: 916
score: 96.706787109375
patch: callbacks .
rank: 917
score: 98.2318603515625
patch: } else continue ;
rank: 917
score: 98.11836242675781
patch: } finally ;
rank: 917
score: 97.442138671875
patch: outer = ;
rank: 917
score: 96.7059834798177
patch: children .
rank: 917
score: 94.00605773925781
patch: found
rank: 918
score: 98.22825622558594
patch: } catch ;
rank: 918
score: 98.11256103515625
patch: else break break ;
rank: 918
score: 97.79486083984375
patch: this . get CaMeL
rank: 918
score: 97.49928283691406
patch: prefix = ;
rank: 918
score: 97.42976379394531
patch: n = ;
rank: 918
score: 96.7003173828125
patch: * _
rank: 918
score: 93.99358367919922
patch: c
rank: 919
score: 98.22057495117187
patch: break break ; else
rank: 919
score: 98.11088256835937
patch: break ; try ;
rank: 919
score: 97.49607849121094
patch: cb = ;
rank: 919
score: 97.41696166992188
patch: code = ;
rank: 919
score: 93.98065185546875
patch: state
rank: 920
score: 98.17943725585937
patch: validator . report (
rank: 920
score: 98.10552978515625
patch: } ] break ;
rank: 920
score: 97.67453002929688
patch: get CaMeL
rank: 920
score: 97.4905776977539
patch: typeable =
rank: 920
score: 97.39361572265625
patch: * / ;
rank: 920
score: 96.68058268229167
patch: o .
rank: 920
score: 93.92155456542969
patch: @
rank: 921
score: 98.104931640625
patch: break ; / ;
rank: 921
score: 97.63619995117188
patch: report CaMeL
rank: 921
score: 97.52970886230469
patch: = false ;
rank: 921
score: 97.4820785522461
patch: break STRING :
rank: 921
score: 97.47982788085938
patch: break 1 ;
rank: 921
score: 97.38899230957031
patch: y = ;
rank: 921
score: 96.67911783854167
patch: byte )
rank: 921
score: 93.86875915527344
patch: current
rank: 922
score: 98.1030029296875
patch: for break ; ;
rank: 922
score: 97.47775268554688
patch: pattern = ;
rank: 922
score: 97.38273620605469
patch: width = ;
rank: 922
score: 96.66475423177083
patch: item ;
rank: 922
score: 93.85520935058594
patch: type
rank: 923
score: 98.0950927734375
patch: * ; * /
rank: 923
score: 97.4547119140625
patch: else return ;
rank: 923
score: 97.38121032714844
patch: other = ;
rank: 923
score: 96.66339111328125
patch: return {
rank: 923
score: 93.85511779785156
patch: int
rank: 924
score: 98.09495239257812
patch: break * ; /
rank: 924
score: 97.46469116210938
patch: cp = ;
rank: 924
score: 97.3611831665039
patch: if ; ;
rank: 924
score: 93.85075378417969
patch: x
rank: 925
score: 98.145849609375
patch: } else = ;
rank: 925
score: 98.09471435546875
patch: value = break ;
rank: 925
score: 97.45584106445312
patch: variant = ;
rank: 925
score: 97.4021708170573
patch: Util .
rank: 925
score: 97.35859680175781
patch: h = ;
rank: 925
score: 96.63315836588542
patch: table ;
rank: 925
score: 93.84851837158203
patch: next
rank: 926
score: 98.1439453125
patch: return ; } }
rank: 926
score: 98.08973388671875
patch: else * break ;
rank: 926
score: 97.45069885253906
patch: value = ;
rank: 926
score: 97.41534423828125
patch: break parent ;
rank: 926
score: 97.39306640625
patch: throw value ;
rank: 926
score: 97.35562896728516
patch: found = ;
rank: 926
score: 96.60294596354167
patch: Collections .
rank: 926
score: 93.79716491699219
patch: max
rank: 927
score: 98.143212890625
patch: for ; break ;
rank: 927
score: 98.06410522460938
patch: if ( parent !=
rank: 927
score: 97.44831848144531
patch: format = ;
rank: 927
score: 97.4117660522461
patch: return $STRING$ :
rank: 927
score: 97.36495971679688
patch: Number left ;
rank: 927
score: 96.60127766927083
patch: throw !
rank: 927
score: 93.79042053222656
patch: top
rank: 928
score: 98.132275390625
patch: return ; null ;
rank: 928
score: 98.08230590820312
patch: else return ; ;
rank: 928
score: 98.01878051757812
patch: report ( t ,
rank: 928
score: 97.44722747802734
patch: switch ( ;
rank: 928
score: 97.34375
patch: result ; ;
rank: 928
score: 96.59866333007812
patch: elements .
rank: 928
score: 93.7841567993164
patch: last
rank: 929
score: 98.08184814453125
patch: break ; / ++
rank: 929
score: 97.43909454345703
patch: col = ;
rank: 929
score: 97.40183512369792
patch: to CaMeL
rank: 929
score: 97.40176391601562
patch: break STRING ;
rank: 929
score: 97.34083557128906
patch: binding = ;
rank: 929
score: 96.580322265625
patch: flags :
rank: 929
score: 93.78365325927734
patch: scope
rank: 930
score: 98.12418823242187
patch: return ; false ;
rank: 930
score: 98.07959594726563
patch: break ; * }
rank: 930
score: 97.38490295410156
patch: break ) {
rank: 930
score: 97.38484954833984
patch: Type left ;
rank: 930
score: 97.33942413330078
patch: validator != null
rank: 930
score: 97.30767059326172
patch: decl = ;
rank: 930
score: 96.56243896484375
patch: false :
rank: 930
score: 93.77500915527344
patch: value
rank: 931
score: 98.0772705078125
patch: break = true ;
rank: 931
score: 97.43087005615234
patch: param = ;
rank: 931
score: 97.35011800130208
patch: expect CaMeL
rank: 931
score: 97.30572509765625
patch: cached = ;
rank: 931
score: 96.55592854817708
patch: result .
rank: 932
score: 98.07640380859375
patch: finally = null ;
rank: 932
score: 97.37310791015625
patch: return VOID ;
rank: 932
score: 97.34677124023438
patch: add CaMeL
rank: 932
score: 97.29427337646484
patch: best = ;
rank: 932
score: 96.54738362630208
patch: STRING :
rank: 932
score: 93.72240447998047
patch: buf
rank: 933
score: 98.07297973632812
patch: break ; next {
rank: 933
score: 96.54520670572917
patch: buf .
rank: 933
score: 93.7005615234375
patch: end
rank: 934
score: 98.10060424804688
patch: } else ; else
rank: 934
score: 98.06234741210938
patch: index = break ;
rank: 934
score: 97.92508544921876
patch: if ( validator ==
rank: 934
score: 97.38461303710938
patch: pack ( ;
rank: 934
score: 97.34076690673828
patch: break t ;
rank: 934
score: 97.30038452148438
patch: throw $NUMBER$ ;
rank: 934
score: 97.28703308105469
patch: layout ( ;
rank: 934
score: 96.5409444173177
patch: found ;
rank: 934
score: 93.67247009277344
patch: retval
rank: 935
score: 97.91607666015625
patch: validator = this ;
rank: 935
score: 97.3393783569336
patch: continue n ;
rank: 935
score: 97.3202616373698
patch: is CaMeL
rank: 935
score: 97.28215026855469
patch: Type n ;
rank: 935
score: 97.25829315185547
patch: w = ;
rank: 935
score: 96.53770955403645
patch: loop ?
rank: 935
score: 93.66993713378906
patch: first
rank: 936
score: 97.29761505126953
patch: typeable :
rank: 936
score: 96.53765869140625
patch: v ;
rank: 936
score: 93.65415954589844
patch: boolean
rank: 937
score: 98.05555419921875
patch: -- break ; ;
rank: 937
score: 97.37521362304688
patch: view = ;
rank: 937
score: 97.33087158203125
patch: break right ;
rank: 937
score: 97.26911926269531
patch: break ; ,
rank: 937
score: 97.23572540283203
patch: contents = ;
rank: 937
score: 96.52039591471355
patch: / )
rank: 937
score: 93.59513092041016
patch: z
rank: 938
score: 98.08365478515626
patch: for break ; }
rank: 938
score: 97.30372619628906
patch: break NUMBER ;
rank: 938
score: 97.24812825520833
patch: for (
rank: 938
score: 96.50684611002605
patch: synchronized (
rank: 938
score: 93.59347534179688
patch: n
rank: 939
score: 98.05451049804688
patch: break ; error ;
rank: 939
score: 97.25054168701172
patch: Node n ;
rank: 939
score: 97.23239135742188
patch: if ( {
rank: 939
score: 97.22831726074219
patch: buf = ;
rank: 939
score: 96.50520833333333
patch: added ;
rank: 939
score: 93.560546875
patch: comp
rank: 940
score: 98.07537841796875
patch: } / * /
rank: 940
score: 97.35960388183594
patch: name = ;
rank: 940
score: 97.27064514160156
patch: } : {
rank: 940
score: 97.24820709228516
patch: = true ;
rank: 940
score: 97.18489074707031
patch: throw type ;
rank: 940
score: 96.5015360514323
patch: members ;
rank: 940
score: 93.53659057617188
patch: v
rank: 941
score: 97.844921875
patch: validator = validator ;
rank: 941
score: 97.35296630859375
patch: if ; else
rank: 941
score: 97.23227945963542
patch: LOG .
rank: 941
score: 97.2196273803711
patch: indent ( ;
rank: 941
score: 96.49833170572917
patch: return &&
rank: 941
score: 93.52507019042969
patch: item
rank: 942
score: 98.051611328125
patch: finally { value ;
rank: 942
score: 97.35186004638672
patch: break TRUE ;
rank: 942
score: 97.24541473388672
patch: } / *
rank: 942
score: 97.2204360961914
patch: * * /
rank: 942
score: 97.21791076660156
patch: condition = ;
rank: 942
score: 96.49294026692708
patch: outer ;
rank: 942
score: 93.51592254638672
patch: y
rank: 943
score: 98.02330322265625
patch: break ; null }
rank: 943
score: 97.83245849609375
patch: * / break ;
rank: 943
score: 97.35042572021484
patch: text = ;
rank: 943
score: 97.21379089355469
patch: this . ;
rank: 943
score: 97.13272094726562
patch: validator .
rank: 943
score: 96.98353068033855
patch: op CaMeL
rank: 943
score: 96.4866943359375
patch: context .
rank: 943
score: 93.50198364257812
patch: Logger
rank: 944
score: 98.04195556640624
patch: else { * /
rank: 944
score: 98.02200927734376
patch: else ; return ;
rank: 944
score: 97.8313720703125
patch: validator . throw CaMeL
rank: 944
score: 97.21357727050781
patch: success = ;
rank: 944
score: 96.97503662109375
patch: Asserts .
rank: 944
score: 96.48189290364583
patch: result ,
rank: 944
score: 93.47688293457031
patch: height
rank: 945
score: 98.03939208984374
patch: } * * }
rank: 945
score: 98.01531982421875
patch: } finally { }
rank: 945
score: 97.82745361328125
patch: validator = value ;
rank: 945
score: 97.33329772949219
patch: break return ;
rank: 945
score: 97.21179962158203
patch: } / /
rank: 945
score: 97.21078491210938
patch: init ( ;
rank: 945
score: 96.4791971842448
patch: arguments ;
rank: 945
score: 93.473388671875
patch: cur
rank: 946
score: 98.03555297851562
patch: return true ; ;
rank: 946
score: 97.9791259765625
patch: break ; $NUMBER$ ;
rank: 946
score: 97.3302001953125
patch: case break :
rank: 946
score: 97.20748901367188
patch: b = ;
rank: 946
score: 93.46168518066406
patch: val
rank: 947
score: 97.977490234375
patch: } catch ( ;
rank: 947
score: 97.70142364501953
patch: if ( }
rank: 947
score: 97.19188690185547
patch: bounds = ;
rank: 947
score: 97.16600036621094
patch: break n :
rank: 947
score: 97.0228271484375
patch: } :
rank: 947
score: 96.862060546875
patch: right =
rank: 947
score: 96.47021484375
patch: break ||
rank: 947
score: 93.44679260253906
patch: flags
rank: 948
score: 98.03401489257813
patch: } * * ?
rank: 948
score: 97.966259765625
patch: if ( break ;
rank: 948
score: 97.29594421386719
patch: icon = ;
rank: 948
score: 97.15560150146484
patch: pref = ;
rank: 948
score: 97.0065409342448
patch: log .
rank: 948
score: 96.81446329752605
patch: visit CaMeL
rank: 948
score: 96.46738688151042
patch: table _
rank: 948
score: 93.41641235351562
patch: this
rank: 949
score: 98.0330322265625
patch: * else break ;
rank: 949
score: 97.96185913085938
patch: res = break ;
rank: 949
score: 97.29077911376953
patch: way = ;
rank: 949
score: 97.15159606933594
patch: inner = ;
rank: 949
score: 96.46277872721355
patch: params ;
rank: 949
score: 93.37226867675781
patch: offset
rank: 950
score: 98.02635498046875
patch: finally = false ;
rank: 950
score: 97.28773498535156
patch: comp = ;
rank: 950
score: 96.70645141601562
patch: clear CaMeL
rank: 950
score: 96.45614624023438
patch: parameters ;
rank: 950
score: 93.33677673339844
patch: My@@
rank: 951
score: 97.2815933227539
patch: signature = ;
rank: 951
score: 97.142822265625
patch: end = ;
rank: 951
score: 96.68802897135417
patch: left =
rank: 951
score: 96.44999186197917
patch: count {
rank: 951
score: 93.33638763427734
patch: dim
rank: 952
score: 97.2806625366211
patch: max = ;
rank: 952
score: 96.68292236328125
patch: create CaMeL
rank: 952
score: 96.4438985188802
patch: scope :
rank: 952
score: 93.33575439453125
patch: s
rank: 953
score: 97.9363525390625
patch: ; if break ;
rank: 953
score: 97.27633666992188
patch: literal = ;
rank: 953
score: 97.13063049316406
patch: ref = ;
rank: 953
score: 96.85538736979167
patch: logger .
rank: 953
score: 96.66583251953125
patch: new CaMeL
rank: 953
score: 96.43817138671875
patch: res =
rank: 953
score: 93.32968139648438
patch: protected
rank: 954
score: 97.93549194335938
patch: return ; } else
rank: 954
score: 97.26748657226562
patch: hint = ;
rank: 954
score: 97.12647247314453
patch: loop : ;
rank: 954
score: 96.7589823404948
patch: } {
rank: 954
score: 96.65365600585938
patch: make CaMeL
rank: 954
score: 96.43613688151042
patch: parameters .
rank: 954
score: 93.32212829589844
patch: arg
rank: 955
score: 97.87934112548828
patch: value break ;
rank: 955
score: 97.26667022705078
patch: klass = ;
rank: 955
score: 97.1224365234375
patch: q = ;
rank: 955
score: 96.43088785807292
patch: names ;
rank: 955
score: 93.31169128417969
patch: Assert
rank: 956
score: 97.93492126464844
patch: } else }
rank: 956
score: 97.26654052734375
patch: locale = ;
rank: 956
score: 97.11676788330078
patch: bad = ;
rank: 956
score: 96.69528198242188
patch: $STRING$ :
rank: 956
score: 96.60912068684895
patch: right ,
rank: 956
score: 96.42966715494792
patch: old CaMeL
rank: 956
score: 93.30497741699219
patch: Exception
rank: 957
score: 97.26629638671875
patch: break count :
rank: 957
score: 97.1153564453125
patch: parent = ;
rank: 957
score: 96.42893473307292
patch: node .
rank: 957
score: 93.27877807617188
patch: after
rank: 958
score: 97.93409423828125
patch: return ; else ;
rank: 958
score: 97.10698699951172
patch: hierarchy = ;
rank: 958
score: 96.58652750651042
patch: do CaMeL
rank: 958
score: 96.42835489908855
patch: state {
rank: 958
score: 93.27577209472656
patch: message
rank: 959
score: 97.933984375
patch: } for break ;
rank: 959
score: 97.80805969238281
patch: catch null ;
rank: 959
score: 97.26114654541016
patch: count ++ ;
rank: 959
score: 97.10218811035156
patch: r = ;
rank: 959
score: 96.56824747721355
patch: $STRING$ ;
rank: 959
score: 96.42831420898438
patch: elements ;
rank: 959
score: 93.26667785644531
patch: line
rank: 960
score: 97.25946044921875
patch: image = ;
rank: 960
score: 97.10191345214844
patch: t = ;
rank: 960
score: 96.65769449869792
patch: code ;
rank: 960
score: 96.41636149088542
patch: result {
rank: 960
score: 93.25993347167969
patch: iterator
rank: 961
score: 97.92962036132812
patch: break ; while ;
rank: 961
score: 97.70629119873047
patch: ++ break ;
rank: 961
score: 96.91316731770833
patch: validator =
rank: 961
score: 96.63899739583333
patch: check CaMeL
rank: 961
score: 96.55364990234375
patch: ( (
rank: 961
score: 96.41615804036458
patch: i ;
rank: 961
score: 93.22908020019531
patch: context
rank: 962
score: 97.6762924194336
patch: } * ?
rank: 962
score: 97.25814819335938
patch: sum = ;
rank: 962
score: 97.09635925292969
patch: apply ; ;
rank: 962
score: 96.59883626302083
patch: right CaMeL
rank: 962
score: 96.41152954101562
patch: private String
rank: 962
score: 93.22840881347656
patch: position
rank: 963
score: 97.67237854003906
patch: while false ;
rank: 963
score: 97.25733947753906
patch: break $NUMBER$ ;
rank: 963
score: 97.09061431884766
patch: vals = ;
rank: 963
score: 93.2279281616211
patch: owner
rank: 964
score: 97.90796508789063
patch: } break break ;
rank: 964
score: 97.25692749023438
patch: flags = ;
rank: 964
score: 97.08758544921875
patch: rv = ;
rank: 964
score: 96.5412089029948
patch: init CaMeL
rank: 964
score: 96.40602620442708
patch: first CaMeL
rank: 964
score: 93.22228240966797
patch: sb
rank: 965
score: 97.9072509765625
patch: } } if ;
rank: 965
score: 97.6500015258789
patch: start break ;
rank: 965
score: 97.25057983398438
patch: relative = ;
rank: 965
score: 96.67299397786458
patch: report (
rank: 965
score: 96.39402262369792
patch: * :
rank: 965
score: 93.2168197631836
patch: before
rank: 966
score: 97.90397338867187
patch: return break ; finally
rank: 966
score: 97.63880920410156
patch: break ; value
rank: 966
score: 97.2445068359375
patch: ip = ;
rank: 966
score: 97.0874252319336
patch: length = ;
rank: 966
score: 96.53371175130208
patch: right :
rank: 966
score: 96.39278157552083
patch: children :
rank: 966
score: 93.2020492553711
patch: remaining
rank: 967
score: 97.89876708984374
patch: } } else {
rank: 967
score: 97.62229919433594
patch: finally ; ;
rank: 967
score: 97.23738098144531
patch: level = ;
rank: 967
score: 96.63807169596355
patch: validator :
rank: 967
score: 96.55891927083333
patch: validator ;
rank: 967
score: 96.3917236328125
patch: methods .
rank: 967
score: 93.19683837890625
patch: l
rank: 968
score: 97.60575103759766
patch: while null ;
rank: 968
score: 97.22763061523438
patch: style break ;
rank: 968
score: 97.08273315429688
patch: ch = ;
rank: 968
score: 96.525146484375
patch: log ;
rank: 968
score: 96.3900146484375
patch: scope {
rank: 968
score: 93.18783569335938
patch: LOG
rank: 969
score: 97.60572052001953
patch: value * /
rank: 969
score: 97.0826187133789
patch: val = ;
rank: 969
score: 96.62802124023438
patch: validator !=
rank: 969
score: 96.3953857421875
patch: ret =
rank: 969
score: 96.38954671223958
patch: fields ;
rank: 969
score: 93.18606567382812
patch: String
rank: 970
score: 97.59898376464844
patch: catch false ;
rank: 970
score: 96.89280192057292
patch: style ;
rank: 970
score: 96.47384643554688
patch: break CaMeL
rank: 970
score: 96.47300211588542
patch: ) {
rank: 970
score: 96.388671875
patch: count :
rank: 970
score: 93.1816177368164
patch: code
rank: 971
score: 97.59089660644531
patch: return ; *
rank: 971
score: 97.07752990722656
patch: self = ;
rank: 971
score: 96.87559000651042
patch: if ;
rank: 971
score: 96.3709208170573
patch: process CaMeL
rank: 971
score: 93.17158508300781
patch: b
rank: 972
score: 97.0761489868164
patch: scale ( ;
rank: 972
score: 96.80096435546875
patch: bottom ;
rank: 972
score: 96.44405110677083
patch: Utils .
rank: 972
score: 96.3822021484375
patch: names .
rank: 972
score: 96.36611938476562
patch: load CaMeL
rank: 972
score: 93.16398620605469
patch: text
rank: 973
score: 97.58755493164062
patch: break ; next
rank: 973
score: 97.06998443603516
patch: target = ;
rank: 973
score: 96.79433186848958
patch: break )
rank: 973
score: 96.3818359375
patch: vars ;
rank: 973
score: 96.37080891927083
patch: break ,
rank: 973
score: 93.16343688964844
patch: default
rank: 974
score: 97.06979370117188
patch: bottom ; ;
rank: 974
score: 96.38177490234375
patch: attributes ;
rank: 974
score: 96.32358805338542
patch: on CaMeL
rank: 974
score: 93.15074157714844
patch: loc
rank: 975
score: 97.58031463623047
patch: } finally {
rank: 975
score: 96.3787841796875
patch: type ;
rank: 975
score: 96.31402587890625
patch: NEG :
rank: 975
score: 93.15042114257812
patch: error
rank: 976
score: 97.5494155883789
patch: break ; null
rank: 976
score: 97.06840515136719
patch: encoding = ;
rank: 976
score: 96.73984781901042
patch: cb ;
rank: 976
score: 96.36890665690105
patch: true ?
rank: 976
score: 96.30858357747395
patch: left ;
rank: 976
score: 93.15021514892578
patch: event
rank: 977
score: 97.56364440917969
patch: else continue ;
rank: 977
score: 97.05670166015625
patch: answer = ;
rank: 977
score: 96.71518961588542
patch: cmp ;
rank: 977
score: 96.3687744140625
patch: break ?
rank: 977
score: 96.31711832682292
patch: and :
rank: 977
score: 96.30072021484375
patch: matches CaMeL
rank: 977
score: 93.15010833740234
patch: r
rank: 978
score: 97.04961395263672
patch: loop ; ;
rank: 978
score: 96.70958455403645
patch: match ;
rank: 978
score: 96.36587524414062
patch: while (
rank: 978
score: 93.14308166503906
patch: h
rank: 979
score: 96.70584106445312
patch: apply ;
rank: 979
score: 96.36287434895833
patch: true {
rank: 979
score: 96.30389404296875
patch: local CaMeL
rank: 979
score: 93.14197540283203
patch: out
rank: 980
score: 97.5181655883789
patch: return * /
rank: 980
score: 97.04833221435547
patch: mid = ;
rank: 980
score: 96.35455322265625
patch: flags ;
rank: 980
score: 96.28817749023438
patch: s .
rank: 980
score: 93.13948059082031
patch: bounds
rank: 981
score: 97.04205322265625
patch: callback . ;
rank: 981
score: 96.67919921875
patch: show ;
rank: 981
score: 96.20351155598958
patch: false ,
rank: 981
score: 93.11408996582031
patch: res
rank: 982
score: 97.50021362304688
patch: index * /
rank: 982
score: 97.41275024414062
patch: else { }
rank: 982
score: 97.03873443603516
patch: expression = ;
rank: 982
score: 96.66084798177083
patch: case ;
rank: 982
score: 96.33811442057292
patch: expr ;
rank: 982
score: 96.26807657877605
patch: validator ==
rank: 982
score: 96.1954345703125
patch: true ,
rank: 982
score: 93.11261749267578
patch: msg
rank: 983
score: 97.49095916748047
patch: else * /
rank: 983
score: 97.41023254394531
patch: } while ;
rank: 983
score: 96.337890625
patch: exception ;
rank: 983
score: 96.27138264973958
patch: out _
rank: 983
score: 96.173095703125
patch: } return
rank: 983
score: 93.0908203125
patch: =
rank: 984
score: 97.03738403320312
patch: collator = ;
rank: 984
score: 96.55996704101562
patch: field ;
rank: 984
score: 96.25840250651042
patch: out ,
rank: 984
score: 93.07894134521484
patch: best
rank: 985
score: 97.48011016845703
patch: value * ;
rank: 985
score: 97.34068298339844
patch: } synchronized ;
rank: 985
score: 97.0352783203125
patch: work = ;
rank: 985
score: 96.47701009114583
patch: filter ;
rank: 985
score: 96.3318379720052
patch: body ;
rank: 985
score: 96.25489298502605
patch: current CaMeL
rank: 985
score: 95.022705078125
patch: Token
rank: 985
score: 93.07159423828125
patch: prev
rank: 986
score: 97.47434997558594
patch: loop * /
rank: 986
score: 97.32256317138672
patch: return return ;
rank: 986
score: 97.02997589111328
patch: exp = ;
rank: 986
score: 96.47556559244792
patch: format ;
rank: 986
score: 96.328857421875
patch: target .
rank: 986
score: 95.44207000732422
patch: validator
rank: 986
score: 93.05967712402344
patch: t
rank: 987
score: 97.46952056884766
patch: break ; ?
rank: 987
score: 97.02726745605469
patch: contents . ;
rank: 987
score: 96.42090861002605
patch: layout ;
rank: 987
score: 96.32615152994792
patch: return _
rank: 987
score: 94.81425476074219
patch: ,
rank: 987
score: 93.01831817626953
patch: cached
rank: 988
score: 97.39129638671875
patch: break {
rank: 988
score: 97.02426147460938
patch: loaded = ;
rank: 988
score: 96.3236083984375
patch: i .
rank: 988
score: 94.55354309082031
patch: !
rank: 988
score: 93.00994110107422
patch: name
rank: 989
score: 97.02275085449219
patch: orb . ;
rank: 989
score: 96.4053955078125
patch: parse ;
rank: 989
score: 94.21073150634766
patch: case
rank: 989
score: 92.99491882324219
patch: super
rank: 990
score: 96.9149678548177
patch: ; ;
rank: 990
score: 92.99434661865234
patch: a
rank: 991
score: 96.38402303059895
patch: include ;
rank: 991
score: 95.72760772705078
patch: continue
rank: 991
score: 95.23274993896484
patch: and
rank: 991
score: 94.09127807617188
patch: Set
rank: 991
score: 92.99040222167969
patch: content
rank: 992
score: 94.74418640136719
patch: typ@@
rank: 992
score: 94.42596435546875
patch: new
rank: 992
score: 92.98509979248047
patch: index
rank: 993
score: 96.3564453125
patch: synchronize ;
rank: 993
score: 95.39263916015625
patch: _
rank: 993
score: 94.86001586914062
patch: :
rank: 993
score: 94.40438842773438
patch: long
rank: 993
score: 92.95631408691406
patch: width
rank: 994
score: 96.8804931640625
patch: break .
rank: 994
score: 96.3480224609375
patch: literal ;
rank: 994
score: 95.18785095214844
patch: Flag
rank: 994
score: 94.7158203125
patch: .
rank: 994
score: 94.34971618652344
patch: assert
rank: 995
score: 96.8253682454427
patch: } *
rank: 995
score: 96.34275309244792
patch: pattern ;
rank: 995
score: 95.01063537597656
patch: loop
rank: 995
score: 93.75370025634766
patch: List
rank: 995
score: 92.91555786132812
patch: q
rank: 996
score: 96.32979329427083
patch: import ;
rank: 996
score: 94.864501953125
patch: true
rank: 996
score: 94.46785736083984
patch: Writer
rank: 996
score: 94.23745727539062
patch: void
rank: 996
score: 92.91502380371094
patch: ?
rank: 997
score: 96.32460530598958
patch: popup ;
rank: 997
score: 94.85662841796875
patch: Effect
rank: 997
score: 92.88194274902344
patch: Throwable
rank: 998
score: 96.14884440104167
patch: catch ;
rank: 998
score: 94.73263549804688
patch: ]
rank: 998
score: 94.23452758789062
patch: we
rank: 998
score: 92.88017272949219
patch: parent
rank: 999
score: 93.7660903930664
patch: Object
rank: 999
score: 92.87301635742188
patch: expr
rank: 1000
score: 94.65959930419922
patch: ++
rank: 1000
score: 92.85814666748047
patch: token
