rank: 1
score: 99.9444071451823
patch: switch ( parent . get CaMeL Type ( ) ) {
rank: 1
score: 99.77659696691177
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR :
rank: 1
score: 99.74448464133523
patch: switch ( parent . get CaMeL Type ( ) )
rank: 2
score: 99.80137125651042
patch: switch ( n . get CaMeL Type ( ) ) {
rank: 2
score: 99.76509915865384
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 2
score: 99.76417300575658
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR :
rank: 2
score: 99.72792746803977
patch: switch ( n . get CaMeL Type ( ) )
rank: 2
score: 99.6845703125
patch: switch ( parent . get CaMeL Type ( ) ) { *
rank: 2
score: 99.64141167534723
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 2
score: 99.58128004807692
patch: switch ( parent . get CaMeL Type ( ) ) { null
rank: 3
score: 99.74304809570313
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 3
score: 99.72312927246094
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 3
score: 99.72031537224265
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR :
rank: 3
score: 99.63828822544643
patch: switch ( parent . get CaMeL Type ( ) ) { * /
rank: 3
score: 99.61285400390625
patch: switch ( parent . get CaMeL Node ( ) . get CaMeL Type ( ) ) {
rank: 4
score: 99.74012247721355
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 4
score: 99.709716796875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 4
score: 99.70780436197917
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 4
score: 99.61402130126953
patch: switch ( parent . get CaMeL Type ( ) ) { else { * /
rank: 4
score: 99.57079467773437
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) ) {
rank: 4
score: 99.56640014648437
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) ) {
rank: 4
score: 99.55210248161765
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE :
rank: 5
score: 99.73924037388393
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 5
score: 99.70726102941177
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 5
score: 99.61259533110119
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) {
rank: 5
score: 99.55189208984375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) {
rank: 5
score: 99.53595377604167
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 5
score: 99.50824333639706
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) :
rank: 6
score: 99.73914513221153
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 6
score: 99.70577199835526
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION :
rank: 6
score: 99.68017578125
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP :
rank: 6
score: 99.61005045572917
patch: switch ( parent . get CaMeL Type ( ) ) { / * /
rank: 6
score: 99.54180908203125
patch: switch ( parent . get CaMeL Type ( ) && parent != null ) {
rank: 6
score: 99.52991485595703
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . )
rank: 6
score: 99.498046875
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE :
rank: 6
score: 99.49329376220703
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 7
score: 99.66289206112133
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 7
score: 99.59747314453125
patch: switch ( parent . get CaMeL Type ( ) ) { / * * /
rank: 7
score: 99.53804524739583
patch: switch ( parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ) {
rank: 7
score: 99.52862548828125
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) return ;
rank: 7
score: 99.49663434709821
patch: switch ( parent . get CaMeL Type ( ) ) { case )
rank: 7
score: 99.49201202392578
patch: if ( parent . get CaMeL Type ( ) != Type . TRUE ) {
rank: 8
score: 99.71245659722223
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 8
score: 99.58629789806548
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) {
rank: 8
score: 99.53794352213542
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) {
rank: 8
score: 99.52641745174633
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 8
score: 99.49038357204861
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = true ;
rank: 8
score: 99.48957375919117
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class :
rank: 9
score: 99.70994059244792
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 9
score: 99.65640419407895
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 9
score: 99.65299907483552
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF :
rank: 9
score: 99.58090645926339
patch: switch ( parent . get CaMeL Type ( ) ) { / ?
rank: 9
score: 99.53096277573529
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) {
rank: 9
score: 99.51365033318015
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) )
rank: 9
score: 99.48176879882813
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) ;
rank: 9
score: 99.47542078354779
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME :
rank: 10
score: 99.70389359085648
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 10
score: 99.68476305509868
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SETTER _ DEF :
rank: 10
score: 99.65114135742188
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) {
rank: 10
score: 99.64676666259766
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) {
rank: 10
score: 99.64516314338235
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING :
rank: 10
score: 99.58004324776786
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) ;
rank: 10
score: 99.52414279513889
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type ( ) ) {
rank: 10
score: 99.51241048177083
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) return ;
rank: 10
score: 99.48125143612133
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE :
rank: 10
score: 99.46190688189338
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL :
rank: 11
score: 99.69434611002605
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 11
score: 99.68192331414474
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN :
rank: 11
score: 99.64306640625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 11
score: 99.56548309326172
patch: switch ( parent . get CaMeL Type ( ) ) { * * * /
rank: 11
score: 99.52208754595588
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) {
rank: 11
score: 99.5106201171875
patch: switch ( n . get CaMeL Type ( ) ) { case Token . )
rank: 11
score: 99.47882690429688
patch: if ( parent . get CaMeL Type ( ) == parent . get CaMeL Type ( ) ) {
rank: 12
score: 99.51582166883681
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Parent ( ) ) {
rank: 12
score: 99.50608915441177
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) :
rank: 12
score: 99.47633361816406
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . )
rank: 12
score: 99.44603135850694
patch: if ( is CaMeL Set ) { switch ( parent . get CaMeL Type ( ) )
rank: 13
score: 99.68568638392857
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 13
score: 99.67900647615132
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP :
rank: 13
score: 99.6376953125
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 13
score: 99.55951334635417
patch: switch ( parent . get CaMeL Type ( ) ) { * * /
rank: 13
score: 99.51569213867188
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) ) {
rank: 13
score: 99.4993896484375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 14
score: 99.68110713252315
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 14
score: 99.67366849459134
patch: switch ( parent . get CaMeL First CaMeL Child ( ) )
rank: 14
score: 99.63737936580883
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 14
score: 99.62456198299633
patch: switch ( n . get CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 14
score: 99.55764770507812
patch: switch ( parent . get CaMeL Type ( ) ) { / / * /
rank: 14
score: 99.515625
patch: parent = parent . get CaMeL Type ( ) ;
rank: 14
score: 99.49535414751838
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 14
score: 99.47222541360294
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) :
rank: 14
score: 99.44044712611607
patch: switch ( n . get CaMeL Type ( ) ) { case )
rank: 15
score: 99.67544921875
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 15
score: 99.55697777157738
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) ;
rank: 15
score: 99.51484680175781
patch: switch ( parent . get CaMeL Type ( ) || parent != null ) {
rank: 15
score: 99.471533203125
patch: if ( parent . get CaMeL Class ( ) != parent . get CaMeL Type ( ) ) {
rank: 15
score: 99.43961588541667
patch: switch ( node . get CaMeL Type ( ) ) {
rank: 16
score: 99.67030552455357
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 16
score: 99.5816650390625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC :
rank: 16
score: 99.55523390997024
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) {
rank: 16
score: 99.5061279296875
patch: parent . get CaMeL Type ( ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 16
score: 99.48987534466912
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) :
rank: 16
score: 99.46839971127717
patch: if ( parent . get CaMeL Type ( ) . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 16
score: 99.4388068704044
patch: switch ( n . get CaMeL Type ( ) ) { case Token . class :
rank: 17
score: 99.62356567382812
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 17
score: 99.50071806066177
patch: switch ( get CaMeL Type ( parent ) . get CaMeL Type ( ) ) {
rank: 17
score: 99.48820665147569
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) {
rank: 17
score: 99.46767953725961
patch: switch ( parent . get CaMeL Type ( ) ) { }
rank: 18
score: 99.62309265136719
patch: if ( parent . get CaMeL Type ( ) == Token . VAR ) {
rank: 18
score: 99.5447998046875
patch: switch ( parent . get CaMeL Type ( ) ) { = null {
rank: 18
score: 99.5005594889323
patch: switch ( parent . get CaMeL Parent ( ) ) {
rank: 18
score: 99.46702575683594
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 18
score: 99.4305419921875
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . STRING _ KEY :
rank: 19
score: 99.65399460565476
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . SETTER _ DEF :
rank: 19
score: 99.61972225413604
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GETPROP :
rank: 19
score: 99.5368896484375
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) {
rank: 19
score: 99.4981689453125
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) {
rank: 19
score: 99.48549933182566
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 19
score: 99.46080780029297
patch: if ( parent . get CaMeL Type ( ) == Type . TRUE ) {
rank: 19
score: 99.42524270450367
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . TYPE :
rank: 20
score: 99.65605236235119
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 20
score: 99.61827741350446
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 20
score: 99.60908777573529
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING :
rank: 20
score: 99.52515709918478
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 20
score: 99.48506433823529
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 20
score: 99.4556023092831
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE :
rank: 20
score: 99.42092413651316
patch: if ( is CaMeL Set ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 21
score: 99.64701120476974
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NAME :
rank: 21
score: 99.61147589432566
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR :
rank: 21
score: 99.52191452752976
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent ( ) {
rank: 21
score: 99.48945922851563
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) {
rank: 21
score: 99.4552360983456
patch: switch ( parent . get CaMeL Type ( ) ) { case String . class :
rank: 22
score: 99.65215192522321
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 22
score: 99.64676339285714
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY :
rank: 22
score: 99.5616519325658
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GETTER _ DEF :
rank: 22
score: 99.5199962797619
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) ;
rank: 22
score: 99.48269473805146
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . {
rank: 22
score: 99.45448213465073
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) ?
rank: 22
score: 99.41790771484375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : {
rank: 23
score: 99.647626953125
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 23
score: 99.60221354166667
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) {
rank: 23
score: 99.51795959472656
patch: switch ( parent . get CaMeL Type ( ) ) { / true * /
rank: 23
score: 99.47833251953125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; }
rank: 23
score: 99.4759521484375
patch: switch ( get CaMeL Type ( parent ) ) {
rank: 23
score: 99.44895306755515
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE :
rank: 23
score: 99.41694910386029
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NAME :
rank: 24
score: 99.60449896918402
patch: if ( parent != null && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 24
score: 99.50614790482955
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type ( ) {
rank: 24
score: 99.4749755859375
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) {
rank: 24
score: 99.44645860460069
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = false ;
rank: 24
score: 99.4123470908717
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . MIN _ VALUE :
rank: 25
score: 99.63824172247024
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 25
score: 99.59603271484374
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 25
score: 99.55447548314145
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 25
score: 99.50602213541667
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) {
rank: 25
score: 99.47393588362068
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 25
score: 99.47248670789931
patch: switch ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) {
rank: 25
score: 99.43819580078124
patch: if ( parent . get CaMeL Class ( ) != parent . get CaMeL Class ( ) ) {
rank: 25
score: 99.40712603400735
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) {
rank: 26
score: 99.63578716077302
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC :
rank: 26
score: 99.6015625
patch: if ( n . get CaMeL Type ( ) != n . get CaMeL Type ( ) ) {
rank: 26
score: 99.59431537828948
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 26
score: 99.5050048828125
patch: switch ( parent . get CaMeL Type ( ) ) { / ? * /
rank: 26
score: 99.47356305803571
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; }
rank: 26
score: 99.43673270089286
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 26
score: 99.40669080946181
patch: if ( is CaMeL Set ) { switch ( n . get CaMeL Type ( ) )
rank: 27
score: 99.62386322021484
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 27
score: 99.5033187866211
patch: switch ( parent . get CaMeL Type ( ) ) { ) { * /
rank: 27
score: 99.46964808872768
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 27
score: 99.46278599330357
patch: switch ( parent . get CaMeL Type ( ) ) { default :
rank: 27
score: 99.4059196920956
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NULL :
rank: 28
score: 99.63331821986607
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 28
score: 99.62183779761905
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETTER _ DEF :
rank: 28
score: 99.59280395507812
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL Type ( ) ) {
rank: 28
score: 99.46830531529018
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 28
score: 99.46183776855469
patch: switch ( parent . get CaMeL Type ( ) && parent == null ) {
rank: 28
score: 99.40446202895221
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . EMPTY :
rank: 29
score: 99.61102905273438
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : {
rank: 29
score: 99.5905532836914
patch: if ( parent . get CaMeL Type ( ) == Token . GETPROP ) {
rank: 29
score: 99.58799235026042
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 29
score: 99.54110107421874
patch: switch ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) {
rank: 29
score: 99.49834442138672
patch: switch ( parent . get CaMeL Type ( ) ) { * ? * /
rank: 29
score: 99.46807861328125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 29
score: 99.46170043945312
patch: switch ( parent . get CaMeL Class ( ) ) {
rank: 29
score: 99.43214634486607
patch: switch ( parent . get CaMeL Type ( ) ) { break )
rank: 29
score: 99.39857991536458
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : )
rank: 30
score: 99.63235134548611
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 30
score: 99.61092122395833
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : {
rank: 30
score: 99.59049479166667
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 30
score: 99.496875
patch: switch ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) {
rank: 30
score: 99.4173095703125
patch: switch ( parent . get CaMeL Type ( ) ) { parent . get CaMeL Type ( ) ;
rank: 30
score: 99.39839441636029
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . NONE :
rank: 31
score: 99.63170447716347
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ;
rank: 31
score: 99.61023667279412
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . VAR :
rank: 31
score: 99.53708367598684
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) )
rank: 31
score: 99.496337890625
patch: switch ( parent . get CaMeL Type ( ) ) { else
rank: 31
score: 99.46396771599265
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) )
rank: 31
score: 99.45592730978261
patch: parent = parent . get CaMeL Type ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 31
score: 99.4159923735119
patch: switch ( parent . get CaMeL Type ( ) ) { case parent . get CaMeL Type ( ) :
rank: 31
score: 99.39598324424342
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NONE :
rank: 32
score: 99.63028971354167
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 32
score: 99.58466131036931
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL First CaMeL Child ( ) ) {
rank: 32
score: 99.46085981889205
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 32
score: 99.45505658318015
patch: switch ( get CaMeL Type ( parent . get CaMeL Type ( ) ) ) {
rank: 32
score: 99.4150390625
patch: if ( parent . get CaMeL Type ( ) != Type . class ) {
rank: 33
score: 99.62854942908653
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 33
score: 99.57953171502976
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == null ) {
rank: 33
score: 99.52696881975446
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 33
score: 99.45472935267857
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; }
rank: 33
score: 99.45357840401786
patch: super . switch ( parent . get CaMeL Type ( ) ) {
rank: 33
score: 99.413818359375
patch: if ( parent . get CaMeL Type ( ) != String . class ) {
rank: 33
score: 99.39474148220486
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : {
rank: 34
score: 99.52408854166667
patch: result = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 34
score: 99.49119262695312
patch: if ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) {
rank: 34
score: 99.45429920014881
patch: name = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 34
score: 99.45318603515625
patch: switch ( parent . get CaMeL Node ( ) ) {
rank: 34
score: 99.41134643554688
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Name ( ) ;
rank: 34
score: 99.39283662683823
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . YES :
rank: 35
score: 99.62073863636364
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL First CaMeL Child ( ) ) ;
rank: 35
score: 99.60295667146382
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 35
score: 99.56646118164062
patch: if ( n . get CaMeL Type ( ) == n . get CaMeL Type ( ) ) {
rank: 35
score: 99.52388139204545
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) {
rank: 35
score: 99.45160590277777
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) {
rank: 35
score: 99.40992954799107
patch: switch ( parent . get CaMeL Type ( ) ) { false ;
rank: 36
score: 99.59586234714673
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 36
score: 99.56498718261719
patch: if ( parent . get CaMeL Type ( ) == Token . NAME ) {
rank: 36
score: 99.48761749267578
patch: switch ( parent . get CaMeL Type ( ) ) { { * * /
rank: 36
score: 99.4486083984375
patch: switch ( parent . get CaMeL Type ( ) ) { case ? ) :
rank: 36
score: 99.40984235491071
patch: if ( parent . get CaMeL Type ( ) instanceof Type ) {
rank: 36
score: 99.38996039496527
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 37
score: 99.594580078125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 37
score: 99.57516961348684
patch: switch ( n . get CaMeL Type ( ) ) { case Token . SETTER _ DEF :
rank: 37
score: 99.55978393554688
patch: if ( n . get CaMeL Type ( ) == Token . VAR ) {
rank: 37
score: 99.5203628540039
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 37
score: 99.44817243303571
patch: try { switch ( parent . get CaMeL Type ( ) ) {
rank: 37
score: 99.40886374080883
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . TRUE :
rank: 37
score: 99.38942583869485
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . NULL :
rank: 38
score: 99.6177978515625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 38
score: 99.59449055989583
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null )
rank: 38
score: 99.5578845796131
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 38
score: 99.5200439453125
patch: try { name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 38
score: 99.48218936011905
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parent ( ) {
rank: 38
score: 99.44719102647569
patch: switch ( parent . get CaMeL Root ( ) . get CaMeL Type ( ) ) {
rank: 38
score: 99.44567260742187
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; }
rank: 38
score: 99.40841335720486
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Set = true ;
rank: 38
score: 99.38832720588235
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . NAME :
rank: 39
score: 99.61555698939732
patch: name = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 39
score: 99.5943962545956
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { {
rank: 39
score: 99.55497661389802
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . VAR :
rank: 39
score: 99.51325819227431
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 39
score: 99.48185221354167
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) .
rank: 39
score: 99.44643147786458
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Class ( ) ) {
rank: 39
score: 99.44460042317708
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 39
score: 99.40836334228516
patch: if ( parent . get CaMeL Type ( ) != Type . NONE ) {
rank: 39
score: 99.38722534179688
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; }
rank: 40
score: 99.61552211216518
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 40
score: 99.5125223795573
patch: expr = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 40
score: 99.47718505859375
patch: switch ( parent . get CaMeL Type ( ) ) { parent . get CaMeL Type ( ) {
rank: 40
score: 99.44518280029297
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . )
rank: 40
score: 99.4432956861413
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; }
rank: 40
score: 99.4053596047794
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . TYPE :
rank: 41
score: 99.61444963727679
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 41
score: 99.59067993164062
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SETTER _ DEF : {
rank: 41
score: 99.56537272135417
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 41
score: 99.54738159179688
patch: if ( parent . get CaMeL Type ( ) == n . get CaMeL Type ( ) ) {
rank: 41
score: 99.51012420654297
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 41
score: 99.4764404296875
patch: if ( parent . get CaMeL Type ( ) > parent . get CaMeL Type ( ) ) {
rank: 41
score: 99.445068359375
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) {
rank: 41
score: 99.43677435980902
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; }
rank: 41
score: 99.40497589111328
patch: if ( parent . get CaMeL Type ( ) != Type . FALSE ) {
rank: 41
score: 99.3829345703125
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 42
score: 99.54464285714286
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY :
rank: 42
score: 99.50850423177083
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 42
score: 99.47586495535714
patch: switch ( parent . get CaMeL Type ( ) ) { / /
rank: 42
score: 99.44443184988839
patch: switch ( ( parent . get CaMeL Type ( ) ) ) {
rank: 42
score: 99.43647596571181
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) ) {
rank: 42
score: 99.40237426757812
patch: switch ( parent . get CaMeL Type ( ) ) { - 0 * /
rank: 42
score: 99.38017835115132
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . ) {
rank: 43
score: 99.61181640625
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ;
rank: 43
score: 99.58575118215461
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . DEC :
rank: 43
score: 99.56182650862068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 43
score: 99.47435651506696
patch: switch ( parent . get CaMeL Type ( ) ) { / *
rank: 43
score: 99.44202338324652
patch: switch ( parent . get CaMeL Module ( ) . get CaMeL Type ( ) ) {
rank: 43
score: 99.4360018643466
patch: name = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 43
score: 99.40151079963235
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) }
rank: 43
score: 99.3782097311581
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . BLOCK :
rank: 44
score: 99.6103182705966
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 44
score: 99.54215087890626
patch: if ( n . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 44
score: 99.43965657552083
patch: switch ( parent . get CaMeL Type ( ) ) { { * /
rank: 44
score: 99.43522563733552
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) )
rank: 44
score: 99.39991670496323
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TRUE :
rank: 44
score: 99.37797466077302
patch: if ( is CaMeL Set ) { switch ( n . get CaMeL Type ( ) ) {
rank: 45
score: 99.58268657483552
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION :
rank: 45
score: 99.55842729048295
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 45
score: 99.43896484375
patch: parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 45
score: 99.4350068063447
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 45
score: 99.39990234375
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) ; }
rank: 45
score: 99.37657973345588
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ERROR :
rank: 46
score: 99.60755859375
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ) {
rank: 46
score: 99.58057358685662
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . DEC :
rank: 46
score: 99.55823625837054
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 46
score: 99.46821521577381
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent ( ) ;
rank: 46
score: 99.43466025904605
patch: type = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 46
score: 99.39950997488839
patch: if ( parent . get CaMeL Type ( ) != null ) {
rank: 46
score: 99.37627096737133
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . COMMA :
rank: 47
score: 99.55724676724138
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 47
score: 99.46798502604166
patch: switch ( parent . get CaMeL Type ( ) ) { = null ;
rank: 47
score: 99.43587239583333
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 47
score: 99.43455200195312
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 47
score: 99.39316693474265
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) ?
rank: 47
score: 99.37505744485294
patch: switch ( n . get CaMeL Type ( ) ) { case Token . parent :
rank: 48
score: 99.57861328125
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == n )
rank: 48
score: 99.53866238064236
patch: if ( n . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 48
score: 99.46773952907986
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) { else
rank: 48
score: 99.43473546645221
patch: switch ( get CaMeL Node ( parent ) . get CaMeL Type ( ) ) {
rank: 48
score: 99.39287109375
patch: switch ( parent . get CaMeL Type ( ) ) { - 1 :
rank: 48
score: 99.37456198299633
patch: switch ( n . get CaMeL Type ( ) ) { case Token . TYPE :
rank: 49
score: 99.60508375901442
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 49
score: 99.57833862304688
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 49
score: 99.55296566611842
patch: switch ( get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 49
score: 99.466796875
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type ( ) ;
rank: 49
score: 99.43213630445075
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 49
score: 99.43183898925781
patch: switch ( parent . get CaMeL Type ( ) || parent == null ) {
rank: 49
score: 99.3920669555664
patch: if ( parent . get CaMeL Type ( ) == String . class ) {
rank: 49
score: 99.374267578125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) {
rank: 50
score: 99.60391235351562
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 50
score: 99.5780029296875
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING :
rank: 50
score: 99.53507995605469
patch: if ( parent . get CaMeL Type ( ) == Token . ASSIGN ) {
rank: 50
score: 99.50031481291118
patch: int name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 50
score: 99.46595982142857
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) )
rank: 50
score: 99.43033447265626
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; }
rank: 50
score: 99.43002498851104
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . parent :
rank: 50
score: 99.38966878255208
patch: this . parent . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 50
score: 99.3740593405331
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . constructor :
rank: 51
score: 99.57780626085069
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : {
rank: 51
score: 99.53385656020221
patch: switch ( n . get CaMeL Type ( ) ) { case Token . INC :
rank: 51
score: 99.46529134114583
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE * /
rank: 51
score: 99.42943173363095
patch: parent . get CaMeL Type ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 51
score: 99.42647976345486
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) return )
rank: 51
score: 99.38909912109375
patch: if ( parent . get CaMeL Type ( ) == Type . class ) {
rank: 51
score: 99.37346335018383
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . WARNING :
rank: 52
score: 99.59957725123355
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . NAME :
rank: 52
score: 99.53046875
patch: set = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 52
score: 99.4917224702381
patch: String name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 52
score: 99.46434384300595
patch: switch ( parent . get CaMeL Type ( ) ) { += parent . get CaMeL Type ( ) {
rank: 52
score: 99.42899169921876
patch: switch ( ( parent . get CaMeL Type ( ) ) . get CaMeL Type ( ) ) {
rank: 52
score: 99.42532009548611
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 52
score: 99.38901977539062
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { * /
rank: 52
score: 99.37169189453125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) {
rank: 53
score: 99.5995703125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 53
score: 99.57576127485795
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . VAR :
rank: 53
score: 99.46360560825893
patch: switch ( parent . get CaMeL Type ( ) ) { null ;
rank: 53
score: 99.4249267578125
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 53
score: 99.42451746323529
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) *
rank: 54
score: 99.463134765625
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) ; }
rank: 54
score: 99.42437189275569
patch: name = parent . get CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 54
score: 99.36874728732639
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL : {
rank: 55
score: 99.59882555509868
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN :
rank: 55
score: 99.57301432291666
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n )
rank: 55
score: 99.54579897280092
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } break ;
rank: 55
score: 99.52849469866071
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . STRING _ KEY :
rank: 55
score: 99.48211669921875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 55
score: 99.46263122558594
patch: switch ( parent . get CaMeL Type ( ) ) { / false * /
rank: 55
score: 99.42359270368304
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( name ) ;
rank: 55
score: 99.38508875229779
patch: if ( parent . get CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 55
score: 99.36813193873355
patch: switch ( n . get CaMeL Type ( ) ) { case Type . STRING _ KEY :
rank: 56
score: 99.48196411132812
patch: path = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 56
score: 99.42280796595982
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; }
rank: 56
score: 99.4219970703125
patch: switch ( parent . get CaMeL Type ( ) && null == parent . get CaMeL Type ( ) ) {
rank: 56
score: 99.38378143310547
patch: if ( parent . get CaMeL Type ( ) == Type . FALSE ) {
rank: 56
score: 99.36714252672698
patch: switch ( n . get CaMeL Type ( ) ) { case Token . MIN _ VALUE :
rank: 57
score: 99.5963134765625
patch: type = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 57
score: 99.57076223273026
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 57
score: 99.46192568824405
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) )
rank: 57
score: 99.42135854867789
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; }
rank: 57
score: 99.4204330444336
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . )
rank: 57
score: 99.3828125
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { }
rank: 57
score: 99.36699362362133
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . parent :
rank: 58
score: 99.59619140625
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } }
rank: 58
score: 99.57049005681819
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . SETTER _ DEF : {
rank: 58
score: 99.52237955729167
patch: if ( ! parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 58
score: 99.42033585258152
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . ) {
rank: 58
score: 99.41992865668402
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; }
rank: 58
score: 99.38248697916667
patch: switch ( parent . get CaMeL Type ( ) ) { null * /
rank: 59
score: 99.59565952845982
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 59
score: 99.56978759765624
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF : {
rank: 59
score: 99.52167069284539
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP :
rank: 59
score: 99.45999145507812
patch: switch ( parent . get CaMeL Type ( ) ) { case ) * /
rank: 59
score: 99.4196268717448
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . NONE ) {
rank: 59
score: 99.41886393229167
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 59
score: 99.36536362591912
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . DELIMITER :
rank: 60
score: 99.47769775390626
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ) {
rank: 60
score: 99.4593994140625
patch: switch ( parent . get CaMeL Type ( ) ) { else { *
rank: 60
score: 99.41798909505208
patch: switch ( parent . get CaMeL State ( ) . get CaMeL Type ( ) ) {
rank: 60
score: 99.3812744140625
patch: switch ( parent . get CaMeL Type ( ) ) { true * /
rank: 61
score: 99.4180196126302
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 61
score: 99.38047281901042
patch: if ( parent . get CaMeL Type ( ) != get CaMeL Type ( ) ) {
rank: 61
score: 99.36316528320313
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; } return ;
rank: 62
score: 99.593515625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 62
score: 99.52045440673828
patch: if ( n . get CaMeL Type ( ) == Token . GETPROP ) {
rank: 62
score: 99.47528076171875
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL Next ( ) ) ;
rank: 62
score: 99.4588134765625
patch: switch ( parent . get CaMeL Type ( ) ) { = ) ;
rank: 62
score: 99.41637602306548
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != ) {
rank: 62
score: 99.37972005208333
patch: switch ( parent . get CaMeL Type ( ) ) { false * /
rank: 62
score: 99.36313348067434
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . PREFIX _ STRING :
rank: 63
score: 99.56298828125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : {
rank: 63
score: 99.5342305501302
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 63
score: 99.45855305989583
patch: switch ( parent . get CaMeL Type ( ) ) { / true :
rank: 63
score: 99.41636149088542
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . NONE ) {
rank: 63
score: 99.41594904119319
patch: type = parent . get CaMeL Type ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 63
score: 99.37914276123047
patch: if ( parent . get CaMeL Type ( ) == Type . NONE ) {
rank: 63
score: 99.36014811197917
patch: switch ( n . get CaMeL Type ( ) ) { case Token . class : {
rank: 64
score: 99.56261596679687
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION : {
rank: 64
score: 99.53363358347039
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ) {
rank: 64
score: 99.51968238467262
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . STRING _ KEY :
rank: 64
score: 99.47444291548295
patch: if ( parent . get CaMeL First CaMeL Child ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 64
score: 99.4560317993164
patch: switch ( parent ) println ( parent . get CaMeL Type ( ) ) {
rank: 64
score: 99.41635131835938
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) . get CaMeL Name ( ) ) {
rank: 64
score: 99.4155029296875
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class CaMeL Name ( ) ; }
rank: 64
score: 99.37809244791667
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Set = false ;
rank: 64
score: 99.35899658203125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) {
rank: 65
score: 99.51655505952381
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == n ) {
rank: 65
score: 99.45589870876736
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) * /
rank: 65
score: 99.41621907552083
patch: switch ( parent . get CaMeL Type ( ) ) { case ) ;
rank: 65
score: 99.41196017795139
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) return )
rank: 65
score: 99.37742919921875
patch: switch ( parent . get CaMeL Type ( ) ) { next . get CaMeL Type ( ) ;
rank: 65
score: 99.35788981119792
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : {
rank: 66
score: 99.55869750976562
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : }
rank: 66
score: 99.51531982421875
patch: if ( parent . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 66
score: 99.47161865234375
patch: token = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 66
score: 99.45433460582386
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent ( ) {
rank: 66
score: 99.41604614257812
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . NONE ) {
rank: 66
score: 99.411865234375
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; }
rank: 66
score: 99.37666320800781
patch: switch ( parent . get CaMeL Type ( ) ) { - 1 * /
rank: 66
score: 99.3573062294408
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NULL :
rank: 67
score: 99.55837083899456
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n )
rank: 67
score: 99.53228759765625
patch: is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 67
score: 99.5137939453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 67
score: 99.47084111752717
patch: return get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 67
score: 99.45283435639881
patch: switch ( parent . get CaMeL Type ( ) ) { += parent . get CaMeL Type ( ) ;
rank: 67
score: 99.41580636160714
patch: switch ( parent . get CaMeL Type ( ) ) { * ?
rank: 67
score: 99.41132061298077
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; }
rank: 67
score: 99.35661046645221
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) )
rank: 68
score: 99.55798950195313
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 68
score: 99.53227403428819
patch: if ( parent . get CaMeL Type ( ) != Token . STRING _ KEY ) {
rank: 68
score: 99.51090240478516
patch: if ( parent . get CaMeL Type ( ) == Token . INC ) {
rank: 68
score: 99.46803792317708
patch: expr = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 68
score: 99.45276460193452
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Name ( ) {
rank: 68
score: 99.4145740327381
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == ) {
rank: 68
score: 99.37547889122597
patch: if ( parent . get CaMeL Type ( ) != ) {
rank: 68
score: 99.35602416992188
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) {
rank: 69
score: 99.55783978630515
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 69
score: 99.51070731026786
patch: if ( ! parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 69
score: 99.45066139914773
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) { else
rank: 69
score: 99.41351609002976
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != ) {
rank: 69
score: 99.40977986653645
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Name ( ) ; }
rank: 69
score: 99.37531280517578
patch: if ( parent . get CaMeL Type ( ) instanceof Object [ ] ) {
rank: 69
score: 99.35571967230902
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : )
rank: 70
score: 99.58261544363839
patch: name = n . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 70
score: 99.50969381893383
patch: switch ( node . get CaMeL Type ( ) ) { case Token . VAR :
rank: 70
score: 99.46710205078125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 70
score: 99.45027378627232
patch: switch ( parent . get CaMeL Type ( ) ) { * *
rank: 70
score: 99.413232421875
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) ) {
rank: 70
score: 99.40945870535714
patch: name = parent . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 70
score: 99.37213456003289
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { }
rank: 70
score: 99.35475068933823
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 71
score: 99.556689453125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) )
rank: 71
score: 99.50541178385417
patch: if ( parent . get CaMeL Type ( ) != Name . Type . OTHER ) {
rank: 71
score: 99.41262817382812
patch: if ( parent . get CaMeL Type ( ) != switch . get CaMeL Type ( ) ) {
rank: 71
score: 99.40938313802083
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) : )
rank: 71
score: 99.370849609375
patch: switch ( parent . get CaMeL Type ( ) ) { case Object . TYPE :
rank: 72
score: 99.50528293185764
patch: if ( parent != null || parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 72
score: 99.46634347098214
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . GETTER _ DEF :
rank: 72
score: 99.44793991815476
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) .
rank: 72
score: 99.40804036458333
patch: type = Name . Type ; } switch ( n . get CaMeL Type ( ) )
rank: 72
score: 99.37049865722656
patch: if ( parent . get CaMeL Type ( ) != Type . NULL ) {
rank: 73
score: 99.58001154119319
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 73
score: 99.52717537715517
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 73
score: 99.44107818603516
patch: switch ( parent . get CaMeL Type ( ) ) { null * * /
rank: 73
score: 99.4113525390625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Parent CaMeL Node ( ) ) {
rank: 73
score: 99.40764825994319
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 73
score: 99.37005615234375
patch: if ( ! parent . get CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 73
score: 99.34916417738971
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . TRUE :
rank: 74
score: 99.50233764648438
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == null )
rank: 74
score: 99.43994140625
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) { }
rank: 74
score: 99.41077378216912
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) :
rank: 74
score: 99.40726725260417
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Root CaMeL Node ( ) ; }
rank: 74
score: 99.36971609933036
patch: if ( parent . get CaMeL Class ( ) != null ) {
rank: 75
score: 99.578076171875
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 75
score: 99.46458675986842
patch: int type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 75
score: 99.40909476902173
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . ) {
rank: 75
score: 99.40622474407327
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( name ) ; }
rank: 75
score: 99.36852155412946
patch: switch ( parent . get CaMeL Type ( ) ) { return )
rank: 75
score: 99.34800415039062
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) {
rank: 76
score: 99.46377724095395
patch: String name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 76
score: 99.43858753551136
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Type ( ) {
rank: 76
score: 99.4060391512784
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ;
rank: 76
score: 99.36713005514706
patch: switch ( parent . get CaMeL Type ( ) ) { } else { * /
rank: 76
score: 99.34772087545956
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . EMPTY :
rank: 77
score: 99.52108764648438
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . GETTER _ DEF ) {
rank: 77
score: 99.50056457519531
patch: if ( parent . get CaMeL Type ( ) != Token . VAR ) {
rank: 77
score: 99.4382657137784
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Type ( ) {
rank: 77
score: 99.40769958496094
patch: switch ( parent . get CaMeL Type ( ) ) { case ? ) {
rank: 77
score: 99.40546013327206
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 77
score: 99.34752133018092
patch: switch ( n . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NONE :
rank: 78
score: 99.57704514723558
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; return ;
rank: 78
score: 99.50045166015624
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Prop CaMeL Assign ( ) ) {
rank: 78
score: 99.45939331054687
patch: final String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 78
score: 99.43726870888158
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) { * /
rank: 78
score: 99.40751139322917
patch: switch ( parent . get CaMeL Name ( ) ) {
rank: 78
score: 99.40455932617188
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 78
score: 99.36505126953125
patch: if ( parent . get CaMeL Type ( ) != Object . class ) {
rank: 78
score: 99.34693818933823
patch: switch ( n . get CaMeL Type ( ) ) { case Token . EMPTY :
rank: 79
score: 99.57632882254464
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 79
score: 99.55111694335938
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 79
score: 99.52058490953948
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : return ;
rank: 79
score: 99.50028686523437
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) ) {
rank: 79
score: 99.4071044921875
patch: switch ( parent . get CaMeL Type ( ) && null != parent . get CaMeL Type ( ) ) {
rank: 79
score: 99.40403238932292
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 79
score: 99.36496151194854
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . FALSE :
rank: 79
score: 99.34651453354779
patch: switch ( node . get CaMeL Type ( ) ) { case Token . NONE :
rank: 80
score: 99.5728759765625
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } }
rank: 80
score: 99.51696356411638
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } break ;
rank: 80
score: 99.49962660845588
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR ;
rank: 80
score: 99.4357577237216
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) ; }
rank: 80
score: 99.4069293478261
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . ) {
rank: 80
score: 99.40355541087963
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 80
score: 99.36322784423828
patch: if ( parent . get CaMeL Type ( ) != Integer . TRUE ) {
rank: 80
score: 99.3463134765625
patch: switch ( n . get CaMeL Type ( ) ) { case Char CaMeL Sequence . ) {
rank: 81
score: 99.54824989720395
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL Type ( ) )
rank: 81
score: 99.516845703125
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) == null ) {
rank: 81
score: 99.49955822172619
patch: if ( ! n . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 81
score: 99.45534796463816
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 81
score: 99.43546549479167
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Name ( ) {
rank: 81
score: 99.40629069010417
patch: parent = parent . get CaMeL Type ( ) ; }
rank: 81
score: 99.36266371783088
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . TYPE :
rank: 81
score: 99.34543775475544
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . parent . get CaMeL Type ( ) :
rank: 82
score: 99.54477108226104
patch: if ( parent != null || parent . is CaMeL Object CaMeL Lit ( ) )
rank: 82
score: 99.49909973144531
patch: if ( n . get CaMeL Type ( ) == Token . NAME ) {
rank: 82
score: 99.4544677734375
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Name ( ) ) {
rank: 82
score: 99.43505859375
patch: switch ( parent . get CaMeL Type ( ) ) { else { * * /
rank: 82
score: 99.40624060997597
patch: switch ( ! parent . get CaMeL Type ( ) ) {
rank: 82
score: 99.40256569602273
patch: type = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 82
score: 99.34429572610294
patch: switch ( n . get CaMeL Type ( ) ) { case Token . YES :
rank: 83
score: 99.57105509440105
patch: if ( n . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) {
rank: 83
score: 99.5442138671875
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null )
rank: 83
score: 99.49829915364583
patch: if ( ! parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 83
score: 99.43331570095486
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . TYPE * /
rank: 83
score: 99.40554942255434
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . ) {
rank: 83
score: 99.40240009014423
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; }
rank: 83
score: 99.36222759046052
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) ? false :
rank: 83
score: 99.34297318892045
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; } return ;
rank: 84
score: 99.569453125
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 84
score: 99.54414295014881
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL First CaMeL Child ( ) )
rank: 84
score: 99.51484680175781
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 84
score: 99.49739990234374
patch: if ( n . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 84
score: 99.4328845796131
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Class ( ) {
rank: 84
score: 99.40460205078125
patch: switch ( ! parent . get CaMeL Type ( ) . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 84
score: 99.40083240327381
patch: type = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 84
score: 99.36210493607955
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) ) {
rank: 84
score: 99.34285481770833
patch: if ( is CaMeL Set ) switch ( parent . get CaMeL Type ( ) ) {
rank: 85
score: 99.56808471679688
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 85
score: 99.49679904513889
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 85
score: 99.43233548677884
patch: switch ( parent . get CaMeL Type ( ) ) { :
rank: 85
score: 99.40367635091145
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . NONE ) {
rank: 85
score: 99.40013485863095
patch: type = parent . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 86
score: 99.54275948660714
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . SETTER _ DEF :
rank: 86
score: 99.45185779389881
patch: int name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 86
score: 99.4033915201823
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . class ) {
rank: 86
score: 99.39992947048611
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) : )
rank: 86
score: 99.36006927490234
patch: switch ( parent . get CaMeL Type ( ) ) { false ; * /
rank: 87
score: 99.5669140625
patch: switch ( Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 87
score: 99.5419034090909
patch: if ( parent . get CaMeL Type ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 87
score: 99.49545769942434
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . ASSIGN :
rank: 87
score: 99.45068359375
patch: int type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 87
score: 99.42938523065476
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Class ( ) {
rank: 87
score: 99.40272013346355
patch: switch ( type . get CaMeL Type ( ) ) {
rank: 87
score: 99.39833762428977
patch: type = parent . get CaMeL Type ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 87
score: 99.33967729048295
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; break ; }
rank: 88
score: 99.56673490084134
patch: name = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 88
score: 99.54179050611413
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) )
rank: 88
score: 99.49476841517857
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == null ) {
rank: 88
score: 99.44774228050595
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) )
rank: 88
score: 99.42671472886029
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . name :
rank: 88
score: 99.40242309570313
patch: switch ( ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) ) {
rank: 88
score: 99.39805094401042
patch: type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ; }
rank: 88
score: 99.35767279730902
patch: if ( parent . get CaMeL Type ( ) . length ( ) == 0 ) {
rank: 88
score: 99.33951822916667
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ;
rank: 89
score: 99.54135964133523
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . VAR :
rank: 89
score: 99.49443223741319
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function ( ) ) {
rank: 89
score: 99.42556762695312
patch: switch ( parent . get CaMeL Type ( ) ) { { / * /
rank: 89
score: 99.40122477213542
patch: switch ( parent . get CaMeL Node ( ) . get CaMeL Name ( ) ) {
rank: 89
score: 99.33904670266544
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . DEFAULT :
rank: 90
score: 99.56510844983552
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 90
score: 99.54000418526786
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 90
score: 99.51254159432871
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) == null ) {
rank: 90
score: 99.42479306175595
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parent ( ) ;
rank: 90
score: 99.40094549005681
patch: switch ( ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) ) ) {
rank: 91
score: 99.56486002604167
patch: while ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 91
score: 99.53753662109375
patch: type = Name . Type . FUNCTION : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 91
score: 99.44686226222827
patch: switch ( Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) {
rank: 91
score: 99.4239834872159
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Type ( ) {
rank: 91
score: 99.39990234375
patch: switch ( parent . get CaMeL Node ( ) . get CaMeL Parent ( ) ) {
rank: 91
score: 99.3950703938802
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 91
score: 99.35750122070313
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { * /
rank: 91
score: 99.3321533203125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . constructor :
rank: 92
score: 99.5357421875
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n )
rank: 92
score: 99.48959530101104
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) ) {
rank: 92
score: 99.44596099853516
patch: while ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 92
score: 99.4239169034091
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Type ( ) ;
rank: 92
score: 99.39963785807292
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . class ) {
rank: 92
score: 99.39463454026442
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 92
score: 99.35736846923828
patch: switch ( parent . get CaMeL Type ( ) ) { false / * /
rank: 93
score: 99.56133355034723
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } break ;
rank: 93
score: 99.53550211588542
patch: type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 93
score: 99.5122491244612
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 93
score: 99.48819772820724
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) {
rank: 93
score: 99.44559733072917
patch: binding = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 93
score: 99.42353166852679
patch: switch ( parent . get CaMeL Type ( ) ) { { *
rank: 93
score: 99.3993807705966
patch: switch ( parent . get CaMeL Type ( ) || null == parent . get CaMeL Type ( ) ) {
rank: 93
score: 99.39339406866776
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) )
rank: 93
score: 99.35685729980469
patch: if ( parent . get CaMeL Type ( ) == Object . class ) {
rank: 93
score: 99.3306023092831
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . AND :
rank: 94
score: 99.5609639485677
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 94
score: 99.48776584201389
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Set ( ) ) {
rank: 94
score: 99.44456080386513
patch: int name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 94
score: 99.42296253551136
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) { else
rank: 94
score: 99.39863586425781
patch: switch ( parent . get CaMeL Type ( ) ) { case ? ) ;
rank: 94
score: 99.39298288445724
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) )
rank: 94
score: 99.35555826822916
patch: switch ( parent . get CaMeL Type ( ) ) { } * /
rank: 94
score: 99.33047824435764
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 95
score: 99.5352783203125
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . ASSIGN :
rank: 95
score: 99.51185191761364
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Parent ( ) ) {
rank: 95
score: 99.48771362304687
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : {
rank: 95
score: 99.42259579613095
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) ;
rank: 95
score: 99.39746965680804
patch: switch ( parent . get CaMeL Base CaMeL Type ( ) ) {
rank: 95
score: 99.39263916015625
patch: type = Name . Type ; } switch ( parent . get CaMeL Type ( ) )
rank: 95
score: 99.35502624511719
patch: if ( parent . get CaMeL Type ( ) != Boolean . TRUE ) {
rank: 96
score: 99.55978260869566
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } break ;
rank: 96
score: 99.53524925595238
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . STRING _ KEY :
rank: 96
score: 99.51084206321023
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Type ( ) ) {
rank: 96
score: 99.48713989257813
patch: if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 96
score: 99.44375949435764
patch: node = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 96
score: 99.41841125488281
patch: parent . set CaMeL Type ( parent . get CaMeL Type ( ) ) {
rank: 96
score: 99.39712042557566
patch: if ( parent != null ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 96
score: 99.3543212890625
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Value ( ) ;
rank: 97
score: 99.55968366350446
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 97
score: 99.53427303538604
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . GETPROP :
rank: 97
score: 99.51034943953805
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : is CaMeL Set = true ;
rank: 97
score: 99.48682925575658
patch: if ( ! is CaMeL Set && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 97
score: 99.4422607421875
patch: if ( parent . get CaMeL Type ( ) == Token . GETTER _ DEF ) {
rank: 97
score: 99.4181896391369
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Name ( ) {
rank: 97
score: 99.39696502685547
patch: switch ( parent != null || parent . get CaMeL Type ( ) ) {
rank: 97
score: 99.3536148071289
patch: switch ( parent . get CaMeL Type ( ) ) { true / * /
rank: 97
score: 99.32741970486111
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : }
rank: 98
score: 99.51028540826613
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 98
score: 99.4406982421875
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 98
score: 99.41724350873162
patch: switch ( parent . get CaMeL Type ( ) ) { * * * * /
rank: 98
score: 99.39696103050595
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == ) {
rank: 98
score: 99.39012799944196
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . {
rank: 98
score: 99.35340169270833
patch: switch ( parent . get CaMeL Type ( ) ) { - 0 :
rank: 98
score: 99.3265047940341
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type ( ) )
rank: 99
score: 99.51020364200367
patch: switch ( get CaMeL Type ( n . get CaMeL Type ( ) ) ) {
rank: 99
score: 99.4159164428711
patch: if ( parent . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 99
score: 99.3963623046875
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . class ) {
rank: 99
score: 99.38902791341145
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) ; }
rank: 99
score: 99.35247802734375
patch: switch ( parent . get CaMeL Type ( ) ) { return ;
rank: 99
score: 99.32637329101563
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case )
rank: 100
score: 99.55573064630681
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 100
score: 99.533447265625
patch: if ( parent . get CaMeL Type ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 100
score: 99.48516486672794
patch: switch ( parent . get CaMeL Name ( ) ) { case Token . VAR :
rank: 100
score: 99.4154940518466
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) { }
rank: 100
score: 99.3955142372533
patch: switch ( parent . get CaMeL Type ( ) parent . get CaMeL Type ( ) ) {
rank: 100
score: 99.38881655092592
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 100
score: 99.35242417279412
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TRUE :
rank: 100
score: 99.32610724954044
patch: switch ( n . get CaMeL Type ( ) ) { case Token . BLOCK :
rank: 101
score: 99.48503960503473
patch: if ( parent . get CaMeL Type ( ) == Name . Type . OTHER ) {
rank: 101
score: 99.437255859375
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 101
score: 99.39525146484375
patch: switch ( parent . get CaMeL Base CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 101
score: 99.38860529119319
patch: type = parent . get CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 101
score: 99.35228729248047
patch: switch ( parent . get CaMeL Type ( ) ) { } } else {
rank: 101
score: 99.32593834918478
patch: switch ( n . get CaMeL Type ( ) ) { case Token . parent . get CaMeL Type ( ) :
rank: 102
score: 99.55464477539063
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 102
score: 99.53317599826389
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP : {
rank: 102
score: 99.50707329644098
patch: if ( parent . get CaMeL Type ( ) == Type . STRING _ KEY ) {
rank: 102
score: 99.48404947916667
patch: if ( ! n . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 102
score: 99.43684692382813
patch: expr = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 102
score: 99.41533868963069
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Type ( ) {
rank: 102
score: 99.3928455171131
patch: switch ( parent . get CaMeL Type ( ) ) { case node . get CaMeL Type ( ) :
rank: 102
score: 99.388427734375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 102
score: 99.32562614889706
patch: switch ( n . get CaMeL Type ( ) ) { case Type . NONE :
rank: 103
score: 99.53294462316177
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . FUNCTION :
rank: 103
score: 99.48403785342262
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . GETTER _ DEF :
rank: 103
score: 99.4140625
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Type ( ) ;
rank: 103
score: 99.39256751019022
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Node . ) {
rank: 103
score: 99.38737718986742
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 103
score: 99.35203552246094
patch: super . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 103
score: 99.32539876302083
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . EMPTY : {
rank: 104
score: 99.53256064967105
patch: if ( parent . get CaMeL Type ( ) == n . get CaMeL Type ( ) )
rank: 104
score: 99.48274739583333
patch: is CaMeL Set = true ; type = Name . Type . SET ;
rank: 104
score: 99.41392517089844
patch: switch ( parent . get CaMeL Type ( ) ) { / * : /
rank: 104
score: 99.39220610119048
patch: parent . get CaMeL Type ( ) ; { switch ( parent . get CaMeL Type ( ) ) {
rank: 104
score: 99.38632436899039
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 104
score: 99.35191345214844
patch: if ( parent . get CaMeL Type ( ) != Type . NO ) {
rank: 104
score: 99.3251620205966
patch: switch ( node . get CaMeL Type ( ) )
rank: 105
score: 99.55362741570724
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . INC :
rank: 105
score: 99.53236083984375
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : {
rank: 105
score: 99.5059063251202
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 105
score: 99.48269813939145
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . GETPROP :
rank: 105
score: 99.43562825520833
patch: result = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 105
score: 99.41287667410714
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Name ( ) ;
rank: 105
score: 99.3914794921875
patch: switch ( parent . get CaMeL Property ( ) . get CaMeL Type ( ) ) {
rank: 105
score: 99.3848876953125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) )
rank: 105
score: 99.35142517089844
patch: System . value CaMeL Of ( parent . get CaMeL Type ( ) ) ;
rank: 106
score: 99.55335344587054
patch: rvalue = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 106
score: 99.50576895254629
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . GETTER _ DEF :
rank: 106
score: 99.41278631036931
patch: parent = parent . get CaMeL Type ( ) {
rank: 106
score: 99.39075724283855
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . class ) {
rank: 106
score: 99.38486842105263
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 106
score: 99.35102924547698
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) { else {
rank: 106
score: 99.32487657335069
patch: name = parent . get CaMeL Name ( ) ; if ( is CaMeL Set ) {
rank: 107
score: 99.55321326622597
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; return ;
rank: 107
score: 99.53141645951705
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETTER _ DEF : {
rank: 107
score: 99.47953716077302
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . VAR :
rank: 107
score: 99.43358357747395
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 107
score: 99.41106499565973
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) * /
rank: 107
score: 99.38920665922619
patch: switch ( parent . get CaMeL Type ( ) ) { case Illegal CaMeL State CaMeL Exception . ) {
rank: 107
score: 99.38406192555146
patch: type = Name . Type ; switch ( n . get CaMeL Type ( ) )
rank: 107
score: 99.35057067871094
patch: switch ( parent . get CaMeL Type ( ) ) { / * / /
rank: 107
score: 99.3246711282169
patch: switch ( n . get CaMeL Type ( ) ) { case Token . COMMA :
rank: 108
score: 99.52918590198864
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . ASSIGN :
rank: 108
score: 99.50361772017045
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Next ( ) ) {
rank: 108
score: 99.47919664884868
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . GETPROP :
rank: 108
score: 99.43336181640625
patch: name = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 108
score: 99.41069103422619
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL String ( ) {
rank: 108
score: 99.3880615234375
patch: parent = parent . get CaMeL Type ( ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 108
score: 99.38321940104167
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 108
score: 99.35043334960938
patch: if ( parent . get CaMeL Type ( ) == Type . NULL ) {
rank: 108
score: 99.32368977864583
patch: switch ( parent . get CaMeL Type ( ) ) { { case Token . NAME :
rank: 109
score: 99.55114293981481
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } return ;
rank: 109
score: 99.50280083550348
patch: is CaMeL Set = true ; switch ( n . get CaMeL Type ( ) ) {
rank: 109
score: 99.38805042613636
patch: switch ( parent . get CaMeL Type ( ) ) { value = parent . get CaMeL Type ( ) ;
rank: 109
score: 99.38235134548611
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) : {
rank: 109
score: 99.35030691964286
patch: switch ( parent . get CaMeL Type ( ) ) { true ;
rank: 109
score: 99.32367302389706
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ERROR :
rank: 110
score: 99.55106898716518
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 110
score: 99.52825606496711
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . VAR :
rank: 110
score: 99.5025050951087
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == null ) {
rank: 110
score: 99.47671329273896
patch: switch ( type . get CaMeL Type ( ) ) { case Token . VAR :
rank: 110
score: 99.38742404513889
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Node ( ) ) {
rank: 110
score: 99.3823013305664
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( )
rank: 110
score: 99.32359554893092
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . PARAM _ LIST :
rank: 111
score: 99.55007699819711
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 111
score: 99.52743326822916
patch: if ( parent . get CaMeL Type ( ) == Token . VAR )
rank: 111
score: 99.47515869140625
patch: if ( is CaMeL Set && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 111
score: 99.40932329963235
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . err :
rank: 111
score: 99.38222142269737
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 111
score: 99.34970990349265
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TRUE :
rank: 111
score: 99.32357627467105
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NAME :
rank: 112
score: 99.54915364583333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 112
score: 99.52720947265625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : }
rank: 112
score: 99.43065344769022
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 112
score: 99.40753173828125
patch: switch ( parent . get CaMeL Type ( ) ) { count = ) ;
rank: 112
score: 99.38535670230263
patch: switch ( parent . get CaMeL Property ( parent . get CaMeL Type ( ) ) ) {
rank: 112
score: 99.38160464638158
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) )
rank: 112
score: 99.34935651506696
patch: switch ( parent . get CaMeL Type ( ) ) { null }
rank: 113
score: 99.54906354631696
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( scope , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 113
score: 99.52408447265626
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 113
score: 99.5004131610577
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 113
score: 99.47389322916666
patch: if ( n . get CaMeL First CaMeL Child ( ) == n )
rank: 113
score: 99.43010147758152
patch: switch ( Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ) {
rank: 113
score: 99.40752210115132
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) / * /
rank: 113
score: 99.38494873046875
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . TRUE ) {
rank: 113
score: 99.38155517578124
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Class CaMeL Name ( ) ; }
rank: 113
score: 99.34851792279412
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) ;
rank: 113
score: 99.32289817116477
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . )
rank: 114
score: 99.54830496651786
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 114
score: 99.5
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 114
score: 99.47378058182566
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . NAME :
rank: 114
score: 99.42852492559524
patch: Type type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 114
score: 99.40743582589286
patch: switch ( parent . get CaMeL Type ( ) ) { / ;
rank: 114
score: 99.3844985961914
patch: switch ( parent . get CaMeL Type ( ) ) { next ( ) ;
rank: 114
score: 99.3813705444336
patch: Type type = parent . get CaMeL Type ( ) ; switch ( type )
rank: 114
score: 99.34848420516305
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type ( ) ) )
rank: 114
score: 99.32274105674342
patch: switch ( n . get CaMeL Type ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 115
score: 99.54808631310097
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 115
score: 99.4995750144676
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 115
score: 99.42795973557692
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) )
rank: 115
score: 99.40717107599431
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Parent ( ) {
rank: 115
score: 99.3838399251302
patch: switch ( ! parent . get CaMeL Type ( ) . contains ( parent . get CaMeL Type ( ) ) ) {
rank: 115
score: 99.38128847064394
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 115
score: 99.34750366210938
patch: if ( parent . get CaMeL Type ( ) != Integer . TYPE ) {
rank: 115
score: 99.322607421875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) { case ) :
rank: 116
score: 99.54803788034539
patch: switch ( get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 116
score: 99.49881297144397
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 116
score: 99.47206517269737
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 116
score: 99.38374837239583
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 116
score: 99.38066549862133
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VOID :
rank: 116
score: 99.3467025756836
patch: if ( parent . get CaMeL Type ( ) != Short . class ) {
rank: 116
score: 99.32016170726104
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INSTANCEOF :
rank: 117
score: 99.54778583233173
patch: type = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 117
score: 99.52167510986328
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) )
rank: 117
score: 99.498291015625
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 117
score: 99.47162224264706
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n ) ) {
rank: 117
score: 99.42774600074405
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . GETTER _ DEF :
rank: 117
score: 99.406787109375
patch: switch ( parent . get CaMeL Type ( ) ) { case ) :
rank: 117
score: 99.38360040838069
patch: switch ( parent . get CaMeL Type ( ) ) switch ( parent . get CaMeL Type ( ) ) {
rank: 117
score: 99.38033621651786
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Name ( name ) ;
rank: 117
score: 99.34647623697917
patch: if ( parent . get CaMeL Type ( ) ) {
rank: 117
score: 99.32008870442708
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : {
rank: 118
score: 99.49703543526786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 118
score: 99.47124633789062
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) { is CaMeL Set = true ;
rank: 118
score: 99.42685418379934
patch: Type type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 118
score: 99.40664493336396
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . name :
rank: 118
score: 99.38287062872024
patch: switch ( parent . get CaMeL Type ( ) ) { case n . get CaMeL Type ( ) :
rank: 118
score: 99.38032670454545
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 118
score: 99.31903076171875
patch: switch ( parent . get CaMeL Type ( ) ) { { case Token . NONE :
rank: 119
score: 99.52077229817708
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : }
rank: 119
score: 99.47052965666118
patch: switch ( node . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 119
score: 99.38008256392045
patch: String name = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 119
score: 99.34615885416666
patch: switch ( parent . get CaMeL Type ( ) ) { case ) {
rank: 119
score: 99.31851806640626
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; break ; }
rank: 120
score: 99.54636548913044
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL Next ( ) ) ) {
rank: 120
score: 99.49639214409723
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 120
score: 99.40589192708333
patch: switch ( parent . get CaMeL Type ( ) ) { += ) ;
rank: 120
score: 99.38174099392361
patch: switch ( parent . get CaMeL Node ( ) . get CaMeL Class ( ) ) {
rank: 120
score: 99.37965990149456
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 120
score: 99.34606170654297
patch: if ( parent . get CaMeL Type ( ) != Type . NOT ) {
rank: 120
score: 99.31802188648896
patch: switch ( n . get CaMeL Type ( ) ) { case Token . DELIMITER :
rank: 121
score: 99.54619891826923
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) ;
rank: 121
score: 99.51945226332721
patch: if ( parent != null && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 121
score: 99.42375102796052
patch: switch ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) )
rank: 121
score: 99.40578391335227
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Type ( ) {
rank: 121
score: 99.38036092122395
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 121
score: 99.37910730698529
patch: type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 121
score: 99.34603218410327
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type ( ) ) ;
rank: 121
score: 99.31658935546875
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NULL : {
rank: 122
score: 99.51928100585937
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) )
rank: 122
score: 99.46969401041666
patch: is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 122
score: 99.42334662543402
patch: res = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 122
score: 99.40574017693015
patch: switch ( parent . get CaMeL Type ( ) ) { else { * / }
rank: 122
score: 99.38028971354167
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . TRUE ) {
rank: 122
score: 99.37811686197917
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; )
rank: 122
score: 99.3458251953125
patch: if ( parent . get CaMeL Type ( ) instanceof String ) {
rank: 123
score: 99.5457763671875
patch: get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; type = Name . Type . SET ;
rank: 123
score: 99.5189208984375
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . GETPROP :
rank: 123
score: 99.49549865722656
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 123
score: 99.46873474121094
patch: if ( parent . get CaMeL Type ( ) != Token . GETPROP ) {
rank: 123
score: 99.42324829101562
patch: node = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 123
score: 99.40545944940476
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Class ( ) {
rank: 123
score: 99.37987263997395
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 123
score: 99.344970703125
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) break ;
rank: 123
score: 99.316162109375
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; break ;
rank: 124
score: 99.54575020926339
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 124
score: 99.51742892795139
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : ;
rank: 124
score: 99.4678955078125
patch: is CaMeL Set = true ; switch ( parent . get CaMeL Type ( ) ) {
rank: 124
score: 99.42274780273438
patch: result = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 124
score: 99.40535111860795
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) {
rank: 124
score: 99.37744140625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : )
rank: 124
score: 99.34404754638672
patch: switch ( parent . get CaMeL Type ( ) ) { true ; * /
rank: 124
score: 99.315673828125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . PREFIX _ STRING :
rank: 125
score: 99.51734008789063
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : ;
rank: 125
score: 99.49486194957386
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . VAR ) {
rank: 125
score: 99.46763851768092
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 125
score: 99.4052734375
patch: switch ( parent . get CaMeL Type ( ) ) { += $STRING$ ;
rank: 125
score: 99.37847900390625
patch: switch ( parent . get CaMeL Type ( ) ) { case Class ) {
rank: 125
score: 99.37680199032738
patch: name = parent . get CaMeL Name ( ) + $STRING$ + parent . get CaMeL Name ( ) ;
rank: 125
score: 99.34371948242188
patch: switch ( parent . get CaMeL Type ( ) ) { null / * /
rank: 125
score: 99.31557329963235
patch: switch ( n . get CaMeL Type ( ) ) { case Type . NAME :
rank: 126
score: 99.54397786458334
patch: is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 126
score: 99.51671346028645
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . STRING _ KEY :
rank: 126
score: 99.49454498291016
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 126
score: 99.46745954241071
patch: set = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 126
score: 99.42149861653645
patch: return get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 126
score: 99.40489908854167
patch: if ( parent . get CaMeL Type ( ) != Type . ) {
rank: 126
score: 99.37799835205078
patch: switch ( parent . get CaMeL Type ( ) && null == parent ) {
rank: 126
score: 99.34331311677632
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) ? false :
rank: 127
score: 99.54346720377605
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 127
score: 99.51547241210938
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NAME : }
rank: 127
score: 99.46638997395833
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . STRING _ KEY :
rank: 127
score: 99.41990356445312
patch: binding = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 127
score: 99.4044189453125
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . class :
rank: 127
score: 99.37799072265625
patch: ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 127
score: 99.37640380859375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . )
rank: 127
score: 99.34306335449219
patch: if ( parent . get CaMeL Type ( ) != Type . lang ) {
rank: 127
score: 99.31370634191177
patch: switch ( n . get CaMeL Type ( ) ) { case Type . NULL :
rank: 128
score: 99.41986374627976
patch: String name = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 128
score: 99.40431810461956
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Value CaMeL Type ( ) {
rank: 128
score: 99.37628173828125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ; }
rank: 128
score: 99.34289020040761
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case String . class :
rank: 128
score: 99.31311753216912
patch: switch ( n . get CaMeL Type ( ) ) { case Token . WARNING :
rank: 129
score: 99.54250616776316
patch: is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 129
score: 99.49435950969827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 129
score: 99.46525573730469
patch: if ( n . get CaMeL Type ( ) == Token . ASSIGN ) {
rank: 129
score: 99.41974555121527
patch: c = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 129
score: 99.40238952636719
patch: switch ( parent . get CaMeL Type ( ) ) { / * { /
rank: 129
score: 99.37778727213542
patch: switch ( parent . get CaMeL Scope ( ) . get CaMeL Type ( ) ) {
rank: 129
score: 99.34183995863971
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . TRUE :
rank: 129
score: 99.31246948242188
patch: switch ( parent . get CaMeL Type ( ) ) { case ) return ;
rank: 130
score: 99.51220703125
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 130
score: 99.4940773292824
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 130
score: 99.46510943244485
patch: switch ( n . get CaMeL Name ( ) ) { case Token . VAR :
rank: 130
score: 99.41903686523438
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 130
score: 99.40201822916667
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) { }
rank: 130
score: 99.37765370244566
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Node . ) {
rank: 130
score: 99.37624104817708
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 130
score: 99.31168405633224
patch: switch ( n . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NULL :
rank: 131
score: 99.54173932756696
patch: name = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 131
score: 99.49387494255515
patch: switch ( get CaMeL Type ( n . get CaMeL Next ( ) ) ) {
rank: 131
score: 99.463623046875
patch: if ( parent . get CaMeL Type ( ) . equals ( Name . Type . OTHER ) ) {
rank: 131
score: 99.41881214488636
patch: String name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 131
score: 99.40186608355978
patch: switch ( parent . get CaMeL Type ( ) ) { ++ this . parent . get CaMeL Type ( ) {
rank: 131
score: 99.37750244140625
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) return {
rank: 131
score: 99.37613932291667
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 131
score: 99.34065246582031
patch: switch ( parent . get CaMeL Type ( ) ) { else { true :
rank: 131
score: 99.31156589673913
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . NONE :
rank: 132
score: 99.54116339432566
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . DEC :
rank: 132
score: 99.51068436472039
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . VAR :
rank: 132
score: 99.49371047247024
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } break ;
rank: 132
score: 99.40178680419922
patch: switch ( parent . get CaMeL Type ( ) ) { else { * *
rank: 132
score: 99.37640380859375
patch: switch ( parent . get CaMeL Type ( ) && null != parent ) {
rank: 132
score: 99.37525893702652
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 132
score: 99.34039916992188
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL String ( ) ;
rank: 132
score: 99.31123860677083
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL : )
rank: 133
score: 99.5404385653409
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 133
score: 99.5105617357337
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == n ) {
rank: 133
score: 99.41750919117646
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . OTHER :
rank: 133
score: 99.40165201822917
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent {
rank: 133
score: 99.3756815592448
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . TRUE ) {
rank: 133
score: 99.37491336945564
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 133
score: 99.3396224975586
patch: if ( parent . get CaMeL Type ( ) != Class . class ) {
rank: 133
score: 99.31068004261364
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; } else {
rank: 134
score: 99.53955982349537
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 134
score: 99.51049126519098
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION : {
rank: 134
score: 99.49224853515625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 134
score: 99.41697998046875
patch: try { name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 134
score: 99.37483723958333
patch: type = ( Node ) parent . get CaMeL Parent ( ) ; }
rank: 134
score: 99.33910369873047
patch: switch ( parent . get CaMeL Type ( ) ) { else { false :
rank: 135
score: 99.5103759765625
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . SETTER _ DEF :
rank: 135
score: 99.40120072798295
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Parent ( ) {
rank: 135
score: 99.37471147017045
patch: parent = parent . get CaMeL Type ( ) ; } parent = parent . get CaMeL Type ( ) ;
rank: 135
score: 99.30946858723958
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) { {
rank: 136
score: 99.53848427220395
patch: is CaMeL Set = true ; type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 136
score: 99.5099853515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != null )
rank: 136
score: 99.41619873046875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 136
score: 99.4009017944336
patch: switch ( parent . get CaMeL Type ( ) ) { } / * /
rank: 136
score: 99.37453294836956
patch: switch ( parent . get CaMeL Type ( ) ) { value = parent . get CaMeL Type ( ) ; }
rank: 136
score: 99.37337239583333
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Child CaMeL Count ( ) ; }
rank: 136
score: 99.30863683363971
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) )
rank: 137
score: 99.5097888764881
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . SETTER _ DEF :
rank: 137
score: 99.49046167834052
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 137
score: 99.46171875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent . get CaMeL Type ( ) ) ;
rank: 137
score: 99.41353759765624
patch: switch ( n . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) ) {
rank: 137
score: 99.40053488991477
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Name ( ) {
rank: 137
score: 99.37406158447266
patch: switch ( parent != null && parent . get CaMeL Type ( ) ) {
rank: 137
score: 99.37332469019397
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class CaMeL Name ( ) ;
rank: 137
score: 99.3377914428711
patch: switch ( parent . get CaMeL Type ( ) ) { true * * /
rank: 137
score: 99.30853271484375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . TYPE : {
rank: 138
score: 99.53746619591347
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , scope ) ;
rank: 138
score: 99.49008178710938
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . SETTER _ DEF ) {
rank: 138
score: 99.461669921875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . SETTER _ DEF :
rank: 138
score: 99.39899553571429
patch: switch ( parent . get CaMeL Type ( ) ) { finally {
rank: 138
score: 99.37398097826087
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . parent . get CaMeL Type ( ) :
rank: 138
score: 99.37313179347827
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 138
score: 99.33678481158088
patch: if ( parent . get CaMeL Type ( ) . equals ( name ) ) {
rank: 138
score: 99.3079833984375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . PREFIX :
rank: 139
score: 99.50922185724431
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == null )
rank: 139
score: 99.48987926136364
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == null ) {
rank: 139
score: 99.46115594161184
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : return ;
rank: 139
score: 99.39864095052083
patch: switch ( parent . get CaMeL Type ( ) ) { / false :
rank: 139
score: 99.37395562065973
patch: switch ( parent . get CaMeL Type ( ) ) { { case Node . ) :
rank: 139
score: 99.37294108072916
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 139
score: 99.33676147460938
patch: if ( parent . get CaMeL Type ( ) != Short . TYPE ) {
rank: 139
score: 99.30733816964286
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) )
rank: 140
score: 99.53613999310662
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 140
score: 99.46109169407895
patch: if ( n . get CaMeL Type ( ) != n . get CaMeL Type ( ) )
rank: 140
score: 99.41230773925781
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . :
rank: 140
score: 99.3985595703125
patch: switch ( parent . get CaMeL Type ( ) ) { * { * /
rank: 140
score: 99.37183634440105
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 141
score: 99.50853329613095
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 141
score: 99.41089884440105
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Parent ( ) ) ;
rank: 141
score: 99.39850817228618
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) { * /
rank: 141
score: 99.37060546875
patch: type = parent . get CaMeL Type ( ) ; }
rank: 141
score: 99.33611297607422
patch: if ( parent . get CaMeL Type ( ) == Type . NO ) {
rank: 142
score: 99.50820025275735
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . VAR :
rank: 142
score: 99.48833264802632
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : break ;
rank: 142
score: 99.45935821533203
patch: if ( parent . get CaMeL Type ( ) == Token . Definition ) {
rank: 142
score: 99.41007133152173
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 142
score: 99.39835611979167
patch: switch ( parent . get CaMeL Type ( ) ) { = ) {
rank: 142
score: 99.37352498372395
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . TRUE ) {
rank: 142
score: 99.37060546875
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) ; }
rank: 142
score: 99.33538459329044
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . FALSE :
rank: 142
score: 99.30650419347427
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . LT :
rank: 143
score: 99.50582885742188
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != null )
rank: 143
score: 99.48825599407327
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 143
score: 99.45921630859375
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL Name ( ) ) {
rank: 143
score: 99.40955607096355
patch: switch ( parent . get CaMeL Type ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 143
score: 99.37262641059027
patch: switch ( parent . get CaMeL Type ( ) . is CaMeL Name ( ) ) {
rank: 143
score: 99.37020169771634
patch: switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 143
score: 99.3352409811581
patch: switch ( parent . get CaMeL Type ( ) ) { case Object . ) {
rank: 143
score: 99.30620374177632
patch: switch ( parent . compare CaMeL To ( parent . get CaMeL Type ( ) ) ) {
rank: 144
score: 99.53261931046195
patch: switch ( Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ) {
rank: 144
score: 99.48701746323529
patch: switch ( n . get CaMeL Type ( ) ) { case Token . DEC :
rank: 144
score: 99.45827026367188
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL Value ( ) ) {
rank: 144
score: 99.39814588758681
patch: switch ( parent . get CaMeL Type ( ) ) { get CaMeL Type ( ) ;
rank: 144
score: 99.37222144717262
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . get CaMeL Type ( ) :
rank: 144
score: 99.36964000355114
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . )
rank: 144
score: 99.33515857514881
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Name ( ) ; }
rank: 144
score: 99.3060302734375
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . EMPTY :
rank: 145
score: 99.53126831054688
patch: rvalue = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 145
score: 99.48582356770834
patch: is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 145
score: 99.45707702636719
patch: if ( parent . get CaMeL Type ( ) == Name . Type ) {
rank: 145
score: 99.40848795572917
patch: ref = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 145
score: 99.3981182391827
patch: switch ( parent . get CaMeL Type ( ) ) { /
rank: 145
score: 99.37203846807066
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Node . ) {
rank: 145
score: 99.36896383351294
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 145
score: 99.33494737413194
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE : }
rank: 145
score: 99.3060302734375
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) )
rank: 146
score: 99.53104831861413
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL Next ( ) ) ) {
rank: 146
score: 99.5047671669408
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . SETTER _ DEF :
rank: 146
score: 99.48577473958333
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ;
rank: 146
score: 99.45524766710069
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 146
score: 99.4081698330966
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL Next ( ) ) )
rank: 146
score: 99.39760044642857
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Name ( ) ;
rank: 146
score: 99.37184143066406
patch: switch ( parent . get CaMeL Type ( ) . trim ( ) ) {
rank: 146
score: 99.36878797743056
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) : {
rank: 147
score: 99.50406901041667
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 147
score: 99.48545258620689
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 147
score: 99.45392456054688
patch: switch ( ! parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . VAR :
rank: 147
score: 99.40781656901042
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 147
score: 99.39584147135416
patch: switch ( parent . get CaMeL Type ( ) ) { ++ type {
rank: 147
score: 99.37145465353261
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Node . ) {
rank: 147
score: 99.36865234375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . )
rank: 147
score: 99.30517578125
patch: if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 148
score: 99.50377133018092
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . STRING _ KEY :
rank: 148
score: 99.4846612338362
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 148
score: 99.45377022879464
patch: switch ( n . get CaMeL Type ( ) ) { default :
rank: 148
score: 99.37101915147569
patch: switch ( parent . get CaMeL Style ( ) . get CaMeL Type ( ) ) {
rank: 148
score: 99.3681640625
patch: name = parent . get CaMeL Name ( ) ; }
rank: 148
score: 99.33393787202381
patch: switch ( parent . get CaMeL Type ( ) ) { - parent . get CaMeL Type ( ) ;
rank: 148
score: 99.30455258018092
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; break ;
rank: 149
score: 99.50334028764205
patch: type = Name . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 149
score: 99.40469180836396
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . VAR :
rank: 149
score: 99.39546130952381
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Node ( ) {
rank: 149
score: 99.37037568933823
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) *
rank: 149
score: 99.367822265625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 149
score: 99.33364868164062
patch: switch ( parent . get CaMeL Type ( ) ) { null return ; }
rank: 149
score: 99.30449475740132
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . consume ( ) :
rank: 150
score: 99.52842203776042
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Parent ( ) ) ;
rank: 150
score: 99.45277163856908
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . FUNCTION :
rank: 150
score: 99.40305582682292
patch: n = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 150
score: 99.39533025568181
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parent ( ) {
rank: 150
score: 99.36777680495689
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Name ( name ) ; }
rank: 150
score: 99.33352821751645
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) )
rank: 150
score: 99.30384585731908
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : ) {
rank: 151
score: 99.52813042534723
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } return ;
rank: 151
score: 99.50259560032895
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . VAR :
rank: 151
score: 99.45242470189145
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . ASSIGN :
rank: 151
score: 99.4021484375
patch: res = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 151
score: 99.39512416294643
patch: switch ( parent . get CaMeL Type ( ) ) { null :
rank: 151
score: 99.3701171875
patch: if ( parent != null || parent . get CaMeL Type ( ) ) {
rank: 151
score: 99.36703927176339
patch: switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 151
score: 99.33280675551471
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . FALSE :
rank: 151
score: 99.3028923483456
patch: switch ( parent . get CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 152
score: 99.50239562988281
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 152
score: 99.48338317871094
patch: is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 152
score: 99.40200466579861
patch: scope = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 152
score: 99.3946468955592
patch: switch ( parent . get CaMeL Type ( ) ) { get CaMeL Type ( parent ) .
rank: 152
score: 99.3692294034091
patch: switch ( parent . get CaMeL Type ( ) ) { value = parent . get CaMeL Type ( ) {
rank: 152
score: 99.36693173363095
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ; }
rank: 152
score: 99.33275428185097
patch: switch ( parent . get CaMeL Type ( ) ) { false
rank: 153
score: 99.52759850543478
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Parent ( ) ) ) {
rank: 153
score: 99.40174624794408
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . GETTER _ DEF :
rank: 153
score: 99.36920844184027
patch: switch ( parent . get CaMeL Package ( ) . get CaMeL Type ( ) ) {
rank: 153
score: 99.36638641357422
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; }
rank: 153
score: 99.33257587139423
patch: if ( parent . get CaMeL Type ( ) == ) {
rank: 153
score: 99.30201551649306
patch: if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 154
score: 99.52711769386575
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 154
score: 99.48276881167763
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR : return ;
rank: 154
score: 99.40134684244792
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL String ( ) ) ;
rank: 154
score: 99.36898803710938
patch: switch ( parent . get CaMeL Type ( ) ) { case Location . )
rank: 154
score: 99.3646930197011
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 154
score: 99.3320083618164
patch: switch ( parent . get CaMeL Type ( ) ) { } else { }
rank: 154
score: 99.3019382642663
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ; }
rank: 155
score: 99.52701509915866
patch: is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 155
score: 99.50030158547794
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . VAR :
rank: 155
score: 99.48230997721355
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . VAR ) {
rank: 155
score: 99.39407509251645
patch: switch ( parent . get CaMeL Type ( ) ) { get CaMeL Type ( parent ) ;
rank: 155
score: 99.36882866753473
patch: switch ( parent . get CaMeL Resource ( ) . get CaMeL Type ( ) ) {
rank: 155
score: 99.33188883463542
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = ) ;
rank: 155
score: 99.30124080882354
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . LE :
rank: 156
score: 99.52685546875
patch: if ( parent . get CaMeL First CaMeL Child ( ) < n . get CaMeL First CaMeL Child ( ) ) {
rank: 156
score: 99.500244140625
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 156
score: 99.39946432674633
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NOT :
rank: 156
score: 99.39329892113095
patch: switch ( parent . get CaMeL Type ( ) ) { parent . get CaMeL Type ( ) ; }
rank: 156
score: 99.36856882195724
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) {
rank: 156
score: 99.36378580729166
patch: switch ( parent . get CaMeL Type ( ) ) { case Token )
rank: 156
score: 99.33149065290179
patch: if ( parent . get CaMeL String ( ) != null ) {
rank: 156
score: 99.30033605238971
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . DEFAULT :
rank: 157
score: 99.52647047776442
patch: value = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 157
score: 99.48127693965517
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 157
score: 99.45003933376736
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR : {
rank: 157
score: 99.39801897321429
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . SETTER _ DEF :
rank: 157
score: 99.36825900607639
patch: parent . get CaMeL Type ( ) { parent . get CaMeL Type ( ) ; }
rank: 157
score: 99.36365356445313
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY : )
rank: 157
score: 99.33147430419922
patch: if ( parent . get CaMeL Type ( ) != Integer . class ) {
rank: 157
score: 99.29975442325367
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . YES :
rank: 158
score: 99.5257568359375
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 158
score: 99.4988125887784
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . NAME :
rank: 158
score: 99.48003186677632
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 158
score: 99.44943719161184
patch: switch ( get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 158
score: 99.39773220486111
patch: result = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 158
score: 99.39256702769886
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Type ( ) ;
rank: 158
score: 99.36813354492188
patch: switch ( this . get CaMeL Type ( ) ) {
rank: 158
score: 99.29764404296876
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY ) :
rank: 159
score: 99.5254657451923
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 159
score: 99.49775834517045
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY : }
rank: 159
score: 99.4799296061198
patch: if ( n . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 159
score: 99.44916062127976
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == n ) {
rank: 159
score: 99.39245024181548
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) { else
rank: 159
score: 99.36782997532895
patch: switch ( ! parent . get CaMeL Type ( ) . is CaMeL Name ( ) ) {
rank: 159
score: 99.36331380208334
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; {
rank: 159
score: 99.29664306640625
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; } else {
rank: 160
score: 99.49770636307566
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . OTHER :
rank: 160
score: 99.47920949835526
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . STRING :
rank: 160
score: 99.44850158691406
patch: if ( parent . get CaMeL Type ( ) != Name . Type ) {
rank: 160
score: 99.3970059481534
patch: int type = Name . Type . FUNCTION ? Name . Type . OTHER : Name . Type . OTHER ;
rank: 160
score: 99.39014781605114
patch: switch ( parent . get CaMeL Type ( ) ) { key = parent . get CaMeL Type ( ) {
rank: 160
score: 99.36780724158653
patch: switch ( parent . get CaMeL Type ( ) ) { {
rank: 160
score: 99.329345703125
patch: switch ( parent . get CaMeL Type ( ) ) { case parent . get CaMeL String CaMeL Value ( ) :
rank: 160
score: 99.29573197798295
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) { case Token . ) :
rank: 161
score: 99.52428260216347
patch: key = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 161
score: 99.4975918856534
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . ASSIGN :
rank: 161
score: 99.47849439538044
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR : is CaMeL Set = true ;
rank: 161
score: 99.44817243303571
patch: if ( is CaMeL Object CaMeL Lit ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 161
score: 99.3967815896739
patch: switch ( Node CaMeL Util . get CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ) {
rank: 161
score: 99.38982282366071
patch: switch ( parent . get CaMeL Type ( ) ) { $NUMBER$ :
rank: 161
score: 99.36619466145834
patch: switch ( ( Type ) parent . get CaMeL Type ( ) ) {
rank: 161
score: 99.3619025735294
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ;
rank: 161
score: 99.32909438189338
patch: if ( parent . get CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 161
score: 99.29543050130208
patch: throw new Runtime CaMeL Exception ( $STRING$ + parent . get CaMeL Type ( ) ) ;
rank: 162
score: 99.52416087962963
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } else {
rank: 162
score: 99.49728054470486
patch: if ( parent . get CaMeL Type ( ) == Token . SETTER _ DEF ) {
rank: 162
score: 99.39620811060855
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . STRING _ KEY :
rank: 162
score: 99.38934326171875
patch: switch ( parent . get CaMeL Type ( ) ) { null = null {
rank: 162
score: 99.36079463252315
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 162
score: 99.32897186279297
patch: if ( parent . get CaMeL Type ( ) . equals ( ) ) {
rank: 162
score: 99.29483795166016
patch: switch ( parent . get CaMeL Type ( ) . equals ( $STRING$ ) )
rank: 163
score: 99.52402907151442
patch: parent = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 163
score: 99.49718627929687
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 163
score: 99.47779192243304
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) == null )
rank: 163
score: 99.44789341517857
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) { {
rank: 163
score: 99.39580743963069
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) {
rank: 163
score: 99.36575082632211
patch: switch ( parent . get CaMeL Type ( ) ) { ?
rank: 163
score: 99.32870881453805
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case String . class :
rank: 164
score: 99.523681640625
patch: type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 164
score: 99.49704461348684
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) )
rank: 164
score: 99.47693452380952
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == null ) {
rank: 164
score: 99.44762573242187
patch: if ( n . get CaMeL Type ( ) != n . get CaMeL Value ( ) ) {
rank: 164
score: 99.39571126302083
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 164
score: 99.38884943181819
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent ( ) ;
rank: 164
score: 99.36046645220588
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . REGEXP :
rank: 164
score: 99.328369140625
patch: if ( parent . get CaMeL Type ( ) != Boolean . TYPE ) {
rank: 164
score: 99.29408023231908
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . FUNCTION :
rank: 165
score: 99.49611302425987
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . SETTER _ DEF :
rank: 165
score: 99.44759368896484
patch: if ( n . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 165
score: 99.39565207741477
patch: int name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 165
score: 99.38833182198661
patch: switch ( parent . get CaMeL Type ( ) ) { { ?
rank: 165
score: 99.36478424072266
patch: switch ( parent . get CaMeL Type ( ) ) { case ? $NUMBER$ :
rank: 165
score: 99.36037772042411
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Type ( name ) ;
rank: 165
score: 99.32833059210526
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) ? true :
rank: 165
score: 99.29399956597223
patch: if ( is CaMeL Set ) switch ( n . get CaMeL Type ( ) ) {
rank: 166
score: 99.52239520733173
patch: name = n . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 166
score: 99.49554443359375
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION : }
rank: 166
score: 99.4766045932112
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL
rank: 166
score: 99.44730834960937
patch: if ( parent . get CaMeL Type ( ) != scope . get CaMeL Type ( ) ) {
rank: 166
score: 99.38719593394886
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Parent ( ) {
rank: 166
score: 99.36312255859374
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Parent ( ) ) {
rank: 166
score: 99.3282470703125
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) ? / :
rank: 166
score: 99.29355755974265
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GT :
rank: 167
score: 99.49493963068181
patch: type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 167
score: 99.44685872395833
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) != null ) {
rank: 167
score: 99.3946597450658
patch: else name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 167
score: 99.38632347470238
patch: switch ( parent . get CaMeL Type ( ) ) { += parent . get CaMeL Name ( ) {
rank: 167
score: 99.363037109375
patch: switch ( parent . get CaMeL Type ( ) || null != parent . get CaMeL Type ( ) ) {
rank: 167
score: 99.360009765625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 167
score: 99.32814654181985
patch: switch ( parent . get CaMeL Type ( ) ) { case Object . ) :
rank: 167
score: 99.29338921440973
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . NULL : {
rank: 168
score: 99.49493049172794
patch: if ( parent . get CaMeL Type ( ) == Token . SETTER _ DEF )
rank: 168
score: 99.4760272686298
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . GETTER _ DEF ) {
rank: 168
score: 99.39461477179276
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) )
rank: 168
score: 99.38548278808594
patch: switch ( parent ) println ( parent . get CaMeL Type ( ) ) ;
rank: 168
score: 99.36231282552083
patch: switch ( parent . get CaMeL Type ( ) ) { default : {
rank: 168
score: 99.35916341145834
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 168
score: 99.326904296875
patch: if ( parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 168
score: 99.29314221833882
patch: switch ( parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ) {
rank: 169
score: 99.51964801290761
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Type ( ) ) ) {
rank: 169
score: 99.4462646484375
patch: switch ( parent . get CaMeL Type ( ) ) return ; case Token . STRING _ KEY :
rank: 169
score: 99.39333274147727
patch: switch ( Node CaMeL Util . get CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 169
score: 99.38506789434524
patch: switch ( parent . get CaMeL Type ( ) ) { |= parent . get CaMeL Type ( ) ;
rank: 169
score: 99.36226160386029
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) *
rank: 169
score: 99.35912244073276
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 169
score: 99.32670593261719
patch: switch ( parent . get CaMeL Type ( ) ) { false * * /
rank: 169
score: 99.29160443474265
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . constructor :
rank: 170
score: 99.51837627704327
patch: get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; type = Name . Type . OTHER ;
rank: 170
score: 99.47547325721153
patch: switch ( parent . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) :
rank: 170
score: 99.44614129317434
patch: switch ( type . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 170
score: 99.39251030815973
patch: root = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 170
score: 99.38473074776786
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Name ( ) ;
rank: 170
score: 99.36203342013889
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Value ( ) ) {
rank: 170
score: 99.35829467773438
patch: name = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; }
rank: 170
score: 99.32662200927734
patch: if ( parent . get CaMeL Type ( ) == Short . TYPE ) {
rank: 171
score: 99.51654730902777
patch: name = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 171
score: 99.49295043945312
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : {
rank: 171
score: 99.44603271484375
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL Next ( ) ) {
rank: 171
score: 99.39222301136364
patch: switch ( Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) )
rank: 171
score: 99.38468424479167
patch: switch ( parent . get CaMeL Type ( ) ) { > parent . get CaMeL Type ( ) ;
rank: 171
score: 99.36163940429688
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Parent ( ) ) {
rank: 171
score: 99.3581640625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 171
score: 99.32658305921052
patch: switch ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) { }
rank: 172
score: 99.51615574048913
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } return ;
rank: 172
score: 99.4749820106908
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING : return ;
rank: 172
score: 99.39205496651786
patch: int type = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 172
score: 99.38419189453126
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) )
rank: 172
score: 99.36098410866477
patch: parent = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 172
score: 99.32648064108456
patch: switch ( parent . get CaMeL Type ( ) ) { case String . FALSE :
rank: 172
score: 99.29082174862133
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FALSE :
rank: 173
score: 99.49284561820652
patch: if ( parent != null || parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 173
score: 99.39200846354167
patch: Type name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 173
score: 99.38389369419643
patch: switch ( parent . get CaMeL Type ( ) ) { * ;
rank: 173
score: 99.36056857638889
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Parent ( ) ) {
rank: 173
score: 99.35773577008929
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ;
rank: 173
score: 99.28992309570313
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case )
rank: 174
score: 99.49263139204545
patch: name = n . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 174
score: 99.39195556640625
patch: String name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL String ( ) ;
rank: 174
score: 99.3602294921875
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Parent ( ) != null ) {
rank: 174
score: 99.35691431949013
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; break ;
rank: 174
score: 99.32498168945312
patch: if ( parent . get CaMeL Type ( ) == Type . NOT ) {
rank: 174
score: 99.28977338005515
patch: switch ( n . get CaMeL Type ( ) ) { case Token . TRUE :
rank: 175
score: 99.51471416766827
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; type = Name . Type . SET ;
rank: 175
score: 99.49261833639706
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . NAME :
rank: 175
score: 99.47380960398706
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } break ;
rank: 175
score: 99.39134579613095
patch: int name = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 175
score: 99.36007690429688
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 175
score: 99.35636039402173
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Name ( ) ;
rank: 175
score: 99.32455008370536
patch: if ( type != parent . get CaMeL Type ( ) ) {
rank: 176
score: 99.51449819711539
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 176
score: 99.47357855902777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 176
score: 99.44468470982143
patch: if ( parent . get CaMeL Type ( ) != n ) {
rank: 176
score: 99.39131887335526
patch: int name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 176
score: 99.38262384588069
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) ) {
rank: 176
score: 99.35951926491477
patch: switch ( ( parent . get CaMeL Type ( ) ) || parent . get CaMeL Type ( ) ) {
rank: 176
score: 99.35616629464286
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Id ( ) ; }
rank: 176
score: 99.28947897518383
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NE :
rank: 177
score: 99.51337747012867
patch: is CaMeL Set = true ; type = parent . get CaMeL Type ( ) ;
rank: 177
score: 99.492431640625
patch: switch ( parent . get CaMeL Type ( ) ) { case Node CaMeL Util . STRING _ KEY :
rank: 177
score: 99.473046875
patch: switch ( parent . get CaMeL Type ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 177
score: 99.44447236902573
patch: switch ( name . get CaMeL Type ( ) ) { case Token . VAR :
rank: 177
score: 99.38248344089673
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property CaMeL Type ( ) {
rank: 177
score: 99.35948181152344
patch: parent = parent { switch ( parent . get CaMeL Type ( ) ) {
rank: 177
score: 99.3559634560033
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ; break ;
rank: 177
score: 99.32383034446023
patch: switch ( parent . get CaMeL Type ( ) ) { 0 = parent . get CaMeL Type ( ) ;
rank: 178
score: 99.51235727163461
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 178
score: 99.4730453491211
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 178
score: 99.44427490234375
patch: if ( n . get CaMeL Type ( ) != n . get CaMeL Name ( ) ) {
rank: 178
score: 99.38178168402777
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) { else
rank: 178
score: 99.35942526424633
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) ?
rank: 178
score: 99.35581752232143
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; break ;
rank: 178
score: 99.32292737458882
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { }
rank: 178
score: 99.28904095818015
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . class :
rank: 179
score: 99.44404296875
patch: parent = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 179
score: 99.38738692434211
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) is CaMeL Set = true ;
rank: 179
score: 99.3814697265625
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Type ( ) ;
rank: 179
score: 99.35941569010417
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Class . class ) {
rank: 179
score: 99.32240125868056
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) return ;
rank: 179
score: 99.28826904296875
patch: is CaMeL Set = false ; switch ( parent . get CaMeL Type ( ) ) {
rank: 180
score: 99.51171875
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 180
score: 99.4914783296131
patch: String type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 180
score: 99.47145774147727
patch: if ( n . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 180
score: 99.44380457261029
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SET :
rank: 180
score: 99.3811267671131
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Value ( ) {
rank: 180
score: 99.35467332409274
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 180
score: 99.3221076516544
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . class :
rank: 180
score: 99.2877197265625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ( ) :
rank: 181
score: 99.46983642578125
patch: if ( parent . get CaMeL Type ( ) != Name . Type . STRING _ KEY ) {
rank: 181
score: 99.4437255859375
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR ;
rank: 181
score: 99.38604058159723
patch: resource = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 181
score: 99.38092803955078
patch: if ( parent . get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 181
score: 99.35828653971355
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Class . class ) {
rank: 181
score: 99.35462535511364
patch: type = parent . get CaMeL Parent ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 181
score: 99.32198963994566
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case String . TYPE :
rank: 181
score: 99.2872314453125
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . COMMA :
rank: 182
score: 99.48928833007812
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . STRING _ KEY :
rank: 182
score: 99.46963102921195
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING : is CaMeL Set = true ;
rank: 182
score: 99.38576253255208
patch: token = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 182
score: 99.35457637392241
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Type ( name ) ; }
rank: 182
score: 99.32045384457237
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = true ; }
rank: 182
score: 99.28715963924633
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . LOCAL :
rank: 183
score: 99.51083984375
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 183
score: 99.46890371817129
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . SETTER _ DEF :
rank: 183
score: 99.44257354736328
patch: if ( parent . get CaMeL Type ( ) == Token . TYPE ) {
rank: 183
score: 99.38570404052734
patch: if ( node . get CaMeL First CaMeL Child ( ) == n ) {
rank: 183
score: 99.37960815429688
patch: if ( parent . get CaMeL Type ( ) != Node . class ) {
rank: 183
score: 99.35801866319444
patch: switch ( parent . get CaMeL Instance ( ) . get CaMeL Type ( ) ) {
rank: 183
score: 99.35413128396739
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 183
score: 99.28709652549342
patch: switch ( n . get CaMeL Type ( ) ) { case Token . PARAM _ LIST :
rank: 184
score: 99.50774536132812
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ;
rank: 184
score: 99.4887164572011
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . VAR )
rank: 184
score: 99.46848707932692
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) == null )
rank: 184
score: 99.37932272518383
patch: switch ( parent . get CaMeL Type ( ) ) { else { / * /
rank: 184
score: 99.35788861443015
patch: switch ( parent . get CaMeL Type ( ) ) { case Location . ) {
rank: 184
score: 99.32009887695312
patch: switch ( parent . get CaMeL Type ( ) ) { else { else {
rank: 184
score: 99.28704155815973
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) { {
rank: 185
score: 99.4684814453125
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ;
rank: 185
score: 99.37913977581522
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 185
score: 99.35773468017578
patch: switch ( parent . get CaMeL Type ( ) && parent == type ) {
rank: 185
score: 99.35313585069444
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 185
score: 99.31915283203125
patch: switch ( parent . get CaMeL Type ( ) ) { break ;
rank: 185
score: 99.28688354492188
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case )
rank: 186
score: 99.48740456321023
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . INC :
rank: 186
score: 99.468017578125
patch: switch ( ! parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 186
score: 99.38494873046875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL JS CaMeL Type ( ) ) {
rank: 186
score: 99.37902018229167
patch: switch ( parent . get CaMeL Type ( ) ) { += ) {
rank: 186
score: 99.3564983865489
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Class . ) {
rank: 186
score: 99.35287620907738
patch: type = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 186
score: 99.3189208984375
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type ( ) ) { * /
rank: 187
score: 99.50498610276442
patch: n = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 187
score: 99.48739013671874
patch: switch ( n . get CaMeL Type ( ) ) { case Token . SETTER _ DEF : {
rank: 187
score: 99.4679542824074
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . GETTER _ DEF :
rank: 187
score: 99.44095187717014
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Global ( ) ) {
rank: 187
score: 99.37874348958333
patch: switch ( parent . get CaMeL Type ( ) ) { = type . get CaMeL Type ( ) {
rank: 187
score: 99.35230654761905
patch: type = parent . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 187
score: 99.31867980957031
patch: if ( parent . get CaMeL Type ( ) == Class . class ) {
rank: 187
score: 99.28592258029514
patch: name = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; }
rank: 188
score: 99.50315504807692
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , n . get CaMeL Next ( ) ) ;
rank: 188
score: 99.38322647758152
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 188
score: 99.37827845982143
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) .
rank: 188
score: 99.35167020909927
patch: type = Name . Type ; switch ( parent . get CaMeL Type ( ) )
rank: 188
score: 99.31867980957031
patch: switch ( parent . get CaMeL Type ( ) ) { * / return ;
rank: 189
score: 99.50314565805289
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( scope , n . get CaMeL Next ( ) ) ;
rank: 189
score: 99.48716825597427
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null ) { {
rank: 189
score: 99.46571793094758
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } break ;
rank: 189
score: 99.44016627261513
patch: if ( name . equals ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 189
score: 99.38252766927083
patch: expr = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 189
score: 99.37826936141305
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Parent ( ) ) {
rank: 189
score: 99.35489908854167
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL String ( ) ) {
rank: 189
score: 99.35034897748162
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NEW :
rank: 189
score: 99.31765512319711
patch: switch ( parent . get CaMeL Type ( ) ) { true
rank: 189
score: 99.2856086282169
patch: switch ( n . get CaMeL Type ( ) ) { case Token . DEFAULT :
rank: 190
score: 99.48653157552083
patch: if ( parent != null || parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 190
score: 99.37814331054688
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) .
rank: 190
score: 99.31663295200893
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) ) :
rank: 190
score: 99.28560598273026
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : return ;
rank: 191
score: 99.50261981670673
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , scope ) ;
rank: 191
score: 99.35390896267361
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Symbol ( ) ) {
rank: 191
score: 99.35033337823276
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 191
score: 99.28558708639706
patch: switch ( node . get CaMeL Type ( ) ) { case Token . class :
rank: 192
score: 99.50248209635417
patch: type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 192
score: 99.4860331217448
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . GETTER _ DEF :
rank: 192
score: 99.46501922607422
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 192
score: 99.43970489501953
patch: if ( parent . get CaMeL Type ( ) != Token . NAME ) {
rank: 192
score: 99.37653350830078
patch: if ( parent . get CaMeL Type ( ) == Node . class ) {
rank: 192
score: 99.35371229383681
patch: switch ( parent . get CaMeL Method ( ) . get CaMeL Type ( ) ) {
rank: 192
score: 99.35023600260416
patch: switch ( n . get CaMeL Type ( ) ) { case Token )
rank: 192
score: 99.31608501233552
patch: switch ( parent . get CaMeL Type ( ) ) { case Class CaMeL Value . TYPE :
rank: 192
score: 99.28518837376645
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . MIN _ VALUE :
rank: 193
score: 99.48596801757813
patch: name = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 193
score: 99.43948703342014
patch: if ( parent . get CaMeL Type ( ) == Scope . STRING _ KEY ) {
rank: 193
score: 99.3806660970052
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) || parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 193
score: 99.3763094815341
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Type ( ) ;
rank: 193
score: 99.35021602746212
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 193
score: 99.31586052389706
patch: switch ( parent . get CaMeL Type ( ) ) { case Number . TYPE :
rank: 193
score: 99.28514515269886
patch: switch ( n . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type ( ) )
rank: 194
score: 99.48494779146634
patch: switch ( n . get CaMeL First CaMeL Child ( ) )
rank: 194
score: 99.46426391601562
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == null ) {
rank: 194
score: 99.35345458984375
patch: / * switch ( parent . get CaMeL Type ( ) ) {
rank: 194
score: 99.35021441915761
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 194
score: 99.31552303538604
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . TYPE :
rank: 194
score: 99.28514340049342
patch: if ( ! is CaMeL Set ) { switch ( parent . get CaMeL Type ( ) )
rank: 195
score: 99.48476340553977
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . GETPROP :
rank: 195
score: 99.43881405101104
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STATEMENT :
rank: 195
score: 99.37952880859375
patch: parent . name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 195
score: 99.35338245738636
patch: switch ( parent . get CaMeL Type ( ) ) { TRUE = parent . get CaMeL Type ( ) ;
rank: 195
score: 99.2850341796875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : )
rank: 196
score: 99.5004249855324
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } else {
rank: 196
score: 99.48311360677083
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) )
rank: 196
score: 99.43861694335938
patch: switch ( ( n . get CaMeL Type ( ) ) . get CaMeL Type ( ) ) {
rank: 196
score: 99.37893337673611
patch: module = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 196
score: 99.37481689453125
patch: switch ( parent . get CaMeL Type ( ) ) { / - * /
rank: 196
score: 99.3525921365489
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Class . ) {
rank: 196
score: 99.34924768518519
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 196
score: 99.3152488425926
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 196
score: 99.28390682444854
patch: if ( is CaMeL Set ) switch ( parent . get CaMeL Type ( ) )
rank: 197
score: 99.48200141059027
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : }
rank: 197
score: 99.46242453835227
patch: switch ( parent . get CaMeL Type ( ) && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 197
score: 99.4380111694336
patch: if ( n . get CaMeL Type ( ) == Token . INC ) {
rank: 197
score: 99.3785400390625
patch: String name = n . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 197
score: 99.37424538352273
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Class ( ) {
rank: 197
score: 99.35227369225544
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Type ( ) ; }
rank: 197
score: 99.34886410361842
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) return ; }
rank: 197
score: 99.31523581112133
patch: switch ( parent . get CaMeL Type ( ) ) { case Character . TYPE :
rank: 197
score: 99.28365956182066
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . NONE :
rank: 198
score: 99.49930374710648
patch: type = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 198
score: 99.48165893554688
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . SETTER _ DEF :
rank: 198
score: 99.46216634114583
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 198
score: 99.43792365579044
patch: switch ( node . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 198
score: 99.378173828125
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) . get CaMeL Type ( ) ) {
rank: 198
score: 99.37415081521739
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property CaMeL Type ( ) ;
rank: 198
score: 99.35195922851562
patch: if ( parent != null && parent . get CaMeL Type ( ) ) {
rank: 198
score: 99.31516810825893
patch: switch ( parent . get CaMeL Type ( ) ) { } }
rank: 199
score: 99.49910481770833
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL First CaMeL Child ( ) ) ; }
rank: 199
score: 99.46178778286638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 199
score: 99.43736572265625
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY : {
rank: 199
score: 99.37783474392361
patch: if ( parent . get CaMeL Type ( ) != Token . GETTER _ DEF ) {
rank: 199
score: 99.37412806919643
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Class ( ) .
rank: 199
score: 99.35185102982955
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Class ( ) != null ) {
rank: 199
score: 99.34858921595982
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; )
rank: 199
score: 99.31474304199219
patch: if ( parent . get CaMeL Type ( ) == Type . lang ) {
rank: 199
score: 99.28329354745371
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ;
rank: 200
score: 99.46158854166667
patch: if ( parent . get CaMeL Type ( ) != Type . STRING _ KEY ) {
rank: 200
score: 99.43732048483456
patch: switch ( current . get CaMeL Type ( ) ) { case Token . VAR :
rank: 200
score: 99.376708984375
patch: folder = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 200
score: 99.37403869628906
patch: switch ( parent . get CaMeL Type ( ) ) { { = null {
rank: 200
score: 99.34825550426136
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Token . )
rank: 200
score: 99.31418026194854
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . FALSE :
rank: 200
score: 99.2828956886574
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ;
rank: 201
score: 99.49814077524039
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , n ) ;
rank: 201
score: 99.48065592447917
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { }
rank: 201
score: 99.37537202380952
patch: Type type = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 201
score: 99.3739875344669
patch: switch ( parent . get CaMeL Type ( ) ) { * ? * * /
rank: 201
score: 99.35129801432292
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Root ( ) ) {
rank: 201
score: 99.34750705295139
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 201
score: 99.31360581341912
patch: switch ( parent . get CaMeL Type ( ) ) { case String . NAME :
rank: 201
score: 99.28278664981617
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . COLON :
rank: 202
score: 99.4614590731534
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL Next ( ) ) {
rank: 202
score: 99.37520345052083
patch: qualifier = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 202
score: 99.37331973805146
patch: switch ( parent . get CaMeL Type ( ) ) { / * * * /
rank: 202
score: 99.34865025111607
patch: return { switch ( parent . get CaMeL Type ( ) ) {
rank: 202
score: 99.34732792295259
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Root CaMeL Node ( ) ;
rank: 202
score: 99.31351928710937
patch: if ( parent != null && parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 202
score: 99.28270766314338
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ceil :
rank: 203
score: 99.4970233623798
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ;
rank: 203
score: 99.48000759548611
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : )
rank: 203
score: 99.43662396599265
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . prefix :
rank: 203
score: 99.37508138020833
patch: target = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 203
score: 99.37314675071023
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) ; }
rank: 203
score: 99.34823608398438
patch: switch ( parent . get CaMeL Type ( ) && type != null ) {
rank: 203
score: 99.34676387392241
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ;
rank: 203
score: 99.31351511101974
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : return ;
rank: 203
score: 99.28249942555146
patch: name = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ;
rank: 204
score: 99.46070692274306
patch: if ( parent . get CaMeL Type ( ) != Name . STRING _ KEY ) {
rank: 204
score: 99.37379092261905
patch: if ( parent . get CaMeL First CaMeL Child ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 204
score: 99.37305748980978
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Property CaMeL Type ( ) {
rank: 204
score: 99.34817270132211
patch: final switch ( parent . get CaMeL Type ( ) ) {
rank: 204
score: 99.34661865234375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Key ( name ) ;
rank: 204
score: 99.3131462545956
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( type ) ;
rank: 204
score: 99.28201729910714
patch: switch ( parent . parent . get CaMeL Type ( ) ) {
rank: 205
score: 99.47919022409539
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . GETTER _ DEF :
rank: 205
score: 99.4360287314967
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . NAME :
rank: 205
score: 99.37286376953125
patch: switch ( parent . get CaMeL Type ( ) ) { else { ) {
rank: 205
score: 99.34735107421875
patch: switch ( ! parent . get CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 205
score: 99.34605189732143
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Root ( ) ; }
rank: 205
score: 99.31308162913604
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . WARNING :
rank: 205
score: 99.2815803079044
patch: switch ( n . get CaMeL Type ( ) ) { case Integer . TYPE :
rank: 206
score: 99.49671519886364
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 206
score: 99.47883686266448
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) )
rank: 206
score: 99.45999948601974
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION : return ;
rank: 206
score: 99.43569946289062
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { return ; }
rank: 206
score: 99.37367007606908
patch: Symbol name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 206
score: 99.37235804966518
patch: switch ( parent . get CaMeL Type ( ) ) { catch (
rank: 206
score: 99.34596301663306
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 206
score: 99.31290690104167
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Set = ) ;
rank: 206
score: 99.28138078962054
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; }
rank: 207
score: 99.49602194393383
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 207
score: 99.4597588900862
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ; }
rank: 207
score: 99.43566216362848
patch: if ( parent . get CaMeL Type ( ) != Node . STRING _ KEY ) {
rank: 207
score: 99.37366253396739
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 207
score: 99.37210286458334
patch: switch ( parent . get CaMeL Type ( ) ) { > 1 ;
rank: 207
score: 99.34697265625
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Class ( ) ) {
rank: 207
score: 99.3457390280331
patch: name = parent . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 207
score: 99.3125991821289
patch: switch ( parent . get CaMeL Type ( ) ) { else return ; }
rank: 207
score: 99.28126436121323
patch: switch ( node . get CaMeL Type ( ) ) { case Token . NAME :
rank: 208
score: 99.49583082932692
patch: rvalue = parent . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 208
score: 99.4786376953125
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent != null )
rank: 208
score: 99.45972521551724
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 208
score: 99.43545871310764
patch: if ( parent . get CaMeL Type ( ) == Name . STRING _ KEY ) {
rank: 208
score: 99.37199850643383
patch: switch ( parent . get CaMeL Type ( ) ) { = Type . class {
rank: 208
score: 99.34659830729167
patch: switch ( source . get CaMeL Type ( ) ) {
rank: 208
score: 99.34534505208333
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ; }
rank: 208
score: 99.3113025483631
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { }
rank: 209
score: 99.47783868963069
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . FUNCTION :
rank: 209
score: 99.45920632102273
patch: switch ( n . get CaMeL Type ( ) && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 209
score: 99.43533145680146
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { {
rank: 209
score: 99.37249200994319
patch: switch ( Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) )
rank: 209
score: 99.3717902688419
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . err :
rank: 209
score: 99.3463134765625
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) ?
rank: 209
score: 99.34478204900569
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; break ; }
rank: 209
score: 99.31046788832721
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) }
rank: 209
score: 99.28121948242188
patch: String name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 210
score: 99.49547729492187
patch: type = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 210
score: 99.47765531994048
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Next ( ) )
rank: 210
score: 99.45888800370066
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING : / /
rank: 210
score: 99.37215169270833
patch: String get CaMeL Name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 210
score: 99.37141219429348
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Class ( ) ) {
rank: 210
score: 99.34630816915761
patch: switch ( parent . get CaMeL Type ( ) ) { TRUE = parent . get CaMeL Type ( ) ; }
rank: 210
score: 99.34476143973214
patch: type = parent . get CaMeL Parent ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 210
score: 99.30998149671052
patch: switch ( parent . get CaMeL Type ( ) ) { case Class CaMeL Value . ) {
rank: 210
score: 99.2800625887784
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case )
rank: 211
score: 99.49542914496527
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { default : return ;
rank: 211
score: 99.45852134967673
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL
rank: 211
score: 99.43508572048611
patch: if ( n . get CaMeL Type ( ) == Name . Type . OTHER ) {
rank: 211
score: 99.37135620117188
patch: String name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL Name ( ) ;
rank: 211
score: 99.37117143110795
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) . }
rank: 211
score: 99.3448486328125
patch: switch ( parent . get CaMeL Type ( ) ) { case ? true :
rank: 211
score: 99.34419921875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 211
score: 99.3093032836914
patch: if ( parent . get CaMeL Type ( ) != Type . WARNING ) {
rank: 211
score: 99.27949354383681
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : )
rank: 212
score: 99.49526579483695
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } break ;
rank: 212
score: 99.47690651633523
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY : {
rank: 212
score: 99.37122260199652
patch: int type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 212
score: 99.34410400390625
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) {
rank: 212
score: 99.27927468039773
patch: switch ( parent . get CaMeL Type ( ) && parent . is CaMeL Array CaMeL Type ( ) ) {
rank: 213
score: 99.4768798828125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : }
rank: 213
score: 99.43408881293402
patch: if ( parent . get CaMeL Type ( ) == Node . STRING _ KEY ) {
rank: 213
score: 99.37116156684027
patch: ns = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 213
score: 99.37101745605469
patch: if ( parent . get CaMeL Type ( ) != Name . Name ) {
rank: 213
score: 99.3442913552989
patch: if ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 213
score: 99.34386097301136
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 213
score: 99.3087387084961
patch: parent . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 213
score: 99.27857123480902
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : }
rank: 214
score: 99.49510779747597
patch: type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 214
score: 99.4574774380388
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL
rank: 214
score: 99.43401740579044
patch: switch ( this . get CaMeL Type ( ) ) { case Token . VAR :
rank: 214
score: 99.37099821671195
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parameter CaMeL Type ( ) {
rank: 214
score: 99.34370930989583
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . ) ; }
rank: 214
score: 99.30867866847827
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type ( ) ) { case String . class :
rank: 214
score: 99.27849378083882
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . NONE :
rank: 215
score: 99.49452275815217
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } else {
rank: 215
score: 99.47631117876838
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . INC :
rank: 215
score: 99.45686848958333
patch: if ( parent != null && parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 215
score: 99.43401227678571
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 215
score: 99.37081146240234
patch: switch ( parent . get CaMeL Type ( ) ) { { = ) ;
rank: 215
score: 99.37067522321429
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 215
score: 99.34393988715277
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL State ( ) ) {
rank: 215
score: 99.34306066176471
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VOID :
rank: 215
score: 99.2773770419034
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . )
rank: 216
score: 99.49394169560185
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } finally {
rank: 216
score: 99.47565660978618
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . GETTER _ DEF :
rank: 216
score: 99.45683361235119
patch: switch ( Node CaMeL Util . get CaMeL Type ( parent . get CaMeL Type ( ) ) ) {
rank: 216
score: 99.43364025297619
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) == null ) {
rank: 216
score: 99.37047758556548
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL String ( ) {
rank: 216
score: 99.34320068359375
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 216
score: 99.34301147460937
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; )
rank: 216
score: 99.30809326171875
patch: if ( parent != null && parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 216
score: 99.27723604090073
patch: switch ( n . get CaMeL Type ( ) ) { case Type . EMPTY :
rank: 217
score: 99.49349975585938
patch: is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 217
score: 99.47510986328125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : }
rank: 217
score: 99.45634380139802
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY ;
rank: 217
score: 99.43218703497024
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Prop CaMeL Assign ( type ) ) {
rank: 217
score: 99.37010556175595
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) .
rank: 217
score: 99.34295022898706
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Name ( ) ;
rank: 218
score: 99.49348054108796
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 218
score: 99.47494506835938
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != n ) {
rank: 218
score: 99.456298828125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 218
score: 99.43169487847223
patch: if ( ( n . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 218
score: 99.37016216077302
patch: Type name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 218
score: 99.36964053199405
patch: switch ( parent . get CaMeL Type ( ) ) { |= parent . get CaMeL Type ( ) {
rank: 218
score: 99.3414242393092
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) return ; }
rank: 218
score: 99.30806300951087
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type ( ) ) {
rank: 218
score: 99.27654418945312
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) { case ) :
rank: 219
score: 99.49344437210648
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ; }
rank: 219
score: 99.47470703125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NAME : {
rank: 219
score: 99.45587890625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : is CaMeL Set = true ;
rank: 219
score: 99.43162434895834
patch: is CaMeL Set = true ; type = Name . Type . GET ;
rank: 219
score: 99.36989339192708
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 219
score: 99.36941092354911
patch: switch ( parent . get CaMeL Type ( ) ) { null *
rank: 219
score: 99.34275124289773
patch: Type type = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 219
score: 99.34121268136161
patch: this . switch ( parent . get CaMeL Type ( ) ) {
rank: 219
score: 99.30755615234375
patch: switch ( parent . get CaMeL Type ( ) ) { true * / }
rank: 219
score: 99.27594604492188
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . STRING _ KEY ) :
rank: 220
score: 99.49323836616848
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Type ( ) ) ) {
rank: 220
score: 99.4744011374081
patch: if ( parent != null || parent . is CaMeL Function CaMeL Expression ( ) )
rank: 220
score: 99.4310791015625
patch: if ( ! is CaMeL Object CaMeL Lit ( n . get CaMeL Next ( ) ) ) {
rank: 220
score: 99.36957550048828
patch: switch ( n . get CaMeL First CaMeL Child ( ) == n ) {
rank: 220
score: 99.36927379261364
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Name ( ) {
rank: 220
score: 99.30717250279018
patch: if ( parent . get CaMeL Type ( ) != type ) {
rank: 220
score: 99.27589925130208
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . )
rank: 221
score: 99.49304729959239
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 221
score: 99.47421264648438
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent != null )
rank: 221
score: 99.36924677309783
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) || parent . is CaMeL Object CaMeL Lit ( ) )
rank: 221
score: 99.36904761904762
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Value ( ) {
rank: 221
score: 99.34109497070312
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . NULL ) {
rank: 221
score: 99.30714175575658
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) ? true :
rank: 221
score: 99.27564194623162
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ALL :
rank: 222
score: 99.4930419921875
patch: switch ( parent . get CaMeL Type ( ) ) { default : return ;
rank: 222
score: 99.47379557291667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL Next ( ) ) )
rank: 222
score: 99.455361328125
patch: switch ( parent . get CaMeL Type ( ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 222
score: 99.42983669704861
patch: if ( parent . get CaMeL Type ( ) . has CaMeL Type ( ) ) {
rank: 222
score: 99.36856742527173
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 222
score: 99.3685073852539
patch: switch ( parent . get CaMeL Type ( ) ) { / * else /
rank: 222
score: 99.34248490767045
patch: Type type = parent . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 222
score: 99.34090169270833
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . ERROR ) {
rank: 222
score: 99.30673615828805
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Integer . TYPE :
rank: 222
score: 99.2753970497533
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . LABEL _ NAME :
rank: 223
score: 99.45515659877232
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 223
score: 99.42979213169643
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) { }
rank: 223
score: 99.36830767463235
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . code :
rank: 223
score: 99.3421142578125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Name ( ) ; }
rank: 223
score: 99.34076482599431
patch: if ( parent . get CaMeL Type ( ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 224
score: 99.49278846153847
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 224
score: 99.47158203125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : )
rank: 224
score: 99.455146484375
patch: switch ( n . get CaMeL Type ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 224
score: 99.36824898097827
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Name ( ) ) {
rank: 224
score: 99.3680928548177
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; is CaMeL Set = true ;
rank: 224
score: 99.34193330652573
patch: switch ( n . get CaMeL Type ( ) ) { case Token . REGEXP :
rank: 224
score: 99.34054565429688
patch: switch ( parent . get CaMeL Type ( || parent . get CaMeL Type ( ) ) ) {
rank: 224
score: 99.30634099786931
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) ;
rank: 225
score: 99.49263057002315
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 225
score: 99.45512390136719
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 225
score: 99.42948833264802
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . VAR :
rank: 225
score: 99.3681396484375
patch: if ( parent . get CaMeL Type ( ) != Node . ) {
rank: 225
score: 99.34188503689236
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NULL : )
rank: 225
score: 99.3405428799716
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Node . )
rank: 225
score: 99.27482524671052
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . LINE _ SEPARATOR :
rank: 226
score: 99.49244225543478
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Parent ( ) ) ) {
rank: 226
score: 99.471435546875
patch: if ( is CaMeL Set || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 226
score: 99.45443725585938
patch: type = Name . Type . OTHER ; switch ( n . get CaMeL Type ( ) ) {
rank: 226
score: 99.42940945095486
patch: switch ( parent . get CaMeL Type ( ) ) return ; case Token . VAR :
rank: 226
score: 99.36787553267045
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) { else
rank: 226
score: 99.36731719970703
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { default :
rank: 226
score: 99.34171549479167
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) ; }
rank: 226
score: 99.34029134114583
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . ERROR ) {
rank: 226
score: 99.30574544270833
patch: switch ( parent . get CaMeL Type ( ) ) { case parent . get CaMeL Class ( ) :
rank: 226
score: 99.274716796875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . NONE :
rank: 227
score: 99.49199969951923
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; continue ;
rank: 227
score: 99.47135416666667
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . GETTER _ DEF :
rank: 227
score: 99.45439220610119
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; }
rank: 227
score: 99.42905970982143
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . GETTER _ DEF :
rank: 227
score: 99.36785016741071
patch: switch ( parent . get CaMeL Type ( ) ) { += parent . get CaMeL Parent ( ) {
rank: 227
score: 99.33956909179688
patch: switch ( parent . get CaMeL State ( ) ) {
rank: 227
score: 99.3055778952206
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . NAME :
rank: 227
score: 99.274658203125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . AND :
rank: 228
score: 99.47117017663044
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node CaMeL Util . STRING _ KEY :
rank: 228
score: 99.45401204427084
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 228
score: 99.42812771267361
patch: if ( parent . get CaMeL Type ( ) != Name . Type . FUNCTION ) {
rank: 228
score: 99.36771065848214
patch: switch ( parent . get CaMeL Type ( ) ) { , parent . get CaMeL Type ( ) ;
rank: 228
score: 99.33956705729166
patch: switch ( parent . get CaMeL Type ( ) ) { - $NUMBER$ :
rank: 229
score: 99.49094801682692
patch: get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; type = Name . Type . GET ;
rank: 229
score: 99.42810668945313
patch: if ( is CaMeL Set && n . get CaMeL First CaMeL Child ( ) == n ) {
rank: 229
score: 99.36750030517578
patch: switch ( parent . get CaMeL Type ( ) ) { } * * /
rank: 229
score: 99.36516655815973
patch: / * if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 229
score: 99.3403828938802
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 229
score: 99.33942727481617
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) ;
rank: 229
score: 99.30460851332721
patch: switch ( parent . get CaMeL Type ( ) ) { case Property . ) :
rank: 229
score: 99.27370091488487
patch: index = parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ; }
rank: 230
score: 99.49093191964286
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } break ;
rank: 230
score: 99.4687255859375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : ;
rank: 230
score: 99.42780897352431
patch: if ( n . get CaMeL Type ( ) != Name . Type . OTHER ) {
rank: 230
score: 99.366943359375
patch: switch ( parent . get CaMeL Type ( ) ) { return {
rank: 230
score: 99.34027284564394
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 230
score: 99.33905029296875
patch: switch ( parent . get CaMeL Type ( ) || parent == type ) {
rank: 230
score: 99.27351888020833
patch: index = parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 231
score: 99.49085003396739
patch: switch ( Node CaMeL Util . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 231
score: 99.46827281605114
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL Next ( ) ) )
rank: 231
score: 99.45354669744319
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . OTHER ) {
rank: 231
score: 99.42702229817708
patch: get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 231
score: 99.36673177083334
patch: switch ( parent . get CaMeL Type ( ) ) { ) { *
rank: 231
score: 99.36402652138158
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ) :
rank: 231
score: 99.34022432215073
patch: type = ( Node ) parent . get CaMeL Parent CaMeL Node ( ) ; }
rank: 231
score: 99.33738798253677
patch: switch ( ( ( Node ) parent ) . get CaMeL Type ( ) ) {
rank: 231
score: 99.30387115478516
patch: if ( parent . get CaMeL Type ( ) != char CaMeL Value ) {
rank: 232
score: 99.49075082632211
patch: switch ( parent . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 232
score: 99.36672973632812
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Name ( ) {
rank: 232
score: 99.3635965983073
patch: switch ( parent . get CaMeL Type ( ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 232
score: 99.3398955374053
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 232
score: 99.30342864990234
patch: switch ( parent . get CaMeL Type ( ) ) { null } else {
rank: 232
score: 99.27279459635416
patch: switch ( parent . get CaMeL Type ( ) ) { { case )
rank: 233
score: 99.46742466517857
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 233
score: 99.45302170973558
patch: switch ( n . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) :
rank: 233
score: 99.36668812144886
patch: switch ( parent . get CaMeL Type ( ) ) { key = parent . get CaMeL Type ( ) ;
rank: 233
score: 99.3397725423177
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 233
score: 99.303369140625
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE : parent . get CaMeL Type ( ) ;
rank: 233
score: 99.27277575041118
patch: switch ( n . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NAME :
rank: 234
score: 99.48977322048611
patch: switch ( parent . get CaMeL First CaMeL Child ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 234
score: 99.46687586167279
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { {
rank: 234
score: 99.45301055908203
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 234
score: 99.42631603422619
patch: if ( n . get CaMeL Type ( ) != n . get CaMeL First CaMeL Child ( ) )
rank: 234
score: 99.36666434151786
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Class ( ) ;
rank: 234
score: 99.33967537715517
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 234
score: 99.3368428548177
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Class . class ) {
rank: 234
score: 99.30320829503677
patch: switch ( parent . get CaMeL Type ( ) ) { case Result . ) :
rank: 234
score: 99.27265625
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . ) { {
rank: 235
score: 99.48955829326923
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; * /
rank: 235
score: 99.46637834821429
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Parent ( ) )
rank: 235
score: 99.45300713900862
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 235
score: 99.42579409950658
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit CaMeL Key ( parent ) ) {
rank: 235
score: 99.3659896850586
patch: switch ( parent . get CaMeL Type ( ) ) { null = null ;
rank: 235
score: 99.33941180889423
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( name ) ;
rank: 235
score: 99.3364766438802
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . ERROR ) {
rank: 235
score: 99.30296415441177
patch: switch ( parent . get CaMeL Type ( ) ) { case Property . TYPE :
rank: 235
score: 99.27257770040761
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . NONE :
rank: 236
score: 99.48903175636575
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type ( ) ) {
rank: 236
score: 99.46630249023437
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . DEC : {
rank: 236
score: 99.4252068014706
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition ;
rank: 236
score: 99.36595052083334
patch: switch ( parent . get CaMeL Type ( ) ) { * return {
rank: 236
score: 99.33930206298828
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( name ) ;
rank: 236
score: 99.33647228422619
patch: Type get CaMeL Type = parent . get CaMeL Type ( ) ; switch ( get CaMeL Type ) {
rank: 236
score: 99.30239868164062
patch: if ( parent . get CaMeL Type ( ) == Short . class ) {
rank: 237
score: 99.48890099158653
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) . get CaMeL String ( ) ) ;
rank: 237
score: 99.46608664772727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Type ( ) ) )
rank: 237
score: 99.45229666573661
patch: type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 237
score: 99.42494829963235
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP ;
rank: 237
score: 99.36591653262867
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . WARNING :
rank: 237
score: 99.362548828125
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 237
score: 99.3390780362216
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ; }
rank: 237
score: 99.33614349365234
patch: switch ( parent . get CaMeL Type ( ) ) { * * return ;
rank: 237
score: 99.30217149522569
patch: if ( parent != null && parent . get CaMeL Type ( ) != null ) {
rank: 237
score: 99.27210083007813
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case )
rank: 238
score: 99.48783735795455
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL Next ( ) ) {
rank: 238
score: 99.46604225852273
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . NAME :
rank: 238
score: 99.36575753348214
patch: switch ( parent . get CaMeL Type ( ) ) { / :
rank: 238
score: 99.33904622395833
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 238
score: 99.33480495876736
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) return {
rank: 238
score: 99.30185834099265
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) ;
rank: 239
score: 99.48779296875
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) + $STRING$ ) ;
rank: 239
score: 99.46597144717262
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Type ( ) )
rank: 239
score: 99.45201009114584
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 239
score: 99.4242931547619
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Prop CaMeL Assign ( name ) ) {
rank: 239
score: 99.36573893229166
patch: switch ( parent . get CaMeL Type ( ) ) { / * else
rank: 239
score: 99.36176614200367
patch: if ( parent . get CaMeL Type ( ) == Token . GETTER _ DEF )
rank: 239
score: 99.33904474431819
patch: type = parent . get CaMeL Parent ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 239
score: 99.33431243896484
patch: switch ( parent . get CaMeL Type ( ) ) { { * ) {
rank: 239
score: 99.27189127604167
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NOT ) {
rank: 240
score: 99.46537272135417
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ASSIGN : {
rank: 240
score: 99.36566452752976
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Node ( ) {
rank: 240
score: 99.36074829101562
patch: switch ( n . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 240
score: 99.3388671875
patch: name = parent . get CaMeL Name ( ) + $STRING$ + parent . get CaMeL Name ( ) ; }
rank: 240
score: 99.33412080652573
patch: switch ( parent . get CaMeL Type ( ) ) { case String . ) {
rank: 240
score: 99.30120086669922
patch: switch ( parent . get CaMeL Type ( ) ) { * / return )
rank: 240
score: 99.27179918791118
patch: switch ( n . get CaMeL Type ( ) ) { case Char CaMeL Sequence . EMPTY :
rank: 241
score: 99.48624674479167
patch: String type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 241
score: 99.4651611328125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GETTER _ DEF : {
rank: 241
score: 99.36050269717262
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( n . get CaMeL Next ( ) ) ) {
rank: 241
score: 99.33864830280173
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; break ;
rank: 241
score: 99.33340793185764
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) return ;
rank: 241
score: 99.27133517795139
patch: switch ( n . get CaMeL Type ( ) ) { case Token . TYPE : {
rank: 242
score: 99.48619666466347
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 242
score: 99.465087890625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . DEC : {
rank: 242
score: 99.42278089021382
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . FUNCTION :
rank: 242
score: 99.36507415771484
patch: if ( parent . get CaMeL Type ( ) != Type . NAME ) {
rank: 242
score: 99.33855237458882
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) return ; }
rank: 242
score: 99.30108963815789
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { null
rank: 242
score: 99.27073160807292
patch: switch ( parent . get CaMeL Type ( ) ) { { case Token . TYPE :
rank: 243
score: 99.46410071331522
patch: if ( parent != null || parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) )
rank: 243
score: 99.45052664620536
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 243
score: 99.42267922794117
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { }
rank: 243
score: 99.3650235262784
patch: switch ( parent . get CaMeL Type ( ) ) { $NUMBER$ = parent . get CaMeL Type ( ) {
rank: 243
score: 99.36014133029514
patch: body = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 243
score: 99.338134765625
patch: type = name . get CaMeL Type ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 243
score: 99.33331853693181
patch: switch ( parent . get CaMeL Type ( ) ) { TRUE = parent . get CaMeL Type ( ) {
rank: 243
score: 99.27029239430146
patch: switch ( n . get CaMeL Type ( ) ) { case Token . INSTANCEOF :
rank: 244
score: 99.48587740384616
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) )
rank: 244
score: 99.46383231026786
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) type = Name . Type . OTHER ;
rank: 244
score: 99.45015010127315
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Token . STRING _ KEY ) {
rank: 244
score: 99.42267809416118
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ) {
rank: 244
score: 99.364501953125
patch: switch ( parent . get CaMeL Type ( ) ) { = type {
rank: 244
score: 99.35975406044408
patch: switch ( node . get CaMeL Type ( ) ) { case Token . GETTER _ DEF :
rank: 244
score: 99.300537109375
patch: if ( parent . get CaMeL Type ( ) == Integer . TYPE ) {
rank: 244
score: 99.27025649126838
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . FUNCTION :
rank: 245
score: 99.48567468979779
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 245
score: 99.46356964111328
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) )
rank: 245
score: 99.44924444901316
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR : break ;
rank: 245
score: 99.42233276367188
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == n )
rank: 245
score: 99.36449381510417
patch: switch ( parent . get CaMeL Type ( ) ) { * ? /
rank: 246
score: 99.48495483398438
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL String ( ) ) ;
rank: 246
score: 99.44923618861607
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 246
score: 99.36446940104166
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent )
rank: 246
score: 99.35897216796874
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) {
rank: 246
score: 99.33772786458333
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) .
rank: 246
score: 99.33280436197917
patch: switch ( parent . to CaMeL String ( ) ) {
rank: 246
score: 99.26966688368056
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) )
rank: 247
score: 99.48439308449075
patch: parent = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 247
score: 99.44916823814656
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL
rank: 247
score: 99.42214529854911
patch: if ( type . is CaMeL Object CaMeL Lit ( ) ) {
rank: 247
score: 99.36382293701172
patch: switch ( parent . get CaMeL Type ( ) ) { else { * )
rank: 247
score: 99.33229662024456
patch: parent = parent . get CaMeL Type ( ) ; { switch ( parent . get CaMeL Type ( ) ) {
rank: 247
score: 99.2992935180664
patch: if ( parent . get CaMeL Type ( ) instanceof char [ ] ) {
rank: 247
score: 99.26959906684027
patch: switch ( parent . get CaMeL Type ( ) ) { { case Token . YES :
rank: 248
score: 99.48430926983173
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , parent ) ;
rank: 248
score: 99.46284315321181
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) )
rank: 248
score: 99.42177862870066
patch: switch ( parent . get CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 248
score: 99.36307956861413
patch: switch ( parent . get CaMeL Type ( ) ) { ++ this . parent . get CaMeL Type ( ) ;
rank: 248
score: 99.35868326822917
patch: int n = parent . get CaMeL Type ( ) . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 248
score: 99.3363396139706
patch: parent . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; }
rank: 248
score: 99.33195944393383
patch: if ( $STRING$ . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 248
score: 99.26952406939338
patch: switch ( n . get CaMeL Type ( ) ) { case Token . PREFIX :
rank: 249
score: 99.48357684795673
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Name ( ) ;
rank: 249
score: 99.46230246803977
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) != n )
rank: 249
score: 99.44791353665866
patch: if ( parent . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 249
score: 99.42168868215461
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . NAME :
rank: 249
score: 99.363037109375
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parameter CaMeL Type ( ) ;
rank: 249
score: 99.33629353841145
patch: type = parent . get CaMeL Name ( ) ; }
rank: 249
score: 99.33188883463542
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Class . NONE ) {
rank: 249
score: 99.26939633018092
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) { case )
rank: 250
score: 99.44779636548913
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . VAR :
rank: 250
score: 99.42158588610198
patch: if ( n . get CaMeL Type ( ) == n . get CaMeL Type ( ) )
rank: 250
score: 99.3361483487216
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . )
rank: 250
score: 99.33162434895833
patch: switch ( switch ( parent . get CaMeL Type ( ) ) ) {
rank: 250
score: 99.29765239514802
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) ? / :
rank: 251
score: 99.48325417258523
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; return ;
rank: 251
score: 99.46186755952381
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n ) {
rank: 251
score: 99.44716389973958
patch: switch ( parent . get CaMeL Type ( ) ) throws Illegal CaMeL State CaMeL Exception {
rank: 251
score: 99.36285109747024
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Value ( ) {
rank: 251
score: 99.35762355638587
patch: switch ( n . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 251
score: 99.331298828125
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Node . NONE ) {
rank: 251
score: 99.26936848958333
patch: switch ( n . get CaMeL Type ( ) ) { case Token . EMPTY : {
rank: 252
score: 99.482958984375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ) ;
rank: 252
score: 99.46112615411931
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . SETTER _ DEF : {
rank: 252
score: 99.44710867745536
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 252
score: 99.42027452256944
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 252
score: 99.36271866508152
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Function CaMeL Type ( ) {
rank: 252
score: 99.35745059742646
patch: if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 252
score: 99.33585205078126
patch: name = name . substring ( parent . get CaMeL Name ( ) . length ( ) ) ;
rank: 252
score: 99.33115456321023
patch: switch ( parent . get CaMeL Type ( ) ? null : parent . get CaMeL Type ( ) ) {
rank: 252
score: 99.29659598214286
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Value ( ) ; }
rank: 252
score: 99.26931280838816
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . class :
rank: 253
score: 99.48257211538461
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Value ( ) ;
rank: 253
score: 99.46099384014423
patch: if ( parent . get CaMeL Type ( ) != n )
rank: 253
score: 99.36219371448864
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Type ( ) {
rank: 253
score: 99.35699462890625
patch: final String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 253
score: 99.33579711914062
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ; break ; }
rank: 254
score: 99.4609375
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { case Token . VAR :
rank: 254
score: 99.4455802671371
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 254
score: 99.4197998046875
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . GETPROP :
rank: 254
score: 99.36158389136905
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL String ( ) ;
rank: 254
score: 99.35671164772727
patch: try { name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 254
score: 99.3348055752841
patch: name = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 254
score: 99.33071719898896
patch: synchronized ( parent ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 254
score: 99.29535784040179
patch: switch ( parent . get CaMeL Type ( ) ) { / false
rank: 254
score: 99.26920572916667
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . get CaMeL Type ( ) :
rank: 255
score: 99.4816015625
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 255
score: 99.44520786830357
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 255
score: 99.41969401041666
patch: if ( parent . get CaMeL Type ( ) == Token . GETPROP )
rank: 255
score: 99.35619099934895
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) && parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 255
score: 99.33462185329861
patch: String name = parent . get CaMeL Name ( ) ; type = Name . Type ;
rank: 255
score: 99.3302585767663
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Class . ) {
rank: 255
score: 99.29464285714286
patch: switch ( parent . get CaMeL Type ( ) ) { next . get CaMeL Type ( ) ; }
rank: 255
score: 99.26912434895833
patch: switch ( node . get CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 256
score: 99.48138718377976
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 256
score: 99.45938270970395
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) != n )
rank: 256
score: 99.41929224917763
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . INC :
rank: 256
score: 99.36131751019022
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Property CaMeL Type ( ) {
rank: 256
score: 99.35603841145833
patch: t = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 256
score: 99.33436075846355
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . )
rank: 256
score: 99.33017985026042
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . ERROR ) {
rank: 256
score: 99.29444715711806
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) break )
rank: 256
score: 99.26892807904412
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . unknown :
rank: 257
score: 99.41900634765625
patch: switch ( parent . get CaMeL Type ( ) ) return ; case Token . GETPROP :
rank: 257
score: 99.36078287760417
patch: if ( parent . get CaMeL Type ( ) == Type . ) {
rank: 257
score: 99.35563354492187
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( n . get CaMeL Next ( ) ) )
rank: 257
score: 99.3343505859375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Root ( ) ; }
rank: 257
score: 99.3296130952381
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . get CaMeL Type ( ) :
rank: 257
score: 99.2686408547794
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ADD :
rank: 258
score: 99.480224609375
patch: switch ( parent . get CaMeL First CaMeL Child ( ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 258
score: 99.45889136904762
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 258
score: 99.41891479492188
patch: if ( n . get CaMeL Type ( ) != Token . VAR ) {
rank: 258
score: 99.36045619419643
patch: switch ( parent . get CaMeL Type ( ) ) { } *
rank: 258
score: 99.35527886284723
patch: clazz = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 258
score: 99.334169921875
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 258
score: 99.32948811848958
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . WARNING ) {
rank: 258
score: 99.2943050986842
patch: switch ( parent . get CaMeL Type ( ) ) { case Class CaMeL Value . class :
rank: 259
score: 99.45881958007813
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == null )
rank: 259
score: 99.4446433738426
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : . = Name . Type . OTHER ;
rank: 259
score: 99.41887464021382
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP : return ;
rank: 259
score: 99.36039225260417
patch: if ( parent . get CaMeL Type ( ) == Node . ) {
rank: 259
score: 99.3294677734375
patch: switch ( parent . get CaMeL Type $NUMBER$ ( ) ) {
rank: 259
score: 99.2678466796875
patch: if ( ! is CaMeL Set ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 260
score: 99.47958984375
patch: is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 260
score: 99.4445270040761
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) { return ; }
rank: 260
score: 99.41811988467262
patch: if ( get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == n ) {
rank: 260
score: 99.36024541440217
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Type ( ) {
rank: 260
score: 99.3548583984375
patch: String name = n . get CaMeL First CaMeL Child ( ) . get CaMeL Name ( ) ;
rank: 260
score: 99.33399341724537
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 260
score: 99.29337565104167
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . close ( ) ;
rank: 260
score: 99.2670036764706
patch: name = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 261
score: 99.47886149088542
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL Next ( ) ) ;
rank: 261
score: 99.45783342633929
patch: if ( parent != null || parent . get CaMeL Type ( ) == Token . SETTER _ DEF )
rank: 261
score: 99.44447326660156
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == null ) {
rank: 261
score: 99.36016082763672
patch: switch ( parent . get CaMeL Type ( ) ) { null { * /
rank: 261
score: 99.3544189453125
patch: String name = n . get CaMeL First CaMeL Child ( ) . get CaMeL String ( ) ;
rank: 261
score: 99.32851155598958
patch: switch ( parent . get CaMeL Type ( ) && this . parent != null ) {
rank: 261
score: 99.29292297363281
patch: switch ( parent . get CaMeL Type ( ) ) { / * { :
rank: 261
score: 99.26659046519886
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case )
rank: 262
score: 99.45753014605978
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 262
score: 99.41737583705357
patch: if ( get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) == n ) {
rank: 262
score: 99.35996907552084
patch: switch ( parent . get CaMeL Type ( ) ) { += $STRING$ {
rank: 262
score: 99.33338165283203
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Name ( ) ; }
rank: 262
score: 99.32830810546875
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Class . class ) {
rank: 262
score: 99.29280853271484
patch: switch ( parent . get CaMeL Type ( ) ) { case Result . )
rank: 262
score: 99.26650821461396
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . EQ :
rank: 263
score: 99.47857666015625
patch: parent = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 263
score: 99.45748768682066
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == null )
rank: 263
score: 99.417236328125
patch: if ( n . get CaMeL Type ( ) != Token . STRING _ KEY ) {
rank: 263
score: 99.35965728759766
patch: switch ( parent . get CaMeL Type ( ) ) { index = ) ;
rank: 263
score: 99.3330078125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 263
score: 99.32810465494792
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) return {
rank: 263
score: 99.292470703125
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : parent . get CaMeL Type ( ) ;
rank: 263
score: 99.26637896369485
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . CONTINUE :
rank: 264
score: 99.44396484375
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == Token . STRING _ KEY ) {
rank: 264
score: 99.41714816623264
patch: if ( is CaMeL Set || parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 264
score: 99.35931396484375
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) ) { else
rank: 264
score: 99.3539530436198
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) )
rank: 264
score: 99.33172248391544
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NEW :
rank: 264
score: 99.29227487664474
patch: switch ( parent . get CaMeL Type ( ) ) { case String . class : return ;
rank: 264
score: 99.26545984604779
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . OFF :
rank: 265
score: 99.4783935546875
patch: switch ( parent . get CaMeL Type ( ) ) { type = Name . Type . OTHER ;
rank: 265
score: 99.45704287574405
patch: if ( parent != null || parent . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 265
score: 99.44366924579327
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 265
score: 99.41669664884868
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) {
rank: 265
score: 99.35929008152173
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type ( ) ; }
rank: 265
score: 99.35388764880952
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type CaMeL Name ( ) )
rank: 265
score: 99.33166956018519
patch: type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 265
score: 99.32774861653645
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . NULL ) {
rank: 265
score: 99.29200744628906
patch: if ( parent . get CaMeL Type ( ) != Object . TYPE ) {
rank: 265
score: 99.2648990028783
patch: int index = parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 266
score: 99.47826538085937
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 266
score: 99.44364013671876
patch: if ( parent . get CaMeL Type ( ) == Name . Type . STRING _ KEY ) {
rank: 266
score: 99.41642252604167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { }
rank: 266
score: 99.359130859375
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Function CaMeL Type ( ) {
rank: 266
score: 99.33136617726294
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 266
score: 99.32737223307292
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . NULL ) {
rank: 266
score: 99.29175567626953
patch: if ( parent . get CaMeL Type ( ) != Location . TYPE ) {
rank: 266
score: 99.26479923023896
patch: switch ( node . get CaMeL Type ( ) ) { case Token . NULL :
rank: 267
score: 99.41550806949013
patch: if ( ! is CaMeL Set || parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 267
score: 99.35894220525569
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) . else
rank: 267
score: 99.33132408405173
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 267
score: 99.32688395182292
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Node . NONE ) {
rank: 267
score: 99.29064178466797
patch: if ( parent . get CaMeL Function CaMeL Type ( ) != null ) {
rank: 267
score: 99.26474178538604
patch: switch ( parent . get CaMeL Type ( ) ) { case Character . NONE :
rank: 268
score: 99.45638020833333
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . SETTER _ DEF :
rank: 268
score: 99.44286237444196
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 268
score: 99.41548426011029
patch: switch ( node . get CaMeL Type ( ) ) { case Token . GETPROP :
rank: 268
score: 99.358935546875
patch: switch ( parent . get CaMeL Type ( ) ) { / / /
rank: 268
score: 99.33127357219827
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 268
score: 99.32654825846355
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Class . NONE ) {
rank: 269
score: 99.4557574728261
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . GETPROP )
rank: 269
score: 99.44271358366936
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n )
rank: 269
score: 99.41547987196181
patch: switch ( ! parent . get CaMeL Type ( ) ) { case Token . VAR :
rank: 269
score: 99.35879118546195
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type ( ) { else
rank: 269
score: 99.35300699869792
patch: parent = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 269
score: 99.33114131804436
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 269
score: 99.32591959635417
patch: switch ( parent . get CaMeL Type ( ) . ( ) ) {
rank: 269
score: 99.29037272135416
patch: switch ( parent . get CaMeL Type ( ) ) { return ; }
rank: 270
score: 99.47741117931548
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . GET ;
rank: 270
score: 99.45428145559211
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == null )
rank: 270
score: 99.41436446340461
patch: switch ( name . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 270
score: 99.3512674967448
patch: switch ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 270
score: 99.32995235558712
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( name ) ; }
rank: 270
score: 99.32573908025569
patch: switch ( parent . get CaMeL Type ( ) ) { case ? parent . get CaMeL Type ( ) :
rank: 270
score: 99.29029337565105
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 270
score: 99.26375
patch: String name = parent . get CaMeL Name ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 271
score: 99.47715541294643
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : return ;
rank: 271
score: 99.45401340060764
patch: switch ( get CaMeL Value CaMeL Type ( n ) ) { case Token . VAR :
rank: 271
score: 99.41427176339286
patch: if ( get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) == n ) {
rank: 271
score: 99.35823197798295
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) . }
rank: 271
score: 99.3509457236842
patch: Type name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 271
score: 99.32972454202586
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 271
score: 99.29026197350544
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) ; }
rank: 271
score: 99.26343936011905
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( name ) ;
rank: 272
score: 99.47709599247685
patch: String n = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 272
score: 99.4420166015625
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , scope ) ;
rank: 272
score: 99.35819868607955
patch: switch ( parent . get CaMeL Type ( ) ) { count = parent . get CaMeL Type ( ) ;
rank: 272
score: 99.32959747314453
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } return ;
rank: 272
score: 99.32506306966145
patch: switch ( target . get CaMeL Type ( ) ) {
rank: 272
score: 99.29009650735294
patch: switch ( parent . get CaMeL Type ( ) ) { case String . NULL :
rank: 272
score: 99.26291822350544
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . class :
rank: 273
score: 99.47693481445313
patch: is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 273
score: 99.4419414813702
patch: switch ( parent . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) :
rank: 273
score: 99.41409737723214
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Token . STRING _ KEY :
rank: 273
score: 99.35816539417614
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) { }
rank: 273
score: 99.32947649274554
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class ( ) ; }
rank: 273
score: 99.32476251775569
patch: switch ( ( parent . get CaMeL Type ( ) ) && parent . get CaMeL Type ( ) ) {
rank: 273
score: 99.2621208639706
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SIZE :
rank: 274
score: 99.45329145951705
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY : ;
rank: 274
score: 99.44180192618535
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 274
score: 99.41360134548611
patch: if ( parent . get CaMeL Type ( ) == Name . Type . FUNCTION ) {
rank: 274
score: 99.35804658777573
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . parent :
rank: 274
score: 99.32923473011364
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 274
score: 99.28843060661765
patch: switch ( parent . get CaMeL Type ( ) ) { case ) { false :
rank: 274
score: 99.26191791735198
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : break ;
rank: 275
score: 99.47648111979167
patch: value = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 275
score: 99.45321655273438
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : :
rank: 275
score: 99.44175961143092
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING : return ;
rank: 275
score: 99.3576023267663
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Property CaMeL Type ( ) ;
rank: 275
score: 99.34943498883929
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 275
score: 99.32874797952586
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Key ( name ) ; }
rank: 275
score: 99.3240458170573
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . WARNING ) {
rank: 275
score: 99.26146024816177
patch: parent . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; }
rank: 276
score: 99.4526599702381
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != null ) {
rank: 276
score: 99.44131324404762
patch: switch ( Node CaMeL Util . get CaMeL Type ( n . get CaMeL Next ( ) ) ) {
rank: 276
score: 99.41335042317708
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : }
rank: 276
score: 99.3575106534091
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Name ( ) ;
rank: 276
score: 99.32843017578125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; )
rank: 276
score: 99.28811163651316
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type ( ) ) { }
rank: 276
score: 99.26071006373355
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . signum ( ) :
rank: 277
score: 99.4412612915039
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 277
score: 99.41320219494048
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : return ;
rank: 277
score: 99.35749955610795
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Parent ( ) ;
rank: 277
score: 99.34905327690973
patch: attr = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 277
score: 99.32842407226562
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; break ; }
rank: 277
score: 99.32368977864583
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . NULL ) {
rank: 277
score: 99.28787364130434
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case Integer . TYPE :
rank: 277
score: 99.26063939144737
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . PARAGRAPH _ SEPARATOR :
rank: 278
score: 99.47576171875
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next 1 ( ) ) ;
rank: 278
score: 99.45225765830592
patch: switch ( parent . is CaMeL Function CaMeL Expression ( ) ) { case Token . VAR :
rank: 278
score: 99.41307067871094
patch: if ( parent . get CaMeL Type ( ) != Token . ASSIGN ) {
rank: 278
score: 99.35747528076172
patch: switch ( parent . get CaMeL Type ( ) ) { else { / ?
rank: 278
score: 99.34902808779762
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . GETTER _ DEF :
rank: 278
score: 99.32801164899554
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; )
rank: 278
score: 99.32352878736413
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . ) ;
rank: 278
score: 99.28731043198529
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . 0 :
rank: 278
score: 99.26055586965461
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . PREFIX _ STRING :
rank: 279
score: 99.47529296875
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ) ;
rank: 279
score: 99.45225458559783
patch: if ( parent != null && parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 279
score: 99.4407447076613
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . GETTER _ DEF :
rank: 279
score: 99.357421875
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Class ( ) ;
rank: 279
score: 99.327890625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . ) :
rank: 279
score: 99.32310901988636
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Parent ( ) == null ) {
rank: 279
score: 99.28719932154605
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { else
rank: 279
score: 99.26039751838235
patch: switch ( n . get CaMeL Type ( ) ) { case Type . ) {
rank: 280
score: 99.45224831321023
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . INC :
rank: 280
score: 99.44071821732955
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . ASSIGN ) {
rank: 280
score: 99.35684204101562
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Value CaMeL Type ( ) {
rank: 280
score: 99.3479362936581
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) return ;
rank: 280
score: 99.3276599702381
patch: type = name . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 280
score: 99.32308296535327
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Node . ) {
rank: 280
score: 99.2864631204044
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . class :
rank: 280
score: 99.25991423233695
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . NONE :
rank: 281
score: 99.44032353940217
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING : is CaMeL Set = true ;
rank: 281
score: 99.4121955422794
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition :
rank: 281
score: 99.34774441189236
patch: int type = parent . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 281
score: 99.32753725405092
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) ;
rank: 281
score: 99.32273954503677
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . parent :
rank: 281
score: 99.2849853515625
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) ;
rank: 281
score: 99.25972254136029
patch: if ( type . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 282
score: 99.47401733398438
patch: is CaMeL Set = true ; type = parent . get CaMeL First CaMeL Child ( ) ; }
rank: 282
score: 99.45125325520833
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . GETTER _ DEF :
rank: 282
score: 99.3562899502841
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Parent ( ) ;
rank: 282
score: 99.34769694010417
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) || parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 282
score: 99.327392578125
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . remove CaMeL Child ( parent ) ;
rank: 282
score: 99.32261591372283
patch: Object type = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 282
score: 99.28496759588069
patch: if ( parent . get CaMeL Type ( ) . equals ( parent . get CaMeL Type ( ) ) )
rank: 282
score: 99.25967009171195
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( is CaMeL Set )
rank: 283
score: 99.47398024338942
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) )
rank: 283
score: 99.44010162353516
patch: if ( parent . get CaMeL First CaMeL Child ( ) == parent ) {
rank: 283
score: 99.41163271949405
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( n . get CaMeL Next ( ) ) )
rank: 283
score: 99.35618954613095
patch: switch ( parent . get CaMeL Type ( ) ) { > parent . get CaMeL Type ( ) {
rank: 283
score: 99.34743138363487
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . STRING :
rank: 283
score: 99.32716279871323
patch: type = parent . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 283
score: 99.3217242697011
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . ) ;
rank: 283
score: 99.28461303710938
patch: if ( parent != null && parent . get CaMeL Type ( ) != Type . TRUE ) {
rank: 283
score: 99.25950221011513
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ; }
rank: 284
score: 99.45
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : .
rank: 284
score: 99.4400390625
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } }
rank: 284
score: 99.411376953125
patch: is CaMeL Set = true ; switch ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 284
score: 99.35614013671875
patch: if ( parent . get CaMeL Type ( ) != Node . TYPE ) {
rank: 284
score: 99.32716128700658
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; break ;
rank: 284
score: 99.32155354817708
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . WARNING ) {
rank: 284
score: 99.28440946691177
patch: if ( parent != null && parent . get CaMeL Type ( ) != ) {
rank: 284
score: 99.25935633042279
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ERROR :
rank: 285
score: 99.47368915264423
patch: switch ( parent . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 285
score: 99.44974093967014
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . VAR : {
rank: 285
score: 99.41092936197917
patch: if ( parent . get CaMeL Type ( ) == Name . GETTER _ DEF ) {
rank: 285
score: 99.35603841145833
patch: switch ( parent . get CaMeL Type ( ) ) { += parent . get CaMeL Name ( ) ;
rank: 285
score: 99.34720552884616
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) )
rank: 285
score: 99.32684536637932
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) ;
rank: 285
score: 99.32152642144098
patch: switch ( ! parent . get CaMeL Type ( ) . equals ( type ) ) {
rank: 286
score: 99.473388671875
patch: type = get CaMeL Value CaMeL Type ( parent , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 286
score: 99.4492520419034
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Type ( ) ) )
rank: 286
score: 99.35584214154412
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . code :
rank: 286
score: 99.3466552734375
patch: try { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 286
score: 99.32634203361742
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Root ( ) ;
rank: 286
score: 99.32101619944854
patch: switch ( children . get ( parent . get CaMeL Type ( ) ) ) {
rank: 286
score: 99.28415096507354
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . READ :
rank: 286
score: 99.25920553768383
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . signum :
rank: 287
score: 99.47335379464286
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } return ;
rank: 287
score: 99.44815726902173
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : is CaMeL Set = true ;
rank: 287
score: 99.43836885340073
patch: switch ( get CaMeL Name ( n . get CaMeL Next ( ) ) ) {
rank: 287
score: 99.41014906939338
patch: switch ( value . get CaMeL Type ( ) ) { case Token . VAR :
rank: 287
score: 99.35574340820312
patch: switch ( parent . get CaMeL Type ( ) ) { * * / }
rank: 287
score: 99.3262939453125
patch: type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ; break ;
rank: 287
score: 99.320556640625
patch: switch ( parent . get CaMeL Type ( ) ) { { case ) :
rank: 287
score: 99.258505859375
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . NONE :
rank: 288
score: 99.44764927455357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != null ) {
rank: 288
score: 99.40937042236328
patch: if ( parent . get CaMeL Type ( ) == Type . OTHER ) {
rank: 288
score: 99.35563520951705
patch: switch ( parent . get CaMeL Type ( ) ) { } = parent . get CaMeL Type ( ) {
rank: 288
score: 99.3463134765625
patch: i = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 288
score: 99.32591985887096
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } }
rank: 288
score: 99.28383091517857
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . get CaMeL Type ( ) :
rank: 288
score: 99.25806773792614
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) { case Token . ) :
rank: 289
score: 99.47243088942308
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type ( ) ;
rank: 289
score: 99.44727623980978
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . ASSIGN )
rank: 289
score: 99.40901692708333
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR : }
rank: 289
score: 99.35560191761364
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Parent ( ) {
rank: 289
score: 99.3257723721591
patch: String name = parent . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 289
score: 99.32032359730114
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Parent ( ) != null ) {
rank: 289
score: 99.28358369715073
patch: switch ( parent . get CaMeL Type ( ) ) { case Object . ) ?
rank: 290
score: 99.47237396240234
patch: if ( n . get CaMeL First CaMeL Child ( ) == null ) {
rank: 290
score: 99.44693603515626
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : {
rank: 290
score: 99.43747384207589
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 290
score: 99.4088134765625
patch: if ( parent . get CaMeL Type ( ) == Token . NAME )
rank: 290
score: 99.34590076264881
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) is CaMeL Set = true ;
rank: 290
score: 99.32540328414352
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( name ) ; }
rank: 290
score: 99.3197711447011
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Class . ) {
rank: 290
score: 99.2833835767663
patch: switch ( parent . get CaMeL Type ( ) ) { while ( parent . get CaMeL Type ( ) ) {
rank: 290
score: 99.2578125
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . type :
rank: 291
score: 99.47212357954545
patch: Node type = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 291
score: 99.44591000205592
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . STRING _ KEY :
rank: 291
score: 99.43739318847656
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 291
score: 99.40831163194444
patch: switch ( ! n . get CaMeL Type ( ) ) { case Token . VAR :
rank: 291
score: 99.35533075747283
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Parent ( ) {
rank: 291
score: 99.325361328125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . STRING _ KEY :
rank: 291
score: 99.31968287417763
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) {
rank: 291
score: 99.28319440569196
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Type ( ) ) :
rank: 291
score: 99.25686806126645
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) )
rank: 292
score: 99.40816457648026
patch: if ( parent . equals ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 292
score: 99.35527801513672
patch: switch ( parent . get CaMeL Type ( ) ) { { = null ;
rank: 292
score: 99.34586958451705
patch: final String name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 292
score: 99.32501220703125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; break ; }
rank: 292
score: 99.31955788352273
patch: switch ( parent . get CaMeL Type ( ) ) { case ? node . get CaMeL Type ( ) :
rank: 292
score: 99.28315080915179
patch: if ( parent . get CaMeL Name ( ) != null ) {
rank: 292
score: 99.2559230638587
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . NULL :
rank: 293
score: 99.47178297776442
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; type = Name . Type . OTHER ;
rank: 293
score: 99.4454345703125
patch: if ( parent != null || parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 293
score: 99.43677599676724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 293
score: 99.40738932291667
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . SETTER _ DEF :
rank: 293
score: 99.35526275634766
patch: if ( parent . get CaMeL Type ( ) != Type . name ) {
rank: 293
score: 99.34525756835937
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n , scope ) ;
rank: 293
score: 99.32478578629032
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 293
score: 99.25569661458333
patch: switch ( n . get CaMeL Type ( ) ) { case ) :
rank: 294
score: 99.4452488111413
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP : is CaMeL Set = true ;
rank: 294
score: 99.43641880580357
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 294
score: 99.40681966145833
patch: set = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 294
score: 99.35517713758681
patch: switch ( parent . get CaMeL Type ( ) . is CaMeL String ( ) ) {
rank: 294
score: 99.3246539572011
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . ) :
rank: 294
score: 99.3193359375
patch: switch ( parent . get CaMeL Type ( ) ) { else {
rank: 294
score: 99.28261931046195
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Node . ) :
rank: 295
score: 99.47155309606481
patch: name = n . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 295
score: 99.44512939453125
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION : {
rank: 295
score: 99.4358146421371
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 295
score: 99.35517321134868
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) / * /
rank: 295
score: 99.34500461154514
patch: path = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 295
score: 99.32435191761364
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ( ) ;
rank: 295
score: 99.31932067871094
patch: switch ( parent == null || parent . get CaMeL Type ( ) ) {
rank: 295
score: 99.28148696001838
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . NONE :
rank: 295
score: 99.25564735814145
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . UNKNOWN _ NAME :
rank: 296
score: 99.47139937789352
patch: value = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 296
score: 99.43579943426724
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 296
score: 99.35511016845703
patch: switch ( parent . get CaMeL Type ( ) ) { n = ) ;
rank: 296
score: 99.32427423650569
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . )
rank: 296
score: 99.31874778053977
patch: switch ( parent . get CaMeL Type ( ) || parent == parent . get CaMeL Type ( ) ) {
rank: 296
score: 99.28141515395221
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . NONE :
rank: 296
score: 99.255615234375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . NAME :
rank: 297
score: 99.4713846842448
patch: key = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 297
score: 99.43556431361607
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n . get CaMeL Type ( ) ) {
rank: 297
score: 99.40634334788604
patch: switch ( n . get CaMeL Value ( ) ) { case Token . VAR :
rank: 297
score: 99.35464816623264
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . FUNCTION * /
rank: 297
score: 99.34418596540179
patch: String name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 297
score: 99.3239974975586
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } ) ;
rank: 297
score: 99.31818953804348
patch: Type type = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 297
score: 99.28089663856908
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . MAX _ VALUE :
rank: 297
score: 99.25555741159539
patch: switch ( parent . get CaMeL Type ( ) ) { case Char CaMeL Sequence . ) :
rank: 298
score: 99.47108289930556
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 298
score: 99.4440585049716
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { type = Name . Type . OTHER ;
rank: 298
score: 99.43540736607143
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 298
score: 99.40576934814453
patch: if ( n . get CaMeL First CaMeL Child ( ) != n ) {
rank: 298
score: 99.35446034307066
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Property CaMeL Type ( ) ;
rank: 298
score: 99.34406280517578
patch: if ( ! parent . get CaMeL First CaMeL Child ( ) == n )
rank: 298
score: 99.31796662703805
patch: parent = parent . get CaMeL Parent ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 298
score: 99.28089096966912
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . lang :
rank: 298
score: 99.25528971354167
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . )
rank: 299
score: 99.470947265625
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Parent ( ) ) ; }
rank: 299
score: 99.44361636513158
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . FUNCTION :
rank: 299
score: 99.40528700086806
patch: if ( parent . get CaMeL Type ( ) != Scope . STRING _ KEY ) {
rank: 299
score: 99.32339079483695
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . ) :
rank: 299
score: 99.31769353693181
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Class ( ) != null ) {
rank: 299
score: 99.28085763113839
patch: if ( parent . get CaMeL Type ( ) instanceof Node ) {
rank: 299
score: 99.25507061298077
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) )
rank: 300
score: 99.47092895507812
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 300
score: 99.44351050967262
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 300
score: 99.43501420454545
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 300
score: 99.40436112253289
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . INC :
rank: 300
score: 99.32327835648148
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ; }
rank: 300
score: 99.3174540201823
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Class . TRUE ) {
rank: 300
score: 99.28069196428571
patch: switch ( parent . get CaMeL Type ( ) ) { / true
rank: 300
score: 99.25483783922698
patch: switch ( n . get CaMeL Type ( ) ) { case Token . consume ( ) :
rank: 301
score: 99.470458984375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) + $STRING$ ;
rank: 301
score: 99.4433349609375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SETTER _ DEF : }
rank: 301
score: 99.43471457741477
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 301
score: 99.3538485440341
patch: switch ( parent . get CaMeL Type ( ) ) { count = parent . get CaMeL Type ( ) {
rank: 301
score: 99.31639099121094
patch: switch ( get CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 301
score: 99.28033126027961
patch: switch ( parent . get CaMeL Type ( ) ) { else { case Node . ) :
rank: 301
score: 99.25420178865132
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . MAX _ VALUE :
rank: 302
score: 99.4704296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL Type ( ) ) ) {
rank: 302
score: 99.4033435639881
patch: parent = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 302
score: 99.35375213623047
patch: if ( parent . get CaMeL Type ( ) != Type . type ) {
rank: 302
score: 99.34263102213542
patch: switch ( n . get CaMeL Type ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 302
score: 99.32272206182066
patch: name = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 302
score: 99.31638405539773
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Node ( ) != null ) {
rank: 302
score: 99.28028779871323
patch: switch ( parent . get CaMeL Type ( ) ) { case Short . TYPE :
rank: 302
score: 99.25414021809895
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( is CaMeL Set ) {
rank: 303
score: 99.4704120342548
patch: type = Name . Type . SET ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 303
score: 99.44296746504934
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 303
score: 99.43421875
patch: if ( parent . get CaMeL Type ( ) != Token . STRING _ KEY ) type = Name . Type . OTHER ;
rank: 303
score: 99.35357259114583
patch: switch ( parent . get CaMeL Type ( ) ) { * return ;
rank: 303
score: 99.34249717310855
patch: return name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 303
score: 99.31633758544922
patch: switch ( parent . get CaMeL Type ( ) || parent != type ) {
rank: 303
score: 99.27991253396739
patch: switch ( parent . get CaMeL Type ( ) ) { 0 = parent . get CaMeL Type ( ) ; }
rank: 303
score: 99.2534765625
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( is CaMeL Set )
rank: 304
score: 99.44280684621711
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . FUNCTION :
rank: 304
score: 99.40263061523437
patch: if ( ! get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) {
rank: 304
score: 99.3534927368164
patch: switch ( parent . get CaMeL Type ( ) ) { case ? * /
rank: 304
score: 99.32240619081439
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . notify CaMeL All ( ) ;
rank: 304
score: 99.27989286534927
patch: switch ( parent . get CaMeL Type ( ) ) { case Result . ) {
rank: 304
score: 99.25335334329044
patch: switch ( n . get CaMeL Type ( ) ) { case String . TYPE :
rank: 305
score: 99.47028459821429
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } else {
rank: 305
score: 99.44210205078124
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : ;
rank: 305
score: 99.40251079358552
patch: switch ( n . get CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 305
score: 99.35312906901042
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE : else
rank: 305
score: 99.34236225328948
patch: String type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 305
score: 99.32198660714286
patch: type = ( Node ) parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 305
score: 99.27918916590073
patch: switch ( parent . get CaMeL Type ( ) ) { false ; } * /
rank: 305
score: 99.25323845358456
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . digit :
rank: 306
score: 99.47026909722223
patch: key = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 306
score: 99.44190809461806
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { { {
rank: 306
score: 99.43318965517241
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) != null ) {
rank: 306
score: 99.40208675986842
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ) {
rank: 306
score: 99.35247039794922
patch: switch ( parent . get CaMeL Type ( ) ) { start ( ) ;
rank: 306
score: 99.34188503689236
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : _
rank: 306
score: 99.32196044921875
patch: type = ( Node ) parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 306
score: 99.3154296875
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . WARNING ) {
rank: 306
score: 99.27907200863487
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = false ; }
rank: 306
score: 99.25298517400569
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . )
rank: 307
score: 99.47019675925925
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } break ;
rank: 307
score: 99.4327392578125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 307
score: 99.4020637063419
patch: switch ( type . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 307
score: 99.35086495535714
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Value ( ) ;
rank: 307
score: 99.34122721354167
patch: Type type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 307
score: 99.32163307883523
patch: switch ( n . get CaMeL Type ( ) && n . get CaMeL Type ( ) == Token . )
rank: 307
score: 99.31527709960938
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Node . class ) {
rank: 307
score: 99.27883731617646
patch: switch ( parent . get CaMeL Type ( ) ) { - 1 : return ;
rank: 307
score: 99.25205641526442
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) )
rank: 308
score: 99.47009729456019
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } finally {
rank: 308
score: 99.44169311523437
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : :
rank: 308
score: 99.40204148065476
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) return ;
rank: 308
score: 99.35072544642857
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) )
rank: 308
score: 99.34092203776042
patch: int name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 308
score: 99.32155443274456
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; {
rank: 308
score: 99.31502278645833
patch: switch ( parent . get CaMeL Type ( ) ) { return ) ;
rank: 308
score: 99.25104370117188
patch: name = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; break ; }
rank: 309
score: 99.47000687210648
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ; }
rank: 309
score: 99.44150178328805
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != n )
rank: 309
score: 99.40188116776316
patch: switch ( current . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 309
score: 99.3506591796875
patch: switch ( parent . get CaMeL Type ( ) ) { * return )
rank: 309
score: 99.32141876220703
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 309
score: 99.31494140625
patch: switch ( super . get CaMeL Type ( ) ) {
rank: 309
score: 99.27844956341912
patch: switch ( parent . get CaMeL Type ( ) ) { case ) { null :
rank: 309
score: 99.24973431755515
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . frequency :
rank: 310
score: 99.46989639945652
patch: switch ( Node CaMeL Util . get CaMeL First CaMeL Child ( n . get CaMeL Next ( ) ) ) {
rank: 310
score: 99.40184783935547
patch: if ( n . get CaMeL Type ( ) == Name . Type ) {
rank: 310
score: 99.34085886101974
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) ;
rank: 310
score: 99.32127888997395
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 310
score: 99.31490325927734
patch: switch ( parent . get CaMeL Type ( ) ) { case ? false :
rank: 310
score: 99.27837057674633
patch: switch ( parent . get CaMeL Type ( ) ) { case String . ) ?
rank: 310
score: 99.2497199563419
patch: switch ( n . get CaMeL Type ( ) ) { case Token . LT :
rank: 311
score: 99.44124348958333
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : return ;
rank: 311
score: 99.43166632401316
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 311
score: 99.40164005055146
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME ;
rank: 311
score: 99.35026041666667
patch: switch ( parent . get CaMeL Type ( ) ) { else return {
rank: 311
score: 99.34042503720238
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) type = Name . Type . OTHER ;
rank: 311
score: 99.31477864583333
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) return ;
rank: 311
score: 99.27836470170455
patch: int index = parent . get CaMeL Type ( ) . to CaMeL String ( ) . length ( ) ;
rank: 311
score: 99.24966796875
patch: String name = parent . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 312
score: 99.44078304893092
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . NAME :
rank: 312
score: 99.4314208984375
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 312
score: 99.401611328125
patch: switch ( parent . get CaMeL Id ( ) ) { case Token . VAR :
rank: 312
score: 99.35018157958984
patch: switch ( parent . get CaMeL Type ( ) ) { / / / /
rank: 312
score: 99.340087890625
patch: try { name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) ;
rank: 312
score: 99.32097833806819
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) )
rank: 312
score: 99.31438887746711
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) )
rank: 312
score: 99.2783267372533
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) } else {
rank: 313
score: 99.46926540798611
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 313
score: 99.43989894701087
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : is CaMeL Set = true ;
rank: 313
score: 99.3499755859375
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Name ( ) ;
rank: 313
score: 99.34007727581522
patch: switch ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 313
score: 99.32088797433036
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Name ( ) ; }
rank: 313
score: 99.31411597842262
patch: switch ( parent . get CaMeL Type ( ) || ! parent . get CaMeL Type ( ) ) {
rank: 313
score: 99.27761661305146
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . CHECK :
rank: 313
score: 99.24941184303977
patch: name = parent . get CaMeL Name ( ) ;
rank: 314
score: 99.46910603841145
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ ) ;
rank: 314
score: 99.439453125
patch: if ( parent . get CaMeL Type ( ) != Token . STRING _ KEY )
rank: 314
score: 99.43083110608552
patch: switch ( get CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 314
score: 99.40118729440789
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ASSIGN : return ;
rank: 314
score: 99.33997453962054
patch: int name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 314
score: 99.3203515625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 314
score: 99.3126729329427
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . FALSE ) {
rank: 314
score: 99.27733612060547
patch: if ( parent != null ) {
rank: 314
score: 99.24808175223214
patch: name = parent . get CaMeL Name ( ) ; } return ;
rank: 315
score: 99.46907552083333
patch: rvalue = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 315
score: 99.43937174479167
patch: if ( parent . get CaMeL Type ( ) == Token . ASSIGN )
rank: 315
score: 99.43075125558036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 315
score: 99.40084678248355
patch: switch ( n . is CaMeL Object CaMeL Lit ( ) ) { case Token . VAR :
rank: 315
score: 99.34935087316177
patch: switch ( parent . get CaMeL Type ( ) ) { / * * / /
rank: 315
score: 99.33992084703948
patch: / * if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 315
score: 99.32030408135776
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; break ;
rank: 315
score: 99.31255231584821
patch: else { switch ( parent . get CaMeL Type ( ) ) {
rank: 315
score: 99.27722620081019
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 315
score: 99.24695542279412
patch: index = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 316
score: 99.46896484375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } is CaMeL Set = true ;
rank: 316
score: 99.43044517780173
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 316
score: 99.40079538445724
patch: switch ( parent . get CaMeL Qualified CaMeL Name ( ) ) { case Token . VAR :
rank: 316
score: 99.34921603732639
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . TYPE * /
rank: 316
score: 99.33975040211396
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Type :
rank: 316
score: 99.31995646158855
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 316
score: 99.31219123391544
patch: switch ( ! parent . get CaMeL Type ( ) . length ( ) ) {
rank: 316
score: 99.277197265625
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE : parent . get CaMeL Type ( ) ;
rank: 316
score: 99.24668375651042
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . )
rank: 317
score: 99.46895797164352
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } is CaMeL Set = true ;
rank: 317
score: 99.4303866299716
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) { return ;
rank: 317
score: 99.4005859375
patch: switch ( parent . get CaMeL Type ( ) ) { { case Token . STRING _ KEY :
rank: 317
score: 99.33949584960938
patch: int name = n . get CaMeL First CaMeL Child ( ) . get CaMeL Name ( ) ;
rank: 317
score: 99.31169128417969
patch: parent = get CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 317
score: 99.27665441176471
patch: switch ( parent . get CaMeL Type ( ) ) { case Result . TYPE :
rank: 317
score: 99.2461799172794
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GE :
rank: 318
score: 99.43037109375
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , n ) ;
rank: 318
score: 99.34824625651042
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) ) { null
rank: 318
score: 99.33949110243056
patch: path = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 318
score: 99.3197021484375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Type ( Name . Type ) ;
rank: 318
score: 99.31143043154762
patch: switch ( parent . get CaMeL Type ( ) ) { super . get CaMeL Type ( parent ) ;
rank: 318
score: 99.27658420138889
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) ) ;
rank: 318
score: 99.24589233398437
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case )
rank: 319
score: 99.43028913225446
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 319
score: 99.34821111505681
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) ) {
rank: 319
score: 99.3195467862216
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . )
rank: 319
score: 99.2755635579427
patch: switch ( current . get CaMeL Type ( ) ) {
rank: 319
score: 99.24583851207386
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case )
rank: 320
score: 99.46851748511905
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } return ;
rank: 320
score: 99.40003967285156
patch: if ( parent . get CaMeL Type ( ) == Node . VAR ) {
rank: 320
score: 99.34814453125
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parameter CaMeL Type ( ) {
rank: 320
score: 99.3388671875
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) ) {
rank: 320
score: 99.31110382080078
patch: switch ( parent . get CaMeL Type ( ) || parent instanceof Node ) {
rank: 320
score: 99.24537568933823
patch: switch ( n . get CaMeL Type ( ) ) { case Token . LE :
rank: 321
score: 99.46846771240234
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 321
score: 99.43801879882812
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : {
rank: 321
score: 99.43011881510417
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 321
score: 99.34787819602273
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) ) {
rank: 321
score: 99.33854844835069
patch: arg = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 321
score: 99.31897844587054
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL All ( ) ; }
rank: 321
score: 99.31103515625
patch: if ( parent . get CaMeL Type ( ) != ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 321
score: 99.27484130859375
patch: if ( parent . get CaMeL Value ( ) != null ) {
rank: 321
score: 99.24529296875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . MIN _ VALUE :
rank: 322
score: 99.46840639467592
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL First CaMeL Child ( ) ) ; }
rank: 322
score: 99.39921489514802
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : this .
rank: 322
score: 99.3478771391369
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Class ( ) ;
rank: 322
score: 99.3382080078125
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 322
score: 99.31886643629808
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 322
score: 99.3109842936198
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Node . NONE ) {
rank: 322
score: 99.24528952205883
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . BLOCK :
rank: 323
score: 99.46819598858173
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) + $STRING$ ;
rank: 323
score: 99.43724300986842
patch: if ( is CaMeL Set || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 323
score: 99.4297344501202
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 323
score: 99.34775904605263
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE * * /
rank: 323
score: 99.33790418836806
patch: p = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 323
score: 99.31885827105978
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . NULL )
rank: 323
score: 99.31038411458333
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . FALSE ) {
rank: 323
score: 99.2450284090909
patch: name = parent . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 324
score: 99.46815842848558
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; continue ;
rank: 324
score: 99.337890625
patch: int n = parent . get CaMeL Type ( ) . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 324
score: 99.31007893880208
patch: switch ( parent . get CaMeL Type ( ) ) { { case Node . ) ;
rank: 324
score: 99.27455767463235
patch: switch ( parent . get CaMeL Type ( ) ) { - 0 : return ;
rank: 325
score: 99.46766075721153
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , n ) ;
rank: 325
score: 99.43649291992188
patch: type = Name . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 325
score: 99.42965382543103
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 325
score: 99.34729534646739
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Function CaMeL Type ( ) ;
rank: 325
score: 99.3184814453125
patch: name = parent . get CaMeL Name ( ) . to CaMeL String ( ) ; }
rank: 325
score: 99.30943806966145
patch: switch ( name . get CaMeL Type ( ) ) {
rank: 325
score: 99.27455049402573
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . NULL :
rank: 326
score: 99.436279296875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SETTER _ DEF : :
rank: 326
score: 99.429619140625
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) type = Name . Type . OTHER ;
rank: 326
score: 99.39752518503289
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . FUNCTION :
rank: 326
score: 99.34717475043402
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . class * /
rank: 326
score: 99.33667755126953
patch: if ( parent . get CaMeL First CaMeL Child ( ) > n ) {
rank: 326
score: 99.30938399465461
patch: parent . get CaMeL Type ( ) ; { parent . get CaMeL Type ( ) ; }
rank: 326
score: 99.24372414981617
patch: name = parent . get CaMeL Name ( ) ; if ( is CaMeL Set )
rank: 327
score: 99.43624441964286
patch: switch ( parent . get CaMeL Type ( ) ) { case Node CaMeL Util . GETTER _ DEF :
rank: 327
score: 99.42950439453125
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 327
score: 99.39741785386029
patch: switch ( n . get CaMeL Type ( ) ) { case Name . VAR :
rank: 327
score: 99.3363037109375
patch: String name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL String CaMeL Value ( ) ;
rank: 327
score: 99.31781364889706
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Subset :
rank: 327
score: 99.30912562779018
patch: switch ( this . parent . get CaMeL Type ( ) ) {
rank: 327
score: 99.27425130208333
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( name ) ;
rank: 327
score: 99.24352309283088
patch: switch ( n . get CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 328
score: 99.46674138849431
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 328
score: 99.4361572265625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Name . VAR :
rank: 328
score: 99.4287353515625
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } }
rank: 328
score: 99.34689198369566
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Value CaMeL Type ( ) {
rank: 328
score: 99.33570353190105
patch: switch ( parent . has CaMeL Type ( ) ) {
rank: 328
score: 99.31772030101104
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . CHECK :
rank: 328
score: 99.30910237630208
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Node . class ) {
rank: 328
score: 99.2739894701087
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case String . TYPE :
rank: 328
score: 99.24338666130515
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . PREFIX :
rank: 329
score: 99.4360018643466
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . STRING :
rank: 329
score: 99.42866734095982
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 329
score: 99.31748560855263
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Class CaMeL Name ( ) ;
rank: 329
score: 99.30880737304688
patch: switch ( parent . get CaMeL Type ( ) ) { else switch ( parent . get CaMeL Type ( ) ) {
rank: 329
score: 99.24330767463235
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FORMAT :
rank: 330
score: 99.43579819623162
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { )
rank: 330
score: 99.39669799804688
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { default :
rank: 330
score: 99.34657505580357
patch: switch ( parent . get CaMeL Type ( ) ) { = type . get CaMeL Type ( ) ;
rank: 330
score: 99.3353271484375
patch: int name = n . get CaMeL First CaMeL Child ( ) ;
rank: 330
score: 99.31722359035327
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 330
score: 99.24186401367187
patch: final int index = parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 331
score: 99.46604636863425
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Name . Type . OTHER ) {
rank: 331
score: 99.43574793198529
patch: type = Name . Type . SET ; type = Name . Type . SET ;
rank: 331
score: 99.42809186662946
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 331
score: 99.39630485983456
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { }
rank: 331
score: 99.34609840029762
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Node ( ) {
rank: 331
score: 99.3170498934659
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) + $STRING$ ) ;
rank: 331
score: 99.27189366957721
patch: if ( parent != null && parent . get CaMeL Type ( ) == ) {
rank: 332
score: 99.43512517755681
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . SETTER _ DEF : {
rank: 332
score: 99.3955078125
patch: switch ( parent . get CaMeL Value ( ) ) { case Token . VAR :
rank: 332
score: 99.33506469726562
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ;
rank: 332
score: 99.31704249526516
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 332
score: 99.2715555826823
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != String . class ) {
rank: 332
score: 99.2400539232337
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . NONE :
rank: 333
score: 99.43488512541118
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . SETTER _ DEF :
rank: 333
score: 99.42775472005208
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 333
score: 99.34590229235198
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) { * /
rank: 333
score: 99.33428596047794
patch: switch ( parent . has CaMeL Type ( ) ) { case Token . VAR :
rank: 333
score: 99.30823516845703
patch: switch ( parent . get CaMeL Type ( ) ) { { case ) ;
rank: 333
score: 99.2714484719669
patch: switch ( parent . get CaMeL Type ( ) ) { case String . NONE :
rank: 334
score: 99.43465576171874
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : }
rank: 334
score: 99.42759638247283
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION : is CaMeL Set = true ;
rank: 334
score: 99.39488309972427
patch: if ( name . equals ( n . get CaMeL Type ( ) ) ) {
rank: 334
score: 99.3458251953125
patch: switch ( parent . get CaMeL Type ( ) ) { { * ? /
rank: 334
score: 99.3341552734375
patch: final Name name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 334
score: 99.31683904474431
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; } return ;
rank: 334
score: 99.30763244628906
patch: switch ( parent . get CaMeL Type ( ) && parent instanceof Node ) {
rank: 334
score: 99.27057756696429
patch: if ( parent . get CaMeL Parent ( ) != null ) {
rank: 335
score: 99.43426513671875
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . INC ) {
rank: 335
score: 99.39470079210069
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP : }
rank: 335
score: 99.34573496942934
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parameter CaMeL Type ( ) {
rank: 335
score: 99.33409830729167
patch: switch ( parent . has CaMeL Type ( Token . VAR ) ) {
rank: 335
score: 99.31679835464016
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . to CaMeL String ( ) ;
rank: 335
score: 99.30747919497283
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Name . ) {
rank: 335
score: 99.239208984375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Type . STRING _ KEY :
rank: 336
score: 99.46325231481481
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } } }
rank: 336
score: 99.43392141241776
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = true ;
rank: 336
score: 99.42738079202586
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 336
score: 99.39463895909927
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . 1 :
rank: 336
score: 99.34561011904762
patch: switch ( parent . get CaMeL Type ( ) ) { , parent . get CaMeL Type ( ) .
rank: 336
score: 99.33356267755681
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) { default :
rank: 336
score: 99.31675318667763
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 336
score: 99.30702718098958
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . NAME ) {
rank: 336
score: 99.23909859035327
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . NULL )
rank: 337
score: 99.39449462890624
patch: if ( parent . get CaMeL Type ( ) == Node CaMeL Util . STRING _ KEY ) {
rank: 337
score: 99.34544735863095
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property ( ) {
rank: 337
score: 99.33326357886905
patch: Symbol name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 337
score: 99.31669108072917
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; break ; }
rank: 337
score: 99.30684407552083
patch: switch ( parent . get CaMeL Type ( ) ) { { case Node . ) ?
rank: 337
score: 99.26797087296195
patch: switch ( parent . get CaMeL Type ( ) ) { if ( parent . get CaMeL Type ( ) ) {
rank: 337
score: 99.23871319110577
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( is CaMeL Set ) {
rank: 338
score: 99.46285445601852
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 338
score: 99.42704716435185
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . SETTER _ DEF :
rank: 338
score: 99.39417724609375
patch: switch ( ! parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . GETPROP :
rank: 338
score: 99.34515671502976
patch: switch ( parent . get CaMeL Type ( ) ) { = type . get CaMeL Parent ( ) {
rank: 338
score: 99.33286830357143
patch: if ( parent . get CaMeL Type ( ) == Token . VAR ) is CaMeL Set = true ;
rank: 338
score: 99.31665717230902
patch: type = name . get CaMeL Type ( ) . get CaMeL Name ( ) ; }
rank: 338
score: 99.30678304036458
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . NAME ) {
rank: 338
score: 99.26771455652573
patch: switch ( parent . get CaMeL Type ( ) ) { case Object . class :
rank: 338
score: 99.23867399796195
patch: switch ( n . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type ( ) ) )
rank: 339
score: 99.462216796875
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 339
score: 99.43320534446023
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . FUNCTION :
rank: 339
score: 99.42647552490234
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 339
score: 99.34496008831522
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent CaMeL Node ( ) {
rank: 339
score: 99.33274244225544
patch: switch ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) { case Token . STRING _ KEY :
rank: 339
score: 99.267421875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add ( parent . get CaMeL Type ( ) ) ;
rank: 339
score: 99.238525390625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . NONE :
rank: 340
score: 99.43303888494319
patch: switch ( parent . get CaMeL Parent ( ) )
rank: 340
score: 99.39403578814338
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN ;
rank: 340
score: 99.33246926700367
patch: if ( parent . get CaMeL Type ( ) != Name . Type . OTHER )
rank: 340
score: 99.31661648220486
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Class ( ) ; }
rank: 340
score: 99.30642832880434
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . ) ;
rank: 340
score: 99.26725551060268
patch: if ( parent . get CaMeL Type ( ) instanceof Function ) {
rank: 341
score: 99.43276145241477
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY : :
rank: 341
score: 99.42564655172414
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 341
score: 99.39398484002976
patch: switch ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) { case Token . VAR :
rank: 341
score: 99.34445529513889
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . class * /
rank: 341
score: 99.3165283203125
patch: type = name . get CaMeL Type ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 341
score: 99.30622863769531
patch: switch ( parent . get CaMeL Type ( ) ) { case ? ) ?
rank: 341
score: 99.267236328125
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) : parent . get CaMeL Type ( ) ;
rank: 341
score: 99.23815046037946
patch: switch ( node . get CaMeL Type ( ) ) { case )
rank: 342
score: 99.46164175180289
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Set = true ;
rank: 342
score: 99.42554582868304
patch: type = Name . Type . FUNCTION ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 342
score: 99.39351981026786
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) { }
rank: 342
score: 99.3314717610677
patch: final Name . Type type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 342
score: 99.31625366210938
patch: Object value = parent . get CaMeL Object CaMeL Value ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 342
score: 99.30596923828125
patch: switch ( parent . get CaMeL Type ( ) ) { * ? return ;
rank: 342
score: 99.26615849247685
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Type ( ) ) ;
rank: 342
score: 99.23708274147727
patch: switch ( parent . get CaMeL Type ( ) + $STRING$ + parent . get CaMeL Type ( ) ) {
rank: 343
score: 99.46090262276786
patch: name = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 343
score: 99.43252563476562
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . NAME ) {
rank: 343
score: 99.42549402573529
patch: switch ( parent . get CaMeL Class ( ) ) { case Token . VAR :
rank: 343
score: 99.3441162109375
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Value CaMeL Type ( ) {
rank: 343
score: 99.33139377170139
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) return ;
rank: 343
score: 99.31558122306035
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . remove CaMeL Child ( parent ) ; }
rank: 343
score: 99.30594889322917
patch: if ( parent != null ) switch ( parent . get CaMeL Type ( ) ) {
rank: 343
score: 99.26589786305146
patch: switch ( parent . get CaMeL Class ( ) ) { case String . class :
rank: 344
score: 99.43252081620066
patch: switch ( node . get CaMeL First CaMeL Child ( ) ) { case Token . VAR :
rank: 344
score: 99.42548370361328
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) . is CaMeL Object CaMeL Lit ( ) )
rank: 344
score: 99.34408569335938
patch: switch ( parent . get CaMeL Type ( ) ) { * return ; }
rank: 344
score: 99.33135308159723
patch: value = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 344
score: 99.31550399116848
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) ;
rank: 344
score: 99.305908203125
patch: switch ( parent . get CaMeL Type ( ) ) { case ? default :
rank: 344
score: 99.26557473575367
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . NEW :
rank: 344
score: 99.235029296875
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . ) {
rank: 345
score: 99.46048828125
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } is CaMeL Set = true ;
rank: 345
score: 99.432373046875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF : }
rank: 345
score: 99.42539349724265
patch: switch ( module . get CaMeL Type ( ) ) { case Token . VAR :
rank: 345
score: 99.3311767578125
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( n . get CaMeL Next ( ) ) ) {
rank: 345
score: 99.30588250411184
patch: if ( parent != null || parent . get CaMeL Type ( ) != Type . ) {
rank: 345
score: 99.26540798611111
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) ) ;
rank: 345
score: 99.2344386888587
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . ) {
rank: 346
score: 99.46041259765624
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Parent ( ) ) ;
rank: 346
score: 99.4323497953869
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . STRING _ KEY :
rank: 346
score: 99.4252993935033
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL Type ( ) ) ) {
rank: 346
score: 99.39268188476562
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == null )
rank: 346
score: 99.34372780539773
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) { }
rank: 346
score: 99.33109907670455
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) is CaMeL Set = true ;
rank: 346
score: 99.31529651988636
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) )
rank: 346
score: 99.30586511948529
patch: switch ( parent . get CaMeL Type ( ) ) { case Location . ) :
rank: 346
score: 99.26503057065217
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL String CaMeL Value ( ) ;
rank: 346
score: 99.23302283653847
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) )
rank: 347
score: 99.43197021484374
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 347
score: 99.39261667351974
patch: switch ( n . get CaMeL Type ( ) ) { case Name . STRING _ KEY :
rank: 347
score: 99.34361267089844
patch: switch ( parent . get CaMeL Type ( ) ) { parent = null {
rank: 347
score: 99.315107421875
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 347
score: 99.30582328464673
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Name . ) {
rank: 347
score: 99.26357421875
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL String CaMeL Value ( ) ) ;
rank: 347
score: 99.23173828125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 348
score: 99.46023559570312
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) . get CaMeL Value ( ) ;
rank: 348
score: 99.42477101293103
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 348
score: 99.39227653952206
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( name ) ) {
rank: 348
score: 99.34353637695312
patch: switch ( parent . get CaMeL Type ( ) ) { = ) ; }
rank: 348
score: 99.31508937026516
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 348
score: 99.26338465073529
patch: switch ( parent . get CaMeL Type ( ) ) { true ; } * /
rank: 348
score: 99.23100224247685
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ;
rank: 349
score: 99.45972618689903
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) + $STRING$ ) ;
rank: 349
score: 99.43174235026042
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION : }
rank: 349
score: 99.42463631465517
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 349
score: 99.39217122395833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { {
rank: 349
score: 99.343505859375
patch: switch ( parent . get CaMeL Type ( ) ) { true :
rank: 349
score: 99.3147490530303
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( ) ;
rank: 349
score: 99.30550130208333
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Class . TRUE ) {
rank: 350
score: 99.45970775462963
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 350
score: 99.43104248046875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . SETTER _ DEF : ;
rank: 350
score: 99.42417841372283
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . VAR :
rank: 350
score: 99.34345703125
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent {
rank: 350
score: 99.33059825067934
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) && parent . is CaMeL Function CaMeL Expression ( ) )
rank: 350
score: 99.31462991648706
patch: type = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 350
score: 99.30502755301339
patch: do . switch ( parent . get CaMeL Type ( ) ) {
rank: 350
score: 99.263095703125
patch: switch ( parent . get CaMeL Type ( ) ) { case String . class : parent . get CaMeL Type ( ) ;
rank: 350
score: 99.2286376953125
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; }
rank: 351
score: 99.42368035567434
patch: switch ( n . get CaMeL Type ( ) ) { case Token . FUNCTION : return ;
rank: 351
score: 99.39165296052632
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Token . GETPROP :
rank: 351
score: 99.34340533088235
patch: switch ( parent . get CaMeL Type ( ) ) { ) { * * /
rank: 351
score: 99.33026413690476
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Name . STRING _ KEY :
rank: 351
score: 99.30489951685855
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) ;
rank: 351
score: 99.26266346807066
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case Integer . TRUE :
rank: 351
score: 99.22715657552084
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 352
score: 99.45960582386364
patch: rvalue = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 352
score: 99.42969468060662
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ASSIGN :
rank: 352
score: 99.42324347245066
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY ;
rank: 352
score: 99.3433349609375
patch: switch ( parent . get CaMeL Type ( ) ) { null ; }
rank: 352
score: 99.33017449629934
patch: switch ( n . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) )
rank: 352
score: 99.31397271925404
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 352
score: 99.26252547554348
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL String ( ) ) ;
rank: 352
score: 99.2267578125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . ) {
rank: 353
score: 99.42959594726562
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . GETPROP ) {
rank: 353
score: 99.32969599184783
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Next ( ) ) ) {
rank: 353
score: 99.30441766036184
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . Type . ) :
rank: 353
score: 99.22654127038044
patch: name = parent . get CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 354
score: 99.45843796502976
patch: rvalue = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 354
score: 99.4294677734375
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 354
score: 99.39138312088816
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY ?
rank: 354
score: 99.3430404663086
patch: if ( parent . get CaMeL Type ( ) == Node . TYPE ) {
rank: 354
score: 99.32946166992187
patch: int name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 354
score: 99.31382427793561
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL All ( ) ;
rank: 354
score: 99.30411783854167
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Class . TYPE ) {
rank: 354
score: 99.26160685221355
patch: switch ( parent . get CaMeL Type ( ) ) { else if ( parent . get CaMeL Type ( ) ) {
rank: 354
score: 99.22570270040761
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . class :
rank: 355
score: 99.42921142578125
patch: name = n . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 355
score: 99.42235423900463
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Name . STRING _ KEY ) {
rank: 355
score: 99.39122953869048
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { default :
rank: 355
score: 99.3429946899414
patch: switch ( parent . get CaMeL Type ( ) ) { / * / }
rank: 355
score: 99.31362915039062
patch: type = name . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 355
score: 99.30405680338542
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . FALSE ) {
rank: 355
score: 99.2614034016927
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = parent . get CaMeL Type ( ) ;
rank: 356
score: 99.45752892127403
patch: switch ( n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 356
score: 99.428955078125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . SETTER _ DEF : }
rank: 356
score: 99.42222528872283
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) { return ; }
rank: 356
score: 99.34297943115234
patch: switch ( parent . get CaMeL Type ( ) ) { / * ? /
rank: 356
score: 99.32880401611328
patch: try { switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 356
score: 99.31310221354167
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) = name ; }
rank: 356
score: 99.303955078125
patch: switch ( parent . get ( ) . get CaMeL Type ( ) ) {
rank: 356
score: 99.26025390625
patch: if ( parent != null && parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) ) {
rank: 356
score: 99.22557532269022
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . class :
rank: 357
score: 99.45749733664773
patch: Node type = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 357
score: 99.4282863451087
patch: if ( parent != null || parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) )
rank: 357
score: 99.42222493489584
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 357
score: 99.39114540501645
patch: switch ( this . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 357
score: 99.34295099431819
patch: switch ( parent . get CaMeL Type ( ) ) { { -- parent . get CaMeL Type ( ) {
rank: 357
score: 99.3128662109375
patch: switch ( n . get CaMeL Type ( ) ) { case ) return ;
rank: 357
score: 99.30375162760417
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . NAME ) {
rank: 357
score: 99.25914655412946
patch: if ( parent . get CaMeL Type ( ) != $STRING$ ) {
rank: 357
score: 99.22501953125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . class :
rank: 358
score: 99.45726634837963
patch: n = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 358
score: 99.42815840871711
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . GETTER _ DEF :
rank: 358
score: 99.34219215029762
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parent ( ) )
rank: 358
score: 99.32877604166667
patch: token = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 358
score: 99.30357055664062
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Class ( ) ) {
rank: 358
score: 99.2581097146739
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type ( ) ) { case Integer . TYPE :
rank: 358
score: 99.22482534555289
patch: String name = parent . get CaMeL Name ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 359
score: 99.42180069633152
patch: type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 359
score: 99.34217900815217
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parameter CaMeL Type ( ) ;
rank: 359
score: 99.32846966911765
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ASSIGN :
rank: 359
score: 99.31253051757812
patch: type = name . get CaMeL First CaMeL Child ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 359
score: 99.25806535993304
patch: switch ( parent . get CaMeL Type ( ) ) { false }
rank: 359
score: 99.2233249830163
patch: String name = parent . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 360
score: 99.45688264266305
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) != null ) {
rank: 360
score: 99.42793354235198
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . FUNCTION :
rank: 360
score: 99.42146439985795
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) { return ;
rank: 360
score: 99.39077579273896
patch: switch ( n . get CaMeL String ( ) ) { case Token . VAR :
rank: 360
score: 99.34197387695312
patch: switch ( parent . get CaMeL Type ( ) ) { ++ get CaMeL Type ( parent ) ;
rank: 360
score: 99.32804790296052
patch: int id = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 360
score: 99.3122089092548
patch: name = parent . get CaMeL Name ( ) ; break ;
rank: 360
score: 99.303271484375
patch: switch ( parent . get CaMeL Type ( ) || node . get CaMeL Type ( ) ) {
rank: 360
score: 99.2574971516927
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != String . class ) {
rank: 361
score: 99.45667442908653
patch: get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; type = Name . Type . FUNCTION ;
rank: 361
score: 99.42788550967262
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent != null ) {
rank: 361
score: 99.4211361533717
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : return ;
rank: 361
score: 99.39066997327302
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition . ASSIGN :
rank: 361
score: 99.34148615056819
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Value ( ) {
rank: 361
score: 99.31197554976852
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 361
score: 99.25729370117188
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parameter CaMeL Count ( ) ;
rank: 361
score: 99.22286854619566
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . NULL )
rank: 362
score: 99.4278076171875
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING : }
rank: 362
score: 99.421064453125
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . ASSIGN :
rank: 362
score: 99.34144176136364
patch: switch ( parent . get CaMeL Type ( ) ) { null : parent . get CaMeL Type ( ) {
rank: 362
score: 99.32778591579861
patch: key = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 362
score: 99.30297088623047
patch: switch ( parent . get CaMeL Type ( ) || parent != parent ) {
rank: 362
score: 99.2569071451823
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 362
score: 99.22284807477679
patch: set CaMeL Name ( parent . get CaMeL Name ( ) ) ;
rank: 363
score: 99.42776925223214
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n )
rank: 363
score: 99.42105538504464
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 363
score: 99.39007927389706
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( scope ) ) {
rank: 363
score: 99.34102006392045
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Class ( ) {
rank: 363
score: 99.31171875
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 363
score: 99.30277506510417
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Node . NONE ) {
rank: 363
score: 99.25627790178571
patch: if ( parent . get CaMeL String ( ) == null ) {
rank: 363
score: 99.22250802176339
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ; }
rank: 364
score: 99.42089125689338
patch: switch ( scope . get CaMeL Type ( ) ) { case Token . VAR :
rank: 364
score: 99.38999938964844
patch: if ( n . get CaMeL Type ( ) == Token . Definition ) {
rank: 364
score: 99.32758924696181
patch: decl = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 364
score: 99.31166294642857
patch: type = name . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 364
score: 99.30272420247395
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . FALSE ) {
rank: 364
score: 99.256015625
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) : parent . get CaMeL Type ( ) ;
rank: 364
score: 99.2221042798913
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . NAME :
rank: 365
score: 99.4208351417824
patch: if ( parent . get CaMeL Type ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 365
score: 99.340087890625
patch: switch ( parent . get CaMeL Type ( ) ) { ++ type ;
rank: 365
score: 99.32755319695724
patch: String Name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 365
score: 99.3116519325658
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ) ; }
rank: 365
score: 99.30215454101562
patch: switch ( parent . get CaMeL Type ( ) || null == parent ) {
rank: 365
score: 99.255654296875
patch: switch ( parent . get CaMeL Type ( ) ) { is CaMeL Array = parent . get CaMeL Type ( ) ; }
rank: 365
score: 99.22196742466518
patch: name = parent . get CaMeL Name ( ) ; break ; }
rank: 366
score: 99.45597330729167
patch: n = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 366
score: 99.34004138764881
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL String ( ) {
rank: 366
score: 99.31161295572916
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) . get CaMeL Name ( ) ; }
rank: 366
score: 99.30207061767578
patch: switch ( parent . get CaMeL Type ( ) && parent != type ) {
rank: 366
score: 99.25559488932292
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == String . class ) {
rank: 366
score: 99.2216796875
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ;
rank: 367
score: 99.427490234375
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { case Token . ASSIGN :
rank: 367
score: 99.42041015625
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY : . = Name . Type . OTHER ;
rank: 367
score: 99.33993928328805
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type CaMeL Name ( ) {
rank: 367
score: 99.32730712890626
patch: if ( ! parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 367
score: 99.311572265625
patch: name = ( String ) parent . get CaMeL Parent ( ) ; }
rank: 367
score: 99.30195949388587
patch: if ( parent . get CaMeL Type ( ) == Type . ) { parent . get CaMeL Type ( ) {
rank: 367
score: 99.25536047894022
patch: switch ( parent . get CaMeL Type ( ) ) { next ( parent . get CaMeL Type ( ) ) ;
rank: 367
score: 99.22048021399456
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Type . NULL :
rank: 368
score: 99.45517202524039
patch: type = Name . Type . FUNCTION ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 368
score: 99.420107421875
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : is CaMeL Set = true ;
rank: 368
score: 99.33976236979167
patch: switch ( parent . get CaMeL Type ( ) ) { >= 1 ;
rank: 368
score: 99.32725614659927
patch: switch ( Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) ) {
rank: 368
score: 99.31139418658088
patch: switch ( n . get CaMeL Type ( ) ) { case Token . OTHER :
rank: 368
score: 99.30189915707237
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) return ) ;
rank: 368
score: 99.2553074048913
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) ) { }
rank: 368
score: 99.2199609375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 369
score: 99.4551532451923
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; * /
rank: 369
score: 99.4198467548077
patch: switch ( n . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) :
rank: 369
score: 99.38912200927734
patch: if ( parent . get CaMeL Type ( ) != Node . VAR ) {
rank: 369
score: 99.33968098958333
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Node ( ) ;
rank: 369
score: 99.32654918323864
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Parent ( ) ) )
rank: 369
score: 99.31117757161458
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) { switch ( parent . get CaMeL Type ( ) )
rank: 369
score: 99.30179595947266
patch: switch ( parent . get CaMeL Type ( ) && parent != parent ) {
rank: 369
score: 99.25480143229167
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 369
score: 99.21782394935344
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ;
rank: 370
score: 99.42713994565217
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . INC )
rank: 370
score: 99.41978717672414
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 370
score: 99.38902587890625
patch: switch ( ! parent . is CaMeL Object CaMeL Lit ( ) ) { case Token . ASSIGN :
rank: 370
score: 99.31114959716797
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( )
rank: 370
score: 99.25468113111413
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Boolean . TYPE :
rank: 371
score: 99.42702349494485
patch: if ( parent . get CaMeL Type ( ) == Node . STRING _ KEY )
rank: 371
score: 99.38897705078125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { break ; }
rank: 371
score: 99.33929443359375
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent { }
rank: 371
score: 99.3108901977539
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 371
score: 99.30170641447368
patch: switch ( parent . get CaMeL Type ( ) ) { ) { case Node . ) :
rank: 371
score: 99.2542034646739
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Type . ) :
rank: 371
score: 99.2168601707176
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) )
rank: 372
score: 99.45384306066177
patch: type = Name . Type . OTHER ; type = Name . Type . SET ;
rank: 372
score: 99.42698910361842
patch: if ( parent != null || parent . get CaMeL Type ( ) == Token . VAR )
rank: 372
score: 99.41939544677734
patch: if ( n . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 372
score: 99.38892957899306
patch: if ( parent == null && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 372
score: 99.33924967447916
patch: switch ( parent . get CaMeL Type ( ) ) { -- type {
rank: 372
score: 99.32591610863095
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Token . GETTER _ DEF :
rank: 372
score: 99.31085759943181
patch: name = parent . get CaMeL Type ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 372
score: 99.30161539713542
patch: switch ( scope . get CaMeL Type ( ) ) {
rank: 372
score: 99.25400178328805
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Type ( ) ) { case String . TYPE :
rank: 372
score: 99.216748046875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Token . NONE :
rank: 373
score: 99.45345365084134
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 373
score: 99.42664859169408
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . ASSIGN :
rank: 373
score: 99.41896057128906
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 373
score: 99.38882785373264
patch: switch ( parent . get CaMeL Type ( ) ) return ; case Token . ASSIGN :
rank: 373
score: 99.33884595788044
patch: switch ( parent . get CaMeL Type ( ) ) { Type type = parent . get CaMeL Type ( ) {
rank: 373
score: 99.31070963541667
patch: String name = name . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 373
score: 99.30157470703125
patch: switch ( parent . get CaMeL Type ( ) ) { default = parent {
rank: 373
score: 99.25357719089673
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Boolean . TRUE :
rank: 373
score: 99.2165234375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . NAME :
rank: 374
score: 99.45339068244485
patch: is CaMeL Set = true ; type = Name . Type . SET ; break ;
rank: 374
score: 99.42639770507813
patch: if ( parent == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 374
score: 99.41844764122597
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) { is CaMeL Set = true ;
rank: 374
score: 99.38876681857639
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 374
score: 99.33879288383152
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Function CaMeL Type ( ) ;
rank: 374
score: 99.32560929008152
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) || parent . is CaMeL Function CaMeL Expression ( ) )
rank: 374
score: 99.301513671875
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . DEFAULT ) {
rank: 374
score: 99.25320999710648
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Name ( ) ) ;
rank: 374
score: 99.21628736413044
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . TYPE )
rank: 375
score: 99.45326450892857
patch: type = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 375
score: 99.42617315995066
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . ASSIGN :
rank: 375
score: 99.4182861328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { return ; }
rank: 375
score: 99.38875325520833
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY
rank: 375
score: 99.33830261230469
patch: switch ( parent . get CaMeL Type ( ) ) { * true * /
rank: 375
score: 99.31036376953125
patch: type = Name . Type ; switch ( n . get CaMeL Type ( ) ) {
rank: 375
score: 99.25318254743304
patch: switch ( type . get CaMeL Type ( ) ) { * /
rank: 376
score: 99.41827182112068
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 376
score: 99.3886486235119
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) { {
rank: 376
score: 99.3381014737216
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parent ( ) { else
rank: 376
score: 99.31024354876894
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) {
rank: 376
score: 99.30110931396484
patch: switch ( parent . get CaMeL Type ( ) ) { TRUE = null ;
rank: 376
score: 99.25218665081522
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case String . class :
rank: 376
score: 99.21533203125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . ) {
rank: 377
score: 99.45251953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL Next ( ) ) ) {
rank: 377
score: 99.42600708007812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != n )
rank: 377
score: 99.30991802793561
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Root ( ) ;
rank: 377
score: 99.30066935221355
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Node . class ) {
rank: 377
score: 99.24906703404018
patch: switch ( parent . get CaMeL Type ( ) ) { true }
rank: 378
score: 99.4524813565341
patch: switch ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) { }
rank: 378
score: 99.38777923583984
patch: if ( parent . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 378
score: 99.33778381347656
patch: switch ( parent . get CaMeL Type ( ) ) { parent = null ;
rank: 378
score: 99.32430826822916
patch: if ( parent . get CaMeL Type ( ) != Name . Type )
rank: 378
score: 99.30974211516204
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Id ( ) ;
rank: 378
score: 99.24896240234375
patch: set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 378
score: 99.21473760190217
patch: String name = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 379
score: 99.45235188802083
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { default : return ;
rank: 379
score: 99.41780879579741
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 379
score: 99.38754754317434
patch: switch ( value . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 379
score: 99.33765709918478
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Function CaMeL Type ( ) {
rank: 379
score: 99.30967018821023
patch: type = name . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 379
score: 99.3002421061198
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 379
score: 99.2482198079427
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) != null ) {
rank: 380
score: 99.45232684795673
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } else
rank: 380
score: 99.42528686523437
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) != n )
rank: 380
score: 99.41776275634766
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Set = true ;
rank: 380
score: 99.3874870749081
patch: switch ( key . get CaMeL Type ( ) ) { case Token . VAR :
rank: 380
score: 99.32380114103618
patch: switch ( parent . has CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 380
score: 99.30961470170455
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 380
score: 99.30010986328125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { default :
rank: 380
score: 99.2470172384511
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Type . TYPE :
rank: 380
score: 99.21436608355978
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . NULL :
rank: 381
score: 99.45225172776442
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; type = Name . Type . GET ;
rank: 381
score: 99.417724609375
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 381
score: 99.38745835248162
patch: if ( n . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 381
score: 99.32368977864583
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 381
score: 99.3095703125
patch: type = name . get CaMeL Class CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 381
score: 99.30006510416666
patch: switch ( parent . get CaMeL Type ( ) ) { { * ?
rank: 381
score: 99.24494735054348
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Integer . TRUE :
rank: 381
score: 99.2138141134511
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . NULL :
rank: 382
score: 99.45192649147727
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 382
score: 99.42491239659927
patch: if ( parent != null && parent . is CaMeL Function CaMeL Expression ( ) )
rank: 382
score: 99.41768391927083
patch: switch ( module . get CaMeL Type ( ) ) {
rank: 382
score: 99.38736724853516
patch: if ( parent . get CaMeL Type ( ) == Token . OTHER ) {
rank: 382
score: 99.33719308035714
patch: switch ( parent . get CaMeL Type ( ) ) { / n . get CaMeL Type ( ) ;
rank: 382
score: 99.32366071428571
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF : return ;
rank: 382
score: 99.30942719558189
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( name ) ; {
rank: 382
score: 99.29995727539062
patch: switch ( parent . get CaMeL Type ( ) ) { { * / {
rank: 382
score: 99.24483816964286
patch: if ( parent . get CaMeL Type ( ) == null ) {
rank: 383
score: 99.451826171875
patch: type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 383
score: 99.4247982627467
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . GETPROP :
rank: 383
score: 99.41767578125
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } break ;
rank: 383
score: 99.33719308035714
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Value ( ) ;
rank: 383
score: 99.32358224051339
patch: try { switch ( n . get CaMeL Type ( ) ) {
rank: 383
score: 99.29989420572916
patch: final ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 383
score: 99.24304729959239
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case Type . TYPE :
rank: 383
score: 99.21306741648706
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 384
score: 99.45174466646634
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 384
score: 99.33716930042614
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Parent ( ) ;
rank: 384
score: 99.29936780427632
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . Type . ) {
rank: 384
score: 99.21247664741848
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Type . NONE :
rank: 385
score: 99.45149739583333
patch: handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent ) ;
rank: 385
score: 99.4243228310033
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NONE :
rank: 385
score: 99.41740234375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : is CaMeL Set = true ;
rank: 385
score: 99.3866031044408
patch: switch ( n . get CaMeL Qualified CaMeL Name ( ) ) { case Token . VAR :
rank: 385
score: 99.33706868489584
patch: switch ( parent . get CaMeL Type ( ) ) { else { }
rank: 385
score: 99.3090187355324
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 385
score: 99.29923793247768
patch: parent = ( Type ) parent . get CaMeL Type ( ) ;
rank: 385
score: 99.24029541015625
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 385
score: 99.21170247395834
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 386
score: 99.45114968039773
patch: try { type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 386
score: 99.42430478050595
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : } }
rank: 386
score: 99.33670847039474
patch: switch ( parent . get CaMeL Type ( ) ) { get CaMeL Node ( parent ) .
rank: 386
score: 99.3231201171875
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 386
score: 99.30899047851562
patch: type = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; }
rank: 386
score: 99.29868570963542
patch: switch ( parent . get CaMeL Type ( ) ) { case ? Node . ) :
rank: 386
score: 99.211181640625
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) . equals ( $STRING$ ) )
rank: 387
score: 99.424072265625
patch: if ( parent != null && parent . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 387
score: 99.41705519153226
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL Type ( ) . get CaMeL Child CaMeL
rank: 387
score: 99.38646298363095
patch: if ( is CaMeL Set ) { if ( parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 387
score: 99.3366466703869
patch: switch ( parent . get CaMeL Type ( ) ) { parent . get CaMeL Type ( ) { }
rank: 387
score: 99.32301161024306
patch: desc = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 387
score: 99.29847208658855
patch: switch ( parent . get CaMeL Property ( ) ) {
rank: 387
score: 99.23856898716518
patch: switch ( current . get CaMeL Type ( ) ) { * /
rank: 387
score: 99.210986328125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . MIN _ VALUE :
rank: 388
score: 99.45069580078125
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 388
score: 99.42396763392857
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Type . STRING _ KEY :
rank: 388
score: 99.38622328814338
patch: switch ( target . get CaMeL Type ( ) ) { case Token . VAR :
rank: 388
score: 99.30873616536458
patch: name = parent . get CaMeL Name ( ) ; } if ( is CaMeL Set )
rank: 388
score: 99.29845660665761
patch: switch ( parent . get CaMeL Type ( ) ) { type = parent . get CaMeL Type ( ) ; }
rank: 388
score: 99.23849051339286
patch: if ( parent . get CaMeL Value ( ) == null ) {
rank: 388
score: 99.20984375
patch: Type type = parent . get CaMeL Type ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 389
score: 99.44996995192308
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , parent ) ;
rank: 389
score: 99.38610161675348
patch: if ( parent . get CaMeL Type ( ) != Name . GETTER _ DEF ) {
rank: 389
score: 99.33656939338235
patch: switch ( parent . get CaMeL Type ( ) ) { / / * * /
rank: 389
score: 99.30860854640152
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . has CaMeL Children ( ) ;
rank: 389
score: 99.29831949869792
patch: if ( parent . get CaMeL Type ( ) == ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 389
score: 99.2373758951823
patch: switch ( parent . get CaMeL Type ( ) ) { } if ( parent . get CaMeL Type ( ) ) {
rank: 389
score: 99.209443359375
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . class :
rank: 390
score: 99.4497403231534
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; continue ;
rank: 390
score: 99.38571506076389
patch: if ( ( parent . get CaMeL Type ( ) == Token . VAR ) ) {
rank: 390
score: 99.33649359809027
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . FUNCTION * /
rank: 390
score: 99.30850883152173
patch: type = parent . get CaMeL Type ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 390
score: 99.23662458147321
patch: if ( parent != parent . get CaMeL Type ( ) ) {
rank: 391
score: 99.44970703125
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } return ;
rank: 391
score: 99.42347412109375
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . SETTER _ DEF : {
rank: 391
score: 99.33635919744319
patch: switch ( parent . get CaMeL Type ( ) ) { } = parent . get CaMeL Type ( ) ;
rank: 391
score: 99.3223293138587
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) )
rank: 391
score: 99.30829216452206
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NUMBER :
rank: 391
score: 99.298095703125
patch: if ( parent . get CaMeL Type ( ) != Type . ) { parent . get CaMeL Type ( ) {
rank: 391
score: 99.23488853717673
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 391
score: 99.20772750289352
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . MIN _ VALUE :
rank: 392
score: 99.416435546875
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) { case Token . VAR :
rank: 392
score: 99.38549126519098
patch: type = get CaMeL Value CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 392
score: 99.33615291819854
patch: switch ( parent . get CaMeL Type ( ) ) { / true * * /
rank: 392
score: 99.29800415039062
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Class . TYPE ) {
rank: 392
score: 99.233466796875
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) return parent . get CaMeL Type ( ) :
rank: 392
score: 99.20759765625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NONE :
rank: 393
score: 99.44931265024039
patch: type = Name . Type . GET ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 393
score: 99.42275661892361
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 393
score: 99.41629028320312
patch: if ( parent . get CaMeL Type ( ) == Type . VAR ) {
rank: 393
score: 99.33598247327302
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . class : else {
rank: 393
score: 99.32198079427083
patch: o = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 393
score: 99.30756487165179
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; )
rank: 393
score: 99.2979024251302
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Class . NONE ) {
rank: 393
score: 99.20654296875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . NONE :
rank: 394
score: 99.44921875
patch: is CaMeL Set = false ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 394
score: 99.42252604166667
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : break ;
rank: 394
score: 99.41610557154605
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF ;
rank: 394
score: 99.38511029411765
patch: switch ( n . get CaMeL Id ( ) ) { case Token . VAR :
rank: 394
score: 99.33562360491071
patch: switch ( parent . get CaMeL Type ( ) ) { false :
rank: 394
score: 99.32163492838542
patch: int type = n . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 394
score: 99.307373046875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) break ;
rank: 394
score: 99.29774983723958
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Name ( ) . equals ( ) ) {
rank: 394
score: 99.2321268717448
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) != null ) {
rank: 394
score: 99.20559166217673
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break ;
rank: 395
score: 99.44888671875
patch: switch ( n . get CaMeL Type ( ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 395
score: 99.42226690995066
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Token . GETPROP :
rank: 395
score: 99.41581873739919
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 395
score: 99.38499620225694
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 395
score: 99.33561706542969
patch: switch ( parent . get CaMeL Type ( ) ) { count = 0 ;
rank: 395
score: 99.32131522042411
patch: String name = n . get CaMeL First CaMeL Child ( ) ;
rank: 395
score: 99.30728853665866
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 395
score: 99.29756673177083
patch: switch ( parent . get CaMeL Root ( ) ) {
rank: 395
score: 99.2314453125
patch: if ( parent . get CaMeL Class ( ) != type ) {
rank: 395
score: 99.2051414207176
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . ) {
rank: 396
score: 99.42218017578125
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : ;
rank: 396
score: 99.3211605674342
patch: switch ( parent . has CaMeL Type ( ) ) { case Token . GETTER _ DEF :
rank: 396
score: 99.30702561598558
patch: try { switch ( parent . get CaMeL Type ( ) )
rank: 396
score: 99.29745881453805
patch: switch ( parent . get CaMeL Type ( ) ) { default = parent . get CaMeL Type ( ) ; }
rank: 396
score: 99.2308984375
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Value CaMeL Type ( ) ; }
rank: 396
score: 99.20505859375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . MIN _ VALUE :
rank: 397
score: 99.4480212983631
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } else {
rank: 397
score: 99.38477783203125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY : }
rank: 397
score: 99.33541666666666
patch: switch ( parent . get CaMeL Type ( ) ) { += false {
rank: 397
score: 99.32106419613487
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . TYPE :
rank: 397
score: 99.30697292751736
patch: type = parent . get CaMeL Name ( ) . get CaMeL Type ( ) ; }
rank: 397
score: 99.29731188322368
patch: if ( parent != null && parent . get CaMeL Type ( ) != Type . ) {
rank: 397
score: 99.23009801793981
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Parent ( ) ) ;
rank: 397
score: 99.2039082845052
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Token . )
rank: 398
score: 99.44778878348214
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } return ;
rank: 398
score: 99.42112038352273
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . GETTER _ DEF : {
rank: 398
score: 99.33539225260417
patch: switch ( parent . get CaMeL Type ( ) ) { else { )
rank: 398
score: 99.30680629185268
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; {
rank: 398
score: 99.29725557215073
patch: parent = parent . get CaMeL Type ( ) . get CaMeL Type ( ) ;
rank: 398
score: 99.20331217447917
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 399
score: 99.44768732244319
patch: Node n = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 399
score: 99.42106119791667
patch: if ( parent != null && parent . get CaMeL Type ( ) == Token . SETTER _ DEF )
rank: 399
score: 99.41452026367188
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 399
score: 99.38346354166667
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : return ;
rank: 399
score: 99.33519345238095
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Value ( ) ;
rank: 399
score: 99.32086502878289
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) )
rank: 399
score: 99.30674235026042
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } ) ;
rank: 399
score: 99.29716796875
patch: switch ( parent . get CaMeL Type ( ) && node . get CaMeL Type ( ) ) {
rank: 399
score: 99.22890218098958
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Object . class ) {
rank: 399
score: 99.203125
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) )
rank: 400
score: 99.447685546875
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == Name . Type . OTHER ) {
rank: 400
score: 99.42074730282738
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . SETTER _ DEF :
rank: 400
score: 99.41443810096153
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . is CaMeL Function CaMeL Expression ( ) )
rank: 400
score: 99.38334728422619
patch: if ( n . get CaMeL Type ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 400
score: 99.3351162997159
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Parent ( ) {
rank: 400
score: 99.29713948567708
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . NAME ) {
rank: 400
score: 99.22748674665179
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Type ( ) ) ; }
rank: 400
score: 99.20279296875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Char CaMeL Sequence . NONE :
rank: 401
score: 99.42054507606908
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . GETPROP :
rank: 401
score: 99.41429088961694
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . SETTER _ DEF :
rank: 401
score: 99.38320583767361
patch: if ( type != null && parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 401
score: 99.30660574776786
patch: name = parent . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 401
score: 99.29683685302734
patch: switch ( parent . get CaMeL Type ( ) ) { * * ) {
rank: 401
score: 99.22578938802083
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Object . class ) {
rank: 401
score: 99.202041015625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Type . STRING _ KEY :
rank: 402
score: 99.44744318181819
patch: Node type = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 402
score: 99.42020874023437
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION : ;
rank: 402
score: 99.41412823016827
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) { is CaMeL Set = true ;
rank: 402
score: 99.38309733072917
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 402
score: 99.33506556919643
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL String ( ) ;
rank: 402
score: 99.31982421875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Type . GETTER _ DEF :
rank: 402
score: 99.30657087053571
patch: name = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ;
rank: 402
score: 99.2965152138158
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) return ; }
rank: 402
score: 99.2257792154948
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != boolean . class ) {
rank: 402
score: 99.20166015625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Type . STRING _ KEY :
rank: 403
score: 99.4472888764881
patch: type = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 403
score: 99.42013113839286
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION : return ;
rank: 403
score: 99.4141155740489
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 403
score: 99.38279095818015
patch: switch ( n . get CaMeL Type ( ) ) { case Token . SET :
rank: 403
score: 99.31979209498355
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . SETTER _ DEF :
rank: 403
score: 99.30647523941532
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 403
score: 99.29649593955592
patch: switch ( parent . get CaMeL Type ( ) ) { case Class CaMeL Loader . ) {
rank: 403
score: 99.224716796875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case String . class :
rank: 403
score: 99.20131655092592
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . ) {
rank: 404
score: 99.4470926920573
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; is CaMeL Set = true ;
rank: 404
score: 99.42010176809211
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . ASSIGN :
rank: 404
score: 99.41407121930804
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) != null )
rank: 404
score: 99.38264973958333
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . Definition . VAR :
rank: 404
score: 99.3348972486413
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property CaMeL Name ( ) {
rank: 404
score: 99.31969536675348
patch: switch ( parent . to CaMeL String ( ) . get CaMeL Type ( ) ) {
rank: 404
score: 99.30636596679688
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ; }
rank: 404
score: 99.29607391357422
patch: switch ( parent . get CaMeL Type ( ) ) { default : return {
rank: 404
score: 99.22299194335938
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == String . class ) {
rank: 405
score: 99.41978388247283
patch: is CaMeL Set = true ; type = Name . Type . SET ; type = Name . Type . SET ;
rank: 405
score: 99.41387067522321
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 405
score: 99.38248937270221
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) return ;
rank: 405
score: 99.33478546142578
patch: switch ( parent . get CaMeL Type ( ) ) { parent != null ;
rank: 405
score: 99.3063077059659
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( n . get CaMeL Type ( ) )
rank: 405
score: 99.29556274414062
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . DEFAULT ) {
rank: 405
score: 99.2221484375
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TRUE : parent . get CaMeL Type ( ) ;
rank: 405
score: 99.20120804398148
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 406
score: 99.44669835707721
patch: is CaMeL Set = true ; type = Name . Type . GET ; break ;
rank: 406
score: 99.413818359375
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ; }
rank: 406
score: 99.38223266601562
patch: switch ( ! n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR :
rank: 406
score: 99.33466131036931
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) . else
rank: 406
score: 99.31959069293478
patch: switch ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) { case Token . GETTER _ DEF :
rank: 406
score: 99.30607096354167
patch: type = parent . get CaMeL Parent ( ) ; }
rank: 406
score: 99.19856209590517
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Name ( ) ) ;
rank: 407
score: 99.44580078125
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } finally {
rank: 407
score: 99.41367797851562
patch: if ( n . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) ) {
rank: 407
score: 99.33454132080078
patch: switch ( parent . get CaMeL Type ( ) ) { { ? * /
rank: 407
score: 99.31886800130208
patch: switch ( n . get CaMeL Parent ( ) . get CaMeL Type ( ) ) {
rank: 407
score: 99.30604137073864
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case )
rank: 407
score: 99.2951129415761
patch: String type = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 407
score: 99.22081502278645
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Child CaMeL Count ( ) ;
rank: 408
score: 99.44577261117789
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , name ) ;
rank: 408
score: 99.41937810724431
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . SETTER _ DEF : :
rank: 408
score: 99.41342268318965
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 408
score: 99.38188244047619
patch: if ( ! get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 408
score: 99.33452814275569
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent ( ) { }
rank: 408
score: 99.31884765625
patch: switch ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) {
rank: 408
score: 99.30602309283088
patch: type = name . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 408
score: 99.29498697916667
patch: switch ( parent . get CaMeL Type ( ) ) { case ? )
rank: 408
score: 99.220654296875
patch: switch ( parent . get CaMeL Type ( ) ) { equals ( parent . get CaMeL Type CaMeL Name ( ) ) ;
rank: 408
score: 99.1981430053711
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 409
score: 99.44573010896382
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , scope ) ) {
rank: 409
score: 99.41921997070312
patch: if ( parent . get CaMeL Type ( ) == Token . STRING ) {
rank: 409
score: 99.41339742726294
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) == n ) {
rank: 409
score: 99.38146294487848
patch: switch ( parent . get CaMeL Type ( ) ) { { case Token . VAR :
rank: 409
score: 99.33451334635417
patch: switch ( parent . get CaMeL Type ( ) ) { case Type )
rank: 409
score: 99.31830388849431
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == Name . Type )
rank: 409
score: 99.3058837890625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . get CaMeL Name ( ) ; }
rank: 409
score: 99.29493204752605
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Node . )
rank: 409
score: 99.21978759765625
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) ) ; }
rank: 409
score: 99.1979268391927
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) . equals ( type ) )
rank: 410
score: 99.41914672851563
patch: if ( ! parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) )
rank: 410
score: 99.41321818033855
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { case Token . FUNCTION :
rank: 410
score: 99.38113064236111
patch: if ( n . get CaMeL Type ( ) == Name . STRING _ KEY ) {
rank: 410
score: 99.31825474330357
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Name . GETTER _ DEF :
rank: 410
score: 99.30575561523438
patch: type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ; break ; }
rank: 410
score: 99.29448590959821
patch: switch ( parent . get CaMeL Type ( ) ) { ) {
rank: 410
score: 99.219013671875
patch: switch ( parent . get CaMeL Type ( ) ) { case Object . TYPE : parent . get CaMeL Type ( ) ;
rank: 411
score: 99.444765625
patch: is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 411
score: 99.41890462239583
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . ASSIGN ) {
rank: 411
score: 99.38103569878473
patch: if ( n . get CaMeL Type ( ) . is CaMeL Set ( ) ) {
rank: 411
score: 99.33409208409927
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . TYPE )
rank: 411
score: 99.31824448529412
patch: / * if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 411
score: 99.305732421875
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 411
score: 99.29442297894022
patch: int type = parent . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 411
score: 99.21794782366071
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; }
rank: 412
score: 99.44443359375
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Parent ( ) ) ; }
rank: 412
score: 99.41883433948864
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) != null )
rank: 412
score: 99.41298264723558
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 412
score: 99.33392888849431
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent ( ) ; }
rank: 412
score: 99.31800944010416
patch: if ( parent . get CaMeL Type ( ) == Token . VAR :
rank: 412
score: 99.30565643310547
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; }
rank: 412
score: 99.2943827311198
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . DEFAULT ) {
rank: 412
score: 99.216767578125
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . FALSE : parent . get CaMeL Type ( ) ;
rank: 412
score: 99.196357421875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . NULL :
rank: 413
score: 99.41864568536931
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . DEC :
rank: 413
score: 99.412861328125
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ) {
rank: 413
score: 99.38083783318015
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ASSIGN :
rank: 413
score: 99.33385120738636
patch: switch ( parent . get CaMeL Type ( ) ) { $NUMBER$ = parent . get CaMeL Type ( ) ;
rank: 413
score: 99.31763373480902
patch: i = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 413
score: 99.30560302734375
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ) ;
rank: 413
score: 99.2938232421875
patch: if ( parent == null ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 413
score: 99.21553096064815
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL String ( ) ) ;
rank: 413
score: 99.1963311557112
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ;
rank: 414
score: 99.38081190321181
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) )
rank: 414
score: 99.33379836309524
patch: switch ( parent . get CaMeL Type ( ) ) { / n . get CaMeL Type ( ) .
rank: 414
score: 99.31755913628473
patch: int type = Name . Type . FUNCTION ; type = Name . Type . OTHER ;
rank: 414
score: 99.30507940995066
patch: switch ( n . get CaMeL Type ( ) ) { case Token . LABEL _ NAME :
rank: 414
score: 99.29336886935764
patch: switch ( parent . get CaMeL Type ( ) ) { { case Name . ) :
rank: 414
score: 99.2125244140625
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE : parent . get CaMeL Type ( ) ; }
rank: 414
score: 99.1956640625
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 415
score: 99.44354858398438
patch: type = Name . Type . OTHER ; switch ( parent . get CaMeL Type ( ) ) {
rank: 415
score: 99.41851806640625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : :
rank: 415
score: 99.41276999080883
patch: else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 415
score: 99.38069152832031
patch: if ( parent . get CaMeL Type ( ) != Token . INC ) {
rank: 415
score: 99.33361206054687
patch: if ( parent != null && parent . get CaMeL Type ( ) != Type . class ) {
rank: 415
score: 99.31747436523438
patch: if ( parent . get CaMeL Last CaMeL Child ( ) == n ) {
rank: 415
score: 99.30507475754311
patch: name = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 415
score: 99.29327392578125
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Class . NONE ) {
rank: 415
score: 99.211767578125
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TRUE : parent . get CaMeL Type ( ) ;
rank: 415
score: 99.19559151785714
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) ) {
rank: 416
score: 99.38036431206598
patch: if ( n . get CaMeL Type ( ) == Scope . STRING _ KEY ) {
rank: 416
score: 99.33354187011719
patch: switch ( parent . get CaMeL Type ( ) ) { / true : else
rank: 416
score: 99.31736353824013
patch: else name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 416
score: 99.30498215247844
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 416
score: 99.29299490792411
patch: switch ( parent . get CaMeL Type ( ) ) { { :
rank: 416
score: 99.211416015625
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : parent . get CaMeL Name ( ) ;
rank: 416
score: 99.19548828125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . NAME :
rank: 417
score: 99.418017578125
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 417
score: 99.38017926897321
patch: if ( parent . get CaMeL Type ( ) == n ) {
rank: 417
score: 99.33353424072266
patch: switch ( parent . get CaMeL Type ( ) ) { parent = ) ;
rank: 417
score: 99.31715223524306
patch: else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 417
score: 99.30484745420259
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ) ; }
rank: 417
score: 99.29288383152173
patch: switch ( parent . get CaMeL Node ( ) . get CaMeL Type ( ) ) { case Node . ) {
rank: 417
score: 99.21137152777777
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 417
score: 99.194697265625
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Type . STRING _ KEY :
rank: 418
score: 99.4428378018466
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; * /
rank: 418
score: 99.41793662623355
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == null )
rank: 418
score: 99.38010541130515
patch: switch ( type . get CaMeL Type ( ) ) { case Token . GETPROP :
rank: 418
score: 99.33348547894022
patch: switch ( parent . get CaMeL Type ( ) ) { case String = parent . get CaMeL Parent ( ) {
rank: 418
score: 99.3168712797619
patch: switch ( parent . is CaMeL Function CaMeL Expression ( ) ) { case Token . STRING _ KEY :
rank: 418
score: 99.30484008789062
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Type ( ) ; }
rank: 418
score: 99.29205322265625
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . EMPTY ) {
rank: 418
score: 99.21136944110577
patch: switch ( type . get CaMeL Type ( ) ) { null
rank: 418
score: 99.19449869791667
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . MIN _ VALUE :
rank: 419
score: 99.44253394717262
patch: switch ( get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 419
score: 99.41793484157986
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GETPROP : {
rank: 419
score: 99.412109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . is CaMeL Function CaMeL Expression ( ) )
rank: 419
score: 99.37978001644737
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : System .
rank: 419
score: 99.33338512073864
patch: switch ( parent . get CaMeL Type ( ) ) { { -- parent . get CaMeL Type ( ) ;
rank: 419
score: 99.3168586282169
patch: while ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 419
score: 99.30425347222223
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Root ( ) ;
rank: 419
score: 99.29139468544408
patch: get CaMeL Type ( parent ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 419
score: 99.211298828125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case String . TYPE :
rank: 419
score: 99.1944921875
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . STRING _ KEY )
rank: 420
score: 99.41783231847427
patch: switch ( n . get CaMeL Parent ( ) ) { case Token . VAR :
rank: 420
score: 99.4119873046875
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 420
score: 99.33329942491319
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ] * /
rank: 420
score: 99.3166568153783
patch: int n = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 420
score: 99.30382770040761
patch: name = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 420
score: 99.29134328741776
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { {
rank: 420
score: 99.21064104352679
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) ) ; }
rank: 420
score: 99.19448061342592
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . NONE :
rank: 421
score: 99.41187365301724
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Name . Type . STRING _ KEY ) {
rank: 421
score: 99.3331631747159
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) ; }
rank: 421
score: 99.31649116847827
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 421
score: 99.30375453404018
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . remove CaMeL Child ( name ) ;
rank: 421
score: 99.29096984863281
patch: switch ( parent . get CaMeL Type ( ) ) { case ? 0 :
rank: 421
score: 99.21024867466518
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; }
rank: 421
score: 99.194267578125
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . STRING _ KEY )
rank: 422
score: 99.41715494791667
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . STRING ) {
rank: 422
score: 99.33315700954861
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) : else
rank: 422
score: 99.31649017333984
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) ) {
rank: 422
score: 99.3036221590909
patch: name = parent . get CaMeL Name ( ) ; { switch ( n . get CaMeL Type ( ) )
rank: 422
score: 99.29092407226562
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Node . class ) {
rank: 422
score: 99.2092578125
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add ( parent . get CaMeL Name ( ) ) ;
rank: 422
score: 99.19358607700893
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) )
rank: 423
score: 99.4412841796875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) }
rank: 423
score: 99.41712646484375
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : }
rank: 423
score: 99.37931315104167
patch: if ( ! is CaMeL Object CaMeL Lit ( n . get CaMeL First CaMeL Child ( ) ) )
rank: 423
score: 99.333154296875
patch: switch ( parent . get CaMeL Type ( ) ) { / * )
rank: 423
score: 99.31576683407738
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , scope ) ;
rank: 423
score: 99.30360921223958
patch: name = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 423
score: 99.29082892922794
patch: switch ( ( ( Type ) parent ) . get CaMeL Type ( ) ) {
rank: 423
score: 99.20890625
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) ? parent . get CaMeL Type ( ) :
rank: 423
score: 99.19332320601852
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 424
score: 99.44105113636364
patch: type = Name . Type . OTHER ; } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 424
score: 99.41712143841912
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { default : {
rank: 424
score: 99.41169343171296
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Token . GETTER _ DEF ) {
rank: 424
score: 99.3792788856908
patch: switch ( n . get CaMeL Type ( ) ) { case Name . GETTER _ DEF :
rank: 424
score: 99.3330411044034
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parent ( ) { }
rank: 424
score: 99.31453704833984
patch: if ( parent . get CaMeL First CaMeL Child ( ) == node ) {
rank: 424
score: 99.30317615327381
patch: name = name . substring ( parent . get CaMeL Name ( ) . length ( ) ) ; }
rank: 424
score: 99.29082573784723
patch: switch ( parent . get CaMeL Type ( ) ) { { case Type . ) :
rank: 424
score: 99.20638671875
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Value CaMeL Type ( ) ; }
rank: 424
score: 99.19313401442308
patch: String name = parent . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 425
score: 99.44023204985119
patch: rvalue = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 425
score: 99.41705681295956
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . GETPROP :
rank: 425
score: 99.41150433084239
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . GETTER _ DEF )
rank: 425
score: 99.37925318667763
patch: switch ( parent . is CaMeL Assignment CaMeL Op ( ) ) { case Token . VAR :
rank: 425
score: 99.33295084635417
patch: switch ( parent . get CaMeL Type ( ) ) { case Name )
rank: 425
score: 99.31440662202381
patch: parent . name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 425
score: 99.30295697380515
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . READ :
rank: 425
score: 99.29061226222827
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . ) ;
rank: 425
score: 99.20589505709134
patch: switch ( parent . get CaMeL Class ( ) ) { null
rank: 425
score: 99.1928125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . ) {
rank: 426
score: 99.4400634765625
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ; }
rank: 426
score: 99.41130628083882
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING : / /
rank: 426
score: 99.37894694010417
patch: if ( n . get CaMeL Type ( ) == Node . STRING _ KEY ) {
rank: 426
score: 99.33253580729166
patch: switch ( parent . get CaMeL Type ( ) ) { / * *
rank: 426
score: 99.31440662202381
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n , scope ) ;
rank: 426
score: 99.30249786376953
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . clear ( ) ; }
rank: 426
score: 99.29039809283088
patch: switch ( parent . get CaMeL Type ( ) ) { case Class . ) {
rank: 426
score: 99.2052001953125
patch: switch ( parent . get CaMeL Type ( ) ) { 0
rank: 426
score: 99.19126383463542
patch: name = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ; if ( is CaMeL Set ) {
rank: 427
score: 99.43998579545455
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { type = Name . Type . OTHER ;
rank: 427
score: 99.41680297851562
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 427
score: 99.41124471028645
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 427
score: 99.33246256510417
patch: switch ( parent . get CaMeL Type ( ) ) { += true {
rank: 427
score: 99.3023828125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 427
score: 99.29031372070312
patch: if ( parent != ( parent . get CaMeL Type ( ) ) ) {
rank: 427
score: 99.203779296875
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . TYPE : parent . get CaMeL Type ( ) ;
rank: 428
score: 99.43963012695312
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 428
score: 99.31370960582386
patch: int type = Name . Type . FUNCTION ? Name . Type . OTHER : Name . Type . GET ;
rank: 428
score: 99.3022040005388
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ) ; }
rank: 428
score: 99.2900390625
patch: switch ( parent != null || parent . get CaMeL Type ( ) != Type . ) {
rank: 428
score: 99.20269097222223
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 428
score: 99.1900390625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . ) {
rank: 429
score: 99.43912353515626
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) ) ;
rank: 429
score: 99.4167121438419
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null ) { }
rank: 429
score: 99.41109793526786
patch: type = Name . Type . SET ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 429
score: 99.3319979580966
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Type ( ) ;
rank: 429
score: 99.31305290670956
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . NAME :
rank: 429
score: 99.30187270220588
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Code ( ) )
rank: 429
score: 99.28999660326087
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Name . ) {
rank: 429
score: 99.20228515625
patch: switch ( parent . get CaMeL Type ( ) ) { super . switch ( parent . get CaMeL Type ( ) ) {
rank: 429
score: 99.18986328125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . class :
rank: 430
score: 99.43898703835227
patch: Node n = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 430
score: 99.41656494140625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF : :
rank: 430
score: 99.37815946691177
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STATEMENT :
rank: 430
score: 99.31269975142045
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Type ( ) ) {
rank: 430
score: 99.30182756696429
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ) ;
rank: 430
score: 99.28995768229167
patch: switch ( parent . get CaMeL Type ( ) ) { case ) ?
rank: 430
score: 99.20191192626953
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 430
score: 99.18848528180804
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) )
rank: 431
score: 99.37812732514881
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent != null ) {
rank: 431
score: 99.33184493215461
patch: switch ( parent . get CaMeL Type ( ) ) { get CaMeL Parent ( parent ) .
rank: 431
score: 99.31266645951705
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Next ( ) ) )
rank: 431
score: 99.28960104549633
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) *
rank: 431
score: 99.20134367766204
patch: if ( parent != null && parent . get CaMeL Type ( ) . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 431
score: 99.18679470486111
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 432
score: 99.33181762695312
patch: switch ( parent . get CaMeL Type ( ) ) { n != null ;
rank: 432
score: 99.30124830163044
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . NULL :
rank: 432
score: 99.2895278930664
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent {
rank: 432
score: 99.20114474826389
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Value ( ) ) ;
rank: 432
score: 99.185576171875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 433
score: 99.4160664876302
patch: if ( parent != null || parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 433
score: 99.41028413318452
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : break ;
rank: 433
score: 99.3779296875
patch: if ( parent . get CaMeL Type ( ) == Token . VAR ) return ;
rank: 433
score: 99.33179524739583
patch: switch ( parent . get CaMeL Type ( ) ) { * * )
rank: 433
score: 99.31239318847656
patch: while ( n . get CaMeL First CaMeL Child ( ) == n ) {
rank: 433
score: 99.30123768682066
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 433
score: 99.2894515991211
patch: switch ( parent . get CaMeL Type ( ) && parent instanceof Type ) {
rank: 433
score: 99.200712890625
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . TYPE : parent . get CaMeL Type ( ) ;
rank: 433
score: 99.1854248046875
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) )
rank: 434
score: 99.43707275390625
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; } }
rank: 434
score: 99.41002655029297
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) == n . get CaMeL Next ( ) )
rank: 434
score: 99.37783633961396
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . IN :
rank: 434
score: 99.331787109375
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) { / * /
rank: 434
score: 99.31217447916667
patch: while ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 434
score: 99.3010965983073
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; break ;
rank: 434
score: 99.28921110733695
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Type ( ) ; }
rank: 434
score: 99.20058257004311
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 435
score: 99.436943359375
patch: parent = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 435
score: 99.41541748046875
patch: if ( ! parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) )
rank: 435
score: 99.40950833834134
patch: switch ( parent . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ;
rank: 435
score: 99.37767198350694
patch: if ( parent . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 435
score: 99.33165283203125
patch: switch ( parent . get CaMeL Type ( ) ) { = get CaMeL Type ( parent ) ;
rank: 435
score: 99.31180245535714
patch: String get CaMeL Value = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 435
score: 99.30099487304688
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; break ; }
rank: 435
score: 99.28888617621527
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) break {
rank: 435
score: 99.200078125
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE : parent . get CaMeL Name ( ) ;
rank: 435
score: 99.18450055803571
patch: parent . switch ( parent . get CaMeL Type ( ) ) {
rank: 436
score: 99.436494140625
patch: String type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 436
score: 99.41519828464673
patch: if ( parent != null && parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) )
rank: 436
score: 99.4091796875
patch: type = Name . Type . GET ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 436
score: 99.37765342310855
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Token . VAR :
rank: 436
score: 99.31178792317708
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Name ( ) ) {
rank: 436
score: 99.30064736643145
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 436
score: 99.28841499660327
patch: switch ( parent . get CaMeL Type ( ) ) { key = parent . get CaMeL Type ( ) ; }
rank: 436
score: 99.19951714409723
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Class ( ) ) ;
rank: 436
score: 99.18354853877315
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . MIN _ VALUE :
rank: 437
score: 99.43643991570724
patch: get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 437
score: 99.41488037109374
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) )
rank: 437
score: 99.40915845788044
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NAME : is CaMeL Set = true ;
rank: 437
score: 99.31166585286458
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( )
rank: 437
score: 99.30008370535714
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( ) ; }
rank: 437
score: 99.2882663892663
patch: parent . get CaMeL Type ( ) ; } else { switch ( parent . get CaMeL Type ( ) ) {
rank: 437
score: 99.19923828125
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) . length ) ;
rank: 437
score: 99.1834716796875
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 438
score: 99.43630981445312
patch: value = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 438
score: 99.41485236672794
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . NAME :
rank: 438
score: 99.37753441220238
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . Definition . VAR :
rank: 438
score: 99.33079310825893
patch: if ( parent . get CaMeL Type ( ) > null ) {
rank: 438
score: 99.31163441051136
patch: int type = Name . Type . FUNCTION ? Name . Type . OTHER : Name . Type . FUNCTION ;
rank: 438
score: 99.30007005774456
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Token . NULL )
rank: 438
score: 99.28768920898438
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . ALL ) {
rank: 438
score: 99.19890887920673
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add ( parent . get CaMeL Type ( ) ) ; }
rank: 438
score: 99.18342194733796
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Id ( ) ) ;
rank: 439
score: 99.4361572265625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Next ( ) ) ;
rank: 439
score: 99.41480654761905
patch: if ( parent != null || parent . get CaMeL Type ( ) == Token . GETTER _ DEF )
rank: 439
score: 99.37739000822368
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) { }
rank: 439
score: 99.3305435180664
patch: if ( parent . get CaMeL Type ( ) != Type . $STRING$ ) {
rank: 439
score: 99.31134354440789
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( scope ) ;
rank: 439
score: 99.29994303385416
patch: type = ( String ) parent . get CaMeL Parent ( ) ; }
rank: 439
score: 99.28764997209821
patch: switch ( parent . get CaMeL Type ( ) && false ) {
rank: 439
score: 99.19886192908653
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE : parent . get CaMeL Type ( ) ; }
rank: 439
score: 99.18233548677884
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) )
rank: 440
score: 99.33040364583333
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 440
score: 99.311279296875
patch: int name = parent . get CaMeL First CaMeL Child ( ) . get CaMeL String ( ) ;
rank: 440
score: 99.29991048177084
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type CaMeL Name ( ) ; }
rank: 440
score: 99.28752055921052
patch: if ( parent != null || parent . get CaMeL Type ( ) == Type . ) {
rank: 440
score: 99.198779296875
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . FALSE : parent . get CaMeL Type ( ) ;
rank: 440
score: 99.18231411637932
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) ) ;
rank: 441
score: 99.43544699928977
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , parent ) ;
rank: 441
score: 99.40848094019397
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == parent ) {
rank: 441
score: 99.37730407714844
patch: if ( parent . get CaMeL Type ( ) != Type . OTHER ) {
rank: 441
score: 99.33030072380515
patch: switch ( parent . get CaMeL Type ( ) ) { case ) * * /
rank: 441
score: 99.31122789884868
patch: if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 441
score: 99.29981578480114
patch: switch ( n . get CaMeL Type ( ) ) { switch ( n . get CaMeL Type ( ) )
rank: 441
score: 99.28682454427083
patch: if ( parent . get CaMeL Type ( ) == Type . ) { parent . get CaMeL Type ( ) ; }
rank: 441
score: 99.19862196180556
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Name ( ) ) ;
rank: 441
score: 99.18199811662946
patch: switch ( n . get CaMeL Type ( ) ) { / *
rank: 442
score: 99.4082421875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { type = Name . Type . OTHER ;
rank: 442
score: 99.37706083409927
patch: switch ( n . get CaMeL Type ( ) ) { case Token . prefix :
rank: 442
score: 99.33028971354166
patch: switch ( parent . get CaMeL Type ( ) ) { <= 1 ;
rank: 442
score: 99.29973038383152
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . ) :
rank: 442
score: 99.28652774586396
patch: switch ( parent . get CaMeL Type ( ) ) { case Property . ) {
rank: 442
score: 99.19826096754808
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) : parent . get CaMeL Type ( ) ; }
rank: 442
score: 99.1819921875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . ) {
rank: 443
score: 99.40793185763889
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) == n ) {
rank: 443
score: 99.37704467773438
patch: if ( n . get CaMeL Type ( ) != Token . GETPROP ) {
rank: 443
score: 99.33024796195652
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parameter CaMeL Type ( ) ;
rank: 443
score: 99.2992276278409
patch: parent = parent . get CaMeL Parent ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 443
score: 99.28600260416667
patch: switch ( parent . get CaMeL Type ( ) ) { * ) {
rank: 443
score: 99.198212890625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Class CaMeL Value . ) {
rank: 443
score: 99.18111328125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . NAME :
rank: 444
score: 99.40789116753473
patch: switch ( n . get CaMeL Type ( ) ) throws Illegal CaMeL State CaMeL Exception {
rank: 444
score: 99.3300272623698
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 444
score: 99.29920696390086
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 444
score: 99.28584558823529
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) )
rank: 444
score: 99.19517578125
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Int CaMeL Value ( 0 ) ;
rank: 444
score: 99.18013671875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Type . STRING _ KEY :
rank: 445
score: 99.4346233865489
patch: is CaMeL Set = true ; type = Name . Type . GET ; type = Name . Type . SET ;
rank: 445
score: 99.41413680366848
patch: type = Name . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 445
score: 99.40786856192129
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 445
score: 99.37657406455592
patch: boolean is CaMeL Set = true ; switch ( n . get CaMeL Type ( ) ) {
rank: 445
score: 99.32997197690217
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Class CaMeL Name ( ) {
rank: 445
score: 99.29918077256944
patch: type = name . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 445
score: 99.2857666015625
patch: switch ( get CaMeL Type ( ) ) {
rank: 445
score: 99.19505859375
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . TYPE : parent . get CaMeL Type ( ) ;
rank: 445
score: 99.17982421875
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . STRING _ KEY )
rank: 446
score: 99.43451482599431
patch: Node parent = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 446
score: 99.40752618963069
patch: switch ( Node CaMeL Util . get CaMeL Function CaMeL Type ( parent ) ) { case Token . VAR :
rank: 446
score: 99.32987837357955
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL String ( ) {
rank: 446
score: 99.31057739257812
patch: switch ( n . get CaMeL Type ( ) ) { case Token . :
rank: 446
score: 99.29916561351104
patch: switch ( n . get CaMeL Type ( ) ) { case Token . COLON :
rank: 446
score: 99.28550211588542
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . err ) {
rank: 446
score: 99.1948950982863
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 446
score: 99.17946144386575
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . NONE :
rank: 447
score: 99.43408203125
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; case Token . ASSIGN :
rank: 447
score: 99.41334170386905
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Node . GETTER _ DEF :
rank: 447
score: 99.40734049479167
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == n . get CaMeL First CaMeL Child ( ) )
rank: 447
score: 99.37589304070724
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) ) {
rank: 447
score: 99.32963053385417
patch: switch ( parent . get CaMeL Type ( ) ) { > $NUMBER$ ;
rank: 447
score: 99.31005859375
patch: switch ( parent . get CaMeL Type ( ) && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 447
score: 99.299072265625
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; )
rank: 447
score: 99.19411057692308
patch: switch ( parent . get CaMeL Type ( ) ) { do
rank: 448
score: 99.43341936383929
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else {
rank: 448
score: 99.413037109375
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : {
rank: 448
score: 99.37565104166667
patch: switch ( n . get CaMeL Type ( ) ) return ; case Token . VAR :
rank: 448
score: 99.3294677734375
patch: switch ( parent . get CaMeL Type ( ) ) { id = parent . get CaMeL Type ( ) {
rank: 448
score: 99.29901123046875
patch: name = parent . get CaMeL Name ( ) ; parent = parent . get CaMeL Parent CaMeL Node ( ) ; }
rank: 448
score: 99.19390869140625
patch: if ( parent == get CaMeL Type ( ) ) {
rank: 449
score: 99.43290783110119
patch: name = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 449
score: 99.4129638671875
patch: switch ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 449
score: 99.40695626395089
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } else
rank: 449
score: 99.3287582397461
patch: switch ( parent . get CaMeL Type ( ) ) { n = null ;
rank: 449
score: 99.298623046875
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 449
score: 99.28500366210938
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . DEFAULT ) {
rank: 449
score: 99.1937109375
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case Integer . MAX _ VALUE :
rank: 449
score: 99.17884765625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NULL :
rank: 450
score: 99.43282063802083
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 450
score: 99.41270141601562
patch: if ( get CaMeL Value CaMeL Type ( n ) == n . get CaMeL Type ( ) )
rank: 450
score: 99.37543083639706
patch: switch ( parent . get CaMeL Name ( ) ) { case Token . ASSIGN :
rank: 450
score: 99.30877685546875
patch: switch ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 450
score: 99.29850260416667
patch: Type get CaMeL Type = parent . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 450
score: 99.28475952148438
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Class . TRUE ) {
rank: 450
score: 99.19359447337963
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 450
score: 99.178779296875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Token . NAME :
rank: 451
score: 99.40682870370371
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == null )
rank: 451
score: 99.37530196340461
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . TYPE :
rank: 451
score: 99.32846467391305
patch: switch ( parent . get CaMeL Type ( ) ) { ++ ( parent . get CaMeL Type ( ) ) ;
rank: 451
score: 99.30860053168402
patch: scope = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 451
score: 99.29847301136364
patch: switch ( n . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) )
rank: 451
score: 99.2847391764323
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Node . TRUE ) {
rank: 451
score: 99.19347205528847
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : parent . get CaMeL Type ( ) ; }
rank: 451
score: 99.17799660011575
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Type . STRING _ KEY :
rank: 452
score: 99.43235181725544
patch: if ( n . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) )
rank: 452
score: 99.40675511853448
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 452
score: 99.32846248851104
patch: switch ( parent . get CaMeL Type ( ) ) { / ? * * /
rank: 452
score: 99.3083263578869
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETTER _ DEF : break ;
rank: 452
score: 99.29838053385417
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . ) ; }
rank: 452
score: 99.28471374511719
patch: switch ( get CaMeL Type ( get CaMeL Type ( parent ) ) ) {
rank: 452
score: 99.19291015625
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parameter CaMeL Count ( ) ; }
rank: 452
score: 99.177802734375
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . NULL :
rank: 453
score: 99.4111095610119
patch: switch ( ( parent . get CaMeL First CaMeL Child ( ) ) . get CaMeL Type ( ) )
rank: 453
score: 99.374853515625
patch: if ( n . get CaMeL Type ( ) == Token . VAR )
rank: 453
score: 99.2979736328125
patch: type = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) )
rank: 453
score: 99.28419325086806
patch: switch ( parent . get CaMeL Type ( ) ) { { case Node . parent :
rank: 453
score: 99.19076772836539
patch: boolean is CaMeL Array = parent . get CaMeL Type ( ) != null ? parent . get CaMeL Type ( ) : null {
rank: 453
score: 99.177470703125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Char CaMeL Sequence . NONE :
rank: 454
score: 99.41108630952381
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Type . STRING _ KEY :
rank: 454
score: 99.40604341947116
patch: switch ( parent . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 454
score: 99.32822487571023
patch: switch ( parent . get CaMeL Type ( ) ) { += parent . get CaMeL Type ( ) ; }
rank: 454
score: 99.3076530905331
patch: switch ( parent . get CaMeL Parent ( ) . get CaMeL Type ( ) )
rank: 454
score: 99.29794108072916
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Name ( ) ; }
rank: 454
score: 99.190556640625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) : parent . get CaMeL Type ( ) ;
rank: 454
score: 99.1773681640625
patch: type = parent . get CaMeL Type ( ) ; } return ;
rank: 455
score: 99.43150634765625
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n ) ;
rank: 455
score: 99.41101655505952
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : return ;
rank: 455
score: 99.40601427801724
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 455
score: 99.37465948807566
patch: switch ( this . parent . get CaMeL Type ( ) ) { case Token . VAR :
rank: 455
score: 99.3281582919034
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Class ( ) {
rank: 455
score: 99.30755293996711
patch: switch ( parent . parent . get CaMeL Type ( ) ) { case Token . VAR :
rank: 455
score: 99.29725477430556
patch: name = parent . get CaMeL Name ( ) . substring ( 0 , name . last CaMeL Index CaMeL Of ( $STRING$ ) ) ;
rank: 455
score: 99.28353078741776
patch: if ( parent instanceof Node ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 455
score: 99.189833984375
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) ? parent . get CaMeL Type ( ) :
rank: 455
score: 99.177216796875
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 456
score: 99.40565708705357
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 456
score: 99.37465122767857
patch: if ( type != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 456
score: 99.32787068684895
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type CaMeL Name ( ) {
rank: 456
score: 99.30751139322916
patch: if ( parent . get CaMeL Type ( ) == Name . Type )
rank: 456
score: 99.29720052083333
patch: name = name . substring ( 0 , parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 456
score: 99.28331756591797
patch: switch ( parent . get CaMeL Type ( ) || null != parent ) {
rank: 456
score: 99.18942599826389
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Name ( ) ) ;
rank: 456
score: 99.17696707589286
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 457
score: 99.43134099786931
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) + $STRING$ ) ;
rank: 457
score: 99.32723236083984
patch: switch ( parent . get CaMeL Type ( ) ) { = null ; }
rank: 457
score: 99.296875
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Subset :
rank: 457
score: 99.28317057291666
patch: switch ( parent . get CaMeL Type ( ) ) { return ) {
rank: 457
score: 99.18922526041666
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 457
score: 99.1767578125
patch: name = parent . get CaMeL Name ( ) ; } else {
rank: 458
score: 99.41014268663194
patch: switch ( get CaMeL Value CaMeL Type ( n ) ) { case Token . ASSIGN :
rank: 458
score: 99.40501990685097
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 458
score: 99.37457596628289
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Definition . OTHER :
rank: 458
score: 99.32686183763587
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent ( ) { else
rank: 458
score: 99.29662214006696
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Property ( ) ; }
rank: 458
score: 99.28310977711396
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ERROR :
rank: 458
score: 99.18892785274622
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 458
score: 99.17572265625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Char CaMeL Sequence . ) {
rank: 459
score: 99.41002400716145
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : case Token . DEC :
rank: 459
score: 99.40498860677083
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 459
score: 99.32683771306819
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Class ( ) . }
rank: 459
score: 99.30588250411184
patch: Token type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 459
score: 99.29655626085069
patch: name = parent . get CaMeL Name ( ) ; if ( ! is CaMeL Set )
rank: 459
score: 99.2829360961914
patch: switch ( parent . get CaMeL Type ( ) ) { case ? null :
rank: 459
score: 99.18814199942129
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL String ( ) ) ;
rank: 459
score: 99.17538339120371
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Char CaMeL Sequence . ) {
rank: 460
score: 99.40989056755515
patch: if ( parent . get CaMeL Type ( ) == Type . STRING _ KEY )
rank: 460
score: 99.40491985452586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == parent ) {
rank: 460
score: 99.3744140625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 460
score: 99.32670454545455
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) { else
rank: 460
score: 99.30563354492188
patch: / * if ( parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 460
score: 99.29651988636364
patch: name = parent . get CaMeL Name ( ) ; { switch ( parent . get CaMeL Type ( ) )
rank: 460
score: 99.28285845588235
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) ;
rank: 460
score: 99.18789236886161
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Parent ( ) ) ; }
rank: 461
score: 99.43040771484375
patch: switch ( parent . get CaMeL Type ( ) ) { type = Name . Type . SET ;
rank: 461
score: 99.40491903981855
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == null )
rank: 461
score: 99.37428283691406
patch: if ( parent . get CaMeL Type ( ) == Node . GETPROP ) {
rank: 461
score: 99.32659040178571
patch: switch ( parent . get CaMeL Type ( ) ) { , parent . get CaMeL Type ( ) {
rank: 461
score: 99.29649861653645
patch: name = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 461
score: 99.18655160757211
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 461
score: 99.17454176682692
patch: return switch ( parent . get CaMeL Type ( ) ) {
rank: 462
score: 99.43037553267045
patch: Node type = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 462
score: 99.37385389539931
patch: if ( n . get CaMeL Type ( ) . is CaMeL Function ( ) ) {
rank: 462
score: 99.32657523777173
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Value CaMeL Type ( ) ;
rank: 462
score: 99.29631491268383
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . RETURN :
rank: 462
score: 99.28221638997395
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . STRING ) {
rank: 462
score: 99.1863544170673
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) : parent . get CaMeL Type ( ) ; }
rank: 462
score: 99.17442584859914
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , name ) ;
rank: 463
score: 99.40885416666667
patch: if ( parent != null && parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) ) {
rank: 463
score: 99.40481665826613
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 463
score: 99.37332763671876
patch: if ( get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) == n )
rank: 463
score: 99.32651881167763
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . class : * /
rank: 463
score: 99.30534811580883
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NOT :
rank: 463
score: 99.29630903764205
patch: Type ( parent . get CaMeL Type ( ) ) ; switch ( n . get CaMeL Type ( ) )
rank: 463
score: 99.28202311197917
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Class . TRUE ) {
rank: 463
score: 99.1857158954327
patch: boolean is CaMeL Array = parent . get CaMeL Type ( ) != null ? parent . get CaMeL Type ( ) : null ;
rank: 463
score: 99.17359240301724
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Full CaMeL Name ( ) ) ;
rank: 464
score: 99.42998046875
patch: String n = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 464
score: 99.40463692801339
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 464
score: 99.37332589285714
patch: if ( get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) == null ) {
rank: 464
score: 99.32649031929348
patch: switch ( parent . get CaMeL Type ( ) ) { ++ ( parent . get CaMeL Type ( ) ) .
rank: 464
score: 99.30513139204545
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 464
score: 99.29619770665323
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 464
score: 99.28166647518383
patch: switch ( ( parent != null ) ? parent . get CaMeL Type ( ) :
rank: 464
score: 99.18559047154018
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL String ( ) ) :
rank: 464
score: 99.173583984375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 465
score: 99.4298583984375
patch: type = Name . Type . SET ; switch ( parent . get CaMeL Type ( ) ) {
rank: 465
score: 99.40857696533203
patch: if ( parent != n . get CaMeL First CaMeL Child ( ) ) {
rank: 465
score: 99.37330457899306
patch: if ( parent . get CaMeL Type ( ) != Name . Type . VAR ) {
rank: 465
score: 99.29614935980902
patch: boolean is CaMeL Set = false ; switch ( n . get CaMeL Type ( ) )
rank: 465
score: 99.28163146972656
patch: switch ( parent . get CaMeL Type ( ) || parent instanceof Type ) {
rank: 465
score: 99.18079065393519
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( name ) ;
rank: 465
score: 99.17292390046296
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parent ( ) ) ;
rank: 466
score: 99.40459883840461
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : / /
rank: 466
score: 99.32639478600544
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Function CaMeL Type ( ) ;
rank: 466
score: 99.30437360491071
patch: switch ( n . is CaMeL Object CaMeL Lit ( ) ) { case Token . STRING _ KEY :
rank: 466
score: 99.2959220640121
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } else
rank: 466
score: 99.28138224283855
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . err ) {
rank: 466
score: 99.18059747869319
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 466
score: 99.17290581597223
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Char CaMeL Sequence . NONE :
rank: 467
score: 99.42927820542279
patch: is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ;
rank: 467
score: 99.40835425967262
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : return ;
rank: 467
score: 99.37261199951172
patch: is CaMeL Set = true ; type = Name . Type . SET ; }
rank: 467
score: 99.32628580729167
patch: switch ( parent . get CaMeL Type ( ) ) { = type ;
rank: 467
score: 99.29575417258523
patch: name = parent . get CaMeL Type ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 467
score: 99.28105612362133
patch: switch ( parent . get CaMeL Type ( ) ) { case Location . ) ?
rank: 467
score: 99.18032949942129
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Type ( name ) ;
rank: 467
score: 99.17276436941964
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ; }
rank: 468
score: 99.40802556818181
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETTER _ DEF : }
rank: 468
score: 99.37249755859375
patch: if ( parent . get CaMeL Type ( ) != Name . Type . SET ) {
rank: 468
score: 99.32598322088069
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Name ( ) != null ) {
rank: 468
score: 99.29558454241071
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; )
rank: 468
score: 99.28097534179688
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . ALL ) {
rank: 468
score: 99.18017578125
patch: switch ( parent . get CaMeL Type ( ) ) return ;
rank: 468
score: 99.172685546875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Type . NONE :
rank: 469
score: 99.42826171875
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL Next ( ) ) ; }
rank: 469
score: 99.4071403952206
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null ) { }
rank: 469
score: 99.37233599494485
patch: if ( ! n . get CaMeL First CaMeL Child ( ) == n ) {
rank: 469
score: 99.32572428385417
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Property CaMeL Type ( ) {
rank: 469
score: 99.28063434103261
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Node . ) ;
rank: 469
score: 99.17856626157408
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Parent ( ) ) ;
rank: 469
score: 99.172119140625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Type . STRING _ KEY :
rank: 470
score: 99.40688941592262
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR : / :
rank: 470
score: 99.40381969105114
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; default :
rank: 470
score: 99.37201248972039
patch: if ( n . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 470
score: 99.30368874289773
patch: if ( parent . get CaMeL Parent ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 470
score: 99.29548891129032
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 470
score: 99.28035481770833
patch: switch ( ( parent . get CaMeL Type ( ) ) && null == parent . get CaMeL Type ( ) ) {
rank: 470
score: 99.17818509615384
patch: if ( get CaMeL Type ( parent ) != null ) {
rank: 470
score: 99.171630859375
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . NONE :
rank: 471
score: 99.40672543174342
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Type . VAR :
rank: 471
score: 99.40340983072916
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) ) {
rank: 471
score: 99.32546068274456
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Class CaMeL Name ( ) {
rank: 471
score: 99.30350748697917
patch: if ( parent . get CaMeL Type ( ) != Name . Type . ASSIGN ) {
rank: 471
score: 99.29545740927419
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 471
score: 99.28012084960938
patch: switch ( parent . get CaMeL Type ( ) ) { / * return ;
rank: 471
score: 99.17760778356481
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Value ( ) ) ;
rank: 471
score: 99.170810546875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . TYPE :
rank: 472
score: 99.40660264756944
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP : ;
rank: 472
score: 99.40339740953948
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING : break ;
rank: 472
score: 99.37160915798611
patch: set = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 472
score: 99.32537520559211
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . WARNING : else {
rank: 472
score: 99.30329241071429
patch: switch ( parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 472
score: 99.29514973958334
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Scope ( ) ; }
rank: 472
score: 99.28008069490132
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) return ; }
rank: 472
score: 99.17743791852679
patch: switch ( parent . get CaMeL Type ( ) ? parent . get CaMeL Type ( ) : parent . get CaMeL Type ( ) ) {
rank: 472
score: 99.170693359375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Char CaMeL Sequence . NULL :
rank: 473
score: 99.40335518973214
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , n . get CaMeL Next ( ) ) ;
rank: 473
score: 99.37125436883224
patch: if ( ! ( n . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 473
score: 99.32537286931819
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Types ( ) {
rank: 473
score: 99.30309186662946
patch: String name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 473
score: 99.29507341056035
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL All ( parent ) ; }
rank: 473
score: 99.2798210592831
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) }
rank: 473
score: 99.17540564903847
patch: switch ( current . get CaMeL Type ( ) ) { null
rank: 473
score: 99.17054966517857
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ; }
rank: 474
score: 99.37113229851974
patch: boolean is CaMeL Set = true ; switch ( parent . get CaMeL Type ( ) ) {
rank: 474
score: 99.32508850097656
patch: switch ( parent . get CaMeL Type ( ) ) { / { * /
rank: 474
score: 99.3029720908717
patch: char name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 474
score: 99.29483032226562
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; return ;
rank: 474
score: 99.27942572699652
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) * /
rank: 474
score: 99.17519350405092
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE : parent . get CaMeL String CaMeL Value ( ) ;
rank: 474
score: 99.17033781828704
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 475
score: 99.4030010516827
patch: switch ( parent . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 475
score: 99.3711296530331
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . IF :
rank: 475
score: 99.3248519897461
patch: switch ( parent . get CaMeL Type ( ) ) { count = 0 {
rank: 475
score: 99.30274963378906
patch: switch ( parent . get CaMeL Type ( ) . Type ( ) ) {
rank: 475
score: 99.29478544347427
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STAR :
rank: 475
score: 99.2792438009511
patch: switch ( parent . get CaMeL Type ( ) ) { id = parent . get CaMeL Type ( ) ; }
rank: 475
score: 99.17364501953125
patch: check ( parent . get CaMeL Type ( ) ) ;
rank: 475
score: 99.16978624131944
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . NULL :
rank: 476
score: 99.40283203125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == null )
rank: 476
score: 99.3709357766544
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition ;
rank: 476
score: 99.32468580163044
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Display CaMeL Name ( ) {
rank: 476
score: 99.30250379774306
patch: / * if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 476
score: 99.2791748046875
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . ALL ) {
rank: 476
score: 99.1731665826613
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 476
score: 99.169619140625
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( )
rank: 477
score: 99.42600319602273
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ;
rank: 477
score: 99.40565321180556
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . ASSIGN : {
rank: 477
score: 99.40274160879629
patch: if ( parent . get CaMeL Type ( ) != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 477
score: 99.37075805664062
patch: if ( n . get CaMeL Type ( ) == Token . TYPE ) {
rank: 477
score: 99.32457733154297
patch: switch ( parent . get CaMeL Type ( ) ) { = null { }
rank: 477
score: 99.29473876953125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ) ; }
rank: 477
score: 99.27903747558594
patch: switch ( parent . get CaMeL Type ( ) ) { case ? 1 :
rank: 477
score: 99.17275053879311
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL String CaMeL Value ( ) ) ;
rank: 477
score: 99.169365234375
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Char CaMeL Sequence . ) {
rank: 478
score: 99.4053371263587
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) != n ) {
rank: 478
score: 99.402734375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . GETPROP :
rank: 478
score: 99.37074279785156
patch: switch ( parent . get CaMeL Type ( ) ) case Token . VAR :
rank: 478
score: 99.32457682291667
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent )
rank: 478
score: 99.30150756835937
patch: final String name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 478
score: 99.29414424189815
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 478
score: 99.27883911132812
patch: switch ( parent . get CaMeL Type ( ) ) { * * return {
rank: 478
score: 99.17196219308036
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Name ( ) ) :
rank: 478
score: 99.16791449652777
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 479
score: 99.42533947172619
patch: type = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ; }
rank: 479
score: 99.4024070457176
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 479
score: 99.37069702148438
patch: if ( get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == n )
rank: 479
score: 99.32436735733695
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Function CaMeL Name ( ) {
rank: 479
score: 99.30114067925348
patch: parent . if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 479
score: 99.27880859375
patch: switch ( ! parent . get CaMeL Type ( ) . equals ( ) ) {
rank: 479
score: 99.17007341056035
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL String CaMeL Value ( ) ) ;
rank: 479
score: 99.16786772629311
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Type ( ) ) ;
rank: 480
score: 99.40442572699652
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GETPROP : )
rank: 480
score: 99.40230305989583
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ;
rank: 480
score: 99.293603515625
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . ) :
rank: 480
score: 99.27845674402573
patch: switch ( parent . get CaMeL Type ( ) ) { case Context . ) {
rank: 480
score: 99.16887297453704
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Parent ( ) ) ;
rank: 480
score: 99.167548828125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . NAME :
rank: 481
score: 99.42495727539062
patch: switch ( n . get CaMeL Type ( ) ) { default : return ;
rank: 481
score: 99.40429009331598
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : ;
rank: 481
score: 99.40227912454044
patch: switch ( get CaMeL Value ( n . get CaMeL Next ( ) ) ) {
rank: 481
score: 99.3235095796131
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Root ( ) {
rank: 481
score: 99.30069580078126
patch: else name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 481
score: 99.293212890625
patch: switch ( n . get CaMeL Type ( ) ) { case Token . CHECK :
rank: 481
score: 99.16844798900463
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Name ( name ) ;
rank: 481
score: 99.16664702316811
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ;
rank: 482
score: 99.424833984375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL String ( ) ) ; }
rank: 482
score: 99.40190067997685
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) != null ) {
rank: 482
score: 99.37012939453125
patch: if ( get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) == n )
rank: 482
score: 99.32341452205883
patch: switch ( parent . get CaMeL Type ( ) ) { / / / * /
rank: 482
score: 99.30042085193452
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n )
rank: 482
score: 99.29303175403226
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class CaMeL Name ( ) ; break ;
rank: 482
score: 99.27810489430146
patch: switch ( parent . get CaMeL Type ( ) && parent != null ) { {
rank: 482
score: 99.1683349609375
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Name ( ) ) :
rank: 482
score: 99.165625
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . STRING _ KEY )
rank: 483
score: 99.36992331112133
patch: if ( parent . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 483
score: 99.30034044053819
patch: int type = Name . Type . OTHER ; type = Name . Type . FUNCTION ;
rank: 483
score: 99.29289106889205
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; } ) ;
rank: 483
score: 99.27782141644022
patch: switch ( parent . get CaMeL Type ( ) && switch ( parent . get CaMeL Type ( ) ) ) {
rank: 483
score: 99.16774204799107
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 483
score: 99.16532841435185
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Char CaMeL Sequence . ) {
rank: 484
score: 99.42474609375
patch: Node parent = parent . get CaMeL Parent ( ) ; switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 484
score: 99.40105329241071
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 484
score: 99.36990176930146
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . abs :
rank: 484
score: 99.32327270507812
patch: switch ( parent . get CaMeL Type ( ) ) { / $NUMBER$ * /
rank: 484
score: 99.30023552389706
patch: switch ( parent . has CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 484
score: 99.29278564453125
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) { switch ( n . get CaMeL Type ( ) )
rank: 484
score: 99.27771759033203
patch: switch ( parent . get CaMeL Type ( ) . type ( ) ) {
rank: 484
score: 99.16651262555804
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) . to CaMeL String ( ) ; }
rank: 484
score: 99.1652734375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . class :
rank: 485
score: 99.42445439877717
patch: type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . SET ;
rank: 485
score: 99.40366082442434
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Type . STRING :
rank: 485
score: 99.36967917049633
patch: switch ( parent . get CaMeL Name ( ) ) { case Token . GETPROP :
rank: 485
score: 99.30021667480469
patch: if ( root . get CaMeL First CaMeL Child ( ) == n ) {
rank: 485
score: 99.29278564453125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; {
rank: 485
score: 99.16610013521634
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TRUE : parent . get CaMeL Type ( ) ; }
rank: 485
score: 99.16512948495371
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Char CaMeL Sequence . NONE :
rank: 486
score: 99.4244051846591
patch: Node type = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . GET ;
rank: 486
score: 99.36921772203948
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Token . NAME :
rank: 486
score: 99.3000847311581
patch: return get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 486
score: 99.29275076729911
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Type ( name ) ;
rank: 486
score: 99.27748174252717
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Node . ) ;
rank: 486
score: 99.16550856370192
patch: switch ( parent . get CaMeL Type ( ) ) { case String . class : parent . get CaMeL Type ( ) ; }
rank: 486
score: 99.16508265904018
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) )
rank: 487
score: 99.40340523097827
patch: if ( parent . get CaMeL Type ( ) != n . get CaMeL First CaMeL Child ( ) ) { {
rank: 487
score: 99.3690185546875
patch: switch ( type . get CaMeL First CaMeL Child ( ) ) { case Token . VAR :
rank: 487
score: 99.29268391927083
patch: String name = parent . get CaMeL Qualified CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 487
score: 99.27745564778645
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . EMPTY ) {
rank: 487
score: 99.165068359375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . PREFIX _ STRING :
rank: 487
score: 99.16460309709821
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL String ( ) ) :
rank: 488
score: 99.4242805032169
patch: type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 488
score: 99.36895392922794
patch: switch ( parent . get CaMeL String ( ) ) { case Token . VAR :
rank: 488
score: 99.32307434082031
patch: switch ( parent . get CaMeL Type ( ) ) { else { } }
rank: 488
score: 99.2999851392663
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == Name . Type ) {
rank: 488
score: 99.2774299172794
patch: parent = parent . get CaMeL Class ( ) . get CaMeL Type ( ) ;
rank: 488
score: 99.16504748114224
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Name ( ) ) ;
rank: 488
score: 99.16441999162946
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Name ( ) ) ; }
rank: 489
score: 99.40304744944854
patch: if ( parent != null || parent . get CaMeL Type ( ) == n )
rank: 489
score: 99.36884508634868
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) { {
rank: 489
score: 99.32280040922619
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Property ( ) {
rank: 489
score: 99.29994419642857
patch: switch ( n . get CaMeL Type ( ) && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 489
score: 99.29246363146552
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; break ;
rank: 489
score: 99.27728271484375
patch: switch ( parent . get CaMeL Type ( ) && parent == parent ) {
rank: 489
score: 99.164541015625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Token . class :
rank: 489
score: 99.16420200892857
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) ) {
rank: 490
score: 99.4240191915761
patch: while ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 490
score: 99.40292019314236
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC : {
rank: 490
score: 99.39967854817708
patch: if ( n . get CaMeL Type ( ) == Type . STRING _ KEY ) {
rank: 490
score: 99.3687744140625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( module ) ) {
rank: 490
score: 99.32275390625
patch: switch ( parent . get CaMeL Type ( ) ) { iterator != null ;
rank: 490
score: 99.29988606770833
patch: if ( parent . get CaMeL Type ( ) != Token . VAR )
rank: 490
score: 99.29236233618951
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 490
score: 99.27688759251645
patch: if ( parent != parent ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 490
score: 99.16436767578125
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Type ( ) )
rank: 490
score: 99.16328648158482
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) {
rank: 491
score: 99.42399516858552
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . VAR ;
rank: 491
score: 99.40284264605978
patch: name = n . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 491
score: 99.32274280894886
patch: switch ( parent . get CaMeL Type ( ) ) { null : parent . get CaMeL Type ( ) ;
rank: 491
score: 99.29230608258929
patch: switch ( n . get CaMeL Type CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 491
score: 99.27646998355263
patch: if ( parent != null && parent . get CaMeL Type ( ) == Type . ) {
rank: 491
score: 99.16432189941406
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 491
score: 99.16242585358796
patch: switch ( parent . get CaMeL Type ( ) ) { case Integer . TYPE : this . parent . get CaMeL Type ( ) ;
rank: 492
score: 99.42390242866848
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } else {
rank: 492
score: 99.36842651367188
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : .
rank: 492
score: 99.32272206182066
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Qualified CaMeL Name ( ) {
rank: 492
score: 99.2922030362216
patch: name = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ; }
rank: 492
score: 99.27644856770833
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . err ) {
rank: 492
score: 99.16288539341518
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) )
rank: 492
score: 99.16180419921875
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) ) ;
rank: 493
score: 99.42381702769886
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { type = Name . Type . SET ;
rank: 493
score: 99.40123980978261
patch: is CaMeL Set = true ; type = Name . Type . SET ; type = Name . Type . GET ;
rank: 493
score: 99.39915248325893
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 493
score: 99.36823187934027
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : else
rank: 493
score: 99.32271575927734
patch: switch ( parent . get CaMeL Type ( ) ) { / true : }
rank: 493
score: 99.29976981026786
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit CaMeL Key ( ) )
rank: 493
score: 99.29219695060483
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . clear ( ) ;
rank: 493
score: 99.27630615234375
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . PREFIX ) {
rank: 493
score: 99.162802734375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 493
score: 99.16179289641204
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL String ( ) ) ;
rank: 494
score: 99.4236370584239
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 494
score: 99.40108235677083
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { case Token . GETPROP :
rank: 494
score: 99.399140625
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Token . VAR ) {
rank: 494
score: 99.36782836914062
patch: if ( parent . get CaMeL Type ( ) != Node . GETPROP ) {
rank: 494
score: 99.32267761230469
patch: switch ( parent . get CaMeL Type ( ) ) { null = ) ;
rank: 494
score: 99.29962479440789
patch: String $STRING$ = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 494
score: 99.29209498355263
patch: name = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; break ;
rank: 494
score: 99.162705078125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Token . ) {
rank: 494
score: 99.16154233870968
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 495
score: 99.42354152513587
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 495
score: 99.40062313988095
patch: switch ( parent . get CaMeL Type ( ) ) { case String . Type . STRING _ KEY :
rank: 495
score: 99.3990414268092
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION : break ;
rank: 495
score: 99.36782355057566
patch: switch ( ( parent . get CaMeL Type ( ) ) . get CaMeL Type ( ) )
rank: 495
score: 99.32260964133523
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) . }
rank: 495
score: 99.29955182756696
patch: int n = parent . get CaMeL First CaMeL Child ( ) ;
rank: 495
score: 99.29202403192934
patch: type = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 495
score: 99.27610270182292
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Name . NONE ) {
rank: 495
score: 99.162685546875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Type . NAME :
rank: 495
score: 99.15992149939903
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TRUE : parent . get CaMeL Type ( ) ; }
rank: 496
score: 99.42321246603261
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } } }
rank: 496
score: 99.40060763888889
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { ) {
rank: 496
score: 99.36758083767361
patch: if ( n . get CaMeL Type ( ) == Token . GETTER _ DEF ) {
rank: 496
score: 99.29876387746711
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Type . VAR :
rank: 496
score: 99.29172279094827
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . add CaMeL Node ( name ) ; }
rank: 496
score: 99.162607421875
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Char CaMeL Sequence . NONE :
rank: 496
score: 99.15925816127232
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) . to CaMeL String ( ) ; }
rank: 497
score: 99.42299290707237
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) ) {
rank: 497
score: 99.39841941550925
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 497
score: 99.36728387129934
patch: try { switch ( parent . get CaMeL Type ( ) ) { case Token . VAR :
rank: 497
score: 99.29876030815973
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) ) {
rank: 497
score: 99.291435546875
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 497
score: 99.27599419487848
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) default :
rank: 497
score: 99.16223514441288
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 497
score: 99.15898980034723
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . get CaMeL Type ( ) ; }
rank: 498
score: 99.42288547092014
patch: type = get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 498
score: 99.40000697544643
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == n )
rank: 498
score: 99.39812360491071
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 498
score: 99.32223074776786
patch: switch ( parent . get CaMeL Type ( ) ) { ++ )
rank: 498
score: 99.29142761230469
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( parent ) ;
rank: 498
score: 99.27562459309895
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Name . class ) {
rank: 498
score: 99.16128743489584
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 498
score: 99.1586493130388
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 499
score: 99.42272418478261
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . SET ;
rank: 499
score: 99.39805094401042
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 499
score: 99.3666633157169
patch: switch ( name . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 499
score: 99.29140288254311
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Class CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 499
score: 99.27552795410156
patch: switch ( parent . get CaMeL Type ( ) ) { TRUE = parent {
rank: 499
score: 99.160888671875
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 499
score: 99.15858968098958
patch: if ( parent . is CaMeL String ( ) ) {
rank: 500
score: 99.36637609145221
patch: is CaMeL Set = true ; switch ( n . get CaMeL Type ( ) )
rank: 500
score: 99.32218933105469
patch: switch ( parent . get CaMeL Type ( ) ) { null : else {
rank: 500
score: 99.29129791259766
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get ( ) . {
rank: 500
score: 99.27487182617188
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . EMPTY ) {
rank: 500
score: 99.160390625
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . parent :
rank: 500
score: 99.15739222935268
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 501
score: 99.42250127377717
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . SET ; break ;
rank: 501
score: 99.39937160326087
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != null )
rank: 501
score: 99.39798828125
patch: if ( parent . get CaMeL Type ( ) != Token . STRING _ KEY ) type = Name . Type . SET ;
rank: 501
score: 99.36623965992646
patch: switch ( n . get CaMeL Type ( ) ) { case Type . VAR :
rank: 501
score: 99.3220745584239
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 501
score: 99.29804543887867
patch: switch ( parent . has CaMeL Type ( Token . STRING _ KEY ) ) {
rank: 501
score: 99.291259765625
patch: name = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 501
score: 99.27481239720395
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) break ; }
rank: 501
score: 99.16017578125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . PARAM _ LIST :
rank: 501
score: 99.15735315393519
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) . set CaMeL Type ( name ) ;
rank: 502
score: 99.42234375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { }
rank: 502
score: 99.39931418678977
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) != n ) {
rank: 502
score: 99.3978783392137
patch: is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; }
rank: 502
score: 99.36619657628677
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) { return ; }
rank: 502
score: 99.32191975911458
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 502
score: 99.2975841703869
patch: switch ( parent . parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 502
score: 99.15988498263889
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 502
score: 99.15713840060764
patch: parent . get CaMeL Type ( ) ;
rank: 503
score: 99.42216796875
patch: switch ( n . get CaMeL Type ( ) ) { type = Name . Type . OTHER ;
rank: 503
score: 99.39921739366319
patch: switch ( get CaMeL Value CaMeL Type ( n ) ) { case Token . GETPROP :
rank: 503
score: 99.39769151475694
patch: switch ( n . get CaMeL Class ( ) . get CaMeL Type ( ) ) {
rank: 503
score: 99.36578010110294
patch: switch ( parent . get CaMeL Type ( ) ) { default : return ; }
rank: 503
score: 99.32182384672619
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property ( ) ;
rank: 503
score: 99.290771484375
patch: type = name . get CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 503
score: 99.27448272705078
patch: switch ( parent == null && parent . get CaMeL Type ( ) ) {
rank: 503
score: 99.15961745689656
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) ) ;
rank: 503
score: 99.1562263734879
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 504
score: 99.42202276932566
patch: is CaMeL Set = true ; type = value . get CaMeL First CaMeL Child ( ) ;
rank: 504
score: 99.3991366299716
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n ) ) { case Token . VAR :
rank: 504
score: 99.39768580386513
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC : / /
rank: 504
score: 99.36531066894531
patch: get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 504
score: 99.29700385199652
patch: try { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 504
score: 99.2907470703125
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) return ; default :
rank: 504
score: 99.27440344769022
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Name . ) {
rank: 504
score: 99.15954137731481
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ;
rank: 504
score: 99.15592447916667
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Id ( ) ) ;
rank: 505
score: 99.42142159598214
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NAME : return ;
rank: 505
score: 99.39909561820652
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . NAME )
rank: 505
score: 99.39745032269022
patch: switch ( n . get CaMeL Type ( ) ) { case Token . FUNCTION : is CaMeL Set = true ;
rank: 505
score: 99.36480712890625
patch: if ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) {
rank: 505
score: 99.32154846191406
patch: switch ( parent . get CaMeL Type ( ) ) { n = null {
rank: 505
score: 99.29060502485795
patch: parent = parent . get CaMeL Parent ( ) ; } switch ( parent . get CaMeL Type ( ) )
rank: 505
score: 99.27438354492188
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . ALL ) {
rank: 505
score: 99.15947614397321
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Name ( ) )
rank: 505
score: 99.15592134915866
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . FALSE : parent . get CaMeL Type ( ) ; }
rank: 506
score: 99.42123592601104
patch: is CaMeL Set = true ; type = parent . get CaMeL Parent ( ) ;
rank: 506
score: 99.3990119485294
patch: type = Name . Type . FUNCTION ; type = Name . Type . SET ;
rank: 506
score: 99.36440860523896
patch: is CaMeL Set = true ; switch ( parent . get CaMeL Type ( ) )
rank: 506
score: 99.321533203125
patch: switch ( parent . get CaMeL Type ( ) ) { { / ?
rank: 506
score: 99.29645647321429
patch: switch ( n . is CaMeL Object CaMeL Lit ( ) ) { case Token . GETTER _ DEF :
rank: 506
score: 99.29056589226974
patch: name = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 506
score: 99.27437337239583
patch: switch ( value . get CaMeL Type ( ) ) {
rank: 506
score: 99.15886819773706
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ;
rank: 506
score: 99.15538287984914
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class CaMeL Name ( ) ) ;
rank: 507
score: 99.39872911241319
patch: switch ( n . get CaMeL Type ( ) ) { case Token . VAR : ;
rank: 507
score: 99.32152258831522
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( node . get CaMeL Type ( ) ) {
rank: 507
score: 99.29031808035714
patch: type = parent . get CaMeL Name ( ) + $STRING$ + parent . get CaMeL Name ( ) ;
rank: 507
score: 99.27432250976562
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . PREFIX ) {
rank: 507
score: 99.15860721982759
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parameter CaMeL Type ( ) ) ;
rank: 507
score: 99.1552264873798
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Class ( ) != null ) {
rank: 508
score: 99.42108154296875
patch: switch ( parent . get CaMeL Type ( ) ) { type = Name . Type . FUNCTION ;
rank: 508
score: 99.39681270204741
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; } else {
rank: 508
score: 99.36380208333334
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) { {
rank: 508
score: 99.3210782137784
patch: switch ( parent . get CaMeL Type ( ) ) { null , parent . get CaMeL Type ( ) ;
rank: 508
score: 99.29583418996711
patch: if ( parent . get CaMeL Type ( ) ) type = Name . Type . OTHER ;
rank: 508
score: 99.2902587890625
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . {
rank: 508
score: 99.27364095052083
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . err ) {
rank: 508
score: 99.15824833622685
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Char CaMeL Sequence . NONE :
rank: 508
score: 99.15483036747685
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Class ( ) ) ;
rank: 509
score: 99.42072496916118
patch: type = Name . Type . OTHER ; type = Name . Type . SET ; break ;
rank: 509
score: 99.39678744612068
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( n ) ) {
rank: 509
score: 99.3634033203125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . Definition :
rank: 509
score: 99.32083290501645
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . ) { else {
rank: 509
score: 99.29568481445312
patch: Type type = parent . get CaMeL Type ( ) ;
rank: 509
score: 99.29024382560483
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . { return ; }
rank: 509
score: 99.27359008789062
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Class ( ) == Type . NONE ) {
rank: 509
score: 99.1580859375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . NULL :
rank: 509
score: 99.15467664930556
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( type ) ;
rank: 510
score: 99.39711692116477
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == n ) {
rank: 510
score: 99.39667800377156
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) , scope ) ; }
rank: 510
score: 99.36338404605263
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GETPROP : return ;
rank: 510
score: 99.32076590401786
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Class ( ) .
rank: 510
score: 99.29490443638393
patch: String name = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 510
score: 99.29016694568452
patch: parent = parent . get CaMeL Parent ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 510
score: 99.2735824584961
patch: do . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 510
score: 99.15775390625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . ) :
rank: 510
score: 99.15453229631696
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Type ( ) ) {
rank: 511
score: 99.42017711292614
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { default = Name . Type . OTHER ;
rank: 511
score: 99.39651828342014
patch: switch ( parent . get CaMeL Types ( ) . get CaMeL Type ( ) ) {
rank: 511
score: 99.39579264322917
patch: switch ( get CaMeL Value CaMeL Type ( n ) ) { case Token . FUNCTION :
rank: 511
score: 99.36284323299633
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GETPROP ;
rank: 511
score: 99.32065651633523
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Parent ( ) ; }
rank: 511
score: 99.29469992897727
patch: final Name . Type type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 511
score: 99.29000538793103
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Type ( name ) ; }
rank: 511
score: 99.27351888020833
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . STRING ) {
rank: 511
score: 99.15440955528847
patch: if ( parent . get CaMeL Type ( ) != Type . ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 512
score: 99.42017663043478
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 512
score: 99.39640538832721
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . GET :
rank: 512
score: 99.32058233963816
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . class : * /
rank: 512
score: 99.29456284466912
patch: if ( parent . get CaMeL Type ( ) ) is CaMeL Set = true ;
rank: 512
score: 99.28985040838069
patch: name = parent . get CaMeL Name ( ) ; parent = parent . get CaMeL Parent ( ) ; }
rank: 512
score: 99.15583405671296
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) )
rank: 512
score: 99.15372140066964
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Value ( ) ) :
rank: 513
score: 99.39632161458333
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 513
score: 99.36234777113971
patch: switch ( n . get CaMeL Type ( ) ) { case Token . FALSE :
rank: 513
score: 99.3205035665761
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Property CaMeL Name ( ) {
rank: 513
score: 99.28967815896739
patch: type = parent . get CaMeL Type ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 513
score: 99.273193359375
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . PREFIX ) {
rank: 513
score: 99.15576171875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Char CaMeL Sequence . ) {
rank: 513
score: 99.15162658691406
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Lower CaMeL Case ( ) ) {
rank: 514
score: 99.39614470108695
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == Token . VAR ) {
rank: 514
score: 99.36219697840073
patch: if ( get CaMeL Value CaMeL Type ( n ) == Token . VAR ) {
rank: 514
score: 99.3202488111413
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Class CaMeL Name ( ) {
rank: 514
score: 99.29390676398026
patch: String name = get CaMeL Value CaMeL Type ( n . get CaMeL String ( ) ) ;
rank: 514
score: 99.28958228326613
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Type ( Name . Type ) ; }
rank: 514
score: 99.27305201480263
patch: if ( parent == parent ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 514
score: 99.15533236799568
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break ;
rank: 514
score: 99.15119280133929
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 515
score: 99.39607484879032
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) != n . get CaMeL First CaMeL Child ( ) ) {
rank: 515
score: 99.3954719094669
patch: switch ( parent . get CaMeL Type ( ) ) is CaMeL Set = true ;
rank: 515
score: 99.36211081112133
patch: switch ( list . get CaMeL Type ( ) ) { case Token . VAR :
rank: 515
score: 99.32023819633152
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Type ( ) ;
rank: 515
score: 99.28932407924107
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; {
rank: 515
score: 99.15502025462963
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . NULL :
rank: 515
score: 99.15108605587122
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 516
score: 99.41981416590073
patch: type = Name . Type . GET ; type = Name . Type . SET ;
rank: 516
score: 99.39580977590461
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING : / ?
rank: 516
score: 99.3619025735294
patch: if ( name . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 516
score: 99.32003348214286
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Code ( ) {
rank: 516
score: 99.29348273026316
patch: Object name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 516
score: 99.28923929148706
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ) ; }
rank: 516
score: 99.27260335286458
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Node . TRUE ) {
rank: 516
score: 99.15501121238425
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Symbol ( ) ) ;
rank: 516
score: 99.15009765625
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Qualified CaMeL Name ( ) ) :
rank: 517
score: 99.41966610863095
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 517
score: 99.395751953125
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) )
rank: 517
score: 99.39522298177083
patch: if ( parent . get CaMeL Type ( ) == Token . INC )
rank: 517
score: 99.36189270019531
patch: if ( n . get CaMeL Type ( ) != Name . Type ) {
rank: 517
score: 99.2723972486413
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . ) .
rank: 517
score: 99.15477611400463
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Char CaMeL Sequence . TYPE :
rank: 517
score: 99.14992850167411
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Name ( ) ) ; }
rank: 518
score: 99.3957421875
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; }
rank: 518
score: 99.3197265625
patch: switch ( parent . get CaMeL Type ( ) ) { / ? :
rank: 518
score: 99.29335327148438
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) {
rank: 518
score: 99.27161661783855
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Name . NONE ) {
rank: 518
score: 99.154765625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Token . TYPE :
rank: 518
score: 99.14971051897321
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 519
score: 99.41935899522569
patch: is CaMeL Set = true ; type = parent . get CaMeL Type ( ) ; }
rank: 519
score: 99.39568536931819
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 519
score: 99.39506022135417
patch: if ( parent != n . get CaMeL First CaMeL Child ( ) )
rank: 519
score: 99.31972434303977
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Parent ( ) ;
rank: 519
score: 99.29235258556548
patch: switch ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) ) { case Token . ASSIGN :
rank: 519
score: 99.28866084929436
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; return ;
rank: 519
score: 99.2715555826823
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Name . TYPE ) {
rank: 519
score: 99.1539453125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Type . ) {
rank: 519
score: 99.14831995081019
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : parent . get CaMeL String CaMeL Value ( ) ;
rank: 520
score: 99.41904518821023
patch: Node parent = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 520
score: 99.39534912109374
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n , scope ) ;
rank: 520
score: 99.29210140830592
patch: try { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 520
score: 99.2885211447011
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . ) :
rank: 520
score: 99.27139282226562
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Name . class ) {
rank: 520
score: 99.15382434475806
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 520
score: 99.14829282407408
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE : parent . get CaMeL String CaMeL Value ( ) ;
rank: 521
score: 99.41901598478618
patch: type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ;
rank: 521
score: 99.39398748224431
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { case Token . DEC :
rank: 521
score: 99.36019897460938
patch: if ( parent . get CaMeL Type ( ) == Token . ERROR ) {
rank: 521
score: 99.31948707217262
patch: switch ( parent . get CaMeL Type ( ) ) { = type . get CaMeL Name ( ) {
rank: 521
score: 99.28848121279762
patch: id = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 521
score: 99.2713558799342
patch: switch ( parent . get CaMeL Type ( ) ) { super . switch ( parent ) ;
rank: 521
score: 99.15358072916666
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 521
score: 99.1482925415039
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Lower CaMeL Case ( ) ) {
rank: 522
score: 99.41874389648437
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ;
rank: 522
score: 99.3952215786638
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 522
score: 99.31929096422698
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE / * /
rank: 522
score: 99.28833912037037
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 522
score: 99.27130126953125
patch: switch ( get CaMeL Class ( ) . get CaMeL Type ( ) ) {
rank: 522
score: 99.1535311612216
patch: type = parent . get CaMeL Type ( ) ;
rank: 522
score: 99.14827183314732
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Value ( ) ) ; }
rank: 523
score: 99.39503580729166
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 523
score: 99.31894753196023
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Node ( ) {
rank: 523
score: 99.2908935546875
patch: switch ( parent . has CaMeL Type ( Token . GETTER _ DEF ) ) {
rank: 523
score: 99.28827956627156
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 523
score: 99.2712910970052
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Class . TYPE ) {
rank: 523
score: 99.15333839699075
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) )
rank: 523
score: 99.14814104352679
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) ) }
rank: 524
score: 99.4179178873698
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL First CaMeL Child ( ) ) )
rank: 524
score: 99.39494105747768
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 524
score: 99.39359537760417
patch: switch ( n . get CaMeL Type ( ) ) { case Token . FUNCTION : {
rank: 524
score: 99.31873575846355
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 524
score: 99.29031532689145
patch: Token name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 524
score: 99.2882568359375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Child CaMeL Count ( ) * /
rank: 524
score: 99.27125549316406
patch: switch ( parent . get CaMeL Type ( ) ) { case ) ) {
rank: 524
score: 99.14781358506944
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class ( ) ) ;
rank: 525
score: 99.4176737467448
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 525
score: 99.3945548765121
patch: switch ( parent . get CaMeL Type ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Parent ( ) ) ) {
rank: 525
score: 99.39305922564338
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . DEC :
rank: 525
score: 99.35751522288604
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 525
score: 99.3184585571289
patch: switch ( parent . get CaMeL Type ( ) ) { / * return )
rank: 525
score: 99.28817749023438
patch: parent . set CaMeL Name ( parent . get CaMeL Name ( ) ) ;
rank: 525
score: 99.27119445800781
patch: switch ( parent . get CaMeL Type ( ) ) { value = null ;
rank: 525
score: 99.1529071514423
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . ) { {
rank: 525
score: 99.14775933159723
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals ( name ) ) {
rank: 526
score: 99.39304517663044
patch: if ( parent . get CaMeL Type ( ) == n . get CaMeL First CaMeL Child ( ) ) { {
rank: 526
score: 99.3569694967831
patch: switch ( current . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 526
score: 99.31837373621323
patch: switch ( parent . get CaMeL Type ( ) ) { null * * * /
rank: 526
score: 99.28997247869319
patch: if ( ! get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 526
score: 99.27080335115132
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) return ) ;
rank: 526
score: 99.15288837139423
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . STRING _ KEY ) {
rank: 526
score: 99.14768699363425
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type ( ) ) {
rank: 527
score: 99.39424351283482
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null )
rank: 527
score: 99.39230526194854
patch: type = Name . Type . SET ; type = Name . Type . GET ;
rank: 527
score: 99.35636901855469
patch: if ( parent . get CaMeL Type ( ) == Token . STATEMENT ) {
rank: 527
score: 99.28994571461396
patch: switch ( Node CaMeL Util . get CaMeL Value CaMeL Type ( parent ) ) {
rank: 527
score: 99.28776602909483
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; } }
rank: 527
score: 99.27067565917969
patch: if ( parent == null || parent . get CaMeL Type ( ) ) {
rank: 527
score: 99.15235314002403
patch: switch ( parent . parent . get CaMeL Type ( ) )
rank: 528
score: 99.41604953342014
patch: type = get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 528
score: 99.39174517463235
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . GETPROP :
rank: 528
score: 99.3559799194336
patch: if ( parent . get CaMeL Type ( ) == Name . VAR ) {
rank: 528
score: 99.31781560724431
patch: switch ( parent . get CaMeL Type ( ) ) { } = parent . get CaMeL Parent ( ) {
rank: 528
score: 99.28990071614584
patch: switch ( n . get CaMeL First CaMeL Child ( ) == n )
rank: 528
score: 99.2876838235294
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . EOC :
rank: 528
score: 99.2706298828125
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . EMPTY ) {
rank: 528
score: 99.14689688846983
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type CaMeL Name ( ) ) ;
rank: 529
score: 99.39379095262096
patch: switch ( parent . get CaMeL Type ( ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Type ( ) ) ) {
rank: 529
score: 99.39061438519022
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC : is CaMeL Set = true ;
rank: 529
score: 99.35591947115384
patch: name = n . get CaMeL First CaMeL Child ( ) ;
rank: 529
score: 99.31753743489584
patch: switch ( parent . get CaMeL Type ( ) ) { * / }
rank: 529
score: 99.28766741071429
patch: name = parent . get CaMeL Name ( ) ; parent = parent . get CaMeL Parent ( ) ;
rank: 529
score: 99.26962619357639
patch: switch ( parent . get CaMeL Type ( ) ) { { case Node . ) {
rank: 529
score: 99.15116664341518
patch: int index = parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ; parent . set CaMeL Type ( index ) ;
rank: 529
score: 99.14665876116071
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . length ( ) > 0 ) {
rank: 530
score: 99.4137295809659
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ; }
rank: 530
score: 99.39375636888587
patch: if ( parent . get CaMeL Type ( ) == Token . STRING : type = Name . Type . OTHER ;
rank: 530
score: 99.39028532608695
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . STRING )
rank: 530
score: 99.317236328125
patch: if ( parent != null && parent . get CaMeL Type ( ) == Type . class ) {
rank: 530
score: 99.28945922851562
patch: int type = parent . get CaMeL Type ( ) ;
rank: 530
score: 99.15101975661058
patch: final String name = parent . get CaMeL Name ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 530
score: 99.14594184027777
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Type ( name ) ;
rank: 531
score: 99.39373147898706
patch: switch ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 531
score: 99.38924153645833
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC : ;
rank: 531
score: 99.35546156939338
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . PARAMETER :
rank: 531
score: 99.31719415838069
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Name ( ) {
rank: 531
score: 99.28643243963069
patch: type = parent . get CaMeL Type ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 531
score: 99.26941935221355
patch: switch ( parent . get CaMeL Type ( ) ) { case switch ( parent . get CaMeL Type ( ) ) {
rank: 531
score: 99.15025916466347
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) . equals ( Type . ) ) {
rank: 531
score: 99.1459327980324
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Name ( type ) ;
rank: 532
score: 99.41332397460937
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , parent ) ;
rank: 532
score: 99.39360194052419
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 532
score: 99.35533231847427
patch: switch ( parent . get CaMeL Name ( ) ) { case Token . NAME :
rank: 532
score: 99.31718306107955
patch: switch ( parent . get CaMeL Type ( ) ) { null = type . get CaMeL Type ( ) {
rank: 532
score: 99.289306640625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Next ( ) )
rank: 532
score: 99.28616648706897
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . remove CaMeL Child ( name ) ; }
rank: 532
score: 99.26934814453125
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Type . FORMAT ) {
rank: 532
score: 99.14822952835648
patch: final String name = parent . get CaMeL Name ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 532
score: 99.14407784598214
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) == null ) {
rank: 533
score: 99.4132663892663
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } try {
rank: 533
score: 99.38898782169117
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . STRING :
rank: 533
score: 99.35480813419117
patch: if ( parent . get CaMeL Type ( ) == Token . VAR ) { {
rank: 533
score: 99.31708170572917
patch: switch ( parent . get CaMeL Type ( ) ) { ++ $STRING$ ;
rank: 533
score: 99.28915803328805
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) is CaMeL Set = true ;
rank: 533
score: 99.28616536458334
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class CaMeL Loader ( ) . {
rank: 533
score: 99.14768824084052
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Source CaMeL Name ( ) ) ;
rank: 533
score: 99.14401337594697
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 534
score: 99.41267533735795
patch: type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } else
rank: 534
score: 99.39330336626838
patch: switch ( Node CaMeL Util . get CaMeL Function CaMeL Type ( parent ) ) {
rank: 534
score: 99.38885857077206
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { }
rank: 534
score: 99.35477120535714
patch: if ( n . get CaMeL Type ( ) != n ) {
rank: 534
score: 99.31705729166667
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Code ( ) {
rank: 534
score: 99.2861328125
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 534
score: 99.2691141764323
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Class ( ) == Type . class ) {
rank: 534
score: 99.14767795138889
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Char CaMeL Sequence . NULL :
rank: 534
score: 99.14324396306819
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 535
score: 99.41257546164773
patch: Node n = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 535
score: 99.39330078125
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) type = Name . Type . SET ;
rank: 535
score: 99.38884141710069
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC : }
rank: 535
score: 99.35409545898438
patch: if ( n . get CaMeL Type ( ) != Token . NAME ) {
rank: 535
score: 99.31691576086956
patch: switch ( parent . get CaMeL Type ( ) ) { index ( parent . get CaMeL Type ( ) ) {
rank: 535
score: 99.2858154296875
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class CaMeL Name ( ) ; )
rank: 535
score: 99.14678744612068
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ; break ;
rank: 535
score: 99.14237758091518
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals ( $STRING$ ) ) {
rank: 536
score: 99.41239013671876
patch: type = Name . Type . GET ; switch ( parent . get CaMeL Type ( ) ) {
rank: 536
score: 99.39314350328948
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION : / /
rank: 536
score: 99.3536148071289
patch: if ( parent . get CaMeL Type ( ) == Type . GETPROP ) {
rank: 536
score: 99.28810337611607
patch: switch ( parent . get CaMeL Qualified CaMeL Name ( ) ) {
rank: 536
score: 99.28554214969758
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ;
rank: 536
score: 99.26889377170139
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) * )
rank: 536
score: 99.14662522536058
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . ) { {
rank: 536
score: 99.14231823336694
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 537
score: 99.4118896484375
patch: type = get CaMeL Qualified CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 537
score: 99.39289460358796
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; } * /
rank: 537
score: 99.38854449728261
patch: switch ( parent . get CaMeL Parent ( ) ) { case Token . VAR : is CaMeL Set = true ;
rank: 537
score: 99.3535515280331
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR ?
rank: 537
score: 99.28798956620066
patch: String type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 537
score: 99.28540943287037
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( parent ) ; }
rank: 537
score: 99.26886345358456
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) )
rank: 537
score: 99.14536469558189
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Value CaMeL Type ( ) ) ;
rank: 537
score: 99.14197649274554
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . length ( ) == 0 ) {
rank: 538
score: 99.41135541130515
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . FUNCTION ;
rank: 538
score: 99.3928859544837
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : is CaMeL Set = false ;
rank: 538
score: 99.38806966145833
patch: if ( parent . get CaMeL Type ( ) == Token . FUNCTION )
rank: 538
score: 99.31643837376645
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) { / ?
rank: 538
score: 99.28795855978261
patch: switch ( n . get CaMeL Type ( ) || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 538
score: 99.2853759765625
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ; }
rank: 538
score: 99.26879164751838
patch: switch ( parent . get CaMeL Type ( ) ) { trim ( parent ) ;
rank: 538
score: 99.14481026785714
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) )
rank: 538
score: 99.14193289620536
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Parent ( ) ) :
rank: 539
score: 99.39259097450658
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : continue ;
rank: 539
score: 99.35253034319196
patch: if ( parent . is CaMeL Assignment CaMeL Op ( ) ) {
rank: 539
score: 99.31641787574405
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Property ( ) {
rank: 539
score: 99.28530447823661
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . {
rank: 539
score: 99.26859537760417
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . FORMAT ) {
rank: 539
score: 99.14472487877156
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) )
rank: 540
score: 99.41074090254934
patch: type = Name . Type . SET ; type = Name . Type . SET ; break ;
rank: 540
score: 99.3923828125
patch: if ( parent . get CaMeL Type ( ) != Token . STRING _ KEY ) type = Name . Type . GET ;
rank: 540
score: 99.38778347439236
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : )
rank: 540
score: 99.35223388671875
patch: if ( n . is CaMeL Object CaMeL Lit ( ) ) {
rank: 540
score: 99.31627308238636
patch: switch ( parent . get CaMeL Type ( ) ) { ++ ! parent . get CaMeL Type ( ) ;
rank: 540
score: 99.2847900390625
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . {
rank: 540
score: 99.26834106445312
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . STRING ) {
rank: 541
score: 99.31607055664062
patch: switch ( parent . get CaMeL Type ( ) ) { ++ switch ( parent . get CaMeL Type ( ) ) {
rank: 541
score: 99.28474934895833
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; break ;
rank: 541
score: 99.14434814453125
patch: switch ( type . get CaMeL Type CaMeL Name ( ) ) {
rank: 541
score: 99.14145688657408
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) ) {
rank: 542
score: 99.39165852864583
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 542
score: 99.38723575367646
patch: if ( parent != null || parent . get CaMeL Type ( ) != n )
rank: 542
score: 99.35162353515625
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) ) { default :
rank: 542
score: 99.28728170955883
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) )
rank: 542
score: 99.284423828125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ; }
rank: 542
score: 99.26790718410327
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . ) {
rank: 542
score: 99.14083297164352
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . equals ( $STRING$ ) ) {
rank: 543
score: 99.41035388764881
patch: name = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 543
score: 99.35146915211396
patch: if ( parent . get CaMeL Type ( ) == Token . VAR ) { }
rank: 543
score: 99.31570434570312
patch: switch ( parent . get CaMeL Type ( ) ) { contains = 0 {
rank: 543
score: 99.28721217105263
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Prop CaMeL Assign ( ) )
rank: 543
score: 99.28426688058036
patch: type = ( Node ) parent . get CaMeL Parent ( ) ;
rank: 543
score: 99.26788330078125
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . STRING ) {
rank: 543
score: 99.14339192708333
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . PREFIX _ STRING :
rank: 543
score: 99.1399169921875
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL String CaMeL Value ( ) ) :
rank: 544
score: 99.38719831194196
patch: if ( parent . is CaMeL Function CaMeL Expression ( ) ) {
rank: 544
score: 99.35139016544117
patch: switch ( n . get CaMeL Name ( ) ) { case Token . ASSIGN :
rank: 544
score: 99.31563136888587
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Variable CaMeL Name ( ) {
rank: 544
score: 99.28693953804348
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n )
rank: 544
score: 99.28415352957589
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ) ;
rank: 544
score: 99.26743727463942
patch: switch ( parent . get CaMeL Type ( $NUMBER$ ) ) {
rank: 544
score: 99.14336286272321
patch: for ( Type type : parent . get CaMeL Type ( ) )
rank: 544
score: 99.139892578125
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : parent . get CaMeL Class CaMeL Name ( ) ;
rank: 545
score: 99.4100674715909
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 545
score: 99.38719346788194
patch: if ( get CaMeL Value CaMeL Type ( n ) == Token . SETTER _ DEF )
rank: 545
score: 99.31555706521739
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property CaMeL Name ( ) ;
rank: 545
score: 99.28685238486842
patch: switch ( parent . to CaMeL String ( ) ) { case Token . STRING _ KEY :
rank: 545
score: 99.26698062294408
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . Type . ) {
rank: 545
score: 99.14201750578704
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Char CaMeL Sequence . NULL :
rank: 545
score: 99.13983154296875
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 546
score: 99.40994873046876
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; return ;
rank: 546
score: 99.39125279017857
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 546
score: 99.35110473632812
patch: if ( parent . get CaMeL Type ( ) == Node . ASSIGN ) {
rank: 546
score: 99.2864990234375
patch: int type = Name . Type . FUNCTION ; boolean is CaMeL Prop CaMeL Assign = true ;
rank: 546
score: 99.28408377511161
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Type ( ) ; }
rank: 546
score: 99.26687622070312
patch: switch ( parent . get CaMeL Type ( ) ) { { case ) {
rank: 546
score: 99.14194187973484
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 546
score: 99.13944498697917
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL String CaMeL Value ( ) ) ; }
rank: 547
score: 99.39117140997024
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; }
rank: 547
score: 99.38626437717014
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR : .
rank: 547
score: 99.31478678385416
patch: switch ( parent . get CaMeL Type ( ) ) { >= $NUMBER$ ;
rank: 547
score: 99.28405043658088
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NUMBER :
rank: 547
score: 99.26668294270833
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Type . FORMAT ) {
rank: 547
score: 99.14182826450893
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Name ( ) )
rank: 547
score: 99.13893410011575
patch: switch ( parent . get CaMeL Type ( ) ) { parent . get CaMeL Type ( ) . set CaMeL Type ( name ) ;
rank: 548
score: 99.40947129991319
patch: type = get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 548
score: 99.34991096047794
patch: if ( ! ( parent . is CaMeL Object CaMeL Lit ( ) ) ) {
rank: 548
score: 99.31470540364583
patch: switch ( parent . get CaMeL Type ( ) ) { = parent {
rank: 548
score: 99.28629343133224
patch: Name name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 548
score: 99.28401322798295
patch: Type type = parent . get CaMeL Type ( ) ; switch ( type . get CaMeL Type ( ) )
rank: 548
score: 99.26642166940789
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . Type . ) :
rank: 548
score: 99.14115849247685
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . PARAM _ LIST :
rank: 548
score: 99.138671875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL String ( ) ) ; }
rank: 549
score: 99.39093487079327
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Token . STRING _ KEY )
rank: 549
score: 99.3140869140625
patch: switch ( parent . get CaMeL Type ( ) ) { $NUMBER$ = parent . get CaMeL Parent ( ) {
rank: 549
score: 99.28388414884868
patch: name = parent . get CaMeL Name ( ) . to CaMeL String ( ) ; break ;
rank: 549
score: 99.26640239514802
patch: switch ( parent . get CaMeL Type ( ) ) { get CaMeL Type ( parent ) {
rank: 549
score: 99.14109644396552
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Type ( ) ) ;
rank: 549
score: 99.13846390335648
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) {
rank: 550
score: 99.40886896306819
patch: Node type = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . GET ;
rank: 550
score: 99.39085170200893
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null )
rank: 550
score: 99.38314115084134
patch: if ( parent . get CaMeL Type ( ) != null )
rank: 550
score: 99.34948012408088
patch: switch ( n . get CaMeL Name ( ) ) { case Token . GETPROP :
rank: 550
score: 99.3139892578125
patch: switch ( parent . get CaMeL Type ( ) ) { = get CaMeL Type ( parent ) {
rank: 550
score: 99.28370202105978
patch: name = parent . get CaMeL Name ( ) ; parent = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 550
score: 99.265869140625
patch: return ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 550
score: 99.13995768229167
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Name ( ) ) ; }
rank: 550
score: 99.13826234879032
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 551
score: 99.40810546875
patch: switch ( parent . get CaMeL Type ( ) ) { type = Name . Type . GET ;
rank: 551
score: 99.39083158052884
patch: switch ( parent . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 551
score: 99.38229549632354
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . FUNCTION :
rank: 551
score: 99.3490349264706
patch: switch ( id . get CaMeL Type ( ) ) { case Token . VAR :
rank: 551
score: 99.31387992527173
patch: switch ( parent . get CaMeL Type ( ) ) { -- ( parent . get CaMeL Type ( ) ) ;
rank: 551
score: 99.28549592391305
patch: switch ( parent . get CaMeL Type ( ) && n . get CaMeL First CaMeL Child ( ) == n )
rank: 551
score: 99.28357327368951
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 551
score: 99.26526896158855
patch: switch ( parent . get CaMeL String ( ) ) {
rank: 551
score: 99.13984206627156
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , name ) ;
rank: 551
score: 99.13807508680556
patch: switch ( parent . get CaMeL Type ( ) ) { case String . TYPE : this . parent . get CaMeL Type ( ) ;
rank: 552
score: 99.39055926983173
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 552
score: 99.38120524088542
patch: type = get CaMeL Value CaMeL Type ( n ) ;
rank: 552
score: 99.28534256784539
patch: Symbol name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 552
score: 99.28348795572917
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; break ; }
rank: 552
score: 99.26521809895833
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Class ( ) == Type . NONE ) {
rank: 552
score: 99.13962026742789
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . STRING _ KEY ) {
rank: 552
score: 99.13781286168981
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Type ( type ) ;
rank: 553
score: 99.38038736979166
patch: if ( parent . get CaMeL Type ( ) == Token . STRING )
rank: 553
score: 99.3136494954427
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Property CaMeL Type ( ) ;
rank: 553
score: 99.28528703962054
patch: switch ( n . is CaMeL Object CaMeL Lit ( ) ) {
rank: 553
score: 99.28341854319854
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 553
score: 99.13898111979167
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ; }
rank: 553
score: 99.13749476841518
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Value ( ) ) ; }
rank: 554
score: 99.40745142886513
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC : return ;
rank: 554
score: 99.39048324092742
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 554
score: 99.38019157858456
patch: if ( parent != null && parent . get CaMeL Type ( ) == n )
rank: 554
score: 99.34882668887867
patch: switch ( next . get CaMeL Type ( ) ) { case Token . VAR :
rank: 554
score: 99.31363932291667
patch: switch ( parent . get CaMeL Type ( ) ) { / / *
rank: 554
score: 99.28509880514706
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Var :
rank: 554
score: 99.26485188802083
patch: switch ( parent . get CaMeL Type ( ) && parent . to CaMeL String ( ) . equals ( ) ) {
rank: 554
score: 99.138916015625
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( ) )
rank: 554
score: 99.13705549568965
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type CaMeL Name ( ) ) ;
rank: 555
score: 99.39036402209052
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 555
score: 99.3480224609375
patch: switch ( name . get CaMeL Type ( ) ) { case Token . GETPROP :
rank: 555
score: 99.3133544921875
patch: switch ( parent . get CaMeL Type ( ) ) { else return )
rank: 555
score: 99.2850674715909
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Next ( ) ) {
rank: 555
score: 99.283203125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; {
rank: 555
score: 99.26422119140625
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 555
score: 99.13861762152777
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Base CaMeL Type ( ) ) { case Char CaMeL Sequence . NULL :
rank: 555
score: 99.13703264508929
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 556
score: 99.40720728824013
patch: is CaMeL Set = false ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 556
score: 99.390234375
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STRING _ KEY : is CaMeL Set = true ;
rank: 556
score: 99.34775390625
patch: switch ( ! parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 556
score: 99.31321022727273
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent ( ) ) {
rank: 556
score: 99.28498920641448
patch: result = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 556
score: 99.28317260742188
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . NULL ) {
rank: 556
score: 99.2642110188802
patch: switch ( root . get CaMeL Type ( ) ) {
rank: 556
score: 99.13824462890625
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) )
rank: 556
score: 99.13621303013393
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Name ( ) ) ; }
rank: 557
score: 99.38997708834134
patch: switch ( n . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ;
rank: 557
score: 99.31290690104167
patch: switch ( parent . get CaMeL Type ( ) ) { / ? }
rank: 557
score: 99.28489176432292
patch: if ( parent . get CaMeL Type ( ) == Type . GETTER _ DEF ) {
rank: 557
score: 99.28314763849431
patch: type = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 557
score: 99.26416015625
patch: switch ( parent . get CaMeL Type ( ) ) { * ? return {
rank: 557
score: 99.1375732421875
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; )
rank: 557
score: 99.13512311662946
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . is CaMeL Empty ( ) ) {
rank: 558
score: 99.38981119791667
patch: if ( parent . get CaMeL Type ( ) . get CaMeL First CaMeL Child ( ) == n . get CaMeL Type ( ) )
rank: 558
score: 99.3128303079044
patch: switch ( parent . get CaMeL Type ( ) ) { else { = null {
rank: 558
score: 99.28450281479779
patch: if ( parent . get CaMeL Type ( ) != Token . GETTER _ DEF )
rank: 558
score: 99.28270766314338
patch: type = parent . get CaMeL Name ( ) . get CaMeL Type ( ) ;
rank: 558
score: 99.2640380859375
patch: switch ( parent . get CaMeL Type ( this ) ) {
rank: 558
score: 99.13722386853448
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break )
rank: 558
score: 99.13480179398148
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL String CaMeL Value ( ) . equals ( $STRING$ ) ) {
rank: 559
score: 99.38979763454861
patch: type = Name . Type . OTHER ; break ; case Token . GETTER _ DEF :
rank: 559
score: 99.28420091711956
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . VAR :
rank: 559
score: 99.28264508928571
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . add CaMeL Node ( name ) ;
rank: 559
score: 99.2638651529948
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Name ( ) . equals ( ) ) {
rank: 559
score: 99.13699905960648
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . EMPTY :
rank: 559
score: 99.13463903356481
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE : this . parent . get CaMeL Type ( ) ;
rank: 560
score: 99.40651245117188
patch: type = Name . Type . SET ; switch ( n . get CaMeL Type ( ) ) {
rank: 560
score: 99.37762092141544
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . STRING :
rank: 560
score: 99.34608459472656
patch: if ( parent . get CaMeL Type ( ) == Token . DEC ) {
rank: 560
score: 99.31267951516544
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . type :
rank: 560
score: 99.28414481026786
patch: switch ( ( n . get CaMeL Type ( ) ) ) {
rank: 560
score: 99.26383249383224
patch: switch ( parent . get CaMeL Type CaMeL Name ( ) ) { case Node . ) {
rank: 560
score: 99.13514293323864
patch: switch ( type . get CaMeL Type ( ) )
rank: 560
score: 99.13280408135776
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) , type ) ;
rank: 561
score: 99.40639426491477
patch: Node n = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 561
score: 99.34591471354166
patch: if ( n . get CaMeL Type ( ) == Token . GETPROP )
rank: 561
score: 99.31243537454044
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . exit :
rank: 561
score: 99.28230086616848
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . NAME :
rank: 561
score: 99.26320286800987
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . parent = parent {
rank: 561
score: 99.13507711476294
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( ) )
rank: 561
score: 99.13231549944196
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Value ( ) ) :
rank: 562
score: 99.37648638556985
patch: switch ( n . get CaMeL Type ( ) ) { case Node . VAR :
rank: 562
score: 99.34423828125
patch: if ( parent . get CaMeL Type ( ) != Node . ASSIGN ) {
rank: 562
score: 99.31231689453125
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parent CaMeL Scope ( ) {
rank: 562
score: 99.28389057360198
patch: Type type = Name . Type . OTHER ; boolean is CaMeL Prop CaMeL Assign = true ;
rank: 562
score: 99.13427734375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . NAME :
rank: 562
score: 99.1316650390625
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 563
score: 99.40387284128289
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , name ) ) {
rank: 563
score: 99.3754653930664
patch: else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 563
score: 99.34318542480469
patch: if ( parent . get CaMeL Type ( ) == Scope . VAR ) {
rank: 563
score: 99.31190074573864
patch: switch ( parent . get CaMeL Type ( ) ) { key = parent . get CaMeL Parent ( ) {
rank: 563
score: 99.28370425575658
patch: int type = Name . Type . OTHER ; boolean is CaMeL Prop CaMeL Assign = true ;
rank: 563
score: 99.13351779513889
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Char CaMeL Sequence . EMPTY :
rank: 563
score: 99.13109479631696
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Class ( ) ) :
rank: 564
score: 99.34272766113281
patch: is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 564
score: 99.31171875
patch: switch ( parent . get CaMeL Type ( ) ) { / * :
rank: 564
score: 99.13288826778017
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) )
rank: 564
score: 99.13042340959821
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . is CaMeL Local ( ) ) {
rank: 565
score: 99.38906069155092
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 565
score: 99.37528722426471
patch: type = Name . Type . OTHER ; type = Name . Type . GET ;
rank: 565
score: 99.34180501302083
patch: if ( n . get CaMeL Type ( ) == Token . NAME )
rank: 565
score: 99.31150124289773
patch: switch ( parent . get CaMeL Type ( ) ) { type = parent . get CaMeL Type ( ) {
rank: 565
score: 99.26210021972656
patch: switch ( parent . get CaMeL Type ( ) ) { default : ) {
rank: 565
score: 99.13282933728448
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Name ( ) ) )
rank: 565
score: 99.13024481411638
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 566
score: 99.38894418569711
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 566
score: 99.34050641741071
patch: if ( n . get CaMeL Type ( ) != null ) {
rank: 566
score: 99.31149773848684
patch: switch ( parent . get CaMeL Type ( ) ) { start CaMeL Node ( parent ) ;
rank: 566
score: 99.281669921875
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . STRING _ KEY :
rank: 566
score: 99.26177978515625
patch: switch ( parent . get CaMeL Type ( ) ) { next ( ) {
rank: 566
score: 99.12930733816964
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 567
score: 99.40355834960937
patch: switch ( parent . get CaMeL Type ( ) ) { default = Name . Type . OTHER ;
rank: 567
score: 99.37499060997597
patch: if ( parent . get CaMeL Type ( ) == n )
rank: 567
score: 99.28294735863095
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) . get CaMeL
rank: 567
score: 99.26137131911058
patch: switch ( get CaMeL Type CaMeL Name ( parent ) ) {
rank: 567
score: 99.13220666956019
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . PARAM _ LIST :
rank: 567
score: 99.12922014508929
patch: switch ( parent . get CaMeL Type ( ) ) { - parent . get CaMeL Type ( ) . set CaMeL Type ( name ) ;
rank: 568
score: 99.40348735608552
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . OTHER :
rank: 568
score: 99.38782677283653
patch: switch ( n . get CaMeL Type ( ) ) { case Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 568
score: 99.33934783935547
patch: if ( n . get CaMeL Type ( ) == Type . OTHER ) {
rank: 568
score: 99.31144575639205
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Name ( ) {
rank: 568
score: 99.28293863932292
patch: if ( parent . get CaMeL Type ( ) != Token . SETTER _ DEF ) {
rank: 568
score: 99.26051240808823
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . WARNING :
rank: 568
score: 99.13151602909483
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) ) )
rank: 568
score: 99.12819126674107
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . is CaMeL String ( ) ) {
rank: 569
score: 99.337646484375
patch: if ( parent . get CaMeL Type ( ) == Token . NONE ) {
rank: 569
score: 99.13135704627403
patch: switch ( parent . index CaMeL Of ( $STRING$ ) ) {
rank: 569
score: 99.1281405362216
patch: name = parent . get CaMeL Type ( ) ;
rank: 570
score: 99.3870361328125
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) ) {
rank: 570
score: 99.33724212646484
patch: if ( parent . get CaMeL Type ( ) != Name . OTHER ) {
rank: 570
score: 99.31130149147727
patch: switch ( parent . get CaMeL Type ( ) ) { default = parent . get CaMeL Type ( ) {
rank: 570
score: 99.281220703125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; break ;
rank: 570
score: 99.26026068793402
patch: parent = parent . get CaMeL Type ( ) . get CaMeL Type ( ) ; }
rank: 570
score: 99.13115985576923
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) )
rank: 570
score: 99.12697838092673
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 571
score: 99.38688413558468
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 571
score: 99.37172002377717
patch: switch ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { case Token . VAR : {
rank: 571
score: 99.33685302734375
patch: if ( node . get CaMeL Type ( ) == Token . VAR ) {
rank: 571
score: 99.28259858630952
patch: switch ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Type ( ) )
rank: 571
score: 99.2811612215909
patch: Type ( parent . get CaMeL Type ( ) ) ; type = parent . get CaMeL Type ( ) ;
rank: 571
score: 99.26006401909723
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) * /
rank: 571
score: 99.13047438401442
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) . equals ( Type . NAME ) )
rank: 571
score: 99.12654331752232
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) . length ( ) > 0 ) {
rank: 572
score: 99.40245297080592
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NAME ;
rank: 572
score: 99.33683776855469
patch: if ( parent . get CaMeL Type ( ) == Name . OTHER ) {
rank: 572
score: 99.31085205078125
patch: if ( parent . get CaMeL Type ( ) > type ) {
rank: 572
score: 99.28226511101974
patch: Token name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 572
score: 99.25978306361607
patch: switch ( parent . get CaMeL Type ( ) && true ) {
rank: 572
score: 99.13019929108796
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Id ( ) ) ;
rank: 572
score: 99.12571498325893
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Type ( ) ) ;
rank: 573
score: 99.40244012129934
patch: type = Name . Type . GET ; type = Name . Type . SET ; break ;
rank: 573
score: 99.38677300347223
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; break ; case Token . GETTER _ DEF :
rank: 573
score: 99.36835075827206
patch: if ( parent . get CaMeL Type ( ) != Token . SETTER _ DEF )
rank: 573
score: 99.33655548095703
patch: if ( n . get CaMeL Type ( ) == Node . VAR ) {
rank: 573
score: 99.31083540482955
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent ( ) { else
rank: 573
score: 99.2817447060033
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Token . ASSIGN :
rank: 573
score: 99.12997233072916
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) ) ; }
rank: 573
score: 99.12448556082589
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) != Type . TRUE ) {
rank: 574
score: 99.40195719401042
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) ;
rank: 574
score: 99.38671003069196
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 574
score: 99.33616638183594
patch: if ( type . get CaMeL First CaMeL Child ( ) == n ) {
rank: 574
score: 99.31027221679688
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Value CaMeL Type ( ) {
rank: 574
score: 99.28171673943015
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) )
rank: 574
score: 99.28007289341518
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; }
rank: 574
score: 99.25910500919117
patch: switch ( parent . get CaMeL Type ( ) ) { ) { case ) ;
rank: 574
score: 99.12981305803571
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 574
score: 99.1239990234375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Array ( ) ) {
rank: 575
score: 99.4014892578125
patch: is CaMeL Set = false ; type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 575
score: 99.3865625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . FUNCTION : is CaMeL Set = true ;
rank: 575
score: 99.36328125
patch: if ( parent . is CaMeL Function CaMeL Expression ( ) )
rank: 575
score: 99.3098675271739
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type ( ) { }
rank: 575
score: 99.279296875
patch: name = parent . get CaMeL Name ( ) ; parent = parent . get CaMeL Parent CaMeL Scope ( ) ; }
rank: 575
score: 99.2587890625
patch: switch ( parent . get CaMeL Parameter CaMeL Type ( ) ) {
rank: 575
score: 99.12931876346983
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; return ;
rank: 575
score: 99.12379504788306
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 576
score: 99.40137436810662
patch: is CaMeL Set = true ; type = n . get CaMeL Next ( ) ;
rank: 576
score: 99.38637514467592
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Token . SETTER _ DEF ) {
rank: 576
score: 99.28130782277961
patch: switch ( node . get CaMeL Type ( ) ) { case Token . SETTER _ DEF :
rank: 576
score: 99.278828125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . NULL :
rank: 576
score: 99.25873123972039
patch: switch ( parent . get CaMeL Node ( ) . get CaMeL Type ( ) ) { {
rank: 576
score: 99.12875253182871
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . PREFIX _ STRING :
rank: 576
score: 99.12274169921875
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL String CaMeL Value ( ) . length ( ) == 0 ) {
rank: 577
score: 99.40133534307066
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ; break ;
rank: 577
score: 99.38626663773148
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . STRING _ KEY : . = Name . Type . FUNCTION ;
rank: 577
score: 99.36234777113971
patch: switch ( n . get CaMeL Next ( ) ) { case Token . VAR :
rank: 577
score: 99.33387756347656
patch: if ( parent . get CaMeL Type ( ) != Token . Definition ) {
rank: 577
score: 99.30953776041666
patch: switch ( parent . get CaMeL Type ( ) ) { else { ?
rank: 577
score: 99.27810984644397
patch: name = parent . get CaMeL Name ( ) + $STRING$ + parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 577
score: 99.2581787109375
patch: switch ( parent . get CaMeL Type ( ) ) { ) { case Token . ) :
rank: 577
score: 99.12845052083334
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break ; }
rank: 577
score: 99.121142578125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Array ( ) ) {
rank: 578
score: 99.38615616508152
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 578
score: 99.36178768382354
patch: type = Name . Type . FUNCTION ; type = Name . Type . GET ;
rank: 578
score: 99.33299255371094
patch: if ( parent . get CaMeL Type ( ) == Token . TRUE ) {
rank: 578
score: 99.30900065104167
patch: switch ( parent . get CaMeL Type ( ) ) { else { :
rank: 578
score: 99.28114077919408
patch: int id = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 578
score: 99.27798574942129
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; break ;
rank: 578
score: 99.25798034667969
patch: switch ( parent . get CaMeL Type ( ) ) { end ( ) ;
rank: 578
score: 99.1282371238426
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . EMPTY :
rank: 578
score: 99.12087920217803
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 579
score: 99.40065630744485
patch: for ( Token parent : parent . get CaMeL First CaMeL Child ( ) ) {
rank: 579
score: 99.3861328125
patch: if ( parent . get CaMeL Type ( ) == Token . STRING _ KEY ) type = Name . Type . GET ;
rank: 579
score: 99.35972493489584
patch: if ( n . get CaMeL First CaMeL Child ( ) == null )
rank: 579
score: 99.33285522460938
patch: if ( parent . get CaMeL Type ( ) != Name . VAR ) {
rank: 579
score: 99.3089958639706
patch: switch ( parent . get CaMeL Type ( ) ) { * * * { /
rank: 579
score: 99.25785827636719
patch: switch ( parent . get CaMeL Type ( ) && null != type ) {
rank: 579
score: 99.12528030960648
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Value ( ) ) ;
rank: 579
score: 99.12072332974138
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) ) * /
rank: 580
score: 99.38605866608796
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n )
rank: 580
score: 99.35786655970982
patch: if ( parent != n . get CaMeL Type ( ) ) {
rank: 580
score: 99.33262532552084
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) { }
rank: 580
score: 99.27771868024554
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ) ;
rank: 580
score: 99.25776890345982
patch: switch ( parent . get CaMeL Function CaMeL Type ( ) ) {
rank: 580
score: 99.12496512276786
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) ;
rank: 580
score: 99.11968122209821
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) != Type . class ) {
rank: 581
score: 99.39952935112848
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 581
score: 99.35346137152777
patch: type = Name . Type . FUNCTION ;
rank: 581
score: 99.33258819580078
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( n ) ) {
rank: 581
score: 99.30865478515625
patch: String get CaMeL Type = parent . get CaMeL Type ( ) {
rank: 581
score: 99.28036980879934
patch: switch ( parent . to CaMeL String ( ) ) { case Token . GETTER _ DEF :
rank: 581
score: 99.27762545072116
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add ( parent ) ;
rank: 581
score: 99.25736236572266
patch: switch ( parent . get CaMeL Type ( ) && target != null ) {
rank: 581
score: 99.12380545479911
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parent ( ) ) ; }
rank: 581
score: 99.11959635416666
patch: switch ( parent . get CaMeL Type ( ) ? parent . get CaMeL Type ( ) : parent . get CaMeL String CaMeL Value ( ) ) {
rank: 582
score: 99.3860099546371
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 582
score: 99.34923638237848
patch: type = Name . Type . OTHER ;
rank: 582
score: 99.33217947823661
patch: if ( ! is CaMeL Global CaMeL Scope ( scope ) ) {
rank: 582
score: 99.30859375
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Property CaMeL Name ( ) {
rank: 582
score: 99.27746188256049
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . switch ( parent )
rank: 582
score: 99.12274380387932
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , type ) ;
rank: 582
score: 99.11931501116071
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) != Type . TYPE ) {
rank: 583
score: 99.39856487771739
patch: try { type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 583
score: 99.38552954889113
patch: type = Node CaMeL Util . get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; break ; }
rank: 583
score: 99.3482421875
patch: if ( parent . get CaMeL Type ( ) == Node . VAR )
rank: 583
score: 99.33165740966797
patch: if ( parent . get CaMeL Type ( ) == Token . SET ) {
rank: 583
score: 99.30851665296052
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . TYPE * * /
rank: 583
score: 99.28012566817434
patch: expr = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 583
score: 99.27745319234914
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) = name ;
rank: 583
score: 99.25729370117188
patch: switch ( parent . get CaMeL Type ( ) ) { case ) return {
rank: 583
score: 99.122412109375
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Type ( ) ) ; }
rank: 583
score: 99.11857604980469
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Array CaMeL Type ( ) ) {
rank: 584
score: 99.39824083116319
patch: rvalue = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 584
score: 99.385458984375
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . ASSIGN :
rank: 584
score: 99.33026123046875
patch: if ( n . get CaMeL Type ( ) == n ) {
rank: 584
score: 99.30840509588069
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) ) ;
rank: 584
score: 99.2800823709239
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL
rank: 584
score: 99.27739868164062
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == )
rank: 584
score: 99.2569515830592
patch: switch ( parent != null || parent . get CaMeL Type ( ) == Type . ) {
rank: 584
score: 99.12200927734375
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Full CaMeL Name ( ) )
rank: 584
score: 99.11756243024554
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Parent ( ) ) :
rank: 585
score: 99.38532624421296
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n . get CaMeL Next ( ) ) {
rank: 585
score: 99.30793900923295
patch: switch ( parent . get CaMeL Type ( ) ) { ++ ( parent . get CaMeL Type ( ) )
rank: 585
score: 99.2796989889706
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Set ( ) )
rank: 585
score: 99.2773046875
patch: name = parent . get CaMeL Name ( ) . trim ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 585
score: 99.25666639539931
patch: switch ( parent . get CaMeL Type ( ) ) { case ? Node . ) ?
rank: 585
score: 99.12143891433189
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 585
score: 99.117431640625
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . length ( ) == 0 ) {
rank: 586
score: 99.39771185980902
patch: switch ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 586
score: 99.38515218098958
patch: if ( n . get CaMeL Type ( ) != Name . STRING _ KEY ) {
rank: 586
score: 99.32890319824219
patch: is CaMeL Set = true ; type = Name . Type . GET ; }
rank: 586
score: 99.27726798221983
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Name ( parent ) ; }
rank: 586
score: 99.25592510516827
patch: { switch ( parent . get CaMeL Type ( ) ) {
rank: 586
score: 99.12132045200893
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parameter CaMeL Type ( ) )
rank: 586
score: 99.11669921875
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Class ( ) ) :
rank: 587
score: 99.39701120476974
patch: type = Name . Type . SET ; type = Name . Type . OTHER ; break ;
rank: 587
score: 99.38503793569711
patch: if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) != null )
rank: 587
score: 99.3393325805664
patch: if ( parent . get CaMeL First CaMeL Child ( ) instanceof Token ) {
rank: 587
score: 99.30790571732955
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Name ( ) {
rank: 587
score: 99.27706776494566
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Token . FUNCTION )
rank: 587
score: 99.25585174560547
patch: switch ( parent . get CaMeL Type ( ) ) { case ) true :
rank: 587
score: 99.12077985491071
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , ) ;
rank: 588
score: 99.39678276909723
patch: type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ;
rank: 588
score: 99.33860677083334
patch: if ( parent . get CaMeL Type ( ) == Token . OTHER )
rank: 588
score: 99.32823944091797
patch: if ( parent . get CaMeL Type ( ) == Scope . GETPROP ) {
rank: 588
score: 99.3076808763587
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) ) { else
rank: 588
score: 99.27928670247395
patch: Node parent = parent . get CaMeL Parent ( ) ;
rank: 588
score: 99.27685546875
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . add CaMeL All ( parent ) ; }
rank: 588
score: 99.2556381225586
patch: switch ( parent . get CaMeL Type ( ) ) { { * return ;
rank: 588
score: 99.11982945033482
patch: switch ( parent . get CaMeL Type ( ) && get CaMeL Type ( parent . get CaMeL Class CaMeL Name ( ) ) != null )
rank: 588
score: 99.11498151506696
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL String ( ) ) ; }
rank: 589
score: 99.39615885416667
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { break ;
rank: 589
score: 99.38482455549568
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( n ) ) {
rank: 589
score: 99.33747100830078
patch: type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 589
score: 99.32530924479167
patch: switch ( parent . get CaMeL Type ( ) ) return ; default :
rank: 589
score: 99.30753580729167
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Value CaMeL Type ( ) {
rank: 589
score: 99.27928402549342
patch: Key name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 589
score: 99.25541469029018
patch: switch ( parent . get CaMeL Type ( ) || null ) {
rank: 589
score: 99.11971609933036
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Id ( ) ) ; }
rank: 589
score: 99.11482456752232
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Parent ( ) ) ; }
rank: 590
score: 99.38414346018145
patch: switch ( parent . get CaMeL Type ( ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Type ( ) ) ) {
rank: 590
score: 99.33576965332031
patch: type = Name . Type . OTHER ; break ; case Token . ASSIGN :
rank: 590
score: 99.32525634765625
patch: if ( parent . get CaMeL Type ( ) != Token . TYPE ) {
rank: 590
score: 99.30738366168478
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Property CaMeL Name ( ) ;
rank: 590
score: 99.27637780230978
patch: type = parent . get CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 590
score: 99.2552490234375
patch: switch ( parent . get CaMeL Type ( ) ) { { case Type . ) ?
rank: 590
score: 99.11949327256944
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Id ( ) ) )
rank: 590
score: 99.11476293103448
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . length ( ) > 0 ) {
rank: 591
score: 99.33194986979167
patch: if ( n . get CaMeL First CaMeL Child ( ) != n )
rank: 591
score: 99.32411193847656
patch: if ( parent . get CaMeL Type ( ) == Token . IN ) {
rank: 591
score: 99.30719549005681
patch: switch ( parent . get CaMeL Type ( ) ) { id = parent . get CaMeL Type ( ) ;
rank: 591
score: 99.27909770764802
patch: switch ( parent . is CaMeL Object CaMeL Lit ( ) . get CaMeL Type ( ) )
rank: 591
score: 99.27624059606481
patch: name = parent . get CaMeL Name ( ) . to CaMeL String ( ) ; switch ( n . get CaMeL Type ( ) )
rank: 591
score: 99.2550518329327
patch: switch $NUMBER$ ( parent . get CaMeL Type ( ) ) {
rank: 591
score: 99.11931242766204
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parent ( ) ) ;
rank: 592
score: 99.3836200420673
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { case Token . GETTER _ DEF :
rank: 592
score: 99.33167375837054
patch: if ( parent . get CaMeL Parent ( ) == n ) {
rank: 592
score: 99.32295227050781
patch: if ( parent . get CaMeL Type ( ) == Node . NAME ) {
rank: 592
score: 99.30712890625
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) ) ;
rank: 592
score: 99.2790298461914
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( scope ) ) {
rank: 592
score: 99.276123046875
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . add CaMeL All ( ) ; }
rank: 592
score: 99.2550048828125
patch: switch ( parent . get CaMeL Type ( ) && null == type ) {
rank: 592
score: 99.11887904575893
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; {
rank: 592
score: 99.11366489955357
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) == Type . TYPE ) {
rank: 593
score: 99.38352864583334
patch: switch ( Node CaMeL Util . get CaMeL Type ( parent ) ) {
rank: 593
score: 99.32270812988281
patch: if ( parent . get CaMeL Type ( ) == Token . prefix ) {
rank: 593
score: 99.30663001019022
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 593
score: 99.2549819946289
patch: switch ( parent . get CaMeL Type ( ) ) { { case ) ?
rank: 593
score: 99.11731409143519
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . NAME :
rank: 593
score: 99.11349051339286
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . size ( ) > 0 ) {
rank: 594
score: 99.33110046386719
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { } }
rank: 594
score: 99.32228088378906
patch: if ( n . get CaMeL Type ( ) != Token . ASSIGN ) {
rank: 594
score: 99.30662184495192
patch: switch ( parent . get CaMeL Type ( ) ) { .
rank: 594
score: 99.27880859375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . Type . ASSIGN :
rank: 594
score: 99.276005859375
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 594
score: 99.2541732788086
patch: switch ( parent . get CaMeL Type ( ) ) { value = parent {
rank: 594
score: 99.11714228877315
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Char CaMeL Sequence . EMPTY :
rank: 594
score: 99.11280036695075
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 595
score: 99.38337890625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING : is CaMeL Set = true ;
rank: 595
score: 99.30659816576087
patch: switch ( parent . get CaMeL Type ( ) ) { else { ++ parent . get CaMeL Type ( ) {
rank: 595
score: 99.2786865234375
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) ) {
rank: 595
score: 99.27589818050987
patch: type = Name . Type ; } switch ( n . get CaMeL Type ( ) ) {
rank: 595
score: 99.25388881138393
patch: switch ( parent . get CaMeL Instance CaMeL Type ( ) ) {
rank: 595
score: 99.11622721354166
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) ) ; }
rank: 595
score: 99.1125067349138
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) , type ) ;
rank: 596
score: 99.38296363467262
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL Next ( ) )
rank: 596
score: 99.32121276855469
patch: if ( parent . get CaMeL Type ( ) == Type . INC ) {
rank: 596
score: 99.30614516314338
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . NOT )
rank: 596
score: 99.27574811662946
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; {
rank: 596
score: 99.25311279296875
patch: switch ( parent . get CaMeL Type $NUMBER$ Type ( ) ) {
rank: 596
score: 99.11609280493951
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . parent . get CaMeL Type ( ) :
rank: 596
score: 99.11240931919643
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) . length ( ) == 0 ) {
rank: 597
score: 99.39125413161058
patch: switch ( n . get CaMeL Type ( ) ) { }
rank: 597
score: 99.3828761888587
patch: if ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) == Token . SETTER _ DEF )
rank: 597
score: 99.32098388671875
patch: if ( parent . get CaMeL Type ( ) == Token . constructor ) {
rank: 597
score: 99.27840169270833
patch: if ( parent . get CaMeL Type ( ) != Token . VAR ) is CaMeL Set = true ;
rank: 597
score: 99.27572195870536
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Name ( parent ) ;
rank: 597
score: 99.25299431295956
patch: switch ( parent . get CaMeL Type ( ) || parent != null ) { {
rank: 597
score: 99.11590169270833
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Full CaMeL Name ( ) ) ; }
rank: 597
score: 99.11163330078125
patch: if ( parent != null && type != null ) {
rank: 598
score: 99.32182965959821
patch: if ( parent . get CaMeL Parent ( ) == null ) {
rank: 598
score: 99.32040405273438
patch: if ( parent . get CaMeL Type ( ) == Type . ASSIGN ) {
rank: 598
score: 99.3057861328125
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Property CaMeL Type ( ) ;
rank: 598
score: 99.27824571397569
patch: if ( parent . get CaMeL Type ( ) != Name . Type . GETPROP ) {
rank: 598
score: 99.25282389322916
patch: switch ( parent . get CaMeL Type ( ) ) { { $NUMBER$ :
rank: 598
score: 99.1154541015625
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Name ( ) ) ; }
rank: 598
score: 99.11090087890625
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL String ( ) ) ; }
rank: 599
score: 99.38267074092742
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL Type ( ) . is CaMeL Function CaMeL
rank: 599
score: 99.32089233398438
patch: switch ( get CaMeL Type ( n ) ) { case Token . VAR :
rank: 599
score: 99.30570475260417
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Value CaMeL Type ( ) {
rank: 599
score: 99.27744838169643
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; try {
rank: 599
score: 99.2756768588362
patch: type = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 599
score: 99.251953125
patch: switch ( type , parent . get CaMeL Type ( ) ) {
rank: 599
score: 99.11522595635776
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL String CaMeL Value ( ) ) ;
rank: 599
score: 99.11090087890625
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . is CaMeL String ( ) ) {
rank: 600
score: 99.39069567228618
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case Token . VAR ;
rank: 600
score: 99.38265625
patch: if ( parent . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 600
score: 99.31893157958984
patch: if ( parent . get CaMeL Type ( ) == Scope . ASSIGN ) {
rank: 600
score: 99.30548095703125
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Class CaMeL Name ( ) {
rank: 600
score: 99.27731759207589
patch: switch ( parent == n . get CaMeL Type ( ) ) {
rank: 600
score: 99.27564697265625
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ) return ; default :
rank: 600
score: 99.25187413832721
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . TRUE :
rank: 600
score: 99.11489762931035
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) ) )
rank: 600
score: 99.11038523706897
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; return ;
rank: 601
score: 99.38264069733796
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) , scope ) ; }
rank: 601
score: 99.31964111328125
patch: type = Name . Type . OTHER ; }
rank: 601
score: 99.31883021763393
patch: is CaMeL Set = true ;
rank: 601
score: 99.3054729959239
patch: switch ( parent . get CaMeL Type ( ) ) { start ( parent . get CaMeL Type ( ) ) {
rank: 601
score: 99.27560109105603
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . add CaMeL Node ( parent ) ; }
rank: 601
score: 99.25174713134766
patch: switch ( parent . get CaMeL Type ( ) ) { * ? default :
rank: 601
score: 99.11266217912946
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ; }
rank: 601
score: 99.1085693359375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL String ( ) ) {
rank: 602
score: 99.39060345818015
patch: for ( Token n : parent . get CaMeL First CaMeL Child ( ) ) {
rank: 602
score: 99.382421875
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 602
score: 99.31941223144531
patch: if ( parent . get CaMeL Type ( ) != Token . STRING ) {
rank: 602
score: 99.30536358173077
patch: switch ( parent . get CaMeL Type ( ) ) { new
rank: 602
score: 99.27705891927083
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . :
rank: 602
score: 99.2755126953125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . STAR :
rank: 602
score: 99.25160047743056
patch: if ( parent != ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 602
score: 99.11236165364583
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 603
score: 99.39037367876838
patch: type = Name . Type . SET ; type = Name . Type . OTHER ;
rank: 603
score: 99.31863403320312
patch: type = Name . Type . SET ; } is CaMeL Set = true ;
rank: 603
score: 99.3170878092448
patch: switch ( n . get CaMeL Name ( ) ) {
rank: 603
score: 99.30536247702206
patch: switch ( parent . get CaMeL Type ( ) ) { { * * * /
rank: 603
score: 99.11148807920259
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , $STRING$ ) ;
rank: 603
score: 99.1056396484375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL String ( ) ) {
rank: 604
score: 99.39005824497768
patch: switch ( name . get CaMeL First CaMeL Child ( ) ) {
rank: 604
score: 99.31777954101562
patch: if ( parent != null ) { type = Name . Type . OTHER ;
rank: 604
score: 99.30533040364584
patch: switch ( parent . get CaMeL Type ( ) ) { > null ;
rank: 604
score: 99.27541588092673
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( parent ) ; }
rank: 604
score: 99.11128743489583
patch: String name = parent . get CaMeL Name ( ) ;
rank: 604
score: 99.1055908203125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Empty ( ) ) {
rank: 605
score: 99.381875
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) == Token . GETTER _ DEF )
rank: 605
score: 99.27678366268383
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . STRING :
rank: 605
score: 99.27498081752232
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( parent ) ;
rank: 605
score: 99.11123046875
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parameter CaMeL Type ( ) ) ; }
rank: 605
score: 99.10536517518939
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 606
score: 99.30517578125
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . type :
rank: 606
score: 99.27582864200367
patch: switch ( parent . to CaMeL String ( ) ) { case Token . VAR :
rank: 606
score: 99.274853515625
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) = parent ; }
rank: 606
score: 99.25010770909927
patch: switch ( parent . get CaMeL Type ( ) ) { next ( parent ) ;
rank: 606
score: 99.11100551060268
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Source CaMeL Name ( ) )
rank: 606
score: 99.10365397135416
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL String CaMeL Value ( ) ) :
rank: 607
score: 99.38845985814145
patch: is CaMeL Set = true ; type = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 607
score: 99.31639811197917
patch: if ( parent . get CaMeL Type ( ) != n ) { {
rank: 607
score: 99.30507986886161
patch: if ( parent . get CaMeL Type ( ) > 0 ) {
rank: 607
score: 99.27544294084821
patch: switch ( node . get CaMeL First CaMeL Child ( ) ) {
rank: 607
score: 99.25006975446429
patch: switch ( parent . get CaMeL Property CaMeL Type ( ) ) {
rank: 607
score: 99.10814557756696
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) . equals ( Type . STRING _ KEY ) )
rank: 607
score: 99.10348307291666
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . get CaMeL Name ( ) != null ) {
rank: 608
score: 99.38169282058189
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) . get CaMeL Child CaMeL
rank: 608
score: 99.31529947916667
patch: if ( parent . get CaMeL First CaMeL Child ( ) == parent )
rank: 608
score: 99.31281389508929
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent ) ;
rank: 608
score: 99.30488918138587
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Function CaMeL Name ( ) ;
rank: 608
score: 99.27438038793103
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ) ; }
rank: 608
score: 99.24987030029297
patch: switch ( parent . get CaMeL Type ( ) ) { TRUE = null {
rank: 608
score: 99.10294596354167
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type CaMeL Name ( ) ) ; }
rank: 609
score: 99.31360626220703
patch: type = Name . Type . FUNCTION ; break ; case Token . ASSIGN :
rank: 609
score: 99.30930001395089
patch: if ( parent . get CaMeL Name ( ) == null ) {
rank: 609
score: 99.30470784505208
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type CaMeL Name ( ) {
rank: 609
score: 99.27507672991071
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; switch (
rank: 609
score: 99.27419704861111
patch: type = parent . get CaMeL Class ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 609
score: 99.24955240885417
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) break ;
rank: 609
score: 99.10588968211206
patch: int index = parent . get CaMeL Type ( ) . index CaMeL Of ( $STRING$ ) ; parent . set CaMeL Type ( index ) ; }
rank: 609
score: 99.10222981770833
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) ) {
rank: 610
score: 99.38163117439517
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) . is CaMeL Function ( ) )
rank: 610
score: 99.31354522705078
patch: if ( parent . get CaMeL First CaMeL Child ( ) == name ) {
rank: 610
score: 99.3080322265625
patch: if ( ! n . get CaMeL First CaMeL Child ( ) ) {
rank: 610
score: 99.3046875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Property CaMeL Type ( ) {
rank: 610
score: 99.27506801060268
patch: int n = n . get CaMeL First CaMeL Child ( ) ;
rank: 610
score: 99.27292887369792
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Token . NULL ) {
rank: 610
score: 99.24943991268383
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . NONE :
rank: 610
score: 99.10572972790948
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) ) )
rank: 610
score: 99.10210418701172
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Type ( ) ) {
rank: 611
score: 99.31189778645833
patch: if ( n . get CaMeL First CaMeL Child ( ) != null )
rank: 611
score: 99.30696323939732
patch: if ( n . get CaMeL String ( ) == null ) {
rank: 611
score: 99.30462091619319
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Value ( ) ;
rank: 611
score: 99.27290613511029
patch: switch ( n . get CaMeL Type ( ) ) { case Token . EOC :
rank: 611
score: 99.2494140625
patch: parent = ( Type ) parent . get CaMeL Type ( ) ; }
rank: 611
score: 99.10482051454741
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Type ( ) ) )
rank: 611
score: 99.10140228271484
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 612
score: 99.31066080729167
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { ;
rank: 612
score: 99.30449567522321
patch: if ( name . is CaMeL Object CaMeL Lit ( ) ) {
rank: 612
score: 99.30432659646739
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Variable CaMeL Name ( ) ;
rank: 612
score: 99.27264614762932
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 612
score: 99.24930245535714
patch: switch ( parent . get CaMeL Type ( ) || false ) {
rank: 612
score: 99.10470482610887
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 612
score: 99.10115792410714
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 613
score: 99.38114711216518
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 613
score: 99.3105697631836
patch: if ( parent != null ) { type = Name . Type . FUNCTION ;
rank: 613
score: 99.30394789751838
patch: switch ( parent . get CaMeL Type ( ) ) { else { { * /
rank: 613
score: 99.30108235677083
patch: if ( parent . get CaMeL Type ( ) != Token . GETPROP )
rank: 613
score: 99.2742919921875
patch: if ( parent . get CaMeL Type ( ) == Token . VAR ;
rank: 613
score: 99.10380336216518
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Symbol ( ) ) ; }
rank: 613
score: 99.10023600260416
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Empty ( ) ) {
rank: 614
score: 99.381025390625
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . FUNCTION :
rank: 614
score: 99.3099136352539
patch: switch ( name ) { case Token . INC : case Token . DEC :
rank: 614
score: 99.3038330078125
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Class ( ) {
rank: 614
score: 99.299755859375
patch: switch ( n . get CaMeL Type ( ) ) { default : {
rank: 614
score: 99.27176219019397
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; break ;
rank: 614
score: 99.1034423828125
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ; }
rank: 614
score: 99.09961751302083
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class CaMeL Name ( ) ) ; }
rank: 615
score: 99.3826904296875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n == n ) {
rank: 615
score: 99.38099888392857
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 615
score: 99.30802154541016
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { / /
rank: 615
score: 99.30381081321023
patch: switch ( parent . get CaMeL Type ( ) ) { switch = parent . get CaMeL Type ( ) {
rank: 615
score: 99.29847935267857
patch: if ( ! is CaMeL Object CaMeL Lit ( parent ) ) {
rank: 615
score: 99.10173929148706
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Full CaMeL Name ( ) ) )
rank: 615
score: 99.09935709635417
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL String CaMeL Value ( ) ) ; }
rank: 616
score: 99.38163248697917
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { }
rank: 616
score: 99.38084362399194
patch: if ( n . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 616
score: 99.30450032552083
patch: if ( get CaMeL Value CaMeL Type ( n ) == null ) {
rank: 616
score: 99.3037971047794
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . exit :
rank: 616
score: 99.29803059895833
patch: if ( ! parent . get CaMeL First CaMeL Child ( ) ) {
rank: 616
score: 99.2739490327381
patch: if ( parent . get CaMeL Parent ( ) == n . get CaMeL First CaMeL Child ( ) )
rank: 616
score: 99.27125767299107
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . )
rank: 616
score: 99.10139711441532
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( ) )
rank: 616
score: 99.09922790527344
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Array CaMeL Type ( ) ) {
rank: 617
score: 99.38159897748162
patch: switch ( scope . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 617
score: 99.38042340959821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null )
rank: 617
score: 99.30362955729167
patch: switch ( parent . get CaMeL Type ( ) ) { / / :
rank: 617
score: 99.27382405598958
patch: int n = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 617
score: 99.27118972252156
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; return ;
rank: 617
score: 99.24691951976104
patch: switch ( parent . get CaMeL Type ( ) ) { { case Node . )
rank: 617
score: 99.1012954711914
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 617
score: 99.09820346174568
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) {
rank: 618
score: 99.3798828125
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == Token . STRING _ KEY )
rank: 618
score: 99.30419921875
patch: type = Name . Type . SET ;
rank: 618
score: 99.29628208705357
patch: name = n . get CaMeL First CaMeL Child ( ) ; }
rank: 618
score: 99.2734905740489
patch: if ( parent . get CaMeL Type ( ) == Token . GETTER _ DEF ) is CaMeL Set = true ;
rank: 618
score: 99.27112755408653
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 618
score: 99.09995814732143
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals ( $STRING$ ) )
rank: 619
score: 99.38052707248264
patch: handle CaMeL Set CaMeL From CaMeL Global ( module , scope , parent , name ) ;
rank: 619
score: 99.30358072916667
patch: if ( get CaMeL Value CaMeL Type ( n ) == n ) {
rank: 619
score: 99.30311494715073
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . TYPE )
rank: 619
score: 99.27103515625
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; break ; }
rank: 619
score: 99.244775390625
patch: switch ( parent . get CaMeL Type ( ) ) { case Class )
rank: 619
score: 99.09992980957031
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 619
score: 99.09762257543103
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) . to CaMeL String ( ) ; }
rank: 620
score: 99.3027980638587
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Display CaMeL Name ( ) ;
rank: 620
score: 99.29388834635417
patch: if ( ! module . is CaMeL Object CaMeL Lit ( ) ) {
rank: 620
score: 99.27323986235119
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) type = Name . Type . FUNCTION ;
rank: 620
score: 99.27097865513393
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; {
rank: 620
score: 99.24468587239583
patch: super . { switch ( parent . get CaMeL Type ( ) ) {
rank: 620
score: 99.09971039870689
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; } }
rank: 620
score: 99.09695750269397
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; return ;
rank: 621
score: 99.379287109375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . GETTER _ DEF :
rank: 621
score: 99.37891343060662
patch: type = Name . Type . GET ; type = Name . Type . OTHER ;
rank: 621
score: 99.30275560461956
patch: switch ( parent . get CaMeL Type ( ) ) { else { -- parent . get CaMeL Type ( ) {
rank: 621
score: 99.30105356069711
patch: if ( parent . get CaMeL Parent ( ) == n )
rank: 621
score: 99.24411349826389
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) return {
rank: 621
score: 99.09930630387932
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) )
rank: 621
score: 99.09616615032327
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; } }
rank: 622
score: 99.37918976814517
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) == null )
rank: 622
score: 99.29958871694711
patch: if ( parent != n . get CaMeL Type ( ) )
rank: 622
score: 99.2927997295673
patch: type = n . get CaMeL First CaMeL Child ( ) ;
rank: 622
score: 99.27252807617188
patch: String name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 622
score: 99.26971435546875
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 622
score: 99.2437744140625
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . ) break {
rank: 622
score: 99.09897797683189
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ; break ;
rank: 622
score: 99.09590657552083
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Local ( ) ) {
rank: 623
score: 99.3790625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { type = Name . Type . OTHER ;
rank: 623
score: 99.3024265455163
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent ( ) ; }
rank: 623
score: 99.29896647135416
patch: if ( parent . get CaMeL Type ( ) == Type . VAR )
rank: 623
score: 99.29156087239583
patch: is CaMeL Set = false ; type = Name . Type . SET ;
rank: 623
score: 99.26964393028847
patch: type = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 623
score: 99.24374825613839
patch: switch ( parent . get CaMeL Type ( ) || parent ) {
rank: 623
score: 99.09853830645162
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ; break ;
rank: 623
score: 99.09532165527344
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Type ( ) ) {
rank: 624
score: 99.37883649553571
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 624
score: 99.30108642578125
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parameter CaMeL Type ( ) {
rank: 624
score: 99.29769694010416
patch: if ( parent . get CaMeL Type ( ) != Token . ASSIGN )
rank: 624
score: 99.29060872395833
patch: if ( parent . is CaMeL Object CaMeL Lit ( ) ) return ;
rank: 624
score: 99.27189835258152
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = false ;
rank: 624
score: 99.269580078125
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 624
score: 99.24352213541667
patch: / * { switch ( parent . get CaMeL Type ( ) ) {
rank: 624
score: 99.09833984375
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . starts CaMeL With ( $STRING$ ) )
rank: 624
score: 99.09500122070312
patch: if ( type != null ) {
rank: 625
score: 99.29366361177884
patch: if ( parent . get CaMeL Type ( ) == null )
rank: 625
score: 99.289892578125
patch: switch ( parent . get CaMeL Type ( ) ) { default : }
rank: 625
score: 99.24261067708333
patch: switch ( parent . get CaMeL Type ( ) ) { case ) )
rank: 625
score: 99.0982666015625
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ) {
rank: 625
score: 99.09490559895833
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; } else {
rank: 626
score: 99.378759765625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 626
score: 99.30091441761364
patch: switch ( ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) ) {
rank: 626
score: 99.2930575284091
patch: switch ( name ) { case Token . VAR :
rank: 626
score: 99.2715374490489
patch: if ( parent . get CaMeL Type ( ) != Name . Type . OTHER ) is CaMeL Set = true ;
rank: 626
score: 99.26952063519022
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . NULL :
rank: 626
score: 99.09805192618535
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) return ;
rank: 626
score: 99.0939608487216
patch: if ( parent . get CaMeL Type ( ) )
rank: 627
score: 99.375732421875
patch: if ( n . get CaMeL First CaMeL Child ( ) != null ) {
rank: 627
score: 99.30054820667614
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Name ( ) ;
rank: 627
score: 99.26941636029412
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . LABEL :
rank: 627
score: 99.24060776654412
patch: switch ( parent . get CaMeL Type ( ) ) { case Node . ) /
rank: 627
score: 99.09778771033653
patch: switch ( n . get CaMeL Type ( ) ) { {
rank: 627
score: 99.09374212449596
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 628
score: 99.30043723366477
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) . {
rank: 628
score: 99.26921477141204
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 628
score: 99.2404541015625
patch: if ( switch ( parent . get CaMeL Type ( ) ) ) {
rank: 628
score: 99.09763941271552
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) )
rank: 628
score: 99.09329427083334
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Local ( ) ) {
rank: 629
score: 99.3777734375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 629
score: 99.37469482421875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == type ) {
rank: 629
score: 99.3003460427989
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parent ( ) { else
rank: 629
score: 99.2880126953125
patch: while ( parent . get CaMeL First CaMeL Child ( ) == null )
rank: 629
score: 99.284912109375
patch: if ( parent . get CaMeL Type ( ) != Token . NAME )
rank: 629
score: 99.26917114257813
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case )
rank: 629
score: 99.23970301011029
patch: switch ( parent != null || parent . get CaMeL Type ( ) != ) {
rank: 629
score: 99.09759114583333
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; } return ;
rank: 629
score: 99.09256297144397
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) ) ; return ;
rank: 630
score: 99.37762920673077
patch: switch ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) { case Token . STRING _ KEY :
rank: 630
score: 99.2998577615489
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Class CaMeL Name ( ) ;
rank: 630
score: 99.28738606770834
patch: if ( parent != null || parent . is CaMeL Function ( ) )
rank: 630
score: 99.28463979867789
patch: set = n . get CaMeL First CaMeL Child ( ) ;
rank: 630
score: 99.26880944293478
patch: name = parent . get CaMeL Name ( ) ; parent = parent . get CaMeL Parent CaMeL Scope ( ) ;
rank: 630
score: 99.23949477251838
patch: switch ( parent . get CaMeL Type ( ) ) { case Location . ) *
rank: 630
score: 99.09691510881696
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Type ( ) )
rank: 630
score: 99.09148615056819
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 631
score: 99.37722342354911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 631
score: 99.29979451497395
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Type CaMeL Name ( ) {
rank: 631
score: 99.287158203125
patch: switch ( parent . get CaMeL Type ( ) ) { case prefix :
rank: 631
score: 99.27065894717262
patch: String name ; name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 631
score: 99.26871984145221
patch: switch ( n . get CaMeL Type ( ) ) { case Token . READ :
rank: 631
score: 99.23753255208334
patch: switch ( parent . get CaMeL Type ( ) ) { else return ;
rank: 631
score: 99.09690699084052
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . STRING _ KEY :
rank: 631
score: 99.09142303466797
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 632
score: 99.37711879185268
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 632
score: 99.29969371448864
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Name ( ) != null ) {
rank: 632
score: 99.28194173177083
patch: if ( n . get CaMeL Type ( ) == Token . FUNCTION )
rank: 632
score: 99.26802734375
patch: switch ( n . get CaMeL Type ( ) && n . get CaMeL Type ( ) == Token . STRING _ KEY )
rank: 632
score: 99.23749138327206
patch: switch ( parent . get CaMeL Type ( ) ) { { * / return ;
rank: 632
score: 99.09662917564656
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; continue ;
rank: 632
score: 99.09107232862904
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals ( $STRING$ ) ) {
rank: 633
score: 99.376796875
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . NAME :
rank: 633
score: 99.3734130859375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( scope ) ;
rank: 633
score: 99.28447614397321
patch: if ( get CaMeL Value CaMeL Type ( n ) == n )
rank: 633
score: 99.281787109375
patch: if ( Node CaMeL Util . is CaMeL Function ( parent ) ) {
rank: 633
score: 99.2702404203869
patch: name = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ; }
rank: 633
score: 99.26800537109375
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( )
rank: 633
score: 99.09590366908482
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , name )
rank: 633
score: 99.0906005859375
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 634
score: 99.2837158203125
patch: if ( get CaMeL Value CaMeL Type ( n ) != null ) {
rank: 634
score: 99.28024631076389
patch: if ( ! is CaMeL Set ) {
rank: 634
score: 99.26772966056035
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; return ;
rank: 634
score: 99.23703182444854
patch: parent . get CaMeL Type ( ) { parent . get CaMeL Type ( ) {
rank: 634
score: 99.0957275390625
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 634
score: 99.09022013346355
patch: name = parent . get CaMeL Type ( ) ; }
rank: 635
score: 99.37649100167411
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) )
rank: 635
score: 99.372802734375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . INC ;
rank: 635
score: 99.29879940257354
patch: switch ( parent . get CaMeL Type ( ) ) { / / * / /
rank: 635
score: 99.28237479073661
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n
rank: 635
score: 99.27862955729167
patch: is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 635
score: 99.26767073006465
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Name ( name ) ; {
rank: 635
score: 99.23516438802083
patch: switch ( parent . get CaMeL Type ( ) ) { case ] ;
rank: 635
score: 99.094970703125
patch: final String name = parent . get CaMeL Name ( ) ;
rank: 635
score: 99.08865672144397
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; * /
rank: 636
score: 99.37643299932066
patch: switch ( n . get CaMeL Type ( ) ) { case Token . ASSIGN : is CaMeL Set = true ;
rank: 636
score: 99.2987569173177
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Type CaMeL Name ( ) {
rank: 636
score: 99.2821796123798
patch: switch ( parent . is CaMeL Function CaMeL Expression ( ) )
rank: 636
score: 99.27762276785714
patch: if ( node . is CaMeL Object CaMeL Lit ( ) ) {
rank: 636
score: 99.26872702205883
patch: switch ( root . get CaMeL Type ( ) ) { case Token . VAR :
rank: 636
score: 99.267626953125
patch: type = ( Name ) parent . get CaMeL Parent ( ) ; }
rank: 636
score: 99.235009765625
patch: switch ( parent . get CaMeL Type ( ) || parent != ) {
rank: 636
score: 99.0949286099138
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ; break ;
rank: 636
score: 99.08831155711206
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Type ( ) ) * /
rank: 637
score: 99.37627618963069
patch: switch ( Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) ) { case Token . VAR :
rank: 637
score: 99.29847783627717
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Type ( ) ; }
rank: 637
score: 99.28078049879808
patch: if ( parent . get CaMeL Parent ( ) != null )
rank: 637
score: 99.27625325520833
patch: if ( parent . get CaMeL Type ( ) == Token . Definition )
rank: 637
score: 99.267412109375
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; break ;
rank: 637
score: 99.23492838541667
patch: switch parent . switch ( parent . get CaMeL Type ( ) ) {
rank: 637
score: 99.09437662760416
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . starts CaMeL With ( $STRING$ ) )
rank: 637
score: 99.08820343017578
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 638
score: 99.27989501953125
patch: type = Name . Type . SET ; }
rank: 638
score: 99.27537184495192
patch: switch ( n . get CaMeL Type ( ) ) return ;
rank: 638
score: 99.26710792824075
patch: name = parent . get CaMeL Name ( ) + $STRING$ + parent . get CaMeL Type ( ) . get CaMeL Name ( ) ;
rank: 638
score: 99.23473307291667
patch: switch ( parent . get CaMeL Type ( ) ) { { finally {
rank: 638
score: 99.09341325431035
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Source CaMeL File ( ) ) ;
rank: 638
score: 99.08814290364583
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) != null )
rank: 639
score: 99.37587418094758
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 639
score: 99.2984286221591
patch: switch ( parent . get CaMeL Type ( ) ) { null , parent . get CaMeL Type ( ) {
rank: 639
score: 99.2775370279948
patch: switch ( get CaMeL Value CaMeL Type ( n ) )
rank: 639
score: 99.27525227864584
patch: if ( n . get CaMeL Type ( ) == Token . ASSIGN )
rank: 639
score: 99.26705078125
patch: switch ( n . get CaMeL Type ( ) && n . get CaMeL Type ( ) == Type . STRING _ KEY )
rank: 639
score: 99.2339226217831
patch: switch ( parent . get CaMeL Type ( ) && type != Type . ) {
rank: 639
score: 99.09239095052084
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Source CaMeL Name ( ) ) ; }
rank: 639
score: 99.08684671336206
patch: switch ( parent . get CaMeL Type ( ) ? parent . get CaMeL Type ( ) : parent . get CaMeL Type ( ) ) { }
rank: 640
score: 99.3757793719952
patch: if ( get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) == Token . GETTER _ DEF )
rank: 640
score: 99.29816228693181
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Name ( ) {
rank: 640
score: 99.27516276041666
patch: if ( parent . get CaMeL Type ( ) == Token . GET )
rank: 640
score: 99.2745869954427
patch: switch ( parent . get CaMeL Type ( ) ) :
rank: 640
score: 99.09226831896552
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( ) )
rank: 641
score: 99.3757087953629
patch: switch ( parent . get CaMeL Type ( ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Parent ( ) ) ) {
rank: 641
score: 99.2981289950284
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Message ( ) {
rank: 641
score: 99.275048828125
patch: switch ( parent . get CaMeL Type ( ) ) { case 0 :
rank: 641
score: 99.27428260216347
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 641
score: 99.26688929966518
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL All ( parent ) ;
rank: 641
score: 99.26568603515625
patch: int type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 641
score: 99.09120757004311
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Name ( ) ) )
rank: 641
score: 99.08631184895833
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . set CaMeL Type ( parent . get CaMeL Type ( ) ) ; } else {
rank: 642
score: 99.37538364955357
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) != null ) {
rank: 642
score: 99.29782284007354
patch: switch ( parent . get CaMeL Type ( ) ) { / ? / * /
rank: 642
score: 99.27477088341347
patch: if ( parent . get CaMeL Parent ( ) == null )
rank: 642
score: 99.27405598958333
patch: is CaMeL Set = n . get CaMeL First CaMeL Child ( ) ;
rank: 642
score: 99.266845703125
patch: type = parent . get CaMeL Name ( ) ;
rank: 642
score: 99.26561482747395
patch: String name = n . get CaMeL String ( ) ;
rank: 642
score: 99.09071928879311
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , type ) ;
rank: 642
score: 99.08335774739584
patch: switch ( parent . get CaMeL Type ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Type CaMeL Name ( ) ) :
rank: 643
score: 99.37533967391305
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) ) { return ; }
rank: 643
score: 99.29767400568181
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Name ( ) {
rank: 643
score: 99.27338053385417
patch: type = Name . Type . OTHER ; type = Name . GET ;
rank: 643
score: 99.27301897321429
patch: if ( ! parent . is CaMeL Object CaMeL Lit ( ) )
rank: 643
score: 99.26662973257211
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( parent . get CaMeL Type CaMeL Name ( ) )
rank: 643
score: 99.2648566750919
patch: switch ( parent . get CaMeL Type ( ) ) { case Name . GETPROP :
rank: 643
score: 99.08915201822917
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , name ) ; }
rank: 643
score: 99.0831527709961
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 644
score: 99.3751732610887
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) || parent . get CaMeL Type ( ) . get CaMeL Child CaMeL
rank: 644
score: 99.27293178013393
patch: switch ( ! is CaMeL Set ) { case Token . VAR :
rank: 644
score: 99.27249348958334
patch: if ( parent . get CaMeL First CaMeL Child ( ) == ) {
rank: 644
score: 99.2665234375
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Name ( ) ; break ;
rank: 644
score: 99.22718721277573
patch: parent = parent . get CaMeL Type ( ) ; } switch ( parent ) {
rank: 644
score: 99.08883568548387
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; break ;
rank: 644
score: 99.08245849609375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) != null ) {
rank: 645
score: 99.37462565104167
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL First CaMeL Child ( ) ) ; break ; default :
rank: 645
score: 99.2972745028409
patch: switch ( parent . get CaMeL Type ( ) ) { 0 = parent . get CaMeL Type ( ) {
rank: 645
score: 99.27247971754808
patch: if ( parent . is CaMeL Assignment CaMeL Op ( ) )
rank: 645
score: 99.27063860212054
patch: switch ( parent . get CaMeL Type ( ) ) { default ;
rank: 645
score: 99.26620370370371
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; break ;
rank: 645
score: 99.26433249080883
patch: switch ( node . get CaMeL Type ( ) ) { case Token . INC :
rank: 645
score: 99.08874090786638
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) , name ) ;
rank: 645
score: 99.08233839465726
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 646
score: 99.3677619485294
patch: switch ( scope . get CaMeL Type ( ) ) { case Token . NAME :
rank: 646
score: 99.29698689778645
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Property CaMeL Type ( ) {
rank: 646
score: 99.26576450892857
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) || name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 646
score: 99.22606482872597
patch: switch ( parent . get CaMeL Type ( 1 ) ) {
rank: 646
score: 99.08188161542338
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 647
score: 99.37413369455645
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) . get CaMeL Object CaMeL Lit CaMeL
rank: 647
score: 99.271533203125
patch: if ( parent == n . get CaMeL First CaMeL Child ( ) )
rank: 647
score: 99.26534718480603
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Type ( ) ;
rank: 647
score: 99.08826946390086
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , false ) ;
rank: 647
score: 99.08183288574219
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Name ( ) != null ) {
rank: 648
score: 99.36714441636029
patch: type = Name . Type . FUNCTION ; type = Name . Type . OTHER ;
rank: 648
score: 99.29653098366477
patch: switch ( parent . get CaMeL Type ( ) ) { type = parent . get CaMeL Type ( ) ;
rank: 648
score: 99.26526896158855
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) { case Token . )
rank: 648
score: 99.22519356863839
patch: switch ( parent . get CaMeL Type ( ) . parent ) {
rank: 648
score: 99.087451171875
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Value CaMeL Type ( ) ) ; }
rank: 648
score: 99.08176676432292
patch: if ( parent . has CaMeL Type ( ) ) {
rank: 649
score: 99.29563306725544
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 649
score: 99.2712158203125
patch: type = Name . Type . FUNCTION ; }
rank: 649
score: 99.224609375
patch: switch ( parent . get CaMeL Type ( ) && null ) {
rank: 649
score: 99.08728421118951
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . starts CaMeL With ( $STRING$ ) ) {
rank: 649
score: 99.07921600341797
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 650
score: 99.27058919270833
patch: switch ( parent . get CaMeL Type ( ) ) { case $STRING$ :
rank: 650
score: 99.2645975748698
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 650
score: 99.22392578125
patch: switch ( parent . get CaMeL Type ( ) ) { default * /
rank: 650
score: 99.08682987607759
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Char CaMeL Sequence . STRING _ KEY :
rank: 650
score: 99.0791259765625
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type CaMeL Name ( ) ) ; }
rank: 651
score: 99.36571451822917
patch: is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 651
score: 99.2952190896739
patch: switch ( parent . get CaMeL Type ( ) ) { parent . set CaMeL Type ( Type . class ) ;
rank: 651
score: 99.26758626302083
patch: if ( get CaMeL Value CaMeL Type ( n ) != n ) {
rank: 651
score: 99.26457609953704
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class ( ) ;
rank: 651
score: 99.2626708984375
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) ) {
rank: 651
score: 99.22344098772321
patch: parent { switch ( parent . get CaMeL Type ( ) ) {
rank: 651
score: 99.08660257273706
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Source CaMeL Name ( ) ) )
rank: 651
score: 99.07911783854166
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != type ) {
rank: 652
score: 99.37294921875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 652
score: 99.29497736150569
patch: switch ( parent . get CaMeL Type ( ) ) { key = parent . get CaMeL Name ( ) {
rank: 652
score: 99.26748221261161
patch: if ( get CaMeL Value CaMeL Type ( n ) == null )
rank: 652
score: 99.2645263671875
patch: if ( parent . get CaMeL Type ( ) instanceof Name ) {
rank: 652
score: 99.22269984654018
patch: switch ( parent . get CaMeL Type ( ) || true ) {
rank: 652
score: 99.08658040364584
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Type ( ) ) ; }
rank: 652
score: 99.07858276367188
patch: if ( parent . is CaMeL Local ( ) ) {
rank: 653
score: 99.37290445963542
patch: switch ( n . get CaMeL Type ( ) || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 653
score: 99.29490064538044
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Parent ( ) ;
rank: 653
score: 99.267138671875
patch: if ( parent . get CaMeL Type ( ) != Token . STRING )
rank: 653
score: 99.26401154891305
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . FUNCTION )
rank: 653
score: 99.26234502377717
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . STRING _ KEY : return ;
rank: 653
score: 99.08588698814656
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break )
rank: 653
score: 99.07818603515625
patch: switch ( parent . get CaMeL Value ( ) ) {
rank: 654
score: 99.3727496603261
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . STRING :
rank: 654
score: 99.36218979779412
patch: is CaMeL Set = false ; type = parent . get CaMeL Type ( ) ;
rank: 654
score: 99.294677734375
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type ( ) ) {
rank: 654
score: 99.26394127155173
patch: name = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 654
score: 99.26198904854911
patch: int name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 654
score: 99.08571861530173
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Type ( ) ) )
rank: 654
score: 99.07754516601562
patch: if ( parent . is CaMeL Array ( ) ) {
rank: 655
score: 99.2945556640625
patch: parent = parent . get CaMeL Type ( ) ; } else {
rank: 655
score: 99.265380859375
patch: if ( get CaMeL Value CaMeL Type ( n ) != null )
rank: 655
score: 99.26389857700893
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 655
score: 99.26252092633929
patch: if ( parent . get CaMeL Value ( ) == n ) {
rank: 655
score: 99.076904296875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) ) ; } else {
rank: 656
score: 99.372509765625
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . NAME : is CaMeL Set = true ;
rank: 656
score: 99.26332158627717
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . EMPTY )
rank: 656
score: 99.26247151692708
patch: name = get CaMeL Value CaMeL Type ( n ) ;
rank: 656
score: 99.2595684344952
patch: switch ( get CaMeL Value CaMeL Type ( n ) ) {
rank: 656
score: 99.21873372395834
patch: switch ( parent . get CaMeL Type ( ) ) { case ) *
rank: 656
score: 99.08487675107759
patch: switch ( parent . get CaMeL Type ( ) && get CaMeL Type ( parent . get CaMeL Class CaMeL Name ( ) ) != null ) {
rank: 656
score: 99.07686491935483
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } }
rank: 657
score: 99.37245621219758
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; case Token . GETTER _ DEF :
rank: 657
score: 99.35918830422794
patch: is CaMeL Set = true ; type = parent . get CaMeL Next ( ) ;
rank: 657
score: 99.29297892252605
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 657
score: 99.26330987338362
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Id ( ) ;
rank: 657
score: 99.21713256835938
patch: parent = get CaMeL Type ( parent ) ;
rank: 657
score: 99.0847919170673
patch: switch ( type . get CaMeL Type CaMeL Name ( ) )
rank: 657
score: 99.07554183467742
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { parent . get CaMeL String CaMeL Value ( ) ;
rank: 658
score: 99.29274204799107
patch: switch ( parent . get CaMeL Type ( ) ) { break {
rank: 658
score: 99.26235856681035
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . { }
rank: 658
score: 99.25998942057292
patch: String name = parent . get CaMeL String ( ) ;
rank: 658
score: 99.25987830528847
patch: parent = n . get CaMeL First CaMeL Child ( ) ;
rank: 658
score: 99.25261579241071
patch: if ( parent . get CaMeL Type ( ) instanceof Token ) {
rank: 658
score: 99.08473363415948
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parameter CaMeL Type ( ) ) )
rank: 658
score: 99.07515593497983
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 659
score: 99.37199132582721
patch: switch ( get CaMeL String ( n . get CaMeL Next ( ) ) ) {
rank: 659
score: 99.29271351207386
patch: switch ( parent . get CaMeL Type ( ) ) { switch = parent . get CaMeL Type ( ) ;
rank: 659
score: 99.262294921875
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; return ; }
rank: 659
score: 99.25040980747768
patch: if ( parent . get CaMeL Parent ( ) != n ) {
rank: 659
score: 99.2153789813702
patch: parent = parent . get CaMeL Type ( ) ; break {
rank: 659
score: 99.08319854736328
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type ( ) ) { case )
rank: 659
score: 99.07473958333334
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) {
rank: 660
score: 99.37167653729838
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ; case Token . SETTER _ DEF :
rank: 660
score: 99.26211111886161
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( name ) {
rank: 660
score: 99.21486594460227
patch: parent = parent . get CaMeL Parent ( ) ;
rank: 660
score: 99.08317565917969
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type ( ) ) { case )
rank: 660
score: 99.0734619140625
patch: switch ( parent . get CaMeL Type ( ) ? parent . get CaMeL Type ( ) : parent . get CaMeL Class CaMeL Name ( ) ) {
rank: 661
score: 99.29214079483695
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Type ( ) { else
rank: 661
score: 99.26185099283855
patch: type = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 661
score: 99.25818743024554
patch: if ( n . get CaMeL Name ( ) == null ) {
rank: 661
score: 99.21422119140625
patch: switch parent . get CaMeL Type ( ) ;
rank: 661
score: 99.0828106219952
patch: type = parent . get CaMeL Type ( ) ; break ;
rank: 662
score: 99.37068684895833
patch: switch ( n . get CaMeL Type ( ) && parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 662
score: 99.29142960258152
patch: switch ( parent . get CaMeL Parent ( ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 662
score: 99.26169162326389
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 662
score: 99.2579345703125
patch: is CaMeL Set = true ; type = Name . Type ;
rank: 662
score: 99.25640869140625
patch: int type = n . get CaMeL First CaMeL Child ( ) ;
rank: 662
score: 99.24200439453125
patch: if ( get CaMeL Value CaMeL Type ( n ) != n )
rank: 662
score: 99.0827872983871
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) , name ) ;
rank: 663
score: 99.370322265625
patch: switch ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ) { case Token . VAR :
rank: 663
score: 99.35607147216797
patch: get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 663
score: 99.2914151278409
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Name ( ) ;
rank: 663
score: 99.261474609375
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 663
score: 99.25726318359375
patch: if ( n . get CaMeL Parent ( ) == n ) {
rank: 663
score: 99.25599016462054
patch: switch ( parent . has CaMeL Type ( Token . VAR ) )
rank: 663
score: 99.24077497209821
patch: if ( parent == n . get CaMeL Type ( ) ) {
rank: 663
score: 99.21385846819196
patch: for ( switch ( parent . get CaMeL Type ( ) ) {
rank: 663
score: 99.08184603987068
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , $STRING$ ) ;
rank: 663
score: 99.07117513020833
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) ) ; } else {
rank: 664
score: 99.36958984375
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . DEC :
rank: 664
score: 99.29111115828805
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) { else {
rank: 664
score: 99.26105608258929
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . add CaMeL Node ( parent ) ;
rank: 664
score: 99.25711495535714
patch: if ( scope . is CaMeL Object CaMeL Lit ( ) ) {
rank: 664
score: 99.25580240885417
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) ) {
rank: 664
score: 99.24037522536058
patch: switch ( parent . is CaMeL Assignment CaMeL Op ( ) )
rank: 664
score: 99.21250406901042
patch: switch ( info . get CaMeL Type ( ) ) {
rank: 664
score: 99.08179552801724
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , null ) ;
rank: 664
score: 99.0711669921875
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . get CaMeL Name ( ) == null ) {
rank: 665
score: 99.36950289818549
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) && parent . get CaMeL Type ( ) . get CaMeL Child CaMeL
rank: 665
score: 99.26063755580357
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . set CaMeL Name ( ) ; }
rank: 665
score: 99.2557373046875
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) )
rank: 665
score: 99.08166082974138
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; return ;
rank: 665
score: 99.0710685483871
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 666
score: 99.29085286458333
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 666
score: 99.25645228794643
patch: if ( parent != null ) { is CaMeL Set = true ;
rank: 666
score: 99.2552490234375
patch: String get CaMeL Name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 666
score: 99.08052571614583
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; } break ;
rank: 666
score: 99.07093048095703
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 667
score: 99.29062325613839
patch: switch ( parent . get CaMeL Type ( ) ) { -- )
rank: 667
score: 99.25552804129464
patch: switch ( parent . is CaMeL Assignment CaMeL Op ( ) ) {
rank: 667
score: 99.25521647135416
patch: || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 667
score: 99.2384033203125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == )
rank: 667
score: 99.21025390625
patch: parent . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 667
score: 99.08036295572917
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break ; }
rank: 667
score: 99.06993103027344
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Empty CaMeL Type ( ) ) {
rank: 668
score: 99.366630859375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . is CaMeL Object CaMeL Lit ( ) )
rank: 668
score: 99.2905910326087
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent ( ) { }
rank: 668
score: 99.26005336216518
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL Node ( name ) ;
rank: 668
score: 99.25482647235577
patch: int type = get CaMeL Value CaMeL Type ( n ) ;
rank: 668
score: 99.25429861886161
patch: if ( is CaMeL Set ) { is CaMeL Set = true ;
rank: 668
score: 99.2367831143466
patch: switch ( parent ) { case Token . VAR :
rank: 668
score: 99.20911458333333
patch: switch ( parent . get CaMeL Type ( ) && parent != ) {
rank: 668
score: 99.08016231142241
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) ) { case Char CaMeL Sequence . STRING _ KEY :
rank: 668
score: 99.0687958688447
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 669
score: 99.36578369140625
patch: if ( parent . get CaMeL Type ( ) != Token . OTHER ) {
rank: 669
score: 99.35345818014706
patch: for ( Token parent : n . get CaMeL First CaMeL Child ( ) ) {
rank: 669
score: 99.29010009765625
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parent CaMeL Node ( ) {
rank: 669
score: 99.25973745492789
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; )
rank: 669
score: 99.25467681884766
patch: int type = Name . Type . FUNCTION : Name . Type . OTHER ;
rank: 669
score: 99.25388009207589
patch: if ( n . get CaMeL Value ( ) == null ) {
rank: 669
score: 99.2362060546875
patch: if ( n . get CaMeL Type ( ) != n )
rank: 669
score: 99.20773751395089
patch: parent = switch ( parent . get CaMeL Type ( ) ) {
rank: 669
score: 99.07876481681035
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ; break )
rank: 669
score: 99.06830240885417
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . get CaMeL Name ( ) != null ) {
rank: 670
score: 99.365390625
patch: name = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ; case Token . GETPROP :
rank: 670
score: 99.28968877377717
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Class CaMeL Name ( ) ;
rank: 670
score: 99.2597186748798
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 670
score: 99.254638671875
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 670
score: 99.25165666852679
patch: switch ( parent . get CaMeL Type ( ) ) { default _
rank: 670
score: 99.20660869891827
patch: switch ( parent . get CaMeL Type Type ( ) ) {
rank: 670
score: 99.07859753024194
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type CaMeL Name ( ) )
rank: 670
score: 99.0680419921875
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) ) : return ;
rank: 671
score: 99.28956095377605
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 671
score: 99.2594793911638
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ; }
rank: 671
score: 99.25440216064453
patch: switch ( parent . get CaMeL Type ( ) . Name ( ) ) {
rank: 671
score: 99.23397488064236
patch: type = Name . Type . GET ;
rank: 671
score: 99.07842426915323
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . starts CaMeL With ( $STRING$ ) ) {
rank: 671
score: 99.06780598958333
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 672
score: 99.36461588541667
patch: switch ( parent . get CaMeL Type ( ) ) { default ; }
rank: 672
score: 99.28938802083333
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent CaMeL Node ( ) {
rank: 672
score: 99.2532207782452
patch: String name = get CaMeL Value CaMeL Type ( n ) ;
rank: 672
score: 99.24864783653847
patch: switch ( ! n . get CaMeL Type ( ) ) {
rank: 672
score: 99.2040506998698
patch: switch ( parent . get CaMeL Symbol ( ) ) {
rank: 672
score: 99.07841965247844
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) , name ) ;
rank: 672
score: 99.06673431396484
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) == null ) {
rank: 673
score: 99.3642341859879
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Assignment CaMeL Op ( ) && parent . get CaMeL Type ( ) . get CaMeL Child CaMeL
rank: 673
score: 99.35090906479779
patch: for ( String n : n . get CaMeL First CaMeL Child ( ) ) {
rank: 673
score: 99.28921110733695
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Type ( ) ; }
rank: 673
score: 99.25900704520089
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Class CaMeL Loader ( )
rank: 673
score: 99.25309244791667
patch: switch ( parent . has CaMeL Type ( Token . ASSIGN ) ) {
rank: 673
score: 99.24855259486607
patch: set = n . get CaMeL First CaMeL Child ( ) ; }
rank: 673
score: 99.22644981971153
patch: if ( parent . get CaMeL Parent ( ) != n )
rank: 673
score: 99.20347377232143
patch: switch ( parent . get CaMeL Value CaMeL Type ( ) ) {
rank: 673
score: 99.07836072198276
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , name ) )
rank: 673
score: 99.0663330078125
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type CaMeL Name ( ) ) :
rank: 674
score: 99.36293472782258
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 674
score: 99.28902180989583
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Type CaMeL Name ( ) {
rank: 674
score: 99.24671282087054
patch: if ( n . get CaMeL Value ( ) == n ) {
rank: 674
score: 99.22606549944196
patch: if ( ! parent . is CaMeL Function CaMeL Expression ( ) )
rank: 674
score: 99.20244891826923
patch: else switch ( parent . get CaMeL Type ( ) ) {
rank: 674
score: 99.07822738155242
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ; break ;
rank: 674
score: 99.06538899739583
patch: switch ( parent . get CaMeL Type ( ) ? parent . get CaMeL Type ( ) : parent . get CaMeL Type CaMeL Name ( ) ) {
rank: 675
score: 99.28894573709239
patch: switch ( parent . get CaMeL Type ( ) ) { parent . set CaMeL Type ( Type . class ) {
rank: 675
score: 99.249267578125
patch: switch ( parent ) { case Token . STRING _ KEY :
rank: 675
score: 99.24616350446429
patch: if ( module . is CaMeL Object CaMeL Lit ( ) ) {
rank: 675
score: 99.22462681361607
patch: if ( parent != null )
rank: 675
score: 99.07539367675781
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 675
score: 99.06453450520833
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL String ( ) ) {
rank: 676
score: 99.28882897418478
patch: switch ( parent . get CaMeL Class ( ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 676
score: 99.25823974609375
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 676
score: 99.24442836216518
patch: if ( parent . get CaMeL Type ( ) == type ) {
rank: 676
score: 99.20217660757211
patch: switch ( parent . get CaMeL Type 0 ( ) ) {
rank: 676
score: 99.07511393229167
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parent CaMeL Node ( ) ) ; }
rank: 676
score: 99.06266021728516
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Name ( ) != null ) {
rank: 677
score: 99.34874770220588
patch: switch ( n . get CaMeL Type ( ) ) { case Token . FUNCTION ;
rank: 677
score: 99.28854237432066
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Class CaMeL Name ( ) ;
rank: 677
score: 99.257470703125
patch: type = ( Node ) parent . get CaMeL Type ( ) ; }
rank: 677
score: 99.24839274088542
patch: int type = n . get CaMeL Type ( ) ;
rank: 677
score: 99.2177264873798
patch: switch ( parent . get CaMeL Parent ( ) ) { }
rank: 677
score: 99.07342936197917
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( name ) )
rank: 677
score: 99.0620361328125
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) || parent . get CaMeL Name ( ) != null ) {
rank: 678
score: 99.3612922219669
patch: switch ( node . get CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 678
score: 99.28829823369566
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Type ( ) { else
rank: 678
score: 99.25741577148438
patch: Type type = parent . get CaMeL Type ( ) ; switch ( type . get CaMeL Type CaMeL Name ( ) )
rank: 678
score: 99.24781901041666
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) )
rank: 678
score: 99.24234444754464
patch: switch ( n . get CaMeL Qualified CaMeL Name ( ) ) {
rank: 678
score: 99.21416364397321
patch: switch ( parent . get CaMeL Parent ( ) ) { default :
rank: 678
score: 99.20016714242789
patch: switch ( parent . get CaMeL Type ( ) true ) {
rank: 678
score: 99.07330322265625
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( name ) )
rank: 678
score: 99.0617919921875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) , type ) ; }
rank: 679
score: 99.34872436523438
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { default ;
rank: 679
score: 99.25724003232759
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL All ( name ) ; }
rank: 679
score: 99.2447509765625
patch: if ( node . get CaMeL First CaMeL Child ( ) == n )
rank: 679
score: 99.19987269810268
patch: parent = parent . get CaMeL Type ( ) ; } return ;
rank: 679
score: 99.06143188476562
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Name ( ) != null ) {
rank: 680
score: 99.36007591985887
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) . get CaMeL Object CaMeL Lit CaMeL
rank: 680
score: 99.34659249441964
patch: switch ( scope . get CaMeL First CaMeL Child ( ) ) {
rank: 680
score: 99.28807576497395
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 680
score: 99.1995849609375
patch: switch ( parent . get CaMeL Target ( ) ) {
rank: 680
score: 99.07313639322916
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ; break ; }
rank: 680
score: 99.06122233072917
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Qualified CaMeL Name ( ) ) {
rank: 681
score: 99.28805409307066
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Type ( ) ; }
rank: 681
score: 99.2570270040761
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . NONE )
rank: 681
score: 99.24106270926339
patch: if ( n . get CaMeL Type ( ) == null ) {
rank: 681
score: 99.20864633413461
patch: type = get CaMeL Value CaMeL Type ( n ) ; }
rank: 681
score: 99.19905598958333
patch: parent = parent . get CaMeL Type ( ) ; {
rank: 681
score: 99.07302954889113
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Name ( ) ) ; break ;
rank: 681
score: 99.06100260416666
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Function ( ) ) {
rank: 682
score: 99.35933562247983
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) . is CaMeL Function ( ) )
rank: 682
score: 99.28791610054348
patch: switch ( parent . get CaMeL Type ( ) ) { ) { = parent . get CaMeL Parent ( ) {
rank: 682
score: 99.2568992332176
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) { case Token . STRING _ KEY :
rank: 682
score: 99.24168178013393
patch: Type type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 682
score: 99.24087524414062
patch: switch ( n . get CaMeL Value ( ) ) {
rank: 682
score: 99.20319073016827
patch: switch ( name ) { case Token . STRING _ KEY :
rank: 682
score: 99.19888741629464
patch: get CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 682
score: 99.0728759765625
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; return ; }
rank: 682
score: 99.06094852570564
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL String CaMeL Value ( ) == null ) {
rank: 683
score: 99.34362030029297
patch: if ( parent . get CaMeL First CaMeL Child ( ) == false ) {
rank: 683
score: 99.28771441915761
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Type ( ) { else
rank: 683
score: 99.25588989257812
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Id ( ) ) { case Token . ) return ;
rank: 683
score: 99.2026611328125
patch: type = Name . Type . GET ; }
rank: 683
score: 99.19600132533482
patch: switch ( parent . get CaMeL Node ( ) != null ) {
rank: 683
score: 99.07185363769531
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 683
score: 99.06004231770834
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . length ( ) == 0 ) {
rank: 684
score: 99.3583625344669
patch: switch ( n . get CaMeL Type ( ) ) { case Token . GET :
rank: 684
score: 99.286865234375
patch: switch ( parent . get CaMeL Name ( ) ) { switch ( parent . get CaMeL Type ( ) ) {
rank: 684
score: 99.2556903545673
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; )
rank: 684
score: 99.23675130208333
patch: switch ( parent . has CaMeL Type ( Type . VAR ) ) {
rank: 684
score: 99.23490687779018
patch: parent = n . get CaMeL First CaMeL Child ( ) ; }
rank: 684
score: 99.19303385416667
patch: parent = parent . get CaMeL Type ( ) ) ;
rank: 684
score: 99.07179309475806
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) , name ) ;
rank: 684
score: 99.05939127604167
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 685
score: 99.35726436491936
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Object CaMeL Lit ( ) && parent . get CaMeL Type ( ) . is CaMeL Object CaMeL
rank: 685
score: 99.2868015455163
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) { } *
rank: 685
score: 99.25565140335648
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 685
score: 99.23626708984375
patch: int name = n . get CaMeL String ( ) ;
rank: 685
score: 99.19935021033653
patch: switch ( name ) { case Token . SETTER _ DEF :
rank: 685
score: 99.05875126008064
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Lower CaMeL Case ( ) )
rank: 686
score: 99.35626220703125
patch: if ( parent . get CaMeL Type ( ) != Type . VAR ) {
rank: 686
score: 99.28666178385417
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Class CaMeL Name ( ) {
rank: 686
score: 99.25484035326087
patch: switch ( n . get CaMeL Type ( ) && n . get CaMeL Type ( ) == Token . NULL )
rank: 686
score: 99.23518589564732
patch: int type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 686
score: 99.23225620814732
patch: switch ( parent . get CaMeL Type ( ) ) { System .
rank: 686
score: 99.18998579545455
patch: switch ( get CaMeL Node ( parent ) ) {
rank: 686
score: 99.1856689453125
patch: switch ( name ) { case Token . FUNCTION :
rank: 686
score: 99.07003136837122
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 686
score: 99.05848795572916
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . has CaMeL Type ( ) ) {
rank: 687
score: 99.3562247983871
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) || parent . get CaMeL Type ( ) . is CaMeL Function CaMeL
rank: 687
score: 99.28635660807292
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Child CaMeL Count ( ) {
rank: 687
score: 99.25475135216347
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . ) return ;
rank: 687
score: 99.23461042131696
patch: switch ( parent . get CaMeL Type ( ) + $STRING$ ) {
rank: 687
score: 99.23223005022321
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ;
rank: 687
score: 99.1893310546875
patch: switch ( parent . get CaMeL Default ( ) ) {
rank: 687
score: 99.18212890625
patch: switch ( type ) { case Token . VAR :
rank: 687
score: 99.06913757324219
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 687
score: 99.05768585205078
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Empty CaMeL Type ( ) ) {
rank: 688
score: 99.35517735635081
patch: type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; if ( parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 688
score: 99.28553838315217
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Type ( ) { } }
rank: 688
score: 99.25448608398438
patch: type = parent . get CaMeL Type ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 688
score: 99.23342063210227
patch: switch ( parent . has CaMeL Type ( ) )
rank: 688
score: 99.23140775240384
patch: type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 688
score: 99.18854631696429
patch: switch ( parent . get CaMeL Type ( ) , null ) {
rank: 688
score: 99.18028846153847
patch: switch ( node . get CaMeL First CaMeL Child ( ) )
rank: 688
score: 99.06884002685547
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 688
score: 99.05767822265625
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) || parent . get CaMeL String CaMeL Value ( ) != null ) {
rank: 689
score: 99.35504347278226
patch: if ( parent . get CaMeL Type ( ) . is CaMeL Function CaMeL Expression ( ) || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL
rank: 689
score: 99.33486938476562
patch: if ( parent . get CaMeL First CaMeL Child ( ) == 0 ) {
rank: 689
score: 99.28543223505434
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL String ( ) ) {
rank: 689
score: 99.254150390625
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 689
score: 99.23307582310268
patch: Type type = n . get CaMeL First CaMeL Child ( ) ;
rank: 689
score: 99.18814522879464
patch: switch ( parent . get CaMeL Type ( ) ) { 1 :
rank: 689
score: 99.178466796875
patch: name = n . get CaMeL Value CaMeL Type ( ) ;
rank: 689
score: 99.0576530905331
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL String CaMeL Value CaMeL Type ( ) ) {
rank: 690
score: 99.35448431199596
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) . is CaMeL Function ( ) )
rank: 690
score: 99.2847188313802
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Value CaMeL Type ( ) {
rank: 690
score: 99.253681640625
patch: name = name . substring ( 0 , parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ; }
rank: 690
score: 99.23119303385417
patch: switch ( parent . type ( ) ) { case Token . VAR :
rank: 690
score: 99.23090069110577
patch: switch ( is CaMeL Set ) { case Token . VAR :
rank: 690
score: 99.1878662109375
patch: do { switch ( parent . get CaMeL Type ( ) ) {
rank: 690
score: 99.05712150804925
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 691
score: 99.33198547363281
patch: if ( scope . get CaMeL First CaMeL Child ( ) == n ) {
rank: 691
score: 99.28428141276042
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parameter CaMeL Type ( ) ;
rank: 691
score: 99.22987583705357
patch: type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 691
score: 99.18783133370536
patch: switch ( parent . get CaMeL Component CaMeL Type ( ) ) {
rank: 691
score: 99.17456993689903
patch: if ( parent . get CaMeL First CaMeL Child ( ) )
rank: 691
score: 99.06270476310483
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) ) ; break ;
rank: 691
score: 99.05708821614583
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 692
score: 99.28365071614583
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Value CaMeL Type ( ) {
rank: 692
score: 99.25218822337963
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Name ( ) ;
rank: 692
score: 99.22926548549107
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ;
rank: 692
score: 99.18574741908482
patch: switch ( parent . get . get CaMeL Type ( ) ) {
rank: 692
score: 99.06056315104166
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; } else {
rank: 692
score: 99.0569580078125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Function ( ) ) {
rank: 693
score: 99.28359587296195
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Property CaMeL Name ( ) ;
rank: 693
score: 99.25131661551339
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ; }
rank: 693
score: 99.22826209435097
patch: if ( is CaMeL Set ) is CaMeL Set = true ;
rank: 693
score: 99.18548583984375
patch: switch ( parent . get CaMeL Type ( ) ( ) ) {
rank: 693
score: 99.17124586838942
patch: if ( parent . get CaMeL Type ( ) instanceof Token )
rank: 693
score: 99.06035970052083
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ) {
rank: 693
score: 99.05636498235887
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals ( Type . TYPE ) ) {
rank: 694
score: 99.3513542624081
patch: switch ( n . get CaMeL Class ( ) ) { case Token . VAR :
rank: 694
score: 99.25106107271634
patch: name = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 694
score: 99.227783203125
patch: switch ( parent . get CaMeL Class CaMeL Name ( ) ) {
rank: 694
score: 99.1854756673177
patch: switch ( parent . get CaMeL Id ( ) ) {
rank: 694
score: 99.05890299479167
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL String CaMeL Value ( ) ) ; }
rank: 694
score: 99.0562255859375
patch: switch ( parent . get CaMeL Type ( ) ) { -- parent . get CaMeL Type ( ) . to CaMeL String ( ) ; } else {
rank: 695
score: 99.28336588541667
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Display CaMeL Name ( ) {
rank: 695
score: 99.2502910907452
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) . get CaMeL Name ( ) ) {
rank: 695
score: 99.22633870442708
patch: switch ( n . get CaMeL String ( ) ) {
rank: 695
score: 99.18381911057692
patch: } switch ( parent . get CaMeL Type ( ) ) {
rank: 695
score: 99.16883263221153
patch: if ( parent == n . get CaMeL Type ( ) )
rank: 695
score: 99.05802408854167
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ) {
rank: 695
score: 99.05575358072916
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != type ) {
rank: 696
score: 99.283203125
patch: switch ( parent . get CaMeL Type ( ) ) { -- ( parent . get CaMeL Type ( ) ) {
rank: 696
score: 99.18351236979167
patch: switch ( parent . get CaMeL Module ( ) ) {
rank: 696
score: 99.16785685221355
patch: type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 696
score: 99.0578125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . ) { case Token . ) :
rank: 696
score: 99.05574281754032
patch: switch ( parent . get CaMeL Type ( ) ) { ( parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) ) { }
rank: 697
score: 99.28298950195312
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 697
score: 99.24997384207589
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ) && name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 697
score: 99.22434779575893
patch: while ( parent . is CaMeL Object CaMeL Lit ( ) ) {
rank: 697
score: 99.18236365685097
patch: switch switch ( parent . get CaMeL Type ( ) ) {
rank: 697
score: 99.05765656502017
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Type ( ) ) ; break ;
rank: 697
score: 99.05552571614584
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL Name ( ) != null ) {
rank: 698
score: 99.2499469259511
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; } switch ( n . get CaMeL Type ( ) )
rank: 698
score: 99.22410481770834
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) )
rank: 698
score: 99.22402518136161
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 698
score: 99.18157958984375
patch: switch ( parent . get CaMeL Method ( ) ) {
rank: 698
score: 99.16487260298295
patch: type = Name . Type . Type . OTHER ;
rank: 698
score: 99.05738879788306
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 698
score: 99.05547505040323
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL Lower CaMeL Case ( ) )
rank: 699
score: 99.32261657714844
patch: while ( parent . get CaMeL First CaMeL Child ( ) == null ) {
rank: 699
score: 99.28297932942708
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Name . Name ) {
rank: 699
score: 99.24983723958333
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) { case Token . ) return ;
rank: 699
score: 99.22380719866071
patch: switch ( ! is CaMeL Set ) { case Token . GETPROP :
rank: 699
score: 99.22377522786458
patch: switch ( parent . has CaMeL Child ( ) ) {
rank: 699
score: 99.18124825613839
patch: switch ( parent . get CaMeL Type ( ) && parent ) {
rank: 699
score: 99.16434420072116
patch: switch ( parent . get CaMeL Type ( ) ) { case
rank: 699
score: 99.05487467447917
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL String CaMeL Value ( ) ) {
rank: 700
score: 99.3219745342548
patch: switch ( parent . get CaMeL Type ( ) ) { ;
rank: 700
score: 99.2825215657552
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Class CaMeL Name ( ) ;
rank: 700
score: 99.24923001802884
patch: type = parent . get CaMeL Name ( ) ; break ;
rank: 700
score: 99.2227783203125
patch: switch ( parent ) { case Token . GETTER _ DEF :
rank: 700
score: 99.18001011439732
patch: switch ( parent . get CaMeL Type ( ) ) { 0 :
rank: 700
score: 99.16399676983173
patch: switch ( parent . parent ) { case Token . VAR :
rank: 700
score: 99.05422973632812
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 701
score: 99.28232828776042
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parameter CaMeL Type ( ) {
rank: 701
score: 99.24830005787037
patch: name = parent . get CaMeL Parent ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) )
rank: 701
score: 99.2227783203125
patch: switch ( parent . is CaMeL Object CaMeL Lit CaMeL Key ( ) )
rank: 701
score: 99.22148786272321
patch: if ( n . get CaMeL Parent ( ) == null ) {
rank: 701
score: 99.17843191964286
patch: switch ( parent . get CaMeL Node ( ) == null ) {
rank: 701
score: 99.16155536358173
patch: String type = get CaMeL Value CaMeL Type ( n ) ;
rank: 701
score: 99.05481770833333
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , name ) ; }
rank: 701
score: 99.05388641357422
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 702
score: 99.3207015991211
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { default ;
rank: 702
score: 99.28212483723958
patch: switch ( parent . get CaMeL Type ( ) ) { parent = parent . get CaMeL Property CaMeL Type ( ) ;
rank: 702
score: 99.2482440655048
patch: type = parent . get CaMeL Parent CaMeL Node ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 702
score: 99.22136981670673
patch: name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 702
score: 99.1607666015625
patch: switch ( name ) { case Token . ASSIGN :
rank: 702
score: 99.05452211441532
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Base CaMeL Name ( ) , name ) ;
rank: 702
score: 99.05360068044355
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 703
score: 99.28208856997283
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Type ( ) { else
rank: 703
score: 99.24822998046875
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 703
score: 99.22247783954327
patch: switch ( parent . get CaMeL Type ( ) ) break ;
rank: 703
score: 99.17551967075893
patch: if ( parent == parent . get CaMeL Type ( ) ) {
rank: 703
score: 99.16033935546875
patch: if ( parent != null || parent != null ) {
rank: 703
score: 99.05440398185483
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) , name ) ;
rank: 703
score: 99.05347467237904
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; return ;
rank: 704
score: 99.28181966145833
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parameter CaMeL Type ( ) ;
rank: 704
score: 99.24806431361607
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Key ( ) ; }
rank: 704
score: 99.17502267020089
patch: parent = ( Type ) parent . get CaMeL Type ( ) {
rank: 704
score: 99.052978515625
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( parent . get CaMeL Type ( ) ) { case )
rank: 704
score: 99.05268859863281
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Name ( ) == null ) {
rank: 705
score: 99.31803131103516
patch: if ( parent . get CaMeL First CaMeL Child ( ) == this ) {
rank: 705
score: 99.28179931640625
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 705
score: 99.24715169270833
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; } }
rank: 705
score: 99.17409842354911
patch: finally { switch ( parent . get CaMeL Type ( ) ) {
rank: 705
score: 99.16021728515625
patch: if ( parent . get CaMeL Type ( ) == )
rank: 705
score: 99.05241147933468
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ; break ;
rank: 705
score: 99.05137978830645
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals ( Type . TYPE ) ) {
rank: 706
score: 99.28170776367188
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Display CaMeL Name ( ) {
rank: 706
score: 99.24592194733796
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . add CaMeL All ( ) ;
rank: 706
score: 99.22168986002605
patch: switch ( parent . get CaMeL Modifiers ( ) ) {
rank: 706
score: 99.21674455915179
patch: if ( parent . get CaMeL Type ( ) instanceof Scope ) {
rank: 706
score: 99.17393141526442
patch: this . parent = parent . get CaMeL Type ( ) ;
rank: 706
score: 99.15975247896634
patch: name = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 706
score: 99.05192057291667
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; switch ( n . get CaMeL Type ( ) ) { case )
rank: 706
score: 99.0503158569336
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } else {
rank: 707
score: 99.3375244140625
patch: switch ( get CaMeL Scope ( ) . get CaMeL Type ( ) ) {
rank: 707
score: 99.2815578294837
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( scope . get CaMeL Type ( ) ) {
rank: 707
score: 99.244140625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ) ; }
rank: 707
score: 99.2199237530048
patch: int name = get CaMeL Value CaMeL Type ( n ) ;
rank: 707
score: 99.21597290039062
patch: if ( is CaMeL Set ) {
rank: 707
score: 99.17337472098214
patch: switch ( parent . get CaMeL Type null Type ( ) ) {
rank: 707
score: 99.15769606370192
patch: type = Name . Type . OTHER ; break ; default :
rank: 707
score: 99.05179719002017
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Full CaMeL Name ( ) ) ; break ;
rank: 707
score: 99.04882024949596
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class CaMeL Name ( ) , type ) ;
rank: 708
score: 99.28121815557066
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Class ( ) {
rank: 708
score: 99.24325561523438
patch: name = parent . get CaMeL Name ( ) ; switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 708
score: 99.17200724283855
patch: switch ( exp . get CaMeL Type ( ) ) {
rank: 708
score: 99.1567049893466
patch: switch ( scope . get CaMeL Type ( ) )
rank: 708
score: 99.0503638482863
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Name ( ) ) ; break ;
rank: 708
score: 99.04833221435547
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { parent . get CaMeL String CaMeL Value ( ) ; }
rank: 709
score: 99.31524658203125
patch: type = get CaMeL Name ( n . get CaMeL Next ( ) ) ;
rank: 709
score: 99.28061311141305
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parent ( ) . parent {
rank: 709
score: 99.24324253627232
patch: type = parent . get CaMeL Type ( ) ; break ; }
rank: 709
score: 99.21051494891827
patch: if ( is CaMeL Object CaMeL Lit ( parent ) ) {
rank: 709
score: 99.168212890625
patch: parent ( parent . get CaMeL Type ( ) ) ;
rank: 709
score: 99.15487670898438
patch: if ( parent . get CaMeL Type ( ) != )
rank: 709
score: 99.05034845525569
patch: index = parent . get CaMeL Type ( ) ;
rank: 709
score: 99.04788970947266
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) != null ) {
rank: 710
score: 99.31400299072266
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . VAR
rank: 710
score: 99.28028361002605
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Name . Name ) {
rank: 710
score: 99.21820678710938
patch: int type = Name . Type . FUNCTION ;
rank: 710
score: 99.20965576171875
patch: switch ( key . get CaMeL Type ( ) ) {
rank: 710
score: 99.16750081380208
patch: switch ( parent . get CaMeL Key ( ) ) {
rank: 710
score: 99.15478515625
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) )
rank: 710
score: 99.050341796875
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; } return ;
rank: 710
score: 99.04759954637096
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL Array CaMeL Type ( ) )
rank: 711
score: 99.3126708984375
patch: is CaMeL Set = false ; type = Name . Type . GET ;
rank: 711
score: 99.28004964192708
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Function CaMeL Type ( ) ;
rank: 711
score: 99.24315388997395
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . NONE ) {
rank: 711
score: 99.21806640625
patch: && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 711
score: 99.16373697916667
patch: switch ( ref . get CaMeL Type ( ) ) {
rank: 711
score: 99.04976029829545
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) ) { case Token . parent . get CaMeL Type CaMeL Name ( ) :
rank: 711
score: 99.04757690429688
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . length ( ) > 0 ) {
rank: 712
score: 99.2799580891927
patch: switch ( parent . get CaMeL Type ( ) ) { index = parent . get CaMeL Class CaMeL Name ( ) {
rank: 712
score: 99.2426006610577
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; )
rank: 712
score: 99.21759440104167
patch: switch ( parent . get CaMeL Type ( ) == Token . VAR :
rank: 712
score: 99.16209059495192
patch: switch ( parent . get CaMeL Type ( true ) ) {
rank: 712
score: 99.04928490423387
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Function CaMeL Type ( ) , name ) ;
rank: 712
score: 99.04737854003906
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 713
score: 99.30998091264205
patch: type = Name . Type . OTHER ; break ;
rank: 713
score: 99.2796630859375
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Property CaMeL Type ( ) {
rank: 713
score: 99.24135044642857
patch: return ; } switch ( parent . get CaMeL Type ( ) )
rank: 713
score: 99.20672137920673
patch: set = parent . get CaMeL First CaMeL Child ( ) ;
rank: 713
score: 99.16208902994792
patch: switch ( parent . resolve CaMeL Type ( ) ) {
rank: 713
score: 99.04730987548828
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 713
score: 99.04686737060547
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) || parent . get CaMeL String CaMeL Value ( ) == null ) {
rank: 714
score: 99.27937825520833
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Function CaMeL Type ( ) {
rank: 714
score: 99.217041015625
patch: AST ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 714
score: 99.16091684194711
patch: switch ( parent . get CaMeL Type length ( ) ) {
rank: 714
score: 99.04685974121094
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) == null ) {
rank: 714
score: 99.04631805419922
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 715
score: 99.27896118164062
patch: switch ( parent . get CaMeL Type ( ) ) { size = parent . get CaMeL Value CaMeL Type ( ) {
rank: 715
score: 99.24061414930556
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) )
rank: 715
score: 99.21656901041666
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( n ) ) {
rank: 715
score: 99.20308430989583
patch: if ( n . get CaMeL Type ( ) ) {
rank: 715
score: 99.15972900390625
patch: switch parent . get CaMeL Type ( ) {
rank: 715
score: 99.14707594651442
patch: if ( n . get CaMeL Type ( ) != null )
rank: 715
score: 99.04634094238281
patch: if ( parent == null ) {
rank: 715
score: 99.0460716985887
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . is CaMeL Null CaMeL Type ( ) )
rank: 716
score: 99.27857462565105
patch: switch ( parent . get CaMeL Type ( ) ) { ++ this . parent . get CaMeL Type ( ) ; }
rank: 716
score: 99.2160400390625
patch: if ( parent . get CaMeL Type ( ) != Type . OTHER )
rank: 716
score: 99.19966947115384
patch: name = get CaMeL Value CaMeL Type ( n ) ; }
rank: 716
score: 99.15953650841347
patch: parent = parent . get CaMeL Type ( ) ; } {
rank: 716
score: 99.04592993951613
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) ) ; break ;
rank: 716
score: 99.0452547940341
patch: result = parent . get CaMeL Type ( ) ;
rank: 717
score: 99.27809651692708
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Property CaMeL Type ( ) ;
rank: 717
score: 99.238037109375
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 717
score: 99.21517740885416
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( scope ) ) {
rank: 717
score: 99.19908728966347
patch: name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 717
score: 99.15726725260417
patch: while ( parent . get CaMeL Type ( ) ) {
rank: 717
score: 99.14507587139423
patch: switch ( name ) { case Token . GETTER _ DEF :
rank: 717
score: 99.04585905997983
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parameter CaMeL Type ( ) ) ; break ;
rank: 717
score: 99.0449455015121
patch: switch ( parent . get CaMeL Type ( ) ? parent . get CaMeL Type ( ) : parent . get CaMeL String CaMeL Value ( ) ) { }
rank: 718
score: 99.29967447916667
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) { case
rank: 718
score: 99.23732212611607
patch: type = parent . get CaMeL Name ( ) ; break ; }
rank: 718
score: 99.21474783761161
patch: Type name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 718
score: 99.15696364182692
patch: switch ( parent . get CaMeL Type ( id ) ) {
rank: 718
score: 99.14433149857955
patch: switch ( n . get CaMeL Parent ( ) )
rank: 718
score: 99.04403981854838
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) , type ) ;
rank: 719
score: 99.328955078125
patch: switch ( parent . get CaMeL Type ( ) ) { case name :
rank: 719
score: 99.2779032389323
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Instance CaMeL Type ( ) {
rank: 719
score: 99.23673793247768
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; }
rank: 719
score: 99.21446010044643
patch: if ( parent . get CaMeL Node ( ) == n ) {
rank: 719
score: 99.15673828125
patch: switch ( parent . get CaMeL Scope ( ) ) {
rank: 719
score: 99.14410400390625
patch: switch ( n . get CaMeL Parent ( ) ) {
rank: 719
score: 99.04448872227823
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ; break ;
rank: 719
score: 99.04282513786765
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . is CaMeL String CaMeL Value CaMeL Type ( ) ) {
rank: 720
score: 99.27759660993304
patch: switch ( parent . get CaMeL Type ( ) ) { * )
rank: 720
score: 99.23647836538461
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 720
score: 99.21429036458333
patch: if ( parent . get CaMeL Type ( ) == Token . STRING :
rank: 720
score: 99.19632975260417
patch: switch ( n . get CaMeL Type ( ) ) :
rank: 720
score: 99.15594951923077
patch: parent = parent . get CaMeL Type ( ) ; break ;
rank: 720
score: 99.14327298677884
patch: switch ( parent ) { case Token . SETTER _ DEF :
rank: 720
score: 99.04443359375
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 720
score: 99.04248834425404
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type CaMeL Name ( ) , type ) ;
rank: 721
score: 99.19594163161058
patch: switch ( parent != null ) { case Token . VAR :
rank: 721
score: 99.15191650390625
patch: parent = parent . get CaMeL Parent ( ) ; }
rank: 721
score: 99.1432635967548
patch: switch ( parent . get CaMeL Qualified CaMeL Name ( ) )
rank: 721
score: 99.04425603693181
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 721
score: 99.04222106933594
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Name ( ) != null ) {
rank: 722
score: 99.27579752604167
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Name . Type ) {
rank: 722
score: 99.23611328125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . NULL :
rank: 722
score: 99.21389973958334
patch: if ( is CaMeL Set ) type = Name . Type . OTHER ;
rank: 722
score: 99.15121694711539
patch: switch ( parent . get CaMeL Type ( 0 ) ) {
rank: 722
score: 99.14325506036931
patch: type = Name . Type . Type . SET ;
rank: 722
score: 99.04383433948864
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 722
score: 99.04214477539062
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Name ( ) == null ) {
rank: 723
score: 99.2894999186198
patch: switch ( Node . get CaMeL Type ( ) ) {
rank: 723
score: 99.27554321289062
patch: switch ( parent . get CaMeL Type ( ) ) { ++ this . parent . get CaMeL Type ( ) { }
rank: 723
score: 99.23556640625
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Class ( ) ; break ;
rank: 723
score: 99.21260892427884
patch: if ( is CaMeL Global CaMeL Scope ( scope ) ) {
rank: 723
score: 99.19434611002605
patch: switch ( n . get CaMeL Id ( ) ) {
rank: 723
score: 99.14870198567708
patch: switch ( locale . get CaMeL Type ( ) ) {
rank: 723
score: 99.04353841145833
patch: if ( parent . is CaMeL Constructor ( ) ) {
rank: 724
score: 99.2342059795673
patch: String name = parent . get CaMeL Qualified CaMeL Name ( ) ; switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 724
score: 99.21173095703125
patch: int name = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 724
score: 99.14735764723558
patch: switch ( parent . get CaMeL Type 1 ( ) ) {
rank: 724
score: 99.13999245383523
patch: switch ( name ) { case Token . NAME :
rank: 724
score: 99.04218084161931
patch: switch ( current . get CaMeL Type ( ) )
rank: 724
score: 99.04112243652344
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . length ( ) == 0 ) {
rank: 725
score: 99.28653390066964
patch: switch ( Node . get CaMeL First CaMeL Child ( ) ) {
rank: 725
score: 99.2743428548177
patch: Object parent = parent . get CaMeL Type ( ) {
rank: 725
score: 99.233828125
patch: name = parent . get CaMeL Type CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 725
score: 99.1901346842448
patch: if ( parent . is CaMeL Function ( ) ) {
rank: 725
score: 99.14719645182292
patch: switch ( ! get CaMeL Type ( parent ) ) {
rank: 725
score: 99.13993013822116
patch: if ( parent != null . get CaMeL Type ( ) )
rank: 725
score: 99.04144877772177
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ; break )
rank: 725
score: 99.04109191894531
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Name ( ) == null ) {
rank: 726
score: 99.32062174479167
patch: switch ( n . get CaMeL Type ( ) ) { default ; }
rank: 726
score: 99.27408854166667
patch: switch ( parent . get CaMeL Type ( ) ) { switch ( parent . get CaMeL Type ( ) ) { *
rank: 726
score: 99.233642578125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ) ; }
rank: 726
score: 99.1857577237216
patch: if ( ! is CaMeL Prop CaMeL Assign ) {
rank: 726
score: 99.1435546875
patch: switch ( children . get CaMeL Type ( ) ) {
rank: 726
score: 99.13975941051136
patch: switch ( parent ) { case Token . FUNCTION :
rank: 726
score: 99.04112752278645
patch: name = parent . get CaMeL Name ( ) ) ;
rank: 726
score: 99.04049775094697
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ;
rank: 727
score: 99.2820556640625
patch: for ( Token parent : parent . get CaMeL Parent ( ) ) {
rank: 727
score: 99.14354359019886
patch: element = parent . get CaMeL Type ( ) ;
rank: 727
score: 99.13831505408653
patch: if ( n . get CaMeL Type ( ) == n )
rank: 727
score: 99.04111800655242
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) , name ) ;
rank: 727
score: 99.0391357421875
patch: if ( parent instanceof Object [ ] ) {
rank: 728
score: 99.28191731770833
patch: switch ( Node CaMeL Util . get CaMeL Value ( parent ) ) {
rank: 728
score: 99.2738037109375
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Return CaMeL Type ( ) {
rank: 728
score: 99.233359375
patch: name = parent . get CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 728
score: 99.1418212890625
patch: parent . get CaMeL Type ( ) ; }
rank: 728
score: 99.1380282315341
patch: switch ( name ) { case Token . GETPROP :
rank: 728
score: 99.03982642389113
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) , name ) ;
rank: 728
score: 99.03816469254032
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . get CaMeL Type ( ) {
rank: 729
score: 99.2736104329427
patch: switch ( parent . get CaMeL Type ( ) ) { -- switch ( parent . get CaMeL Type ( ) ) {
rank: 729
score: 99.23309795673077
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( )
rank: 729
score: 99.14112267127403
patch: switch ( get CaMeL Name CaMeL Node ( parent ) ) {
rank: 729
score: 99.1376620205966
patch: switch ( parent . get CaMeL Name ( ) )
rank: 729
score: 99.03912550403226
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) , name ) ;
rank: 729
score: 99.03797496448864
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( type ) ) {
rank: 730
score: 99.27899576822917
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ;
rank: 730
score: 99.2322489420573
patch: { switch ( parent . get CaMeL Type ( ) )
rank: 730
score: 99.20142473493304
patch: switch ( parent . scope . get CaMeL Type ( ) ) {
rank: 730
score: 99.18202561598558
patch: switch ( parent . get CaMeL Type ( ) ) * /
rank: 730
score: 99.13994891826923
patch: switch ( parent . get CaMeL Type ( ) == ) {
rank: 730
score: 99.13617412860577
patch: if ( parent != n . get CaMeL Next ( ) )
rank: 730
score: 99.0390625
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . is CaMeL Null CaMeL Type ( ) ) {
rank: 730
score: 99.03612541429925
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 731
score: 99.27206420898438
patch: switch ( parent . get CaMeL Type ( ) ) { name = parent . get CaMeL Class CaMeL Name ( ) ;
rank: 731
score: 99.23211200420673
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ) ;
rank: 731
score: 99.20103759765625
patch: switch ( parent . type ( ) ) {
rank: 731
score: 99.1394794170673
patch: switch ( parent . get CaMeL Type ( ) && ) {
rank: 731
score: 99.13504732572116
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 731
score: 99.03875177556819
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 731
score: 99.03503787878788
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( type ) ) {
rank: 732
score: 99.27176920572917
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Property CaMeL Type ( ) {
rank: 732
score: 99.2313944498698
patch: type = name . get CaMeL Type ( ) ; }
rank: 732
score: 99.20038452148438
patch: int type = Name . Type . OTHER ;
rank: 732
score: 99.179443359375
patch: switch ( list . get CaMeL Type ( ) ) {
rank: 732
score: 99.13678448016827
patch: switch ( parent . get CaMeL Type ( false ) ) {
rank: 732
score: 99.03243132560483
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals ( Class . TYPE ) ) {
rank: 733
score: 99.27120971679688
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Class CaMeL Name ( ) ;
rank: 733
score: 99.23109788161058
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ) ;
rank: 733
score: 99.20022348257211
patch: switch ( parent . type ) { case Token . VAR :
rank: 733
score: 99.1771952311198
patch: name = get CaMeL Value CaMeL Type ( parent ) ;
rank: 733
score: 99.13608022836539
patch: parent = parent . get CaMeL Type ( ) ; return {
rank: 733
score: 99.03697549143145
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Parameter CaMeL Type ( ) , name ) ;
rank: 733
score: 99.03202179939517
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; break ;
rank: 734
score: 99.23048683449075
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . STRING _ KEY :
rank: 734
score: 99.1349628155048
patch: switch ( parent . get CaMeL Type ( ) ) return {
rank: 734
score: 99.0367431640625
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 734
score: 99.03145599365234
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . set CaMeL Type ( name ) ;
rank: 735
score: 99.27102661132812
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Type ( ) ; }
rank: 735
score: 99.27049967447917
patch: switch ( parent . get CaMeL First CaMeL Child ( ) ) continue ;
rank: 735
score: 99.229658203125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 735
score: 99.19956752232143
patch: try { name = get CaMeL Value CaMeL Type ( n ) ;
rank: 735
score: 99.17411665482955
patch: switch ( index ) { case Token . VAR :
rank: 735
score: 99.13485952524039
patch: switch ( ( parent . get CaMeL Type ( ) ) ;
rank: 735
score: 99.0355736517137
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . is CaMeL Function CaMeL Type ( ) )
rank: 735
score: 99.03092193603516
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 736
score: 99.22958984375
patch: parent . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; } else {
rank: 736
score: 99.19826253255208
patch: Type type = n . get CaMeL Type ( ) ;
rank: 736
score: 99.1337381998698
patch: switch ( parent . get CaMeL Reference ( ) ) {
rank: 736
score: 99.1165771484375
patch: type = Name . Type . OTHER ; break ; }
rank: 736
score: 99.03529357910156
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) ) ; break ; }
rank: 736
score: 99.03043859145221
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) != null ) {
rank: 737
score: 99.22834123883929
patch: return ; } switch ( n . get CaMeL Type ( ) )
rank: 737
score: 99.19798932756696
patch: Token type = parent . get CaMeL First CaMeL Child ( ) ;
rank: 737
score: 99.17310680042614
patch: name = parent . get CaMeL String ( ) ;
rank: 737
score: 99.13292518028847
patch: switch ( parent . . get CaMeL Type ( ) ) {
rank: 737
score: 99.1129150390625
patch: switch ( module . get CaMeL Type ( ) )
rank: 737
score: 99.03195190429688
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 737
score: 99.03037396599265
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) != null ) {
rank: 738
score: 99.26815359933036
patch: switch ( parent . get CaMeL Type ( ) ) { / .
rank: 738
score: 99.26763509114583
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { ;
rank: 738
score: 99.22784423828125
patch: type = parent . get CaMeL Parent CaMeL Scope ( ) ; }
rank: 738
score: 99.19796316964286
patch: switch ( module . get CaMeL First CaMeL Child ( ) ) {
rank: 738
score: 99.13155110677083
patch: switch ( function . get CaMeL Type ( ) ) {
rank: 738
score: 99.0315459280303
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 738
score: 99.03028106689453
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 739
score: 99.26804606119792
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Return CaMeL Type ( ) ;
rank: 739
score: 99.26612955729166
patch: type = get CaMeL Value CaMeL Type ( n ) ; } break ;
rank: 739
score: 99.22727683738425
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) {
rank: 739
score: 99.19778006417411
patch: switch ( parent . get CaMeL Type ( ) . type ) {
rank: 739
score: 99.17113318810097
patch: set = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 739
score: 99.12935697115384
patch: switch ( parent . get CaMeL Type null ( ) ) {
rank: 739
score: 99.10915305397727
patch: switch ( parent ) { case Token . ASSIGN :
rank: 739
score: 99.03120422363281
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type CaMeL Name ( ) ) {
rank: 739
score: 99.02958679199219
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 740
score: 99.19662710336539
patch: Type type = get CaMeL Value CaMeL Type ( n ) ;
rank: 740
score: 99.1708233173077
patch: switch ( is CaMeL Set ) { case Token . GETPROP :
rank: 740
score: 99.12666829427083
patch: switch ( parent . is CaMeL Name ( ) ) {
rank: 740
score: 99.10575727982955
patch: switch ( parent . get CaMeL Class ( ) )
rank: 740
score: 99.02936345880681
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 740
score: 99.02925872802734
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Name ( ) == null ) {
rank: 741
score: 99.29580688476562
patch: switch ( n . get CaMeL Class ( ) ) {
rank: 741
score: 99.26760864257812
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Name . Type ) {
rank: 741
score: 99.265576171875
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) { case
rank: 741
score: 99.22611328125
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) ) { case Token . NULL :
rank: 741
score: 99.1259765625
patch: switch ( parent . get CaMeL Type ( null ) ) {
rank: 741
score: 99.10512288411458
patch: type = Name . Type . Type . OTHER ; }
rank: 741
score: 99.02906013257575
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ;
rank: 741
score: 99.02666473388672
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . TYPE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 742
score: 99.29460797991071
patch: switch ( n . get CaMeL Type ( ) ) { default ;
rank: 742
score: 99.26708984375
patch: switch ( parent . get CaMeL Type ( ) ) { $NUMBER$ ;
rank: 742
score: 99.22611038773148
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) {
rank: 742
score: 99.16935221354167
patch: if ( name . length ( ) == 0 ) {
rank: 742
score: 99.12575276692708
patch: switch ( parent . get CaMeL Package ( ) ) {
rank: 742
score: 99.1046475497159
patch: switch ( parent ) { case Token . NAME :
rank: 742
score: 99.02892348345588
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 742
score: 99.02603149414062
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; break ; }
rank: 743
score: 99.26682535807292
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Qualified CaMeL Name ( ) {
rank: 743
score: 99.2257549579327
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } switch ( n )
rank: 743
score: 99.16924579326923
patch: if ( n . get CaMeL String ( ) == null )
rank: 743
score: 99.12552584134616
patch: switch ( parent . get CaMeL Type ( $STRING$ ) ) {
rank: 743
score: 99.10404829545455
patch: if ( parent != null || parent != null )
rank: 743
score: 99.02850341796875
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) == null ) {
rank: 743
score: 99.02578735351562
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . is CaMeL Null CaMeL Type ( ) ) {
rank: 744
score: 99.26537068684895
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Class CaMeL Name ( ) {
rank: 744
score: 99.22563114872685
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) . set CaMeL Property ( ) ;
rank: 744
score: 99.12410794771634
patch: switch ( get CaMeL Class CaMeL Name ( parent ) ) {
rank: 744
score: 99.1027499112216
patch: if ( parent . is CaMeL Function ( ) )
rank: 744
score: 99.02811554939517
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } }
rank: 744
score: 99.024658203125
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . is CaMeL Function CaMeL Type ( ) ) {
rank: 745
score: 99.289453125
patch: switch ( n . get CaMeL Type ( ) ) { case name :
rank: 745
score: 99.18995884486607
patch: Type name = n . get CaMeL First CaMeL Child ( ) ;
rank: 745
score: 99.16754705255681
patch: name = n . get CaMeL String ( ) ;
rank: 745
score: 99.12308443509616
patch: parent switch ( parent . get CaMeL Type ( ) ) {
rank: 745
score: 99.10181773792614
patch: type = Name . Type . OTHER ; } }
rank: 745
score: 99.02747300091912
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 745
score: 99.02438534007354
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ;
rank: 746
score: 99.28939615885416
patch: if ( parent . get CaMeL Type ( ) != Token . STRING :
rank: 746
score: 99.22451346261161
patch: parent = parent . get CaMeL Parent CaMeL Node ( ) ; }
rank: 746
score: 99.16680438701923
patch: if ( parent . get CaMeL String ( ) == null )
rank: 746
score: 99.1222432454427
patch: push ( parent . get CaMeL Type ( ) ) ;
rank: 746
score: 99.10142008463542
patch: type = Name . Type . FUNCTION ; break ; }
rank: 746
score: 99.02695599724265
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) != null ) {
rank: 747
score: 99.26422119140625
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Property CaMeL Type ( ) ; }
rank: 747
score: 99.189697265625
patch: switch ( parent . is CaMeL String ( ) ) {
rank: 747
score: 99.16551795372597
patch: if ( type . is CaMeL Object CaMeL Lit ( ) )
rank: 747
score: 99.1182861328125
patch: switch ( parent . get CaMeL Type ( ) || ) {
rank: 747
score: 99.1006368001302
patch: synchronized ( parent . get CaMeL Parent ( ) ) {
rank: 747
score: 99.02642822265625
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . size ( ) > 0 ) {
rank: 747
score: 99.02285766601562
patch: switch ( n . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 748
score: 99.26392618815105
patch: switch ( parent . get CaMeL Type ( ) ) { count = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 748
score: 99.220830078125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . ) {
rank: 748
score: 99.18950946514423
patch: switch ( type ) { case Token . STRING _ KEY :
rank: 748
score: 99.16518332741477
patch: if ( name . equals ( $STRING$ ) ) {
rank: 748
score: 99.09583629261364
patch: switch ( name ) { case Token . INC :
rank: 748
score: 99.02544088924633
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL String CaMeL Value CaMeL Type ( ) ) {
rank: 748
score: 99.02109781901042
patch: if ( parent . is CaMeL Primitive ( ) ) {
rank: 749
score: 99.26365152994792
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Property CaMeL Type ( ) ;
rank: 749
score: 99.220361328125
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ; break ;
rank: 749
score: 99.11454264322917
patch: switch parent = parent . get CaMeL Type ( ) ;
rank: 749
score: 99.09360573508523
patch: switch ( parent ) { case Token . GETPROP :
rank: 749
score: 99.02485795454545
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( scope ) ) {
rank: 749
score: 99.02091471354167
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 750
score: 99.26333618164062
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Display CaMeL Name ( ) ;
rank: 750
score: 99.21966796875
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 750
score: 99.1140645345052
patch: switch ( parent . get CaMeL Source ( ) ) {
rank: 750
score: 99.0928067294034
patch: switch ( n . get CaMeL Next ( ) )
rank: 750
score: 99.02465057373047
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 750
score: 99.02055220170455
patch: switch ( target . get CaMeL Type ( ) )
rank: 751
score: 99.24698311941964
patch: switch ( key . get CaMeL First CaMeL Child ( ) ) {
rank: 751
score: 99.18727329799107
patch: / * switch ( n . get CaMeL Type ( ) ) {
rank: 751
score: 99.1079610188802
patch: switch ( parent . get CaMeL Line ( ) ) {
rank: 751
score: 99.0900166829427
patch: switch ( get CaMeL First CaMeL Child ( n ) )
rank: 751
score: 99.023681640625
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) {
rank: 751
score: 99.01876491970486
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) )
rank: 752
score: 99.21875
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; break ;
rank: 752
score: 99.18687220982143
patch: Token type = n . get CaMeL First CaMeL Child ( ) ;
rank: 752
score: 99.10638427734375
patch: parent = get CaMeL Type ( parent , parent ) ;
rank: 752
score: 99.02215021306819
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( scope ) ) {
rank: 753
score: 99.2791748046875
patch: for ( switch ( n . get CaMeL Type ( ) ) ) {
rank: 753
score: 99.16015625
patch: if ( ! is CaMeL Global ( scope ) ) {
rank: 753
score: 99.10468084161931
patch: switch ( . get CaMeL Type ( ) ) {
rank: 753
score: 99.02154715401785
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( name ) ) {
rank: 754
score: 99.24332369290866
patch: rvalue = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 754
score: 99.21799949363425
patch: parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Root ( ) ;
rank: 754
score: 99.15492942116477
patch: set = parent . get CaMeL Type ( ) ;
rank: 754
score: 99.10400390625
patch: switch ( filter . get CaMeL Type ( ) ) {
rank: 754
score: 99.08777872721355
patch: if ( parent != null || parent instanceof Token ) {
rank: 754
score: 99.02089621803977
patch: if ( parent != null ) { return ; }
rank: 754
score: 99.01534016927083
patch: index = parent . get CaMeL Type ( ) ) ;
rank: 755
score: 99.27686656605114
patch: switch ( get CaMeL Type ( n ) ) {
rank: 755
score: 99.26041666666667
patch: switch ( parent . get CaMeL Type ( ) ) { ++ this . parent . get CaMeL Type ( ) { else
rank: 755
score: 99.24175555889423
patch: switch ( n . get CaMeL Type ( ) ) { ;
rank: 755
score: 99.217392578125
patch: type = name . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 755
score: 99.18527657645089
patch: switch ( n . get CaMeL Type ( ) ) { break ;
rank: 755
score: 99.10342407226562
patch: switch ( property . get CaMeL Type ( ) ) {
rank: 755
score: 99.08693440755208
patch: if ( parent . get CaMeL Type ( ) != n
rank: 755
score: 99.02052260890152
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( this ) ) {
rank: 755
score: 99.01481628417969
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) , name ) ; }
rank: 756
score: 99.2603047688802
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Method CaMeL Name ( ) {
rank: 756
score: 99.217041015625
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 756
score: 99.1532491048177
patch: switch ( id . get CaMeL Type ( ) ) {
rank: 756
score: 99.10338338216145
patch: switch ( parent . get ( Type . ) ) {
rank: 756
score: 99.08394368489583
patch: type = Name . Type . Type . SET ; }
rank: 756
score: 99.0199203491211
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 756
score: 99.0143051147461
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 757
score: 99.2715576171875
patch: switch ( parent . get CaMeL Type ( ) ) { case type :
rank: 757
score: 99.25966389973958
patch: Object type = parent . get CaMeL Type ( ) {
rank: 757
score: 99.21682400173611
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ) ; }
rank: 757
score: 99.18496704101562
patch: Node parent = n . get CaMeL Parent ( ) ;
rank: 757
score: 99.10055541992188
patch: switch ( parent . get CaMeL Code ( ) ) {
rank: 757
score: 99.08373006184895
patch: parent . get CaMeL First CaMeL Child ( ) ; }
rank: 757
score: 99.01976799242425
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( this ) ) {
rank: 757
score: 99.01363372802734
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type CaMeL Name ( ) ) ; break ; }
rank: 758
score: 99.25949096679688
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parameter CaMeL Count ( ) {
rank: 758
score: 99.216240234375
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . constructor :
rank: 758
score: 99.09590657552083
patch: switch ( parent . get CaMeL Style ( ) ) {
rank: 758
score: 99.07909478081598
patch: name = Name . Type . FUNCTION ;
rank: 758
score: 99.01968383789062
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } return ;
rank: 758
score: 99.01230320785984
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 759
score: 99.25889078776042
patch: switch ( parent . get CaMeL Type ( ) ) { else { = parent . get CaMeL Parent ( ) ; }
rank: 759
score: 99.23949323381696
patch: type = parent . get CaMeL First CaMeL Child ( ) ; }
rank: 759
score: 99.215673828125
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . NONE :
rank: 759
score: 99.14891560872395
patch: if ( name . length ( ) != 0 ) {
rank: 759
score: 99.07806396484375
patch: switch ( n . get CaMeL Next ( ) ) {
rank: 759
score: 99.01898193359375
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) != null ) {
rank: 759
score: 99.01219223484848
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 760
score: 99.25827261117789
patch: switch ( parent . get CaMeL Name ( ) ) { *
rank: 760
score: 99.21567007211539
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } else { ) ;
rank: 760
score: 99.14879261363636
patch: if ( ! is CaMeL Global ( ) ) {
rank: 760
score: 99.0924784342448
patch: switch ( parent . get CaMeL Type ( ) ) ;
rank: 760
score: 99.0185775756836
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } else {
rank: 760
score: 99.0098876953125
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NULL : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 761
score: 99.2582499186198
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Property CaMeL Name ( ) {
rank: 761
score: 99.21552734375
patch: String name = name . substring ( 0 , parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 761
score: 99.18212890625
patch: Token name = parent . get CaMeL First CaMeL Child ( ) ;
rank: 761
score: 99.14749145507812
patch: switch ( next . get CaMeL Type ( ) ) {
rank: 761
score: 99.0909423828125
patch: parent = parent . get CaMeL Node ( ) ;
rank: 761
score: 99.016357421875
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( null ) ) {
rank: 761
score: 99.00927016314338
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; break ;
rank: 762
score: 99.25799091045673
patch: switch ( node . get CaMeL Type ( ) ) { *
rank: 762
score: 99.23622483473558
patch: switch ( n . get CaMeL Type ( ) ) { case
rank: 762
score: 99.21544471153847
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Function CaMeL Type ( ) ) { case Token . ) return ;
rank: 762
score: 99.18196927584134
patch: final Name . Type type = Name . Type . OTHER ;
rank: 762
score: 99.09022105823864
patch: switch ( parent . get CaMeL Type ( ) {
rank: 762
score: 99.0702237215909
patch: type = Name . Name . Type . OTHER ;
rank: 762
score: 99.01519012451172
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 762
score: 99.00921630859375
patch: switch ( parent . get CaMeL Type ( ) ) { case Type . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ;
rank: 763
score: 99.25782267252605
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 763
score: 99.23564801897321
patch: switch ( type . get CaMeL First CaMeL Child ( ) ) {
rank: 763
score: 99.21536959134616
patch: type = name . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) )
rank: 763
score: 99.08983357747395
patch: switch ( vars . get CaMeL Type ( ) ) {
rank: 763
score: 99.068359375
patch: switch ( ! parent . get CaMeL Type ( ) )
rank: 763
score: 99.01433967141544
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 763
score: 99.00899505615234
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ;
rank: 764
score: 99.2577412923177
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parameter CaMeL Type ( ) ; }
rank: 764
score: 99.23506382533482
patch: switch ( value . get CaMeL First CaMeL Child ( ) ) {
rank: 764
score: 99.2152687355324
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) . get CaMeL Name ( ) ) ; {
rank: 764
score: 99.08673095703125
patch: parent ( parent . get CaMeL Type ( ) ) {
rank: 764
score: 99.06693892045455
patch: switch ( type ) { case Token . FUNCTION :
rank: 764
score: 99.01328412224265
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 764
score: 99.00826119087837
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ) {
rank: 765
score: 99.25771077473958
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 765
score: 99.23478480747768
patch: if ( type . is CaMeL Function CaMeL Expression ( ) ) {
rank: 765
score: 99.215146484375
patch: type = name . get CaMeL First CaMeL Child ( ) ; } switch ( n . get CaMeL Type ( ) ) {
rank: 765
score: 99.17836507161458
patch: int name = parent . get CaMeL String ( ) ;
rank: 765
score: 99.13584391276042
patch: switch ( count . get CaMeL Type ( ) ) {
rank: 765
score: 99.06684027777777
patch: name = Name . Type . OTHER ;
rank: 765
score: 99.0126091452206
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) != null ) {
rank: 765
score: 99.00824737548828
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ; break ; case ) :
rank: 766
score: 99.25768025716145
patch: switch ( parent . get CaMeL Type ( ) ) { n = parent . get CaMeL Class CaMeL Name ( ) {
rank: 766
score: 99.24862234933036
patch: switch ( n . get CaMeL Type ( ) ) { / /
rank: 766
score: 99.21503363715277
patch: type = parent . get CaMeL Class CaMeL Name ( ) ; } switch ( n . get CaMeL Type CaMeL Name ( ) ) {
rank: 766
score: 99.07923380533855
patch: switch ( parent . get CaMeL Field ( ) ) {
rank: 766
score: 99.06672807173295
patch: type = Name . Type . FUNCTION ; } }
rank: 766
score: 99.0126091452206
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) == null ) {
rank: 766
score: 99.00684333570075
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 767
score: 99.25752766927083
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Parent CaMeL Scope ( ) ;
rank: 767
score: 99.21493765024039
patch: / * switch ( parent . get CaMeL Type ( ) )
rank: 767
score: 99.17739633413461
patch: if ( ! is CaMeL Global CaMeL Scope ( scope ) )
rank: 767
score: 99.13109241832386
patch: switch ( id ) { case Token . VAR :
rank: 767
score: 99.06615101207386
patch: type = Name . Type . SET ; } }
rank: 767
score: 99.01258850097656
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) != null ) {
rank: 768
score: 99.25706990559895
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 768
score: 99.214912109375
patch: name = parent . get CaMeL Qualified CaMeL Name ( ) ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 768
score: 99.0772705078125
patch: parent = parent . get CaMeL Name ( ) ;
rank: 768
score: 99.06392415364583
patch: type = Name . Type . SET ; break ; }
rank: 768
score: 99.01220703125
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( parent . get CaMeL Type ( ) ) ;
rank: 768
score: 99.00532670454545
patch: switch ( parent . equals ( $STRING$ ) ) {
rank: 769
score: 99.2148907001202
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; break ; }
rank: 769
score: 99.12605794270833
patch: name = parent . get CaMeL String ( ) ; }
rank: 769
score: 99.07607014973958
patch: switch ( parent == get CaMeL Type ( ) ) {
rank: 769
score: 99.06279962713069
patch: switch ( name . get CaMeL Type ( ) )
rank: 769
score: 99.01115148207721
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( ) ) {
rank: 770
score: 99.25557454427083
patch: switch ( parent . get CaMeL Type ( ) ) { { = parent . get CaMeL Property CaMeL Type ( ) {
rank: 770
score: 99.24596296037946
patch: switch ( n == n . get CaMeL Type ( ) ) {
rank: 770
score: 99.21488131009616
patch: switch ( parent . get CaMeL Type ( ) && parent . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 770
score: 99.17400251116071
patch: switch ( root . get CaMeL First CaMeL Child ( ) ) {
rank: 770
score: 99.12510172526042
patch: if ( type != Name . Type . OTHER ) {
rank: 770
score: 99.07460530598958
patch: switch ( parent . is CaMeL Namespace ( ) ) {
rank: 770
score: 99.06131998697917
patch: if ( parent . get CaMeL Type ( ) . {
rank: 770
score: 99.01097153172348
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 770
score: 99.003173828125
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) )
rank: 771
score: 99.23039027622768
patch: switch ( current . get CaMeL First CaMeL Child ( ) ) {
rank: 771
score: 99.2146484375
patch: Object value = parent . get CaMeL Object CaMeL Value ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 771
score: 99.17361215444711
patch: String name = get CaMeL Value CaMeL Type ( parent ) ;
rank: 771
score: 99.12379455566406
patch: is CaMeL Set = true ; }
rank: 771
score: 99.07455444335938
patch: switch ( definition . get CaMeL Type ( ) ) {
rank: 771
score: 99.06011408025569
patch: type = Name . Type . FUNCTION ; break ;
rank: 771
score: 99.00981140136719
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 771
score: 99.00228881835938
patch: switch ( in . get CaMeL Type ( ) ) {
rank: 772
score: 99.2547098795573
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Display CaMeL Name ( ) ;
rank: 772
score: 99.17340959821429
patch: return ; } name = n . get CaMeL String ( ) ;
rank: 772
score: 99.12331136067708
patch: if ( name . length ( ) == 1 ) {
rank: 772
score: 99.07412719726562
patch: switch ( parent . is CaMeL Local ( ) ) {
rank: 772
score: 99.00911218979779
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) == null ) {
rank: 773
score: 99.25360107421875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 773
score: 99.21251502403847
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ) ;
rank: 773
score: 99.11776733398438
patch: name = n . get CaMeL String ( ) ; }
rank: 773
score: 99.07259114583333
patch: parent = super . get CaMeL Type ( parent ) ;
rank: 773
score: 99.05774943033855
patch: switch ( name ) { case Token . VAR : {
rank: 773
score: 99.0089111328125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) != null ) {
rank: 773
score: 99.00113932291667
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 774
score: 99.22663225446429
patch: rvalue = n . get CaMeL First CaMeL Child ( ) ; }
rank: 774
score: 99.21129432091347
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Name ( ) ; {
rank: 774
score: 99.17144305889423
patch: switch ( n . is CaMeL Object CaMeL Lit ( ) )
rank: 774
score: 99.11668812144886
patch: switch ( n . get CaMeL Name ( ) )
rank: 774
score: 99.07146661931819
patch: switch ( parent . get CaMeL Type ( ) ;
rank: 774
score: 99.05616344105114
patch: switch ( n . get CaMeL String ( ) )
rank: 774
score: 99.00863647460938
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( name ) )
rank: 774
score: 99.00034586588542
patch: index = parent . get CaMeL Type ( ) ; }
rank: 775
score: 99.2532958984375
patch: switch ( parent . get CaMeL Type ( ) ) { iterator = parent . get CaMeL Property CaMeL Name ( ) ;
rank: 775
score: 99.21098981584821
patch: throw new { switch ( parent . get CaMeL Type ( ) )
rank: 775
score: 99.11600748697917
patch: switch ( column . get CaMeL Type ( ) ) {
rank: 775
score: 99.0704345703125
patch: switch ( parent . is CaMeL Property ( ) ) {
rank: 775
score: 99.05524236505681
patch: type = Name . Type . Type . GET ;
rank: 775
score: 99.00727081298828
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . size ( ) == 0 ) {
rank: 775
score: 98.99884392233456
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ;
rank: 776
score: 99.25327555338542
patch: switch ( parent . get CaMeL Type ( ) ) { = parent . get CaMeL Type ( ) ; } else {
rank: 776
score: 99.1688701923077
patch: switch ( parent . get CaMeL Type ( ) . ) {
rank: 776
score: 99.11525472005208
patch: switch ( this . get CaMeL Name ( ) ) {
rank: 776
score: 99.06878107244319
patch: parent = parent . get CaMeL Parent ( ) {
rank: 776
score: 99.0551249186198
patch: type = Name . Type . OTHER ; } } }
rank: 776
score: 99.0071029663086
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) || parent . get CaMeL Value CaMeL Type ( ) != null ) {
rank: 777
score: 99.23694719587054
patch: parent . switch ( n . get CaMeL Type ( ) ) {
rank: 777
score: 99.06810506184895
patch: switch ( names . get CaMeL Type ( ) ) {
rank: 777
score: 99.0550028483073
patch: if ( parent != null && parent != parent ) {
rank: 777
score: 99.00693646599265
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 777
score: 98.99778119255515
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { )
rank: 778
score: 99.25246175130208
patch: switch ( parent . get CaMeL Type ( ) ) { { switch ( parent . get CaMeL Type ( ) ) {
rank: 778
score: 99.22351946149554
patch: switch ( parent . get CaMeL Type ( ) ) { try {
rank: 778
score: 99.20713454026442
patch: type = parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; } switch ( parent )
rank: 778
score: 99.1669921875
patch: n = parent . get CaMeL First CaMeL Child ( ) ;
rank: 778
score: 99.06760660807292
patch: start ( parent . get CaMeL Type ( ) ) ;
rank: 778
score: 99.05491943359375
patch: name = Name . Type . OTHER ; }
rank: 778
score: 99.00607299804688
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) != null ) {
rank: 778
score: 98.99735884232955
patch: switch ( n . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 779
score: 99.25205485026042
patch: switch ( parent . get CaMeL Type ( ) ) { null = parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 779
score: 99.22286283052884
patch: parent = parent . get CaMeL First CaMeL Child ( ) ;
rank: 779
score: 99.20676832932692
patch: type = parent . get CaMeL Class CaMeL Name ( ) ;
rank: 779
score: 99.06623979048295
patch: switch ( parent . get CaMeL Type null ) {
rank: 779
score: 99.05323282877605
patch: if ( parent != null && parent != n ) {
rank: 779
score: 99.0052719116211
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 780
score: 99.25174967447917
patch: switch ( parent . get CaMeL Type ( ) ) { ++ parent . get CaMeL Parameter CaMeL Type ( ) { else
rank: 780
score: 99.22892543247768
patch: switch ( parent . get CaMeL Type ( ) ) { case int
rank: 780
score: 99.162841796875
patch: int type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 780
score: 99.10912068684895
patch: set = get CaMeL Value CaMeL Type ( n ) ;
rank: 780
score: 99.06524658203125
patch: switch ( parent . instance CaMeL Type ( ) ) {
rank: 780
score: 99.0523681640625
patch: type = Name . Type . Type . FUNCTION ;
rank: 780
score: 99.00504557291667
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . set CaMeL Type ( name ) ; }
rank: 781
score: 99.24859149639423
patch: switch ( parent . get CaMeL Class ( ) ) { *
rank: 781
score: 99.22006661551339
patch: switch ( parent . get CaMeL String CaMeL Value ( ) ) {
rank: 781
score: 99.2058574969952
patch: try { switch ( n . get CaMeL Type ( ) )
rank: 781
score: 99.16241924579327
patch: switch ( type ) { case Token . GETTER _ DEF :
rank: 781
score: 99.10882568359375
patch: switch ( 0 . get CaMeL Type ( ) ) {
rank: 781
score: 99.06446422230114
patch: switch ( get CaMeL Type ( type ) ) {
rank: 781
score: 99.00477183948864
patch: this . parent . get CaMeL Type ( ) ;
rank: 781
score: 98.99515573601974
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == null )
rank: 782
score: 99.24784342447917
patch: String type = parent . get CaMeL Type ( ) {
rank: 782
score: 99.21815708705357
patch: Node n = n . get CaMeL First CaMeL Child ( ) ;
rank: 782
score: 99.20426802201705
patch: type = parent . get CaMeL Parent ( ) ;
rank: 782
score: 99.1587383563702
patch: switch ( parent . type ) { case Token . ASSIGN :
rank: 782
score: 99.0602518717448
patch: switch ( parent ) {
rank: 782
score: 99.0491434733073
patch: if ( parent != null || parent != parent ) {
rank: 782
score: 99.00438017003677
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) == null ) {
rank: 782
score: 98.99498494466145
patch: name ( parent . get CaMeL Type ( ) ) ;
rank: 783
score: 99.2469991048177
patch: switch ( parent . get CaMeL Type ( ) ) throws
rank: 783
score: 99.20167032877605
patch: { switch ( n . get CaMeL Type ( ) )
rank: 783
score: 99.15491661658653
patch: switch ( ( parent . get CaMeL Type ( ) ) )
rank: 783
score: 99.10819498697917
patch: switch ( parent . get CaMeL Type ( ) ) ?
rank: 783
score: 99.05948893229167
patch: switch ( parent . get CaMeL Declaration ( ) ) {
rank: 783
score: 99.04863947088069
patch: switch ( parent . get CaMeL String ( ) )
rank: 783
score: 99.00420783547794
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) == null ) {
rank: 783
score: 98.99416155133929
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ) {
rank: 784
score: 99.21573311941964
patch: if ( parent . get CaMeL Type ( ) != scope ) {
rank: 784
score: 99.20016714242789
patch: switch ( parent . get CaMeL Type ( ) || parent . get CaMeL Type ( ) == Token . STRING _ KEY ) {
rank: 784
score: 99.0586825284091
patch: switch ( get CaMeL Name ( parent ) ) {
rank: 784
score: 99.04701926491477
patch: switch ( type ) { case Token . ASSIGN :
rank: 784
score: 99.0039580374053
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 784
score: 98.99404296875
patch: is CaMeL Set = false ; break ; }
rank: 785
score: 99.24312337239583
patch: parent ( parent . get CaMeL Type ( ) ) .
rank: 785
score: 99.20006385216347
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ; {
rank: 785
score: 99.15294392903645
patch: Class type = parent . get CaMeL Type ( ) ;
rank: 785
score: 99.10337136008523
patch: set = parent . get CaMeL Parent ( ) ;
rank: 785
score: 99.05772816051136
patch: target = parent . get CaMeL Type ( ) ;
rank: 785
score: 99.04271351207386
patch: type = Name . Name . Type . SET ;
rank: 785
score: 99.0039291381836
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) == null ) {
rank: 785
score: 98.99367453835227
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . TYPE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; }
rank: 786
score: 99.24295748197116
patch: switch ( parent . get CaMeL Type ( ) ) { public
rank: 786
score: 99.19907924107143
patch: type = name . get CaMeL Parent CaMeL Node ( ) ; }
rank: 786
score: 99.15240009014423
patch: result = n . get CaMeL First CaMeL Child ( ) ;
rank: 786
score: 99.05743408203125
patch: switch ( type ) {
rank: 786
score: 99.04051624644886
patch: switch ( parent ) { case Token . INC :
rank: 786
score: 99.00376263786765
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 786
score: 98.99361535274622
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; }
rank: 787
score: 99.23087565104167
patch: String name = parent . get CaMeL Type ( ) {
rank: 787
score: 99.19867412860577
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Type ( ) ; {
rank: 787
score: 99.1492919921875
patch: loop = n . get CaMeL First CaMeL Child ( ) ;
rank: 787
score: 99.03783069957386
patch: type = n . get CaMeL Type ( ) ;
rank: 787
score: 99.00352567784927
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 787
score: 98.9928690592448
patch: state = parent . get CaMeL Type ( ) ; }
rank: 788
score: 99.23056265024039
patch: switch ( parent . get CaMeL Type ( ) ) { )
rank: 788
score: 99.19842059795673
patch: type = parent . get CaMeL Parent ( ) ; break ;
rank: 788
score: 99.14606182391827
patch: Type type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 788
score: 99.05630493164062
patch: switch ( parent != get CaMeL Type ( ) ) {
rank: 788
score: 99.03757546164773
patch: switch ( parent . get CaMeL Module ( ) )
rank: 788
score: 99.00332641601562
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL Value CaMeL Type ( ) != null ) {
rank: 788
score: 98.9881591796875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) ;
rank: 789
score: 99.19765061598558
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Type ( ) ; } return ;
rank: 789
score: 99.1454190340909
patch: switch ( parent . to CaMeL String ( ) )
rank: 789
score: 99.05373313210227
patch: parent = type . get CaMeL Type ( ) ;
rank: 789
score: 99.02923029119319
patch: switch ( null ) { case Token . VAR :
rank: 789
score: 99.00130208333333
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } } else {
rank: 789
score: 98.98775809151786
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ; }
rank: 790
score: 99.22683715820312
patch: Object parent = parent . get CaMeL Parent ( ) {
rank: 790
score: 99.14371744791667
patch: switch ( n . has CaMeL Type ( ) ) {
rank: 790
score: 99.09658813476562
patch: switch ( n . get CaMeL Length ( ) ) {
rank: 790
score: 99.0537109375
patch: int type = parent . get CaMeL Type ( ) {
rank: 790
score: 99.02738813920455
patch: switch ( type ) { case Token . GETPROP :
rank: 790
score: 99.0003303079044
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 790
score: 98.98418830422794
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ;
rank: 791
score: 99.19716233473558
patch: type = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; break ; }
rank: 791
score: 99.14316813151042
patch: Node parent = n . get CaMeL Next ( ) ;
rank: 791
score: 99.09646606445312
patch: case Token . VAR : is CaMeL Set = true ;
rank: 791
score: 99.02651145241477
patch: if ( parent . equals ( parent ) ) {
rank: 791
score: 98.99926017992425
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( type ) ) {
rank: 791
score: 98.98417394301471
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; break ;
rank: 792
score: 99.2251485188802
patch: Object name = parent . get CaMeL Type ( ) {
rank: 792
score: 99.19689069475446
patch: type = ( String ) parent . get CaMeL Parent ( ) ;
rank: 792
score: 99.14220174153645
patch: switch ( parent . has CaMeL Next ( ) ) {
rank: 792
score: 99.0944112141927
patch: set = parent . get CaMeL Type ( ) ; }
rank: 792
score: 99.0469970703125
patch: if ( parent != get CaMeL Type ( ) ) {
rank: 792
score: 99.02532404119319
patch: switch ( type ) { case Token . NAME :
rank: 792
score: 98.99920099431819
patch: switch ( parent . get CaMeL Type ( ) ) { super . set CaMeL Type ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 792
score: 98.98328683035714
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 793
score: 99.2235819498698
patch: if ( parent == null && parent != null ) {
rank: 793
score: 99.19466727120536
patch: type = name ( parent . get CaMeL Type ( ) ) ;
rank: 793
score: 99.14041137695312
patch: switch ( n . get CaMeL Modifiers ( ) ) {
rank: 793
score: 99.04691938920455
patch: parent = parent . get CaMeL Class ( ) ;
rank: 793
score: 98.99859434185606
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( parent ) ) {
rank: 793
score: 98.9823357077206
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ; }
rank: 794
score: 99.20926920572917
patch: type = Name . Type . OTHER ; } return ;
rank: 794
score: 99.19339425223214
patch: type = name . get CaMeL First CaMeL Child ( ) ; }
rank: 794
score: 99.13985501802884
patch: final String name = n . get CaMeL String ( ) ;
rank: 794
score: 99.09303792317708
patch: switch ( index . get CaMeL Type ( ) ) {
rank: 794
score: 99.04690551757812
patch: parent ( parent ) . get CaMeL Type ( ) ;
rank: 794
score: 99.0218505859375
patch: switch ( parent . is CaMeL Function ( ) )
rank: 794
score: 98.99844180836396
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 795
score: 99.20827811104911
patch: switch ( n . get CaMeL String CaMeL Value ( ) ) {
rank: 795
score: 99.13966721754808
patch: final Name . Type type = Name . Type . FUNCTION ;
rank: 795
score: 99.04549153645833
patch: parent = parent . get CaMeL Type ( ) { {
rank: 795
score: 99.02057439630681
patch: switch ( parent . get CaMeL Scope ( ) )
rank: 795
score: 98.99661902225378
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Name ( parent . get CaMeL Type ( ) ) ;
rank: 795
score: 98.97934139476104
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { )
rank: 796
score: 99.21512545072116
patch: switch ( parent . get CaMeL Parent ( ) ) { *
rank: 796
score: 99.18907819475446
patch: type = parent . get CaMeL Parent ( ) ; break ; }
rank: 796
score: 99.1380282315341
patch: node = parent . get CaMeL Parent ( ) ;
rank: 796
score: 99.09027654474431
patch: set = parent . get CaMeL String ( ) ;
rank: 796
score: 99.0425313313802
patch: switch ( parent . get CaMeL Result ( ) ) {
rank: 796
score: 99.01999733664773
patch: switch ( parent . get CaMeL Value ( ) )
rank: 796
score: 98.99448529411765
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) != null ) {
rank: 796
score: 98.97844381893383
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ; break ;
rank: 797
score: 99.2129375751202
patch: int n = parent . get CaMeL Type ( ) { null
rank: 797
score: 99.18668910435268
patch: name = ( String ) parent . get CaMeL Parent ( ) ;
rank: 797
score: 99.04020182291667
patch: switch ( get CaMeL Type $NUMBER$ ( parent ) ) {
rank: 797
score: 99.01985307173295
patch: switch ( name ) { case Token . STRING :
rank: 797
score: 98.9943488625919
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 797
score: 98.978271484375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) ; break ;
rank: 798
score: 99.13624064127605
patch: int name = parent . get CaMeL Type ( ) ;
rank: 798
score: 99.08914184570312
patch: switch ( parent . is CaMeL Function ( ) ) {
rank: 798
score: 99.0399658203125
patch: switch ( parent . get ( ) ) {
rank: 798
score: 99.0189208984375
patch: switch ( parent . get CaMeL Child CaMeL
rank: 798
score: 98.99323064630681
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( parent ) ) {
rank: 798
score: 98.97742984169408
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) != null )
rank: 799
score: 99.21213942307692
patch: if ( parent . get CaMeL Type ( ) $NUMBER$ ) {
rank: 799
score: 99.13524373372395
patch: Type name = parent . get CaMeL Type ( ) ;
rank: 799
score: 99.0385030110677
patch: switch ( runtime . get CaMeL Type ( ) ) {
rank: 799
score: 99.01788884943181
patch: type = Name . Type . SET ; break ;
rank: 799
score: 98.99296431107955
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 799
score: 98.97656928168402
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == null )
rank: 800
score: 99.2094217936198
patch: Object n = parent . get CaMeL Type ( ) {
rank: 800
score: 99.18266950334821
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; }
rank: 800
score: 99.13389078776042
patch: Object parent = parent . get CaMeL Parent ( ) ;
rank: 800
score: 99.08852132161458
patch: switch ( parameter . get CaMeL Type ( ) ) {
rank: 800
score: 99.03826904296875
patch: switch ( parent . get CaMeL Input ( ) ) {
rank: 800
score: 99.01430442116477
patch: switch ( parent . get CaMeL Visibility ( ) )
rank: 800
score: 98.9928337545956
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 800
score: 98.97470925071023
patch: if ( type . equals ( $STRING$ ) ) {
rank: 801
score: 99.20569786658653
patch: switch ( get CaMeL First CaMeL Child ( n ) ) {
rank: 801
score: 99.20071176382211
patch: switch ( parent . get CaMeL Type ( ) ) continue ;
rank: 801
score: 99.18172781808036
patch: type = switch ( parent . get CaMeL Type ( ) ) ;
rank: 801
score: 99.13215942382813
patch: Type type = Name . Type . OTHER ;
rank: 801
score: 99.01376342773438
patch: name = Name . Type . FUNCTION ; }
rank: 801
score: 98.99266098484848
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 801
score: 98.97081083409927
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ;
rank: 802
score: 99.1796875
patch: type ( parent . get CaMeL Type ( ) ) ;
rank: 802
score: 99.08669026692708
patch: switch ( n . get CaMeL Key ( ) ) {
rank: 802
score: 99.03597005208333
patch: switch ( switch . get CaMeL Type ( ) ) {
rank: 802
score: 99.01055353338069
patch: type = Name . Type . SETTER _ DEF ;
rank: 802
score: 98.99240204782197
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( 1 ) ) {
rank: 802
score: 98.9693603515625
patch: name = parent . get CaMeL Parent ( ) ;
rank: 803
score: 99.19362386067708
patch: int ( parent . get CaMeL Type ( ) ) {
rank: 803
score: 99.08518473307292
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 803
score: 99.010498046875
patch: switch ( get CaMeL Type ( n ) )
rank: 803
score: 98.99211351799242
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( 1 ) ) {
rank: 803
score: 98.96880425347223
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 804
score: 99.20383998325893
patch: if ( parent . get CaMeL Type ( ) == Token ) {
rank: 804
score: 99.13087815504808
patch: switch ( parent . name ) { case Token . VAR :
rank: 804
score: 99.03375922309027
patch: parent . get CaMeL Type ( ) {
rank: 804
score: 99.01006525213069
patch: if ( parent != null || is CaMeL Set )
rank: 804
score: 98.99156278722427
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 804
score: 98.96816781850961
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == null ) {
rank: 805
score: 99.1925048828125
patch: init ( parent . get CaMeL Type ( ) ) ;
rank: 805
score: 99.17283412388393
patch: type = ( Name ) parent . get CaMeL Parent ( ) ;
rank: 805
score: 99.08446248372395
patch: switch ( ! n . get CaMeL Type ( ) )
rank: 805
score: 99.00969904119319
patch: if ( parent != get CaMeL Parent ( ) )
rank: 805
score: 98.99138109611742
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( id ) ) {
rank: 805
score: 98.96674661075367
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) ;
rank: 806
score: 99.20099748883929
patch: switch ( n . get CaMeL Value CaMeL Type ( ) ) {
rank: 806
score: 99.1727764423077
patch: type = name . get CaMeL Qualified CaMeL Name ( ) ;
rank: 806
score: 99.12946026141827
patch: switch ( parent == n . get CaMeL Type ( ) )
rank: 806
score: 99.02939453125
patch: super . get CaMeL Type ( parent ) ;
rank: 806
score: 98.9910888671875
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 806
score: 98.96600896661931
patch: switch ( parent . equals ( name ) ) {
rank: 807
score: 99.17108154296875
patch: return switch ( parent . get CaMeL Type ( ) )
rank: 807
score: 99.081298828125
patch: name = n . get CaMeL Type ( ) ;
rank: 807
score: 99.028173828125
patch: get CaMeL Type ( parent , parent ) ;
rank: 807
score: 98.99059340533088
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 807
score: 98.96469295726104
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NULL : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ;
rank: 808
score: 99.17935884915866
patch: type = value . get CaMeL First CaMeL Child ( ) ;
rank: 808
score: 99.17054966517857
patch: name = parent . get CaMeL Parent CaMeL Node ( ) ; }
rank: 808
score: 99.02088512073864
patch: parent = get CaMeL Type ( parent ) ; }
rank: 808
score: 99.00246360085227
patch: if ( get CaMeL Parent ( ) != null )
rank: 808
score: 98.99055249763258
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 809
score: 99.18666428786058
patch: switch ( scope . get CaMeL Type ( ) ) { *
rank: 809
score: 99.17040076622597
patch: default : switch ( parent . get CaMeL Type ( ) )
rank: 809
score: 99.12853064903847
patch: node = n . get CaMeL First CaMeL Child ( ) ;
rank: 809
score: 98.99992370605469
patch: if ( parent instanceof Token ) {
rank: 809
score: 98.98978917738971
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; }
rank: 809
score: 98.96328822544643
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) ;
rank: 810
score: 99.18634502704327
patch: switch ( parent . get CaMeL Type ( TYPE ) ) {
rank: 810
score: 99.17012241908482
patch: type = parent . get CaMeL Type CaMeL Name ( ) ; }
rank: 810
score: 99.07463073730469
patch: if ( ! is CaMeL Set )
rank: 810
score: 99.0148592862216
patch: switch ( parent . equals ( parent ) ) {
rank: 810
score: 98.99970092773438
patch: if ( parent . equals ( parent ) )
rank: 810
score: 98.98888790246212
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( id ) ) {
rank: 810
score: 98.96307732077206
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) ; }
rank: 811
score: 99.16933768136161
patch: type = parent . get CaMeL Name ( ) ; } return ;
rank: 811
score: 99.1254131610577
patch: switch ( parent . get CaMeL Type ( ) . get CaMeL
rank: 811
score: 99.00957697088069
patch: switch = parent . get CaMeL Type ( ) ;
rank: 811
score: 98.98775597774622
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( scope ) ) {
rank: 811
score: 98.96262721011513
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) )
rank: 812
score: 99.17957481971153
patch: parent = parent . get CaMeL Type ( ) { else {
rank: 812
score: 99.16880446213942
patch: type = switch ( parent . get CaMeL Type ( ) )
rank: 812
score: 99.12312825520833
patch: Object type = parent . get CaMeL Type ( ) ;
rank: 812
score: 99.00889282226562
patch: parent = get CaMeL Type ( parent ) {
rank: 812
score: 98.98928000710227
patch: type = Name . Type . GET ; } }
rank: 812
score: 98.98695697206439
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . get CaMeL String CaMeL Value ( ) ;
rank: 812
score: 98.96245814732143
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ; }
rank: 813
score: 99.16797814002403
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 813
score: 99.12303670247395
patch: switch ( parent . get CaMeL Type ( ) ) .
rank: 813
score: 99.00464976917614
patch: namespace = parent . get CaMeL Type ( ) ;
rank: 813
score: 98.98783735795455
patch: if ( parent != null || parent != n )
rank: 813
score: 98.98488547585227
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Type ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ;
rank: 813
score: 98.96130719866072
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) ; }
rank: 814
score: 99.1705791766827
patch: type = Name . Type . Type . OTHER ; break ;
rank: 814
score: 99.16758219401042
patch: type = name . get CaMeL Name ( ) ; }
rank: 814
score: 99.1206805889423
patch: i = parent . get CaMeL First CaMeL Child ( ) ;
rank: 814
score: 99.00425026633523
patch: switch ( parent . resolve ( parent ) ) {
rank: 814
score: 98.98761596679688
patch: type = Name . Type . STRING ; }
rank: 814
score: 98.98483455882354
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 815
score: 99.17613728841145
patch: check ( parent . get CaMeL Type ( ) ) {
rank: 815
score: 99.16729736328125
patch: name ( parent . get CaMeL Name ( ) ) ;
rank: 815
score: 99.0690585049716
patch: switch ( this . get CaMeL Type ( ) )
rank: 815
score: 99.00087668678977
patch: value = parent . get CaMeL Type ( ) ;
rank: 815
score: 98.9847900390625
patch: name = Name . Type . SET ; }
rank: 815
score: 98.98424923058712
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) ) ; } return ) ;
rank: 815
score: 98.95626395089286
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( parent . get CaMeL Type ( ) ) { case Token . NONE :
rank: 816
score: 99.16788736979167
patch: if ( parent . is CaMeL Empty ( ) ) {
rank: 816
score: 99.16663469587054
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;
rank: 816
score: 99.1195068359375
patch: final String name = parent . get CaMeL String ( ) ;
rank: 816
score: 99.06414794921875
patch: if ( is CaMeL Prop CaMeL Assign ) {
rank: 816
score: 99.00048828125
patch: source = parent . get CaMeL Type ( ) ;
rank: 816
score: 98.9842196377841
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Class ( ) . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 816
score: 98.95501030815973
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) != null )
rank: 817
score: 99.16557173295455
patch: type = name . get CaMeL Type ( ) ;
rank: 817
score: 99.16424560546875
patch: Type type = parent . get CaMeL Type ( ) {
rank: 817
score: 99.16419396033653
patch: type = parent . get CaMeL Qualified CaMeL Name ( ) ;
rank: 817
score: 99.0572176846591
patch: switch ( value . get CaMeL Type ( ) )
rank: 817
score: 98.98378314393939
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( id ) ) {
rank: 817
score: 98.9837158203125
patch: switch ( get CaMeL Value ( n ) )
rank: 817
score: 98.9548537795608
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == null ) {
rank: 818
score: 99.16546630859375
patch: type = name . get CaMeL Class CaMeL Name ( ) ; }
rank: 818
score: 99.16342397836539
patch: type = parent . get CaMeL Value CaMeL Type ( ) ;
rank: 818
score: 99.1632080078125
patch: switch ( get CaMeL Type ( parent ) ) { *
rank: 818
score: 99.11818284254808
patch: int name = get CaMeL Value CaMeL Type ( parent ) ;
rank: 818
score: 98.99482865767045
patch: item = parent . get CaMeL Type ( ) ;
rank: 818
score: 98.98353160511364
patch: if ( parent != null && parent != n )
rank: 818
score: 98.98329072840073
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 819
score: 99.16400615985577
patch: { switch ( n . get CaMeL Type ( ) ) {
rank: 819
score: 99.15941365559895
patch: String n = parent . get CaMeL Type ( ) {
rank: 819
score: 99.11525656960227
patch: switch ( parent . has CaMeL Child ( ) )
rank: 819
score: 99.0480069247159
patch: switch ( false ) { case Token . VAR :
rank: 819
score: 98.99449573863636
patch: if ( parent . get CaMeL Type ( ) {
rank: 819
score: 98.98322405133929
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 819
score: 98.98259943181819
patch: switch ( type ) { case Token . INC :
rank: 819
score: 98.95344373914931
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) )
rank: 820
score: 99.16366811899039
patch: type = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 820
score: 99.04513549804688
patch: if ( ( parent != null ) ) {
rank: 820
score: 98.99324174360795
patch: ret = parent . get CaMeL Type ( ) ;
rank: 820
score: 98.98276654411765
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) == null ) {
rank: 820
score: 98.95230189732143
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) . get CaMeL Type ( ) ) ;
rank: 821
score: 99.16224888392857
patch: type = name . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 821
score: 99.1139667217548
patch: else switch ( n . get CaMeL Type ( ) ) {
rank: 821
score: 98.9881258877841
patch: switch ( parent . get ( parent ) ) {
rank: 821
score: 98.98223517922794
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( type CaMeL Name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return {
rank: 821
score: 98.95159233940973
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 822
score: 99.16504845252403
patch: switch ( get CaMeL Value CaMeL Type ( parent ) ) {
rank: 822
score: 99.15962437220982
patch: name = name . replace CaMeL All ( $STRING$ , $STRING$ ) ;
rank: 822
score: 99.04347059461806
patch: is CaMeL Prop CaMeL Assign = true ;
rank: 822
score: 98.98585815429688
patch: switch ( parent . trim ( ) ) {
rank: 822
score: 98.98176343513258
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . is CaMeL String CaMeL Value CaMeL Type ( ) )
rank: 822
score: 98.9809903231534
patch: switch ( this . get CaMeL Parent ( ) )
rank: 822
score: 98.94882041529605
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == null )
rank: 823
score: 99.15599476207386
patch: type = Name . Type . GET ; break ;
rank: 823
score: 99.15262858072917
patch: start ( parent . get CaMeL Type ( ) ) {
rank: 823
score: 99.04276899857955
patch: if ( parent . get CaMeL Type ( ) ;
rank: 823
score: 98.98426402698864
patch: expr = parent . get CaMeL Type ( ) ;
rank: 823
score: 98.98132694128788
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals ( parent . get CaMeL String ( ) ) ) {
rank: 823
score: 98.94833034939236
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ; break ;
rank: 824
score: 99.15919712611607
patch: target = parent . get CaMeL Parent CaMeL Node ( ) ; }
rank: 824
score: 99.15589317908653
patch: switch ( parent . get CaMeL Type ( ) ) { default
rank: 824
score: 99.15181477864583
patch: String ( parent . get CaMeL Type ( ) ) ;
rank: 824
score: 99.0414706143466
patch: if ( name . equals ( name ) ) {
rank: 824
score: 98.98178932883523
patch: i = parent . get CaMeL Type ( ) ;
rank: 824
score: 98.98075907939189
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL String ( ) ) ) {
rank: 824
score: 98.97905939275569
patch: type = Name . Name . Type . FUNCTION ;
rank: 824
score: 98.94599994860198
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) )
rank: 825
score: 99.15823800223214
patch: type = name . get CaMeL Type CaMeL Name ( ) ; }
rank: 825
score: 99.15513102213542
patch: switch ( parent . get CaMeL Types ( ) ) {
rank: 825
score: 99.04135964133523
patch: scope = parent . get CaMeL Parent ( ) ;
rank: 825
score: 98.98058712121212
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( type ) ) {
rank: 825
score: 98.98049094460227
patch: parent = parent . get CaMeL Node ( ) {
rank: 825
score: 98.97462047230114
patch: type = Name . Type . STRING _ KEY ;
rank: 825
score: 98.94527064732142
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; switch ( n . get CaMeL Type ( ) ) { case Token . NONE :
rank: 826
score: 99.15724400111607
patch: type = name . get CaMeL Type ( ) ; break ; }
rank: 826
score: 99.14444986979167
patch: String ( parent . get CaMeL Type ( ) ) {
rank: 826
score: 99.11077880859375
patch: Type type = Name . Type . FUNCTION ;
rank: 826
score: 98.97930549172794
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) != null ) {
rank: 826
score: 98.974609375
patch: name = n . get CaMeL Name ( ) ;
rank: 826
score: 98.94494977678572
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) . get CaMeL Class ( ) ) ;
rank: 827
score: 99.15330153245192
patch: type = get CaMeL Value CaMeL Type ( parent ) ; }
rank: 827
score: 99.03791947798295
patch: if ( name . length ( ) == 0 )
rank: 827
score: 98.9744873046875
patch: location = parent . get CaMeL Type ( ) ;
rank: 827
score: 98.94412667410714
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ; }
rank: 828
score: 99.1554706280048
patch: type { switch ( n . get CaMeL Type ( ) )
rank: 828
score: 99.15065511067708
patch: type = Name . Type . OTHER ; } break ;
rank: 828
score: 99.03669877485795
patch: switch ( $STRING$ ) { case Token . VAR :
rank: 828
score: 98.97768985523896
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Parent ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; }
rank: 828
score: 98.97186279296875
patch: type = Name . Type . STRING ;
rank: 828
score: 98.9708584872159
patch: state = parent . get CaMeL Type ( ) ;
rank: 828
score: 98.94200303819444
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . equals ( name ) )
rank: 829
score: 99.15373883928571
patch: name = parent . get CaMeL String CaMeL Value ( ) ; }
rank: 829
score: 99.15047513521634
patch: type = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 829
score: 99.13140869140625
patch: int ( parent . get CaMeL Type ( ) ) ;
rank: 829
score: 99.03550026633523
patch: switch ( n . get CaMeL Value ( ) )
rank: 829
score: 98.97660558363971
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) == null ) {
rank: 829
score: 98.97078080610795
patch: root = parent . get CaMeL Type ( ) ;
rank: 829
score: 98.94198269314236
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) . get CaMeL Name ( ) ) ; }
rank: 830
score: 99.12969970703125
patch: parent = parent . get CaMeL Type ( ) ) {
rank: 830
score: 98.97595932904412
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) == null ) {
rank: 830
score: 98.9701815518466
patch: switch ( parent . get CaMeL Node ( ) )
rank: 830
score: 98.94085536858974
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) != null ) {
rank: 831
score: 99.15137657752403
patch: type = name . get CaMeL Type ( ) ; break ;
rank: 831
score: 99.14829508463542
patch: switch ( name . get CaMeL String ( ) ) {
rank: 831
score: 99.03172718394886
patch: switch ( value ) { case Token . VAR :
rank: 831
score: 98.97424665178572
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . length ( ) == 0 ) {
rank: 831
score: 98.97011108398438
patch: switch ( parent . equals ( parent ) )
rank: 831
score: 98.96848366477273
patch: switch ( children . get ( parent ) ) {
rank: 831
score: 98.94002492804276
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) )
rank: 832
score: 99.15030343191964
patch: type = name ( parent . get CaMeL Name ( ) ) ;
rank: 832
score: 99.12835693359375
patch: init ( parent . get CaMeL Type ( ) ) {
rank: 832
score: 99.03055826822917
patch: if ( ! is CaMeL Global ) {
rank: 832
score: 98.97345329733456
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == null ) {
rank: 832
score: 98.96956380208333
patch: name = Name . Type . SET ;
rank: 832
score: 98.93960910373264
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( type ) )
rank: 833
score: 99.1239725748698
patch: Type name = parent . get CaMeL Type ( ) {
rank: 833
score: 99.10071818033855
patch: Element parent = parent . get CaMeL Parent ( ) ;
rank: 833
score: 99.02418101917614
patch: if ( name . equals ( null ) ) {
rank: 833
score: 98.97320033482143
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Type . TYPE ) ) {
rank: 833
score: 98.96937144886364
patch: if ( parent != null && parent != null )
rank: 833
score: 98.96246892755681
patch: switch < parent . get CaMeL Type ( ) {
rank: 833
score: 98.93954380580357
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) ; }
rank: 834
score: 99.12261962890625
patch: if ( parent == null && parent == null ) {
rank: 834
score: 99.02060275607639
patch: switch ( ! is CaMeL Set ) {
rank: 834
score: 98.97217494419642
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) ;
rank: 834
score: 98.9645751953125
patch: type = Type . Type . OTHER ; }
rank: 834
score: 98.96240234375
patch: switch parent . get CaMeL Type ( ) ; {
rank: 834
score: 98.93833618164062
patch: is CaMeL Set = true ; break ; }
rank: 835
score: 99.1436298076923
patch: name { switch ( n . get CaMeL Type ( ) )
rank: 835
score: 99.09716796875
patch: switch ( n . to CaMeL String ( ) ) {
rank: 835
score: 99.02056329900569
patch: switch ( index ) { case Token . GETPROP :
rank: 835
score: 98.97198845358456
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . equals ( name ) ) {
rank: 835
score: 98.96375868055556
patch: if ( parent != null ) { }
rank: 835
score: 98.96082652698864
patch: parent = current . get CaMeL Type ( ) ;
rank: 835
score: 98.93701171875
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Component CaMeL Type ( ) . get CaMeL Name ( ) ) ;
rank: 836
score: 99.1448641690341
patch: rvalue = n . get CaMeL String ( ) ;
rank: 836
score: 99.11781819661458
patch: Node parent = parent . get CaMeL Parent ( ) {
rank: 836
score: 99.02048561789773
patch: switch ( key . get CaMeL Type ( ) )
rank: 836
score: 98.9701789407169
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Parent CaMeL Node ( ) != null ) {
rank: 836
score: 98.96054909446023
patch: switch ( has CaMeL Type ( parent ) ) {
rank: 836
score: 98.93639458550348
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) )
rank: 837
score: 99.1423809344952
patch: type { switch ( parent . get CaMeL Type ( ) )
rank: 837
score: 99.11293538411458
patch: Object n = parent . get CaMeL Parent ( ) {
rank: 837
score: 98.96847098214286
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . size ( ) == 0 ) {
rank: 837
score: 98.95978393554688
patch: switch ( parent . copy ( ) ) {
rank: 837
score: 98.95692952473958
patch: if ( parent . get CaMeL Child CaMeL
rank: 837
score: 98.93633563701923
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 838
score: 99.14234337439903
patch: name ( parent . get CaMeL Type ( ) ) ; }
rank: 838
score: 98.96783621651785
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Type . TYPE ) ) {
rank: 838
score: 98.95930619673295
patch: node = parent . get CaMeL Type ( ) ;
rank: 838
score: 98.95604790581598
patch: type = Type . Type . OTHER ;
rank: 839
score: 99.01348876953125
patch: if ( type != Name . Type ) {
rank: 839
score: 98.96673943014706
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . get CaMeL String CaMeL Value ( ) ; }
rank: 839
score: 98.956298828125
patch: switch ( is CaMeL Name ( parent ) ) {
rank: 839
score: 98.9371826171875
patch: type = Type . Type . SET ; }
rank: 839
score: 98.93454938616071
patch: switch ( n . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) ;
rank: 840
score: 99.09972127278645
patch: Type n = parent . get CaMeL Type ( ) {
rank: 840
score: 98.96505998883929
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Type . TRUE ) ) {
rank: 840
score: 98.9560213955966
patch: text = parent . get CaMeL Type ( ) ;
rank: 840
score: 98.933984375
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , parent . get CaMeL Name ( ) ) ;
rank: 840
score: 98.93341827392578
patch: if ( parent != n ) {
rank: 841
score: 99.13547585227273
patch: type = name . get CaMeL Name ( ) ;
rank: 841
score: 99.09929865056819
patch: switch = parent . get CaMeL Type ( ) {
rank: 841
score: 99.00982111150569
patch: if ( ( ! is CaMeL Set ) ) {
rank: 841
score: 98.96383846507354
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( parent . get CaMeL Type ( ) ) ; }
rank: 841
score: 98.95255903764205
patch: parent = parent . get CaMeL Class ( ) {
rank: 841
score: 98.93381076388889
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( name ) )
rank: 841
score: 98.93033854166667
patch: if ( parent != null ) { {
rank: 842
score: 99.13494403545673
patch: type ( parent . get CaMeL Type ( ) ) ; }
rank: 842
score: 99.08009847005208
patch: switch ( parent . get CaMeL Count ( ) ) {
rank: 842
score: 99.0083895596591
patch: switch ( index ) { case Token . ASSIGN :
rank: 842
score: 98.9498623934659
patch: switch ( resolve CaMeL Type ( parent ) ) {
rank: 842
score: 98.93350137246621
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 842
score: 98.92618136935764
patch: type = Type . Type . FUNCTION ;
rank: 843
score: 99.13472806490384
patch: default : switch ( n . get CaMeL Type ( ) )
rank: 843
score: 99.11882990056819
patch: switch ( get CaMeL Value ( parent ) ) {
rank: 843
score: 99.07962036132812
patch: expr = get CaMeL Value CaMeL Type ( n ) ;
rank: 843
score: 98.96179547991072
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Type . TRUE ) ) {
rank: 843
score: 98.94969593394886
patch: element = parent . get CaMeL Type ( ) {
rank: 843
score: 98.93331570095486
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == null )
rank: 843
score: 98.92416042751736
patch: type = Type . Type . SET ;
rank: 844
score: 99.13458251953125
patch: name = parent . get CaMeL Name ( ) ; )
rank: 844
score: 99.0059814453125
patch: switch ( parent . get CaMeL Id ( ) )
rank: 844
score: 98.95947963169642
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 844
score: 98.94865278764205
patch: switch ( parent . contains ( parent ) ) {
rank: 844
score: 98.9166030883789
patch: type = Name . OTHER ; }
rank: 845
score: 99.13454026442308
patch: parent . switch ( parent . get CaMeL Type ( ) )
rank: 845
score: 98.95881922104779
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) . get CaMeL Type ( ) ) :
rank: 845
score: 98.94814231178977
patch: property = parent . get CaMeL Type ( ) ;
rank: 845
score: 98.93202903053977
patch: key = parent . get CaMeL Name ( ) ;
rank: 845
score: 98.91204155815973
patch: type = Name . Type . VAR ;
rank: 846
score: 99.13297213040866
patch: name = parent . get CaMeL Type CaMeL Name ( ) ;
rank: 846
score: 99.080078125
patch: Object scope = parent . get CaMeL Type ( ) {
rank: 846
score: 99.06870524088542
patch: Declaration parent = parent . get CaMeL Parent ( ) ;
rank: 846
score: 99.0019864169034
patch: switch ( get CaMeL Name ( n ) ) {
rank: 846
score: 98.95772181919642
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 846
score: 98.94764709472656
patch: get CaMeL Type ( parent ) ;
rank: 846
score: 98.93166775173611
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 846
score: 98.90967407226563
patch: name = Name . Type . GET ; }
rank: 847
score: 99.13087815504808
patch: name { switch ( parent . get CaMeL Type ( ) )
rank: 847
score: 99.07703653971355
patch: String ) = parent . get CaMeL Type ( ) {
rank: 847
score: 99.06493123372395
patch: AST parent = parent . get CaMeL Parent ( ) ;
rank: 847
score: 98.95742618336396
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { }
rank: 847
score: 98.94182794744319
patch: switch ( get CaMeL Parent ( parent ) ) {
rank: 847
score: 98.93079723011364
patch: id = parent . get CaMeL Name ( ) ;
rank: 847
score: 98.90555245535714
patch: if ( parent != n )
rank: 848
score: 99.0643643465909
patch: switch ( parent . is CaMeL String ( ) )
rank: 848
score: 98.95687779017857
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) , parent . get CaMeL Name ( ) ) ;
rank: 848
score: 98.93907581676136
patch: parent = get CaMeL Type ( parent ) ; {
rank: 848
score: 98.93010979729729
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 848
score: 98.90028211805556
patch: name = Name . Type . GET ;
rank: 849
score: 99.10570179332386
patch: name = Name . Type . OTHER ; break ;
rank: 849
score: 99.1021728515625
patch: switch ( n . get CaMeL Scope ( ) ) {
rank: 849
score: 99.07452392578125
patch: set ( parent . get CaMeL Type ( ) ) {
rank: 849
score: 98.95675920758929
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 849
score: 98.93858753551136
patch: key = parent . get CaMeL Type ( ) ;
rank: 849
score: 98.9291104403409
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 849
score: 98.89990234375
patch: switch ( get CaMeL Type ( parent ) )
rank: 850
score: 99.12744140625
patch: name ( parent . get CaMeL Name ( ) ) ; }
rank: 850
score: 99.0735575358073
patch: if ( parent == null || parent != null ) {
rank: 850
score: 99.06210327148438
patch: if ( is CaMeL Global CaMeL Scope ( scope ) )
rank: 850
score: 98.95592543658088
patch: switch ( parent . get CaMeL Type ( ) ) { - parent . get CaMeL Type ( ) . set CaMeL Type ( parent . get CaMeL Type ( ) ) ;
rank: 850
score: 98.93824351917614
patch: parent = node . get CaMeL Type ( ) ;
rank: 850
score: 98.92877692145271
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) && is CaMeL Set ) {
rank: 850
score: 98.8998046875
patch: switch ( get CaMeL Value ( parent ) )
rank: 851
score: 98.99702592329545
patch: if ( ! ( parent != null ) ) {
rank: 851
score: 98.95514787946429
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . length ( ) > 0 ) {
rank: 851
score: 98.93815474076705
patch: parent = parent . to CaMeL String ( ) ;
rank: 851
score: 98.895556640625
patch: type = Type . Type . FUNCTION ; }
rank: 852
score: 99.1264178936298
patch: super . switch ( parent . get CaMeL Type ( ) )
rank: 852
score: 99.07087846235795
patch: parent = parent . get CaMeL Name ( ) {
rank: 852
score: 98.98475952148438
patch: if ( type == Name . Type ) {
rank: 852
score: 98.95471909466912
patch: switch ( parent . get CaMeL Type ( ) ) { case Boolean . value CaMeL Of ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) ;
rank: 852
score: 98.93614612926136
patch: parent [ parent . get CaMeL Type ( ) ;
rank: 852
score: 98.92650689019098
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) ; }
rank: 852
score: 98.89078776041667
patch: switch ( parent . get CaMeL Type CaMeL
rank: 853
score: 99.12212665264423
patch: type = name . get CaMeL Name ( ) ; break ;
rank: 853
score: 99.07046508789062
patch: switch ( parent . get CaMeL Type ( ) ) )
rank: 853
score: 98.9358797940341
patch: switch ( parent . parse ( parent ) ) {
rank: 853
score: 98.92649332682292
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ; break ;
rank: 853
score: 98.8891357421875
patch: type = Name . Name . OTHER ; }
rank: 854
score: 99.06791178385417
patch: Object node = parent . get CaMeL Type ( ) {
rank: 854
score: 99.05857340494792
patch: node = parent . get CaMeL Parent ( ) ; }
rank: 854
score: 98.95447495404412
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 854
score: 98.9354248046875
patch: try { parent . get CaMeL Type ( ) ;
rank: 854
score: 98.92595471833882
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) != null )
rank: 854
score: 98.88655395507813
patch: type = Name . Type . VAR ; }
rank: 855
score: 99.09108479817708
patch: switch ( namespace . get CaMeL Type ( ) ) {
rank: 855
score: 99.0584004720052
patch: int id = parent . get CaMeL Type ( ) ;
rank: 855
score: 98.95326861213235
patch: switch ( parent . get CaMeL Class ( ) . get CaMeL Name ( ) ) { case String . value CaMeL Of ( parent . get CaMeL Type ( ) ) :
rank: 855
score: 98.9505615234375
patch: boolean is CaMeL Prop CaMeL Assign = true ;
rank: 855
score: 98.93504749644886
patch: switch ( parent . get CaMeL Type ( ) &&
rank: 855
score: 98.92477829391892
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) != null ) {
rank: 855
score: 98.88544921875
patch: type = Name . Type . NAME ; }
rank: 856
score: 99.11794809194711
patch: / * switch ( n . get CaMeL Type ( ) )
rank: 856
score: 99.09098677201705
patch: type = Name . Type . OTHER ; return ;
rank: 856
score: 99.0840555826823
patch: switch ( null . get CaMeL Type ( ) ) {
rank: 856
score: 99.05563354492188
patch: Node n = parent . get CaMeL Parent ( ) ;
rank: 856
score: 98.9531609030331
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 856
score: 98.95027465820313
patch: if ( type == Token . VAR ) {
rank: 856
score: 98.9330322265625
patch: switch ( get CaMeL Class ( ) ) {
rank: 856
score: 98.92477077907986
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . equals ( type ) )
rank: 857
score: 99.1163330078125
patch: switch ( parent . get CaMeL Function CaMeL Type ( ) )
rank: 857
score: 99.06583658854167
patch: set ( parent . get CaMeL Type ( ) ) ;
rank: 857
score: 98.95232077205883
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 857
score: 98.9461669921875
patch: if ( ! is CaMeL Set ) return ;
rank: 857
score: 98.93080832741477
patch: module = parent . get CaMeL Type ( ) ;
rank: 857
score: 98.92333984375
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ;
rank: 857
score: 98.8822509765625
patch: switch ( get CaMeL Parent ( parent ) )
rank: 858
score: 99.11160982572116
patch: type = parent . get CaMeL Parent CaMeL Scope ( ) ;
rank: 858
score: 99.05496215820312
patch: int n = parent . get CaMeL Type ( ) ;
rank: 858
score: 98.95231119791667
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 858
score: 98.94224853515625
patch: boolean is CaMeL Prop CaMeL Assign = false ;
rank: 858
score: 98.92608032226562
patch: parent . get CaMeL Type ( ) ; {
rank: 858
score: 98.92307535807292
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) ; break ;
rank: 858
score: 98.87977905273438
patch: switch ( parent . get CaMeL Type ( )
rank: 859
score: 99.11040790264423
patch: parent = parent . get CaMeL Parent ( ) ; break ;
rank: 859
score: 99.08555094401042
patch: type = Name . Type . SET ; } return ;
rank: 859
score: 99.05419921875
patch: switch ( parent . is CaMeL Global ( ) ) {
rank: 859
score: 98.92000951522436
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 859
score: 98.91962280273438
patch: module . get CaMeL Type ( parent ) ;
rank: 859
score: 98.87892368861607
patch: type = Name . FUNCTION ;
rank: 860
score: 99.1103985126202
patch: name = parent . get CaMeL Name ( ) + $STRING$ ;
rank: 860
score: 99.0527852376302
patch: switch ( parent . get CaMeL Description ( ) ) {
rank: 860
score: 98.95187130489865
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 860
score: 98.93558349609376
patch: if ( ! is CaMeL Set ) { }
rank: 860
score: 98.91302490234375
patch: switch ( parent . size ( ) ) {
rank: 860
score: 98.87661743164062
patch: type = Type . Type . GET ; }
rank: 861
score: 99.10862379807692
patch: parent . switch ( n . get CaMeL Type ( ) )
rank: 861
score: 99.07598876953125
patch: type = Name . Type . STRING _ KEY ; }
rank: 861
score: 99.0514628092448
patch: result = get CaMeL Value CaMeL Type ( n ) ;
rank: 861
score: 98.95097799862133
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) . to CaMeL String ( ) ) ; }
rank: 861
score: 98.93533935546876
patch: switch ( parent . length ( ) ) {
rank: 861
score: 98.91908303285257
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == null ) {
rank: 861
score: 98.89486694335938
patch: super . switch ( parent ) {
rank: 861
score: 98.86764865451389
patch: type = Type . Type . GET ;
rank: 862
score: 99.10795084635417
patch: type = name . get CaMeL Parent ( ) ; }
rank: 862
score: 99.0741678873698
patch: switch ( parent . get CaMeL Visibility ( ) ) {
rank: 862
score: 99.05128987630208
patch: int name = parent . get CaMeL Name ( ) ;
rank: 862
score: 98.95055803571428
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . size ( ) > 0 ) {
rank: 862
score: 98.93070678710937
patch: if ( is CaMeL Global ( ) ) {
rank: 862
score: 98.91876898871527
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) {
rank: 862
score: 98.88142700195313
patch: System . err . println ( $STRING$ ) ;
rank: 862
score: 98.86292860243056
patch: type = Name . Type . NAME ;
rank: 863
score: 99.07371012369792
patch: switch ( n . get CaMeL Node ( ) ) {
rank: 863
score: 99.05075073242188
patch: switch ( parent . get CaMeL Type ( ) ) }
rank: 863
score: 98.94978376116072
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) , parent . get CaMeL Name ( ) ) ;
rank: 863
score: 98.92974243164062
patch: if ( name . equals ( $STRING$ ) )
rank: 863
score: 98.91722972972973
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 863
score: 98.879833984375
patch: switch ( ( parent != null ) ) {
rank: 863
score: 98.86179896763393
patch: type = Name . OTHER ;
rank: 864
score: 99.10544057992789
patch: name = parent . get CaMeL Name ( ) ; return ;
rank: 864
score: 99.05042613636364
patch: switch ( parent . has CaMeL Next ( ) )
rank: 864
score: 98.94787946428572
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) . to CaMeL String ( ) ) ;
rank: 864
score: 98.92687225341797
patch: if ( name == null ) {
rank: 864
score: 98.87900390625
patch: parent = get CaMeL Node ( parent ) ;
rank: 864
score: 98.85744803292411
patch: if ( is CaMeL Set )
rank: 865
score: 99.10374098557692
patch: super . switch ( n . get CaMeL Type ( ) )
rank: 865
score: 99.05007934570312
patch: binding = get CaMeL Value CaMeL Type ( n ) ;
rank: 865
score: 99.01943137428977
patch: name = parent . get CaMeL Type ( ) {
rank: 865
score: 98.94702845982142
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return {
rank: 865
score: 98.91648512620192
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ) {
rank: 865
score: 98.87785034179687
patch: super . set CaMeL Type ( parent ) ;
rank: 865
score: 98.851220703125
patch: String type = Name . Type . OTHER ;
rank: 866
score: 99.10360952524039
patch: switch ( n . get CaMeL Function CaMeL Type ( ) )
rank: 866
score: 98.94673549107142
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 866
score: 98.91647677951389
patch: type = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) )
rank: 866
score: 98.91617838541667
patch: if ( parent != null ) return ;
rank: 866
score: 98.87672119140625
patch: parent = get CaMeL Parent ( parent ) ;
rank: 866
score: 98.84384155273438
patch: type = Name . FUNCTION ; }
rank: 867
score: 99.10329026442308
patch: name = parent . get CaMeL Name ( ) ) ; }
rank: 867
score: 99.07108561197917
patch: switch ( n . get CaMeL Types ( ) ) {
rank: 867
score: 98.94517996651786
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) , parent . get CaMeL Type ( ) ) ;
rank: 867
score: 98.87118530273438
patch: switch ( parent . resolve ( ) ) {
rank: 867
score: 98.83921508789062
patch: parent . get CaMeL Parent ( ) ; }
rank: 868
score: 99.1002197265625
patch: type = name . get CaMeL Class CaMeL Name ( ) ;
rank: 868
score: 99.07594807942708
patch: switch ( parent . get CaMeL Constructor ( ) ) {
rank: 868
score: 99.04908243815105
patch: String type = parent . get CaMeL Type ( ) ;
rank: 868
score: 98.9447021484375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 868
score: 98.91594102647569
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) . get CaMeL Type ( ) ) ; }
rank: 868
score: 98.91033063616071
patch: is CaMeL Set = false ;
rank: 868
score: 98.8711669921875
patch: do . get CaMeL Type ( parent ) ;
rank: 868
score: 98.8388671875
patch: if ( parent != null Token . VAR )
rank: 869
score: 99.0990459735577
patch: this . switch ( parent . get CaMeL Type ( ) )
rank: 869
score: 99.07415771484375
patch: switch ( n . get CaMeL Method ( ) ) {
rank: 869
score: 98.98583984375
patch: this = parent . get CaMeL Type ( ) {
rank: 869
score: 98.94444754464286
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 869
score: 98.91581895616319
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent , name ) ;
rank: 869
score: 98.908935546875
patch: if ( is CaMeL Global ) {
rank: 869
score: 98.83774820963542
patch: if ( parent instanceof Token ) { {
rank: 870
score: 99.04744466145833
patch: String name = n . get CaMeL Name ( ) ;
rank: 870
score: 98.98542924360795
patch: parent = type . get CaMeL Type ( ) {
rank: 870
score: 98.94281170819256
patch: if ( parent . get CaMeL Type ( ) != null || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 870
score: 98.91514078776042
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) && is CaMeL Set )
rank: 870
score: 98.86966552734376
patch: this . get CaMeL Type ( parent ) ;
rank: 870
score: 98.83468288845486
patch: type = Name . Name . OTHER ;
rank: 871
score: 99.09596761067708
patch: target = parent . get CaMeL Parent ( ) ; }
rank: 871
score: 99.0457763671875
patch: node = get CaMeL Value CaMeL Type ( n ) ;
rank: 871
score: 98.98516290838069
patch: scope = parent . get CaMeL Type ( ) {
rank: 871
score: 98.93927873883929
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( 1 ) ) {
rank: 871
score: 98.91274789663461
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ; }
rank: 871
score: 98.90656280517578
patch: switch ( is CaMeL Set ) {
rank: 871
score: 98.82802327473958
patch: type = Name . Type . GETPROP ;
rank: 872
score: 99.06341552734375
patch: switch ( input . get CaMeL Type ( ) ) {
rank: 872
score: 99.04576619466145
patch: switch ( parent . index CaMeL Of ( $STRING$ ) )
rank: 872
score: 98.971533203125
patch: switch ( parent ) println ( parent ) ;
rank: 872
score: 98.93885323660714
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 872
score: 98.91200764973958
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ; break ;
rank: 872
score: 98.90595838758681
patch: is CaMeL Set = true ; break ;
rank: 872
score: 98.862744140625
patch: super . get CaMeL Type ( parent ) {
rank: 872
score: 98.82630266462054
patch: type = Type . FUNCTION ;
rank: 873
score: 99.09486741286058
patch: name = name . get CaMeL Qualified CaMeL Name ( ) ;
rank: 873
score: 99.045166015625
patch: switch ( get CaMeL Type ( scope ) ) {
rank: 873
score: 98.96380060369319
patch: String type = get CaMeL Type ( parent ) {
rank: 873
score: 98.937255859375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 873
score: 98.85633544921875
patch: switch ( get CaMeL Parent ( ) ) {
rank: 873
score: 98.81623077392578
patch: type = Type . OTHER ; }
rank: 874
score: 99.0940410907452
patch: type = parent . get CaMeL Type ( ) ) ; }
rank: 874
score: 99.0673116048177
patch: type = Name . Type . FUNCTION ; } return ;
rank: 874
score: 99.04454549153645
patch: switch ( n . get CaMeL State ( ) ) {
rank: 874
score: 98.93677455357142
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Class . TYPE ) ) {
rank: 874
score: 98.89946746826172
patch: boolean is CaMeL Set = true ;
rank: 874
score: 98.85424041748047
patch: switch ( parent != null ) {
rank: 874
score: 98.81507703993056
patch: type = Name . Name . FUNCTION ;
rank: 875
score: 99.0926513671875
patch: type = name . get CaMeL Parent CaMeL Node ( ) ;
rank: 875
score: 99.04428100585938
patch: Token node = n . get CaMeL Next ( ) ;
rank: 875
score: 98.95604359019886
patch: set = parent . get CaMeL Type ( ) {
rank: 875
score: 98.93662109375
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return {
rank: 875
score: 98.91077769886364
patch: prefix = parent . get CaMeL Name ( ) ;
rank: 875
score: 98.89883083767361
patch: if ( ! is CaMeL Function ) {
rank: 875
score: 98.84986572265625
patch: get CaMeL Type CaMeL Name ( parent ) ;
rank: 875
score: 98.81358991350446
patch: if ( parent instanceof Token )
rank: 876
score: 99.08832256610577
patch: parent ( parent . get CaMeL Type ( ) ) ; }
rank: 876
score: 99.0546875
patch: switch ( prefix . get CaMeL Type ( ) ) {
rank: 876
score: 99.04414876302083
patch: int name = n . get CaMeL Name ( ) ;
rank: 876
score: 98.93655831473214
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 876
score: 98.91037399704392
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( type ) ) {
rank: 876
score: 98.89874267578125
patch: return ; } is CaMeL Set = true ;
rank: 876
score: 98.84899291992187
patch: parent . get CaMeL Type ( ) ) ;
rank: 877
score: 99.08555094401042
patch: type = parent . get CaMeL Id ( ) ; }
rank: 877
score: 99.06480916341145
patch: type = get CaMeL Value CaMeL Type ( name ) ;
rank: 877
score: 99.04305013020833
patch: Token type = n . get CaMeL Next ( ) ;
rank: 877
score: 98.95171508789062
patch: if ( parent != null ) { return {
rank: 877
score: 98.93541434151786
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Class . TYPE ) ) {
rank: 877
score: 98.90985428659539
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) )
rank: 877
score: 98.89796752929688
patch: is CaMeL Prop CaMeL Assign = true ; }
rank: 877
score: 98.84286499023438
patch: switch ( parent . parent ( ) ) {
rank: 877
score: 98.80585394965277
patch: type = Name . Type . ASSIGN ;
rank: 878
score: 99.08468627929688
patch: type = parent . get CaMeL Type ( ) ; )
rank: 878
score: 98.9512051669034
patch: default = parent . get CaMeL Type ( ) {
rank: 878
score: 98.93497941300676
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 878
score: 98.9090576171875
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) )
rank: 878
score: 98.89659423828125
patch: if ( ! is CaMeL Set ) { {
rank: 878
score: 98.82952880859375
patch: get CaMeL Node ( parent , parent ) ;
rank: 879
score: 99.0844257061298
patch: type = parent ) . get CaMeL Type ( ) ; }
rank: 879
score: 98.94959605823864
patch: result = parent . get CaMeL Type ( ) {
rank: 879
score: 98.93353794642857
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals ( parent . get CaMeL Type ( ) ) ) {
rank: 879
score: 98.90896853885135
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . equals ( name ) ) {
rank: 879
score: 98.8238525390625
patch: switch ( type ) { case ? ) :
rank: 879
score: 98.8013916015625
patch: type = Name . Type . EMPTY ;
rank: 880
score: 99.07618204752605
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 880
score: 99.041259765625
patch: switch ( parent . name ( ) ) {
rank: 880
score: 98.94948508522727
patch: owner = parent . get CaMeL Type ( ) {
rank: 880
score: 98.932421875
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Boolean . TRUE ) ) {
rank: 880
score: 98.90865928248355
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) )
rank: 880
score: 98.89437866210938
patch: if ( ! is CaMeL Prop CaMeL Assign )
rank: 880
score: 98.8214599609375
patch: switch ( parent . create ( ) ) {
rank: 880
score: 98.79916720920139
patch: switch ( get CaMeL Parent ( ) )
rank: 881
score: 99.0751953125
patch: id = parent . get CaMeL Name ( ) ; }
rank: 881
score: 98.93489990234374
patch: if ( parent != null ) { ) {
rank: 881
score: 98.931982421875
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Boolean . TRUE ) ) {
rank: 881
score: 98.9073153409091
patch: property = parent . get CaMeL Name ( ) ;
rank: 881
score: 98.89287719726562
patch: if ( parent != null ) { else {
rank: 881
score: 98.79063585069444
patch: if ( parent instanceof JS CaMeL Module )
rank: 882
score: 99.07447306315105
patch: type = parent . get CaMeL Name ( ) ; )
rank: 882
score: 99.04899088541667
patch: switch ( code . get CaMeL Type ( ) ) {
rank: 882
score: 99.03858531605114
patch: switch ( n ) { case Token . VAR :
rank: 882
score: 98.93127790178572
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) . to CaMeL String ( ) ) ;
rank: 882
score: 98.90700812088816
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 882
score: 98.86256408691406
patch: if ( parent instanceof Scope ) {
rank: 882
score: 98.81275024414063
patch: parent = parent { switch ( parent ) ;
rank: 882
score: 98.78953552246094
patch: type = Type . FUNCTION ; }
rank: 883
score: 99.07035688920455
patch: name = name . to CaMeL String ( ) ;
rank: 883
score: 99.03197021484375
patch: int type = Name . Type . SET ;
rank: 883
score: 98.92987060546875
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) , parent . get CaMeL Type ( ) ) ; }
rank: 883
score: 98.90897623697917
patch: switch ( parent ) { / * /
rank: 883
score: 98.90652053420608
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) == null ) {
rank: 883
score: 98.84603118896484
patch: if ( name != null ) {
rank: 883
score: 98.81038818359374
patch: System . out . println ( $STRING$ ) ;
rank: 883
score: 98.78772650824652
patch: type = Type . STRING _ KEY ;
rank: 884
score: 99.06263224283855
patch: return switch ( n . get CaMeL Type ( ) )
rank: 884
score: 98.92938755580357
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 884
score: 98.9065191806891
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , parent ) ) {
rank: 884
score: 98.89799669053819
patch: if ( parent != null ) return {
rank: 884
score: 98.84529876708984
patch: if ( n != null ) {
rank: 884
score: 98.80970458984375
patch: switch ( ( parent == null ) ) {
rank: 884
score: 98.77719455295139
patch: if ( parent == null ) { {
rank: 885
score: 99.06006876627605
patch: name = name . to CaMeL String ( ) ; }
rank: 885
score: 99.02842018821023
patch: switch ( root . get CaMeL Type ( ) )
rank: 885
score: 98.92935267857143
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( get CaMeL String ( ) ) ) {
rank: 885
score: 98.90640836148648
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( ) == null )
rank: 885
score: 98.8975830078125
patch: switch ( parent ) { / / * /
rank: 885
score: 98.84328206380208
patch: is CaMeL Prop CaMeL Assign = false ;
rank: 885
score: 98.80965169270833
patch: switch ( type ) { case ) ;
rank: 885
score: 98.77641296386719
patch: type = Type . SET ; }
rank: 886
score: 99.05999200994319
patch: type = name . get CaMeL Parent ( ) ;
rank: 886
score: 99.03912908380681
patch: rvalue = parent . get CaMeL Type ( ) ;
rank: 886
score: 99.02741033380681
patch: switch ( n . has CaMeL Type ( ) )
rank: 886
score: 98.90622360641892
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) ) {
rank: 886
score: 98.803955078125
patch: switch get CaMeL Type ( parent ) {
rank: 886
score: 98.77607945033482
patch: type = Type . OTHER ;
rank: 887
score: 99.05901544744319
patch: type = name . to CaMeL String ( ) ;
rank: 887
score: 98.92595757378473
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( ) . to CaMeL String ( ) ) ; }
rank: 887
score: 98.90550438133445
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . length ( ) == 0 )
rank: 887
score: 98.86888427734375
patch: if ( parent != null ) { return ;
rank: 887
score: 98.84017944335938
patch: switch ( ! is CaMeL Set )
rank: 887
score: 98.78830295138889
patch: do . get CaMeL Type ( ) ;
rank: 887
score: 98.77476283482143
patch: if ( is CaMeL Global )
rank: 888
score: 98.92579520089286
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( Type . TYPE ) ) {
rank: 888
score: 98.90549118454392
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) , parent . get CaMeL Type ( ) ) ;
rank: 888
score: 98.86318359375
patch: if ( parent == null ) { ) {
rank: 888
score: 98.83937581380208
patch: if ( is CaMeL Set ) return ;
rank: 888
score: 98.77370876736111
patch: if ( parent != n ) { {
rank: 889
score: 99.05526733398438
patch: target = parent . get CaMeL Type ( ) ; }
rank: 889
score: 98.92574637276786
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) . equals ( $STRING$ ) ) {
rank: 889
score: 98.90525124289773
patch: value = parent . get CaMeL Name ( ) ;
rank: 889
score: 98.86134847005208
patch: switch ( type ) { / * /
rank: 889
score: 98.83286539713542
patch: super . is CaMeL Set = true ;
rank: 889
score: 98.77691650390625
patch: if ( parent == parent ) {
rank: 889
score: 98.76863606770833
patch: type = Name . STRING _ KEY ;
rank: 890
score: 98.92517438616072
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return {
rank: 890
score: 98.90474660773026
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) )
rank: 890
score: 98.85193481445313
patch: switch ( type ) { / / * /
rank: 890
score: 98.82249620225694
patch: else { is CaMeL Set = true ;
rank: 890
score: 98.76633029513889
patch: type = Name . Name . GET ;
rank: 890
score: 98.74658203125
patch: switch ( ( Type ) parent ) {
rank: 891
score: 99.05352783203125
patch: type = name . get CaMeL Id ( ) ; }
rank: 891
score: 99.02031915838069
patch: type = n . get CaMeL Next ( ) ;
rank: 891
score: 99.00698020241477
patch: switch ( parent ) { case Token . STRING :
rank: 891
score: 98.92447916666667
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 891
score: 98.9033267372533
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Type CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 891
score: 98.81945122612848
patch: if ( type != Name . Type )
rank: 891
score: 98.75956217447917
patch: type = Name . Type . INC ;
rank: 891
score: 98.73480224609375
patch: get CaMeL Type ( parent ) {
rank: 892
score: 99.05002663352273
patch: type = name . get CaMeL Id ( ) ;
rank: 892
score: 98.92370954241072
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . set CaMeL Type ( name ) ; } else {
rank: 892
score: 98.90283203125
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Qualified CaMeL Name ( ) , parent . get CaMeL Name ( ) ) ;
rank: 892
score: 98.84891357421876
patch: switch ( parent ) { / * * /
rank: 892
score: 98.8177490234375
patch: if ( is CaMeL Set ) { }
rank: 892
score: 98.75874159071181
patch: switch ( parent . get CaMeL Token CaMeL
rank: 892
score: 98.72772216796875
patch: switch ( parent instanceof Node ) {
rank: 893
score: 99.04718017578125
patch: type = name . to CaMeL String ( ) ; }
rank: 893
score: 98.92360491071429
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . length ( ) != 0 ) {
rank: 893
score: 98.90244140625
patch: if ( type . equals ( $STRING$ ) )
rank: 893
score: 98.84558783637152
patch: switch ( parent ) println ( ) ;
rank: 893
score: 98.81037055121527
patch: } if ( parent != null ) {
rank: 893
score: 98.75635443793402
patch: switch = Name . Type . FUNCTION ;
rank: 893
score: 98.72548421223958
patch: switch ( parent ) { case ) ;
rank: 894
score: 99.00224165482955
patch: try { name = Name . Type . OTHER ;
rank: 894
score: 98.92001425253379
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( this . get CaMeL String ( ) ) ) {
rank: 894
score: 98.90158913352273
patch: id = parent . get CaMeL Type ( ) ;
rank: 894
score: 98.84476318359376
patch: switch ( type ) { / * * /
rank: 894
score: 98.75493028428819
patch: if ( parent . parent != null )
rank: 895
score: 99.04666137695312
patch: type ( parent . get CaMeL Name ( ) ) ;
rank: 895
score: 99.00848943536931
patch: name = Name . Type . FUNCTION ; break ;
rank: 895
score: 99.001806640625
patch: int type = Name . Type . GET ;
rank: 895
score: 98.91992885044642
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Parent ( ) . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 895
score: 98.90136058910473
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) && ! is CaMeL Set )
rank: 895
score: 98.82313232421875
patch: / * if ( parent != null ) {
rank: 895
score: 98.80826822916667
patch: is CaMeL Set = true ; return ;
rank: 895
score: 98.75377739800348
patch: switch ( parent . get ( ) )
rank: 895
score: 98.70519341362848
patch: if ( parent == null ) return ;
rank: 896
score: 99.04010009765625
patch: flags = parent . get CaMeL Type ( ) ; }
rank: 896
score: 99.00371759588069
patch: type = Name . Type . FUNCTION ; return ;
rank: 896
score: 98.91926618303572
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . length ( ) <= 0 ) {
rank: 896
score: 98.90117853338069
patch: switch ( source . get CaMeL Type ( ) )
rank: 896
score: 98.81863403320312
patch: switch ( parent ) println ( parent ) {
rank: 896
score: 98.80697970920139
patch: is CaMeL Set = is CaMeL Set ;
rank: 896
score: 98.74785614013672
patch: if ( parent != parent ) {
rank: 897
score: 99.03474934895833
patch: name = name . get CaMeL Name ( ) ; }
rank: 897
score: 98.91925048828125
patch: parent . set CaMeL Type ( name ) ;
rank: 897
score: 98.90040382179055
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( name ) ) {
rank: 897
score: 98.81598510742188
patch: get CaMeL Value CaMeL Type ( parent ) ;
rank: 897
score: 98.7983627319336
patch: if ( value == null ) {
rank: 897
score: 98.74624972873264
patch: is CaMeL Set = true ; } }
rank: 897
score: 98.69827609592014
patch: return . get CaMeL Type ( ) ;
rank: 898
score: 99.02645874023438
patch: owner = parent . get CaMeL Parent ( ) ; }
rank: 898
score: 99.0123291015625
patch: switch ( get CaMeL Parent ( n ) ) {
rank: 898
score: 98.91863335503473
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 898
score: 98.9000577059659
patch: switch ( n . get CaMeL Type ( ) ;
rank: 898
score: 98.7975082397461
patch: if ( parent instanceof Node ) {
rank: 898
score: 98.74544949001736
patch: if ( is CaMeL Global CaMeL Scope )
rank: 898
score: 98.69772677951389
patch: switch ( parent ) { case ) ?
rank: 899
score: 99.02585856119792
patch: switch ( parent . get CaMeL Type ( ) . )
rank: 899
score: 98.91807725694444
patch: String type CaMeL Name = parent . get CaMeL Type CaMeL Name ( ) ; if ( parent . get CaMeL Type CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 899
score: 98.899658203125
patch: name = parent . get CaMeL Id ( ) ;
rank: 899
score: 98.81131998697917
patch: if ( parent == null ) return {
rank: 899
score: 98.79532199435764
patch: parent . get CaMeL Type ( ) .
rank: 899
score: 98.74174281529018
patch: if ( parent == null )
rank: 899
score: 98.69689178466797
patch: parent = ( Type ) parent {
rank: 900
score: 99.0258280436198
patch: name ( parent . get CaMeL Parent ( ) ) ;
rank: 900
score: 98.99857954545455
patch: type = n . get CaMeL String ( ) ;
rank: 900
score: 98.9935302734375
patch: int name = Name . Type . FUNCTION ;
rank: 900
score: 98.91670845650337
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 900
score: 98.89950644003379
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 900
score: 98.802880859375
patch: if ( ( parent == null ) ) {
rank: 900
score: 98.79448784722223
patch: try { is CaMeL Set = true ;
rank: 900
score: 98.69121551513672
patch: switch ( parent == null ) {
rank: 901
score: 99.0186767578125
patch: type = parent . get CaMeL Id ( ) ;
rank: 901
score: 98.9983797940341
patch: switch ( get CaMeL Value ( n ) ) {
rank: 901
score: 98.91576488597973
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 901
score: 98.8991198417468
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) ) {
rank: 901
score: 98.79359436035156
patch: } is CaMeL Set = true ;
rank: 901
score: 98.74055989583333
patch: set = Name . Type . FUNCTION ;
rank: 902
score: 98.91559516059027
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 902
score: 98.89862381784539
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( node ) == null )
rank: 902
score: 98.79801025390626
patch: switch ( name ) { / / * /
rank: 902
score: 98.79320610894098
patch: type = Name . Type . TYPE ;
rank: 902
score: 98.73876953125
patch: if ( parent instanceof Type ) {
rank: 902
score: 98.67917209201389
patch: if ( parent != null ) return )
rank: 903
score: 99.01365152994792
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 903
score: 98.98518676757813
patch: switch ( n . type ( ) ) {
rank: 903
score: 98.91550021701389
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 903
score: 98.89841530539773
patch: if ( parent . equals ( name ) ) {
rank: 903
score: 98.73599243164062
patch: type = Name . SET ; }
rank: 903
score: 98.66593424479167
patch: switch ( type ) { case ) {
rank: 904
score: 99.0134989420573
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 904
score: 98.9843417080966
patch: switch ( n ) { case Token . ASSIGN :
rank: 904
score: 98.91244845920139
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) return ;
rank: 904
score: 98.89803499788852
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( $STRING$ ) && is CaMeL Set ) {
rank: 904
score: 98.79684787326389
patch: switch ( name ) { / * /
rank: 904
score: 98.73592703683036
patch: type = Type . SET ;
rank: 904
score: 98.66246541341145
patch: switch ( null ) {
rank: 905
score: 99.01182047526042
patch: String ( parent . get CaMeL Name ( ) ) ;
rank: 905
score: 98.9840975674716
patch: switch ( parent . get CaMeL Modifiers ( ) )
rank: 905
score: 98.90999348958333
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) , parent . get CaMeL Name ( ) ) ; }
rank: 905
score: 98.8974609375
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ;
rank: 905
score: 98.79552612304687
patch: if ( parent != null ) return ) {
rank: 905
score: 98.78164672851562
patch: if ( n == null ) {
rank: 905
score: 98.66165500217014
patch: switch ( parent ) { case ) {
rank: 906
score: 98.98296564275569
patch: try { name = Name . Type . FUNCTION ;
rank: 906
score: 98.90997149493244
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) , parent . get CaMeL Name ( ) ) ;
rank: 906
score: 98.89728937922297
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . equals ( type ) ) {
rank: 906
score: 98.78502655029297
patch: switch ( parent ) { * /
rank: 906
score: 98.77376302083333
patch: parent . is CaMeL Set = true ;
rank: 906
score: 98.73147243923611
patch: switch ( n . get CaMeL Child CaMeL
rank: 907
score: 98.98987926136364
patch: parent . set CaMeL Name ( name ) ; }
rank: 907
score: 98.90926106770833
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) . to CaMeL String ( ) ) ; }
rank: 907
score: 98.89693306587837
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( node ) ) {
rank: 907
score: 98.77189636230469
patch: is CaMeL Set = false ; }
rank: 907
score: 98.72814263237848
patch: switch = Name . Type . OTHER ;
rank: 908
score: 98.97681884765625
patch: Type type = Name . Type . GET ;
rank: 908
score: 98.90854899088542
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Type ( ) , parent . get CaMeL Name ( ) ) ; }
rank: 908
score: 98.89586117393092
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ;
rank: 908
score: 98.76941680908203
patch: boolean is CaMeL Set = false ;
rank: 908
score: 98.72193145751953
patch: type = Name . GET ; }
rank: 908
score: 98.63052368164062
patch: switch ( is CaMeL Name ) {
rank: 909
score: 98.97953657670455
patch: name = name . get CaMeL Name ( ) ;
rank: 909
score: 98.90694173177083
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != Type . TYPE ) {
rank: 909
score: 98.89566617398648
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Declaring CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) ) ;
rank: 909
score: 98.76950412326389
patch: switch ( parent ) println ( ) {
rank: 909
score: 98.76886664496527
patch: this . is CaMeL Set = true ;
rank: 909
score: 98.72036404079861
patch: type = Name . OTHER ; } }
rank: 909
score: 98.62737274169922
patch: super . switch ( parent ) ;
rank: 910
score: 98.971435546875
patch: switch ( get CaMeL String ( parent ) ) {
rank: 910
score: 98.96961558948864
patch: Type ( parent . get CaMeL Type ( ) )
rank: 910
score: 98.90661291173987
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 910
score: 98.8937737880609
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 910
score: 98.76742892795139
patch: if ( type == Name . Type )
rank: 910
score: 98.75889369419643
patch: if ( parent != ) {
rank: 910
score: 98.71909586588542
patch: if ( parent . get CaMeL Token CaMeL
rank: 910
score: 98.62275695800781
patch: switch ( parent . parent ) {
rank: 911
score: 98.96950276692708
patch: switch parent . get CaMeL Type ( )
rank: 911
score: 98.96901245117188
patch: int name = Name . Type . OTHER ;
rank: 911
score: 98.96802867542614
patch: switch ( type ) { case Token . STRING :
rank: 911
score: 98.90657552083333
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 911
score: 98.8930728310033
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 911
score: 98.76445855034723
patch: if ( parent != null ) break ;
rank: 911
score: 98.71779378255208
patch: parent . get CaMeL Parent ( ) ;
rank: 911
score: 98.62031555175781
patch: if ( parent == type ) {
rank: 912
score: 98.96683349609376
patch: switch ( parent . equals ( $STRING$ ) )
rank: 912
score: 98.90580240885417
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) != Type . TYPE ) {
rank: 912
score: 98.89156943873355
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) == null )
rank: 912
score: 98.74210902622768
patch: type = Name . Type ;
rank: 912
score: 98.74062093098958
patch: switch ( $STRING$ ) { / * /
rank: 913
score: 98.96701882102273
patch: target = parent . get CaMeL Parent ( ) ;
rank: 913
score: 98.96654163707386
patch: switch ( get CaMeL Type ( module ) ) {
rank: 913
score: 98.90568253800676
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 913
score: 98.8911884014423
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Type CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 913
score: 98.73509979248047
patch: switch ( type ) { * /
rank: 913
score: 98.72769165039062
patch: if ( parent instanceof Name ) {
rank: 913
score: 98.6073506673177
patch: switch ( name ) {
rank: 914
score: 98.96261596679688
patch: switch ( parent . type ) {
rank: 914
score: 98.905517578125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 914
score: 98.89098808092949
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n ) != null ) {
rank: 914
score: 98.87559204101562
patch: switch ( name . Type ( ) ) {
rank: 914
score: 98.73109944661458
patch: switch ( false ) { / * /
rank: 914
score: 98.72701263427734
patch: if ( node != null ) {
rank: 915
score: 98.96235795454545
patch: n = parent . get CaMeL Parent ( ) ;
rank: 915
score: 98.90519205729167
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . get CaMeL Type ( ) . clear ( ) ; }
rank: 915
score: 98.89028448807566
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( ) == null ) {
rank: 915
score: 98.72197614397321
patch: if ( parent == ) {
rank: 915
score: 98.71490478515625
patch: if ( ! is CaMeL Global )
rank: 915
score: 98.71257019042969
patch: name = Name . OTHER ; }
rank: 915
score: 98.58624267578125
patch: switch ( $STRING$ ) {
rank: 916
score: 98.9612704190341
patch: switch ( parent . get type ( ) ) {
rank: 916
score: 98.93113014914773
patch: parent . set CaMeL Type ( name ) ; }
rank: 916
score: 98.90487753378379
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( get CaMeL Type ( ) ) ) {
rank: 916
score: 98.88993112664474
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) != null )
rank: 916
score: 98.86603393554688
patch: switch ( name ) { default : return ;
rank: 916
score: 98.72184244791667
patch: String get CaMeL Type ( parent ) .
rank: 916
score: 98.71183558872768
patch: type = Name . GET ;
rank: 916
score: 98.70855712890625
patch: switch ( index ) {
rank: 916
score: 98.58197021484375
patch: switch ( this . parent ) {
rank: 917
score: 98.90333387586806
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == Type . TYPE ) {
rank: 917
score: 98.88778295272436
patch: switch ( n . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ; }
rank: 917
score: 98.70236206054688
patch: switch ( index ) { default :
rank: 917
score: 98.56937408447266
patch: super . add ( parent ) ;
rank: 918
score: 98.9601162997159
patch: if ( is CaMeL Global ( scope ) ) {
rank: 918
score: 98.90315077039931
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) . length ( ) > 0 ) {
rank: 918
score: 98.88735727163461
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Name ( ) ) ) {
rank: 918
score: 98.84372287326389
patch: rvalue = Name . Type . OTHER ;
rank: 918
score: 98.71179962158203
patch: get CaMeL Type ( parent ) .
rank: 918
score: 98.70249938964844
patch: type = Type . GET ; }
rank: 918
score: 98.70201873779297
patch: if ( is CaMeL Function ) {
rank: 918
score: 98.56698608398438
patch: switch ( member CaMeL Name ) {
rank: 919
score: 98.9600497159091
patch: switch ( parent . get CaMeL Type ( ) .
rank: 919
score: 98.91752485795455
patch: owner = parent . get CaMeL Parent ( ) ;
rank: 919
score: 98.90311008029514
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 919
score: 98.88723273026316
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( node ) != null )
rank: 919
score: 98.5654805501302
patch: switch ( false ) {
rank: 920
score: 98.9170254794034
patch: module = parent . get CaMeL Parent ( ) ;
rank: 920
score: 98.90291121199324
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( get CaMeL Type ( ) ) ) {
rank: 920
score: 98.70355224609375
patch: int get CaMeL Type ( parent ) .
rank: 920
score: 98.69538116455078
patch: break ; case Token . VAR :
rank: 920
score: 98.68865966796875
patch: type = Type . GET ;
rank: 920
score: 98.55958557128906
patch: switch ( type != null ) {
rank: 921
score: 98.94784884982639
patch: switch ( parent . type ( ) )
rank: 921
score: 98.90051947699652
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Name ( ) , parent . get CaMeL Type ( ) ) ; }
rank: 921
score: 98.9001220703125
patch: switch ( get CaMeL Scope ( ) ) {
rank: 921
score: 98.89266967773438
patch: type = Name . Type ; break ; }
rank: 921
score: 98.88617907072368
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . get CaMeL Class CaMeL Name ( ) . length ( ) == 0 ) {
rank: 921
score: 98.69894748263889
patch: switch ( type ) { = null {
rank: 921
score: 98.68765694754464
patch: if ( name == null )
rank: 921
score: 98.68417358398438
patch: if ( parent == n ) {
rank: 921
score: 98.55803680419922
patch: switch ( type , parent ) {
rank: 922
score: 98.90020751953125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) != Type . TYPE ) {
rank: 922
score: 98.88465640419408
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) != null )
rank: 922
score: 98.69853379991319
patch: System . out . println ( ) ;
rank: 922
score: 98.68020629882812
patch: if ( scope != null ) {
rank: 922
score: 98.67961774553571
patch: if ( parent instanceof Scope )
rank: 922
score: 98.55526733398438
patch: parent = ( Node ) parent {
rank: 923
score: 98.90009901258681
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) == Type . TYPE ) {
rank: 923
score: 98.88416812294408
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( name . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) )
rank: 923
score: 98.88214111328125
patch: parent . set CaMeL Name ( name ) ;
rank: 923
score: 98.69481549944196
patch: switch ( parent ) { *
rank: 923
score: 98.67356654575893
patch: type = Name . SET ;
rank: 923
score: 98.67218780517578
patch: break ; case Token . GETPROP :
rank: 923
score: 98.55419921875
patch: . get CaMeL Type ( ) ;
rank: 924
score: 98.93086547851563
patch: switch n . get CaMeL Type ( ) {
rank: 924
score: 98.90009223090277
patch: if ( parent . get CaMeL Type ( ) != parent . get CaMeL Type ( ) && parent . get CaMeL String CaMeL Value ( ) . length ( ) == 0 ) {
rank: 924
score: 98.88217644942434
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) == null )
rank: 924
score: 98.87697143554688
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 924
score: 98.66860961914062
patch: switch ( has CaMeL Type ) {
rank: 925
score: 98.92999267578125
patch: int type = Name . Type . GETPROP ;
rank: 925
score: 98.89932590060764
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 925
score: 98.881591796875
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ;
rank: 925
score: 98.77714029947917
patch: rvalue = Name . Type . FUNCTION ;
rank: 925
score: 98.66353062220982
patch: switch ( is CaMeL Set )
rank: 925
score: 98.66349029541016
patch: switch ( n != null ) {
rank: 925
score: 98.54818289620536
patch: this . parent = parent ;
rank: 926
score: 98.92766723632812
patch: Type type = Name . Type . SET ;
rank: 926
score: 98.89852987753379
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 926
score: 98.8810784755609
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) . equals ( name ) )
rank: 926
score: 98.86717987060547
patch: type = Name . Type ; }
rank: 926
score: 98.67978244357639
patch: switch ( type ) { = null ;
rank: 926
score: 98.65774536132812
patch: name = Name . FUNCTION ; }
rank: 926
score: 98.65618896484375
patch: if ( key == null ) {
rank: 926
score: 98.54549734933036
patch: switch ( ( parent ) ;
rank: 927
score: 98.89809438344595
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ;
rank: 927
score: 98.8802959735577
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( parent . get CaMeL Class CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 927
score: 98.86473388671875
patch: switch ( get CaMeL Name ( parent ) )
rank: 927
score: 98.86253662109375
patch: switch ( get CaMeL Module ( ) ) {
rank: 927
score: 98.77424452039931
patch: type = Name . Type . FALSE ;
rank: 927
score: 98.67612033420139
patch: switch ( true ) { / * /
rank: 927
score: 98.6537857055664
patch: if ( value != null ) {
rank: 927
score: 98.64991106305804
patch: name = Name . FUNCTION ;
rank: 927
score: 98.53832244873047
patch: switch ( base CaMeL Type ) {
rank: 928
score: 98.8965965477196
patch: if ( parent . get CaMeL Class ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ) {
rank: 928
score: 98.88005628083882
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) && ! is CaMeL Set ) {
rank: 928
score: 98.64824567522321
patch: if ( parent != parent )
rank: 928
score: 98.64328002929688
patch: else is CaMeL Set = true ;
rank: 928
score: 98.52241734095982
patch: if ( parent == parent )
rank: 929
score: 98.90699462890625
patch: if ( parent . get CaMeL Type ( )
rank: 929
score: 98.89622667100694
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL All ( parent . get CaMeL Qualified CaMeL Name ( parent . get CaMeL Name ( ) ) ) ;
rank: 929
score: 98.87998923277243
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NAME : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ; }
rank: 929
score: 98.66425916883681
patch: if ( parent != null ) { do
rank: 929
score: 98.48856608072917
patch: switch ( true ) {
rank: 930
score: 98.89340952280405
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class CaMeL Name ( ) , parent . get CaMeL Type ( ) ) ;
rank: 930
score: 98.879150390625
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , ) ) {
rank: 930
score: 98.80514187282986
patch: type = Name . Type ; break ;
rank: 930
score: 98.64002227783203
patch: switch ( type ) { default :
rank: 930
score: 98.6303482055664
patch: if ( parent instanceof null ) {
rank: 930
score: 98.45425851004464
patch: switch ( parent == null )
rank: 931
score: 98.8917137352196
patch: if ( parent . get CaMeL Type ( ) != null && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( this . get CaMeL Type ( ) ) ) {
rank: 931
score: 98.87839918870192
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( type . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class ( ) ) ) {
rank: 931
score: 98.632568359375
patch: if ( type != null )
rank: 931
score: 98.62826102120536
patch: name = Name . OTHER ;
rank: 931
score: 98.4454854329427
patch: switch ( 1 ) {
rank: 932
score: 98.89320068359375
patch: Type name = Name . Type . OTHER ;
rank: 932
score: 98.89141845703125
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Value CaMeL Type ( ) == Type . TYPE ) {
rank: 932
score: 98.87691457648026
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent ) == ) {
rank: 932
score: 98.76382785373264
patch: switch ( get CaMeL Type ( ) )
rank: 932
score: 98.66082085503473
patch: parent . set CaMeL Type ( ) {
rank: 932
score: 98.63108825683594
patch: break ; case Token . NAME :
rank: 932
score: 98.62349155970982
patch: if ( parent instanceof Type )
rank: 932
score: 98.44005126953125
patch: switch ( parent )
rank: 933
score: 98.89111328125
patch: switch ( parent . get CaMeL Type ( ) ) { n . get CaMeL Class ( ) . set CaMeL Name ( parent . get CaMeL Name ( ) ) ; } else {
rank: 933
score: 98.88797607421876
patch: String name = Name . Type . OTHER ;
rank: 933
score: 98.82179565429688
patch: switch ( get CaMeL Name ( ) ) {
rank: 933
score: 98.6599349975586
patch: if ( parent instanceof String ) {
rank: 933
score: 98.63072204589844
patch: if ( has CaMeL Type ) {
rank: 933
score: 98.43865966796875
patch: switch ( id ) {
rank: 934
score: 98.89067247178819
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { }
rank: 934
score: 98.8760016025641
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( node ) == null ) {
rank: 934
score: 98.69241672092014
patch: type = Name . Type . NULL ;
rank: 934
score: 98.65422058105469
patch: switch ( name ) { * /
rank: 934
score: 98.61665344238281
patch: else if ( parent != null )
rank: 934
score: 98.43149820963542
patch: switch ( 0 ) {
rank: 935
score: 98.89022249788852
patch: if ( parent . get CaMeL String ( ) != null && parent . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Type ( ) ) ) {
rank: 935
score: 98.87456805889423
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . class : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Type ( ) ) ; }
rank: 935
score: 98.60885620117188
patch: switch ( $STRING$ ) { * /
rank: 935
score: 98.60426548549107
patch: if ( parent instanceof Node )
rank: 935
score: 98.414794921875
patch: super . switch ( parent )
rank: 936
score: 98.89016971072635
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL String CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return {
rank: 936
score: 98.87603149414062
patch: Type name = Name . Type . FUNCTION ;
rank: 936
score: 98.67539469401042
patch: type = name . type ( ) ;
rank: 936
score: 98.60843658447266
patch: switch ( false ) { * /
rank: 936
score: 98.59452819824219
patch: switch ( ! is CaMeL Global )
rank: 937
score: 98.88917335304055
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 937
score: 98.87467651367187
patch: String name = Name . Type . FUNCTION ;
rank: 937
score: 98.86728515625
patch: switch ( name . length ( ) ) {
rank: 937
score: 98.67486572265625
patch: type ( parent , parent ) ; }
rank: 937
score: 98.67046356201172
patch: switch ( parent . null ) {
rank: 937
score: 98.54464285714286
patch: if ( n == null )
rank: 937
score: 98.39469691685268
patch: if ( parent == type )
rank: 938
score: 98.88878716362848
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { parent . get CaMeL Type ( ) . set CaMeL Type ( name ) ;
rank: 938
score: 98.86578525641026
patch: name = parent . get CaMeL Type ( ) . get CaMeL Name ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , name ) == null ) {
rank: 938
score: 98.86287841796874
patch: int type = Name . Type . INC ;
rank: 938
score: 98.67217339409723
patch: switch ( get CaMeL Name ( ) )
rank: 938
score: 98.59593200683594
patch: while ( parent != null ) {
rank: 938
score: 98.39231363932292
patch: switch ( value ) {
rank: 939
score: 98.86458333333333
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( name ) == null ) {
rank: 939
score: 98.75737762451172
patch: switch ( n == null ) {
rank: 939
score: 98.59371948242188
patch: if ( type == null ) {
rank: 939
score: 98.580322265625
patch: switch ( name ) { default :
rank: 939
score: 98.53882853190105
patch: if ( set ) {
rank: 939
score: 98.39189801897321
patch: switch ( parent != null )
rank: 940
score: 98.88663736979167
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE && parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { return ; }
rank: 940
score: 98.86190404647436
patch: name = parent . get CaMeL Name ( ) . to CaMeL Lower CaMeL Case ( ) ; if ( get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent , type ) ) {
rank: 940
score: 98.8565444946289
patch: switch ( parent . name ) {
rank: 940
score: 98.67124430338542
patch: type = Name . Type . NONE ;
rank: 940
score: 98.57078334263393
patch: if ( is CaMeL Function )
rank: 940
score: 98.53464181082589
patch: if ( value == null )
rank: 940
score: 98.38230387369792
patch: parent ( parent ) ;
rank: 941
score: 98.88630964949324
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL Qualified CaMeL Name ( ) . equals ( name ) ) {
rank: 941
score: 98.86018880208333
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( parent . get CaMeL Type ( ) ) ; }
rank: 941
score: 98.66956329345703
patch: name ( parent , parent ) ;
rank: 941
score: 98.65846252441406
patch: switch ( parent instanceof Type ) {
rank: 941
score: 98.56111907958984
patch: type = Type . STRING ; }
rank: 941
score: 98.53102329799107
patch: is CaMeL Get = true ;
rank: 941
score: 98.37010701497395
patch: switch ( source ) {
rank: 942
score: 98.88622387035473
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Class CaMeL Name ( ) , parent . get CaMeL Name ( ) ) ;
rank: 942
score: 98.836962890625
patch: Class type = Name . Type . OTHER ;
rank: 942
score: 98.66937934027777
patch: name ( parent , parent ) ; }
rank: 942
score: 98.56065150669643
patch: if ( parent == n )
rank: 942
score: 98.49036516462054
patch: if ( n != null )
rank: 942
score: 98.36946614583333
patch: synchronized ( parent ) {
rank: 943
score: 98.88559702280405
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Class ( ) . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 943
score: 98.85963792067308
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . NONE : get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Parent ( ) ) ; }
rank: 943
score: 98.66029866536458
patch: type = ( Node ) parent ; }
rank: 943
score: 98.53145926339286
patch: switch ( type ) { *
rank: 943
score: 98.3578389485677
patch: switch ( $NUMBER$ ) {
rank: 944
score: 98.8595690604968
patch: switch ( parent . get CaMeL Type ( ) ) { equals CaMeL Ignore CaMeL Case ( parent . get CaMeL Class CaMeL Name ( ) , parent . get CaMeL Class CaMeL Name ( ) ) ;
rank: 944
score: 98.65997314453125
patch: name ( parent , name ) ;
rank: 944
score: 98.52090890066964
patch: if ( parent instanceof null )
rank: 945
score: 98.85617065429688
patch: switch ( parent . equals ( name ) )
rank: 945
score: 98.80136447482639
patch: switch ( parent . name ( ) )
rank: 945
score: 98.65687391493056
patch: switch ( n . get ( ) )
rank: 945
score: 98.62911987304688
patch: switch ( parent instanceof Scope ) {
rank: 945
score: 98.51694161551339
patch: switch ( is CaMeL Global )
rank: 945
score: 98.4453125
patch: switch ( name ) { *
rank: 945
score: 98.34767368861607
patch: switch ( parent != ) {
rank: 946
score: 98.87959248310811
patch: switch ( parent . get CaMeL Type ( ) ) { iterator . add CaMeL Value ( parent . get CaMeL Qualified CaMeL Name ( ) , parent . get CaMeL Type ( ) ) ;
rank: 946
score: 98.8359375
patch: is CaMeL Set = false ; } return ;
rank: 946
score: 98.79453531901042
patch: if ( name == null ) return ;
rank: 946
score: 98.50787353515625
patch: name = Type . FUNCTION ;
rank: 946
score: 98.45737711588542
patch: if ( false ) {
rank: 946
score: 98.34586879185268
patch: switch ( - 1 ) {
rank: 947
score: 98.87874788851352
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE && parent . get CaMeL Type ( ) . get CaMeL String CaMeL Value ( ) . equals ( $STRING$ ) ) {
rank: 947
score: 98.45629010881696
patch: if ( name != null )
rank: 947
score: 98.40853445870536
patch: switch ( ) { * /
rank: 947
score: 98.33769008091518
patch: switch ( parent == ) {
rank: 948
score: 98.87536291173987
patch: if ( parent . get CaMeL Type ( ) == Type . TYPE || parent . get CaMeL Type ( ) . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 948
score: 98.78155517578125
patch: switch ( n . type ) {
rank: 948
score: 98.70471869574652
patch: type = String . Type . OTHER ;
rank: 948
score: 98.62384033203125
patch: type ( parent , parent ) ;
rank: 948
score: 98.62015533447266
patch: switch ( old CaMeL Name ) {
rank: 948
score: 98.38318888346355
patch: init ( parent ) ;
rank: 948
score: 98.3302001953125
patch: switch ( parent ) return ;
rank: 949
score: 98.87465028505068
patch: if ( parent . get CaMeL Type ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) { this . parent . get CaMeL Parent CaMeL Node ( ) . clear ( ) ;
rank: 949
score: 98.81085205078125
patch: type = get CaMeL Type ( parent ) ;
rank: 949
score: 98.49457659040179
patch: type = Type . STRING ;
rank: 949
score: 98.44513811383929
patch: is CaMeL Set = null ;
rank: 949
score: 98.3702392578125
patch: if ( true ) {
rank: 949
score: 98.31751360212054
patch: switch $NUMBER$ ( parent ) {
rank: 950
score: 98.87394425675676
patch: if ( parent . get CaMeL Type ( ) != Type . TYPE || parent . get CaMeL Class ( ) . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 950
score: 98.77227105034723
patch: switch ( parent . length ( ) )
rank: 950
score: 98.55876922607422
patch: type ( parent , name ) ;
rank: 950
score: 98.36882672991071
patch: if ( type != ) {
rank: 950
score: 98.31170043945312
patch: switch ( ) {
rank: 951
score: 98.46527971540179
patch: name = Type . OTHER ;
rank: 951
score: 98.4076436360677
patch: case Token . VAR :
rank: 951
score: 98.36543782552083
patch: start ( parent ) ;
rank: 951
score: 98.30649820963542
patch: switch ( prefix ) {
rank: 952
score: 98.53312683105469
patch: type = name ( parent ) ;
rank: 952
score: 98.45133754185268
patch: if ( is CaMeL Object )
rank: 952
score: 98.35821533203125
patch: check ( parent ) ;
rank: 952
score: 98.29083251953125
patch: switch ( level ) {
rank: 953
score: 98.79238552517361
patch: is CaMeL Set = false ; break ;
rank: 953
score: 98.64437103271484
patch: switch ( Node . NAME ) {
rank: 953
score: 98.5275650024414
patch: switch get CaMeL Type ( parent )
rank: 953
score: 98.44301932198661
patch: if ( node != null )
rank: 953
score: 98.3395487467448
patch: switch ( count ) {
rank: 953
score: 98.33506266276042
patch: switch ( parent ) throws
rank: 954
score: 98.51885986328125
patch: type = Name . Type ; )
rank: 954
score: 98.44151960100446
patch: type = Name . VAR ;
rank: 954
score: 98.33772786458333
patch: if ( collect ) {
rank: 954
score: 98.27479044596355
patch: parent = parent ) ;
rank: 955
score: 98.85706244574652
patch: if ( ! is CaMeL Array ) {
rank: 955
score: 98.74947102864583
patch: switch ( parent . size ( ) )
rank: 955
score: 98.43644496372768
patch: if ( scope != null )
rank: 955
score: 98.23839314778645
patch: delete ( parent ) ;
rank: 956
score: 98.8519775390625
patch: if ( type instanceof Object [ ] ) {
rank: 956
score: 98.22324625651042
patch: switch ( target ) {
rank: 957
score: 98.46658761160714
patch: if ( parent != this )
rank: 957
score: 98.24814860026042
patch: if ( null ) {
rank: 957
score: 98.21290079752605
patch: reset ( parent ) ;
rank: 958
score: 98.613037109375
patch: break ; case Token . FUNCTION :
rank: 958
score: 98.4512939453125
patch: switch ( parent . type )
rank: 958
score: 98.40863909040179
patch: type = Type . VAR ;
rank: 958
score: 98.32213338216145
patch: switch ( key ) {
rank: 959
score: 98.72820366753473
patch: switch ( n . type ( ) )
rank: 959
score: 98.45010811941964
patch: type = name ) ; }
rank: 959
score: 98.3951416015625
patch: if ( parent instanceof Name )
rank: 959
score: 98.2198486328125
patch: switch ( this ) {
rank: 960
score: 98.44425746372768
patch: type = Name . ) ;
rank: 960
score: 98.39010184151786
patch: while ( parent != null )
rank: 960
score: 98.21366373697917
patch: if ( parent ) {
rank: 960
score: 98.18702189127605
patch: push ( parent ) ;
rank: 961
score: 98.70766194661458
patch: switch ( parent . type 1 ) {
rank: 961
score: 98.66187201605902
patch: switch ( name . length ( ) )
rank: 961
score: 98.38742501395089
patch: switch ( name ) { }
rank: 962
score: 98.70701599121094
patch: switch ( parent == n ) {
rank: 962
score: 98.43307495117188
patch: type = name ; }
rank: 962
score: 98.38021414620536
patch: type = Name . EMPTY ;
rank: 962
score: 98.25281778971355
patch: switch ( n ) {
rank: 962
score: 98.1808573404948
patch: resolve ( parent ) ;
rank: 962
score: 98.17874145507812
patch: parent ( parent ) {
rank: 963
score: 98.82596164279514
patch: switch ( type ) { { * /
rank: 963
score: 98.3968505859375
patch: name ( parent ) ; }
rank: 963
score: 98.37526157924107
patch: if ( n != parent )
rank: 963
score: 98.2456766764323
patch: case Token . GETPROP :
rank: 963
score: 98.17654418945312
patch: case * * * /
rank: 963
score: 98.1737060546875
patch: switch ( default ) {
rank: 964
score: 98.82431030273438
patch: if ( this . parent != null ) {
rank: 964
score: 98.64604187011719
patch: if ( is CaMeL Set ) )
rank: 964
score: 98.54895782470703
patch: switch ( is CaMeL Global ) {
rank: 964
score: 98.37447509765624
patch: switch ( name )
rank: 964
score: 98.34835815429688
patch: type = name ) ;
rank: 964
score: 98.17124430338542
patch: check ( parent ) {
rank: 965
score: 98.81420220269098
patch: parent . get CaMeL Name ( ) ;
rank: 965
score: 98.35539899553571
patch: name = Type . SET ;
rank: 965
score: 98.22726440429688
patch: switch ( length ) {
rank: 965
score: 98.17010498046875
patch: load ( parent ) ;
rank: 966
score: 98.81048583984375
patch: switch ( type ) { * * /
rank: 966
score: 98.62974548339844
patch: boolean is CaMeL Global = true ;
rank: 966
score: 98.34728131975446
patch: if ( parent != module )
rank: 966
score: 98.34370640345982
patch: type = Name . STRING ;
rank: 967
score: 98.62434387207031
patch: switch ( parent . id ) {
rank: 967
score: 98.34398542131696
patch: type ( parent ) ; }
rank: 967
score: 98.19773356119792
patch: name = null ; }
rank: 967
score: 98.14736938476562
patch: copy ( parent ) ;
rank: 967
score: 98.1160888671875
patch: start ( parent ) {
rank: 968
score: 98.62416076660156
patch: boolean is CaMeL Global = false ;
rank: 968
score: 98.36344691685268
patch: if ( parent instanceof Class )
rank: 968
score: 98.34054129464286
patch: type = Name . type ;
rank: 968
score: 98.33415004185268
patch: type = Name . FALSE ;
rank: 968
score: 98.192138671875
patch: return ; }
rank: 968
score: 98.14234415690105
patch: pop ( parent ) ;
rank: 969
score: 98.3408711751302
patch: switch ( namespace ) {
rank: 969
score: 98.33570207868304
patch: init ( parent ) ; }
rank: 969
score: 98.18658447265625
patch: if ( matches ) {
rank: 969
score: 98.10926310221355
patch: clear ( parent ) ;
rank: 969
score: 98.10922241210938
patch: process ( parent ) ;
rank: 970
score: 98.593994140625
patch: switch ( parent . start ) {
rank: 970
score: 98.22428385416667
patch: if ( parent != null
rank: 970
score: 98.17805989583333
patch: switch ( mode ) {
rank: 970
score: 98.10770670572917
patch: next ( parent ) ;
rank: 970
score: 98.0947265625
patch: name ( parent ) ;
rank: 971
score: 98.31472342354911
patch: type = name . ) ;
rank: 971
score: 98.21134033203126
patch: switch ( type )
rank: 971
score: 98.20364379882812
patch: switch ( scope ) {
rank: 971
score: 98.1706034342448
patch: switch ( size ) {
rank: 971
score: 98.09248860677083
patch: init ( parent ) {
rank: 972
score: 98.53970336914062
patch: if ( parent instanceof Function ) {
rank: 972
score: 98.19325764973958
patch: type = null ; }
rank: 972
score: 98.17017618815105
patch: switch ( column ) {
rank: 972
score: 98.0913330078125
patch: parent = null {
rank: 973
score: 98.14578857421876
patch: name = null ;
rank: 974
score: 98.5710220336914
patch: switch ( parent . scope ) {
rank: 974
score: 98.14213256835937
patch: switch ( index )
rank: 974
score: 98.09552001953125
patch: if ( parent != )
rank: 974
score: 98.09128824869792
patch: initialize ( parent ) ;
rank: 974
score: 98.08516438802083
patch: stop ( parent ) ;
rank: 975
score: 98.73971121651786
patch: switch ( type ) { null
rank: 975
score: 98.2020975748698
patch: name = name ) ;
rank: 975
score: 98.15701293945312
patch: switch ( code ) {
rank: 975
score: 98.13575236002605
patch: switch ( end ) {
rank: 975
score: 98.08946736653645
patch: dispose ( parent ) ;
rank: 975
score: 98.07266235351562
patch: case * * / /
rank: 975
score: 98.03639729817708
patch: for ( ; ; )
rank: 976
score: 98.73389350043402
patch: if ( parent instanceof Object $NUMBER$ ) {
rank: 976
score: 98.15049235026042
patch: switch ( lang ) {
rank: 976
score: 98.1298319498698
patch: switch ( TYPE ) {
rank: 976
score: 98.08673095703125
patch: switch ( info ) {
rank: 976
score: 98.0471435546875
patch: parent != null ;
rank: 976
score: 98.0223388671875
patch: type = $STRING$ ; }
rank: 977
score: 98.72859700520833
patch: switch ( type ) { null * /
rank: 977
score: 98.15587361653645
patch: type ( parent ) ;
rank: 977
score: 98.12540690104167
patch: switch ( NAME ) {
rank: 977
score: 98.07785034179688
patch: switch ( function ) {
rank: 977
score: 97.96829833984376
patch: parent = null ;
rank: 978
score: 98.15370686848958
patch: name = name ; }
rank: 978
score: 98.07491048177083
patch: switch ( property ) {
rank: 978
score: 98.05020751953126
patch: if ( set )
rank: 978
score: 97.930322265625
patch: switch ( name .
rank: 978
score: 97.92053985595703
patch: / * /
rank: 979
score: 98.68799591064453
patch: if ( is CaMeL Array ) {
rank: 979
score: 98.00104370117188
patch: type = null ;
rank: 979
score: 97.878955078125
patch: parent = ) {
rank: 979
score: 97.8606201171875
patch: switch ( null )
rank: 980
score: 98.68415069580078
patch: if ( type instanceof Type ) {
rank: 980
score: 98.08604736328125
patch: switch ( scope )
rank: 980
score: 97.99639282226562
patch: if ( false )
rank: 980
score: 97.85040283203125
patch: parent = ) ;
rank: 981
score: 98.42195347377232
patch: switch ( parent == n )
rank: 981
score: 98.04996337890626
patch: type = name ;
rank: 981
score: 97.976708984375
patch: set = null ;
rank: 981
score: 97.7923095703125
patch: clear ( ) ;
rank: 981
score: 97.75860595703125
patch: if ( true )
rank: 982
score: 98.05894165039062
patch: switch ( n )
rank: 982
score: 97.96636962890625
patch: switch ( id )
rank: 982
score: 97.778515625
patch: / * ) /
rank: 982
score: 97.754736328125
patch: switch ( class CaMeL
rank: 983
score: 98.62886810302734
patch: if ( type != parent ) {
rank: 983
score: 98.01188151041667
patch: String ( name ) ;
rank: 983
score: 97.75833740234376
patch: case * * /
rank: 984
score: 98.62521362304688
patch: if ( current != null ) {
rank: 984
score: 98.04361979166667
patch: prepare ( parent ) ;
rank: 984
score: 97.86736297607422
patch: break ; }
rank: 984
score: 97.74375
patch: m * * /
rank: 984
score: 97.7128173828125
patch: type = $STRING$ ;
rank: 985
score: 98.00357055664062
patch: type = name ; )
rank: 985
score: 97.96100463867188
patch: switch ( value )
rank: 985
score: 97.69801025390625
patch: / * * /
rank: 985
score: 97.6716796875
patch: switch ( set )
rank: 986
score: 98.58010428292411
patch: switch ( type ) { }
rank: 986
score: 97.9546875
patch: switch ( ) ;
rank: 986
score: 97.93693237304687
patch: switch ( key )
rank: 986
score: 97.64531707763672
patch: String ) *
rank: 987
score: 98.22639973958333
patch: String name = null ;
rank: 987
score: 97.92568359375
patch: if ( parent )
rank: 987
score: 97.85092163085938
patch: switch ( $STRING$ )
rank: 987
score: 97.53511047363281
patch: / * )
rank: 988
score: 98.47994559151786
patch: switch ( type ) { :
rank: 988
score: 97.95689086914062
patch: switch ( count )
rank: 988
score: 97.82628173828125
patch: set = true ;
rank: 988
score: 97.63370971679687
patch: break ; default :
rank: 988
score: 97.42070007324219
patch: m * /
rank: 989
score: 98.13028971354167
patch: Type type = null ;
rank: 989
score: 97.88087158203125
patch: return ) ; }
rank: 989
score: 97.79154663085937
patch: return ; } }
rank: 989
score: 97.78228759765625
patch: fail ( ) ;
rank: 989
score: 97.73966217041016
patch: for ( )
rank: 989
score: 97.40940856933594
patch: int ) *
rank: 990
score: 98.45738002232143
patch: switch ( name ) { null
rank: 990
score: 97.7622802734375
patch: found = true ;
rank: 990
score: 97.73851928710937
patch: pop ( ) ;
rank: 990
score: 97.27008819580078
patch: return ) {
rank: 991
score: 97.79991455078125
patch: name = name ;
rank: 991
score: 97.72740478515625
patch: parent = parent {
rank: 991
score: 97.7158203125
patch: parent = parent ;
rank: 991
score: 97.26950073242188
patch: throw ) ;
rank: 992
score: 98.10984293619792
patch: int name = null ;
rank: 992
score: 97.7711669921875
patch: switch ( false )
rank: 992
score: 97.70656127929688
patch: parent = false ;
rank: 992
score: 97.6751220703125
patch: type = parent ;
rank: 992
score: 97.5924560546875
patch: type = TRUE ;
rank: 992
score: 97.26148223876953
patch: return ) ;
rank: 993
score: 98.10891723632812
patch: int type = null ;
rank: 993
score: 97.74085693359375
patch: if ( collect )
rank: 993
score: 97.70184326171875
patch: switch ( prefix )
rank: 993
score: 97.66506958007812
patch: return parent ; }
rank: 993
score: 97.59235229492188
patch: type = FALSE ;
rank: 993
score: 97.17863464355469
patch: int ) {
rank: 994
score: 97.6880126953125
patch: parent = true ;
rank: 994
score: 97.58455200195313
patch: switch ( is CaMeL
rank: 994
score: 97.36195373535156
patch: if ( }
rank: 994
score: 97.22867584228516
patch: } return ;
rank: 994
score: 97.16786193847656
patch: throw parent ;
rank: 995
score: 97.66268920898438
patch: parent = type {
rank: 995
score: 97.61792602539063
patch: type = name )
rank: 995
score: 97.6003173828125
patch: switch ( 0 )
rank: 995
score: 97.53733520507812
patch: log ( ) .
rank: 995
score: 97.33121490478516
patch: switch ( }
rank: 995
score: 97.22602844238281
patch: switch ( )
rank: 995
score: 97.15663146972656
patch: } else {
rank: 996
score: 98.18653361002605
patch: if ( type ) {
rank: 996
score: 97.16893005371094
patch: String name ;
rank: 996
score: 97.13855743408203
patch: case * /
rank: 997
score: 97.588037109375
patch: switch ( size )
rank: 997
score: 97.1353530883789
patch: break ) {
rank: 997
score: 97.08246612548828
patch: switch ++ ;
rank: 997
score: 97.07496643066406
patch: for ( boolean
rank: 997
score: 97.04322814941406
patch: if ( )
rank: 997
score: 96.48366292317708
patch: try {
rank: 997
score: 96.460205078125
patch: return ;
rank: 998
score: 97.58038940429688
patch: switch ( start )
rank: 998
score: 97.1369400024414
patch: switch ) {
rank: 998
score: 96.32395426432292
patch: / *
rank: 998
score: 96.26033528645833
patch: for (
rank: 999
score: 96.16684977213542
patch: break ;
rank: 999
score: 94.09413146972656
patch: else
rank: 1000
score: 96.98800659179688
patch: return parent ;
rank: 1000
score: 95.2027587890625
patch: do
rank: 1000
score: 94.27122497558594
patch: }
