rank: 1
score: 99.85796649639423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 1
score: 99.84842623197116
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 1
score: 99.84110440340909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 1
score: 99.83791588092673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 1
score: 99.81847272600446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 1
score: 99.79829846398304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 1
score: 99.79166052476415
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 1
score: 99.79145159040179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 2
score: 99.83788123497597
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 2
score: 99.8338134765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 2
score: 99.83003373579545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 2
score: 99.80844812225877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 2
score: 99.78856580010776
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 2
score: 99.78765980113636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 2
score: 99.78729654947917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 3
score: 99.837783203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 3
score: 99.8307861328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 3
score: 99.82064115084134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 3
score: 99.81826724646227
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 3
score: 99.8070292570153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 3
score: 99.79919647752193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 3
score: 99.788408203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 3
score: 99.7875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 3
score: 99.78567270132211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 4
score: 99.8368841677296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 4
score: 99.82915207435344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 4
score: 99.827392578125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 4
score: 99.81441945043103
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 4
score: 99.81259390024039
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 4
score: 99.80660574776786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 4
score: 99.79607833059211
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 4
score: 99.78677610367063
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 4
score: 99.78552911931818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 4
score: 99.78476219846492
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 5
score: 99.83230646306818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 5
score: 99.81067116477273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 5
score: 99.81015072228773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 5
score: 99.80404502467105
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 5
score: 99.79456967213115
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 5
score: 99.78630118534483
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 5
score: 99.78302323190789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 5
score: 99.78115739493535
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 6
score: 99.8318941885965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 6
score: 99.82743326822917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 6
score: 99.8096336082176
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 6
score: 99.80901468211206
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 6
score: 99.80382680084746
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 6
score: 99.7930968237705
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 6
score: 99.78396170479911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 6
score: 99.78220173463983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 6
score: 99.78073120117188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 7
score: 99.83175094039352
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 7
score: 99.80672200520833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 7
score: 99.80114325161638
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 7
score: 99.78330485026042
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 7
score: 99.78026439525463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 8
score: 99.829345703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 8
score: 99.81770833333333
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 8
score: 99.81336897510593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 8
score: 99.80102138831967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 8
score: 99.78900615985577
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 8
score: 99.78062930349576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 8
score: 99.7773828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 9
score: 99.82826967592592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 9
score: 99.81098550052967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 9
score: 99.78853870738637
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 9
score: 99.78052236519608
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 9
score: 99.77666512182203
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 10
score: 99.825908203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 10
score: 99.81269182477679
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 10
score: 99.80037006578948
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 10
score: 99.80031960227272
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 10
score: 99.77909825211864
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 10
score: 99.77891618114407
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 10
score: 99.77573067801339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL String ( ) ;
rank: 11
score: 99.81092984068627
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 11
score: 99.81017672631049
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 11
score: 99.8000957782452
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 11
score: 99.77789713541667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 11
score: 99.77515980113637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ;
rank: 12
score: 99.82210599459134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 12
score: 99.81042258522727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 12
score: 99.79850260416667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 12
score: 99.79714529854911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 12
score: 99.78581686580883
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 12
score: 99.77892645474138
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 12
score: 99.7763671875
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 12
score: 99.77401790978773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 13
score: 99.818359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ;
rank: 13
score: 99.80942290683963
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 13
score: 99.7980205829327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 13
score: 99.79747596153847
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 13
score: 99.78570963541667
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 13
score: 99.77765823622882
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 13
score: 99.7763671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 13
score: 99.77284342447916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 14
score: 99.81821469907408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 14
score: 99.80828450520833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 14
score: 99.80380859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 14
score: 99.79695209703948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 14
score: 99.78526306152344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 14
score: 99.77745511239036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 15
score: 99.81782058189656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type ;
rank: 15
score: 99.80721932870371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 15
score: 99.79408203125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 15
score: 99.78797743055556
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 15
score: 99.77732631138393
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 15
score: 99.77498685396634
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 15
score: 99.77185679290254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 16
score: 99.81781005859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type ;
rank: 16
score: 99.80239701704545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 16
score: 99.79392903645834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 16
score: 99.79351029829546
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 16
score: 99.78456115722656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 16
score: 99.77617355872844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 16
score: 99.77093098958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } name = name . Type . OTHER ;
rank: 17
score: 99.81634765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 17
score: 99.80563151041666
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 17
score: 99.79326985677083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 17
score: 99.79298618861607
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 17
score: 99.78392615685097
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 17
score: 99.77595600328948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 17
score: 99.77464619620902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 17
score: 99.77020363729508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 18
score: 99.81535391971983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 18
score: 99.80495689655173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 18
score: 99.80182634320175
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 18
score: 99.79164459745763
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 18
score: 99.78581891741071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 18
score: 99.77489295372597
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 18
score: 99.77451985677084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 18
score: 99.76881167763158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 19
score: 99.81125895182292
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ;
rank: 19
score: 99.80427926485656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 19
score: 99.79115874191811
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 19
score: 99.78572029903017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 19
score: 99.7743395789195
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 19
score: 99.77363112877156
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 19
score: 99.76848895733173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 20
score: 99.81086011202831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 20
score: 99.79069301060268
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 20
score: 99.79015299479167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 20
score: 99.7830660635965
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 20
score: 99.77249968998017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 20
score: 99.76812065972223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 21
score: 99.80065678615196
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 21
score: 99.78997909813596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 21
score: 99.78407437193627
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 21
score: 99.77376011439732
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 21
score: 99.7722900390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 21
score: 99.76781209309895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ;
rank: 22
score: 99.81052734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = Name . Type ;
rank: 22
score: 99.80150553385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 22
score: 99.7893699363426
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 22
score: 99.78927296605603
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } }
rank: 22
score: 99.78373500279018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 22
score: 99.7818374633789
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 22
score: 99.77227886652543
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 22
score: 99.77156147203948
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 22
score: 99.7672265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 23
score: 99.80055338541666
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 23
score: 99.8003438313802
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 23
score: 99.78864524147727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 23
score: 99.78353987068965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 23
score: 99.78114055765086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 23
score: 99.7705547626202
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 23
score: 99.76711697048611
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 24
score: 99.81025041852679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; type = Name . Type ;
rank: 24
score: 99.80041725852273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 24
score: 99.80021348110465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 24
score: 99.78857421875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 24
score: 99.786865234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } }
rank: 24
score: 99.78104945591518
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 24
score: 99.77044988082628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 24
score: 99.7671142578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 25
score: 99.80972055288461
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; }
rank: 25
score: 99.79992254849138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 25
score: 99.79955240885417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 25
score: 99.78761449353448
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 25
score: 99.78680098684211
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 25
score: 99.78070068359375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 25
score: 99.78064903846153
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 25
score: 99.7697509765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 25
score: 99.76967194120763
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 25
score: 99.76709905660377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 26
score: 99.80935142780173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 26
score: 99.79949951171875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 26
score: 99.798828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 26
score: 99.7862079326923
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 26
score: 99.78600202287946
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 26
score: 99.77927117598684
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 26
score: 99.76919958726415
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 26
score: 99.76918859649123
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 26
score: 99.76701407596983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ; name = name . get CaMeL String ( ) ;
rank: 27
score: 99.80804850260417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } name = n . get CaMeL String ( ) ;
rank: 27
score: 99.78547901218221
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 27
score: 99.77964952256944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 27
score: 99.779052734375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 27
score: 99.76881566540948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 27
score: 99.76691374231558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 28
score: 99.80782137784091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } name = n . get CaMeL String ( ) ;
rank: 28
score: 99.79895413306451
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 28
score: 99.79740767045455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 28
score: 99.78529188368056
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 28
score: 99.7847108004386
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 28
score: 99.77836608886719
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 28
score: 99.76863045528017
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 28
score: 99.76593889508929
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Name ( ) ;
rank: 29
score: 99.79885525173611
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 29
score: 99.78519241898148
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 29
score: 99.78374191810344
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 29
score: 99.77741228070175
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 29
score: 99.7686786954365
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 29
score: 99.76713344029018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 29
score: 99.76563341864224
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 30
score: 99.80532670454545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 30
score: 99.79848296066811
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 30
score: 99.7958203125
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 30
score: 99.78500205592105
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 30
score: 99.78195440573771
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 30
score: 99.77819372106481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 30
score: 99.76559244791666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } name = Name . Type . OTHER ;
rank: 31
score: 99.80430024245689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 31
score: 99.7970947265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 31
score: 99.78484375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 31
score: 99.78163248697916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 31
score: 99.77737801535088
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 31
score: 99.77723106971153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 31
score: 99.76779228344299
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 31
score: 99.7652587890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type . OTHER ;
rank: 31
score: 99.76508706302967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 32
score: 99.79658203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ;
rank: 32
score: 99.79396214978448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 32
score: 99.7845458984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 32
score: 99.77674153645833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 32
score: 99.76774649784483
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 33
score: 99.803828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 33
score: 99.796533203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 33
score: 99.79384940011161
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 33
score: 99.78419596354166
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 33
score: 99.78130603227459
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 33
score: 99.77599026864036
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 33
score: 99.76764787946429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ;
rank: 33
score: 99.76479406524123
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 33
score: 99.76448260613208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } }
rank: 34
score: 99.79361397879464
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 34
score: 99.78059362192623
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 34
score: 99.77542747641509
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 34
score: 99.77528118265086
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 34
score: 99.76740679824562
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 34
score: 99.76436283903301
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . OTHER ;
rank: 34
score: 99.7642972176535
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 35
score: 99.7959693170363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; break ;
rank: 35
score: 99.78057528409092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 35
score: 99.77521882233796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 35
score: 99.77447509765625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 35
score: 99.76415215163935
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 36
score: 99.80225481305804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = n . get CaMeL String ( ) ;
rank: 36
score: 99.79572711074562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 36
score: 99.78287760416667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 36
score: 99.7804961622807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 36
score: 99.7749492938702
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 36
score: 99.76730501853814
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 36
score: 99.76410222457628
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 36
score: 99.76359610721983
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 37
score: 99.80204050164474
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 37
score: 99.79448410560344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 37
score: 99.79309303977273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 37
score: 99.78284505208333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 37
score: 99.77945382254464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ;
rank: 37
score: 99.7740085407839
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 37
score: 99.76708080150463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 37
score: 99.76407449287281
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) )
rank: 37
score: 99.7633176317402
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 38
score: 99.80183490953948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 38
score: 99.79386393229167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if (
rank: 38
score: 99.79224609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 38
score: 99.778759765625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 38
score: 99.7739990234375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 38
score: 99.76699561403508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 38
score: 99.76308030348558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 38
score: 99.7627734375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 39
score: 99.80158648574562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 39
score: 99.79380219558189
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 39
score: 99.79204963235294
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 39
score: 99.78195626395089
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 39
score: 99.77858189174107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 39
score: 99.76677766393442
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 39
score: 99.76304154829545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 39
score: 99.76204707704741
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 40
score: 99.79301677766394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 40
score: 99.7919921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 40
score: 99.778515625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 40
score: 99.77389210668103
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 40
score: 99.76184953962054
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 41
score: 99.79196346507354
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 41
score: 99.77831174616227
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 41
score: 99.7738396139706
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 41
score: 99.76653180803571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 41
score: 99.76300048828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ;
rank: 41
score: 99.76142081567797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 42
score: 99.80030293367346
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = n . get CaMeL String ( ) ;
rank: 42
score: 99.79191080729167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 42
score: 99.79142731311275
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 42
score: 99.77800335800438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; }
rank: 42
score: 99.77330780029297
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 42
score: 99.76607390372983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 42
score: 99.761357421875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 43
score: 99.79134807180851
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 43
score: 99.78035481770833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 43
score: 99.77792306673729
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 43
score: 99.77281452047414
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 43
score: 99.76227678571429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Name ( ) ;
rank: 43
score: 99.76126414331897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 44
score: 99.800048828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 44
score: 99.79112955729167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 44
score: 99.7802734375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 44
score: 99.77770575161638
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 44
score: 99.77277542372882
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 44
score: 99.77074734669812
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 44
score: 99.7652587890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 44
score: 99.76209944385593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 44
score: 99.7604229266827
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 45
score: 99.789794921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . FUNCTION ;
rank: 45
score: 99.77975852272728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 45
score: 99.77728678385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 45
score: 99.77256499743852
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 45
score: 99.77048903245192
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 45
score: 99.76485640914352
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 45
score: 99.76131497896634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 45
score: 99.76022907838983
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 46
score: 99.79871544471153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 46
score: 99.78979048295454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; }
rank: 46
score: 99.78939115084134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ;
rank: 46
score: 99.77702679550438
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ;
rank: 46
score: 99.77198040674604
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 46
score: 99.77035627693965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 46
score: 99.76463160021552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 46
score: 99.7610595703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 46
score: 99.76022080243644
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 47
score: 99.79862467447917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } }
rank: 47
score: 99.78919474283855
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 47
score: 99.78885904947917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 47
score: 99.77861328125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 47
score: 99.77635117827869
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 47
score: 99.77193263319673
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 47
score: 99.7610546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL String ( ) ;
rank: 47
score: 99.7602118130388
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 48
score: 99.7985625685307
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 48
score: 99.78863722278226
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 48
score: 99.77611019736842
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 48
score: 99.77187660092213
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 48
score: 99.76980251736111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 48
score: 99.76393539186508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 48
score: 99.76098232581967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 48
score: 99.759765625
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 49
score: 99.7983819369612
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } name = Name . Type . OTHER ;
rank: 49
score: 99.77731502757354
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 49
score: 99.77592693391394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; }
rank: 49
score: 99.77166047643442
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 49
score: 99.76355401400862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 49
score: 99.76087297712054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 50
score: 99.79823133680556
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = name . Type . OTHER ;
rank: 50
score: 99.78853592218137
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 50
score: 99.78841670866936
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 50
score: 99.77728678385417
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 50
score: 99.77587890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 50
score: 99.77143205915179
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 50
score: 99.76963227370689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 50
score: 99.76352033943965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 50
score: 99.76059395926339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ; }
rank: 50
score: 99.75954965444711
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 51
score: 99.7981377963362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ; type = Name . Type ;
rank: 51
score: 99.7882199754902
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 51
score: 99.78815104166667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 51
score: 99.77702098781779
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 51
score: 99.77579918686224
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; }
rank: 51
score: 99.76902454304245
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 51
score: 99.76297312769397
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 51
score: 99.76043069773706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 51
score: 99.75926021107456
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 52
score: 99.78812662760417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 52
score: 99.77579471982759
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 52
score: 99.77066761363636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 52
score: 99.76865234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 52
score: 99.76295381433823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 52
score: 99.75949928977273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 52
score: 99.75895182291667
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 53
score: 99.79767400568181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . to CaMeL String ( ) ;
rank: 53
score: 99.78776898300438
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 53
score: 99.77054207785088
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 53
score: 99.75941342213115
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 53
score: 99.758515625
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 54
score: 99.79763671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 54
score: 99.7880859375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 54
score: 99.78749234068627
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 54
score: 99.77651615466101
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 54
score: 99.77053653492646
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 54
score: 99.76821463448661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 54
score: 99.76254030257937
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 54
score: 99.75939520474138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 54
score: 99.75776198814656
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 55
score: 99.78730991908482
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 55
score: 99.77630208333333
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 55
score: 99.77556442002118
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 55
score: 99.77029854910714
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 55
score: 99.76817584859914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 55
score: 99.76232289459746
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 55
score: 99.75923127948113
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 55
score: 99.75697544642857
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 56
score: 99.796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 56
score: 99.7875244140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . OTHER ;
rank: 56
score: 99.78705610795454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 56
score: 99.77614920479911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 56
score: 99.77023654513889
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 56
score: 99.767822265625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 56
score: 99.7621826171875
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 56
score: 99.7591064453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 57
score: 99.78669956752232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 57
score: 99.78666548295455
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 57
score: 99.77569173177083
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 57
score: 99.77022879464286
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 57
score: 99.76217086226852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } return ;
rank: 57
score: 99.7589599609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 58
score: 99.79645905671296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 58
score: 99.78616707785088
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 58
score: 99.77505653782895
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 58
score: 99.77419517780173
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 58
score: 99.77012532552084
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { return ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 58
score: 99.76213968211206
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 58
score: 99.75592672413794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 59
score: 99.79644416360294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ;
rank: 59
score: 99.78585970603814
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 59
score: 99.77488458806818
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 59
score: 99.7699766995614
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 59
score: 99.76644736842105
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 59
score: 99.76201014364919
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 59
score: 99.758837890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 59
score: 99.75495134320175
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 60
score: 99.79628537735849
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 60
score: 99.7858177923387
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 60
score: 99.78549985532408
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 60
score: 99.77457401670259
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 60
score: 99.77366480334052
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ;
rank: 60
score: 99.7698974609375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 60
score: 99.76592145647321
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 60
score: 99.76173558728448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 61
score: 99.79614718455188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } }
rank: 61
score: 99.78581290409483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ;
rank: 61
score: 99.78533815870098
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 61
score: 99.77432839912281
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; }
rank: 61
score: 99.77316228693182
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 61
score: 99.76982742059427
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 61
score: 99.7655184659091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 61
score: 99.76161595394737
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 61
score: 99.75851966594827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 62
score: 99.79606119791667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 62
score: 99.78513632015306
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 62
score: 99.77283528645833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 62
score: 99.76908947172619
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 62
score: 99.76540701729911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 62
score: 99.76154033954327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 62
score: 99.75848795572917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 62
score: 99.75393288352272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 63
score: 99.79604048295455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ; }
rank: 63
score: 99.78565240675404
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; break ;
rank: 63
score: 99.78470934851696
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 63
score: 99.773974609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 63
score: 99.77266890914352
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 63
score: 99.76888545866936
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 63
score: 99.7614453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 63
score: 99.75808465676229
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 64
score: 99.79523174579327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 64
score: 99.78466796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 64
score: 99.77394291392544
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 64
score: 99.76873078893442
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 64
score: 99.76437322443182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 64
score: 99.76134672619048
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 64
score: 99.75798059682377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 64
score: 99.752607421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 65
score: 99.7950080422794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } }
rank: 65
score: 99.77389026988637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; }
rank: 65
score: 99.77205255681818
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 65
score: 99.76861465186404
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 65
score: 99.76424581962719
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 65
score: 99.76132652407787
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 65
score: 99.75764666863208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; }
rank: 66
score: 99.7949951171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 66
score: 99.784453125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 66
score: 99.77354029605263
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } } name = n . get CaMeL String ( ) ;
rank: 66
score: 99.77171167834052
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL Next ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 66
score: 99.76362827845982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 66
score: 99.76113115730932
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 66
score: 99.75162479795259
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 67
score: 99.79440789473684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 67
score: 99.7843915831368
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 67
score: 99.78334780092592
patch: try { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 67
score: 99.77353341238839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ;
rank: 67
score: 99.77169363839286
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 67
score: 99.7684555053711
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 67
score: 99.76353870738636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 67
score: 99.76091828893442
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 67
score: 99.7572609230324
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 67
score: 99.75139250578704
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 68
score: 99.79404860276442
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } name = n . get CaMeL String ( ) ;
rank: 68
score: 99.78430397727273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 68
score: 99.78332098599138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 68
score: 99.77349175347223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 68
score: 99.771484375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 68
score: 99.76834106445312
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 68
score: 99.763408203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 68
score: 99.76059322033899
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 68
score: 99.7569091796875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 68
score: 99.75127137382076
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 69
score: 99.79376220703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; }
rank: 69
score: 99.784267578125
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 69
score: 99.77117919921875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 69
score: 99.76318359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 69
score: 99.76051488415948
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 69
score: 99.75689338235294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 69
score: 99.75104391163794
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 70
score: 99.79358723958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } name = Name . Type . OTHER ;
rank: 70
score: 99.78250558035714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 70
score: 99.77337346311475
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 70
score: 99.76046080508475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 70
score: 99.75689227764423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ;
rank: 70
score: 99.75014947385205
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 71
score: 99.78406832510964
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 71
score: 99.78245495211694
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 71
score: 99.76813261387711
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 71
score: 99.75688396516394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 72
score: 99.79319480613425
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 72
score: 99.78394426618304
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 72
score: 99.78241373697917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 72
score: 99.77285970052084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 72
score: 99.76793252268145
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 72
score: 99.76256061422414
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 72
score: 99.74954223632812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 73
score: 99.7931640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 73
score: 99.78390502929688
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 73
score: 99.78231916756465
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 73
score: 99.77261302510246
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 73
score: 99.7678458921371
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 73
score: 99.76015799386161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ;
rank: 73
score: 99.75678790983606
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 73
score: 99.74895490679825
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 74
score: 99.79271962691327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 74
score: 99.77230098329741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 74
score: 99.76771988407258
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 74
score: 99.76199396306818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 74
score: 99.7601198682598
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 74
score: 99.75653976690573
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 75
score: 99.79248046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . to CaMeL String ( ) ;
rank: 75
score: 99.78206647028688
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 75
score: 99.77206688596492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ; }
rank: 75
score: 99.7676532451923
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 75
score: 99.7600833953373
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 75
score: 99.75647844587054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; } }
rank: 75
score: 99.7485984519676
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 76
score: 99.79236857096355
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; }
rank: 76
score: 99.78202793961864
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 76
score: 99.76753472222222
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 76
score: 99.76004831414474
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 76
score: 99.75631455243644
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 76
score: 99.74849609375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 77
score: 99.79201061320755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } type = Name . Type ;
rank: 77
score: 99.77187660092213
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 77
score: 99.77021484375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 77
score: 99.7669677734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 77
score: 99.75624631485849
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . NONE ;
rank: 78
score: 99.79192645733173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 78
score: 99.78324751420455
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 78
score: 99.7818127648305
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 78
score: 99.77169484105603
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 78
score: 99.77002840909091
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 78
score: 99.76696595149254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 78
score: 99.76099537037037
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 78
score: 99.75994388640873
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 78
score: 99.75580971927967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 78
score: 99.74820667613636
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 79
score: 99.78175455729166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ;
rank: 79
score: 99.76998401988637
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; }
rank: 79
score: 99.7607421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 79
score: 99.75562427662037
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 79
score: 99.74787008351294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 80
score: 99.79165810032895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = name . to CaMeL String ( ) ;
rank: 80
score: 99.78212193080357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 80
score: 99.78160807291667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; if (
rank: 80
score: 99.77144886363637
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 80
score: 99.76929124735169
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 80
score: 99.76015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 80
score: 99.75983072916667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 80
score: 99.75553385416667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = name . get CaMeL String ( ) ;
rank: 81
score: 99.79162145543981
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } } name = n . get CaMeL String ( ) ;
rank: 81
score: 99.78128551136363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 81
score: 99.7713473135965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 81
score: 99.76620751096492
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 81
score: 99.76012731481481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , scope ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 81
score: 99.75973307291666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 81
score: 99.75549523305085
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 81
score: 99.74738991477273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 82
score: 99.78138020833333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 82
score: 99.78127615792411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 82
score: 99.77127021655701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; }
rank: 82
score: 99.76913400423729
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 82
score: 99.76618194580078
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 82
score: 99.76012244591347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == parent ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 82
score: 99.75958151895492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 82
score: 99.755078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type . OTHER ; }
rank: 82
score: 99.74726019965277
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 83
score: 99.79147727272728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Parent ( ) ;
rank: 83
score: 99.76857346754808
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 83
score: 99.76603751346983
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 83
score: 99.76010567801339
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 83
score: 99.75946335565476
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 83
score: 99.75502592941811
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 84
score: 99.7810272752193
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 84
score: 99.78038102489407
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 84
score: 99.77107456752232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 84
score: 99.76593780517578
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 84
score: 99.76006027747844
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 84
score: 99.7593482232863
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 84
score: 99.74683095894608
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 85
score: 99.79027876420454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 85
score: 99.78097218480603
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 85
score: 99.7802498109879
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 85
score: 99.76854626885776
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 85
score: 99.76567731584821
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 85
score: 99.76003196022727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 85
score: 99.75933837890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 85
score: 99.75482177734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Parent ( ) ;
rank: 85
score: 99.7466681985294
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 86
score: 99.79021585398706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; type = Name . Type . OTHER ;
rank: 86
score: 99.78010211074562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 86
score: 99.76838885613208
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 86
score: 99.75988539209905
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 86
score: 99.7548095703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 86
score: 99.7461328125
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 87
score: 99.79007332785088
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 87
score: 99.78051329495614
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 87
score: 99.77055584016394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 87
score: 99.76507927389706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 87
score: 99.75476288377193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 87
score: 99.74611058728448
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 88
score: 99.79001242897728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 88
score: 99.7803479210805
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 88
score: 99.77049980788935
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 88
score: 99.76793561662946
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 88
score: 99.7647854989035
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 88
score: 99.75892469618056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 88
score: 99.74589106721699
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 89
score: 99.770400390625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 89
score: 99.76445770263672
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 89
score: 99.75878002025463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 89
score: 99.75796750992063
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = n . get CaMeL String ( ) ;
rank: 89
score: 99.75382173978366
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 89
score: 99.74585802801724
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 90
score: 99.78973388671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 90
score: 99.7801513671875
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 90
score: 99.77915852864584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 90
score: 99.77010672433036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 90
score: 99.76783854166666
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 90
score: 99.7587139423077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 90
score: 99.7538174715909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 90
score: 99.74522986778847
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 91
score: 99.78968224158653
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type ;
rank: 91
score: 99.77975899832589
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 91
score: 99.7700616244612
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 91
score: 99.7676846590909
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 91
score: 99.75368923611111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 92
score: 99.78961813038794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 92
score: 99.77884114583334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 92
score: 99.76977939293033
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 92
score: 99.76748389528508
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 92
score: 99.76377704326923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 92
score: 99.75360831567797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } type = Name . Type . OTHER ;
rank: 92
score: 99.74499289772727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 93
score: 99.78959216101696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 93
score: 99.77853190104166
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 93
score: 99.76969934682377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 93
score: 99.76700265066964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 93
score: 99.76377593493852
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 93
score: 99.758134765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 93
score: 99.75359637920673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 94
score: 99.789501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } } name = n . get CaMeL String ( ) ;
rank: 94
score: 99.7789151278409
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 94
score: 99.77849211516204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ;
rank: 94
score: 99.76958090572033
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 94
score: 99.766943359375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 94
score: 99.7637469951923
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 94
score: 99.75752766927083
patch: name = ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ;
rank: 94
score: 99.75350900423729
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 94
score: 99.74438937205188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 95
score: 99.78949652777777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } type = Name . Type ;
rank: 95
score: 99.77846100370763
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 95
score: 99.76930779925847
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 95
score: 99.76691080729167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . FUNCTION ;
rank: 95
score: 99.76363431490384
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 95
score: 99.75787823016827
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 95
score: 99.75740559895833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 95
score: 99.75345865885417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 96
score: 99.78917194234914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; break ; }
rank: 96
score: 99.76924159163136
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 96
score: 99.76327514648438
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 96
score: 99.7578125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 96
score: 99.75737934727823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = true ;
rank: 96
score: 99.75345413773148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ;
rank: 96
score: 99.74344966096699
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 97
score: 99.77864879261364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 97
score: 99.77783203125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 97
score: 99.76923659752156
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 97
score: 99.76652018229167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Set = true ;
rank: 97
score: 99.76318359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ;
rank: 97
score: 99.75775824652777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n ) ;
rank: 97
score: 99.75715042372882
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ;
rank: 97
score: 99.75335393186475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . Type . OTHER ;
rank: 98
score: 99.77863991477273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 98
score: 99.7776123046875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 98
score: 99.76920306096312
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 98
score: 99.76318359375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 98
score: 99.7577492042824
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 98
score: 99.75706380208334
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 98
score: 99.7532797759434
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { is CaMeL Set = true ;
rank: 98
score: 99.74333538925438
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 99
score: 99.77855428059895
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 99
score: 99.77712486530173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 99
score: 99.76619779146634
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 99
score: 99.7630859375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 99
score: 99.75692854256465
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 99
score: 99.7531494140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 99
score: 99.74327674278847
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 100
score: 99.78832194010417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 100
score: 99.77839608028017
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 100
score: 99.77701297883064
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 100
score: 99.76889734100877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 100
score: 99.76607190148304
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 100
score: 99.76292703919492
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 100
score: 99.75677393353175
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 100
score: 99.7531415831368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 100
score: 99.74300130208333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 101
score: 99.78788325471699
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } name = Name . Type . OTHER ;
rank: 101
score: 99.77811234085648
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 101
score: 99.76888834635416
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 101
score: 99.76605694110577
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 101
score: 99.76280799278847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 101
score: 99.752998046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 101
score: 99.7427734375
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 102
score: 99.78776633522727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 102
score: 99.77656081627156
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 102
score: 99.76595865885416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 102
score: 99.76272733094262
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 102
score: 99.757109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 102
score: 99.75613839285714
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 102
score: 99.7528564453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 102
score: 99.74253266433189
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 103
score: 99.78760622258773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; break ;
rank: 103
score: 99.77668709590517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 103
score: 99.77615672144397
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 103
score: 99.7684266137295
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 103
score: 99.76573079427084
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 103
score: 99.76251627604167
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 103
score: 99.75710623604911
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 103
score: 99.75611592955508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 103
score: 99.75263671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 104
score: 99.78729870854592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL Parent ( ) ;
rank: 104
score: 99.7763671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 104
score: 99.77598353794643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 104
score: 99.76833055840164
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 104
score: 99.7656005859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL Next ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 104
score: 99.76238082627118
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 104
score: 99.74242685355392
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 105
score: 99.78693359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 105
score: 99.77633033608491
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 105
score: 99.77569580078125
patch: return ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 105
score: 99.76530255011792
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 105
score: 99.76224388266509
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 105
score: 99.75589939805327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 105
score: 99.75240589488637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ;
rank: 105
score: 99.74241480334052
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 106
score: 99.786923828125
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 106
score: 99.7763038917824
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 106
score: 99.77568188048245
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 106
score: 99.76804832175925
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ;
rank: 106
score: 99.76494489397321
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 106
score: 99.76222330729166
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 106
score: 99.75589622641509
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 107
score: 99.78683907645089
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = Name . Type . OTHER ;
rank: 107
score: 99.77557473104508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } type = Name . Type . OTHER ;
rank: 107
score: 99.76787429559427
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 107
score: 99.76472981770833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 107
score: 99.76206970214844
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 107
score: 99.75623497596153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 107
score: 99.75236328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 108
score: 99.78612342247597
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 108
score: 99.76778609664352
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 108
score: 99.764404296875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ;
rank: 108
score: 99.76193673270089
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 108
score: 99.75622106481481
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 108
score: 99.74194764254386
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 109
score: 99.78607388200432
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 109
score: 99.77605731670673
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 109
score: 99.75580144332628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 109
score: 99.75220568426724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 110
score: 99.7760074013158
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 110
score: 99.77503842213115
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 110
score: 99.76741832386364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 110
score: 99.7615186347336
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 110
score: 99.75597073739036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 110
score: 99.75572549143145
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 110
score: 99.75217982700893
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = name . get CaMeL String ( ) ;
rank: 110
score: 99.74170879289215
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 111
score: 99.77598110465117
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 111
score: 99.775
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 111
score: 99.76731714709052
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 111
score: 99.76370497881356
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 111
score: 99.75582449776786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 111
score: 99.75568033854167
patch: name = ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ;
rank: 111
score: 99.75207940463362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 112
score: 99.78549712558963
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } is CaMeL Set = true ;
rank: 112
score: 99.77498372395833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Set = true ;
rank: 112
score: 99.76726888020833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ;
rank: 112
score: 99.7636474609375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 112
score: 99.76120431082589
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 112
score: 99.75555889423077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 112
score: 99.74091796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 113
score: 99.78543893914474
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 113
score: 99.77522786458333
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 113
score: 99.77490234375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 113
score: 99.76713122351696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 113
score: 99.76339285714286
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . FUNCTION ;
rank: 113
score: 99.76102120535714
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ;
rank: 113
score: 99.75542712602459
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 113
score: 99.75540794516509
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 114
score: 99.78524780273438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String ( ) ;
rank: 114
score: 99.77467395413306
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 114
score: 99.76688172387296
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 114
score: 99.76094081038136
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ;
rank: 114
score: 99.75186099646227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 114
score: 99.74038260323661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 115
score: 99.77455240885416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 115
score: 99.76676722935268
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 115
score: 99.76079644097223
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 115
score: 99.755263671875
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 115
score: 99.75180571933963
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } name = name . Type . OTHER ;
rank: 116
score: 99.77506801060268
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 116
score: 99.77452542489036
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 116
score: 99.76636983580508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 116
score: 99.76321176382211
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 116
score: 99.76062242040095
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 116
score: 99.75533621651786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 116
score: 99.75523501536885
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 116
score: 99.75176901895492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 116
score: 99.73999895368304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 117
score: 99.78476388113839
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 117
score: 99.77493990384616
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 117
score: 99.77417834051724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 117
score: 99.76634928385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 117
score: 99.76236698545259
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 117
score: 99.755126953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 117
score: 99.75167410714286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . to CaMeL String ( ) ;
rank: 118
score: 99.7845458984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } is CaMeL Set = true ;
rank: 118
score: 99.77398181352459
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 118
score: 99.7620849609375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 118
score: 99.76049041748047
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 118
score: 99.75480143229167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 118
score: 99.75469563802083
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 118
score: 99.75164388020833
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 118
score: 99.739658203125
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 119
score: 99.78448275862068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type ;
rank: 119
score: 99.7746161099138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 119
score: 99.77395060911017
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 119
score: 99.76622272359914
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 119
score: 99.76195447198276
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 119
score: 99.76042895047169
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 119
score: 99.75472318209134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == scope ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 119
score: 99.75449058657787
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . OTHER ;
rank: 119
score: 99.73960524338942
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 120
score: 99.77454034213362
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 120
score: 99.77391790574596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 120
score: 99.76621607730263
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 120
score: 99.7602775327621
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 120
score: 99.75141157670454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Name ( ) ;
rank: 121
score: 99.78443624205508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } } name = Name . Type . OTHER ;
rank: 121
score: 99.77449253627232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 121
score: 99.77386881510417
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ;
rank: 121
score: 99.76579680266204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 121
score: 99.76174444901316
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 121
score: 99.76027074353448
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 121
score: 99.75427827380952
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 121
score: 99.75139382102273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 122
score: 99.7843167489035
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 122
score: 99.77444170106132
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 122
score: 99.77381998697916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 122
score: 99.76573258739407
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 122
score: 99.76171875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 122
score: 99.76021321614583
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 122
score: 99.7541034405048
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 122
score: 99.75135540140086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) )
rank: 122
score: 99.73904079861111
patch: } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 123
score: 99.78429236778847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } name = Name . Type . OTHER ;
rank: 123
score: 99.77415308459052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 123
score: 99.773779296875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 123
score: 99.765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 123
score: 99.76124702065678
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 123
score: 99.76019381009615
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 123
score: 99.75413295200893
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 123
score: 99.75132076075819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 123
score: 99.73902925531915
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 124
score: 99.78409517728366
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 124
score: 99.77414772727273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 124
score: 99.77374674479167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; return ;
rank: 124
score: 99.76561643366227
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 124
score: 99.76105291193181
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 124
score: 99.76017252604167
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 124
score: 99.75383890086206
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 124
score: 99.7537781762295
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 124
score: 99.73896316002156
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 125
score: 99.7838134765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 125
score: 99.77405724158653
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 125
score: 99.77365451388889
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 125
score: 99.76557173295454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; }
rank: 125
score: 99.760986328125
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 125
score: 99.7535888671875
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 125
score: 99.73876031839623
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 126
score: 99.78371803977272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ;
rank: 126
score: 99.76548665364584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 126
score: 99.75355881911058
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 126
score: 99.75105794270833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL Name ( ) ;
rank: 126
score: 99.73866850754311
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 127
score: 99.78363247575432
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 127
score: 99.77368607954546
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 127
score: 99.77300449587264
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 127
score: 99.76547037760416
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 127
score: 99.7607000942888
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 127
score: 99.76011782786885
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 127
score: 99.75341796875
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 127
score: 99.75328776041667
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 127
score: 99.75077237215909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = name . Type . OTHER ;
rank: 127
score: 99.73856898716518
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 128
score: 99.78357747395833
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 128
score: 99.7733984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 128
score: 99.77298859627017
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; break ;
rank: 128
score: 99.76068004261364
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 128
score: 99.76001376793033
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 128
score: 99.75328717912946
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 128
score: 99.75071364182692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 128
score: 99.73844708136792
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 129
score: 99.78353768807871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ; type = Name . Type ;
rank: 129
score: 99.77295793805804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 129
score: 99.76527141702586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 129
score: 99.75977376302083
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 129
score: 99.75313765914352
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 129
score: 99.75309778432377
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 129
score: 99.75048828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 130
score: 99.78343485169492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 130
score: 99.77336647727273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 130
score: 99.77260502049181
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 130
score: 99.75972624747983
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 130
score: 99.75304024174528
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 130
score: 99.7529296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = n . get CaMeL String ( ) ;
rank: 130
score: 99.75013241525424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 130
score: 99.73786873653017
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 131
score: 99.78340418198529
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; }
rank: 131
score: 99.77317116477273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 131
score: 99.77233014787946
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 131
score: 99.76523951480263
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } type = Name . Type . OTHER ;
rank: 131
score: 99.7596435546875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 131
score: 99.75286519752359
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 131
score: 99.75011586334746
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 132
score: 99.78323739035088
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 132
score: 99.77302024147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC :
rank: 132
score: 99.76519886363636
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 132
score: 99.7603909676535
patch: if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 132
score: 99.75266335227273
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 132
score: 99.75005527712264
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 132
score: 99.73741736778847
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 133
score: 99.77297537667411
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 133
score: 99.77218312230603
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 133
score: 99.76518474641394
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 133
score: 99.76017400568182
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 133
score: 99.75947265625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 133
score: 99.75262661637932
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Name CaMeL For CaMeL Obj CaMeL Lit CaMeL Key ( n . get CaMeL Next ( ) ) ;
rank: 133
score: 99.75
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . NONE ; }
rank: 134
score: 99.78307653356481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 134
score: 99.77176453637296
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 134
score: 99.76505220853366
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 134
score: 99.76007486979167
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 134
score: 99.75945941472457
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ;
rank: 134
score: 99.75251891121032
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 134
score: 99.74999078714623
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 134
score: 99.7371826171875
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 135
score: 99.765009765625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; }
rank: 135
score: 99.73701343201755
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 136
score: 99.78293595224056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type ;
rank: 136
score: 99.772705078125
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 136
score: 99.77160192418981
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 136
score: 99.76491873604911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = n . get CaMeL String ( ) ; }
rank: 136
score: 99.75928638599537
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 136
score: 99.75208875868056
patch: name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 136
score: 99.74973958333334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } name = name . Type . OTHER ;
rank: 136
score: 99.73697265625
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 137
score: 99.78283070709746
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 137
score: 99.77257037984914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 137
score: 99.7647196451823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ;
rank: 137
score: 99.75963483537946
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 137
score: 99.75892740885416
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 137
score: 99.73692908653847
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 138
score: 99.78281947544643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type ;
rank: 138
score: 99.77246965680804
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 138
score: 99.7644775390625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 138
score: 99.75928591008773
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 138
score: 99.75880385890152
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 138
score: 99.75225619612068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 138
score: 99.751953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 138
score: 99.73688089622641
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 139
score: 99.77243568157327
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 139
score: 99.77085404829545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else {
rank: 139
score: 99.76445632684427
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 139
score: 99.75915305397727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 139
score: 99.75875854492188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 139
score: 99.75219298245614
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 139
score: 99.7518291170635
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ;
rank: 139
score: 99.74940413135593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 140
score: 99.78265956662736
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type ; }
rank: 140
score: 99.77231530975877
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 140
score: 99.77073953919492
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 140
score: 99.76438428534836
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; }
rank: 140
score: 99.75853650323276
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 140
score: 99.7521551724138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 140
score: 99.7517826140873
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 140
score: 99.74930245535714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 141
score: 99.78265787760417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 141
score: 99.77225296585648
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 141
score: 99.77068988347457
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 141
score: 99.76437938456633
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 141
score: 99.75885719476744
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 141
score: 99.75187174479167
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 141
score: 99.7492431640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 141
score: 99.73670504385964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 142
score: 99.77211470170455
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 142
score: 99.77065604073661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 142
score: 99.76432825307377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 142
score: 99.75879748114224
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Get = true ;
rank: 142
score: 99.75849914550781
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 142
score: 99.7518310546875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 142
score: 99.75152180989583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 142
score: 99.74921061197917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL String ( ) ; name = name . get CaMeL String ( ) ;
rank: 143
score: 99.78239788925438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 143
score: 99.77183314732143
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 143
score: 99.77049967447917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 143
score: 99.76394127155173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } type = Name . Type . OTHER ; }
rank: 143
score: 99.75870768229167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent , n . get CaMeL Next ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 143
score: 99.7582579495614
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 143
score: 99.74920247395833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 143
score: 99.7365400206368
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 144
score: 99.782314453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 144
score: 99.77035688920455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) [ 0 ] ;
rank: 144
score: 99.75824381510417
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 144
score: 99.75165666852679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 144
score: 99.74886067708333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 145
score: 99.78230233028017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 145
score: 99.77137493265086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 145
score: 99.77035319010416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 145
score: 99.75825940148304
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 145
score: 99.75823674436475
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 145
score: 99.7364663178066
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 146
score: 99.78214364681604
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 146
score: 99.76362136314656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 146
score: 99.75825718470982
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 146
score: 99.75109442349138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 146
score: 99.74863121157787
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 146
score: 99.73628982843137
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 147
score: 99.78200954861111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 147
score: 99.77020987817797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 147
score: 99.75825639204545
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 147
score: 99.75810546875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 147
score: 99.75118468237704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 147
score: 99.75106869103773
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 147
score: 99.74858318391394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 147
score: 99.73626708984375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 148
score: 99.770068359375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 148
score: 99.76357421875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 148
score: 99.75816243489584
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 148
score: 99.75779649077869
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 148
score: 99.75116066854508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 148
score: 99.74851888020834
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 148
score: 99.73598296066811
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 149
score: 99.7711932842548
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 149
score: 99.76983839465726
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; } }
rank: 149
score: 99.7578125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 149
score: 99.75771632339016
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 149
score: 99.75110973011364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL Name ( ) ;
rank: 149
score: 99.74844473379629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 150
score: 99.78166725852273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } type = Name . Type . OTHER ;
rank: 150
score: 99.771044921875
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 150
score: 99.76980154854911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( break ;
rank: 150
score: 99.76351192079741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; } }
rank: 150
score: 99.75780310997597
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == 0 ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 150
score: 99.7575262661638
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 150
score: 99.75106461321721
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 150
score: 99.74834872159092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 151
score: 99.77100451239224
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 151
score: 99.76978478064903
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 151
score: 99.76343173668033
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 151
score: 99.75742701480263
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 151
score: 99.75069754464286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String ( ) ;
rank: 151
score: 99.74824034492924
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 151
score: 99.73585728236607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Name ( ) ;
rank: 152
score: 99.781376953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type ;
rank: 152
score: 99.77095088252315
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 152
score: 99.76341931573276
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 152
score: 99.75762532552083
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 152
score: 99.7573962602459
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 152
score: 99.75046212332589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 152
score: 99.75029793432203
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; }
rank: 152
score: 99.73568289620536
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 153
score: 99.76957194010417
patch: if ( ! is CaMeL Global ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 153
score: 99.76337394067797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 153
score: 99.75745319870283
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 153
score: 99.75045276988637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 153
score: 99.75016538558468
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 153
score: 99.74786698190789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 153
score: 99.73538028492646
patch: } } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 154
score: 99.78127763856132
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 154
score: 99.77085046600877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; }
rank: 154
score: 99.76946504237289
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 154
score: 99.76336566472457
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 154
score: 99.75744140625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 154
score: 99.7572813870614
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 154
score: 99.75027126736111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 154
score: 99.75010172526042
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ;
rank: 154
score: 99.74773039641204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . Type . OTHER ;
rank: 154
score: 99.73522077287946
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 155
score: 99.78125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } name = Name . Type . OTHER ;
rank: 155
score: 99.75735677083334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 155
score: 99.75719401041667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ; }
rank: 155
score: 99.75017233455883
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 155
score: 99.75009450604838
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 155
score: 99.74768757370283
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 155
score: 99.7349698153409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 156
score: 99.78124186197917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 156
score: 99.76315157530738
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; }
rank: 156
score: 99.7572021484375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 156
score: 99.75701904296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL String ( ) ;
rank: 156
score: 99.74978111530173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 156
score: 99.74766618114407
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 156
score: 99.73482642983491
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 157
score: 99.78123046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type . OTHER ;
rank: 157
score: 99.77058490953948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 157
score: 99.76923014322917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . GETPROP :
rank: 157
score: 99.76312255859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 157
score: 99.75698061342592
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 157
score: 99.75663248697917
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 157
score: 99.75001575100806
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 157
score: 99.74969951923077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 157
score: 99.74764310396634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ;
rank: 158
score: 99.7631103515625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 158
score: 99.75696769593254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 158
score: 99.75661795479911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 158
score: 99.74982010690789
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 158
score: 99.74763093171296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type . OTHER ;
rank: 158
score: 99.73473249162946
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 159
score: 99.7704296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Set = true ;
rank: 159
score: 99.76904296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 159
score: 99.7569580078125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 159
score: 99.75647179555085
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 159
score: 99.74970860635081
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ;
rank: 159
score: 99.734619140625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . TYPE ;
rank: 160
score: 99.7811755164195
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { type = Name . Type ; }
rank: 160
score: 99.76890120967742
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } }
rank: 160
score: 99.75645345052084
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 160
score: 99.7493426983173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == name ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 160
score: 99.74713480247641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { is CaMeL Set = false ;
rank: 161
score: 99.78109004579741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = name . to CaMeL String ( ) ;
rank: 161
score: 99.76883820564517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 161
score: 99.76293516995614
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ; }
rank: 161
score: 99.75624663254311
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 161
score: 99.747021484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL Name ( ) ;
rank: 162
score: 99.78108059630102
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 162
score: 99.77005939094387
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : return ;
rank: 162
score: 99.762900390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 162
score: 99.75685586734694
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 162
score: 99.75608132102273
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 162
score: 99.74961410030242
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 162
score: 99.74913287984914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 162
score: 99.74695024334017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 163
score: 99.76985957704741
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 163
score: 99.76869537870763
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . GETPROP :
rank: 163
score: 99.76274857954546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 163
score: 99.7568359375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 163
score: 99.75581416377315
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { try { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 163
score: 99.74669409579919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ; name = name . Type . OTHER ;
rank: 163
score: 99.73447888962765
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 164
score: 99.78100125294812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ; type = Name . Type ;
rank: 164
score: 99.76815682870371
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if (
rank: 164
score: 99.76273970170455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 164
score: 99.755810546875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; } }
rank: 164
score: 99.7344501201923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 165
score: 99.7695945457176
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 165
score: 99.76808295815678
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 165
score: 99.76258395010964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 165
score: 99.75629507211538
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 165
score: 99.74945278825432
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 165
score: 99.74862905649039
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 165
score: 99.7344178316886
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 166
score: 99.78067753232759
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 166
score: 99.74928758965164
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 166
score: 99.74862905649039
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 166
score: 99.74630987448771
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 166
score: 99.73435786732456
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ;
rank: 167
score: 99.780546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 167
score: 99.76923828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL String ( ) ;
rank: 167
score: 99.75606205778301
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 167
score: 99.75523274739584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 167
score: 99.74921875
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 167
score: 99.7483331088362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 167
score: 99.74629720052083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 167
score: 99.73420916863208
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 168
score: 99.78043005601415
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ; }
rank: 168
score: 99.76920276988636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 168
score: 99.7679931640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . GET ;
rank: 168
score: 99.76225685586735
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 168
score: 99.7559964364035
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 168
score: 99.75521647135416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 168
score: 99.74616109913794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = name . get CaMeL String ( ) ; name = name . get CaMeL String ( ) ;
rank: 168
score: 99.73411402209052
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 169
score: 99.76797977570564
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 169
score: 99.76214599609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ; }
rank: 169
score: 99.7559964364035
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 169
score: 99.75508335658482
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 169
score: 99.74905056423611
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 169
score: 99.74616109913794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 169
score: 99.73390355603448
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 170
score: 99.78030056423611
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 170
score: 99.76899857954545
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 170
score: 99.76789030481558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 170
score: 99.76203865840517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 170
score: 99.75594656808036
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 170
score: 99.74898976293103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 170
score: 99.74773297991071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 170
score: 99.74606805098684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } }
rank: 170
score: 99.73377130681818
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ;
rank: 171
score: 99.78029087611607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 171
score: 99.76773563508064
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 171
score: 99.75589087701613
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } }
rank: 171
score: 99.74603271484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 171
score: 99.73369004991319
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 172
score: 99.78026471819196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; break ; } type = Name . Type ;
rank: 172
score: 99.761962890625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 172
score: 99.75580596923828
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 172
score: 99.74894205729167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 172
score: 99.74764278017241
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 172
score: 99.74599609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 172
score: 99.733671875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 173
score: 99.76848366477273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 173
score: 99.76765688004032
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 173
score: 99.76185709635416
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ; }
rank: 173
score: 99.75557084517045
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 173
score: 99.74763569078948
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 173
score: 99.74592194733796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 173
score: 99.73365941540948
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 174
score: 99.76840209960938
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 174
score: 99.767578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 174
score: 99.76180166568396
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; }
rank: 174
score: 99.75554656982422
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 174
score: 99.75464295504386
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 174
score: 99.74864459859914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 174
score: 99.74757774203431
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 174
score: 99.74583629261363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = Name . Type . OTHER ;
rank: 174
score: 99.73360770089286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } } } name = n . get CaMeL String ( ) ;
rank: 175
score: 99.77976831896552
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 175
score: 99.7683856670673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 175
score: 99.76747710129311
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 175
score: 99.7617907914959
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 175
score: 99.75463438870614
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 175
score: 99.74861520235656
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 175
score: 99.74570152407787
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 175
score: 99.73350123355263
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 176
score: 99.779736328125
patch: type = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 176
score: 99.76830212823276
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 176
score: 99.7673828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; } }
rank: 176
score: 99.761767578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 176
score: 99.75543323863636
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { return ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 176
score: 99.75463053385417
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } is CaMeL Set = true ;
rank: 176
score: 99.74856665826613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 176
score: 99.74563802083334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n ) ; }
rank: 177
score: 99.77973375822368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL Parent ( ) ;
rank: 177
score: 99.76736295021186
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 177
score: 99.7617608432112
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 177
score: 99.75542805989583
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ; }
rank: 177
score: 99.74842756885593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 177
score: 99.74563210227272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = name . Type . OTHER ;
rank: 177
score: 99.7333203125
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 178
score: 99.76703471522177
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; type = Name . Type . OTHER ;
rank: 178
score: 99.76171875
patch: name = ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 178
score: 99.75445963541667
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 178
score: 99.74836705942623
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 178
score: 99.74558945952869
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 178
score: 99.73323567708333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 179
score: 99.76697958669355
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 179
score: 99.7616554542824
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else }
rank: 179
score: 99.75524695444915
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 179
score: 99.7544373629386
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 179
score: 99.7483618951613
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 179
score: 99.74723307291667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 179
score: 99.74556995738637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 179
score: 99.73313685825893
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 180
score: 99.77947366648706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 180
score: 99.76808416193182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 180
score: 99.76677535752118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 180
score: 99.75442708333334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 180
score: 99.74827417834052
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 180
score: 99.74717881944444
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 180
score: 99.74539500269397
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 180
score: 99.73307011045259
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 181
score: 99.76801409040179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Parent ( ) ;
rank: 181
score: 99.76661060474537
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 181
score: 99.7615186347336
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ; }
rank: 181
score: 99.75485229492188
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL String ( ) ;
rank: 181
score: 99.75438611260776
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent . get CaMeL Parent ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 181
score: 99.74823404947917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 181
score: 99.74703543526786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 181
score: 99.7329522494612
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 182
score: 99.7792547817888
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { type = Name . Type ;
rank: 182
score: 99.767978515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : return ; }
rank: 182
score: 99.75472005208333
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 182
score: 99.75424630301339
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 182
score: 99.74820963541667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 182
score: 99.74521665219908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 182
score: 99.73291872258773
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 183
score: 99.76783970424107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ;
rank: 183
score: 99.75469970703125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 183
score: 99.74820963541667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Name ( ) ; }
rank: 183
score: 99.73275862068965
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 184
score: 99.76782687205188
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 184
score: 99.76142081567797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; }
rank: 184
score: 99.75464739118304
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 184
score: 99.7464453125
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 184
score: 99.74517822265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 185
score: 99.76776994977679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 185
score: 99.76612983315678
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 185
score: 99.76123046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 185
score: 99.75464630126953
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 185
score: 99.75413411458334
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 185
score: 99.74507716444673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = Name . Type . OTHER ;
rank: 185
score: 99.73267473493304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 186
score: 99.7787452980324
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 186
score: 99.76610514322917
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 186
score: 99.76107102997449
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; }
rank: 186
score: 99.75449916294643
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 186
score: 99.74496509989754
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } else { type = Name . Type . OTHER ;
rank: 186
score: 99.73262984664352
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 187
score: 99.77867713341347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = Name . Type . OTHER ;
rank: 187
score: 99.76607390372983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 187
score: 99.76107051454741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else }
rank: 187
score: 99.7544833096591
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 187
score: 99.75395676185344
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 187
score: 99.74793481045081
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 187
score: 99.7462308114035
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 187
score: 99.74483235677083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 187
score: 99.73235452586206
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 188
score: 99.77862433667453
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = Name . Type . OTHER ;
rank: 188
score: 99.76600922131148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else type = Name . Type . OTHER ;
rank: 188
score: 99.76105436731558
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 188
score: 99.75447162828948
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 188
score: 99.74791217672414
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 188
score: 99.744775390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } name = Name . Type . OTHER ;
rank: 188
score: 99.73232241030092
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 189
score: 99.77842133620689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } is CaMeL Set = true ;
rank: 189
score: 99.76600864955357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; }
rank: 189
score: 99.76099833504098
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 189
score: 99.75439453125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 189
score: 99.7538818359375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 189
score: 99.74789595170455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 189
score: 99.74612138856132
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 189
score: 99.74472103478773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 189
score: 99.7322836821934
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 190
score: 99.7784030720339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 190
score: 99.7675250509511
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 190
score: 99.76600121670081
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Prop CaMeL Assign = true ;
rank: 190
score: 99.7478448275862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 190
score: 99.74607631138393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 190
score: 99.74468587239583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 190
score: 99.7322099793632
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 191
score: 99.77814041940789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 191
score: 99.76727410082547
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 191
score: 99.7659852074795
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 191
score: 99.76091657366071
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 191
score: 99.75384731950432
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 191
score: 99.74767852247807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String ( ) ; }
rank: 191
score: 99.74467856197033
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } name = Name . Type . OTHER ;
rank: 192
score: 99.77790912828948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; name = Name . Type . OTHER ;
rank: 192
score: 99.76593214465726
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 192
score: 99.76088053385416
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 192
score: 99.75384004237289
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 192
score: 99.75382749495968
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 192
score: 99.74766265368852
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 192
score: 99.731767578125
patch: return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 193
score: 99.77776350054825
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } } type = Name . Type ;
rank: 193
score: 99.76685901988637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 193
score: 99.75380522629311
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 193
score: 99.74755031779661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 193
score: 99.74592242324562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 193
score: 99.73170230263158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 194
score: 99.77770305129717
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; }
rank: 194
score: 99.76684050864361
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 194
score: 99.765869140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; else is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 194
score: 99.76086211622807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ; }
rank: 194
score: 99.75375162760416
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 194
score: 99.74750434027777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 194
score: 99.7458984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 194
score: 99.74441844019397
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 195
score: 99.77769639756944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 195
score: 99.76665683962264
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 195
score: 99.76586100260417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 195
score: 99.76084681919643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 195
score: 99.75376674107143
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 195
score: 99.75367373511905
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 195
score: 99.74748200061275
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 195
score: 99.74438876793033
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 196
score: 99.77763310185185
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 196
score: 99.76663707386363
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 196
score: 99.76582845052083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 196
score: 99.76084624743852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 196
score: 99.74743430397727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ;
rank: 196
score: 99.74435659555289
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 196
score: 99.7313232421875
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 197
score: 99.76647727272727
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 197
score: 99.76569475446429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 197
score: 99.76084321120689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 197
score: 99.75352741109914
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 197
score: 99.74562424879808
patch: if ( Node CaMeL Context . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 198
score: 99.7773193359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 198
score: 99.76559349798387
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 198
score: 99.76070149739583
patch: if ( ! parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 198
score: 99.7534912109375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 198
score: 99.74668134269068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = String . Type . OTHER ;
rank: 198
score: 99.74424641927084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 198
score: 99.73111328125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; type = Name . Type ;
rank: 199
score: 99.7772265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = name . Type ;
rank: 199
score: 99.7655541204637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; return ;
rank: 199
score: 99.76067365679825
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } else { is CaMeL Set = true ; }
rank: 199
score: 99.75356693591101
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 199
score: 99.74551504629629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) != n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 199
score: 99.74417372881356
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 199
score: 99.7309141995614
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 200
score: 99.77720063308189
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 200
score: 99.76614379882812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 200
score: 99.76540982521186
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 200
score: 99.76053059895834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 200
score: 99.75344756155303
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 200
score: 99.75343674879808
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Type ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 200
score: 99.74649398053279
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 200
score: 99.74545127467105
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 200
score: 99.7441650390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 200
score: 99.730908203125
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 201
score: 99.76604352678571
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 201
score: 99.76051873675847
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 201
score: 99.7534375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 201
score: 99.75335903825432
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 201
score: 99.74648942618535
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 201
score: 99.7454246238426
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 201
score: 99.74412407309322
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 202
score: 99.766025390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 202
score: 99.7652075982863
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 202
score: 99.76044601690573
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 202
score: 99.75342638739224
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 202
score: 99.7464599609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 202
score: 99.74541364397321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 202
score: 99.73086111886161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } else { name = n . get CaMeL String ( ) ;
rank: 203
score: 99.77706236758475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 203
score: 99.76519886363636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ; }
rank: 203
score: 99.75329168911638
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 203
score: 99.75328063964844
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 203
score: 99.74640698702831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 203
score: 99.74541364397321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 203
score: 99.74375697544643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 203
score: 99.73084214154412
patch: } if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 204
score: 99.77699615995763
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } } name = n . get CaMeL String ( ) ;
rank: 204
score: 99.76033956962719
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = n . get CaMeL String ( ) ; }
rank: 204
score: 99.75318359375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 204
score: 99.74636008522727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } } name = n . get CaMeL String ( ) ;
rank: 204
score: 99.743671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 204
score: 99.73076520647321
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 205
score: 99.77685546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 205
score: 99.76583158052884
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 205
score: 99.76508706302967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 205
score: 99.76022820723684
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 205
score: 99.75309507308468
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 205
score: 99.75292029747597
patch: Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 205
score: 99.74635790215164
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 205
score: 99.74361328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 206
score: 99.77681107954545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ; }
rank: 206
score: 99.76507268186475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } name = Name . Type . OTHER ;
rank: 206
score: 99.7599883497807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ; }
rank: 206
score: 99.75302269345238
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 206
score: 99.75279017857143
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; } }
rank: 206
score: 99.74618966238839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; }
rank: 206
score: 99.74514535757211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) < n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 206
score: 99.74335769127156
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } is CaMeL Set = true ;
rank: 207
score: 99.77679850260417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 207
score: 99.76579083136792
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 207
score: 99.7599464699074
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; name = n . get CaMeL String ( ) ; }
rank: 207
score: 99.75293719951924
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 207
score: 99.75277815193965
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 207
score: 99.74617513020833
patch: is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 207
score: 99.74498401988636
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 207
score: 99.7304217998798
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 208
score: 99.77676578443878
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } type = Name . Type ;
rank: 208
score: 99.7650539592161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else is CaMeL Set = true ;
rank: 208
score: 99.75290352957589
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 208
score: 99.7527587890625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 208
score: 99.74323640046296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 208
score: 99.73003186677632
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 209
score: 99.77673791956019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 209
score: 99.76572091238839
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 209
score: 99.75288596082089
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 209
score: 99.75273934057203
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 209
score: 99.7460205078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 209
score: 99.74319278492646
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 209
score: 99.72997205010776
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ;
rank: 210
score: 99.76567287071079
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 210
score: 99.76490832913306
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 210
score: 99.7528545673077
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 210
score: 99.74600808662281
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 210
score: 99.74297059257076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 210
score: 99.72994679418103
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 211
score: 99.77651030441811
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } name = n . get CaMeL String ( ) ;
rank: 211
score: 99.7656719501202
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Prop CaMeL Assign = true ;
rank: 211
score: 99.75984700520833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ;
rank: 211
score: 99.75284576416016
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 211
score: 99.75259602864584
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 211
score: 99.74595811631944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } name = Name . Type . OTHER ;
rank: 211
score: 99.74491299715909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 211
score: 99.74292452830188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 211
score: 99.72960553850446
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 212
score: 99.77646141721492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL String ( ) ;
rank: 212
score: 99.76543317522321
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 212
score: 99.76488444010417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 212
score: 99.75979132401316
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 212
score: 99.75253244173729
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 212
score: 99.74595305879237
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 212
score: 99.74488636363637
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 212
score: 99.74289598651961
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 212
score: 99.72888849431818
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 213
score: 99.77642352764423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 213
score: 99.75974849232456
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 213
score: 99.75269033394608
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 213
score: 99.7525301846591
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 213
score: 99.744873046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 213
score: 99.7427502648305
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 214
score: 99.77635862116227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 214
score: 99.76531110491071
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 214
score: 99.76484546326755
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 214
score: 99.75245884486607
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 214
score: 99.74584147135417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 214
score: 99.74485085227273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 214
score: 99.7426513671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 215
score: 99.7652587890625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 215
score: 99.764794921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 215
score: 99.75965227399554
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } }
rank: 215
score: 99.75230407714844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 215
score: 99.74482073102679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 215
score: 99.74261363636364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; } } }
rank: 215
score: 99.728818359375
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 216
score: 99.77602787341101
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 216
score: 99.76478678385416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . OTHER ;
rank: 216
score: 99.75955636160714
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ; }
rank: 216
score: 99.75225830078125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 216
score: 99.74576241629464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 216
score: 99.742578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 217
score: 99.77589545815678
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ;
rank: 217
score: 99.76501242897727
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 217
score: 99.76468912760417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ;
rank: 217
score: 99.75947097252156
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 217
score: 99.74573147681451
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 217
score: 99.74472151131465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 217
score: 99.74246888241525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 217
score: 99.72865513392857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 218
score: 99.77581380208333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; } name = n . get CaMeL String ( ) ;
rank: 218
score: 99.76495481004902
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 218
score: 99.76467993951613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; break ;
rank: 218
score: 99.75208458533653
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 218
score: 99.7518310546875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 218
score: 99.7457275390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 218
score: 99.74465707632211
patch: if ( Node CaMeL Context . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 218
score: 99.742431640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Name ( ) ;
rank: 218
score: 99.72860823006465
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 219
score: 99.76493778935185
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 219
score: 99.75921630859375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 219
score: 99.75201526988636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 219
score: 99.75172526041666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 219
score: 99.74557236493644
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL First CaMeL Child ( ) ; }
rank: 219
score: 99.74239908854166
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 220
score: 99.7757568359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 220
score: 99.76459147135417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) > n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 220
score: 99.75912272135416
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 220
score: 99.75161946614584
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 220
score: 99.74552837171052
patch: is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 220
score: 99.74456787109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 220
score: 99.74237932477679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 220
score: 99.72839116115196
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 221
score: 99.7756591796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 221
score: 99.76474790219908
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 221
score: 99.76456968245968
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 221
score: 99.75902381310097
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 221
score: 99.74544270833333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 221
score: 99.74232954545455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = name . Type . OTHER ; }
rank: 221
score: 99.72825863486842
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 222
score: 99.76467715992646
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 222
score: 99.74441827512256
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 222
score: 99.74225370762711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 222
score: 99.72807785560344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 223
score: 99.77550603693182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . get CaMeL String ( ) ;
rank: 223
score: 99.76448006465517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 223
score: 99.75900794719827
patch: is CaMeL Set = n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 223
score: 99.75182166466347
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 223
score: 99.75145733173076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 223
score: 99.74531870039682
patch: name = n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 223
score: 99.74224446614583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 223
score: 99.72805350167411
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 224
score: 99.775439453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 224
score: 99.76445154989919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; if (
rank: 224
score: 99.76427556818182
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 224
score: 99.75124463848039
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 224
score: 99.74526872306035
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 224
score: 99.74220405190678
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } else { is CaMeL Set = true ;
rank: 224
score: 99.727841796875
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 225
score: 99.77536536907327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 225
score: 99.76424734933036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 225
score: 99.75886910860656
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 225
score: 99.7515380859375
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 225
score: 99.74524960275424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 225
score: 99.7437744140625
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 225
score: 99.74216086647728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } else { type = Name . Type . OTHER ; }
rank: 226
score: 99.76439985795454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 226
score: 99.75859543372844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL String ( ) ; }
rank: 226
score: 99.75106670673077
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 226
score: 99.74524165134804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; }
rank: 226
score: 99.74215548155738
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } }
rank: 226
score: 99.7274678548177
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } return ; }
rank: 227
score: 99.76423117897727
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 227
score: 99.76416903409091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 227
score: 99.75852457682292
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ; }
rank: 227
score: 99.75149910910088
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 227
score: 99.75098613664215
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 227
score: 99.7451171875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 227
score: 99.74345871497844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 227
score: 99.74215494791666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 228
score: 99.76419953377017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope , n . get CaMeL Next ( ) ) ;
rank: 228
score: 99.76410688920454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 228
score: 99.75851124730603
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 228
score: 99.75147372159091
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } }
rank: 228
score: 99.7450927734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 228
score: 99.74334716796875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 228
score: 99.74207991260593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 228
score: 99.7273046875
patch: return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 229
score: 99.77510127314815
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ;
rank: 229
score: 99.75849289190573
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { name = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 229
score: 99.75131022135416
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 229
score: 99.7450750942888
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 229
score: 99.74332682291667
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 229
score: 99.74199715307203
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) )
rank: 229
score: 99.72730364118304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 230
score: 99.77505131091101
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 230
score: 99.76399739583333
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 230
score: 99.76379846643519
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 230
score: 99.75128580729167
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 230
score: 99.74500582510964
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 230
score: 99.7432705965909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 230
score: 99.74196337090164
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } } name = Name . Type . OTHER ;
rank: 230
score: 99.72720497532895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 231
score: 99.76390269886363
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 231
score: 99.76355194627193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 231
score: 99.75075243340164
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 231
score: 99.74494214327831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 231
score: 99.74326685855263
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 231
score: 99.74190719039352
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 231
score: 99.72719818691037
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 232
score: 99.76371343085107
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 232
score: 99.75836813038794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } else { name = n . get CaMeL String ( ) ; }
rank: 232
score: 99.7505615234375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 232
score: 99.74190611758475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( ! is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 232
score: 99.72715407151442
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 233
score: 99.77488490513393
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 233
score: 99.76368931361607
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 233
score: 99.75110897775424
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 233
score: 99.75053929570896
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 233
score: 99.74485922759433
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 233
score: 99.74319118923611
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , parent ) ;
rank: 233
score: 99.74186197916667
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 233
score: 99.72706992953431
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 234
score: 99.77467504040948
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 234
score: 99.76366299715909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Next ( ) ;
rank: 234
score: 99.7633206551535
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 234
score: 99.75829264322917
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 234
score: 99.75103449417372
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { return ; }
rank: 234
score: 99.75040564903846
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 234
score: 99.74484306469299
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ;
rank: 234
score: 99.74286099137932
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 234
score: 99.74184163411458
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } } name = Name . Type . OTHER ;
rank: 234
score: 99.72705078125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 235
score: 99.77460554534314
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = Name . Type . OTHER ;
rank: 235
score: 99.763623046875
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 235
score: 99.76330987338362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 235
score: 99.75090079471983
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 235
score: 99.74466959635417
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 235
score: 99.72702314268868
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 236
score: 99.76355646306818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : case Token . DEC :
rank: 236
score: 99.76322719029018
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 236
score: 99.75088936941964
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 236
score: 99.75027465820312
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 236
score: 99.74251598011364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 237
score: 99.76318359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 237
score: 99.7579833984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } type = n . get CaMeL String ( ) ; }
rank: 237
score: 99.75084577287946
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 237
score: 99.75027465820312
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 237
score: 99.74463704427083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 237
score: 99.74159592848558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 237
score: 99.72690836588542
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 238
score: 99.77452947443182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ; }
rank: 238
score: 99.76346390335648
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 238
score: 99.76314357069673
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 238
score: 99.75797526041667
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 238
score: 99.75082833426339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 238
score: 99.74456787109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 238
score: 99.74227201021634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL String ( ) ) ;
rank: 238
score: 99.74149263822116
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 238
score: 99.72676518278301
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 239
score: 99.77437918526786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type ; type = Name . Type ;
rank: 239
score: 99.76338778409091
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 239
score: 99.7629638671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 239
score: 99.75792211415816
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ; }
rank: 239
score: 99.75015694754464
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 239
score: 99.744404296875
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 239
score: 99.74217066271552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 239
score: 99.726650390625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 240
score: 99.7632697610294
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 240
score: 99.76292660361842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 240
score: 99.75759637551229
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 240
score: 99.7506903286638
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 240
score: 99.75009605532787
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 240
score: 99.744384765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 240
score: 99.74215323464912
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 240
score: 99.74124461206897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ; type = Name . Type . OTHER ;
rank: 240
score: 99.72649274553571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) is CaMeL Set = true ;
rank: 241
score: 99.7740009014423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 241
score: 99.76309793037281
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 241
score: 99.76286969866071
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 241
score: 99.75755859375
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 241
score: 99.7506103515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . FUNCTION ;
rank: 241
score: 99.74994021045919
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 241
score: 99.74438062764831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 241
score: 99.74115300582628
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 241
score: 99.72647798978366
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 242
score: 99.77395193917411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } name = Name . Type ;
rank: 242
score: 99.7630839445153
patch: if ( ! is CaMeL Global CaMeL Scope ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 242
score: 99.76283365885416
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 242
score: 99.75747630635246
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; }
rank: 242
score: 99.75052195581897
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 242
score: 99.74983433314732
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 242
score: 99.74434874487704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 242
score: 99.74202473958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , is CaMeL Prop CaMeL Assign , type ) ;
rank: 242
score: 99.7411397298177
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . to CaMeL String ( ) ;
rank: 242
score: 99.72644708806818
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 243
score: 99.77392578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 243
score: 99.76278573495371
patch: try { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 243
score: 99.75745891702586
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 243
score: 99.75042613636364
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 243
score: 99.74432779947917
patch: if ( ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 243
score: 99.74201882102273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 243
score: 99.726435546875
patch: } is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 244
score: 99.773818359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL Parent ( ) ;
rank: 244
score: 99.7629925271739
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 244
score: 99.76266915457589
patch: if ( parent == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 244
score: 99.75740269252232
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } }
rank: 244
score: 99.75041594328704
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; is CaMeL Set = true ;
rank: 244
score: 99.74432705965908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = n . get CaMeL String ( ) ;
rank: 244
score: 99.74193050986842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 244
score: 99.74096265889831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 245
score: 99.77378216911765
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 245
score: 99.76277949892241
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 245
score: 99.76265462239583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 245
score: 99.75736490885417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 245
score: 99.75034743088942
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . FUNCTION ;
rank: 245
score: 99.74973282724056
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 245
score: 99.74425688244048
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 245
score: 99.74089875768442
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ; } }
rank: 246
score: 99.77376582704741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 246
score: 99.7626483623798
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ;
rank: 246
score: 99.75734049479166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 246
score: 99.75033735795455
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 246
score: 99.74966380635246
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ; }
rank: 246
score: 99.74415717690678
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 246
score: 99.74088541666667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 247
score: 99.76249425551471
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 247
score: 99.75730766684322
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 247
score: 99.75030924479167
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 247
score: 99.74965747434702
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 247
score: 99.7440673828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 247
score: 99.74078669313525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 248
score: 99.77370557598039
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type ;
rank: 248
score: 99.76251921106558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ; }
rank: 248
score: 99.75727370689656
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 248
score: 99.74962133290816
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 248
score: 99.74404849646227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 248
score: 99.74074180453431
patch: is CaMeL Set = false ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 248
score: 99.725869140625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 249
score: 99.77366286057692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; break ;
rank: 249
score: 99.76239224137932
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 249
score: 99.75724845096983
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 249
score: 99.75020926339286
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 249
score: 99.74947804418103
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 249
score: 99.741455078125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 249
score: 99.74072265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 249
score: 99.72574869791667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 250
score: 99.76239224137932
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 250
score: 99.76228707735656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . FUNCTION ; }
rank: 250
score: 99.75724762561275
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 250
score: 99.75018521012932
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 250
score: 99.74945644162736
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 250
score: 99.74398400648585
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 250
score: 99.74130859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n ) { is CaMeL Set = true ;
rank: 250
score: 99.74068196614583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 250
score: 99.7256640625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 251
score: 99.7623291015625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 251
score: 99.75708486519608
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 251
score: 99.7501220703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 251
score: 99.74943324497768
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 251
score: 99.74116042564656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( scope . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 251
score: 99.74064127604167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . NONE ;
rank: 252
score: 99.77342094809322
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } } is CaMeL Set = true ;
rank: 252
score: 99.76232489224138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 252
score: 99.76223904969262
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 252
score: 99.757080078125
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 252
score: 99.74935477120536
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 252
score: 99.7438543911638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 252
score: 99.74095740685097
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 252
score: 99.72556785300925
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 253
score: 99.77331336069915
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 253
score: 99.76217501280738
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . OTHER ; }
rank: 253
score: 99.75704752604166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 253
score: 99.74985758463542
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 253
score: 99.74373081752232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ;
rank: 253
score: 99.74092684659091
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 253
score: 99.74059119591347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 254
score: 99.77330186631944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } name = n . get CaMeL String ( ) ;
rank: 254
score: 99.7570379849138
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; }
rank: 254
score: 99.74927629743304
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 254
score: 99.74091254340277
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) + 1 ) ;
rank: 254
score: 99.74059119591347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = name . Type . OTHER ;
rank: 254
score: 99.72553362165179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Parent ( ) ;
rank: 255
score: 99.77303213443396
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 255
score: 99.75703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 255
score: 99.74970910904256
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 255
score: 99.7492431640625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 255
score: 99.7405654131356
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 256
score: 99.76197160993304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : is CaMeL Set = true ;
rank: 256
score: 99.74964069870283
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 256
score: 99.74921378442797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; break ;
rank: 256
score: 99.743544921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ;
rank: 256
score: 99.74062842653508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 256
score: 99.72532301682692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 257
score: 99.77294080010776
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 257
score: 99.76180013020833
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 257
score: 99.76160668545081
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 257
score: 99.7494372351695
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . GETPROP :
rank: 257
score: 99.74911063058036
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 257
score: 99.74353899274554
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 257
score: 99.74059836647727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 257
score: 99.72530324835526
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 258
score: 99.77292258522728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; break ; } } name = n . get CaMeL String ( ) ;
rank: 258
score: 99.76177300347223
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 258
score: 99.76160088900862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 258
score: 99.75679234095982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; }
rank: 258
score: 99.74935709635416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 258
score: 99.74900599888393
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 258
score: 99.74347408234127
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 258
score: 99.74057525058963
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 258
score: 99.74045632102273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 259
score: 99.77291370738637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 259
score: 99.75674788678279
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 259
score: 99.74899942366804
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ; }
rank: 259
score: 99.74342889300847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 259
score: 99.72504978553921
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 260
score: 99.77283166956019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = n . get CaMeL String ( ) ;
rank: 260
score: 99.76172892252605
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 260
score: 99.76136288400424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 260
score: 99.75672538325472
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; }
rank: 260
score: 99.7490979210805
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . INC :
rank: 260
score: 99.743408203125
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 260
score: 99.74039989406779
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } name = name . Type . OTHER ;
rank: 260
score: 99.72503769188596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 261
score: 99.77279550057871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } } }
rank: 261
score: 99.76134381975446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else switch ( parent . get CaMeL Type ( ) ) {
rank: 261
score: 99.75663034539474
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ;
rank: 261
score: 99.7433661099138
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 261
score: 99.74034627278645
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 261
score: 99.74027193509616
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ;
rank: 262
score: 99.77275558997844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = n . get CaMeL Parent ( ) ;
rank: 262
score: 99.76165660511364
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 262
score: 99.76133805614407
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 262
score: 99.75661981301229
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 262
score: 99.74894205729167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 262
score: 99.74889914772727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 262
score: 99.74029886497641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } type = Name . Type . OTHER ;
rank: 263
score: 99.77275390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 263
score: 99.75658765889831
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 263
score: 99.74889197716347
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Get = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 263
score: 99.74887447033899
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 263
score: 99.740234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } }
rank: 263
score: 99.74017333984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 263
score: 99.72481984105603
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 264
score: 99.77273763020834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } name = name . to CaMeL String ( ) ;
rank: 264
score: 99.7613589638158
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 264
score: 99.76108150158899
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 264
score: 99.74888032058189
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 264
score: 99.74883309057203
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 264
score: 99.74013831967213
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ;
rank: 265
score: 99.772470703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 265
score: 99.76104839777543
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 265
score: 99.761044921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 265
score: 99.75651575307377
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 265
score: 99.74882980872844
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 265
score: 99.74012974330357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 265
score: 99.72468514278017
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 266
score: 99.77245154747597
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; break ; }
rank: 266
score: 99.7608792489035
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 266
score: 99.748828125
patch: name = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 266
score: 99.74866661658653
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 266
score: 99.74313742897728
patch: name = n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 266
score: 99.74012382075472
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 267
score: 99.77239644752359
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 267
score: 99.7564196977459
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } }
rank: 267
score: 99.74879557291666
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 267
score: 99.748662109375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 267
score: 99.74010809536638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL String ( ) ;
rank: 267
score: 99.74002374387256
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 267
score: 99.72458224826389
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 268
score: 99.7723721590909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 268
score: 99.76095030737704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ) ;
rank: 268
score: 99.7487372036638
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 268
score: 99.74864196777344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 268
score: 99.74010291466347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ;
rank: 268
score: 99.73982186153017
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 268
score: 99.72454723011364
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 269
score: 99.76090494791667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 269
score: 99.76068359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC :
rank: 269
score: 99.756181640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; } }
rank: 269
score: 99.7486328125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 269
score: 99.7428955078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 269
score: 99.72453962053571
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 270
score: 99.77233195754717
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type ; }
rank: 270
score: 99.76068115234375
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 270
score: 99.75590988685344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 270
score: 99.74856567382812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 270
score: 99.73995421362704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 270
score: 99.73977272727272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 271
score: 99.77211577316811
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 271
score: 99.7607000942888
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 271
score: 99.7606751685049
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 271
score: 99.74855393629808
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 271
score: 99.74273981813525
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 271
score: 99.73993820440573
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; } type = Name . Type . OTHER ;
rank: 271
score: 99.73972865513393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 272
score: 99.7720359519676
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = name . Type . OTHER ;
rank: 272
score: 99.76066450639205
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 272
score: 99.76063368055556
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 272
score: 99.75589192708334
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 272
score: 99.74855170815678
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 272
score: 99.74848375822368
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 272
score: 99.74273212139423
patch: type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 272
score: 99.73986150568182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 272
score: 99.739677734375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 273
score: 99.77199041193182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ;
rank: 273
score: 99.76061139787946
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 273
score: 99.76054855872844
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 273
score: 99.75587621228448
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } type = Name . Type . OTHER ;
rank: 273
score: 99.74847005208333
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 273
score: 99.74271453373017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Name ( ) ;
rank: 273
score: 99.73982456752232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } }
rank: 273
score: 99.73965219350961
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ ) ;
rank: 273
score: 99.72423053609914
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 274
score: 99.77190290178571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } name = n . get CaMeL String ( ) ;
rank: 274
score: 99.76051613136575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . DEC : is CaMeL Set = true ;
rank: 274
score: 99.75586751302083
patch: name = ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 274
score: 99.74834152747844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 274
score: 99.7482041181144
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 274
score: 99.73972833806818
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 275
score: 99.77185479525862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 275
score: 99.76053155637256
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 275
score: 99.76042770127118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 275
score: 99.74830729166666
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 275
score: 99.74818960336539
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 275
score: 99.74263575819673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } }
rank: 275
score: 99.73962602459017
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 275
score: 99.73946439302884
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == false ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 275
score: 99.724140625
patch: if ( ! ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 276
score: 99.77184637661638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type ;
rank: 276
score: 99.76034494173729
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( is CaMeL Set ) {
rank: 276
score: 99.76027103892544
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 276
score: 99.74812677556818
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { return ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 276
score: 99.74261974897541
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 276
score: 99.73958333333333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 276
score: 99.73931525735294
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 276
score: 99.72412109375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 277
score: 99.77177734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type . OTHER ;
rank: 277
score: 99.76031387061404
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 277
score: 99.76021705483491
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ; }
rank: 277
score: 99.74810014204546
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 277
score: 99.74256998697916
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 277
score: 99.73943285672169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . EMPTY ;
rank: 277
score: 99.73920355902777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 278
score: 99.77174092955508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 278
score: 99.76029528601696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 278
score: 99.75567730402543
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 278
score: 99.74796977796052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 278
score: 99.74796295166016
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 278
score: 99.74252485795455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 278
score: 99.73935171274039
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 278
score: 99.72379557291667
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 279
score: 99.76027045815678
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 279
score: 99.76017400568182
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 279
score: 99.75567526895492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 279
score: 99.74795735677084
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 279
score: 99.74794224330357
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 279
score: 99.73933785860656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 279
score: 99.72372541756465
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 280
score: 99.77159288194444
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ; break ;
rank: 280
score: 99.76015218098958
patch: if ( is CaMeL Global CaMeL Scope ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 280
score: 99.75552428002452
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } }
rank: 280
score: 99.74795645254629
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 280
score: 99.74772426060268
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 280
score: 99.7392999057112
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 280
score: 99.73899623325893
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 280
score: 99.72362439385776
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 281
score: 99.76008807488208
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 281
score: 99.74793294270833
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 281
score: 99.74764811197916
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 281
score: 99.74249371027543
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 281
score: 99.73929036458334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 281
score: 99.723525390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 282
score: 99.77140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; break ; } type = Name . Type ;
rank: 282
score: 99.75546714907787
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 282
score: 99.74785324622844
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 282
score: 99.74247018914474
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 282
score: 99.73924763997395
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 283
score: 99.77138491030092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ; }
rank: 283
score: 99.76001544331395
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 283
score: 99.75992257254464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 283
score: 99.75533621651786
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 283
score: 99.74781514830508
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 283
score: 99.74745279947916
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 283
score: 99.73922293526786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL String ( ) ;
rank: 283
score: 99.73885404146634
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == parent ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 283
score: 99.72347861842105
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } else { name = n . get CaMeL String ( ) ;
rank: 284
score: 99.77129255022321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 284
score: 99.75986664870689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 284
score: 99.74776335685483
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 284
score: 99.73922164351852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } return ;
rank: 284
score: 99.72340198863637
patch: if ( n . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 285
score: 99.77129090507076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } name = name . Type . OTHER ;
rank: 285
score: 99.75986735026042
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; }
rank: 285
score: 99.75985281808036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 285
score: 99.75513936705508
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 285
score: 99.7476866675205
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Prop CaMeL Assign = true ;
rank: 285
score: 99.74743430397727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 285
score: 99.7391857710041
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type . NONE ; }
rank: 285
score: 99.73866850754311
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 286
score: 99.77109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; break ; }
rank: 286
score: 99.75985604745371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 286
score: 99.75984981142241
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 286
score: 99.75511410361842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ; }
rank: 286
score: 99.74768288352273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 286
score: 99.74738479872882
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 286
score: 99.74222301136363
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 286
score: 99.73913995150862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String CaMeL Value ( ) ; type = Name . Type . OTHER ;
rank: 286
score: 99.723388671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 287
score: 99.7710705773305
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 287
score: 99.75984981142241
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION + get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 287
score: 99.75982355667372
patch: if ( is CaMeL Global ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 287
score: 99.75510169719827
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = n . get CaMeL String ( ) ; }
rank: 287
score: 99.7475353422619
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 287
score: 99.7472900390625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; return ;
rank: 287
score: 99.74222237723214
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; return ; } name = n . get CaMeL String ( ) ;
rank: 287
score: 99.73907791940789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; break ; } } }
rank: 287
score: 99.73851667131696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 287
score: 99.72335012335526
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 288
score: 99.77093816207628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 288
score: 99.75505461516204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } type = Name . Type . OTHER ;
rank: 288
score: 99.74750066207628
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 288
score: 99.74723307291667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 288
score: 99.73902652138158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 288
score: 99.73849540844299
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 288
score: 99.72327769886364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = n . get CaMeL String ( ) ;
rank: 289
score: 99.75980113636363
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 289
score: 99.75978190104166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 289
score: 99.75497872488839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 289
score: 99.74749966325432
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 289
score: 99.74722693101415
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 289
score: 99.74204282407408
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 289
score: 99.738916015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 289
score: 99.723232421875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 290
score: 99.77083646334134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } } }
rank: 290
score: 99.75975734904661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ; }
rank: 290
score: 99.75972123579545
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 290
score: 99.74749755859375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 290
score: 99.74701891447368
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 290
score: 99.73834018049568
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 290
score: 99.72323019462719
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 291
score: 99.77075639204546
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 291
score: 99.75974754050925
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 291
score: 99.7595537293632
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . OTHER ;
rank: 291
score: 99.74721771816037
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 291
score: 99.74701034813596
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 291
score: 99.73875325520834
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 291
score: 99.72317116477272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 292
score: 99.7597235317888
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 292
score: 99.7548000529661
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ;
rank: 292
score: 99.74716962394068
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 292
score: 99.74700816761364
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 292
score: 99.74187301377118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 292
score: 99.73871721540179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } } name = name . get CaMeL String ( ) ;
rank: 292
score: 99.7231024380388
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 293
score: 99.770654296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 293
score: 99.75962094907408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , parent . get CaMeL Next ( ) ) ;
rank: 293
score: 99.75944914641204
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 293
score: 99.75479714912281
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } } name = n . get CaMeL String ( ) ;
rank: 293
score: 99.74716186523438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 293
score: 99.74684920400944
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 293
score: 99.74184097782258
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 293
score: 99.73868948514344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } }
rank: 293
score: 99.7230149872449
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 294
score: 99.77064251077586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 294
score: 99.75937325613839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , true ) ;
rank: 294
score: 99.75479020743535
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 294
score: 99.7471423539959
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 294
score: 99.74676410222457
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 294
score: 99.72295607182018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 295
score: 99.77063927283653
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 295
score: 99.75936776620371
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 295
score: 99.75921113612289
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . INC :
rank: 295
score: 99.75474673411885
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 295
score: 99.74707760027985
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 295
score: 99.7467190926535
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 295
score: 99.74180866109914
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 295
score: 99.73794450431035
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 295
score: 99.72295587713069
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 296
score: 99.77055140904018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 296
score: 99.75469435307018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 296
score: 99.74705376059322
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; break ;
rank: 296
score: 99.74659830729166
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 296
score: 99.74178340517241
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 296
score: 99.73859719669117
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 296
score: 99.73791082974138
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 297
score: 99.77052659254808
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 297
score: 99.75916193181818
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 297
score: 99.75909830729167
patch: try { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 297
score: 99.75468418961864
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 297
score: 99.74680808738425
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 297
score: 99.74659059758773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 297
score: 99.7385723407452
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 297
score: 99.73783735795455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 297
score: 99.72287109375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 298
score: 99.77049037388393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = Name . Type ; type = Name . Type ;
rank: 298
score: 99.75908371497844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 298
score: 99.75907679966518
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 298
score: 99.74658203125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 298
score: 99.74164496527777
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 298
score: 99.73855794270834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 298
score: 99.73783656529018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 298
score: 99.72281620420259
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 299
score: 99.77048211348684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 299
score: 99.75906937210648
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 299
score: 99.759033203125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; if (
rank: 299
score: 99.75464739118304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 299
score: 99.74677891885081
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 299
score: 99.74163301112289
patch: name = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 299
score: 99.73854608050847
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 299
score: 99.72277601709905
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 300
score: 99.77046643273304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 300
score: 99.75906372070312
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 300
score: 99.7589599609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 300
score: 99.7546142578125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 300
score: 99.7467753092448
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 300
score: 99.74644961599576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 300
score: 99.74162046370968
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = Name . Type . OTHER ;
rank: 300
score: 99.73851667131696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ; }
rank: 300
score: 99.7377259497549
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 301
score: 99.7704250529661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 301
score: 99.75892857142857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 301
score: 99.75450303819444
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 301
score: 99.74669409579919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 301
score: 99.74643735532408
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Next ( ) ; type = Name . Type . OTHER ;
rank: 301
score: 99.73846315870098
patch: is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 301
score: 99.72270764802632
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Name ( ) ;
rank: 302
score: 99.77041015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 302
score: 99.75890661168981
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if (
rank: 302
score: 99.75447265625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 302
score: 99.74666922433036
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 302
score: 99.73836844308036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Name ( ) ;
rank: 302
score: 99.72235979352679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 303
score: 99.75889185855263
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 303
score: 99.75886483028017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 303
score: 99.75444980837264
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 303
score: 99.74666595458984
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 303
score: 99.74156680349576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 303
score: 99.7383640095339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! ( parent . get CaMeL First CaMeL Child ( ) == n ) )
rank: 303
score: 99.72232491629464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 304
score: 99.77025938870614
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 304
score: 99.75885416666667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . FUNCTION ;
rank: 304
score: 99.75883152173913
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 304
score: 99.75426374162946
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; }
rank: 304
score: 99.74665178571429
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 304
score: 99.74609375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 304
score: 99.74148763020834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 304
score: 99.73805519386575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; } }
rank: 304
score: 99.73732152478448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 305
score: 99.75882591391509
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 305
score: 99.75425384004237
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = n . get CaMeL String ( ) ; }
rank: 305
score: 99.74660866477272
patch: if ( parent != null ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 305
score: 99.738037109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 305
score: 99.73727651742789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof Scope ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 306
score: 99.77011213631465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 306
score: 99.75872502561475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else is CaMeL Prop CaMeL Assign = true ;
rank: 306
score: 99.75420242059427
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ; }
rank: 306
score: 99.74605015345982
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = rvalue == null ? Name . Type . OTHER : get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 306
score: 99.73722478693182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 306
score: 99.72220223410088
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 307
score: 99.77007279829546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 307
score: 99.75869140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 307
score: 99.75864343475877
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 307
score: 99.754150390625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; }
rank: 307
score: 99.74632504111842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 307
score: 99.74604587928921
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 307
score: 99.74132037984914
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 307
score: 99.73719200721153
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 307
score: 99.7222012606534
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 308
score: 99.77003636853448
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 308
score: 99.75869140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . INC :
rank: 308
score: 99.75861227101294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 308
score: 99.7463150024414
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ; }
rank: 308
score: 99.7459365068856
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ; }
rank: 308
score: 99.74131373355263
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 308
score: 99.73798828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) + $STRING$ ) ;
rank: 308
score: 99.73715315193965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL Parent ( ) ) ;
rank: 308
score: 99.72210347877359
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 309
score: 99.75861002604167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 309
score: 99.75857490405701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 309
score: 99.75405033299181
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 309
score: 99.74629526289682
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 309
score: 99.74593098958333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ;
rank: 309
score: 99.73798331567797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 309
score: 99.7371074969952
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 309
score: 99.72205741450472
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 310
score: 99.7698974609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 310
score: 99.75849112817797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 310
score: 99.75395063920455
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 310
score: 99.74629211425781
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 310
score: 99.7412109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 310
score: 99.73797707479508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 310
score: 99.73696203399123
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 310
score: 99.722001953125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 311
score: 99.76983642578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type ;
rank: 311
score: 99.75851004464286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 311
score: 99.75388055098684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } }
rank: 311
score: 99.74625355113636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL String ( ) ;
rank: 311
score: 99.74076334635417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 311
score: 99.73686872209821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 311
score: 99.721923828125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 312
score: 99.76983432112068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 312
score: 99.75845449942129
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 312
score: 99.75379231770833
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 312
score: 99.74622453962054
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 312
score: 99.74073169849537
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 312
score: 99.73686161747685
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 313
score: 99.75845396752452
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 313
score: 99.75374644886364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; }
rank: 313
score: 99.74613952636719
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 313
score: 99.74563857256356
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; }
rank: 313
score: 99.74065412554825
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 313
score: 99.73778496413935
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 313
score: 99.73670789930556
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 313
score: 99.72177010995371
patch: return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 314
score: 99.76976044323979
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name ;
rank: 314
score: 99.75841133549528
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 314
score: 99.75809031519397
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 314
score: 99.7536865234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 314
score: 99.74613882211538
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 314
score: 99.74557883522728
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 314
score: 99.73774494108606
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 314
score: 99.72174944196429
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 315
score: 99.76968819754464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ;
rank: 315
score: 99.75808560646186
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 315
score: 99.75343397797131
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 315
score: 99.74554912860577
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 315
score: 99.74058089717742
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = Name . Type . OTHER ;
rank: 315
score: 99.72172489872685
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 316
score: 99.76966203962054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 316
score: 99.75813802083333
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 316
score: 99.75801595052083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 316
score: 99.74550083705357
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 316
score: 99.737646484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 316
score: 99.73652515076755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 316
score: 99.72147914341518
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; }
rank: 317
score: 99.7580126152664
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 317
score: 99.75326588114754
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ; }
rank: 317
score: 99.74533134594299
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 317
score: 99.73763834635416
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 317
score: 99.73634620949075
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 317
score: 99.72144493689903
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 318
score: 99.76957484654018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ; } }
rank: 318
score: 99.7580126152664
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; } break ;
rank: 318
score: 99.75789240056818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) is CaMeL Set = true ;
rank: 318
score: 99.75326425057871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 318
score: 99.74581962719299
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 318
score: 99.745263671875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 318
score: 99.73762116608796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; } }
rank: 318
score: 99.73634525767544
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 319
score: 99.76954967570755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 319
score: 99.75791181144068
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 319
score: 99.75322863520408
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 319
score: 99.74576009114584
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 319
score: 99.740478515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ;
rank: 319
score: 99.73758606991525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ;
rank: 319
score: 99.73626598011364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 319
score: 99.72139246323529
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 320
score: 99.75778680098684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 320
score: 99.75320381030701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; }
rank: 320
score: 99.74569266183036
patch: if ( parent != null ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 320
score: 99.74521998355263
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 320
score: 99.74047407670454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } return ; }
rank: 320
score: 99.72111002604167
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 321
score: 99.76938920454545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 321
score: 99.75784451844262
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 321
score: 99.75310202205883
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } }
rank: 321
score: 99.74564361572266
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 321
score: 99.74047009698276
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ;
rank: 321
score: 99.73758138020834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 321
score: 99.73614501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 322
score: 99.76935135690789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 322
score: 99.7578369140625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 322
score: 99.75758579799107
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 322
score: 99.75309836647727
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 322
score: 99.74509148848684
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 322
score: 99.74039099351415
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 322
score: 99.73755724676724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 322
score: 99.72049386160714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } type = n . get CaMeL String ( ) ;
rank: 323
score: 99.76923828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Type . OTHER ;
rank: 323
score: 99.75782993861607
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 323
score: 99.75751065340908
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 323
score: 99.7454769736842
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 323
score: 99.74502766927084
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! is CaMeL Set ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 323
score: 99.73751884594299
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ;
rank: 323
score: 99.73602175245098
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 323
score: 99.72041186951755
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 324
score: 99.7575050636574
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 324
score: 99.7530517578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } type = n . get CaMeL String ( ) ;
rank: 324
score: 99.74546274038461
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 324
score: 99.7449951171875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 324
score: 99.74012678760593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 325
score: 99.76922286184211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; } }
rank: 325
score: 99.75770786830357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 325
score: 99.75747793692129
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 325
score: 99.75292112116227
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 325
score: 99.74546079282408
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 325
score: 99.73748779296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL Name ( ) ;
rank: 325
score: 99.72021484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { is CaMeL Set = true ; }
rank: 326
score: 99.75769856770833
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 326
score: 99.75742750901442
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 326
score: 99.75288899739583
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 326
score: 99.74543762207031
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 326
score: 99.74484408103814
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 326
score: 99.74009967672414
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 326
score: 99.73737444196429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 327
score: 99.75769257127193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; case Token . GETPROP :
rank: 327
score: 99.7573711688702
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ;
rank: 327
score: 99.752880859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 327
score: 99.7448260967548
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 327
score: 99.74009076286765
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 327
score: 99.73737089512711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 327
score: 99.73578752790179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 328
score: 99.76895084021227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ;
rank: 328
score: 99.7576904296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 328
score: 99.75709751674107
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 328
score: 99.75273106461864
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 328
score: 99.74542025862068
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 328
score: 99.7447861493644
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 328
score: 99.74007457386364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } return ;
rank: 328
score: 99.73734828404018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = name . Type . OTHER ; }
rank: 328
score: 99.72012765066964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; }
rank: 329
score: 99.757080078125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node parent = parent . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 329
score: 99.75267353995902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 329
score: 99.7453290831368
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 329
score: 99.7447659676535
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 329
score: 99.73999521683673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String ( ) ; }
rank: 329
score: 99.73729626885776
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 329
score: 99.72010348135964
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 330
score: 99.76888020833333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } } name = n . get CaMeL String ( ) ;
rank: 330
score: 99.74527681790866
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 330
score: 99.74474476959746
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : is CaMeL Set = true ;
rank: 330
score: 99.739990234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Name ( ) ;
rank: 330
score: 99.73727704893868
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 330
score: 99.73561873525944
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 330
score: 99.72005504261364
patch: if ( n . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 331
score: 99.768876953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . to CaMeL String ( ) ;
rank: 331
score: 99.75726996527777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 331
score: 99.75699573863636
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 331
score: 99.74522816051136
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 331
score: 99.7447265625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 331
score: 99.73726029829545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } } }
rank: 331
score: 99.72004647090517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 332
score: 99.768837890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type ; type = Name . Type ;
rank: 332
score: 99.75722319504311
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; node = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 332
score: 99.75262858072917
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 332
score: 99.7446533203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 332
score: 99.73992723034274
patch: name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 332
score: 99.73718882415254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 332
score: 99.7355536099138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . EMPTY ;
rank: 333
score: 99.76882699819711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 333
score: 99.75716145833333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 333
score: 99.74500450721153
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 333
score: 99.74459523168103
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 333
score: 99.73988217213115
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 333
score: 99.73715259989754
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } }
rank: 334
score: 99.76878255208334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { name = Name . Type . OTHER ;
rank: 334
score: 99.75677849264706
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 334
score: 99.7525634765625
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 334
score: 99.74498330393145
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Prop CaMeL Assign = true ; }
rank: 334
score: 99.74457097457628
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 334
score: 99.73987507370283
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 334
score: 99.73714505709134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 334
score: 99.73531788793103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 334
score: 99.71996166087963
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 335
score: 99.76878138950893
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } is CaMeL Set = true ;
rank: 335
score: 99.75673647280092
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 335
score: 99.75236002604167
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 335
score: 99.74484154485887
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Prop CaMeL Assign = true ; }
rank: 335
score: 99.73985368114407
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 335
score: 99.73712158203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL Parent ( ) ;
rank: 335
score: 99.71993001302083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ;
rank: 336
score: 99.76876831054688
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; } type = Name . Type ;
rank: 336
score: 99.75652606670673
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 336
score: 99.75230305989584
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 336
score: 99.74478310032895
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 336
score: 99.74451497395833
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . FUNCTION ;
rank: 336
score: 99.73712058145492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 336
score: 99.71991081957547
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 337
score: 99.76869140625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 337
score: 99.75705009594299
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 337
score: 99.75648082386364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . INC : case Token . DEC :
rank: 337
score: 99.75209381620763
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; }
rank: 337
score: 99.74474158653847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 337
score: 99.74448067801339
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 337
score: 99.73697916666667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 337
score: 99.73515453673245
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 338
score: 99.75646723533163
patch: if ( ( parent != null ) || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 338
score: 99.75208629261364
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 338
score: 99.74462890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 338
score: 99.74447428385416
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 338
score: 99.73977864583334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 338
score: 99.73696849385246
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 338
score: 99.73501699942129
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 338
score: 99.71979758522727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 339
score: 99.75695082720588
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 339
score: 99.75207305372807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 339
score: 99.74462090163935
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL Qualified CaMeL Name ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 339
score: 99.74445452008929
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 339
score: 99.73693647540983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 339
score: 99.73494746767241
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 339
score: 99.71978549299568
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 340
score: 99.75694537984914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) > n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 340
score: 99.75638521634616
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 340
score: 99.75198622881356
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 340
score: 99.74461177357456
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 340
score: 99.74438904879386
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 340
score: 99.73968205686475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; }
rank: 340
score: 99.7369229403409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . NONE ;
rank: 340
score: 99.71977796052632
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } else { name = n . get CaMeL String ( ) ; }
rank: 341
score: 99.76842389787946
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } name = n . get CaMeL String ( ) ;
rank: 341
score: 99.75196169133773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ; }
rank: 341
score: 99.74422200520833
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 341
score: 99.73690744173729
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 341
score: 99.73476736886161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , false ) ;
rank: 341
score: 99.71977707435344
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 342
score: 99.76832339638158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 342
score: 99.75668853183963
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 342
score: 99.75178760593221
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 342
score: 99.7445819561298
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 342
score: 99.74421037946429
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 342
score: 99.7368584994612
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 343
score: 99.76831515330188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = name . to CaMeL String ( ) ;
rank: 343
score: 99.75651898300438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 343
score: 99.75619346217105
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 343
score: 99.75172582165948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 343
score: 99.74458087858606
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 343
score: 99.74419028072033
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 343
score: 99.73683518629808
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 343
score: 99.71970847800925
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 344
score: 99.76828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { name = n . get CaMeL String ( ) ; }
rank: 344
score: 99.75643331962719
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 344
score: 99.75167791193182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 344
score: 99.74405496162281
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 344
score: 99.73954747086864
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 344
score: 99.73682528409091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = name . Type . OTHER ;
rank: 344
score: 99.73461009837963
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 345
score: 99.7681551846591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 345
score: 99.75641169313525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ; }
rank: 345
score: 99.75616122159092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL Parent ( ) ;
rank: 345
score: 99.74447631835938
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 345
score: 99.736787109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 345
score: 99.73454938616071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 346
score: 99.75640558792372
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 346
score: 99.74386160714286
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 346
score: 99.73678385416666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 346
score: 99.73444602272727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 346
score: 99.719482421875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 347
score: 99.75640462239583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign |= true ;
rank: 347
score: 99.75611193426724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 347
score: 99.7515380859375
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 347
score: 99.74447195870536
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 347
score: 99.7394515749008
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 347
score: 99.73678023726852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 347
score: 99.73435816271552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 347
score: 99.71942471590908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 348
score: 99.76810008081897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } name = Name . Type ;
rank: 348
score: 99.75640190972223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , n . get CaMeL Next ( ) ) ;
rank: 348
score: 99.75140591325432
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 348
score: 99.74376178609914
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 348
score: 99.73944682459677
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } return ;
rank: 348
score: 99.71936974158653
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; type = Name . Type . OTHER ;
rank: 349
score: 99.75631080483491
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 349
score: 99.75139973958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ; }
rank: 349
score: 99.74440160290948
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 349
score: 99.7437588778409
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 349
score: 99.73944382440476
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 349
score: 99.73434930098684
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 349
score: 99.7193667763158
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 350
score: 99.76803768382354
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = Name . Type ; }
rank: 350
score: 99.75602504185268
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 350
score: 99.75138346354167
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 350
score: 99.74439453125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . DEC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 350
score: 99.74363579184322
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n . get CaMeL Next ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 350
score: 99.73931294102823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 350
score: 99.73671694155092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Parent ( ) . get CaMeL String ( ) ;
rank: 350
score: 99.73432448814656
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 350
score: 99.7192578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 351
score: 99.76800019862289
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; break ; } }
rank: 351
score: 99.75622772752193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 351
score: 99.75599500868056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; type = Name . Type . OTHER ;
rank: 351
score: 99.74439415564903
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 351
score: 99.74361866918103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Get = true ;
rank: 351
score: 99.73671234631148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 351
score: 99.73429081357759
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL String ( ) ) ;
rank: 351
score: 99.71912883890086
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 352
score: 99.76796538254311
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 352
score: 99.75594979745371
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 352
score: 99.74357657596983
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { return ; }
rank: 352
score: 99.73920036764706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 352
score: 99.73661221590909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 352
score: 99.73427734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ; }
rank: 352
score: 99.71900255926724
patch: return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 353
score: 99.76791900058963
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = n . get CaMeL Parent ( ) ;
rank: 353
score: 99.75616861979167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 353
score: 99.75592386497641
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 353
score: 99.74354654947916
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 353
score: 99.73657687205188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 353
score: 99.718994140625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 354
score: 99.76788433527543
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 354
score: 99.75584253771552
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 354
score: 99.7443214699074
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 354
score: 99.73657626793033
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 354
score: 99.7341941550926
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n ) ;
rank: 354
score: 99.718994140625
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 355
score: 99.76787277747844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 355
score: 99.756103515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 355
score: 99.75583718039773
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 355
score: 99.74430899784483
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . DEC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 356
score: 99.7678643588362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type . OTHER ;
rank: 356
score: 99.75575322690217
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 356
score: 99.75108792489036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 356
score: 99.74425506591797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . FUNCTION : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 356
score: 99.743408203125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 356
score: 99.7390380859375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 356
score: 99.7364501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 356
score: 99.71896063112744
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } is CaMeL Set = true ;
rank: 357
score: 99.7560546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 357
score: 99.75569957386364
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 357
score: 99.7510498046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; } }
rank: 357
score: 99.74421037946429
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 357
score: 99.7364001664959
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 357
score: 99.7337979403409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 358
score: 99.75605148565573
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 358
score: 99.75104166666667
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 358
score: 99.74418064805327
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 358
score: 99.73897104414682
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 358
score: 99.73639665570175
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 358
score: 99.71890980113636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 359
score: 99.75602489406779
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 359
score: 99.75100272042411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ;
rank: 359
score: 99.74411579713983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 359
score: 99.74334927262932
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ; break ;
rank: 359
score: 99.73894332627118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 359
score: 99.73637615266394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 359
score: 99.73373579545455
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 359
score: 99.71890419407895
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 360
score: 99.7676171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ; } type = Name . Type ;
rank: 360
score: 99.75554289641204
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 360
score: 99.7509033203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; }
rank: 360
score: 99.74403782894737
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 360
score: 99.74333243534483
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 360
score: 99.73628743489583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } }
rank: 360
score: 99.73372395833333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 360
score: 99.71866581357759
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 361
score: 99.75590006510417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . OTHER ;
rank: 361
score: 99.75553072415866
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION : get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 361
score: 99.7508544921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; } }
rank: 361
score: 99.74395216557018
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 361
score: 99.74333243534483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 361
score: 99.73371834590517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 362
score: 99.76756157309322
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 362
score: 99.75588338883196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 362
score: 99.75551060267857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 362
score: 99.75078621557203
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 362
score: 99.74393463134766
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ; }
rank: 362
score: 99.73884529903017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 362
score: 99.73361732219827
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 362
score: 99.7185809795673
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 363
score: 99.76754557291666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 363
score: 99.75544956752232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 363
score: 99.74393372616525
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 363
score: 99.73883573887711
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 363
score: 99.73605872844827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 363
score: 99.7335269325658
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 364
score: 99.76754261363637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; break ; } } name = n . get CaMeL String ( ) ;
rank: 364
score: 99.75577799479167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) > n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 364
score: 99.75539102359694
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 364
score: 99.75071498325893
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 364
score: 99.743896484375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 364
score: 99.74311355064656
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 364
score: 99.73880709134616
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 364
score: 99.73605872844827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 364
score: 99.73342369342673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) . get CaMeL String ( ) ;
rank: 364
score: 99.71849568684895
patch: is CaMeL Set = true ; type = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 365
score: 99.75569974459134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; is CaMeL Set = true ;
rank: 365
score: 99.75064808238636
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 365
score: 99.74309833233173
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 365
score: 99.73880103326613
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 365
score: 99.736044921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } } name = name . get CaMeL String ( ) ;
rank: 365
score: 99.71844012920673
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 366
score: 99.74307987607759
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 366
score: 99.73877766927083
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 366
score: 99.73338160021552
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 367
score: 99.76734240301724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; name = Name . Type . OTHER ;
rank: 367
score: 99.75526258680556
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) is CaMeL Set = true ;
rank: 367
score: 99.75059359681373
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 367
score: 99.74379642674181
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 367
score: 99.74307364004629
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 367
score: 99.73877740675404
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 367
score: 99.73600821659483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Qualified CaMeL Name ( ) ;
rank: 367
score: 99.73337227957589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 367
score: 99.71828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { is CaMeL Set = true ;
rank: 368
score: 99.76720319475446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; } }
rank: 368
score: 99.75518588362068
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 368
score: 99.75058088631465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 368
score: 99.7437808388158
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 368
score: 99.73598931760205
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ;
rank: 368
score: 99.73333740234375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 369
score: 99.76718930844908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 369
score: 99.75538736979166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 369
score: 99.75509327855603
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 369
score: 99.75054059709821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 369
score: 99.74370930989583
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 369
score: 99.74289772727273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 369
score: 99.73876111260776
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 369
score: 99.73590433372641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; }
rank: 369
score: 99.71820644162736
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . TYPE ;
rank: 370
score: 99.75503305288461
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 370
score: 99.75052315848214
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = n . get CaMeL String ( ) ;
rank: 370
score: 99.743701171875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 370
score: 99.7386962890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 370
score: 99.73582141804245
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . NONE ;
rank: 370
score: 99.71820068359375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 371
score: 99.7670477505388
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = Name . Type ;
rank: 371
score: 99.7550048828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 371
score: 99.75048000529661
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 371
score: 99.743701171875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 371
score: 99.73869376346983
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 371
score: 99.7357016509434
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } name = Name . Type . OTHER ;
rank: 371
score: 99.73302801724138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 371
score: 99.71815321180556
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 372
score: 99.75521900614754
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 372
score: 99.75491153492646
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 372
score: 99.75032276218221
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 372
score: 99.74284415409483
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 372
score: 99.73865763346355
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; }
rank: 372
score: 99.73565777277543
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 372
score: 99.73301959859914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( parent , n . get CaMeL Next ( ) ) ;
rank: 373
score: 99.76691851699562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; break ; }
rank: 373
score: 99.75521100153688
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 373
score: 99.75491153492646
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 373
score: 99.75028138241525
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ;
rank: 373
score: 99.7436767578125
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 373
score: 99.74277001096492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 373
score: 99.7385986328125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 373
score: 99.73300276131465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { try { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 373
score: 99.71807746167453
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 374
score: 99.7668701171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 374
score: 99.75518391927083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 374
score: 99.75016837284483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 374
score: 99.74271716101696
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 374
score: 99.73855689264113
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 374
score: 99.73554002192982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } is CaMeL Set = true ;
rank: 374
score: 99.732880859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 374
score: 99.71802218455188
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 375
score: 99.75518120659723
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 375
score: 99.75484451593137
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 375
score: 99.74992290296052
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ;
rank: 375
score: 99.74360656738281
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 375
score: 99.73855340676229
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 375
score: 99.73539677372685
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 375
score: 99.71800013950893
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; }
rank: 376
score: 99.75483141447368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 376
score: 99.74353841145833
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 376
score: 99.73848276289682
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 376
score: 99.73276703933189
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 376
score: 99.71795022898706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } } } name = n . get CaMeL String ( ) ;
rank: 377
score: 99.75500909213362
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 377
score: 99.7548195167824
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 377
score: 99.7498779296875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 377
score: 99.7435073852539
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 377
score: 99.74236129502118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 377
score: 99.73847987288136
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 377
score: 99.73533555327869
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 378
score: 99.7666748046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 378
score: 99.75497704221492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 378
score: 99.75466086647727
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 378
score: 99.74976827330508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } } }
rank: 378
score: 99.74343818530701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; break ;
rank: 378
score: 99.74234212239584
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 378
score: 99.73846028645833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 378
score: 99.7326445997807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 378
score: 99.71792436079545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 379
score: 99.76666729266827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } return ;
rank: 379
score: 99.75489964978448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GETPROP ;
rank: 379
score: 99.74966068591101
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 379
score: 99.74343637319711
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 379
score: 99.74233312774123
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 379
score: 99.73516745645492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 379
score: 99.7178799715909
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 380
score: 99.76665949417372
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 380
score: 99.75454477163461
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 380
score: 99.74336965460526
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 380
score: 99.74230336334746
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . FUNCTION ;
rank: 380
score: 99.73516167534723
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } else { type = Name . Type . OTHER ;
rank: 380
score: 99.73254164209905
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 380
score: 99.71783236799568
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 381
score: 99.76658501059322
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 381
score: 99.75477818080357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 381
score: 99.75452351120283
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 381
score: 99.74940892269737
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 381
score: 99.74335769127156
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 381
score: 99.73836930071721
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 381
score: 99.73507634943182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 381
score: 99.73253676470588
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 381
score: 99.71781173406863
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 382
score: 99.76655190677967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } } }
rank: 382
score: 99.7546630859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 382
score: 99.74938757944915
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 382
score: 99.74330969024123
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 382
score: 99.74226597377232
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 382
score: 99.73247514204546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 383
score: 99.7665506998698
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 383
score: 99.75451445997807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; }
rank: 383
score: 99.75446073887711
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 383
score: 99.74934895833333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 383
score: 99.7432880704365
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 383
score: 99.74219577595339
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 383
score: 99.73819461945564
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Parent ( ) ) { is CaMeL Set = true ; }
rank: 383
score: 99.73503508391204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 383
score: 99.73234477796052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 384
score: 99.75444255891394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 384
score: 99.75442940848214
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 384
score: 99.74324410860656
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 384
score: 99.74216224407327
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 384
score: 99.73815524193549
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 385
score: 99.76641310307018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = n . get CaMeL String ( ) ; }
rank: 385
score: 99.75443591101696
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 385
score: 99.75432350852273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . EMPTY ;
rank: 385
score: 99.74925915948276
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 385
score: 99.74213222287736
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 385
score: 99.732314453125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 385
score: 99.71756784539474
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 386
score: 99.7664104959239
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } }
rank: 386
score: 99.75438652663935
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 386
score: 99.7542879971591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 386
score: 99.74921706627156
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } else { is CaMeL Set = true ; }
rank: 386
score: 99.74319022042411
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 386
score: 99.73804124735169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 386
score: 99.73494466145833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ;
rank: 387
score: 99.76641007965686
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 387
score: 99.75414021809895
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; }
rank: 387
score: 99.74919476425438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } } name = n . get CaMeL String ( ) ;
rank: 387
score: 99.7431873139881
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = Name . Type . OTHER ;
rank: 387
score: 99.734931640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 387
score: 99.73215247844827
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 387
score: 99.717529296875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 388
score: 99.76640809257076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } type = Name . Type . OTHER ; type = Name . Type ;
rank: 388
score: 99.75431315104167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 388
score: 99.74314831149194
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 388
score: 99.74199904057018
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . FUNCTION ;
rank: 388
score: 99.73785917637711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 388
score: 99.7349265769676
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } }
rank: 388
score: 99.73208984375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 388
score: 99.71752450980392
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 389
score: 99.75404296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP :
rank: 389
score: 99.74195667613637
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 389
score: 99.73777583607456
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 389
score: 99.73487215909091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 389
score: 99.73205078125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 389
score: 99.71742466517857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } { name = n . get CaMeL String ( ) ;
rank: 390
score: 99.75423177083333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 390
score: 99.7538763552296
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 390
score: 99.74910481770833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = Name . Type . OTHER ;
rank: 390
score: 99.74305889423077
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 390
score: 99.74195577330508
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 390
score: 99.73483126280738
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 390
score: 99.73201925712719
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 390
score: 99.71741985452586
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 391
score: 99.75423177083333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; node = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 391
score: 99.75384410511364
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 391
score: 99.74296703673245
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 391
score: 99.73775421626983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 391
score: 99.7348163311298
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 391
score: 99.73196910511363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 391
score: 99.71738795230263
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 392
score: 99.7662198153409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ; } } name = n . get CaMeL String ( ) ;
rank: 392
score: 99.74188639322917
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 392
score: 99.73773503707628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 392
score: 99.73478618421052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 392
score: 99.73191675646552
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 392
score: 99.71736505681818
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 393
score: 99.7661663552989
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 393
score: 99.754150390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) > n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 393
score: 99.74889102224576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 393
score: 99.74273181352459
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL Qualified CaMeL Name ( ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 393
score: 99.74188347582547
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 393
score: 99.73770633820564
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 393
score: 99.73478323514344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 393
score: 99.73187614889706
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 393
score: 99.71736174938725
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 394
score: 99.76615397135417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 394
score: 99.753759765625
patch: if ( parent . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 394
score: 99.74886881510416
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 394
score: 99.74272228422619
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = Name . Type . OTHER ;
rank: 394
score: 99.74167306082589
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 394
score: 99.73765827047414
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 394
score: 99.73178205818965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 394
score: 99.71724155970982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 395
score: 99.7660067471591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 395
score: 99.75403866525424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 395
score: 99.75370922423245
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 395
score: 99.74270945581897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 395
score: 99.74158977640086
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; }
rank: 395
score: 99.73765345982143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 395
score: 99.73457768278301
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; }
rank: 395
score: 99.73177083333333
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 396
score: 99.76600569385593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 396
score: 99.75399728548729
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 396
score: 99.7536328125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 396
score: 99.74880149147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; name = n . get CaMeL String ( ) ; } }
rank: 396
score: 99.7427001953125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 396
score: 99.74158335540254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 396
score: 99.7345751152664
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ;
rank: 396
score: 99.71709333147321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 397
score: 99.76600366709184
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } }
rank: 397
score: 99.7536200161638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 397
score: 99.74877087823276
patch: } if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 397
score: 99.74268419989224
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 397
score: 99.74157293911638
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 397
score: 99.7345751152664
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 397
score: 99.7315738075658
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 397
score: 99.71699390076755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 398
score: 99.7659792432598
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 398
score: 99.75389811197917
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 398
score: 99.74873860677083
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 398
score: 99.742587890625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 398
score: 99.74155836838942
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ;
rank: 398
score: 99.73740074282787
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = n . get CaMeL String ( ) ;
rank: 398
score: 99.73155475484914
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FALSE ;
rank: 398
score: 99.71686136497641
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 399
score: 99.76590169270834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 399
score: 99.75386555989583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ;
rank: 399
score: 99.75341796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ; }
rank: 399
score: 99.74868834252452
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 399
score: 99.74248504638672
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 399
score: 99.74155099051339
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = rvalue == null ? Name . Type . OTHER : get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 399
score: 99.73735519935344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL First CaMeL Child ( ) ;
rank: 400
score: 99.76589307598039
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 400
score: 99.75381521451271
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 400
score: 99.75340909090909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GETPROP ;
rank: 400
score: 99.74865929555085
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } }
rank: 400
score: 99.74247875548245
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 400
score: 99.73734406502017
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 400
score: 99.73456280048077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 400
score: 99.71668551260964
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } } } name = n . get CaMeL String ( ) ;
rank: 401
score: 99.75340909090909
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 401
score: 99.74865508497807
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 401
score: 99.74247741699219
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL Parent ( ) ;
rank: 401
score: 99.74138532366071
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) == n ) ;
rank: 401
score: 99.73733779131356
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 401
score: 99.73134977921195
patch: if ( is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 401
score: 99.71659633091518
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = n . get CaMeL String ( ) ;
rank: 402
score: 99.76583984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 402
score: 99.75373757102273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; }
rank: 402
score: 99.75337810905613
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 402
score: 99.74862619173729
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = n . get CaMeL String ( ) ; }
rank: 402
score: 99.74246419270834
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 402
score: 99.73732069672131
patch: name = n . get CaMeL String ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 402
score: 99.73452708760246
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ;
rank: 402
score: 99.71658203125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 403
score: 99.75372721354167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ;
rank: 403
score: 99.74842756885593
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 403
score: 99.74246271306818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; } } name = n . get CaMeL String ( ) ;
rank: 403
score: 99.7373046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } }
rank: 403
score: 99.73451908299181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ; type = Name . Type . NONE ;
rank: 403
score: 99.73132554540095
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 403
score: 99.71642645474138
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 404
score: 99.76582362288136
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; type = Name . Type . OTHER ; }
rank: 404
score: 99.753203125
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 404
score: 99.74838362068965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = n . get CaMeL String ( ) ; }
rank: 404
score: 99.74244791666666
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 404
score: 99.74131024894068
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 404
score: 99.73728067366804
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 404
score: 99.73131061422414
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 405
score: 99.765791015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type ;
rank: 405
score: 99.7535988136574
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent , n . get CaMeL Next ( ) ) ;
rank: 405
score: 99.75319998604911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : case Token . DEC :
rank: 405
score: 99.74829599808673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ; }
rank: 405
score: 99.74244181315105
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 405
score: 99.73727943157327
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 405
score: 99.73127948113208
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 405
score: 99.71635380497685
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 406
score: 99.76572265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 406
score: 99.75359552556819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 406
score: 99.748291015625
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 406
score: 99.73444870283019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 406
score: 99.71629971590909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 407
score: 99.76569475446429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } name = Name . Type . OTHER ;
rank: 407
score: 99.75352202868852
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } type = Name . Type . OTHER ;
rank: 407
score: 99.74827293113425
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 407
score: 99.74108014787946
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 407
score: 99.73726466444673
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 407
score: 99.73444602272727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; } } }
rank: 407
score: 99.73117501395089
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 407
score: 99.71626519097222
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 408
score: 99.76560691550925
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 408
score: 99.74107947716347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == 0 ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 408
score: 99.73721516927084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 408
score: 99.73443293167372
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 408
score: 99.73116262335526
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 409
score: 99.75343540736607
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 409
score: 99.75310629986703
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 409
score: 99.74820963541667
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 409
score: 99.74222060381356
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 409
score: 99.73709992439517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 409
score: 99.73440263856132
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . NULL ;
rank: 410
score: 99.76555765086206
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 410
score: 99.75343424479166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ;
rank: 410
score: 99.75305706521739
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 410
score: 99.74813639322916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 410
score: 99.7409912109375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 410
score: 99.73702904485887
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 410
score: 99.73439342570755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 410
score: 99.71618200231481
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 411
score: 99.7655505164195
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } else { name = n . get CaMeL String ( ) ;
rank: 411
score: 99.75338309151786
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 411
score: 99.74210745389344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 411
score: 99.73701791914682
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = n . get CaMeL First CaMeL Child ( ) ;
rank: 411
score: 99.73436578714623
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } else { type = Name . Type ; }
rank: 411
score: 99.73100754310344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 412
score: 99.74807257401316
patch: name = ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 412
score: 99.74210486778846
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 412
score: 99.73700051229508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 412
score: 99.73434884207589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Parent ( ) ;
rank: 412
score: 99.73097478693182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 412
score: 99.71614022090517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 413
score: 99.7480224609375
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 413
score: 99.74206090856481
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 413
score: 99.740966796875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ;
rank: 413
score: 99.73697916666667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 413
score: 99.73434298155738
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 413
score: 99.73088727678571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 413
score: 99.71610753676471
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 414
score: 99.76529043692129
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; break ;
rank: 414
score: 99.75327592329545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set ) is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 414
score: 99.7479173309949
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ; }
rank: 414
score: 99.74201245577831
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ; }
rank: 414
score: 99.74095438294492
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 414
score: 99.73431706832628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 414
score: 99.7160966981132
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 415
score: 99.765234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 415
score: 99.75285993303571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . OTHER ;
rank: 415
score: 99.74789790783899
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 415
score: 99.74193209134616
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 415
score: 99.7409423828125
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 415
score: 99.73693453881049
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 415
score: 99.73422677176339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; } }
rank: 415
score: 99.73086490271227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 415
score: 99.71607317243304
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 416
score: 99.7529929832176
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ;
rank: 416
score: 99.74193050986842
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 416
score: 99.74090021306819
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 416
score: 99.73687855113636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 416
score: 99.7341796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ;
rank: 416
score: 99.71568359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 417
score: 99.76506438078704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . STRING ;
rank: 417
score: 99.74788692079741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; ; }
rank: 417
score: 99.7408935546875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 418
score: 99.76501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 418
score: 99.75269458912037
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 418
score: 99.74781901041666
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 418
score: 99.74184744698661
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 418
score: 99.7408798993644
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ;
rank: 418
score: 99.73684842469262
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 418
score: 99.73074776785714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 419
score: 99.76501885775862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; } name = Name . Type . OTHER ;
rank: 419
score: 99.7528868558114
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; case Token . DEC :
rank: 419
score: 99.75269396551724
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 419
score: 99.741845703125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 419
score: 99.74084924768519
patch: Node parent = parent . get CaMeL Parent ( ) ; if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 419
score: 99.73675440228175
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = true ; }
rank: 419
score: 99.73400065104167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 419
score: 99.7306640625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 420
score: 99.75286233836206
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 420
score: 99.75266746238425
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 420
score: 99.74767645474138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } } type = Name . Type . OTHER ;
rank: 420
score: 99.74184484649123
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 420
score: 99.74080403645833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 420
score: 99.73670247395833
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 420
score: 99.73398774245689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 420
score: 99.73056821469908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 421
score: 99.76484206627156
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . to CaMeL Lower CaMeL Case ( ) ;
rank: 421
score: 99.75285866477273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } return ;
rank: 421
score: 99.75265447443182
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 421
score: 99.74766390931373
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 421
score: 99.74182335805085
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 421
score: 99.73668561662946
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 421
score: 99.73398618344908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = name . Type . OTHER ;
rank: 421
score: 99.73050301535088
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 421
score: 99.7154605263158
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 422
score: 99.76483878442797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } } type = Name . Type ;
rank: 422
score: 99.75285121372768
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 422
score: 99.75263843201755
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 422
score: 99.74755859375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 422
score: 99.74075692160088
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 422
score: 99.7366162909836
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 422
score: 99.73387844279661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; } }
rank: 422
score: 99.73046033135776
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 423
score: 99.76482522898706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } type = Name . Type ; type = Name . Type ;
rank: 423
score: 99.752822265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 423
score: 99.75262451171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , scope ) ;
rank: 423
score: 99.74754204184322
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; name = Name . Type . OTHER ; }
rank: 423
score: 99.74171875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 423
score: 99.74073949353448
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 423
score: 99.73653157552083
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 423
score: 99.73380859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } } name = name . get CaMeL String ( ) ;
rank: 423
score: 99.73044349407327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 423
score: 99.71520774147727
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 424
score: 99.7646905307112
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = name . get CaMeL String ( ) ;
rank: 424
score: 99.75282024515086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ;
rank: 424
score: 99.7526222511574
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 424
score: 99.74752548993644
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 424
score: 99.74073893229166
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 424
score: 99.73647220799181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 424
score: 99.73378392269737
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } } } }
rank: 424
score: 99.73040771484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ;
rank: 424
score: 99.71518998579545
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ;
rank: 425
score: 99.76463130482456
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL Name ( ) ;
rank: 425
score: 99.74744915140086
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 425
score: 99.74160970052084
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 425
score: 99.74073186910377
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 425
score: 99.73644598599138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 425
score: 99.73375525841347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ;
rank: 426
score: 99.76461356026786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ; break ;
rank: 426
score: 99.75278108016305
patch: if ( parent != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 426
score: 99.75249467329546
patch: if ( parent != null ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 426
score: 99.74744723135964
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 426
score: 99.74159975405092
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 426
score: 99.74066372575432
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ; is CaMeL Set = true ;
rank: 426
score: 99.73639385516827
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 426
score: 99.7336328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL Name ( ) ;
rank: 426
score: 99.73038456357759
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NAME ;
rank: 426
score: 99.71501813616071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 427
score: 99.76461087740384
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 427
score: 99.75278072033899
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 427
score: 99.75243236400463
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 427
score: 99.74744466145833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { return ; }
rank: 427
score: 99.73638237847223
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 427
score: 99.73362574084052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 427
score: 99.7302667025862
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 427
score: 99.71496803977273
patch: } } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 428
score: 99.75240455483491
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 428
score: 99.74151985012755
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 428
score: 99.73637863685344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 428
score: 99.73345736799568
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 428
score: 99.71493635506465
patch: return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 429
score: 99.76455891927084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 429
score: 99.75238247575432
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 429
score: 99.74151714777543
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 429
score: 99.74058196504237
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 429
score: 99.7363517515121
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 429
score: 99.73342245133196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 429
score: 99.73022017045454
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 429
score: 99.7149107689951
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 430
score: 99.7645263671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 430
score: 99.75262858072917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 430
score: 99.75237287554825
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 430
score: 99.74054827008929
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 430
score: 99.73338160021552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) + $STRING$ ) ;
rank: 430
score: 99.73014322916667
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 430
score: 99.7148865816886
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 431
score: 99.76451009114584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } type = Name . Type ; type = Name . Type ;
rank: 431
score: 99.75257161458333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . GETPROP ;
rank: 431
score: 99.75237165178571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . FUNCTION : is CaMeL Set = true ;
rank: 431
score: 99.74730160361842
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 431
score: 99.74145079495614
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 431
score: 99.74054058527543
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 431
score: 99.73628452845982
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 431
score: 99.73336588541666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 431
score: 99.73013630319149
patch: if ( ! is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 431
score: 99.71481007543103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 432
score: 99.76450280975877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 432
score: 99.75254899364407
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 432
score: 99.7472900390625
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 432
score: 99.74040020636792
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 432
score: 99.73628162202381
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 432
score: 99.73329085010593
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 432
score: 99.71479853877315
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 433
score: 99.76448277064732
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 433
score: 99.75253182870371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 433
score: 99.75224777747844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 433
score: 99.74725020559211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; }
rank: 433
score: 99.7414287860577
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 433
score: 99.73627485795454
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 433
score: 99.72987102640086
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 433
score: 99.71470424107143
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 434
score: 99.752236328125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 434
score: 99.74724410752118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 434
score: 99.74142456054688
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . FUNCTION : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 434
score: 99.72982352120536
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 434
score: 99.71464672423245
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 435
score: 99.76443246694711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Type . OTHER ;
rank: 435
score: 99.75235335553279
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 435
score: 99.75215731534091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ;
rank: 435
score: 99.7471768465909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ; }
rank: 435
score: 99.7413349454365
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 435
score: 99.7402587890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } is CaMeL Set = true ;
rank: 435
score: 99.73618071933963
patch: name = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 435
score: 99.73314453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 435
score: 99.72972196691177
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 436
score: 99.7644257127193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 436
score: 99.75216619318182
patch: try { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 436
score: 99.75213623046875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 436
score: 99.74132848668981
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ;
rank: 436
score: 99.7361548639113
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 436
score: 99.73310908564815
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 436
score: 99.71453857421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; ; } } name = n . get CaMeL String ( ) ;
rank: 437
score: 99.76438126474056
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 437
score: 99.75212751116071
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 437
score: 99.74700296336206
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ; } }
rank: 437
score: 99.74127960205078
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL Parent ( ) ;
rank: 437
score: 99.740185546875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 437
score: 99.73307825307377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 437
score: 99.72964041573661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 437
score: 99.71453536184211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 438
score: 99.76430084745763
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type ; }
rank: 438
score: 99.74697100105932
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 438
score: 99.74127497438525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } is CaMeL Set = true ; type = n . get CaMeL Parent ( ) ;
rank: 438
score: 99.74013335129311
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 438
score: 99.73610467425847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; }
rank: 438
score: 99.73305423924181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( ! is CaMeL Set ) { type = Name . Type . OTHER ;
rank: 438
score: 99.71453226023706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; ;
rank: 439
score: 99.7520913178066
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 439
score: 99.75201056985294
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 439
score: 99.74695490056818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } }
rank: 439
score: 99.74125896516394
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 439
score: 99.74005011792453
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 439
score: 99.73304036458333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 439
score: 99.72956071820175
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 439
score: 99.71452985491071
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ;
rank: 440
score: 99.746943359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 440
score: 99.74122777478448
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 440
score: 99.73995768229166
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 440
score: 99.73302801724138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n ) ;
rank: 440
score: 99.72948376885776
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 440
score: 99.71440598060344
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 441
score: 99.76416887555804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ; break ;
rank: 441
score: 99.75199381510417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 441
score: 99.75193434495192
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 441
score: 99.74691938920455
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 441
score: 99.74121894211065
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 441
score: 99.7399432842548
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 441
score: 99.73605248235887
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 441
score: 99.73302556818182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } else { type = Name . Type . OTHER ;
rank: 441
score: 99.714384765625
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 442
score: 99.76415076622597
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type ;
rank: 442
score: 99.75188337053571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 442
score: 99.74689352101294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; ; }
rank: 442
score: 99.73602973090277
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ;
rank: 442
score: 99.73301344651442
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ;
rank: 442
score: 99.72930070465686
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 442
score: 99.71432976973684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 443
score: 99.764111328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 443
score: 99.75183977399554
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 443
score: 99.74675641741071
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; }
rank: 443
score: 99.73590605137711
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 443
score: 99.7330078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL First CaMeL Child ( ) ; } }
rank: 443
score: 99.72928172144397
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 443
score: 99.71431929976852
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . OTHER ;
rank: 444
score: 99.7517578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 444
score: 99.74108014787946
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 444
score: 99.73588709677419
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 444
score: 99.73299967447916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } }
rank: 444
score: 99.7143085186298
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 445
score: 99.76409566627359
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 445
score: 99.75174893465909
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 445
score: 99.75159630408653
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 445
score: 99.74675383391204
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 445
score: 99.73291829427083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 445
score: 99.7291015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 446
score: 99.76408781828704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 446
score: 99.75173795021186
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 446
score: 99.75157620614036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP : is CaMeL Set = true ; }
rank: 446
score: 99.7466565148305
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 446
score: 99.74107142857143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 446
score: 99.73579181608606
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) , n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 446
score: 99.73291015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 446
score: 99.71405029296875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 447
score: 99.76404229525862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 447
score: 99.75164163523706
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 447
score: 99.75154331752232
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 447
score: 99.74658203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; }
rank: 447
score: 99.74104817708333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 447
score: 99.73982319078948
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 447
score: 99.735751953125
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 447
score: 99.73287648168103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 447
score: 99.72902268629808
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 447
score: 99.7140234375
patch: type = String . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 448
score: 99.76404229525862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 448
score: 99.75159725900424
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 448
score: 99.75148168103448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 448
score: 99.7398093894676
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; type = Name . Type . OTHER ;
rank: 448
score: 99.73287185968137
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 448
score: 99.72899518694196
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 449
score: 99.75158270474138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 449
score: 99.75145596590909
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 449
score: 99.74648780153508
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = n . get CaMeL String ( ) ; }
rank: 449
score: 99.74099934895834
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 449
score: 99.73973781779661
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 449
score: 99.73572591145833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 449
score: 99.73284280711206
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 449
score: 99.72899486400463
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 449
score: 99.71392611799568
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 450
score: 99.76396085778062
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } }
rank: 450
score: 99.746455078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else }
rank: 450
score: 99.73967988612289
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 450
score: 99.73281424386161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } }
rank: 450
score: 99.72898582175925
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 451
score: 99.75144449869792
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 451
score: 99.74642240084134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; } } }
rank: 451
score: 99.74097880379098
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 451
score: 99.73270747346699
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 451
score: 99.72894394188596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 451
score: 99.71389244342673
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 452
score: 99.7638408954327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 452
score: 99.75149054276316
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; switch ( type ) {
rank: 452
score: 99.75140591325432
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 452
score: 99.74634202860169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 452
score: 99.74097067212301
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 452
score: 99.73965567129629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { try { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 452
score: 99.73260904947917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) )
rank: 452
score: 99.72890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 453
score: 99.76370442708334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 453
score: 99.75141157670454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } switch ( n . get CaMeL Type ( ) ) {
rank: 453
score: 99.746337890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 453
score: 99.74095807756696
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 453
score: 99.73959237557871
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 453
score: 99.73562282986111
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 453
score: 99.73260708512932
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 453
score: 99.72877720424107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 453
score: 99.71379983836206
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 454
score: 99.75139749461206
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ;
rank: 454
score: 99.75136204769737
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 454
score: 99.74628557477679
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 454
score: 99.74093627929688
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 454
score: 99.73956930226294
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 454
score: 99.73556082589286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; }
rank: 454
score: 99.73260091145833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n + $STRING$ ) ;
rank: 454
score: 99.72871616908482
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 455
score: 99.7635830965909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } name = n . get CaMeL String ( ) ;
rank: 455
score: 99.75137918037281
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 455
score: 99.74623842592592
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 455
score: 99.73951822916666
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 455
score: 99.73555018538136
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 455
score: 99.73254601430085
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 455
score: 99.7286964699074
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 455
score: 99.71364524147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 456
score: 99.75131661551339
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ;
rank: 456
score: 99.7512939453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 456
score: 99.73554190942797
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 456
score: 99.73253773834746
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } type = Name . Type . OTHER ;
rank: 456
score: 99.72861328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 457
score: 99.75127121497844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 457
score: 99.751220703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; node = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 457
score: 99.7459566885965
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ;
rank: 457
score: 99.74082728794643
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 457
score: 99.73946200284091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 457
score: 99.73554002192982
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 457
score: 99.73252593493852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 457
score: 99.72856613685344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ;
rank: 457
score: 99.71360426682692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . TYPE ; }
rank: 458
score: 99.75123814174107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Local ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 458
score: 99.74594907407408
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 458
score: 99.74081526131465
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 458
score: 99.739453125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } }
rank: 458
score: 99.73548990885416
patch: type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 458
score: 99.72854275173611
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 458
score: 99.71357253502156
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 459
score: 99.76347133091518
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ;
rank: 459
score: 99.75121166087963
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . OTHER ;
rank: 459
score: 99.75120326450893
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 459
score: 99.74079241071429
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 459
score: 99.73944498697917
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 459
score: 99.73548332093254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 459
score: 99.73245554956897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 459
score: 99.72853405070755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 459
score: 99.71335320723684
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 460
score: 99.76346261160714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } }
rank: 460
score: 99.75115094866071
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ; }
rank: 460
score: 99.74589512711864
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 460
score: 99.72852419133773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . Type . OTHER ;
rank: 460
score: 99.71332750822368
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 461
score: 99.76336115056819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 461
score: 99.75109649122807
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 461
score: 99.74074791217673
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 461
score: 99.73938409213362
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 461
score: 99.73528303179825
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( type . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 461
score: 99.732421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 461
score: 99.72852404364224
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 461
score: 99.71331441627359
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 462
score: 99.76334635416667
patch: name = name . to CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 462
score: 99.75103635204081
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 462
score: 99.74575014467592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = n . get CaMeL String ( ) ; }
rank: 462
score: 99.74074748411017
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 462
score: 99.73526204427084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 462
score: 99.73233382428279
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } type = Name . Type . OTHER ;
rank: 462
score: 99.72843852796052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 462
score: 99.71323327850877
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Parent ( ) ;
rank: 463
score: 99.76329752604167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ;
rank: 463
score: 99.75102095170455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 463
score: 99.74574858566811
patch: is CaMeL Set = node . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 463
score: 99.74073840725806
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL Qualified CaMeL Name ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 463
score: 99.73524305555556
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = Name . Type . OTHER ;
rank: 463
score: 99.73232085129311
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 463
score: 99.72843424479167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 464
score: 99.7632264254386
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . to CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 464
score: 99.7510186557112
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( type . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 464
score: 99.75100420106132
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . OTHER ;
rank: 464
score: 99.7457275390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } }
rank: 464
score: 99.74058196504237
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 464
score: 99.73927408854166
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 464
score: 99.7352294921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 464
score: 99.73230981045081
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . NONE ;
rank: 464
score: 99.71313974808673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! is CaMeL Set ) { is CaMeL Set = true ;
rank: 465
score: 99.76304796006944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 465
score: 99.75092605064656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) > n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 465
score: 99.74563162667411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Name . Type . OTHER ; }
rank: 465
score: 99.74054058527543
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 465
score: 99.72841099330357
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 466
score: 99.75085227272727
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 466
score: 99.7455166903409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; }
rank: 466
score: 99.74052372685185
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 466
score: 99.73914725825472
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN :
rank: 466
score: 99.73512178308823
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 466
score: 99.73229528356481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } }
rank: 466
score: 99.72835286458333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 467
score: 99.76299641927083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 467
score: 99.75086520010964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; case Token . INC :
rank: 467
score: 99.75080217633929
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; }
rank: 467
score: 99.74551443326271
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 467
score: 99.74049729567308
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 467
score: 99.73509928385417
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 467
score: 99.73226525648585
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } }
rank: 467
score: 99.72824928977273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 467
score: 99.71290838068182
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 468
score: 99.75086263020833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 468
score: 99.75078507965686
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 468
score: 99.74547305349576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 468
score: 99.74041748046875
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 468
score: 99.73495933657787
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) , n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 468
score: 99.72822627314815
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL Next ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 468
score: 99.71286010742188
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 469
score: 99.76290594362744
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } type = Name . Type ;
rank: 469
score: 99.7507001768868
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 469
score: 99.74543709590517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } }
rank: 469
score: 99.74039459228516
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; boolean is CaMeL Set = false ;
rank: 469
score: 99.73494078621032
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; name = n . get CaMeL String ( ) ;
rank: 469
score: 99.73220389229911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 469
score: 99.71282209429825
patch: } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 470
score: 99.75083188657408
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 470
score: 99.7505634014423
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 470
score: 99.74038856907895
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 470
score: 99.73491053427419
patch: name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 470
score: 99.73217275191327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ;
rank: 470
score: 99.72815813337054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 470
score: 99.71280020254629
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 471
score: 99.7628238075658
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = name . Type ; type = Name . Type . OTHER ;
rank: 471
score: 99.75082502693965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 471
score: 99.75055563038794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Runtime CaMeL Exception ( $STRING$ + n ) ;
rank: 471
score: 99.745361328125
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 471
score: 99.74033640391791
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 471
score: 99.73888288225446
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 471
score: 99.73489478326613
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ;
rank: 471
score: 99.73212394067797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 471
score: 99.72814069475446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 471
score: 99.71279639528508
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 472
score: 99.76280799278847
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 472
score: 99.75079135237068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Add = true ;
rank: 472
score: 99.73883167613636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 472
score: 99.73212076822917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 472
score: 99.728134765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 472
score: 99.71265709918478
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; }
rank: 473
score: 99.76280289989407
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 473
score: 99.74530436197917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; }
rank: 473
score: 99.74029886497641
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 473
score: 99.73881091101696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { return ; }
rank: 473
score: 99.73487983315678
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 473
score: 99.73209635416667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } } name = Name . Type . OTHER ;
rank: 474
score: 99.7507764472336
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Set = true ; }
rank: 474
score: 99.74529925847457
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 474
score: 99.73876111260776
patch: is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 474
score: 99.73206922743056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; } }
rank: 474
score: 99.7280694369612
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 475
score: 99.76277982271634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 475
score: 99.75048828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 475
score: 99.75032832704741
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 475
score: 99.745263671875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; }
rank: 475
score: 99.74025150767544
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; break ;
rank: 475
score: 99.73859573622882
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ;
rank: 475
score: 99.73205788352273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = name . Type . OTHER ; }
rank: 475
score: 99.72799307839912
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 476
score: 99.76277521306818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ;
rank: 476
score: 99.75031389508929
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 476
score: 99.74518453663794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = n . get CaMeL String ( ) ; }
rank: 476
score: 99.74020385742188
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 476
score: 99.73479094328704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; }
rank: 476
score: 99.72794015066964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 476
score: 99.71252020474138
patch: if ( ! ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 477
score: 99.76272841631356
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; break ; }
rank: 477
score: 99.75047019675925
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else
rank: 477
score: 99.74515856726696
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 477
score: 99.7400634765625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 477
score: 99.73845305266204
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else
rank: 477
score: 99.73477802579364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = n . get CaMeL String ( ) ;
rank: 477
score: 99.73202311197916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 477
score: 99.72782841435185
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 477
score: 99.71250180844908
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 478
score: 99.75040261787281
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 478
score: 99.75023509837963
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 478
score: 99.74510862116227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 478
score: 99.73995768229166
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 478
score: 99.73839879918981
patch: Node parent = n . get CaMeL Parent ( ) ; if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 478
score: 99.73476396980932
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 478
score: 99.73200334821429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . Type . OTHER ;
rank: 478
score: 99.71245868389423
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 479
score: 99.7626953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 479
score: 99.75039222592213
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { String name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 479
score: 99.74509148848684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ; }
rank: 479
score: 99.73992638221154
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 479
score: 99.73470318903688
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; break ;
rank: 479
score: 99.73199932391827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ;
rank: 479
score: 99.72769901670259
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 480
score: 99.76265545280613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { name = n . get CaMeL String ( ) ;
rank: 480
score: 99.75038364955357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; } }
rank: 480
score: 99.75015694754464
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 480
score: 99.74500325520833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 480
score: 99.73820548221983
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 480
score: 99.73468717981558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ;
rank: 480
score: 99.73199462890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 480
score: 99.71242759967673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 481
score: 99.76258587015086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 481
score: 99.75034265350877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 481
score: 99.74498401988636
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = n . get CaMeL String ( ) ;
rank: 481
score: 99.73991446659483
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 481
score: 99.73466273716518
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 481
score: 99.73199055989583
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 481
score: 99.72761483028017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 482
score: 99.76253255208333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } name = name . Type . OTHER ;
rank: 482
score: 99.75031990840517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 482
score: 99.75012446384804
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 482
score: 99.74496895926339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; }
rank: 482
score: 99.73984555844908
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 482
score: 99.73806236530173
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ; return ;
rank: 482
score: 99.73459388469827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ;
rank: 482
score: 99.73188308189656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Name ( ) ;
rank: 482
score: 99.72759232954546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 483
score: 99.76250168372844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { name = name . Type ;
rank: 483
score: 99.75030924479167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 483
score: 99.74495738636364
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = Name . Type . OTHER ;
rank: 483
score: 99.7398169732863
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL Qualified CaMeL Name ( ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 483
score: 99.73803297139831
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 483
score: 99.7345558449074
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 483
score: 99.71233381304825
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 484
score: 99.76248372395834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 484
score: 99.75008719308036
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 484
score: 99.74494339247882
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } type = n . get CaMeL String ( ) ;
rank: 484
score: 99.73453509221312
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; }
rank: 484
score: 99.73180461379717
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type ; }
rank: 484
score: 99.7122214988426
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 485
score: 99.76246925636575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } name = name . Type . OTHER ;
rank: 485
score: 99.75022670200893
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 485
score: 99.75007847377232
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 485
score: 99.73977179276316
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 485
score: 99.73447487571023
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 485
score: 99.72750355113637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 485
score: 99.71214881310097
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 486
score: 99.76245561079546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } name = n . get CaMeL Parent ( ) ;
rank: 486
score: 99.75020559210526
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 486
score: 99.74493075284092
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 486
score: 99.73966899671052
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 486
score: 99.7377508755388
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 486
score: 99.73444733796296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; return ; } name = Name . Type . OTHER ;
rank: 487
score: 99.75020345052083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . FUNCTION ;
rank: 487
score: 99.74998316271552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 487
score: 99.74489524147727
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 487
score: 99.73962983630952
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 487
score: 99.73175920758929
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 487
score: 99.72742120150862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 487
score: 99.71211336096938
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } } name = n . get CaMeL String ( ) ;
rank: 488
score: 99.75008951822916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( type == Token . INC :
rank: 488
score: 99.74993024553571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 488
score: 99.74485085227273
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 488
score: 99.73953562769397
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 488
score: 99.7377501370614
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 488
score: 99.73167563384433
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = name . Type . NONE ;
rank: 488
score: 99.71208243534483
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 489
score: 99.76242009943182
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 489
score: 99.7500244140625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 489
score: 99.74479457310268
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ;
rank: 489
score: 99.73953562769397
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 489
score: 99.73773300438596
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 489
score: 99.73431503563596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 489
score: 99.71207068101415
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; type = Name . Type . OTHER ;
rank: 490
score: 99.76241122159091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 490
score: 99.75000800461065
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 490
score: 99.7395263671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ;
rank: 490
score: 99.7377102092161
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 490
score: 99.73431096311475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 490
score: 99.73152240953948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 490
score: 99.72697368421052
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 490
score: 99.71198381696429
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 491
score: 99.76237540409483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 491
score: 99.75
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; if (
rank: 491
score: 99.74983723958333
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 491
score: 99.74468122209821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = 0 ; type = Name . Type . OTHER ; }
rank: 491
score: 99.73949353448276
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 491
score: 99.73426106770833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ;
rank: 491
score: 99.726953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 491
score: 99.71182145743535
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 492
score: 99.74981574292453
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 492
score: 99.74456894188596
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 492
score: 99.73948567708334
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 492
score: 99.73744936342592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; is CaMeL Set = true ;
rank: 492
score: 99.73424840856481
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 492
score: 99.73149762834821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type . OTHER ; } }
rank: 492
score: 99.72689098011364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 492
score: 99.71180462015086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ;
rank: 493
score: 99.74988793545081
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 493
score: 99.74977463942308
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 493
score: 99.73944498697917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 493
score: 99.73740748355263
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 493
score: 99.73149496822033
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 493
score: 99.72681949013158
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 493
score: 99.71177842881944
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 494
score: 99.76227323887711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { name = name . Type ; }
rank: 494
score: 99.74985930879237
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 494
score: 99.74977329799107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . ASSIGN : is CaMeL Set = true ;
rank: 494
score: 99.74448327850877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ; }
rank: 494
score: 99.73944302262932
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 494
score: 99.73420948093221
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 494
score: 99.73147348257211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL First CaMeL Child ( ) ; }
rank: 494
score: 99.72678980334052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) . get CaMeL Value ( ) ;
rank: 494
score: 99.71171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 495
score: 99.76223958333334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 495
score: 99.74980637122844
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 495
score: 99.74974300986842
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 495
score: 99.73939169606855
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 495
score: 99.73734907670455
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else {
rank: 495
score: 99.7314208984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 495
score: 99.72665292245371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 495
score: 99.71170609085648
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Name ( ) ;
rank: 496
score: 99.76221530720339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } type = Name . Type ; type = Name . Type ;
rank: 496
score: 99.74971226283482
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 496
score: 99.74440220424107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } else { is CaMeL Set = true ;
rank: 496
score: 99.73933490953948
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 496
score: 99.73734454719387
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 496
score: 99.73413927801724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 496
score: 99.71165556066177
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { is CaMeL Set = true ;
rank: 497
score: 99.76220703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . STRING ;
rank: 497
score: 99.749755859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 497
score: 99.74959891183036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . INC : is CaMeL Set = true ;
rank: 497
score: 99.74433425377156
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ; }
rank: 497
score: 99.73928983094262
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 497
score: 99.73725328947368
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ;
rank: 497
score: 99.73413927801724
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 497
score: 99.73135579427084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } name = Name . Type . OTHER ;
rank: 497
score: 99.72652882543103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ;
rank: 498
score: 99.74955610795455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 498
score: 99.73923255657327
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 498
score: 99.73722759046052
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 498
score: 99.73407706567797
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ; }
rank: 498
score: 99.73130580357143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = Name . Type . OTHER ; }
rank: 498
score: 99.7265196683114
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . Type . OTHER ;
rank: 498
score: 99.71163236177884
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 499
score: 99.76214909957628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; type = Name . Type ; }
rank: 499
score: 99.74416588092673
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ; }
rank: 499
score: 99.73722478693182
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 499
score: 99.73404134114584
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ;
rank: 499
score: 99.73125685307018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 499
score: 99.72642780172414
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n , parent , name ) ;
rank: 499
score: 99.71159710800438
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 500
score: 99.76214810075432
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 500
score: 99.74965994698661
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 500
score: 99.74946732954545
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Parent ( ) ;
rank: 500
score: 99.74414919133773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 500
score: 99.73919951026119
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 500
score: 99.73404134114584
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 500
score: 99.71157670454545
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 501
score: 99.76211599576271
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; } type = Name . Type ;
rank: 501
score: 99.74945537860577
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 501
score: 99.7439385775862
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 501
score: 99.73915375256148
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 501
score: 99.73719133649554
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 501
score: 99.73399878329919
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } return ;
rank: 501
score: 99.73122829861111
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 501
score: 99.72627840909091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 501
score: 99.71155476120283
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 502
score: 99.7494484230324
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 502
score: 99.74391332165948
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 502
score: 99.7391015625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 502
score: 99.73718475877193
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ;
rank: 502
score: 99.733984375
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 502
score: 99.73120561079546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } return ;
rank: 502
score: 99.72627124451755
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 503
score: 99.76205806408899
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type ; }
rank: 503
score: 99.74388709435097
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 503
score: 99.73910006009615
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 503
score: 99.73710766173245
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 503
score: 99.73120545504386
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) )
rank: 503
score: 99.72609165736607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 503
score: 99.71147099247685
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 504
score: 99.7494873046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ;
rank: 504
score: 99.74940227640086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Prop CaMeL Assign = true ;
rank: 504
score: 99.74386751853814
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; } }
rank: 504
score: 99.73908971567623
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 504
score: 99.7371074969952
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 504
score: 99.73395774147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 504
score: 99.731201171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 504
score: 99.71147099247685
patch: if ( n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 505
score: 99.7620049838362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 505
score: 99.737060546875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 505
score: 99.73392547123017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 505
score: 99.73118489583334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ;
rank: 505
score: 99.72582135881696
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 505
score: 99.71130585252193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Parent ( ) ; }
rank: 506
score: 99.76196732954546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = name . to CaMeL String ( ) ;
rank: 506
score: 99.74938151041667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 506
score: 99.74381229795259
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 506
score: 99.73886376096492
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 506
score: 99.73390272797131
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 506
score: 99.73116122159091
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 506
score: 99.71124057112068
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 507
score: 99.76194957386363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 507
score: 99.74928139740567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 507
score: 99.74925516419492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 507
score: 99.7368592379386
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 507
score: 99.73383068647541
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 507
score: 99.73114420572917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } name = name . Type . OTHER ;
rank: 507
score: 99.72556818181818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 508
score: 99.76193797831633
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 508
score: 99.7492254849138
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 508
score: 99.74910762392241
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 508
score: 99.74378255208333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 508
score: 99.738740234375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 508
score: 99.73684951006356
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 508
score: 99.73375496031746
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 508
score: 99.73105837264151
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } }
rank: 508
score: 99.71119035993304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 509
score: 99.76192564883475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; break ; } } name = Name . Type . OTHER ;
rank: 509
score: 99.74915489783653
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 509
score: 99.74374186197916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } else name = n . get CaMeL String ( ) ; }
rank: 509
score: 99.73871159957628
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ;
rank: 509
score: 99.73375108506944
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 509
score: 99.73105649594908
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 509
score: 99.72551618303571
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 509
score: 99.711181640625
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 510
score: 99.7491299715909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Parent ( ) ;
rank: 510
score: 99.74908236799568
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . INC ;
rank: 510
score: 99.74370285560344
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 510
score: 99.7386698820153
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 510
score: 99.7336866034836
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 510
score: 99.7309326171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( ! is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 510
score: 99.72548130580357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 510
score: 99.71116480334052
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 511
score: 99.76184288930085
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 511
score: 99.74908340186404
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Name . Type . OTHER ;
rank: 511
score: 99.7490655307112
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 511
score: 99.74369303385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ;
rank: 511
score: 99.73864352318549
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . GETPROP : return ;
rank: 511
score: 99.73362256659836
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 511
score: 99.72539411272321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 512
score: 99.7489501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 512
score: 99.74369303385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 512
score: 99.73862056408899
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 512
score: 99.73678330243644
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = false ;
rank: 512
score: 99.73361642020089
patch: if ( parent . get CaMeL String ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 512
score: 99.73084647700472
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 512
score: 99.72538700810185
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n ) ;
rank: 512
score: 99.7109795932112
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 513
score: 99.76181640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 513
score: 99.74368851273148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } }
rank: 513
score: 99.73854573567708
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 513
score: 99.73674787554825
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ; }
rank: 513
score: 99.73360188802083
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 513
score: 99.73083075161638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 513
score: 99.72532894736842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 513
score: 99.71097237723214
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 514
score: 99.7617824388587
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 514
score: 99.74352820444915
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 514
score: 99.73846153846154
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 514
score: 99.7366796875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 514
score: 99.73354807207662
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 514
score: 99.73076356132076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 514
score: 99.72510607489224
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 515
score: 99.76172762784091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ; } }
rank: 515
score: 99.74884440104167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 515
score: 99.7484681372549
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 515
score: 99.74351165254237
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 515
score: 99.73844401041667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 515
score: 99.7366782134434
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ;
rank: 515
score: 99.73076171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ;
rank: 515
score: 99.72508021763393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 516
score: 99.76170131138393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; type = Name . Type ;
rank: 516
score: 99.74882980872844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 516
score: 99.74845525568182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Type ( ) ;
rank: 516
score: 99.74348682468221
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 516
score: 99.73841441761364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 516
score: 99.73667077850877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ;
rank: 516
score: 99.73074001736111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ;
rank: 516
score: 99.71090382543103
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 517
score: 99.7616766567888
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; type = Name . Type ;
rank: 517
score: 99.74839311079545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 517
score: 99.7434714988426
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 517
score: 99.73830607786017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 517
score: 99.73665088718221
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 517
score: 99.73073508522727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . EMPTY ; }
rank: 517
score: 99.72504714439656
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 517
score: 99.71089993990384
patch: } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 518
score: 99.76166735197368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = name . get CaMeL String ( ) ;
rank: 518
score: 99.74855324074075
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , type ) ;
rank: 518
score: 99.74838692801339
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 518
score: 99.74339578919492
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 518
score: 99.73822985197368
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 518
score: 99.73073167067308
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 518
score: 99.72502790178571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 519
score: 99.7616122159091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = n . get CaMeL String ( ) ; }
rank: 519
score: 99.74855143229166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 519
score: 99.74838692801339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } } name = n . get CaMeL Parent ( ) ;
rank: 519
score: 99.74333243534483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 519
score: 99.73819319928279
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 519
score: 99.73658970424107
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } break ;
rank: 519
score: 99.73343846055327
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 519
score: 99.73071717379386
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; break ; } } }
rank: 519
score: 99.72502531828704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 519
score: 99.71082694575472
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 520
score: 99.74850205243644
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 520
score: 99.74828657670454
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 520
score: 99.74331353635205
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ;
rank: 520
score: 99.73816731770833
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 520
score: 99.73657687205188
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ; }
rank: 520
score: 99.73334418402777
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 520
score: 99.7306914747807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 521
score: 99.76158854166667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; break ; } name = Name . Type . OTHER ;
rank: 521
score: 99.74849377648304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . ASSIGN :
rank: 521
score: 99.743271484375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ; }
rank: 521
score: 99.73655542834052
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 521
score: 99.73064007675438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 521
score: 99.72486255787037
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 521
score: 99.71077473958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 522
score: 99.74848712858606
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 522
score: 99.74820963541667
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 522
score: 99.74321933962264
patch: type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 522
score: 99.73804615162037
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 522
score: 99.73654409555289
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 522
score: 99.73330252511161
patch: is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 522
score: 99.730625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ;
rank: 522
score: 99.72484375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 523
score: 99.76155323093221
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 523
score: 99.74846281828704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; type = Name . Type . OTHER ;
rank: 523
score: 99.74319957386363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } is CaMeL Set = true ;
rank: 523
score: 99.73803297139831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ;
rank: 523
score: 99.73652674788136
patch: Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 523
score: 99.73327836834017
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 523
score: 99.73062337239584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ;
rank: 523
score: 99.72473565463362
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 523
score: 99.7107256043632
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 524
score: 99.74842936197916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 524
score: 99.748046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 524
score: 99.7431640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } type = n . get CaMeL String ( ) ; }
rank: 524
score: 99.73796907018442
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 524
score: 99.73650568181819
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 524
score: 99.73056640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } else { is CaMeL Set = true ; }
rank: 524
score: 99.72471788194444
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 524
score: 99.71071861530173
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 525
score: 99.76148365162037
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 525
score: 99.74837239583333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 525
score: 99.74314751059322
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 525
score: 99.73794320913461
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 525
score: 99.73054865056818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } }
rank: 525
score: 99.71061759159483
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL String ( ) ;
rank: 526
score: 99.76146647135417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 526
score: 99.74828640919812
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 526
score: 99.74799636314656
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ;
rank: 526
score: 99.74308558872768
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } is CaMeL Set = true ; }
rank: 526
score: 99.73792904713115
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 526
score: 99.73643948739036
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 526
score: 99.73315843485169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 526
score: 99.73050944010417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } } name = Name . Type . OTHER ;
rank: 526
score: 99.71060884915866
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { is CaMeL Set = true ; }
rank: 527
score: 99.7614531935307
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 527
score: 99.74813948006465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) > n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 527
score: 99.74798828125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 527
score: 99.737919921875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 527
score: 99.73642758969908
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Next ( ) ;
rank: 527
score: 99.73314047759433
patch: is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 527
score: 99.7304931640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ) ;
rank: 527
score: 99.71060884915866
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = String . Type . OTHER ;
rank: 528
score: 99.74810580549568
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 528
score: 99.74303385416667
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 528
score: 99.73312628073771
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = Name . Type . OTHER ;
rank: 528
score: 99.73046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ;
rank: 528
score: 99.72463507401316
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 529
score: 99.74794407894737
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 529
score: 99.74297371557203
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ; }
rank: 529
score: 99.73784824587264
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 529
score: 99.73308249080883
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 529
score: 99.73045099431818
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 529
score: 99.72447791466347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 529
score: 99.71056058114036
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 530
score: 99.76123968160377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; break ; }
rank: 530
score: 99.74806315104166
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 530
score: 99.7479128370098
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 530
score: 99.74295847039474
patch: type = ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 530
score: 99.73783052884616
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 530
score: 99.73626708984375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 530
score: 99.73306435032895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } else { name = n . get CaMeL String ( ) ;
rank: 530
score: 99.73043118990384
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 530
score: 99.71051897321429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 531
score: 99.76122142650463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; break ; } }
rank: 531
score: 99.7478515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value ( n . get CaMeL Next ( ) ) ;
rank: 531
score: 99.74290308459052
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 531
score: 99.73775359122983
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 531
score: 99.73304403981855
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 531
score: 99.73042515345982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; break ; } }
rank: 531
score: 99.72436095120614
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 532
score: 99.74796549479167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) != n . get CaMeL Next ( ) ;
rank: 532
score: 99.74782492897727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP : case Token . DEC :
rank: 532
score: 99.73768717447916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 532
score: 99.73612758091518
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 532
score: 99.7329529879386
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 532
score: 99.73039772727273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; break ; }
rank: 532
score: 99.71049442997685
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 533
score: 99.7477813185307
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; }
rank: 533
score: 99.73767710540254
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 533
score: 99.73611765894397
patch: Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 533
score: 99.73287915426587
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 533
score: 99.7303859904661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 533
score: 99.71047537667411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Type ( ) ;
rank: 534
score: 99.74775041852679
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 534
score: 99.7428515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else {
rank: 534
score: 99.73766719933712
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 534
score: 99.73610617897727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 534
score: 99.73287077872983
patch: } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 534
score: 99.71046635142544
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) is CaMeL Set = true ;
rank: 535
score: 99.76095525568182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ; }
rank: 535
score: 99.74778529575893
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 535
score: 99.74764170545212
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ;
rank: 535
score: 99.73765827047414
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 535
score: 99.73033854166667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 536
score: 99.74762961647727
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 536
score: 99.74279992055085
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else }
rank: 536
score: 99.73280436197916
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 536
score: 99.73032563308189
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 536
score: 99.71039028825432
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 537
score: 99.7609112079327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = name . Type . OTHER ;
rank: 537
score: 99.74771231192129
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 537
score: 99.7476209275266
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 537
score: 99.74278971354167
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 537
score: 99.7376357256356
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 537
score: 99.73595739293981
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 537
score: 99.73279474431818
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 537
score: 99.73030291863208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 537
score: 99.71034642269737
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 538
score: 99.760888671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } type = Name . Type ;
rank: 538
score: 99.74762073863636
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 538
score: 99.74273105837264
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 538
score: 99.73761470734127
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 538
score: 99.73593244881465
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ; }
rank: 538
score: 99.73028449292453
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 538
score: 99.72403067129629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 538
score: 99.71027242726294
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 539
score: 99.76086877893519
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; type = Name . Type ; }
rank: 539
score: 99.7476866675205
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 539
score: 99.747587890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : return ; }
rank: 539
score: 99.74265834263393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } }
rank: 539
score: 99.73024986530173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 539
score: 99.72396129261364
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 539
score: 99.71025558997844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 540
score: 99.76082669771634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . TYPE ;
rank: 540
score: 99.74765464907787
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 540
score: 99.7374619306144
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 540
score: 99.73589618389423
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( scope ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 540
score: 99.730244140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Last CaMeL Child ( ) ;
rank: 540
score: 99.72390802556818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . EMPTY ;
rank: 540
score: 99.71025390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent || parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 541
score: 99.74761462602459
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 541
score: 99.74752371651786
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 541
score: 99.74258155153508
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } } }
rank: 541
score: 99.73745840567129
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 541
score: 99.73588949947033
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 541
score: 99.730224609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 541
score: 99.7238555372807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ;
rank: 541
score: 99.71022901348039
patch: } if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 542
score: 99.76062463831019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 542
score: 99.74748883928571
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; }
rank: 542
score: 99.73744877049181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 542
score: 99.73577411358173
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 542
score: 99.73020067401961
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } } name = name . get CaMeL String ( ) ;
rank: 542
score: 99.72380960398706
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 543
score: 99.760546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = name . Type ; type = Name . Type ;
rank: 543
score: 99.74744803950472
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 543
score: 99.74250198622882
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else }
rank: 543
score: 99.73743438720703
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; boolean is CaMeL Set = false ;
rank: 543
score: 99.73569915254237
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 543
score: 99.73019564353814
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ;
rank: 543
score: 99.72376360212054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 543
score: 99.71021349676724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 544
score: 99.7605401400862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( parent ) ;
rank: 544
score: 99.73560901988637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } }
rank: 544
score: 99.73018824800532
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 544
score: 99.7237613075658
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 544
score: 99.71020936129386
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 545
score: 99.76051873675847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 545
score: 99.7473466981132
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 545
score: 99.74245689655173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else {
rank: 545
score: 99.73740874743852
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 545
score: 99.735595703125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 545
score: 99.7326896421371
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ;
rank: 545
score: 99.73015551297169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = Name . Type . OTHER ; }
rank: 545
score: 99.72375940393519
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 546
score: 99.76048177083334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; }
rank: 546
score: 99.74720594618056
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 546
score: 99.73558666087963
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ;
rank: 546
score: 99.73268285290948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 546
score: 99.73015227141204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 546
score: 99.72372872488839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 546
score: 99.71011186079545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FALSE ;
rank: 547
score: 99.76038953993056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 547
score: 99.74724211516204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) {
rank: 547
score: 99.74719024122807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 547
score: 99.737373046875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 547
score: 99.73553363347457
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 547
score: 99.73267443426724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL First CaMeL Child ( ) ;
rank: 547
score: 99.73013139204545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 547
score: 99.72361567982456
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 548
score: 99.76037145543981
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 548
score: 99.7471998565051
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 548
score: 99.74718817349138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 548
score: 99.73734841417911
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 548
score: 99.73552288925438
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 548
score: 99.73267389112904
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 548
score: 99.73007089120371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; } }
rank: 548
score: 99.72360711348684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 548
score: 99.71003670528017
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 549
score: 99.76036149364407
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 549
score: 99.74719024122807
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 549
score: 99.7471435546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . FUNCTION ;
rank: 549
score: 99.7423095703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 549
score: 99.7373283140121
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . GETPROP : return ;
rank: 549
score: 99.7300516764323
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } return name ;
rank: 549
score: 99.71001621462264
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 550
score: 99.76033841646634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 550
score: 99.7470703125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 550
score: 99.7422762784091
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = false ; }
rank: 550
score: 99.73726981026786
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 550
score: 99.7353985126202
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . FUNCTION ;
rank: 550
score: 99.7325951360887
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 550
score: 99.73003840042372
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } else { is CaMeL Set = false ;
rank: 550
score: 99.72352337015086
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 551
score: 99.76029750279018
patch: type = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 551
score: 99.74714006696429
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 551
score: 99.7469982710041
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 551
score: 99.742265625
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 551
score: 99.73724268353175
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 551
score: 99.73538466631356
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 551
score: 99.73259024784483
patch: boolean is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 551
score: 99.72999064127605
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL Parent ( ) ;
rank: 551
score: 99.72348969558189
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 551
score: 99.70996935614224
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 552
score: 99.76029296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } type = Name . Type ;
rank: 552
score: 99.74694372106481
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 552
score: 99.7422295932112
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = n . get CaMeL String ( ) ; } }
rank: 552
score: 99.73723493303571
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 552
score: 99.73537681842673
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 552
score: 99.72998903508773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . Type . OTHER ;
rank: 552
score: 99.70985764723558
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 553
score: 99.73532443576389
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 553
score: 99.72333299067982
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 554
score: 99.76029146634616
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 554
score: 99.74708775111607
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 554
score: 99.74667306673729
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 554
score: 99.74221365792411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 554
score: 99.73714192708333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; is CaMeL Set = true ;
rank: 554
score: 99.73528535487289
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 555
score: 99.76026294849537
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 555
score: 99.74705287388393
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 555
score: 99.74663168697033
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . DEC :
rank: 555
score: 99.73518589564732
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 555
score: 99.72988943326271
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ;
rank: 555
score: 99.723154296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( scope . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 555
score: 99.70972521551724
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 556
score: 99.74703480113637
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 556
score: 99.74654947916666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 556
score: 99.74212129237289
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 556
score: 99.73711535395408
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 556
score: 99.73515793372844
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 556
score: 99.7298583984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 556
score: 99.72310965401786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 556
score: 99.70972108004386
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 557
score: 99.76023512620192
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 557
score: 99.74701704545454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 557
score: 99.74652599897541
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 557
score: 99.74211647727273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = n . get CaMeL String ( ) ; }
rank: 557
score: 99.73711105872844
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 557
score: 99.73514378324468
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 557
score: 99.7324969951923
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 557
score: 99.72979736328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Type ( ) ;
rank: 557
score: 99.72308456688596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 557
score: 99.70957728794643
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 558
score: 99.74699371936275
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 558
score: 99.74638671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( type == Token . DEC :
rank: 558
score: 99.7421047404661
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; } } }
rank: 558
score: 99.73705182756696
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 558
score: 99.73511186079546
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } return ;
rank: 558
score: 99.72979621167453
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } }
rank: 558
score: 99.70956856863839
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 559
score: 99.76020869502315
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Parent ( ) ;
rank: 559
score: 99.74632947198276
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) ;
rank: 559
score: 99.73704370959052
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 559
score: 99.7350003426535
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 559
score: 99.72976631030701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 559
score: 99.72299360795455
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 559
score: 99.70955684267241
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 560
score: 99.7602069561298
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . NONE ;
rank: 560
score: 99.74692007211539
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 560
score: 99.74630533854166
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . GETPROP :
rank: 560
score: 99.73700851690573
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 560
score: 99.73495919363839
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 560
score: 99.73244588883196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; }
rank: 560
score: 99.72974474676724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; is CaMeL Set = true ;
rank: 560
score: 99.72296948702831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ;
rank: 560
score: 99.70948107489224
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 561
score: 99.76014446390086
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { is CaMeL Set = true ;
rank: 561
score: 99.74689453125
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 561
score: 99.74199387122844
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; }
rank: 561
score: 99.73699319773706
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 561
score: 99.73484519675925
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , n . get CaMeL Next ( ) ) ;
rank: 561
score: 99.73243001302083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 561
score: 99.7296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 561
score: 99.70944552951389
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 562
score: 99.760078125
patch: type = Name . Type ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 562
score: 99.74686976841518
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) {
rank: 562
score: 99.74198695591518
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; }
rank: 562
score: 99.73695203993056
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 562
score: 99.73483712332589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 562
score: 99.732421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 562
score: 99.72967425847457
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL String ( ) ;
rank: 562
score: 99.72288754111842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ;
rank: 562
score: 99.70943580483491
patch: type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 563
score: 99.76000562764831
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 563
score: 99.74678762335526
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 563
score: 99.73691114738806
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 563
score: 99.7347887976695
patch: Node parent = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 563
score: 99.73241373697917
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 563
score: 99.72966974431819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 563
score: 99.72282191685268
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 564
score: 99.75995408442982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 564
score: 99.74620581454919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 564
score: 99.736884765625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 564
score: 99.73473914194915
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 564
score: 99.73238985655738
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 564
score: 99.72960069444444
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 564
score: 99.72280187774123
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 564
score: 99.7094305630388
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 565
score: 99.75995262632979
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 565
score: 99.74618326822916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ; break ;
rank: 565
score: 99.74185014204545
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 565
score: 99.734736328125
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 565
score: 99.72950090680804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } } name = n . get CaMeL String ( ) ;
rank: 565
score: 99.7094056372549
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 566
score: 99.75993942002118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ; type = Name . Type ;
rank: 566
score: 99.74665436921296
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 566
score: 99.74609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 566
score: 99.74174281529018
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 566
score: 99.73464439655173
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 566
score: 99.72950060614224
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ; name = n . get CaMeL Name ( ) ;
rank: 566
score: 99.70938814603366
patch: } name = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 567
score: 99.75990647536058
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Type . OTHER ;
rank: 567
score: 99.74658203125
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 567
score: 99.73662860576923
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 567
score: 99.73228799143145
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } type = Name . Type . OTHER ;
rank: 567
score: 99.72277617872807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 567
score: 99.70929586476294
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 568
score: 99.75988148834746
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 568
score: 99.74657361260776
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 568
score: 99.74603378563596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; case Token . ASSIGN :
rank: 568
score: 99.73659446022727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; } } name = n . get CaMeL String ( ) ;
rank: 568
score: 99.73463792067308
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 568
score: 99.73224073840726
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 568
score: 99.72936559606481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ; }
rank: 568
score: 99.72276088169643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n , parent ) ;
rank: 568
score: 99.70928622159092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 569
score: 99.75982558936404
patch: type = Name . Type ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 569
score: 99.74653682002315
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 569
score: 99.74593098958333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . GET ;
rank: 569
score: 99.73658130787037
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 569
score: 99.73462342379386
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 569
score: 99.73216145833334
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 569
score: 99.72930184057203
patch: } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 569
score: 99.72270063920455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 570
score: 99.75977434430804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 570
score: 99.74646417025862
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 570
score: 99.74589029947917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 570
score: 99.73655941611842
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 570
score: 99.73458158052884
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 570
score: 99.73213252314815
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL Name ( ) ;
rank: 570
score: 99.72929855872844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 570
score: 99.72267578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 570
score: 99.70916193181819
patch: } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 571
score: 99.74641262755102
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : return ;
rank: 571
score: 99.74158528645833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 571
score: 99.73654329978814
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 571
score: 99.73212002840908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } break ;
rank: 571
score: 99.72928560697116
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 571
score: 99.72245205965909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 572
score: 99.75974647671569
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = Name . Type ; }
rank: 572
score: 99.74631076388889
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 572
score: 99.74588068181818
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) [ 0 ] ;
rank: 572
score: 99.74157507944915
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ; }
rank: 572
score: 99.73449086334746
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 572
score: 99.72927701271186
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( ! is CaMeL Set ) { is CaMeL Set = true ;
rank: 572
score: 99.722451171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 572
score: 99.70915377869898
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 573
score: 99.75971956073113
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; }
rank: 573
score: 99.74629814680233
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 573
score: 99.7458173643868
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 573
score: 99.74148763020834
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 573
score: 99.7344178316886
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 573
score: 99.72926613136575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 573
score: 99.72243826729911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 573
score: 99.70913756127452
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 574
score: 99.7596768465909
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 574
score: 99.74557834201389
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if (
rank: 574
score: 99.736279296875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 574
score: 99.72925743689903
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 574
score: 99.7090625
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 575
score: 99.7455227092161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 575
score: 99.74136465567129
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = Name . Type . OTHER ; }
rank: 575
score: 99.73624007428279
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 575
score: 99.73434682992789
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } type = Name . Type . OTHER ;
rank: 575
score: 99.7292059536638
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 576
score: 99.75962611607143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 576
score: 99.74621803977273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; } } name = n . get CaMeL String ( ) ;
rank: 576
score: 99.74135162870763
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 576
score: 99.73432534427967
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 576
score: 99.73198162141394
patch: if ( ! ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 576
score: 99.72919753502156
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( n . get CaMeL First CaMeL Child ( ) == n ) )
rank: 576
score: 99.72225088443396
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 576
score: 99.70901053292411
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 577
score: 99.759599609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; break ; } type = Name . Type ;
rank: 577
score: 99.74134114583333
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 577
score: 99.73622736855158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } } }
rank: 577
score: 99.73428396451271
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 577
score: 99.73195760758196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . Type . OTHER ;
rank: 577
score: 99.72919573102679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Name ( ) ;
rank: 577
score: 99.72223899147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 578
score: 99.75958721454327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; }
rank: 578
score: 99.74619477370689
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 578
score: 99.745361328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . SET ;
rank: 578
score: 99.73622678360849
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . FUNCTION ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 578
score: 99.73427568855932
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ;
rank: 578
score: 99.73183079769737
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 578
score: 99.72913707386364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } }
rank: 578
score: 99.72219460227272
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 578
score: 99.70891584429825
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 579
score: 99.759560546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; } type = Name . Type . OTHER ;
rank: 579
score: 99.74618417245371
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node parent = n . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 579
score: 99.74534932120902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 579
score: 99.7412841796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 579
score: 99.73622280943627
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 579
score: 99.73427036830357
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 579
score: 99.72910524764151
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { is CaMeL Set = true ;
rank: 579
score: 99.72214918870192
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Node ( ) ) ;
rank: 579
score: 99.70885809536638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 580
score: 99.7595537293632
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; break ; } }
rank: 580
score: 99.74117024739583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ; }
rank: 580
score: 99.73420319733796
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 580
score: 99.73174458165323
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = true ;
rank: 580
score: 99.72908528645833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; } }
rank: 580
score: 99.72212275752315
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , null ) ;
rank: 581
score: 99.75955146655701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = Name . Type ; } type = Name . Type ;
rank: 581
score: 99.7460516567888
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 581
score: 99.74528556034483
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 581
score: 99.74113991477273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } else { is CaMeL Set = true ; }
rank: 581
score: 99.73616002817623
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 581
score: 99.7340986143868
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 581
score: 99.73171997070312
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } name = n . get CaMeL String ( ) ;
rank: 581
score: 99.72904750279018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; break ; } }
rank: 582
score: 99.75954451650944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 582
score: 99.74526009908537
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 582
score: 99.74107259114584
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } type = n . get CaMeL String ( ) ;
rank: 582
score: 99.73613777807203
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 582
score: 99.73171762319711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 582
score: 99.72904376594387
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 582
score: 99.70870916193182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 583
score: 99.7594970703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 583
score: 99.74598524305556
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) {
rank: 583
score: 99.74522925204919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 583
score: 99.73612950211864
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 583
score: 99.73394886363636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 583
score: 99.73157707093254
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 583
score: 99.72898735434322
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 583
score: 99.72205041956019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 583
score: 99.70870028409091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = String . Type . OTHER ;
rank: 584
score: 99.75948293585526
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 584
score: 99.74521484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 584
score: 99.74103414601294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else }
rank: 584
score: 99.73384312220982
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node parent = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 584
score: 99.73154633620689
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 584
score: 99.72894862912736
patch: is CaMeL Set = false ; break ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 584
score: 99.72187151227679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 584
score: 99.708662109375
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 585
score: 99.75941204202586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type ; type = Name . Type ;
rank: 585
score: 99.74595170454545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : type = Name . Type . OTHER ;
rank: 585
score: 99.73587669516509
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 585
score: 99.73382778825432
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == 0 ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 585
score: 99.73152108028017
patch: is CaMeL Set = false ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 585
score: 99.72888849431818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } } }
rank: 585
score: 99.72184836647727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 585
score: 99.70865572415866
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 586
score: 99.75941204202586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; name = Name . Type . OTHER ;
rank: 586
score: 99.74593098958333
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 586
score: 99.74515787760417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 586
score: 99.74098363415948
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 586
score: 99.73587134576613
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 586
score: 99.7337582236842
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : is CaMeL Set = true ;
rank: 586
score: 99.72888635706019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } } }
rank: 586
score: 99.72175816127232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 586
score: 99.70863850911458
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 587
score: 99.75936686197916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } name = n . get CaMeL Parent ( ) ;
rank: 587
score: 99.74590386284723
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 587
score: 99.74515086206897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { type = Name . Type . OTHER ;
rank: 587
score: 99.74087727864584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 587
score: 99.73578844572368
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 587
score: 99.72886439732143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 587
score: 99.70862507370283
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 588
score: 99.75934709821429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; break ;
rank: 588
score: 99.74588716947116
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 588
score: 99.7451171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else switch ( parent . get CaMeL Type ( ) ) {
rank: 588
score: 99.74086577316811
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 588
score: 99.73575533353366
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 588
score: 99.73141163793103
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 588
score: 99.72163362323113
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 588
score: 99.70862038352273
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL Name ( ) ;
rank: 589
score: 99.75934709821429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 589
score: 99.74501616379311
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; else is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 589
score: 99.72875515919812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . NONE ;
rank: 589
score: 99.70860553609914
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } else { name = n . get CaMeL String ( ) ; }
rank: 590
score: 99.74586245888158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 590
score: 99.74084242334905
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 590
score: 99.73570866371269
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 590
score: 99.73353928786058
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 590
score: 99.7214141310307
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 590
score: 99.70859781901042
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL Name ( ) ;
rank: 591
score: 99.75931803385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 591
score: 99.74581853693182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 591
score: 99.73566804108796
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 591
score: 99.7335205078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 592
score: 99.75930606617646
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 592
score: 99.74577113560268
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 592
score: 99.73565673828125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 592
score: 99.73350172776442
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = null ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 592
score: 99.73127948113208
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 592
score: 99.72857306985294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 592
score: 99.72133608217592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 592
score: 99.70855502424568
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 593
score: 99.75924970518868
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } is CaMeL Set = true ; }
rank: 593
score: 99.745673828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; } is CaMeL Set = true ;
rank: 593
score: 99.7449151400862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 593
score: 99.74079842403017
patch: is CaMeL Set = parent . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 593
score: 99.73564091435185
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 593
score: 99.7334729210805
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 593
score: 99.73125813802083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ; }
rank: 593
score: 99.721298828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 594
score: 99.75921285377359
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 594
score: 99.74563259548611
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Next ( ) ;
rank: 594
score: 99.7407971398305
patch: if ( ! parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 594
score: 99.73563833085318
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } } }
rank: 594
score: 99.73340685614224
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 594
score: 99.73124842489919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 594
score: 99.72835599459134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 594
score: 99.72126374421296
patch: Node rvalue = parent . get CaMeL Parent ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 594
score: 99.70854749177632
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 595
score: 99.75920881304825
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type ;
rank: 595
score: 99.74561451099537
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; type = Name . Type . OTHER ;
rank: 595
score: 99.74471842447916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , parent . get CaMeL Next ( ) ) ;
rank: 595
score: 99.740693359375
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; }
rank: 595
score: 99.73559027777777
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 595
score: 99.73120561079546
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 595
score: 99.70852134967673
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 596
score: 99.74561418805804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 596
score: 99.74466378348214
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 596
score: 99.74065031828704
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 596
score: 99.73541777012711
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 596
score: 99.733349609375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Set = true ;
rank: 596
score: 99.73113529265873
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 596
score: 99.70851293103448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ;
rank: 597
score: 99.74559659090909
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 597
score: 99.74462890625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 597
score: 99.7353216677296
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 597
score: 99.73113082627118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } is CaMeL Set = true ;
rank: 597
score: 99.72829674030173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Name ( ) ;
rank: 597
score: 99.72105577256944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } name = n . get CaMeL String ( ) ;
rank: 598
score: 99.75915776466837
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . get CaMeL String ( ) ;
rank: 598
score: 99.74558803013393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; }
rank: 598
score: 99.74461263020834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . OTHER ;
rank: 598
score: 99.74055713718221
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 598
score: 99.73330583243535
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ; }
rank: 598
score: 99.72827990301724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 598
score: 99.72104936079545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 598
score: 99.7084540005388
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 599
score: 99.75915741502193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type ; }
rank: 599
score: 99.74534449084052
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 599
score: 99.74461263020834
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 599
score: 99.74050958806818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 599
score: 99.73498141381049
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 599
score: 99.73322405133929
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 599
score: 99.73102556195175
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 599
score: 99.72096470424107
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 600
score: 99.7591391509434
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 600
score: 99.74520979256465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : case Token . DEC :
rank: 600
score: 99.74049183238637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 600
score: 99.73320480872844
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 600
score: 99.73087565104167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } type = n . get CaMeL String ( ) ;
rank: 600
score: 99.72090205439815
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , is CaMeL Prop CaMeL Assign , type ) ;
rank: 600
score: 99.70843612938596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 601
score: 99.75913783482143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; }
rank: 601
score: 99.7451923076923
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 601
score: 99.73497009277344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . GET ;
rank: 601
score: 99.72817595108695
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; } }
rank: 601
score: 99.72087751116071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope , n ) ;
rank: 601
score: 99.70837854456019
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 602
score: 99.75908371497844
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type ; type = Name . Type ;
rank: 602
score: 99.7451171875
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 602
score: 99.74455180921052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 602
score: 99.73492324561404
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ; }
rank: 602
score: 99.73312590843024
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 602
score: 99.72815880408653
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 602
score: 99.72078450520833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 603
score: 99.74510862116227
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; }
rank: 603
score: 99.74453299386161
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( break ;
rank: 603
score: 99.7308285361842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; type = n . get CaMeL String ( ) ;
rank: 603
score: 99.7281018273305
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 604
score: 99.7590117872807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ; } else { name = n . get CaMeL String ( ) ; }
rank: 604
score: 99.74510761335785
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 604
score: 99.7445004111842
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 604
score: 99.74039132254464
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 604
score: 99.73309861567982
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 604
score: 99.73081868489584
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 604
score: 99.72807340801887
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 604
score: 99.72077287946429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 604
score: 99.7082305372807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 605
score: 99.75899684175532
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 605
score: 99.74504616477273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 605
score: 99.7444918448465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 605
score: 99.74038334216101
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = n . get CaMeL String ( ) ; }
rank: 605
score: 99.73482390372983
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 605
score: 99.73079693903688
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL String ( ) ;
rank: 605
score: 99.72804478236607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } return ;
rank: 605
score: 99.72075737847223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 605
score: 99.70816200657895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 606
score: 99.75897894965277
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . NONE ;
rank: 606
score: 99.74500774515086
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 606
score: 99.74032389322916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 606
score: 99.73479879127359
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 606
score: 99.73302556818182
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 606
score: 99.72804389565678
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 606
score: 99.70806884765625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } return ; }
rank: 607
score: 99.75894278067129
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 607
score: 99.74498046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 607
score: 99.74031856142241
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 607
score: 99.73478190104167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 607
score: 99.73077713815789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Type ( ) ; }
rank: 607
score: 99.7280078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 607
score: 99.72068359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 607
score: 99.70799924616227
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 608
score: 99.75890899122807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 608
score: 99.74432705965908
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 608
score: 99.74027958622685
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else {
rank: 608
score: 99.73475302419355
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 608
score: 99.73077496027543
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 608
score: 99.72787837658899
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 608
score: 99.72061270254629
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , parent ) ;
rank: 608
score: 99.70798211348684
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 609
score: 99.74431672643442
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else type = Name . Type . OTHER ;
rank: 609
score: 99.74027054398148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 609
score: 99.73466465836864
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 609
score: 99.73293832632211
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == $STRING$ ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 609
score: 99.73076985677083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 609
score: 99.70797526041666
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 610
score: 99.75887044270833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 610
score: 99.73463114754098
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { is CaMeL Set = true ;
rank: 610
score: 99.7327816611842
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 610
score: 99.73076801915323
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; }
rank: 610
score: 99.72783203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = n . get CaMeL Name ( ) ;
rank: 610
score: 99.72052873883929
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , parent , n ) ;
rank: 610
score: 99.70797230113637
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 611
score: 99.75885527012711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 611
score: 99.74489901928192
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 611
score: 99.7442138671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 611
score: 99.74020182291666
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 611
score: 99.7345687624008
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; is CaMeL Set = true ;
rank: 611
score: 99.73275596217105
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 611
score: 99.7307569159836
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 611
score: 99.72781372070312
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 611
score: 99.72049005681818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 611
score: 99.70793547453704
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 612
score: 99.75877222521552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; type = Name . Type . OTHER ;
rank: 612
score: 99.74489607900944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ;
rank: 612
score: 99.74016816737289
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = n . get CaMeL String ( ) ; }
rank: 612
score: 99.73272235576923
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Scope ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 612
score: 99.73075013241525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ;
rank: 612
score: 99.72780539772727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 612
score: 99.70792214912281
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 613
score: 99.75876380657327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 613
score: 99.74489524147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GETPROP ;
rank: 613
score: 99.74417489035088
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ; break ;
rank: 613
score: 99.74015447443182
patch: name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 613
score: 99.73270456414474
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : is CaMeL Set = true ;
rank: 613
score: 99.72779702240567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( ! is CaMeL Set ) { type = Name . Type . OTHER ;
rank: 614
score: 99.75876336348684
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 614
score: 99.74486860795454
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . FUNCTION ;
rank: 614
score: 99.74410574776786
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 614
score: 99.74011651400862
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ; }
rank: 614
score: 99.7326445997807
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { return ; }
rank: 614
score: 99.73072916666666
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 614
score: 99.72770846619898
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL Name ( ) ;
rank: 614
score: 99.72046802662037
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 614
score: 99.70788788377193
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; }
rank: 615
score: 99.75876242897728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ; break ; }
rank: 615
score: 99.74469105113636
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 615
score: 99.7440121299342
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : is CaMeL Set = true ;
rank: 615
score: 99.73450578962054
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Parent ( ) ;
rank: 615
score: 99.7325439453125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 615
score: 99.73072076612904
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } }
rank: 615
score: 99.72767991286058
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 615
score: 99.7078707510965
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 616
score: 99.74466441761363
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 616
score: 99.74399654200819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 616
score: 99.74007457386364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; }
rank: 616
score: 99.73447963169643
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; }
rank: 616
score: 99.73069287909836
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ;
rank: 616
score: 99.7276731004902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( ! is CaMeL Set ) { is CaMeL Set = true ;
rank: 616
score: 99.70786696213942
patch: } if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 617
score: 99.74463778409091
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 617
score: 99.74398690682871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . GETPROP : is CaMeL Set = true ;
rank: 617
score: 99.734462890625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 617
score: 99.72766320180085
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) )
rank: 617
score: 99.70777271412037
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 618
score: 99.74398600260416
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . INC ;
rank: 618
score: 99.73057633739407
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 618
score: 99.72761140046296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = name . Type . OTHER ;
rank: 618
score: 99.72012765066964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 619
score: 99.75861725983796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . to CaMeL String ( ) ;
rank: 619
score: 99.74459339488637
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 619
score: 99.74390109080188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 619
score: 99.7399688185307
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 619
score: 99.73439002403846
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 619
score: 99.70773751395089
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 620
score: 99.75861526747882
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; break ; }
rank: 620
score: 99.74458451704545
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 620
score: 99.73990885416667
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 620
score: 99.73435507015306
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 620
score: 99.72751242897728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type . NONE ; }
rank: 620
score: 99.7077215786638
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Name ( ) ; }
rank: 621
score: 99.75861065204327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 621
score: 99.7445618872549
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 621
score: 99.74382913523706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( is CaMeL Set )
rank: 621
score: 99.73987055759804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } } }
rank: 621
score: 99.7343029585041
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 621
score: 99.732421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : is CaMeL Set = true ;
rank: 621
score: 99.73047746930804
patch: name = n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 621
score: 99.72750854492188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . Type . OTHER ;
rank: 621
score: 99.72003979952831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 621
score: 99.70771655701755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; ;
rank: 622
score: 99.75859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = name . Type ;
rank: 622
score: 99.74453467653508
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 622
score: 99.73987023305085
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 622
score: 99.73427261844758
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } }
rank: 622
score: 99.7304451234879
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = false ;
rank: 622
score: 99.70767933238636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NOT ;
rank: 623
score: 99.75857388771186
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { name = Name . Type ; }
rank: 623
score: 99.73980402542372
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 623
score: 99.73427036830357
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 623
score: 99.73233083951271
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 623
score: 99.73042872694673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 623
score: 99.72748579545454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { name = name . Type . OTHER ;
rank: 623
score: 99.71987748579545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 623
score: 99.70766515899123
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 624
score: 99.75857017780173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 624
score: 99.73976322642544
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = 0 ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 624
score: 99.73417094216418
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 624
score: 99.73040426002359
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 624
score: 99.70763089364036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 625
score: 99.758544921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } } }
rank: 625
score: 99.74440696022727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC :
rank: 625
score: 99.74366889565678
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 625
score: 99.73976293103448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ;
rank: 625
score: 99.73409361758475
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 625
score: 99.73228717672414
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . get CaMeL First CaMeL Child ( parent ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 625
score: 99.72745455228366
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 625
score: 99.71983991350446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 625
score: 99.70759055397727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FALSE ;
rank: 626
score: 99.758544921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } type = Name . Type ;
rank: 626
score: 99.74438920454546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : case Token . DEC :
rank: 626
score: 99.73398910030242
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 626
score: 99.73228717672414
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 626
score: 99.72739837129237
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 626
score: 99.71982079221492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 626
score: 99.70751048900463
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 627
score: 99.75853678385417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type ; break ;
rank: 627
score: 99.7443339029948
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 627
score: 99.74344075520834
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 627
score: 99.73973781779661
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 627
score: 99.73387767650463
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 627
score: 99.73223980402543
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 627
score: 99.72739343475877
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; } } }
rank: 627
score: 99.71977982954546
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 628
score: 99.74423828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . INC ;
rank: 628
score: 99.73972981770834
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; }
rank: 628
score: 99.7337646484375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : return ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 628
score: 99.73223407451923
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == false ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 628
score: 99.73035849294355
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 628
score: 99.72735126201923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 628
score: 99.719775390625
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 628
score: 99.7073974609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } } }
rank: 629
score: 99.75843547952586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ; }
rank: 629
score: 99.74421164772727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL Next ( ) ;
rank: 629
score: 99.74335617315573
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } name = Name . Type . OTHER ;
rank: 629
score: 99.73376242897727
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 629
score: 99.73219842425847
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 629
score: 99.73035061743951
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 629
score: 99.72732388771186
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 629
score: 99.71977443321079
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 629
score: 99.70736581307871
patch: if ( n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 630
score: 99.744140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 630
score: 99.74333274147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; }
rank: 630
score: 99.73964678230932
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = n . get CaMeL String ( ) ; } }
rank: 630
score: 99.7337485259434
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 630
score: 99.73030336441532
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 630
score: 99.727294921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 630
score: 99.7197693941886
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 630
score: 99.70736258370536
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 631
score: 99.75835605837264
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 631
score: 99.74331868489584
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( type == Token . GETPROP )
rank: 631
score: 99.73961588541667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; }
rank: 631
score: 99.73373708417338
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 631
score: 99.732177734375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 631
score: 99.7302954889113
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ;
rank: 631
score: 99.72723858173077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type . NONE ;
rank: 632
score: 99.75831992953431
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; break ;
rank: 632
score: 99.74331559806035
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 632
score: 99.73957476699562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 632
score: 99.73367956912878
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 632
score: 99.73028464395492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = false ;
rank: 632
score: 99.72717507102273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 632
score: 99.70731155960648
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 633
score: 99.75831956129808
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 633
score: 99.74325448495371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ;
rank: 633
score: 99.7336639939693
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 633
score: 99.73205773305085
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 633
score: 99.73021673387096
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 633
score: 99.71967230902777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 634
score: 99.75831853693182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; type = Name . Type ; type = Name . Type ;
rank: 634
score: 99.74325448495371
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 634
score: 99.73946471133475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 634
score: 99.72715180495689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 634
score: 99.70727982954546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 635
score: 99.75825026939656
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 635
score: 99.74402872721355
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 635
score: 99.73941476004464
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 635
score: 99.73361259594299
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 635
score: 99.73205352247807
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . FUNCTION ;
rank: 635
score: 99.7301825161638
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 635
score: 99.7271335407839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 635
score: 99.70725730613425
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 636
score: 99.7582180217161
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } else { name = n . get CaMeL String ( ) ; }
rank: 636
score: 99.743115234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ; is CaMeL Set = true ;
rank: 636
score: 99.73939985795455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 636
score: 99.73349977889151
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 636
score: 99.73201925712719
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 636
score: 99.7271259014423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 636
score: 99.71957833426339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 636
score: 99.70725013469827
patch: } is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 637
score: 99.75819022700472
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 637
score: 99.74398082386364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ;
rank: 637
score: 99.74300130208333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 637
score: 99.73937270220588
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 637
score: 99.73346946022727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 637
score: 99.73199980137711
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Get = true ; }
rank: 637
score: 99.7301175301535
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Parent ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 637
score: 99.72711527122641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . NONE ; } } name = name . Type . OTHER ;
rank: 637
score: 99.71957563920455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 637
score: 99.70724826388889
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 638
score: 99.75818101415095
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } type = Name . Type . OTHER ;
rank: 638
score: 99.74298502604167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . DEC :
rank: 638
score: 99.73338939525463
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } if ( name == null ) { is CaMeL Set = true ; }
rank: 638
score: 99.72710129310344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 638
score: 99.70723544034091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 639
score: 99.75814924568965
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; } }
rank: 639
score: 99.74392361111111
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 639
score: 99.7333466500947
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 639
score: 99.73191704184322
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 639
score: 99.73006465517241
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; }
rank: 639
score: 99.72705078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; }
rank: 639
score: 99.71933251096492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 639
score: 99.70721550707547
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 640
score: 99.75811887254902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } is CaMeL Set = true ;
rank: 640
score: 99.74386541193182
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 640
score: 99.7429620150862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 640
score: 99.73917933872768
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } else } name = n . get CaMeL String ( ) ;
rank: 640
score: 99.73315805288462
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 640
score: 99.73182303950472
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 640
score: 99.72700557002315
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 640
score: 99.707060546875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = String . Type ;
rank: 641
score: 99.758056640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; break ; } name = Name . Type . OTHER ;
rank: 641
score: 99.74382218070652
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 641
score: 99.73914240056818
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 641
score: 99.73179047683189
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 641
score: 99.71929154829546
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 642
score: 99.74377227247807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : is CaMeL Set = true ; }
rank: 642
score: 99.74270833333334
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 642
score: 99.73911576704545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } name = n . get CaMeL String ( ) ; }
rank: 642
score: 99.733017578125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ;
rank: 642
score: 99.73175152277543
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 642
score: 99.72696035879629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } return ; }
rank: 642
score: 99.71922971491227
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 642
score: 99.70687866210938
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ; }
rank: 643
score: 99.75799091045673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 643
score: 99.74377227247807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } }
rank: 643
score: 99.74270833333334
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 643
score: 99.73300466229838
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 643
score: 99.73173497086864
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . ASSIGN :
rank: 643
score: 99.72996471774194
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) is CaMeL Set = true ;
rank: 643
score: 99.72693810096153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 643
score: 99.71918596540179
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) , scope ) ;
rank: 644
score: 99.74376502403847
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 644
score: 99.74266777663935
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ) ; }
rank: 644
score: 99.73296155427632
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 644
score: 99.73171561104911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ;
rank: 644
score: 99.7298519736842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; return ; } } name = n . get CaMeL String ( ) ;
rank: 644
score: 99.726923828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL Qualified CaMeL Name ( ) ;
rank: 644
score: 99.71917613636364
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 644
score: 99.70676967075893
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 645
score: 99.74374389648438
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; }
rank: 645
score: 99.74263218470982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 645
score: 99.73899683459052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 645
score: 99.7329400510204
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 645
score: 99.73171561104911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 645
score: 99.72671621817129
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 645
score: 99.70675359987744
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 646
score: 99.75791422526042
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ; break ;
rank: 646
score: 99.74370762087264
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null )
rank: 646
score: 99.73291015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 646
score: 99.72977570564517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 646
score: 99.72670335036058
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } } name = name . Type . OTHER ;
rank: 646
score: 99.71902029854911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 647
score: 99.75791015625
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 647
score: 99.73893519810268
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 647
score: 99.73289930555555
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 647
score: 99.7316680372807
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ;
rank: 647
score: 99.72976783014113
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } }
rank: 647
score: 99.72663352272727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } }
rank: 647
score: 99.71892989309211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 647
score: 99.70670863560268
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 648
score: 99.75790824142157
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = name . Type ; }
rank: 648
score: 99.74259868421052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { switch ( parent . get CaMeL Type ( ) ) {
rank: 648
score: 99.73891515899123
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type ; }
rank: 648
score: 99.73287813780738
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 648
score: 99.73157772775424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; }
rank: 648
score: 99.7296942349138
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 648
score: 99.72643352004717
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 648
score: 99.7189190204327
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 649
score: 99.74366122159091
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 649
score: 99.74259440104167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ;
rank: 649
score: 99.73279960200472
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 649
score: 99.72962607106855
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 649
score: 99.71888950892857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 650
score: 99.757861328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 650
score: 99.74360795454545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = get CaMeL Value CaMeL Type ( n ) ;
rank: 650
score: 99.73879478717673
patch: is CaMeL Set = type . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 650
score: 99.73274477066532
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } }
rank: 650
score: 99.73148970170455
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 650
score: 99.7295809659091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } } type = Name . Type . OTHER ;
rank: 650
score: 99.72630504261363
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 650
score: 99.71886541193182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 650
score: 99.70654296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = String . Type . OTHER ;
rank: 651
score: 99.74357244318182
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 651
score: 99.73875038296569
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 651
score: 99.73269092793367
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 651
score: 99.7314874057112
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { while ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 651
score: 99.72614397321429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } } }
rank: 651
score: 99.70651771282327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 652
score: 99.75780345775463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 652
score: 99.74350210336539
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; } is CaMeL Prop CaMeL Assign = true ;
rank: 652
score: 99.74251026218221
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else is CaMeL Set = true ;
rank: 652
score: 99.73268821022727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 652
score: 99.72952529131356
patch: name = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 652
score: 99.72612561677632
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) )
rank: 652
score: 99.71877663352272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NAME ;
rank: 652
score: 99.70650929418103
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 653
score: 99.7577128507653
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 653
score: 99.74348250679348
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 653
score: 99.7424560546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; case Token . ASSIGN :
rank: 653
score: 99.73143592247597
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 653
score: 99.72607421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . n == n )
rank: 653
score: 99.71876842570755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 653
score: 99.70649937220982
patch: if ( n . get CaMeL First CaMeL Child ( ) == n && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 654
score: 99.7576829559949
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 654
score: 99.74347478693181
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 654
score: 99.73267764136905
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 654
score: 99.72950902478448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 654
score: 99.72605738146552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 654
score: 99.71876808449075
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) + 1 ) ;
rank: 654
score: 99.70647723858173
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 655
score: 99.75767686631944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; } name = Name . Type ;
rank: 655
score: 99.74343345905173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 655
score: 99.742431640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL Last CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 655
score: 99.73855537280701
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; } type = Name . Type . OTHER ;
rank: 655
score: 99.73266214037699
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 655
score: 99.731357421875
patch: Node rvalue = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 655
score: 99.72950873940678
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ;
rank: 655
score: 99.72604370117188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = name . get CaMeL Name ( ) ;
rank: 655
score: 99.706474609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 656
score: 99.7576416015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 656
score: 99.74333844866071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; }
rank: 656
score: 99.74227316337719
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ;
rank: 656
score: 99.73855251736111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 656
score: 99.73134584780092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Next ( ) ; type = Name . Type . OTHER ;
rank: 656
score: 99.71861328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ;
rank: 656
score: 99.70646587171052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 657
score: 99.7576395670573
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 657
score: 99.74327947443182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 657
score: 99.74225153688525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 657
score: 99.73852952860169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = n . get CaMeL String ( ) ; }
rank: 657
score: 99.73254194415983
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 657
score: 99.7312762920673
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 657
score: 99.72595880681818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } }
rank: 657
score: 99.71858723958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 657
score: 99.70639829282408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 658
score: 99.75762824292453
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else name = name . Type . OTHER ;
rank: 658
score: 99.74222819010417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 658
score: 99.73849051339286
patch: is CaMeL Set = if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 658
score: 99.73250868055555
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 658
score: 99.73125496557203
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 658
score: 99.72945792214912
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 658
score: 99.72592954282408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . NONE ;
rank: 658
score: 99.71856689453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 659
score: 99.75762067522321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 659
score: 99.73250713045636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ;
rank: 659
score: 99.725927734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name ;
rank: 659
score: 99.70629010881696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = 0 ;
rank: 660
score: 99.74312337239583
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 660
score: 99.73845880681819
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 660
score: 99.73118832236842
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 660
score: 99.7293359375
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 660
score: 99.72592050057871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 660
score: 99.71854202835648
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == parent ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 660
score: 99.7062774122807
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 661
score: 99.757568359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 661
score: 99.74310546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . DEC :
rank: 661
score: 99.74212856950432
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) . get CaMeL Next ( ) ) ;
rank: 661
score: 99.73841594827586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 661
score: 99.73234182889344
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 661
score: 99.72933209528688
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Parent ( ) ) { is CaMeL Set = true ;
rank: 661
score: 99.725830078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 661
score: 99.71846590909091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 662
score: 99.75755504261363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } String name = n . get CaMeL String ( ) ;
rank: 662
score: 99.73838975694444
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 662
score: 99.73232886904762
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ;
rank: 662
score: 99.73114636479592
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . INC : is CaMeL Set = true ;
rank: 662
score: 99.72578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 662
score: 99.71834622896634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 662
score: 99.7062518780048
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 663
score: 99.75744850852273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL Parent ( ) . get CaMeL String ( ) ;
rank: 663
score: 99.74302734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 663
score: 99.74207356770833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; return ;
rank: 663
score: 99.738251953125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 663
score: 99.73231336805556
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 663
score: 99.73114013671875
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 663
score: 99.71833881578948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 663
score: 99.70623779296875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } }
rank: 664
score: 99.75741464120371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 664
score: 99.74299538352273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NAME ;
rank: 664
score: 99.7420302568856
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; case Token . GETPROP : return ;
rank: 664
score: 99.72561410757211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL String ( ) ;
rank: 664
score: 99.71824458607456
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 664
score: 99.70615931919643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ;
rank: 665
score: 99.75738418311404
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type ;
rank: 665
score: 99.74297885237068
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 665
score: 99.74195772058823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 665
score: 99.73221588134766
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ; }
rank: 665
score: 99.7310546875
patch: Node parent = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 665
score: 99.72924376370614
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 665
score: 99.72560337611607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 665
score: 99.70612571022727
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 666
score: 99.75737473060344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } name = name . Type . OTHER ;
rank: 666
score: 99.74290497448979
patch: if ( ( parent != null ) || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 666
score: 99.74189624451755
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 666
score: 99.73822699652777
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 666
score: 99.73215060763889
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 666
score: 99.73085600754311
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { return ; }
rank: 666
score: 99.7291847511574
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } return ;
rank: 666
score: 99.72552020733173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } }
rank: 666
score: 99.71823508522728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ; }
rank: 666
score: 99.7060546875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ;
rank: 667
score: 99.73816338900862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { name = n . get CaMeL String ( ) ; }
rank: 667
score: 99.7321454893868
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 667
score: 99.725419921875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 667
score: 99.71814195165095
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 668
score: 99.75730738146552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 668
score: 99.74285082547169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null )
rank: 668
score: 99.73212706367924
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 668
score: 99.72541413483796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type . OTHER ;
rank: 668
score: 99.71813742897727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 669
score: 99.75728870738637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type ; break ; }
rank: 669
score: 99.74276968149039
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 669
score: 99.74180501302084
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL Last CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 669
score: 99.73209021226415
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 669
score: 99.72541015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String CaMeL Value ( ) ;
rank: 669
score: 99.71806989397321
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 669
score: 99.70583984375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 670
score: 99.757236328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } is CaMeL Set = true ;
rank: 670
score: 99.74275425502232
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 670
score: 99.74180024245689
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 670
score: 99.73805779925847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 670
score: 99.73205805759804
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 670
score: 99.7306914747807
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 670
score: 99.72907967403017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } return ;
rank: 670
score: 99.72531786151961
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = name . Type . OTHER ;
rank: 670
score: 99.71805752840909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 670
score: 99.7057891310307
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 671
score: 99.75717599051339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = name . equals ( $STRING$ ) ;
rank: 671
score: 99.73205805759804
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 671
score: 99.73068797831633
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = rvalue == null ? Name . Type . OTHER : get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 671
score: 99.71796526227679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ;
rank: 671
score: 99.70577703737744
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 672
score: 99.75716458834134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ; break ; } type = Name . Type ;
rank: 672
score: 99.74269291392544
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 672
score: 99.74169921875
patch: return ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 672
score: 99.73795848781779
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; ; }
rank: 672
score: 99.73204985119048
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 672
score: 99.73067921605603
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 672
score: 99.7252358490566
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 672
score: 99.71796189692982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 673
score: 99.74268595377605
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 673
score: 99.7320401278409
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 673
score: 99.73067801339286
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 673
score: 99.72886920797414
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 673
score: 99.72518216646634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } name = name . Type . OTHER ;
rank: 673
score: 99.71794476425438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Name . Type . OTHER ;
rank: 674
score: 99.757099609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NULL ; } type = Name . Type ;
rank: 674
score: 99.74258317618535
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 674
score: 99.7416259765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else is CaMeL Set = true ;
rank: 674
score: 99.7379214638158
patch: else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 674
score: 99.73193359375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 674
score: 99.73066057477679
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 674
score: 99.72885181864754
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 674
score: 99.7250555630388
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 675
score: 99.75703486689815
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ; } name = Name . Type . OTHER ;
rank: 675
score: 99.737890625
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 675
score: 99.73189357069673
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { is CaMeL Set = true ;
rank: 675
score: 99.73065185546875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 675
score: 99.72884427584134
patch: is CaMeL Set = true ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 675
score: 99.72505159198113
patch: is CaMeL Set = true ; break ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 675
score: 99.71793619791667
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 675
score: 99.70566231863839
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; ;
rank: 676
score: 99.75702940742924
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; break ; }
rank: 676
score: 99.74248798076923
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 676
score: 99.74140956038136
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 676
score: 99.73787715517241
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 676
score: 99.73062870420259
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = Name . Type . OTHER ; break ;
rank: 676
score: 99.72877261513158
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 676
score: 99.72500723379629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type ; }
rank: 676
score: 99.7178799715909
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 676
score: 99.70558449074075
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL Name ( ) ;
rank: 677
score: 99.7569921875
patch: name = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 677
score: 99.7318115234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 677
score: 99.72873174948771
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 677
score: 99.72500174386161
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 677
score: 99.70555683210785
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } type = Name . Type . OTHER ;
rank: 678
score: 99.74237738715277
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 678
score: 99.74140276227679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 678
score: 99.73059502963362
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 678
score: 99.7287176724138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 678
score: 99.72494673295455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 678
score: 99.705556640625
patch: is CaMeL Set = true ; if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 679
score: 99.74234169407895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } } name = n . get CaMeL Parent ( ) ;
rank: 679
score: 99.74134335275424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 679
score: 99.73779296875
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = n . get CaMeL String ( ) ; }
rank: 679
score: 99.73172095514113
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 679
score: 99.72489346590909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . NONE ; }
rank: 679
score: 99.71765367040095
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == parent ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 679
score: 99.7055040724734
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 680
score: 99.75678628177967
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 680
score: 99.74228515625
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 680
score: 99.73159555288461
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 680
score: 99.73055441337719
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 680
score: 99.72867557920259
patch: is CaMeL Set = true ; if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 680
score: 99.72488064236111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . EMPTY ;
rank: 680
score: 99.7175925925926
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) - 1 ) ;
rank: 680
score: 99.70546875
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 681
score: 99.75664876302083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 681
score: 99.74227201021634
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 681
score: 99.73776771282327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 681
score: 99.7315693204365
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 681
score: 99.73053089488636
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 681
score: 99.71755149147727
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 681
score: 99.70546361019737
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 682
score: 99.75662530637256
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; } }
rank: 682
score: 99.74222301136363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC :
rank: 682
score: 99.74130483774039
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 682
score: 99.7377508755388
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 682
score: 99.73142578125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) {
rank: 682
score: 99.72865513392857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 682
score: 99.70541548295455
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 683
score: 99.75653483072917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 683
score: 99.74124461206897
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ; is CaMeL Set = true ;
rank: 683
score: 99.7377501370614
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } else { is CaMeL Set = true ;
rank: 683
score: 99.73142578125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 683
score: 99.73048828125
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 683
score: 99.72479870854592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 683
score: 99.71749312789352
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , name ) ;
rank: 683
score: 99.70540696747449
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ;
rank: 684
score: 99.74216907429245
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 684
score: 99.73774937220982
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 684
score: 99.73134014423077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 684
score: 99.72861696639151
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = n . get CaMeL String ( ) ;
rank: 684
score: 99.72472272600446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . NONE ; }
rank: 684
score: 99.71747698102679
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 684
score: 99.70531765919812
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 685
score: 99.75648328993056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 685
score: 99.74215133101852
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 685
score: 99.73119178185097
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 685
score: 99.73037283761161
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 685
score: 99.72860604745371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 685
score: 99.70528609664352
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 686
score: 99.75646758497807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL Next ( ) ; }
rank: 686
score: 99.74112675107759
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = false ;
rank: 686
score: 99.73765055338542
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } type = n . get CaMeL String ( ) ;
rank: 686
score: 99.73115971403301
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 686
score: 99.72463701356132
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 686
score: 99.71742078993056
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , module ) ;
rank: 686
score: 99.7052163178066
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } } type = Name . Type . OTHER ;
rank: 687
score: 99.75645727040816
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ; }
rank: 687
score: 99.74111833243535
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) < n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 687
score: 99.73759403935185
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 687
score: 99.73110961914062
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ; }
rank: 687
score: 99.73028564453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = rvalue == null ? Name . Type . OTHER : get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 687
score: 99.7285865045363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; break ; }
rank: 687
score: 99.724609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } return ;
rank: 687
score: 99.70513916015625
patch: is CaMeL Set = true ; type = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 688
score: 99.74213610197368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 688
score: 99.73759242466518
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 688
score: 99.72459129050925
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 688
score: 99.70513237847223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 689
score: 99.75616455078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 689
score: 99.7410828637295
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . GET ; }
rank: 689
score: 99.73755787037037
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = false ;
rank: 689
score: 99.7310290727459
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 689
score: 99.73025459155701
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 689
score: 99.7245423560049
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 689
score: 99.71719473379629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n ) ;
rank: 690
score: 99.75611787683823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { name = n . get CaMeL String ( ) ;
rank: 690
score: 99.74105398995536
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 690
score: 99.73753199084052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; } type = Name . Type . OTHER ; }
rank: 690
score: 99.73101917613636
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 690
score: 99.72450474330357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = name . Type . OTHER ; }
rank: 690
score: 99.71715856481481
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 690
score: 99.70511363636363
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 691
score: 99.75605830439815
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 691
score: 99.74098748675847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent )
rank: 691
score: 99.73752170138889
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 691
score: 99.73094940185547
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . GET ;
rank: 691
score: 99.73021589006696
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . INC : is CaMeL Set = true ;
rank: 691
score: 99.70497866030092
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 692
score: 99.75603070175438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 692
score: 99.74199761284723
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 692
score: 99.74094871238425
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . INC : is CaMeL Set = true ;
rank: 692
score: 99.73088304924242
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 692
score: 99.73020241477273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; type = Name . Type . OTHER ;
rank: 692
score: 99.72444370814732
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . NONE ; } }
rank: 692
score: 99.71709333147321
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 692
score: 99.70493861607143
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL Name ( ) ;
rank: 693
score: 99.75600834216101
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } } type = Name . Type . OTHER ;
rank: 693
score: 99.74093191964286
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 693
score: 99.73744673295455
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; }
rank: 693
score: 99.7308819110577
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 693
score: 99.71708984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 693
score: 99.70486111111111
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL String ( ) ;
rank: 694
score: 99.74186905570652
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 694
score: 99.74092824835526
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 694
score: 99.7374267578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; } }
rank: 694
score: 99.73087439903846
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 694
score: 99.72839776400862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 694
score: 99.72421683517157
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 694
score: 99.71706717354911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 694
score: 99.70485791973039
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 695
score: 99.75600022536058
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; } name = n . get CaMeL String ( ) ;
rank: 695
score: 99.74184466422872
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ;
rank: 695
score: 99.74091476690573
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . FUNCTION ; }
rank: 695
score: 99.7374112215909
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) || ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 695
score: 99.72831859923245
patch: is CaMeL Set = false ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 695
score: 99.72419686153017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 695
score: 99.71694779829545
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n ) { is CaMeL Set = true ;
rank: 695
score: 99.70481178977273
patch: } else { } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 696
score: 99.7559964364035
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } } name = Name . Type ;
rank: 696
score: 99.7418212890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } } name = n . get CaMeL String ( ) ;
rank: 696
score: 99.74089645127118
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; }
rank: 696
score: 99.72831669560185
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; } }
rank: 696
score: 99.72416896446079
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 696
score: 99.716943359375
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 696
score: 99.70474008413461
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 697
score: 99.75599179025424
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type ; }
rank: 697
score: 99.74181707974138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 697
score: 99.74088274846312
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ; }
rank: 697
score: 99.73735700334821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else }
rank: 697
score: 99.73077947443181
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 697
score: 99.73001876531863
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 697
score: 99.7283135775862
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 697
score: 99.72415794516509
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 697
score: 99.70473807198661
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 698
score: 99.74175900829081
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 698
score: 99.74086828399123
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 698
score: 99.73734828404018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else }
rank: 698
score: 99.730556640625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 698
score: 99.73001598011363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 698
score: 99.72830750512296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else type = Name . Type . OTHER ;
rank: 698
score: 99.72406877790179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . get CaMeL Value ( ) ;
rank: 698
score: 99.71688138521634
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ;
rank: 698
score: 99.70473069411058
patch: } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 699
score: 99.74173538773148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 699
score: 99.7408291903409
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; return ; }
rank: 699
score: 99.7373046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 699
score: 99.73050877305327
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 699
score: 99.72999889445755
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == 0 ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 699
score: 99.72821945440573
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 699
score: 99.72403971354167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = name . Type . OTHER ;
rank: 699
score: 99.71687534877232
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; default :
rank: 699
score: 99.70472063337054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = ;
rank: 700
score: 99.75593596813725
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = name ;
rank: 700
score: 99.74162946428571
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . DEC : is CaMeL Set = true ;
rank: 700
score: 99.74074748411017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . FUNCTION :
rank: 700
score: 99.737294921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; ; }
rank: 700
score: 99.73043673155738
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 700
score: 99.72403067129629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } } name = name . Type . OTHER ;
rank: 700
score: 99.71686921296296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 700
score: 99.7046760110294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 701
score: 99.73023897058823
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 701
score: 99.72999790736607
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL First CaMeL Child ( ) ; type = Name . Type . FUNCTION ;
rank: 701
score: 99.72402162905092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 701
score: 99.71680608785377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 701
score: 99.70463505497685
patch: } name = n . get CaMeL Name ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 702
score: 99.74050653176229
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n . get CaMeL Next ( ) ) ; }
rank: 702
score: 99.73722759046052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } }
rank: 702
score: 99.72983022836539
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } type = Name . Type . FUNCTION ;
rank: 702
score: 99.72805884576613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 702
score: 99.72401646205357
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 702
score: 99.71678815569196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 702
score: 99.70457240513393
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 703
score: 99.75584253771552
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type ; type = Name . Type ;
rank: 703
score: 99.74049052254098
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 703
score: 99.72987115205224
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 703
score: 99.72802734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 703
score: 99.7240145596591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 703
score: 99.70453752790179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL Type ( ) ;
rank: 704
score: 99.74041748046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) [ 0 ] ; }
rank: 704
score: 99.73715645926339
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } is CaMeL Set = true ;
rank: 704
score: 99.72966234611742
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 704
score: 99.72797594572368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) is CaMeL Set = true ; }
rank: 704
score: 99.72394929108796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { is CaMeL Set = true ; }
rank: 704
score: 99.70448452818627
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 705
score: 99.74150988520408
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 705
score: 99.73707863136575
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 705
score: 99.7296651204427
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 705
score: 99.72788326075819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; break ; }
rank: 705
score: 99.72391312210648
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } } } name = name . Type . OTHER ;
rank: 706
score: 99.75573309536638
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; break ; }
rank: 706
score: 99.74150739397321
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 706
score: 99.74030290570175
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 706
score: 99.73692776864036
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 706
score: 99.72945216444673
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 706
score: 99.72786771334134
patch: name = n . get CaMeL String ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 706
score: 99.723818359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 706
score: 99.7044344815341
patch: } if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 707
score: 99.74028965212264
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 707
score: 99.72785924692623
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 707
score: 99.72378104073661
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 707
score: 99.70436789772727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NOT ;
rank: 708
score: 99.75571852463942
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 708
score: 99.74022637038935
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } type = Name . Type . FUNCTION ;
rank: 708
score: 99.73685128348214
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = null ; type = Name . Type . OTHER ; }
rank: 708
score: 99.72953657670455
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null )
rank: 708
score: 99.7278252963362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; type = n . get CaMeL String ( ) ;
rank: 708
score: 99.72373415389151
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } name = name . Type . NONE ;
rank: 708
score: 99.71643288352273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , scope ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 709
score: 99.75570275648585
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; break ; } } name = Name . Type . OTHER ;
rank: 709
score: 99.74137369791667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 709
score: 99.74020127118644
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 709
score: 99.73678823617789
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 709
score: 99.7294034090909
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 709
score: 99.72925204918033
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 709
score: 99.72781121926229
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 709
score: 99.72370515046296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } }
rank: 709
score: 99.71639310396634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 709
score: 99.7043359375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 710
score: 99.75567746629902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type ;
rank: 710
score: 99.74134410511364
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 710
score: 99.74018386314656
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ;
rank: 710
score: 99.72922003073771
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 710
score: 99.72776745211694
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = n . get CaMeL String ( ) ;
rank: 710
score: 99.72365944602272
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } else { name = name . Type . OTHER ; }
rank: 711
score: 99.75562462439903
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 711
score: 99.74133991745283
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 711
score: 99.74014395254629
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 711
score: 99.73674406828704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = type . get CaMeL String ( ) ; }
rank: 711
score: 99.72934478183963
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 711
score: 99.72920227050781
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 711
score: 99.72776576450893
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 711
score: 99.72365234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL First CaMeL Child ( ) ; }
rank: 711
score: 99.70430814302884
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = Name . Type . OTHER ;
rank: 712
score: 99.74010195974576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GETPROP ; }
rank: 712
score: 99.73670305524554
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 712
score: 99.72901940724206
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 712
score: 99.72765112704919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( type != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 712
score: 99.72360665457589
patch: } name = n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 712
score: 99.71627103365384
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL String ( ) ) ;
rank: 712
score: 99.70429144965277
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 713
score: 99.75553385416667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name ; }
rank: 713
score: 99.74131944444444
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 713
score: 99.74006569602273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 713
score: 99.7366879111842
patch: is CaMeL Set = n . get CaMeL First CaMeL Child ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 713
score: 99.72899627685547
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 713
score: 99.72759509477459
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 714
score: 99.75552804129464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 714
score: 99.73998455668605
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 714
score: 99.73666268807871
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 714
score: 99.72894646139706
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 714
score: 99.72358049665179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 715
score: 99.75550579202586
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; type = Name . Type . OTHER ;
rank: 715
score: 99.74118329893868
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 715
score: 99.72912383497807
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; }
rank: 715
score: 99.72889859068627
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 715
score: 99.72757056451613
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 715
score: 99.72352225825472
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = name . Type . OTHER ;
rank: 715
score: 99.71619104456019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 716
score: 99.755498046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ; }
rank: 716
score: 99.73655941611842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } }
rank: 716
score: 99.72886868990385
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 716
score: 99.7234987745098
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 716
score: 99.71617961379717
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 717
score: 99.75548650568182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 717
score: 99.74111502511161
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 717
score: 99.73991419057377
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 717
score: 99.73653470552884
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 717
score: 99.729111328125
patch: if ( Node CaMeL Util . is CaMeL Function ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 717
score: 99.72885086287313
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 717
score: 99.723466796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } } name = n . get CaMeL String ( ) ;
rank: 717
score: 99.71615439967105
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 717
score: 99.7042397553066
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . TYPE ;
rank: 718
score: 99.75548650568182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = n . get CaMeL Parent ( ) ;
rank: 718
score: 99.74110764723558
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 718
score: 99.73647635323661
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } else { is CaMeL Set = true ; }
rank: 718
score: 99.72905918337264
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 718
score: 99.72876352163462
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 718
score: 99.72743443080357
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 718
score: 99.7234209168632
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 718
score: 99.71611926020408
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 718
score: 99.70412149234694
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 719
score: 99.7554707429847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = name . to CaMeL String ( ) ;
rank: 719
score: 99.74101200810185
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 719
score: 99.73988813920455
patch: try { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 719
score: 99.7364566200658
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) {
rank: 719
score: 99.72869140625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 719
score: 99.72739955357143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 719
score: 99.72340675636575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n + $STRING$ ) ;
rank: 719
score: 99.7041015625
patch: return ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 720
score: 99.75546322228773
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } } type = Name . Type ;
rank: 720
score: 99.741005859375
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 720
score: 99.73987688337054
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else switch ( n . get CaMeL Type ( ) ) {
rank: 720
score: 99.72887244591347
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } is CaMeL Set = true ;
rank: 720
score: 99.72867063492063
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } return ;
rank: 720
score: 99.72340249115567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ; name = name . Type . OTHER ;
rank: 720
score: 99.71606016995614
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 720
score: 99.70408313679245
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 721
score: 99.75539634967673
patch: type = Name . Type ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 721
score: 99.74099677905701
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 721
score: 99.72883823939732
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) == n ) ;
rank: 721
score: 99.72737926136364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL Parent ( ) ;
rank: 721
score: 99.70406668526786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; ;
rank: 722
score: 99.75534493582589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 722
score: 99.74098423549107
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 722
score: 99.73985015368852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ;
rank: 722
score: 99.72882952008929
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 722
score: 99.7273658014113
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 722
score: 99.70402922453704
patch: } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 723
score: 99.75531316207628
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ;
rank: 723
score: 99.7409335049716
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 723
score: 99.73984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } switch ( parent . get CaMeL Type ( ) ) {
rank: 723
score: 99.73610701650944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ;
rank: 723
score: 99.72880122346699
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 723
score: 99.7285385131836
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 723
score: 99.72733429939517
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 723
score: 99.72330114976415
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } if ( ! is CaMeL Set ) { is CaMeL Set = true ;
rank: 724
score: 99.74088911576705
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; }
rank: 724
score: 99.72879083806818
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 724
score: 99.7285010494403
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 724
score: 99.72733248197116
patch: name = String . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 724
score: 99.7232333096591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } } else { type = Name . Type . OTHER ;
rank: 724
score: 99.71587171052632
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 724
score: 99.7039207175926
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } type = Name . Type . OTHER ;
rank: 725
score: 99.7552966101695
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) ; }
rank: 725
score: 99.74085489908855
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ;
rank: 725
score: 99.73975409836065
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; name = Name . Type . OTHER ; }
rank: 725
score: 99.73607016509433
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } }
rank: 725
score: 99.72877534906915
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 725
score: 99.7284281716418
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 725
score: 99.72318209134616
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 726
score: 99.75526780348558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . STRING ;
rank: 726
score: 99.74084712009804
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 726
score: 99.736044921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 726
score: 99.72876437205188
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 726
score: 99.72835286458333
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 726
score: 99.72723191784274
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; is CaMeL Set = false ;
rank: 726
score: 99.72312644675925
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 726
score: 99.71586390904018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 726
score: 99.70390973772321
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 727
score: 99.75524695444915
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; } name = Name . Type . OTHER ;
rank: 727
score: 99.73961463341347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) > n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 727
score: 99.73601973684211
patch: } if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 727
score: 99.7230557528409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . NULL ; }
rank: 727
score: 99.71582919034091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 727
score: 99.70387776692708
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 728
score: 99.75524030412946
patch: type = Name . Type ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ;
rank: 728
score: 99.74080078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Set = true ;
rank: 728
score: 99.7281827059659
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 728
score: 99.72298177083333
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 728
score: 99.71582919034091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 728
score: 99.70376150948661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ; type = Name . Type . OTHER ;
rank: 729
score: 99.73953091896186
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 729
score: 99.73594313401442
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; } else }
rank: 729
score: 99.7281135110294
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 729
score: 99.72704190340909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 729
score: 99.72296697443181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 729
score: 99.7157774808114
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 729
score: 99.70374226120283
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 730
score: 99.75513109110169
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; }
rank: 730
score: 99.73951939174107
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 730
score: 99.7287109375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == - && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 730
score: 99.72811185396634
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 730
score: 99.72699550412736
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 730
score: 99.72287819602273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { name = Name . Type . OTHER ;
rank: 730
score: 99.71576704545454
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 731
score: 99.755126953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else { name = Name . Type ;
rank: 731
score: 99.74067723473837
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 731
score: 99.73944206957547
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 731
score: 99.73593026620371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 731
score: 99.72868742766204
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 731
score: 99.72803485576924
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 731
score: 99.72287645526961
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 731
score: 99.71575582252359
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 732
score: 99.75511823381696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 732
score: 99.74067478553921
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 732
score: 99.7393405720339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; }
rank: 732
score: 99.73575265066964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } } else name = n . get CaMeL String ( ) ;
rank: 732
score: 99.72864641462054
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ;
rank: 732
score: 99.72695817618535
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 732
score: 99.72282492897727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; break ; }
rank: 732
score: 99.71575055803571
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 732
score: 99.70371791294643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 733
score: 99.75506488347457
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 733
score: 99.73930746822033
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 733
score: 99.735703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = n . get CaMeL String ( ) ; } }
rank: 733
score: 99.72863555372807
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ;
rank: 733
score: 99.7278933057598
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 733
score: 99.72695655153508
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 733
score: 99.72282208136792
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } else { is CaMeL Set = false ;
rank: 733
score: 99.71565464564732
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 733
score: 99.7037020596591
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 734
score: 99.75494902012711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type ; type = Name . Type ; }
rank: 734
score: 99.74062691482843
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 734
score: 99.73901795504386
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! is CaMeL Global ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 734
score: 99.73563187210648
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 734
score: 99.72777841605392
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 734
score: 99.7269287109375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL First CaMeL Child ( ) ;
rank: 734
score: 99.72279710036058
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ;
rank: 734
score: 99.70369619693396
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 735
score: 99.74061734068627
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 735
score: 99.73900462962963
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; false ;
rank: 735
score: 99.73562186104911
patch: type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 735
score: 99.72770922111742
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 735
score: 99.72682967275944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 735
score: 99.72276088169643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = false ; break ; } }
rank: 735
score: 99.70369175502232
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 736
score: 99.75491966391509
patch: name = name . to CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 736
score: 99.73899366034836
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 736
score: 99.73561006433823
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 736
score: 99.72845458984375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . get CaMeL First CaMeL Child ( n . get CaMeL Next ( ) ) == n ) { is CaMeL Set = true ;
rank: 736
score: 99.72680235745614
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; return ; } name = n . get CaMeL String ( ) ; }
rank: 736
score: 99.7227450284091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ;
rank: 736
score: 99.71549479166667
patch: Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 736
score: 99.70363136574075
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 737
score: 99.75490025111607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type ; type = Name . Type ;
rank: 737
score: 99.73887232730263
patch: try { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 737
score: 99.73552024147727
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 737
score: 99.72841282894737
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 737
score: 99.72747039794922
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 737
score: 99.72259765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } } name = n . get CaMeL Name ( ) ;
rank: 737
score: 99.7035420735677
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } is CaMeL Set = true ;
rank: 738
score: 99.7548828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . TYPE ;
rank: 738
score: 99.74041748046875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 738
score: 99.73545435855263
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 738
score: 99.72741887019231
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 738
score: 99.72259628563596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 738
score: 99.70350864955357
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 739
score: 99.75483494178921
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; break ; } }
rank: 739
score: 99.74040617766204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; type = Name . Type . FUNCTION ;
rank: 739
score: 99.73885091145833
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 739
score: 99.7273661295573
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 739
score: 99.72259410511364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ;
rank: 739
score: 99.71539652122641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN :
rank: 739
score: 99.7034912109375
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 740
score: 99.73883056640625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else switch ( parent . get CaMeL Type ( ) ) {
rank: 740
score: 99.73532540457589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = 1 ; type = Name . Type . OTHER ; }
rank: 740
score: 99.72826720120614
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Next ( ) ; if ( gramps == null ) { return ; }
rank: 740
score: 99.72726111778846
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 740
score: 99.72668877963362
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 740
score: 99.71539306640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 741
score: 99.7547607421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } }
rank: 741
score: 99.72826687794812
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; }
rank: 741
score: 99.72667386239036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL Name ( ) ; }
rank: 741
score: 99.7225222120098
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 741
score: 99.70341059846699
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } name = n . get CaMeL String ( ) ;
rank: 742
score: 99.73524693080357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == node ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 742
score: 99.72719804067461
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . FUNCTION ;
rank: 742
score: 99.72665700604838
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) is CaMeL Set = true ;
rank: 742
score: 99.7225180571934
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 742
score: 99.71528063322368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 742
score: 99.7034024325284
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 743
score: 99.75468934257076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = Name . Type . OTHER ; }
rank: 743
score: 99.7388164813702
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; node = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 743
score: 99.72819914641204
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Next ( ) ; type = Name . Type . FUNCTION ;
rank: 743
score: 99.7271484375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 743
score: 99.72249058314732
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ;
rank: 743
score: 99.7152687355324
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) + 0 ) ;
rank: 743
score: 99.70332392939815
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 744
score: 99.75462183459052
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 744
score: 99.74024454752605
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 744
score: 99.73870332362289
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 744
score: 99.73517400568181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = n . get CaMeL String ( ) ; } }
rank: 744
score: 99.72800071022728
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 744
score: 99.72709064094387
patch: if ( parent != null ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 744
score: 99.72661675347223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } type = Name . Type . OTHER ;
rank: 744
score: 99.72248120577831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type ;
rank: 744
score: 99.71526227678571
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 744
score: 99.70323350694444
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 745
score: 99.75459155701755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ;
rank: 745
score: 99.740234375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { is CaMeL Set = true ; }
rank: 745
score: 99.73863711599576
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { type = Name . Type . OTHER ; }
rank: 745
score: 99.72774174528301
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 745
score: 99.72702073317308
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 745
score: 99.72246844951923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } name = Name . Type . OTHER ;
rank: 745
score: 99.71525969328704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 746
score: 99.75454015899123
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type ; type = Name . Type ; }
rank: 746
score: 99.740234375
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 746
score: 99.73863389756944
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; case Token . DEC : is CaMeL Set = true ;
rank: 746
score: 99.72772686298077
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 746
score: 99.72674440870098
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : return ; }
rank: 746
score: 99.72654674899194
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 746
score: 99.72245065789474
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { type = Name . Type . OTHER ; } }
rank: 747
score: 99.72751089242789
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 747
score: 99.72652633101852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } else name = Name . Type . OTHER ;
rank: 747
score: 99.72242647058823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } } name = n . get CaMeL Name ( ) ;
rank: 747
score: 99.7151171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 748
score: 99.74022549715909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } } name = n . get CaMeL String ( ) ;
rank: 748
score: 99.73852952860169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 748
score: 99.73493303571429
patch: if ( parent == n . get CaMeL First CaMeL Child ( ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 748
score: 99.72673034667969
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = Name . Type . OTHER ; }
rank: 748
score: 99.7030184659091
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 749
score: 99.74020253057066
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 749
score: 99.7271484375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 749
score: 99.72669425843254
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 749
score: 99.72240306712963
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 749
score: 99.71500651041667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; }
rank: 749
score: 99.70300958806818
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Name ( ) ;
rank: 750
score: 99.75439453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; break ; } name = Name . Type . OTHER ;
rank: 750
score: 99.73840553977273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; continue ; }
rank: 750
score: 99.72665550595238
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } return ;
rank: 750
score: 99.72240193684895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Next ( ) ;
rank: 751
score: 99.75424081307871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . STRING ;
rank: 751
score: 99.74014718191964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 751
score: 99.73840117872807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 751
score: 99.72687322443181
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 751
score: 99.7265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ; } break ;
rank: 751
score: 99.72639069733796
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 751
score: 99.72234786184211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; break ; } } }
rank: 751
score: 99.71497272995283
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 751
score: 99.70282097582547
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 752
score: 99.75422585227273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 752
score: 99.73834528688525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 752
score: 99.73468889508929
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; }
rank: 752
score: 99.72652435302734
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 752
score: 99.72631048387096
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 752
score: 99.72234301297169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } } }
rank: 752
score: 99.7149609375
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 752
score: 99.70279366629464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = 1 ;
rank: 753
score: 99.75421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 753
score: 99.73451967592592
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 753
score: 99.7266512784091
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 753
score: 99.72649274553571
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 753
score: 99.7262124115566
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 753
score: 99.7222900390625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 753
score: 99.71489606584821
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 754
score: 99.75420932112068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; type = Name . Type ;
rank: 754
score: 99.74010291466347
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 754
score: 99.73822128563596
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 754
score: 99.72654474431818
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 754
score: 99.7264404296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } } break ;
rank: 754
score: 99.7261629971591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; name = n . get CaMeL String ( ) ;
rank: 754
score: 99.72214918870192
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL First CaMeL Child ( ) ; } }
rank: 755
score: 99.75413004557292
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ;
rank: 755
score: 99.73999865301724
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 755
score: 99.72618103027344
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } } break ;
rank: 755
score: 99.72214133522728
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } else { name = Name . Type . OTHER ; }
rank: 755
score: 99.71471477004717
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 755
score: 99.70270905671296
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 756
score: 99.73990572415866
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 756
score: 99.73812916239754
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 756
score: 99.73434884207589
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 756
score: 99.72649147727273
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 756
score: 99.72208984375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } } name = n . get CaMeL Name ( ) ;
rank: 756
score: 99.70268458946079
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 757
score: 99.75411931818182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } else { name = n . get CaMeL String ( ) ;
rank: 757
score: 99.73990234375
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 757
score: 99.7343037923177
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 757
score: 99.72643590856481
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 757
score: 99.7260978452621
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; }
rank: 757
score: 99.72598407451923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 757
score: 99.702646484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 758
score: 99.75407805266204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . STRING ; break ; } name = Name . Type . OTHER ;
rank: 758
score: 99.73973670372597
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 758
score: 99.73799159163136
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 758
score: 99.7342529296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 758
score: 99.7263934795673
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; }
rank: 758
score: 99.7259521484375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = Name . Type . OTHER ; }
rank: 758
score: 99.7219024122807
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 758
score: 99.71458675986842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Node CaMeL Util . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 758
score: 99.70264543805804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ; type = Name . Type . OTHER ;
rank: 759
score: 99.75405187774123
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 759
score: 99.73970853365384
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Type ( ) ) ;
rank: 759
score: 99.73795848781779
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 759
score: 99.73413957868304
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } } is CaMeL Set = true ;
rank: 759
score: 99.72625612745098
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 759
score: 99.72585846656976
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 759
score: 99.72183931790866
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n + $STRING$ ) ;
rank: 759
score: 99.71449497767857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( parent , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 759
score: 99.70262784090909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 760
score: 99.75404829545455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . OTHER ;
rank: 760
score: 99.73967874461206
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 760
score: 99.73404615752551
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ;
rank: 760
score: 99.72601787860577
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER : get CaMeL Value CaMeL Type ( rvalue ) ;
rank: 760
score: 99.72593470982143
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 760
score: 99.7218359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } }
rank: 760
score: 99.70260120738637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NULL ;
rank: 761
score: 99.75402411099138
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ; name = Name . Type ;
rank: 761
score: 99.7395731608073
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( ( Node ) parent ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 761
score: 99.73789228019068
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 761
score: 99.73396484375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 761
score: 99.72573784722222
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . FUNCTION : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 761
score: 99.72172575176887
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } } name = Name . Type . OTHER ;
rank: 761
score: 99.71442649147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 761
score: 99.70258884803921
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ;
rank: 762
score: 99.73955620659723
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 762
score: 99.73788400423729
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 762
score: 99.73389543805804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } } }
rank: 762
score: 99.72594762731481
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; }
rank: 762
score: 99.72570430871212
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 762
score: 99.72166160300925
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } }
rank: 762
score: 99.71434674944196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 762
score: 99.70258345170454
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 763
score: 99.739541015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC :
rank: 763
score: 99.72593336838942
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 763
score: 99.72569444444444
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 764
score: 99.75396518049568
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } type = Name . Type ; break ;
rank: 764
score: 99.739501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 764
score: 99.73375355113636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; } }
rank: 764
score: 99.72565569196429
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = false ; } break ;
rank: 764
score: 99.72156832510964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 764
score: 99.7025
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 765
score: 99.75385393415179
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ; }
rank: 765
score: 99.7393948739035
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; }
rank: 765
score: 99.73776633522728
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 765
score: 99.73368778935185
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else }
rank: 765
score: 99.72570407006049
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 765
score: 99.72559344951924
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 765
score: 99.71427556818182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 765
score: 99.70244738520408
patch: } if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 766
score: 99.7393798828125
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 766
score: 99.73775294569673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 766
score: 99.73360770089286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = n . get CaMeL First CaMeL Child ( ) ; }
rank: 766
score: 99.72565569196429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ;
rank: 766
score: 99.72549579326923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 766
score: 99.72147409539474
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } return ;
rank: 766
score: 99.71415653935185
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 767
score: 99.73936312806373
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Prop CaMeL Assign = true ;
rank: 767
score: 99.73360262784091
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 767
score: 99.7256492332176
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } name = n . get CaMeL String ( ) ;
rank: 767
score: 99.71408315805289
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 768
score: 99.73926738664215
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 768
score: 99.73768446180556
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 768
score: 99.72563380821079
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 768
score: 99.72529442630596
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 768
score: 99.71407063802083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent , scope ) ;
rank: 768
score: 99.70233623798077
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = false ;
rank: 769
score: 99.7537841796875
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 769
score: 99.73919208233173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION : get CaMeL Value CaMeL Type ( n ) ;
rank: 769
score: 99.73758484887296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 769
score: 99.73350306919643
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 769
score: 99.72566885318396
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 769
score: 99.72515190972223
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = type == null ; }
rank: 769
score: 99.71405707465277
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , is CaMeL Prop CaMeL Assign , false ) ;
rank: 769
score: 99.70226178850446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ;
rank: 770
score: 99.75375253182871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } } name = Name . Type . OTHER ;
rank: 770
score: 99.73917643229167
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node parent = parent . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 770
score: 99.73744419642857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( is CaMeL Global ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 770
score: 99.72561163651316
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else } name = n . get CaMeL String ( ) ;
rank: 770
score: 99.72494741586539
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 770
score: 99.72120028409091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 770
score: 99.71404474431819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 770
score: 99.70225899174528
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 771
score: 99.75369140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = Name . Type ;
rank: 771
score: 99.73742475665983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 771
score: 99.733466796875
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; }
rank: 771
score: 99.7255623109879
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL Next ( ) ) { is CaMeL Set = true ; }
rank: 771
score: 99.72492749763258
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 771
score: 99.72119140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } return ;
rank: 771
score: 99.71400923295455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 771
score: 99.70221416766827
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FALSE ; type = Name . Type . OTHER ;
rank: 772
score: 99.75367592865567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type ;
rank: 772
score: 99.73901827830188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 772
score: 99.73742475665983
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 772
score: 99.73345947265625
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 772
score: 99.7255226417824
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 772
score: 99.72544508713942
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . FUNCTION ;
rank: 772
score: 99.72488064236111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . GET ;
rank: 772
score: 99.72113037109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; break ; } }
rank: 772
score: 99.70216836734694
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 773
score: 99.75353064903847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 773
score: 99.73898368969299
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 773
score: 99.73338099888393
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 773
score: 99.7254574424342
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 773
score: 99.72542317708333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN :
rank: 773
score: 99.72486091382575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 773
score: 99.70211226851852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 774
score: 99.75348649945175
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; break ;
rank: 774
score: 99.73896882971938
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : return ;
rank: 774
score: 99.73726128472222
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 774
score: 99.72537796585648
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ;
rank: 774
score: 99.72484872855392
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { return ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 774
score: 99.72111868351064
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { is CaMeL Set = true ;
rank: 774
score: 99.70210597826087
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 775
score: 99.75343605324075
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 775
score: 99.738935546875
patch: if ( is CaMeL Set || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 775
score: 99.73723098466981
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 775
score: 99.73330801504629
patch: type = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 775
score: 99.72540480090726
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ;
rank: 775
score: 99.72535561615567
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Type ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 775
score: 99.72482800839552
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 775
score: 99.72108811598558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 775
score: 99.70205453725961
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 776
score: 99.73891420717592
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 776
score: 99.73325376157408
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 776
score: 99.72535083912037
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ;
rank: 776
score: 99.7247798859127
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 776
score: 99.72106481481481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } }
rank: 776
score: 99.71382359095982
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } }
rank: 776
score: 99.70198567708333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL Parent ( ) ;
rank: 777
score: 99.73890516493056
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 777
score: 99.73708670479911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( type . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 777
score: 99.72528191332547
patch: name = n . get CaMeL Next ( ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 777
score: 99.72517641129032
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 777
score: 99.72467912946429
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . FUNCTION ;
rank: 777
score: 99.72099793632076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } type = Name . Type . OTHER ;
rank: 777
score: 99.71380504261364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL Next ( ) ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 777
score: 99.70183856670673
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 778
score: 99.73875038296569
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 778
score: 99.73705575980392
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; is CaMeL Set = true ;
rank: 778
score: 99.73294845281863
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 778
score: 99.7252666766827
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { type = Name . Type . OTHER ;
rank: 778
score: 99.725166015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 778
score: 99.72467496501865
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 778
score: 99.72098795572917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; break ; } }
rank: 778
score: 99.71375582510964
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default :
rank: 778
score: 99.70180220170455
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 779
score: 99.75321528596699
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 779
score: 99.73869977678571
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 779
score: 99.73294503348214
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type ;
rank: 779
score: 99.72521193484043
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 779
score: 99.72456287202381
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = type == null ; }
rank: 779
score: 99.72096761067708
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; } }
rank: 780
score: 99.73861581307871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 780
score: 99.73292824074075
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; name = n . get CaMeL String ( ) ; }
rank: 780
score: 99.72519712094908
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ;
rank: 780
score: 99.72507052951389
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; ; } }
rank: 780
score: 99.72449747721355
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 780
score: 99.71368963068181
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 780
score: 99.70165058210785
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ;
rank: 781
score: 99.753173828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; break ; } type = Name . Type ;
rank: 781
score: 99.73861581307871
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 781
score: 99.73697060032895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; } break ;
rank: 781
score: 99.73291936910377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 781
score: 99.72440962357955
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = n . get CaMeL String ( ) ;
rank: 781
score: 99.71365792410714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , n , scope ) ;
rank: 781
score: 99.70164100796569
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 782
score: 99.73851102941177
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 782
score: 99.73695248463115
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 782
score: 99.724306640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : return ;
rank: 782
score: 99.72090366908482
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = name . Type . OTHER ;
rank: 782
score: 99.71365234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ) ;
rank: 782
score: 99.70160590277777
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 783
score: 99.75296585648148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; type = Name . Type ; } type = Name . Type ;
rank: 783
score: 99.73849540844299
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 783
score: 99.73279474431818
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 783
score: 99.72507001768868
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 783
score: 99.72084517045455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 784
score: 99.7384920987216
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 784
score: 99.73682441086065
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( type == Token . GETPROP ) {
rank: 784
score: 99.72486787683823
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 784
score: 99.72417853860294
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 784
score: 99.72075840212264
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 784
score: 99.7135760967548
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ ) ;
rank: 785
score: 99.7529296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = name . Type . OTHER ;
rank: 785
score: 99.7384765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 785
score: 99.73682441086065
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 785
score: 99.73272026909723
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else
rank: 785
score: 99.72482421875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 785
score: 99.72415161132812
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 785
score: 99.72073929398148
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type . OTHER ;
rank: 785
score: 99.7135597511574
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , false ) ;
rank: 786
score: 99.75292080965909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type ; break ; }
rank: 786
score: 99.73843149038461
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Prop CaMeL Assign = true ;
rank: 786
score: 99.73671177455357
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; break ;
rank: 786
score: 99.73272026909723
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) || ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ;
rank: 786
score: 99.72474609375
patch: Node parent = n . get CaMeL Parent ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 786
score: 99.72414143880208
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 786
score: 99.72071329752605
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL Value ( ) ;
rank: 786
score: 99.70141157670454
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 787
score: 99.75292064525463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 787
score: 99.73834978070175
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 787
score: 99.73265697337963
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 787
score: 99.72469075520833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ; }
rank: 787
score: 99.72452486478366
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 787
score: 99.72412109375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 787
score: 99.72064208984375
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } }
rank: 787
score: 99.70107974646227
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 788
score: 99.73832731426887
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 788
score: 99.736572265625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 788
score: 99.72444661458333
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 788
score: 99.72409889914773
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 788
score: 99.72057414504717
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 788
score: 99.7135009765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 788
score: 99.70104741115196
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 789
score: 99.75275390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . EMPTY ; } type = Name . Type ;
rank: 789
score: 99.73649088541667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 789
score: 99.73254846643519
patch: name = ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ;
rank: 789
score: 99.72408279718137
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 789
score: 99.72056749131944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ;
rank: 789
score: 99.71346182193396
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : is CaMeL Set = true ;
rank: 789
score: 99.700751953125
patch: name = String . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 790
score: 99.75274188701923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { name = n . get CaMeL String ( ) ; }
rank: 790
score: 99.73830942007211
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , scope ) ;
rank: 790
score: 99.73247821514423
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 790
score: 99.72446732954545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = n . get CaMeL First CaMeL Child ( ) ;
rank: 790
score: 99.72413917824075
patch: if ( ! Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 790
score: 99.72406190814394
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 790
score: 99.72053132233796
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 790
score: 99.71344992897727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 790
score: 99.70071176382211
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; type = Name . Type . OTHER ; }
rank: 791
score: 99.75272549715909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 791
score: 99.73830159505208
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 791
score: 99.73631940569196
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( break ;
rank: 791
score: 99.73246708622685
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } type = Name . Type . OTHER ;
rank: 791
score: 99.72412109375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 791
score: 99.72402635261194
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 791
score: 99.72052121629902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 791
score: 99.7134422019676
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , node ) ;
rank: 792
score: 99.75270948223039
patch: type = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 792
score: 99.73828125
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 792
score: 99.73238201530613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 792
score: 99.72429950420673
patch: is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 792
score: 99.72408040364583
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 792
score: 99.72372249681122
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Prop CaMeL Assign = true ; }
rank: 792
score: 99.72052001953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } else { type = Name . Type . OTHER ; }
rank: 792
score: 99.71342250279018
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 792
score: 99.70069280660377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 793
score: 99.752685546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type ;
rank: 793
score: 99.73822985197368
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 793
score: 99.73598392674181
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; else is CaMeL Prop CaMeL Assign = true ;
rank: 793
score: 99.7240323153409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 793
score: 99.72369939630681
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 793
score: 99.72046359080188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } }
rank: 794
score: 99.75265842013889
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = type . get CaMeL Name ( ) ;
rank: 794
score: 99.73813384433963
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 794
score: 99.73595319475446
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 794
score: 99.72390311104911
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 794
score: 99.72375036168981
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 794
score: 99.723671875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 794
score: 99.713359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 794
score: 99.700634765625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! is CaMeL Set ) { is CaMeL Set = true ;
rank: 795
score: 99.73593930844908
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; continue ;
rank: 795
score: 99.72364277742346
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } }
rank: 795
score: 99.72359664351852
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 795
score: 99.72044403698979
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 795
score: 99.7133280436198
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Prop CaMeL Assign = true ;
rank: 795
score: 99.70057091346153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = Name . Type . OTHER ;
rank: 796
score: 99.75261579241071
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } } } name = Name . Type . OTHER ;
rank: 796
score: 99.73588505497685
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 796
score: 99.73206018518519
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; }
rank: 796
score: 99.72372249681122
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 796
score: 99.72359582149622
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 796
score: 99.72349775598404
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 796
score: 99.72036307198661
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; is CaMeL Set = true ;
rank: 797
score: 99.75260707310268
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } else { name = n . get CaMeL String ( ) ; }
rank: 797
score: 99.73585728236607
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 797
score: 99.73205805759804
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 797
score: 99.7237215909091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 797
score: 99.72359375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 797
score: 99.72034630408653
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 797
score: 99.700546875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . TYPE ;
rank: 798
score: 99.7525709502551
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 798
score: 99.73793381911058
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 798
score: 99.73579181608606
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { break ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 798
score: 99.73197189031863
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 798
score: 99.72337740384616
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 798
score: 99.72032973345588
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 798
score: 99.71330043247768
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 798
score: 99.70046657986111
patch: break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 799
score: 99.75255408653847
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; break ; } type = Name . Type ;
rank: 799
score: 99.73788339120371
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 799
score: 99.73573133680556
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , parent . get CaMeL Next ( ) ) ;
rank: 799
score: 99.73196910511363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { } else { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 799
score: 99.72359664351852
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 799
score: 99.7231744260204
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( is CaMeL Set ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 799
score: 99.72305240271227
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; }
rank: 799
score: 99.72029143688725
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = $STRING$ ; }
rank: 799
score: 99.70044884314903
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 800
score: 99.72311448317308
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 800
score: 99.72023518880208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ;
rank: 800
score: 99.71326349431818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 801
score: 99.75238396139706
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 801
score: 99.73774775752315
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 801
score: 99.7357113486842
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 801
score: 99.73183186848958
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; }
rank: 801
score: 99.7230936686198
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 801
score: 99.72302698206019
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 801
score: 99.72021484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String CaMeL Value ( ) ;
rank: 801
score: 99.70037035672169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 802
score: 99.7523781105324
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . NULL ;
rank: 802
score: 99.73772483648256
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 802
score: 99.73567116477273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { type = Name . Type . OTHER ;
rank: 802
score: 99.73177987557871
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ;
rank: 802
score: 99.72348458426339
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ;
rank: 802
score: 99.72305961277173
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 802
score: 99.72302495216837
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 802
score: 99.72012271521227
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; }
rank: 802
score: 99.71319247159092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 802
score: 99.70036399147727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ;
rank: 803
score: 99.75237567608173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } name = Name . Type ;
rank: 803
score: 99.73566374231558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign |= true ; }
rank: 803
score: 99.7317578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } }
rank: 803
score: 99.72344098772321
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL Name ( ) ;
rank: 803
score: 99.72302827380952
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } break ;
rank: 803
score: 99.72010149274554
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = true ; } } return ;
rank: 803
score: 99.71318359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ;
rank: 803
score: 99.70027669270833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 804
score: 99.75232872596153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . NULL ;
rank: 804
score: 99.737607421875
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 804
score: 99.73173253676471
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 804
score: 99.72340611049107
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = n . get CaMeL First CaMeL Child ( ) ;
rank: 804
score: 99.7228495279948
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 804
score: 99.72008825231481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } } } name = name . Type . OTHER ;
rank: 804
score: 99.71315696022727
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 804
score: 99.70024857954546
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } } name = n . get CaMeL String ( ) ;
rank: 805
score: 99.752294921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 805
score: 99.72333635602679
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 805
score: 99.7229326356132
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; }
rank: 805
score: 99.7228267609127
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 805
score: 99.72005822523585
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type . OTHER ; }
rank: 805
score: 99.713134765625
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 806
score: 99.75227007949562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; name = name . Type . OTHER ;
rank: 806
score: 99.72331633391204
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 806
score: 99.72292342275944
patch: Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 806
score: 99.72271455223881
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 806
score: 99.72005208333333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . Type ;
rank: 806
score: 99.71308765076755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ;
rank: 806
score: 99.70014105902777
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 807
score: 99.75217692057292
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type ; type = Name . Type ;
rank: 807
score: 99.73749248798077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : case Token . DEC :
rank: 807
score: 99.73554503242924
patch: if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 807
score: 99.73169405955188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { return ; } else { name = n . get CaMeL String ( ) ; }
rank: 807
score: 99.72328404017857
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 807
score: 99.72278071384804
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 807
score: 99.72269381009616
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 807
score: 99.72003979952831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 807
score: 99.70010489004629
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 808
score: 99.7521503155048
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = name . Type ;
rank: 808
score: 99.73167509191177
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 808
score: 99.72272995283019
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { type = Name . Type . OTHER ; }
rank: 808
score: 99.72261186079545
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 808
score: 99.71998401988637
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . NONE ; } else { type = Name . Type . OTHER ; }
rank: 808
score: 99.7130191200658
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ; } break ;
rank: 808
score: 99.70010181183511
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 809
score: 99.73734537760417
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 809
score: 99.73553799715908
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 809
score: 99.72257361778846
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 809
score: 99.71996198381696
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } } }
rank: 809
score: 99.7130126953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , is CaMeL Prop CaMeL Assign , type ) ;
rank: 810
score: 99.75208629261364
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 810
score: 99.737294921875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : return ; }
rank: 810
score: 99.73162372295673
patch: if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 810
score: 99.7129971590909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 810
score: 99.7000262920673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 811
score: 99.73721500318878
patch: if ( ( parent != null ) || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 811
score: 99.73546697443182
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 811
score: 99.72315357349537
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ;
rank: 811
score: 99.7224609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 811
score: 99.71988075657895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } } }
rank: 811
score: 99.71298485471492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 811
score: 99.70001775568181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NULL ;
rank: 812
score: 99.7520419034091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ;
rank: 812
score: 99.73711121757076
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 812
score: 99.73140545280613
patch: } if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 812
score: 99.72314453125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 812
score: 99.72257333431604
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ;
rank: 812
score: 99.72239388992537
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; name = n . get CaMeL String ( ) ;
rank: 812
score: 99.71298104745371
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 812
score: 99.70000887784092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } return ;
rank: 813
score: 99.73704559948979
patch: if ( parent != null || ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 813
score: 99.73540790264423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : return ;
rank: 813
score: 99.73135489004629
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } is CaMeL Set = true ;
rank: 813
score: 99.72311789772728
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 813
score: 99.72252061631944
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Next ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 813
score: 99.72238991477273
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 813
score: 99.71986741286058
patch: is CaMeL Set = false ; break ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 813
score: 99.71294696514423
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 813
score: 99.699912109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 814
score: 99.751953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . OTHER ;
rank: 814
score: 99.73681640625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) is CaMeL Set = true ;
rank: 814
score: 99.73536900111607
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 814
score: 99.73133341471355
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else } name = n . get CaMeL String ( ) ;
rank: 814
score: 99.72226414535984
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 814
score: 99.71986328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL Parent ( ) ;
rank: 814
score: 99.71286446707589
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 814
score: 99.69990234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 815
score: 99.7517559344952
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 815
score: 99.73530353483606
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; } break ;
rank: 815
score: 99.73132102272727
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 815
score: 99.72244027944711
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 815
score: 99.72217906605114
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( parent , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 815
score: 99.71283428485577
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ;
rank: 815
score: 99.69987286261792
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { name = Name . Type . OTHER ;
rank: 816
score: 99.73676112912736
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 816
score: 99.7352627840909
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 816
score: 99.722958984375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 816
score: 99.72242115162037
patch: if ( Node CaMeL Util . is CaMeL Object CaMeL Lit ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 816
score: 99.72216796875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 816
score: 99.71980026533019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = Name . Type . EMPTY ;
rank: 816
score: 99.71280924479167
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 816
score: 99.69980837264151
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 817
score: 99.73675067608173
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 817
score: 99.7352450284091
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) [ 0 ] ;
rank: 817
score: 99.72291420990567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; is CaMeL Set = false ;
rank: 817
score: 99.72197848647389
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 817
score: 99.712763671875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 817
score: 99.69968710140306
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } is CaMeL Set = true ;
rank: 818
score: 99.7516620342548
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 818
score: 99.7364501953125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : case Token . DEC : is CaMeL Set = true ;
rank: 818
score: 99.735234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , parent , name ) ;
rank: 818
score: 99.73122510723039
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 818
score: 99.72225088443396
patch: Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 818
score: 99.72193862452652
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 818
score: 99.6995703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; }
rank: 819
score: 99.75158461084905
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } is CaMeL Set = false ;
rank: 819
score: 99.73641304347827
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 819
score: 99.73520132211539
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 819
score: 99.73119618941327
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ;
rank: 819
score: 99.72281605113636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Name . Type . OTHER ;
rank: 819
score: 99.72220952460107
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 819
score: 99.72193545386905
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 819
score: 99.71973577535377
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . NONE ; }
rank: 819
score: 99.71271558077831
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == scope ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 819
score: 99.69952277417453
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . TYPE ; }
rank: 820
score: 99.75158203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = name . Type ; }
rank: 820
score: 99.73636497641509
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Prop CaMeL Assign = true ; }
rank: 820
score: 99.73519784432871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ; break ;
rank: 820
score: 99.73097737630208
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ;
rank: 820
score: 99.72280649038461
patch: is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 820
score: 99.72215875589623
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 820
score: 99.72192007211538
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 820
score: 99.7196796123798
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = Name . Type ;
rank: 820
score: 99.69948097511575
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 821
score: 99.75158025568182
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 821
score: 99.73633851396276
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 821
score: 99.73514597039474
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ;
rank: 821
score: 99.72185794890873
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 821
score: 99.71962890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 821
score: 99.71254701967592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 821
score: 99.69945845170454
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 822
score: 99.75154775943396
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; break ; } } name = Name . Type . OTHER ;
rank: 822
score: 99.73630897671569
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 822
score: 99.72254136029412
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } } name = n . get CaMeL String ( ) ;
rank: 822
score: 99.721845703125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 822
score: 99.72164212740384
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 822
score: 99.71962376644737
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; break ; }
rank: 822
score: 99.69940863715277
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 823
score: 99.75146484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 823
score: 99.73020241477273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 823
score: 99.721640625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : return ;
rank: 823
score: 99.721513671875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 823
score: 99.71959758254717
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . EMPTY ; } } name = name . Type . OTHER ;
rank: 823
score: 99.71247209821429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope , parent ) ;
rank: 823
score: 99.69939055266204
patch: if ( n . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 824
score: 99.75144708806818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; break ; } } }
rank: 824
score: 99.736044921875
patch: if ( ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 824
score: 99.71959092881944
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 824
score: 99.69917353877315
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 825
score: 99.75144449869792
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; type = Name . Type ; }
rank: 825
score: 99.736005859375
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 825
score: 99.7349520596591
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 825
score: 99.72232491629464
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 825
score: 99.72115154655613
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 825
score: 99.71953667534723
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } }
rank: 825
score: 99.71239313089623
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 825
score: 99.69915301983173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } is CaMeL Set = true ;
rank: 826
score: 99.7513760653409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) , n . get CaMeL String ( ) , n . get CaMeL String ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 826
score: 99.73589963329081
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 826
score: 99.73492731813525
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign false = true ;
rank: 826
score: 99.7301171875
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 826
score: 99.7222900390625
patch: name = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 826
score: 99.7211162860577
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 826
score: 99.71946022727273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; } } }
rank: 826
score: 99.71225210336539
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 826
score: 99.69914899553571
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } is CaMeL Set = true ;
rank: 827
score: 99.751318359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; } name = Name . Type . OTHER ;
rank: 827
score: 99.73009801793981
patch: name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 827
score: 99.72109927771227
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 827
score: 99.72107303503788
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 827
score: 99.71942253832547
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 827
score: 99.71224862557871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) + $STRING$ ;
rank: 828
score: 99.75129045758929
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } type = Name . Type . OTHER ;
rank: 828
score: 99.735634765625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 828
score: 99.73474321209017
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 828
score: 99.73009765625
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 828
score: 99.72225516183036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 828
score: 99.7210532134434
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 828
score: 99.72098734841418
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; name = n . get CaMeL String ( ) ;
rank: 828
score: 99.71210753242924
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 829
score: 99.75126139322917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } type = Name . Type . OTHER ;
rank: 829
score: 99.73458158052884
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 829
score: 99.72225247896634
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; name = Name . Type . OTHER ;
rank: 829
score: 99.72096946022727
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 829
score: 99.71934883549528
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } }
rank: 829
score: 99.71204065393519
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL Value ( ) ;
rank: 829
score: 99.69910386029412
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 830
score: 99.75125122070312
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; } type = Name . Type ;
rank: 830
score: 99.73456280048077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ; is CaMeL Set = true ;
rank: 830
score: 99.72224456188725
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 830
score: 99.72091542119566
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ;
rank: 830
score: 99.720888671875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; }
rank: 830
score: 99.7193244485294
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = n . get CaMeL First CaMeL Child ( ) ;
rank: 831
score: 99.75123878761575
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = name . equals ( $STRING$ ) ;
rank: 831
score: 99.735595703125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; }
rank: 831
score: 99.73453776041667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; true ;
rank: 831
score: 99.72222222222223
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 831
score: 99.72090480638587
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 831
score: 99.72081502278645
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 831
score: 99.7192811129386
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 831
score: 99.7119891826923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Value ( ) ) ;
rank: 831
score: 99.6990068543632
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 832
score: 99.751220703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . NONE ;
rank: 832
score: 99.7355426290761
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 832
score: 99.7344815340909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else {
rank: 832
score: 99.72983579282408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; } }
rank: 832
score: 99.72219460227272
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 832
score: 99.72076761497641
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 832
score: 99.72065054086538
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } }
rank: 832
score: 99.71922923900463
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 833
score: 99.735517578125
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 833
score: 99.73439342570755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 833
score: 99.72967409620098
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 833
score: 99.72066627358491
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP :
rank: 833
score: 99.72055008162313
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 833
score: 99.7191495028409
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = name . Type . OTHER ; }
rank: 833
score: 99.69877005912163
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 834
score: 99.73426293545081
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ; }
rank: 834
score: 99.72959165219908
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { is CaMeL Set = true ; }
rank: 834
score: 99.72022501627605
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 834
score: 99.7191317471591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } if ( ! is CaMeL Set ) { type = Name . Type . OTHER ;
rank: 834
score: 99.71184035966981
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 834
score: 99.69876732016509
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 835
score: 99.75106698495371
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = name . Type ; } }
rank: 835
score: 99.73550016983695
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 835
score: 99.7341941550926
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 835
score: 99.72196867028062
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL Name ( ) ; }
rank: 835
score: 99.72054993872548
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 835
score: 99.7201815518466
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 835
score: 99.71912339154412
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } return ;
rank: 835
score: 99.7118389423077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 835
score: 99.698701171875
patch: } if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 836
score: 99.7354266826923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Prop CaMeL Assign = true ;
rank: 836
score: 99.73414467865567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 836
score: 99.72951211734694
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = n . get CaMeL String ( ) ; }
rank: 836
score: 99.72190163352273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL Type ( ) ;
rank: 836
score: 99.72052808077831
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 836
score: 99.7201617697011
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; break ;
rank: 836
score: 99.71893190870098
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 836
score: 99.71180350825472
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 836
score: 99.69860387731481
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { type = Name . Type . OTHER ;
rank: 837
score: 99.75092673788265
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ;
rank: 837
score: 99.73516007965686
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 837
score: 99.73411885245902
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 837
score: 99.72048828125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ;
rank: 837
score: 99.71998948317308
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . FUNCTION : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 837
score: 99.71892841045673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 837
score: 99.71176938657408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) + $NUMBER$ ) ;
rank: 838
score: 99.75081380208333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . TYPE ;
rank: 838
score: 99.72188765914352
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { if ( n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 838
score: 99.72036508413461
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) == n ) { is CaMeL Set = true ;
rank: 838
score: 99.71998197115384
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 838
score: 99.71890980113636
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 839
score: 99.75077763310185
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 839
score: 99.73511220894608
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } is CaMeL Set = true ; }
rank: 839
score: 99.72914341517857
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 839
score: 99.71989933894231
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 839
score: 99.69847693810097
patch: type = String . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 840
score: 99.75071747448979
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } name = n . get CaMeL Parent ( ) ;
rank: 840
score: 99.73494140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP :
rank: 840
score: 99.73406427556819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 840
score: 99.72900390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL First CaMeL Child ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 840
score: 99.72019641804245
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 840
score: 99.71976642219387
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ; }
rank: 840
score: 99.71878551136363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } return ; } }
rank: 840
score: 99.71142578125
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 840
score: 99.69841723172169
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = n . get CaMeL String ( ) ;
rank: 841
score: 99.75071022727273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { class = Name . Type . OTHER ; }
rank: 841
score: 99.73492431640625
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 841
score: 99.73405852141204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 841
score: 99.72898512620192
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 841
score: 99.72013192806604
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } is CaMeL Set = true ;
rank: 841
score: 99.7196974113806
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } is CaMeL Set = true ;
rank: 841
score: 99.71878551136363
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) ) { is CaMeL Set = false ; } } }
rank: 841
score: 99.69840494791667
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 842
score: 99.75068359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL String ( ) ;
rank: 842
score: 99.71991436298077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } type = Name . Type . OTHER ;
rank: 842
score: 99.71966097248135
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 842
score: 99.71857244318181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 842
score: 99.71141656839623
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 842
score: 99.6983984375
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 843
score: 99.73456433354592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : return ;
rank: 843
score: 99.72882453762755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = 0 ; } else { name = n . get CaMeL String ( ) ; }
rank: 843
score: 99.72153228183963
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ;
rank: 843
score: 99.71990593112245
patch: name = n . get CaMeL Next ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 843
score: 99.71965258049242
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 843
score: 99.71852805397727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 843
score: 99.71134127103366
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 843
score: 99.69836877893519
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; } else { name = Name . Type . OTHER ;
rank: 844
score: 99.73441485969387
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 844
score: 99.73388671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 844
score: 99.72876437205188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; } else { is CaMeL Set = true ; }
rank: 844
score: 99.71983711674528
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 844
score: 99.71965060763888
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 844
score: 99.71843039772727
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 844
score: 99.71130601415095
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 844
score: 99.69823297464623
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = Name . Type . OTHER ;
rank: 845
score: 99.75057983398438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } type = Name . Type . OTHER ;
rank: 845
score: 99.73423258463542
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 845
score: 99.728544921875
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 845
score: 99.71973613664215
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 845
score: 99.71943359375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 845
score: 99.71838831018519
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } }
rank: 845
score: 99.71116782134433
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 845
score: 99.69819431678921
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ; type = Name . Type ;
rank: 846
score: 99.75048828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } name = Name . Type ;
rank: 846
score: 99.73422639266305
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 846
score: 99.73381438078704
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if (
rank: 846
score: 99.72842594068878
patch: name = $STRING$ ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 846
score: 99.71961600825472
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Get = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 846
score: 99.71824293870192
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 846
score: 99.71098537071079
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 846
score: 99.69802856445312
patch: return ; } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 847
score: 99.75039672851562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; } }
rank: 847
score: 99.73371061731558
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 847
score: 99.71823408018868
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 847
score: 99.710908203125
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 847
score: 99.6979268391927
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type ;
rank: 848
score: 99.73418351715686
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 848
score: 99.73370261270492
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; }
rank: 848
score: 99.72809183372641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; }
rank: 848
score: 99.72116427951389
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 848
score: 99.71936974158653
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; return ; } is CaMeL Set = true ;
rank: 848
score: 99.71822185905613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL Next ( ) ;
rank: 849
score: 99.75037560096153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 849
score: 99.7337890625
patch: if ( ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 849
score: 99.73368252840909
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; }
rank: 849
score: 99.72114701704545
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 849
score: 99.7192715731534
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 849
score: 99.71922831632654
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . DEC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 849
score: 99.697890625
patch: if ( n != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 850
score: 99.75026633522727
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 850
score: 99.73367874710648
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 850
score: 99.73366651348039
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 850
score: 99.72784034242021
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 850
score: 99.71911057692307
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 850
score: 99.71809303977273
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ;
rank: 850
score: 99.710361328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 850
score: 99.69767731311275
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 851
score: 99.73362699468085
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 851
score: 99.73333440061475
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; break ; case Token . GETPROP : return ;
rank: 851
score: 99.72774969362744
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type . OTHER ; } }
rank: 851
score: 99.72107599431818
patch: name = n . get CaMeL String ( ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 851
score: 99.71912560096153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 851
score: 99.71909586588542
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; case Token . GETPROP : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 851
score: 99.71027688419117
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 851
score: 99.69749915081522
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } return ; }
rank: 852
score: 99.75015694754464
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = name . Type ; type = Name . Type ;
rank: 852
score: 99.73343599759616
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 852
score: 99.73331839139344
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) {
rank: 852
score: 99.72106481481481
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } return ;
rank: 852
score: 99.71903559846699
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { is CaMeL Set = true ;
rank: 852
score: 99.71894929846938
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 852
score: 99.7180808738426
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 852
score: 99.71021446814903
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 852
score: 99.6974346454327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 853
score: 99.75001842570755
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 853
score: 99.73340782752403
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 853
score: 99.73331351902173
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 853
score: 99.7276686065051
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 853
score: 99.72104936079545
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; }
rank: 853
score: 99.71893780048077
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Parent ( ) ) ;
rank: 853
score: 99.71887019230769
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 853
score: 99.71806640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 853
score: 99.71014873798077
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Parent ( ) ) ;
rank: 853
score: 99.69743208451705
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 854
score: 99.73328575721153
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 854
score: 99.73322610294117
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type , is CaMeL Prop CaMeL Assign , type ) ;
rank: 854
score: 99.72743733723958
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } }
rank: 854
score: 99.71876109730114
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 854
score: 99.71873121995192
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 854
score: 99.7180645282452
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 854
score: 99.70999778891509
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 854
score: 99.69732306985294
patch: } if ( parent == null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 855
score: 99.73320910395408
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; } }
rank: 855
score: 99.72096108490567
patch: name = Name . Type . OTHER ; ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 855
score: 99.71869365985577
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ;
rank: 855
score: 99.71868239182692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 855
score: 99.718046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 855
score: 99.69730631510417
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 856
score: 99.74978201729911
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 856
score: 99.73318780637256
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 856
score: 99.733134765625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 856
score: 99.71865985576923
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ; } }
rank: 856
score: 99.71860914963942
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 856
score: 99.7179706280048
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; } else { is CaMeL Set = true ;
rank: 856
score: 99.70974496694711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; type = Name . Type . OTHER ; }
rank: 856
score: 99.69725623497597
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . Type ;
rank: 857
score: 99.7496484375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } name = Name . Type ;
rank: 857
score: 99.7331865418632
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; }
rank: 857
score: 99.733095703125
patch: if ( parent != null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 857
score: 99.72728110259433
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 857
score: 99.72082067418981
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 857
score: 99.71859681372548
patch: if ( ! is CaMeL Global ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 857
score: 99.71852805397727
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 857
score: 99.7179116303066
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = name . Type . OTHER ; } } name = name . Type . OTHER ;
rank: 857
score: 99.70973115808823
patch: if ( ! is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 857
score: 99.69724684495192
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 858
score: 99.74957744891827
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NULL ; break ; } type = Name . Type ;
rank: 858
score: 99.73292151162791
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 858
score: 99.72045419730392
patch: is CaMeL Set = true ; } if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 858
score: 99.71842115752551
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 858
score: 99.71837133290816
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 858
score: 99.71784577546296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; } }
rank: 859
score: 99.72697418811275
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; } }
rank: 859
score: 99.71840444711539
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 859
score: 99.7181755514706
patch: Node parent = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 859
score: 99.717802734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( is CaMeL Set ) { is CaMeL Set = true ;
rank: 859
score: 99.70953714622641
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 859
score: 99.69717594068878
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; }
rank: 860
score: 99.74957386363636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NULL ; type = Name . Type ; type = Name . Type ;
rank: 860
score: 99.7328125
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 860
score: 99.726923828125
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type . OTHER ; }
rank: 860
score: 99.720107421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 860
score: 99.71790489783653
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 860
score: 99.71769973466981
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } }
rank: 860
score: 99.709384765625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 860
score: 99.69702646683673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 861
score: 99.73279057716837
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 861
score: 99.7198330965909
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } name = n . get CaMeL Name ( ) ; }
rank: 861
score: 99.71768188476562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 861
score: 99.70912679036458
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 861
score: 99.69693359375
patch: if ( n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 862
score: 99.74954659598214
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 862
score: 99.7325948079427
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 862
score: 99.72662228954081
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { type = n . get CaMeL String ( ) ; }
rank: 862
score: 99.71980116102431
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 862
score: 99.71823952414773
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 862
score: 99.71769684436275
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 862
score: 99.71758355034723
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } else { type = Name . Type . NONE ;
rank: 863
score: 99.73253676470588
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . ASSIGN : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 863
score: 99.72658128004808
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 863
score: 99.71975473257211
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; }
rank: 863
score: 99.71794359611742
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 863
score: 99.71764897365196
patch: Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 863
score: 99.71755859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } } }
rank: 863
score: 99.70895620492789
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 863
score: 99.69684709821429
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 864
score: 99.749267578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type ; break ; }
rank: 864
score: 99.7327820824795
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; return ; }
rank: 864
score: 99.73245059742646
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; }
rank: 864
score: 99.72648111979167
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else name = n . get CaMeL String ( ) ; }
rank: 864
score: 99.7195703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 864
score: 99.71794105643657
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } is CaMeL Set = true ;
rank: 864
score: 99.71753408394608
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 864
score: 99.71751051682692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type . OTHER ; } name = name . Type . OTHER ;
rank: 864
score: 99.708740234375
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 864
score: 99.696845703125
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 865
score: 99.74918005601415
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 865
score: 99.73267983490567
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( ! ( parent . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 865
score: 99.73238357843137
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } } name = n . get CaMeL Parent ( ) ;
rank: 865
score: 99.7264628507653
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ; }
rank: 865
score: 99.71946022727273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 865
score: 99.71729473039215
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 865
score: 99.70869877653301
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 866
score: 99.74917602539062
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 866
score: 99.73264793113425
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 866
score: 99.73234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 866
score: 99.72635904947917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; } }
rank: 866
score: 99.71772971082089
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 866
score: 99.71690219056373
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } is CaMeL Set = true ;
rank: 866
score: 99.7086932842548
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ ) ;
rank: 866
score: 99.6967022235577
patch: } } if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 867
score: 99.74917291135205
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 867
score: 99.73238431490384
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; is CaMeL Set = true ;
rank: 867
score: 99.73231226084184
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 867
score: 99.72629801432292
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else name = n . get CaMeL String ( ) ;
rank: 867
score: 99.7177203634511
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 867
score: 99.71744791666667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 867
score: 99.7086932842548
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ;
rank: 867
score: 99.69664588341347
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 868
score: 99.73219105113637
patch: try { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 868
score: 99.732109375
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ;
rank: 868
score: 99.726279296875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else
rank: 868
score: 99.71735749421296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( ! is CaMeL Set ) { type = Name . Type . OTHER ; }
rank: 868
score: 99.71718312733209
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 868
score: 99.71666463216145
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 868
score: 99.70835524338942
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) , scope ) ;
rank: 868
score: 99.69650390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; }
rank: 869
score: 99.749130859375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } else { type = Name . Type ;
rank: 869
score: 99.73195393880208
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 869
score: 99.7259745695153
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 869
score: 99.71731228298611
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 869
score: 99.71690204326923
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 869
score: 99.7080377072704
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 869
score: 99.69650390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 870
score: 99.73194376627605
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 870
score: 99.72579656862744
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 870
score: 99.71730638586956
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 870
score: 99.71674009811046
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 870
score: 99.71635646446079
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 870
score: 99.69642130533855
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 871
score: 99.74911499023438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } name = n . get CaMeL String ( ) ;
rank: 871
score: 99.73193359375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . FUNCTION : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 871
score: 99.71669330018939
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 871
score: 99.716103515625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 871
score: 99.69640395220588
patch: } is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 872
score: 99.74907871462264
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 872
score: 99.73182397959184
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n , n ) ;
rank: 872
score: 99.72563380821079
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; } }
rank: 872
score: 99.71906594669117
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else name = n . get CaMeL String ( ) ;
rank: 872
score: 99.71721281828704
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 872
score: 99.71666370738636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 872
score: 99.71598307291667
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; }
rank: 872
score: 99.6963887117347
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String ( ) ;
rank: 873
score: 99.73196176382211
patch: if ( ! is CaMeL Global ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 873
score: 99.731767578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : return ; }
rank: 873
score: 99.7255560427296
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = null ; } else { name = n . get CaMeL String ( ) ; }
rank: 873
score: 99.71648615056819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 873
score: 99.71576171875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP :
rank: 873
score: 99.7066141764323
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL Next ( ) ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 873
score: 99.69606983418367
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 874
score: 99.74905460438829
patch: if ( ! is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 874
score: 99.73193359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if ( is CaMeL Prop CaMeL Assign ) {
rank: 874
score: 99.71714048032408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; break ; } } }
rank: 874
score: 99.7163837139423
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 874
score: 99.71572875976562
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 874
score: 99.70643967848558
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 875
score: 99.74895109953704
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; continue ; } name = Name . Type . OTHER ;
rank: 875
score: 99.73187831662736
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : return ; }
rank: 875
score: 99.73141659007354
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 875
score: 99.72545369466145
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 875
score: 99.71886055424528
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 875
score: 99.71712552584134
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( ! is CaMeL Set ) { is CaMeL Set = true ; }
rank: 875
score: 99.71635960820896
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 875
score: 99.71558115433673
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 875
score: 99.70641150841347
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null || parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 875
score: 99.69562844669117
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 876
score: 99.74892397280092
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . NONE ;
rank: 876
score: 99.73139744178921
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 876
score: 99.71883451021634
patch: name = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Name . Type . OTHER ;
rank: 876
score: 99.71700032552083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } name = name . Type . OTHER ;
rank: 876
score: 99.71628639914773
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } }
rank: 876
score: 99.71496821384804
patch: if ( gramps == null ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 876
score: 99.69556603064903
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 877
score: 99.73126594387755
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { is CaMeL Set = true ;
rank: 877
score: 99.7251953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; type = Name . Type . OTHER ; }
rank: 877
score: 99.71694048713235
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 877
score: 99.71617337740385
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { type = Name . Type . OTHER ; } }
rank: 877
score: 99.71467752659575
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 877
score: 99.69553629557292
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 878
score: 99.74886971932871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } n . get CaMeL String ( ) ;
rank: 878
score: 99.73126105542453
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 878
score: 99.731201171875
patch: if ( ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 878
score: 99.72512637867646
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else {
rank: 878
score: 99.71874078714623
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else type = Name . Type . OTHER ;
rank: 878
score: 99.716923828125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = false ;
rank: 878
score: 99.71595052083333
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 878
score: 99.71456473214286
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 879
score: 99.7488544170673
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } name = name . Type . OTHER ;
rank: 879
score: 99.73100897606383
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 879
score: 99.72509765625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = n . get CaMeL String ( ) ; }
rank: 879
score: 99.71688842773438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 879
score: 99.71593128551136
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module ) ;
rank: 879
score: 99.70577566964286
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 879
score: 99.6952655498798
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 880
score: 99.7488425925926
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent != n . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 880
score: 99.7308858235677
patch: if ( ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 880
score: 99.71861436631944
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; is CaMeL Set = false ;
rank: 880
score: 99.71688842773438
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { type = Name . Type . OTHER ; }
rank: 880
score: 99.71586186835107
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 880
score: 99.71427235704788
patch: if ( gramps == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 880
score: 99.705546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ;
rank: 880
score: 99.6952128507653
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 881
score: 99.74880420918367
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } return ;
rank: 881
score: 99.73078762755102
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && ! is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 881
score: 99.71577658582089
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 881
score: 99.71412627551021
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . INC : is CaMeL Set = true ;
rank: 881
score: 99.695107421875
patch: } is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 882
score: 99.74872295673077
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 882
score: 99.73072783801021
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 882
score: 99.724853515625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; }
rank: 882
score: 99.71859628182871
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 882
score: 99.716767578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; } } name = Name . Type . OTHER ;
rank: 882
score: 99.71558726917614
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 882
score: 99.71396292892157
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 883
score: 99.730703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . FUNCTION :
rank: 883
score: 99.73000039859694
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 883
score: 99.72477213541667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } }
rank: 883
score: 99.71843352141204
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; name = n . get CaMeL String ( ) ; }
rank: 883
score: 99.71659757653062
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; break ; } } }
rank: 883
score: 99.71555989583334
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . ASSIGN : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 883
score: 99.70474567819149
patch: if ( is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 884
score: 99.7486239346591
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ;
rank: 884
score: 99.73066980698529
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 884
score: 99.72971754807692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 884
score: 99.7247314453125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; }
rank: 884
score: 99.71841264204545
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 884
score: 99.71657151442308
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name . Type . OTHER ;
rank: 884
score: 99.71539762126865
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 884
score: 99.7137376434949
patch: is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 884
score: 99.70458026960785
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 884
score: 99.6946901807598
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 885
score: 99.74861505681818
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = Name . Type ; break ; }
rank: 885
score: 99.73066804846938
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 885
score: 99.71835384728773
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 885
score: 99.71537358710107
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ; default : return ; }
rank: 885
score: 99.71370442708333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : is CaMeL Set = true ;
rank: 885
score: 99.70388671875
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 885
score: 99.69446818033855
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 886
score: 99.74857954545455
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } name = Name . Type . STRING ;
rank: 886
score: 99.73063497340425
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 886
score: 99.72943615522541
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 886
score: 99.71822415865384
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } else { name = n . get CaMeL String ( ) ;
rank: 886
score: 99.71638997395833
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . OTHER ;
rank: 886
score: 99.71535237630208
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 886
score: 99.70388454861111
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 887
score: 99.74857421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; }
rank: 887
score: 99.72943359375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 887
score: 99.72446852463942
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 887
score: 99.7180926983173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; is CaMeL Set = true ;
rank: 887
score: 99.71638831313776
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } } name = name . get CaMeL String ( ) ;
rank: 887
score: 99.71531016791045
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 887
score: 99.713349609375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC :
rank: 887
score: 99.703818359375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { if ( is CaMeL Set ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 887
score: 99.69417317708333
patch: } if ( n != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 888
score: 99.74857345281863
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } name = Name . Type ;
rank: 888
score: 99.73058500744048
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 888
score: 99.7293192545573
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; break ; }
rank: 888
score: 99.72441590507076
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 888
score: 99.7179542824074
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; return ; } type = Name . Type . OTHER ;
rank: 888
score: 99.71616617838542
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = name . to CaMeL String ( ) ;
rank: 888
score: 99.71525772758152
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 888
score: 99.71326700846355
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 888
score: 99.703759765625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( is CaMeL Set ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 888
score: 99.69415425145348
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 889
score: 99.74849529655613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = Name . Type . OTHER ; break ; }
rank: 889
score: 99.71789320459905
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 889
score: 99.71478544776119
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 889
score: 99.713193359375
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 889
score: 99.7033182779948
patch: if ( ! is CaMeL Set ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 889
score: 99.69403698979592
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL Parent ( ) ;
rank: 890
score: 99.730478515625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC :
rank: 890
score: 99.72902268629808
patch: if ( parent != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 890
score: 99.72437462439903
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { is CaMeL Set = true ;
rank: 890
score: 99.71783203125
patch: boolean is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 890
score: 99.71584065755208
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 890
score: 99.71453208111703
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 890
score: 99.712880859375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 891
score: 99.748388671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Type . OTHER ;
rank: 891
score: 99.73041680518617
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ;
rank: 891
score: 99.72879774305555
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 891
score: 99.715732421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; } }
rank: 891
score: 99.71452907986111
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ; }
rank: 891
score: 99.71281403186275
patch: Node parent = n . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 891
score: 99.703115234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } is CaMeL Set = true ;
rank: 892
score: 99.72869066922169
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; if (
rank: 892
score: 99.72417091836735
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = parent . get CaMeL String ( ) ; }
rank: 892
score: 99.71747504340277
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ;
rank: 892
score: 99.7156982421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { name = Name . Type . OTHER ; }
rank: 892
score: 99.71445164535984
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 892
score: 99.71240234375
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; }
rank: 892
score: 99.70275160845588
patch: if ( ! is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 893
score: 99.74835324754902
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type ; }
rank: 893
score: 99.73030952785327
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 893
score: 99.72406005859375
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 893
score: 99.71734494579081
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 893
score: 99.71561686197917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } else { is CaMeL Set = true ;
rank: 893
score: 99.7141621907552
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 893
score: 99.71230246803977
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 894
score: 99.74829621010639
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } }
rank: 894
score: 99.73029119318181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 894
score: 99.723955078125
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 894
score: 99.71724759615384
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; }
rank: 894
score: 99.71415571732955
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; }
rank: 894
score: 99.71220128676471
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 895
score: 99.7482277199074
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n . get CaMeL String ( ) ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ;
rank: 895
score: 99.73013305664062
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 895
score: 99.72817142674181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 895
score: 99.72393329326923
patch: is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 895
score: 99.71553371263587
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; } }
rank: 895
score: 99.7140595407197
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module ) ;
rank: 895
score: 99.712041015625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 895
score: 99.70187078737744
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP :
rank: 895
score: 99.69360830269608
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 896
score: 99.74812057783019
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } }
rank: 896
score: 99.73004860101744
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 896
score: 99.72389190051021
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 896
score: 99.7151409646739
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } is CaMeL Set = true ;
rank: 896
score: 99.71368963068181
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 896
score: 99.71201937806373
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 896
score: 99.70161228553921
patch: if ( is CaMeL Set ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 896
score: 99.69358317057292
patch: type = String . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 897
score: 99.72990234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ; } is CaMeL Set = true ;
rank: 897
score: 99.72801813089623
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent . get CaMeL Next ( ) ) ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 897
score: 99.72381472120098
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ; } }
rank: 897
score: 99.71167470894608
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 897
score: 99.70105759640957
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 897
score: 99.69342041015625
patch: } if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 898
score: 99.72987657912235
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 898
score: 99.72779296875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 898
score: 99.71482340494792
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = Name . Type . NONE ;
rank: 898
score: 99.71318213619404
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 898
score: 99.71144492953431
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( gramps == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 898
score: 99.69319661458333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } { name = n . get CaMeL String ( ) ;
rank: 899
score: 99.72764040389151
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ; is CaMeL Set = true ; }
rank: 899
score: 99.72373812806373
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else }
rank: 899
score: 99.71481258311171
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; break ; }
rank: 899
score: 99.71281664299242
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 899
score: 99.70065487132354
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . DEC :
rank: 899
score: 99.693046875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ;
rank: 900
score: 99.72752967247597
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , get CaMeL Next ( ) ) ;
rank: 900
score: 99.72353108723958
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ; }
rank: 900
score: 99.71664368872548
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 900
score: 99.71464269301471
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } is CaMeL Set = false ;
rank: 900
score: 99.71274517952128
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : case Token . DEC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 901
score: 99.74770326967592
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; break ; } type = Name . Type . OTHER ;
rank: 901
score: 99.72945149739583
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 901
score: 99.72747802734375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ; } break ;
rank: 901
score: 99.71634765625
patch: is CaMeL Set = true ; type = Name . Type . OTHER ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 901
score: 99.71272046638258
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 901
score: 99.71092753507654
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 901
score: 99.69287109375
patch: } is CaMeL Set = ; { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 902
score: 99.7476806640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . EMPTY ; break ; } type = Name . Type ;
rank: 902
score: 99.72934977213542
patch: if ( parent != null || ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 902
score: 99.71630859375
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; }
rank: 902
score: 99.71440529336735
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } } name = name . get CaMeL String ( ) ;
rank: 902
score: 99.71266771399456
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else { name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 902
score: 99.7108704810049
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 902
score: 99.699501953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } is CaMeL Set = true ;
rank: 903
score: 99.74761493389423
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; } is CaMeL Set = true ;
rank: 903
score: 99.72698629127359
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 903
score: 99.71434589460785
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 903
score: 99.71256996268657
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 903
score: 99.71085611979167
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 904
score: 99.74754920372597
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type . OTHER ;
rank: 904
score: 99.729287109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 904
score: 99.72696766954788
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 904
score: 99.72323843149039
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } } name = n . get CaMeL String ( ) ; }
rank: 904
score: 99.716171875
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = Name . Type . OTHER ;
rank: 904
score: 99.714091796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; break ; } } } name = name . get CaMeL String ( ) ;
rank: 904
score: 99.71255538712687
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 904
score: 99.69791666666667
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , name ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 904
score: 99.69259643554688
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 905
score: 99.7289740114796
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . INC : case Token . DEC : is CaMeL Set = true ;
rank: 905
score: 99.7230775122549
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; ; }
rank: 905
score: 99.71605966605392
patch: is CaMeL Set = false ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 905
score: 99.71408535571808
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; } } }
rank: 905
score: 99.71249852035984
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 905
score: 99.71054077148438
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 905
score: 99.6925048828125
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } return ;
rank: 906
score: 99.74753042367789
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type ; break ; } name = Name . Type . OTHER ;
rank: 906
score: 99.72878689236111
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 906
score: 99.7262082567402
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ;
rank: 906
score: 99.723017578125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else }
rank: 906
score: 99.71605506310097
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } return ;
rank: 906
score: 99.71404909620098
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL First CaMeL Child ( ) ; }
rank: 906
score: 99.71239172894022
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; break ;
rank: 906
score: 99.6923529177296
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 907
score: 99.747451171875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; break ; } type = Name . Type ;
rank: 907
score: 99.7287089029948
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 907
score: 99.72615733045212
patch: if ( parent != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 907
score: 99.72301307091347
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 907
score: 99.71398146609043
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } }
rank: 907
score: 99.71200706845238
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . GETPROP : return ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 907
score: 99.69179280598958
patch: } is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 908
score: 99.72842212433511
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 908
score: 99.72288161057692
patch: if ( is CaMeL Set && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 908
score: 99.71575458233173
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 908
score: 99.71397250306373
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL Last CaMeL Child ( ) ;
rank: 908
score: 99.7120015158582
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 908
score: 99.71015625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; }
rank: 908
score: 99.69713824728261
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 908
score: 99.69169802782012
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 909
score: 99.728369140625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : break ; }
rank: 909
score: 99.72545088098404
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ;
rank: 909
score: 99.71184847248135
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 909
score: 99.7098046875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ;
rank: 909
score: 99.69656808035714
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 910
score: 99.74727689302884
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = Name . Type . OTHER ;
rank: 910
score: 99.72832629145408
patch: if ( parent != null || ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 910
score: 99.72532684948979
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 910
score: 99.71531288296569
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ; }
rank: 910
score: 99.71372919497283
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { is CaMeL Set = true ; }
rank: 910
score: 99.71154415246212
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } }
rank: 910
score: 99.69140625
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } return ; }
rank: 911
score: 99.72831632653062
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 911
score: 99.72249661959134
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; type = Name . Type . OTHER ; }
rank: 911
score: 99.713720703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL Name ( ) ;
rank: 911
score: 99.71141849347015
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 911
score: 99.709150390625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 911
score: 99.69111560639881
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 912
score: 99.74716796875
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 912
score: 99.7224629720052
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; }
rank: 912
score: 99.71370442708333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 912
score: 99.71089504076087
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL String ( ) ; break ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 912
score: 99.69601004464286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } return ;
rank: 912
score: 99.69107055664062
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ;
rank: 913
score: 99.74708048502605
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } return ;
rank: 913
score: 99.7280985514323
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 913
score: 99.72243088942308
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 913
score: 99.71367785395408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } return ;
rank: 913
score: 99.71038362873135
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 913
score: 99.708916015625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; }
rank: 913
score: 99.69083658854167
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } return ;
rank: 914
score: 99.74693359375
patch: type = Name . Type ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 914
score: 99.7279079861111
patch: if ( parent != null ) { switch ( parent . get CaMeL First CaMeL Child ( ) ) { case Token . INC : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 914
score: 99.72459980085785
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 914
score: 99.71493949142157
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = n . get CaMeL String ( ) ; } name = n . get CaMeL String ( ) ;
rank: 914
score: 99.71367785395408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = $STRING$ ;
rank: 914
score: 99.71032344933712
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 914
score: 99.70881815159575
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 914
score: 99.69066365559895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 915
score: 99.74683634440105
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } }
rank: 915
score: 99.72761878188776
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { is CaMeL Set = true ; }
rank: 915
score: 99.72395463423295
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 915
score: 99.72227328431373
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 915
score: 99.71458466198979
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; return ; } name = n . get CaMeL String ( ) ; }
rank: 915
score: 99.713623046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { type = Name . Type . OTHER ; } else { type = Name . Type . OTHER ; } }
rank: 915
score: 99.71030346315298
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 915
score: 99.69031778971355
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 916
score: 99.74680739182692
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } is CaMeL Set = false ;
rank: 916
score: 99.72757892219387
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } is CaMeL Set = true ;
rank: 916
score: 99.72347962622548
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 916
score: 99.72196867028062
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 916
score: 99.71456204927884
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 916
score: 99.713623046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; break ; } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 916
score: 99.71021617542614
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 916
score: 99.70826690051021
patch: if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 916
score: 99.69541422526042
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n , scope ) ;
rank: 916
score: 99.69008246527778
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 917
score: 99.72757022938829
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 917
score: 99.72326129415761
patch: if ( parent == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 917
score: 99.71448692908653
patch: name = n . get CaMeL String ( ) ; is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 917
score: 99.71361806441327
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 917
score: 99.71019940043605
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 917
score: 99.70821126302083
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 917
score: 99.69507853190105
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent , n ) ;
rank: 917
score: 99.68971849524456
patch: } name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 918
score: 99.74661075367646
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; type = Name . Type ; }
rank: 918
score: 99.72755940755208
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 918
score: 99.72181640625
patch: } if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 918
score: 99.714462890625
patch: is CaMeL Set = false ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 918
score: 99.71357038909314
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL String CaMeL Value ( ) ; }
rank: 918
score: 99.71015832779256
patch: if ( ( parent != null ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 918
score: 99.68967692057292
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 919
score: 99.74646714154412
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ;
rank: 919
score: 99.72741168478261
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( gramps == null ) is CaMeL Set = true ;
rank: 919
score: 99.72220369664635
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 919
score: 99.71007025419776
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 919
score: 99.7075703938802
patch: if ( gramps == null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 919
score: 99.68963249362245
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ;
rank: 920
score: 99.72736922554348
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 920
score: 99.714013671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ; }
rank: 920
score: 99.71335856119792
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ; }
rank: 920
score: 99.70981518190298
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 920
score: 99.70654296875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . ASSIGN : is CaMeL Set = true ;
rank: 920
score: 99.68960259885205
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { name = n . get CaMeL String ( ) ;
rank: 921
score: 99.7461649576823
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } break ;
rank: 921
score: 99.72711181640625
patch: if ( parent == null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 921
score: 99.72189891581633
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Set = true ;
rank: 921
score: 99.7139453125
patch: is CaMeL Set = false ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } type = Name . Type . OTHER ;
rank: 921
score: 99.713291015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = n . get CaMeL Parent ( ) ; }
rank: 921
score: 99.70978338068181
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } break ;
rank: 921
score: 99.70628821331522
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 922
score: 99.74611328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ;
rank: 922
score: 99.72660405585107
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 922
score: 99.72151028380102
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else } name = n . get CaMeL String ( ) ;
rank: 922
score: 99.71294487847223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = name . Type . OTHER ;
rank: 922
score: 99.70963911576705
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 922
score: 99.69279679008152
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 922
score: 99.68946373980978
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 923
score: 99.72660319010417
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ; }
rank: 923
score: 99.72155522365196
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( type . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 923
score: 99.72147310697116
patch: name = $STRING$ ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 923
score: 99.71278889973958
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } } name = name . get CaMeL Parent ( ) ;
rank: 923
score: 99.70953824626865
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 923
score: 99.70600043402777
patch: Node parent = parent . get CaMeL Parent ( ) ; if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 924
score: 99.74533739276961
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ; type = Name . Type ;
rank: 924
score: 99.7265001662234
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 924
score: 99.72146371694711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } }
rank: 924
score: 99.70953776041667
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : return ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 924
score: 99.70584542410714
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 924
score: 99.69164021809895
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent , scope ) ;
rank: 924
score: 99.6892620584239
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 925
score: 99.7263895670573
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 925
score: 99.7212584252451
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } }
rank: 925
score: 99.720712890625
patch: if ( ! is CaMeL Global CaMeL Scope ( scope ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 925
score: 99.71245216836735
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ;
rank: 925
score: 99.70937712296195
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type , false ) ;
rank: 925
score: 99.70524088541667
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 925
score: 99.6891581217448
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; is CaMeL Set = true ;
rank: 926
score: 99.74506931678921
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } else
rank: 926
score: 99.72630726207386
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . INC : is CaMeL Set = true ; }
rank: 926
score: 99.720615234375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; break ; }
rank: 926
score: 99.71349318484043
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 926
score: 99.712431640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } }
rank: 926
score: 99.70933948863636
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } break ;
rank: 926
score: 99.7051493326823
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { is CaMeL Set = true ;
rank: 926
score: 99.69035538383152
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 926
score: 99.68905639648438
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 927
score: 99.7262674967448
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ;
rank: 927
score: 99.72104279891305
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 927
score: 99.72021484375
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 927
score: 99.71309168198529
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 927
score: 99.70922111742425
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) ) ;
rank: 927
score: 99.68895467122395
patch: type = Name . Type ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 928
score: 99.7449876434949
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } } name = n . get CaMeL String ( ) ;
rank: 928
score: 99.7257080078125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; case Token . INC : case Token . DEC :
rank: 928
score: 99.72099210778062
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ; }
rank: 928
score: 99.71982421875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( node == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 928
score: 99.71225689827128
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ;
rank: 928
score: 99.70905867866848
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 928
score: 99.70467295545212
patch: if ( ! is CaMeL Global ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 928
score: 99.6896007449128
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 929
score: 99.74483816964286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; continue ; } } name = n . get CaMeL String ( ) ;
rank: 929
score: 99.720986328125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else {
rank: 929
score: 99.71264169730392
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else } name = n . get CaMeL String ( ) ;
rank: 929
score: 99.70880946828358
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 929
score: 99.70461154513889
patch: Node parent = n . get CaMeL Parent ( ) ; if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 929
score: 99.68940118018617
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 930
score: 99.7445703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 930
score: 99.720693359375
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 930
score: 99.7125363817402
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ;
rank: 930
score: 99.71172472895408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } } name = Name . Type . OTHER ;
rank: 930
score: 99.70875133167614
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { name = n . get CaMeL String ( ) ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 930
score: 99.70417131696429
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 930
score: 99.6888671875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 930
score: 99.68843670280613
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 931
score: 99.7444993622449
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; break ; } } name = n . get CaMeL String ( ) ;
rank: 931
score: 99.72061631944445
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 931
score: 99.718154296875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 931
score: 99.70859375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 931
score: 99.68877180232558
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 931
score: 99.68815104166667
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ;
rank: 932
score: 99.7444921875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . NONE ; type = Name . Type ; }
rank: 932
score: 99.7249172044837
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 932
score: 99.72011496803977
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 932
score: 99.71747381036931
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 932
score: 99.71234375
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; name = Name . Type . OTHER ;
rank: 932
score: 99.7116015625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; } } name = name . Type . OTHER ;
rank: 932
score: 99.70849609375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 932
score: 99.70399767287235
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 932
score: 99.68797831632654
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 932
score: 99.68796750332447
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 933
score: 99.71635841836735
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 933
score: 99.71158161569149
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ;
rank: 933
score: 99.70843779151119
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; break ;
rank: 933
score: 99.7030626662234
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 933
score: 99.68790879360465
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . FUNCTION ;
rank: 933
score: 99.68784586588542
patch: if ( parent != null && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 934
score: 99.74427734375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } type = name . Type ;
rank: 934
score: 99.72480676529256
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; }
rank: 934
score: 99.71993582589286
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else name = n . get CaMeL String ( ) ;
rank: 934
score: 99.71604950573979
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 934
score: 99.71148681640625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } }
rank: 934
score: 99.70784748134328
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 934
score: 99.702734375
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 934
score: 99.6876932779948
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else return ; }
rank: 934
score: 99.68754069010417
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; default :
rank: 935
score: 99.7442267922794
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; } }
rank: 935
score: 99.7244847074468
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } is CaMeL Set = true ; }
rank: 935
score: 99.719580078125
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL First CaMeL Child ( ) ; } }
rank: 935
score: 99.71117146809895
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ;
rank: 935
score: 99.70768715018657
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } break ;
rank: 935
score: 99.70251995584239
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Prop CaMeL Assign = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 935
score: 99.68763224283855
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 935
score: 99.6868527434593
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 936
score: 99.72444315159575
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name ) ;
rank: 936
score: 99.71941764987245
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = type . get CaMeL String ( ) ; }
rank: 936
score: 99.71539306640625
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 936
score: 99.711591796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } return ;
rank: 936
score: 99.70719047214673
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type , false ) ;
rank: 936
score: 99.70249872622283
patch: Node parent = parent . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 936
score: 99.68763224283855
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 937
score: 99.74418849571079
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } type = Name . Type ; }
rank: 937
score: 99.71930803571429
patch: if ( parent != null && ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 937
score: 99.71509331597223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ; type = Name . Type . OTHER ;
rank: 937
score: 99.71155802408855
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 937
score: 99.71087890625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } } name = n . get CaMeL Next ( ) ;
rank: 937
score: 99.6871846516927
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { type = Name . Type . OTHER ;
rank: 938
score: 99.744150390625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ; break ;
rank: 938
score: 99.72411047894022
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL Parent ( ) ; if ( gramps == null ) is CaMeL Set = true ;
rank: 938
score: 99.7138141134511
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ;
rank: 938
score: 99.711513671875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) != n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 938
score: 99.710654296875
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 938
score: 99.70676160214552
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 938
score: 99.68717447916667
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 939
score: 99.74408318014706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } else { name = n . get CaMeL String ( ) ; }
rank: 939
score: 99.72358086768617
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 939
score: 99.71139705882354
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ; is CaMeL Set = true ;
rank: 939
score: 99.71055883290816
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { name = Name . Type . OTHER ;
rank: 939
score: 99.70635850694444
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . DEC : is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 939
score: 99.68709852430555
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 939
score: 99.68440047554348
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 940
score: 99.72345920138889
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) ) { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ;
rank: 940
score: 99.71805245535714
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else name = n . get CaMeL String ( ) ; } }
rank: 940
score: 99.70609841417911
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; } } name = n . get CaMeL Qualified CaMeL Name ( ) ; break ;
rank: 940
score: 99.70170084635417
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 940
score: 99.68704223632812
patch: return ; } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 940
score: 99.68408203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 941
score: 99.72336832682292
patch: if ( parent != null || Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 941
score: 99.71733940972223
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } }
rank: 941
score: 99.71283868018617
patch: if ( parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 941
score: 99.710234375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL Parent ( ) ;
rank: 941
score: 99.70541449652778
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 941
score: 99.7014872233073
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 941
score: 99.68666449652778
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 941
score: 99.68377036236703
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) || ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 942
score: 99.72327958776596
patch: if ( parent . get CaMeL First CaMeL Child ( ) != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 942
score: 99.7173360188802
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = n . get CaMeL String ( ) ; } } }
rank: 942
score: 99.71059782608695
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } name = n . get CaMeL String ( ) ;
rank: 942
score: 99.7095349900266
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } else { is CaMeL Set = false ;
rank: 942
score: 99.6866481050532
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 943
score: 99.74280802408855
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = name . Type ;
rank: 943
score: 99.71712571747449
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = name . get CaMeL String ( ) ; }
rank: 943
score: 99.71229516006098
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 943
score: 99.71048990885417
patch: is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 943
score: 99.70931321747449
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = name . get CaMeL String ( ) ; }
rank: 943
score: 99.70469916044776
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ; }
rank: 943
score: 99.70116148603724
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 943
score: 99.68221201795212
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 944
score: 99.71712571747449
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else } name = n . get CaMeL String ( ) ; }
rank: 944
score: 99.71025988520408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL Name ( ) ; }
rank: 944
score: 99.7091064453125
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . Type . OTHER ;
rank: 944
score: 99.70440764925372
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 944
score: 99.68629039417614
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 944
score: 99.68173615828805
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 945
score: 99.74229364809783
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } } } name = n . get CaMeL String ( ) ;
rank: 945
score: 99.72262508311171
patch: if ( parent != null && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 945
score: 99.70901489257812
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Parent ( ) ;
rank: 945
score: 99.70425460587687
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; }
rank: 945
score: 99.68584526909723
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 945
score: 99.68142832880434
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ;
rank: 946
score: 99.71632852359694
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } else name = n . get CaMeL String ( ) ; }
rank: 946
score: 99.70897420247395
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = false ; } } } name = name . get CaMeL String ( ) ;
rank: 946
score: 99.7009765625
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 946
score: 99.68559881981383
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 947
score: 99.74220742984694
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; type = Name . Type ; type = Name . Type ;
rank: 947
score: 99.72239507630815
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 947
score: 99.71629862882654
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = node . get CaMeL String ( ) ; }
rank: 947
score: 99.70884638247283
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 947
score: 99.70377361240672
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 947
score: 99.70079549153645
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } break ;
rank: 947
score: 99.68418422965117
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ;
rank: 948
score: 99.7420703125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Type . OTHER ; } name = Name . Type . OTHER ;
rank: 948
score: 99.72236772017045
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 948
score: 99.70880126953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } }
rank: 948
score: 99.703515625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 949
score: 99.74201809630102
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } } name = Name . Type ;
rank: 949
score: 99.71595982142857
patch: name = null ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 949
score: 99.7098612882653
patch: is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 949
score: 99.70850648271276
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 949
score: 99.6836468240489
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ;
rank: 949
score: 99.67995287024456
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( parent ) ;
rank: 950
score: 99.72205369015957
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 950
score: 99.71521775265957
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 950
score: 99.70847574869792
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = Name . Type . OTHER ; }
rank: 950
score: 99.70297195662313
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ;
rank: 950
score: 99.70032755533855
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null && Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 950
score: 99.68324973366477
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 950
score: 99.67945397418478
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 951
score: 99.72196018949468
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = parent . get CaMeL Parent ( ) ; if ( parent != null ) { is CaMeL Set = true ; }
rank: 951
score: 99.71487559442934
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; }
rank: 951
score: 99.709609375
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 951
score: 99.70839436848958
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; break ; } }
rank: 951
score: 99.70263671875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : case Token . DEC : is CaMeL Set = true ; type = Name . Type . OTHER ; break ;
rank: 951
score: 99.70032755533855
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } }
rank: 951
score: 99.68321265243902
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 951
score: 99.67722227515245
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 952
score: 99.71363366168478
patch: if ( parent != null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 952
score: 99.70827229817708
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; type = Name . Type . OTHER ; }
rank: 952
score: 99.6994098165761
patch: Node parent = n . get CaMeL Parent ( ) ; if ( gramps == null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 952
score: 99.68311585771276
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent && parent . get CaMeL First CaMeL Child ( ) == n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 952
score: 99.67719184027777
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 953
score: 99.740966796875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ; type = Name . Type ;
rank: 953
score: 99.72109587296195
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; Node rvalue = n . get CaMeL First CaMeL Child ( ) ; type = get CaMeL Value CaMeL Type ( n ) ;
rank: 953
score: 99.71348505434783
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } else { name = n . get CaMeL String ( ) ; }
rank: 953
score: 99.70815728635205
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 953
score: 99.69886067708333
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } }
rank: 953
score: 99.68287194293478
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ;
rank: 953
score: 99.67690972222222
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 954
score: 99.74066162109375
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } name = Name . Type . OTHER ; type = Name . Type ;
rank: 954
score: 99.72103063071647
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 954
score: 99.70796795280613
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ; break ;
rank: 954
score: 99.70145609841418
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 954
score: 99.69814918154762
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 954
score: 99.6827976392663
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 954
score: 99.67442737926136
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 955
score: 99.74055989583333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } name = name . equals ( $STRING$ ) ;
rank: 955
score: 99.72066824776786
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 955
score: 99.71276324728261
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else { name = n . get CaMeL String ( ) ; } }
rank: 955
score: 99.70775349934895
patch: name = $STRING$ ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 955
score: 99.70765177408855
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } name = Name . Type . OTHER ;
rank: 955
score: 99.70504760742188
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 955
score: 99.70141237173507
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 955
score: 99.69801927649456
patch: switch ( parent . get CaMeL Type ( ) ) { case Token . ASSIGN : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 955
score: 99.68108723958333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 956
score: 99.74024433992346
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ;
rank: 956
score: 99.72065118018617
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 956
score: 99.71251424153645
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } } name = n . get CaMeL String ( ) ; }
rank: 956
score: 99.70753987630208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } } }
rank: 956
score: 99.70496136209239
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; }
rank: 956
score: 99.70090553977273
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 956
score: 99.68032004616477
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . TYPE ;
rank: 957
score: 99.74014469068878
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type . OTHER ; break ; }
rank: 957
score: 99.72024601063829
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 957
score: 99.71231742527173
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; } else { name = n . get CaMeL String ( ) ; } }
rank: 957
score: 99.70735677083333
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 957
score: 99.70340281519397
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 957
score: 99.70086527979652
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . INC : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 957
score: 99.69575639204545
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 957
score: 99.67953889266305
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 957
score: 99.66699844751602
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 958
score: 99.71832830255681
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } break ; case Token . GETPROP : is CaMeL Set = true ;
rank: 958
score: 99.71153192934783
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = true ; }
rank: 958
score: 99.70697021484375
patch: name = null ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 958
score: 99.70078562266791
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module ) ; }
rank: 958
score: 99.69504123263889
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 958
score: 99.66666870117187
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 959
score: 99.71068318684895
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 959
score: 99.70714086415816
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 959
score: 99.70645141601562
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 959
score: 99.70005104758523
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ; break ;
rank: 959
score: 99.679443359375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 959
score: 99.66602957589286
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 960
score: 99.73900305706522
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = Name . Type . OTHER ;
rank: 960
score: 99.7103780110677
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = n . get CaMeL String ( ) ; }
rank: 960
score: 99.70689900716145
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = name . Type . OTHER ; } }
rank: 960
score: 99.70004955690298
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 960
score: 99.69482421875
patch: Node rvalue = n . get CaMeL First CaMeL Child ( ) ; if ( gramps == null ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 960
score: 99.67910368546195
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } }
rank: 960
score: 99.6654296875
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 961
score: 99.73846435546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } name = name ;
rank: 961
score: 99.71663765285327
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 961
score: 99.7066141764323
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 961
score: 99.70136837842988
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 961
score: 99.69851912313433
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 961
score: 99.69266669694767
patch: Node gramps = parent . get CaMeL Parent ( ) ; if ( gramps == null ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 961
score: 99.6645007011218
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 962
score: 99.73846435546875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type ; break ; } name = Name . Type . OTHER ;
rank: 962
score: 99.7166058084239
patch: if ( parent != null || ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 962
score: 99.7092922044837
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 962
score: 99.70627285571808
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 962
score: 99.69851183535448
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; is CaMeL Prop CaMeL Assign = true ; } is CaMeL Set = true ;
rank: 962
score: 99.67860478940217
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 962
score: 99.66287231445312
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; }
rank: 963
score: 99.73701985677083
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && node . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ;
rank: 963
score: 99.70830078125
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 963
score: 99.70602352061171
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 963
score: 99.6993408203125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 963
score: 99.69847539645522
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module ) ; }
rank: 963
score: 99.67661646792763
patch: } else { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 963
score: 99.65998391544117
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 964
score: 99.7365010579427
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = name . Type ; } type = Name . Type ;
rank: 964
score: 99.70586535395408
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 964
score: 99.7054951985677
patch: is CaMeL Set = true ; if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 964
score: 99.6984530362216
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; else if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 964
score: 99.67617652529762
patch: if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 964
score: 99.65758231026786
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 965
score: 99.73642985026042
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; } type = Name . Type ;
rank: 965
score: 99.71424967447916
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 965
score: 99.70569864908855
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL Parent ( ) ; }
rank: 965
score: 99.70536295572917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL Name ( ) ; }
rank: 965
score: 99.69083116319445
patch: if ( Node CaMeL Util . is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 965
score: 99.6756492820946
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 965
score: 99.6555240028783
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Class ( ) . get CaMeL Name ( ) + $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 966
score: 99.70541779891305
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = Name . Type . OTHER ;
rank: 966
score: 99.69793146306819
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Prop CaMeL Assign , false ) ;
rank: 966
score: 99.68996853298611
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 966
score: 99.67560369318181
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 967
score: 99.73422955452128
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; } } } }
rank: 967
score: 99.70498046875
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = Name . Type . OTHER ;
rank: 967
score: 99.7047627766927
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } } name = n . get CaMeL Type ( ) ;
rank: 967
score: 99.70341796875
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; }
rank: 967
score: 99.69766306322674
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : return ; case Token . GETPROP : is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 967
score: 99.6973192168445
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 967
score: 99.67531936233108
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 967
score: 99.63580496651785
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ;
rank: 968
score: 99.7127352627841
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; break ; case Token . GETPROP : is CaMeL Set = true ; }
rank: 968
score: 99.70444878472222
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; type = Name . Type . OTHER ; } }
rank: 968
score: 99.70438816236413
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 968
score: 99.69757634943181
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . NAME : is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 968
score: 99.69676414695945
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) . get CaMeL First CaMeL Child ( ) == n ) {
rank: 968
score: 99.68890935724431
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 968
score: 99.67454127261513
patch: } } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 968
score: 99.62784576416016
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 969
score: 99.73311183763587
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type ; break ;
rank: 969
score: 99.71156204578489
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 969
score: 99.70438639322917
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } name = n . get CaMeL Name ( ) ;
rank: 969
score: 99.69544677734375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 969
score: 99.69543740915698
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) instanceof n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 969
score: 99.67453215843024
patch: } if ( parent != null ) { if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 969
score: 99.62483461441532
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ;
rank: 970
score: 99.73042629076087
patch: if ( ! is CaMeL Set && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; } type = Name . Type . OTHER ;
rank: 970
score: 99.71073310319767
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 970
score: 99.70309383311171
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; break ; }
rank: 970
score: 99.69239443824405
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . FUNCTION : return ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 970
score: 99.62173461914062
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) + $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 971
score: 99.72948109019886
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } type = Name . Type ;
rank: 971
score: 99.70958362926136
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; case Token . DEC : is CaMeL Set = true ; }
rank: 971
score: 99.70361328125
patch: name = n . get CaMeL String ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; type = Name . Type . OTHER ;
rank: 971
score: 99.70250934103261
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; } else { is CaMeL Set = true ; } }
rank: 971
score: 99.69928533380681
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = false ; }
rank: 971
score: 99.69463556463069
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 971
score: 99.69139372996794
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; case Token . GETPROP : return ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 971
score: 99.68434320494185
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . GET ;
rank: 971
score: 99.67305611275337
patch: } else if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 971
score: 99.62074190027573
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 972
score: 99.70215953480114
patch: name = n . get CaMeL String ( ) ; if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } name = n . get CaMeL String ( ) ;
rank: 972
score: 99.6933349609375
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { name = n . get CaMeL String ( ) ; }
rank: 972
score: 99.69230513139205
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 972
score: 99.69074358258929
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; } } name = n . get CaMeL String ( ) ;
rank: 972
score: 99.67244276889535
patch: } } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ;
rank: 972
score: 99.61369772518383
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ + n . get CaMeL First CaMeL Child ( ) ) ;
rank: 973
score: 99.708984375
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 973
score: 99.70155400815217
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } else { is CaMeL Set = false ; }
rank: 973
score: 99.69947916666666
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } type = Name . Type . OTHER ;
rank: 973
score: 99.68603515625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; case Token . INC : return ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 973
score: 99.66822608741555
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 973
score: 99.6127693422379
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ; }
rank: 974
score: 99.7286709872159
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; break ; }
rank: 974
score: 99.70854259672619
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 974
score: 99.70099526263297
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } else { is CaMeL Set = false ; } } }
rank: 974
score: 99.69868800951087
patch: name = n . get CaMeL String ( ) ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 974
score: 99.6797410918445
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 974
score: 99.66545024671052
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , n ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 974
score: 99.6535842483108
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Prop CaMeL Assign = true ;
rank: 974
score: 99.61189270019531
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 975
score: 99.7214105068109
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } }
rank: 975
score: 99.70680414244185
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 975
score: 99.69841974431819
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } } return ;
rank: 975
score: 99.68342670641448
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ;
rank: 975
score: 99.68336212940706
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) == n ) {
rank: 975
score: 99.6768798828125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ) ;
rank: 975
score: 99.66419741981908
patch: return ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 975
score: 99.63779994419643
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 975
score: 99.6109260110294
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 976
score: 99.71998232886905
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type ; }
rank: 976
score: 99.70655487804878
patch: if ( is CaMeL Global CaMeL Name CaMeL Reference ( name ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 976
score: 99.69538680366848
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 976
score: 99.69099745639535
patch: if ( ( parent . get CaMeL First CaMeL Child ( ) == n ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ; break ; } } }
rank: 976
score: 99.68257759712837
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } }
rank: 976
score: 99.67388305664062
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } else { handle CaMeL Set CaMeL From CaMeL Global ( module , scope , n , parent , name , is CaMeL Set ) ;
rank: 976
score: 99.605859375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 977
score: 99.69533372961956
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; } } } name = n . get CaMeL String ( ) ; name = n . get CaMeL String ( ) ;
rank: 977
score: 99.67862675107759
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 977
score: 99.66859837582237
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 977
score: 99.6589291221217
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent , parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 977
score: 99.61978912353516
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { return ; }
rank: 977
score: 99.59860026041666
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) + $STRING$ + n . get CaMeL Name ( ) ) ;
rank: 978
score: 99.71560829564145
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; }
rank: 978
score: 99.70371344150641
patch: if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ; break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 978
score: 99.6678466796875
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) || parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ;
rank: 978
score: 99.65619721283784
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) { is CaMeL Set = true ;
rank: 978
score: 99.64830186631944
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : return ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 978
score: 99.59545084635417
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) + $STRING$ + n . get CaMeL String ( ) ) ;
rank: 979
score: 99.70032958984375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 979
score: 99.68990734011628
patch: is CaMeL Set = true ; } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 979
score: 99.68255293996711
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } }
rank: 979
score: 99.67342703683036
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 979
score: 99.66189822635135
patch: if ( ! Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 979
score: 99.652099609375
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ;
rank: 979
score: 99.63724517822266
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 980
score: 99.70005133213141
patch: if ( is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 980
score: 99.68056640625
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; break ; } } }
rank: 980
score: 99.66115315755208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = false ; }
rank: 980
score: 99.5915283203125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ + n . get CaMeL String ( ) ) ;
rank: 980
score: 99.51926491477273
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 981
score: 99.69682042738971
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 981
score: 99.68011765252976
patch: is CaMeL Set = true ; if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 981
score: 99.67452298677884
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; } } return ;
rank: 981
score: 99.63918050130208
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; ;
rank: 981
score: 99.55481896033653
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) + $STRING$ + n ) ;
rank: 981
score: 99.5040867017663
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; }
rank: 982
score: 99.63606209590517
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 982
score: 99.49962361653645
patch: is CaMeL Set = true ; type = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 983
score: 99.63058564157197
patch: if ( parent != null || Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 983
score: 99.60723666487068
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 983
score: 99.52026977539063
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 983
score: 99.48691628196023
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent . get CaMeL First CaMeL Child ( ) ) ;
rank: 984
score: 99.67229147518383
patch: if ( parent != null || parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 984
score: 99.62511444091797
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope , n , parent , name , is CaMeL Prop CaMeL Assign , type ) ) {
rank: 984
score: 99.62095731847427
patch: if ( n . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 984
score: 99.59536946614584
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 984
score: 99.5148417154948
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) + $STRING$ + n ) ;
rank: 984
score: 99.46894182477679
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 985
score: 99.67148724724265
patch: if ( parent != null && parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 985
score: 99.66132555509868
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 985
score: 99.63212733114919
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 985
score: 99.62452746975806
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ( parent . get CaMeL First CaMeL Child ( ) == n ) ) {
rank: 985
score: 99.55673452524039
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Class ( ) . get CaMeL Name ( ) ) ;
rank: 985
score: 99.51295055042614
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Qualified CaMeL Name ( ) ) ;
rank: 985
score: 99.47399371603261
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 985
score: 99.46875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent . get CaMeL Type ( ) ) ;
rank: 986
score: 99.62446812220982
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) && parent . get CaMeL First CaMeL Child ( ) == n )
rank: 986
score: 99.551259765625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } name = n . get CaMeL String ( ) ;
rank: 986
score: 99.47260131835938
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Parent ( ) ) ;
rank: 986
score: 99.40691460503473
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 986
score: 99.36803481158088
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 987
score: 99.65507654989919
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ; }
rank: 987
score: 99.615869140625
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 987
score: 99.61361202116936
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n . get CaMeL First CaMeL Child ( ) ) { is CaMeL Set = true ; }
rank: 987
score: 99.54427396334134
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } } name = n . get CaMeL String ( ) ;
rank: 987
score: 99.50351969401042
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ; }
rank: 987
score: 99.45807495117188
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Type ( ) ) ;
rank: 987
score: 99.3917172080592
patch: is CaMeL Set = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ; }
rank: 987
score: 99.3077163696289
patch: name = Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ;
rank: 988
score: 99.61341203962054
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n && parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 988
score: 99.51884321732955
patch: if ( n . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 988
score: 99.46517333984374
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Value ( ) ) ;
rank: 988
score: 99.44842819940476
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 988
score: 99.4405517578125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Name ( ) ) ;
rank: 988
score: 99.30311686197916
patch: is CaMeL Set = false ; type = Name . Type . OTHER ;
rank: 988
score: 99.29313151041667
patch: is CaMeL Set = n . get CaMeL First CaMeL Child ( ) ;
rank: 989
score: 99.62991536458334
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 989
score: 99.60555826822916
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && ! parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 989
score: 99.3997802734375
patch: name = get CaMeL Value CaMeL Type ( n . get CaMeL Next ( ) ) ;
rank: 989
score: 99.296630859375
patch: is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 989
score: 99.2390380859375
patch: name = Name . Type . OTHER ; type = Name . Type ;
rank: 990
score: 99.62936197916666
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . Type . SET ;
rank: 990
score: 99.51503057065217
patch: } if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ;
rank: 990
score: 99.35272623697917
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; }
rank: 990
score: 99.23467610677083
patch: is CaMeL Set = node . get CaMeL First CaMeL Child ( ) ;
rank: 990
score: 99.13698508522727
patch: name = n . get CaMeL String ( ) ;
rank: 991
score: 99.6265380859375
patch: if ( parent . get CaMeL First CaMeL Child ( ) == null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 991
score: 99.60333251953125
patch: if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) && parent . get CaMeL First CaMeL Child ( ) != n )
rank: 991
score: 99.50865681966145
patch: } if ( Node CaMeL Util . is CaMeL Assignment CaMeL Op ( parent ) ) { is CaMeL Set = true ;
rank: 991
score: 99.4638671875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ; default : return ;
rank: 991
score: 99.10028076171875
patch: } name = n . get CaMeL String ( ) ;
rank: 991
score: 99.03972710503473
patch: name = Name . Type . OTHER ;
rank: 992
score: 99.62221854073661
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) { is CaMeL Set = true ; type = Name . OTHER ;
rank: 992
score: 99.27430943080357
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ;
rank: 992
score: 99.09976196289062
patch: name = n . get CaMeL String ( ) ; }
rank: 992
score: 98.98936157226562
patch: } name = Name . Type . OTHER ;
rank: 993
score: 99.46794128417969
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n ) {
rank: 993
score: 99.24965122767857
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent ) ;
rank: 993
score: 98.98621961805556
patch: type = Name . Type . OTHER ;
rank: 994
score: 99.39518229166667
patch: if ( ! is CaMeL Global CaMeL Name CaMeL Reference ( name , scope ) ) {
rank: 994
score: 99.36565085018383
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } break ;
rank: 994
score: 99.08279418945312
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 994
score: 99.05851606889205
patch: type = n . get CaMeL String ( ) ;
rank: 994
score: 98.98661665482955
patch: name = name . to CaMeL String ( ) ;
rank: 994
score: 98.94017944335937
patch: name = Name . Type . OTHER ; }
rank: 995
score: 99.38401884191177
patch: if ( Node CaMeL Util . is CaMeL Function CaMeL Expression ( parent ) ) {
rank: 995
score: 99.34228515625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ; } }
rank: 995
score: 99.1964111328125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + type ) ;
rank: 995
score: 99.03425736860795
patch: name = n . get CaMeL Name ( ) ;
rank: 995
score: 98.93551296657986
patch: name = name . Type . OTHER ;
rank: 996
score: 99.52131791548295
patch: if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . OTHER ;
rank: 996
score: 99.32904052734375
patch: if ( parent . get CaMeL First CaMeL Child ( ) != n ) {
rank: 996
score: 99.18740408761161
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + scope ) ;
rank: 996
score: 98.83028157552083
patch: name = Name . Type . NONE ;
rank: 996
score: 98.81791178385417
patch: name = Name . Type . FUNCTION ;
rank: 996
score: 98.76999918619792
patch: type = Name . Type ; break ;
rank: 997
score: 99.49901234019886
patch: if ( parent != null ) { is CaMeL Set = true ; type = Name . Type . FUNCTION ;
rank: 997
score: 99.28946940104167
patch: if ( parent . get CaMeL First CaMeL Child ( ) == n )
rank: 997
score: 98.82777404785156
patch: is CaMeL Set = true ; }
rank: 997
score: 98.81438337053571
patch: is CaMeL Set = false ;
rank: 997
score: 98.76628766741071
patch: type = Name . Type ;
rank: 997
score: 98.71176583426339
patch: is CaMeL Set = true ;
rank: 998
score: 99.17560686383929
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , n ) ;
rank: 998
score: 98.64108276367188
patch: type = Name . Type ; }
rank: 999
score: 98.7828369140625
patch: is CaMeL Set = false ; }
rank: 999
score: 98.55974469866071
patch: name = Name . Type ;
rank: 999
score: 97.47734832763672
patch: return ; }
rank: 1000
score: 98.66703287760417
patch: throw new Illegal CaMeL State CaMeL Exception (
rank: 1000
score: 96.98240152994792
patch: return ;
rank: 1000
score: 95.17608642578125
patch: }
