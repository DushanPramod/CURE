rank: 1
score: 99.80526733398438
patch: ++ iter ;
rank: 1
score: 99.65126255580357
patch: ++ iter ; ++ iter ;
rank: 1
score: 99.4469502766927
patch: int current CaMeL Point = current CaMeL Point . length ;
rank: 1
score: 99.42038981119792
patch: int n CaMeL C = current CaMeL Point . length ;
rank: 1
score: 99.41358360877403
patch: final int n CaMeL C = current CaMeL Point . length ;
rank: 1
score: 99.2716776529948
patch: if ( ! iter . is CaMeL Empty ( ) ;
rank: 2
score: 99.46045939127605
patch: ++ n CaMeL C ;
rank: 2
score: 99.41372884114584
patch: final double [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 2
score: 99.41005452473958
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 2
score: 99.40071614583333
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ;
rank: 2
score: 99.36778259277344
patch: ++ iter ; ++ iter ; ;
rank: 2
score: 99.24434037642045
patch: n CaMeL C = current CaMeL Point . length ;
rank: 3
score: 99.4367342862216
patch: ++ n CaMeL C ; ++ n CaMeL C ;
rank: 3
score: 99.40851299579327
patch: final double weight CaMeL Matrix = current CaMeL Point . length ;
rank: 3
score: 99.31455993652344
patch: ++ iter ; ; ++ iter ;
rank: 3
score: 99.21756685697116
patch: if ( ! iter . is CaMeL Empty ( ) ) {
rank: 3
score: 99.2101821899414
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 3
score: 99.13466099330357
patch: else { ++ iter ; }
rank: 4
score: 99.394482421875
patch: int iter = current CaMeL Point . length ;
rank: 4
score: 99.39163643973214
patch: double [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 4
score: 99.3645770733173
patch: final int n CaMeL R = current CaMeL Point . length ;
rank: 4
score: 99.29991997612848
patch: ++ n CaMeL C ; ++ iter ;
rank: 4
score: 99.2444580078125
patch: ++ iter ; ++ iter ; ++ iter ;
rank: 4
score: 99.24293736049107
patch: ++ iter ; ++ 1 ;
rank: 4
score: 99.2120361328125
patch: final int iter = current CaMeL Point . length ;
rank: 4
score: 99.20475260416667
patch: long n CaMeL C = current CaMeL Point . length ;
rank: 4
score: 99.06740897042411
patch: if ( iter == null ;
rank: 5
score: 99.39242553710938
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 5
score: 99.2944844563802
patch: ++ n CaMeL C ; ++ n CaMeL C ; ;
rank: 5
score: 99.23507690429688
patch: ++ iter ; while ++ iter ;
rank: 5
score: 99.18955485026042
patch: if ( ! iter . is CaMeL Empty ( ) )
rank: 6
score: 99.39028930664062
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 6
score: 99.35747821514423
patch: final double n CaMeL C = current CaMeL Point . length ;
rank: 6
score: 99.24441092354911
patch: ++ n CaMeL C ; ;
rank: 6
score: 99.22358703613281
patch: ++ iter ; if ++ iter ;
rank: 6
score: 99.18721516927083
patch: int n CaMeL R = current CaMeL Point . length ;
rank: 6
score: 99.16686248779297
patch: ++ iter ; ++ iter ; }
rank: 6
score: 99.03936767578125
patch: else { return iter ; }
rank: 7
score: 99.36229529747597
patch: final double current CaMeL Point = current CaMeL Point . length ;
rank: 7
score: 99.32925415039062
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point . length ;
rank: 7
score: 99.24110412597656
patch: ++ iter ; current = iter ;
rank: 7
score: 99.21672821044922
patch: ++ iter ; ++ - iter ;
rank: 7
score: 99.18584594726562
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 7
score: 99.13043975830078
patch: ++ iter ; ++ iter ; else
rank: 7
score: 99.02698863636364
patch: if ( ! iter . is CaMeL Empty ++ )
rank: 8
score: 99.38515061598558
patch: final int current CaMeL Point = current CaMeL Point . length ;
rank: 8
score: 99.23197428385417
patch: ++ n CaMeL C ; ; ++ n CaMeL C ;
rank: 8
score: 99.20094517299107
patch: ++ 0 ; ++ iter ;
rank: 8
score: 99.1583760579427
patch: long current CaMeL Point = current CaMeL Point . length ;
rank: 8
score: 99.10812717013889
patch: ++ iter ; ++ iter ; iter ;
rank: 9
score: 99.37744140625
patch: current = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 9
score: 99.33833530970982
patch: int [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 9
score: 99.1942138671875
patch: ++ 1 ; ++ iter ;
rank: 9
score: 99.10452270507812
patch: ++ new ++ ; ++ iter ;
rank: 9
score: 99.00869750976562
patch: else { ++ * iter ; }
rank: 10
score: 99.33760579427083
patch: double current CaMeL Point = current CaMeL Point . length ;
rank: 10
score: 99.1910400390625
patch: ++ iter ; current = current CaMeL Point . length ;
rank: 10
score: 99.12640850360577
patch: [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 10
score: 99.10428619384766
patch: ++ iter ; ++ ++ iter ;
rank: 10
score: 99.0695088704427
patch: int iter = current CaMeL Point . length ( ) ;
rank: 10
score: 99.00341796875
patch: if ( iter == null ; return iter ;
rank: 11
score: 99.30508188100961
patch: final double [ ] current = current CaMeL Point . length ;
rank: 11
score: 99.29615196814903
patch: final double n CaMeL R = current CaMeL Point . length ;
rank: 11
score: 99.12266138980263
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ;
rank: 11
score: 99.089599609375
patch: ++ ++ iter ; ++ iter ;
rank: 11
score: 99.06721714564732
patch: ++ iter ; current CaMeL Point = current CaMeL Point . length ;
rank: 11
score: 99.00228881835938
patch: else { if ++ iter ; }
rank: 12
score: 99.37042236328125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point ( ) ;
rank: 12
score: 99.30124080882354
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 12
score: 99.29461669921875
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 12
score: 99.1618881225586
patch: int iter = current CaMeL Point . length - current CaMeL Point . length ;
rank: 12
score: 99.11313883463542
patch: i = current CaMeL Point . length ;
rank: 12
score: 99.06581624348958
patch: if ( current CaMeL Point . length > 0 ) {
rank: 12
score: 98.98621622721355
patch: if ( ! iter . is CaMeL Empty ++ ) {
rank: 13
score: 99.3587710731908
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ;
rank: 13
score: 99.32882690429688
patch: boolean converged = false ;
rank: 13
score: 99.29685621995192
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 13
score: 99.29359266493056
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 13
score: 99.1086934407552
patch: n CaMeL C = current CaMeL Point . length ; }
rank: 13
score: 99.06875610351562
patch: } ++ iter ; ++ iter ;
rank: 13
score: 98.96795043945312
patch: if ( . is CaMeL Empty ( ) ;
rank: 14
score: 99.32249348958334
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . length ;
rank: 14
score: 99.13516671316964
patch: ++ n CaMeL C ; iter = current CaMeL Point . length ;
rank: 14
score: 99.12959798177083
patch: ++ iter ; try { ++ iter ;
rank: 14
score: 99.0989990234375
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ;
rank: 14
score: 99.05185953776042
patch: ++ iter ; ++ n CaMeL C ;
rank: 14
score: 98.96071555397727
patch: if ( ! iter . is CaMeL Empty ++ ;
rank: 15
score: 99.13329139122597
patch: ++ iter ; int iter = current CaMeL Point . length ;
rank: 15
score: 99.12286376953125
patch: ++ iter ; while iter ;
rank: 15
score: 99.07729666573661
patch: check CaMeL Parameters ( current CaMeL Point , current CaMeL Point ) ;
rank: 15
score: 99.04732259114583
patch: ++ iter ; iter = current CaMeL Point . length ;
rank: 15
score: 99.04243469238281
patch: ++ iter ; } ++ iter ;
rank: 15
score: 98.95616912841797
patch: if ( ! iter == null ;
rank: 16
score: 99.2855733235677
patch: double [ ] current = current CaMeL Point . length ;
rank: 16
score: 99.26424407958984
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 16
score: 99.11817932128906
patch: ++ iter ; ++ - 1 ;
rank: 16
score: 99.07544962565105
patch: Iterator n CaMeL C = current CaMeL Point . length ;
rank: 16
score: 99.03919328962054
patch: current = current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 16
score: 99.03281860351562
patch: ++ iter ; ;
rank: 16
score: 98.9536844889323
patch: else { ++ iter ;
rank: 17
score: 99.34297688802083
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Point ( ) ;
rank: 17
score: 99.29612103630515
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 17
score: 99.27350408380681
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 17
score: 99.12946428571429
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 17
score: 99.11689758300781
patch: else ++ iter ; ++ iter ;
rank: 17
score: 99.06974283854167
patch: - n CaMeL C = current CaMeL Point . length ;
rank: 17
score: 99.03420785757211
patch: try { current CaMeL Point = current CaMeL Point . length ;
rank: 17
score: 98.94552612304688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 18
score: 99.2721455891927
patch: current = current CaMeL Point [ n CaMeL C ] ;
rank: 18
score: 99.25346544053819
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 18
score: 99.12862356085526
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair = new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 18
score: 99.10018920898438
patch: if ++ iter ; ++ iter ;
rank: 18
score: 99.06899007161458
patch: int n CaMeL C = target CaMeL Values . length ;
rank: 18
score: 99.03262532552084
patch: current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 18
score: 99.00300598144531
patch: iter ; ++ ; ++ iter ;
rank: 18
score: 98.93354034423828
patch: if ( iter ; ++ iter ;
rank: 19
score: 99.33468627929688
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point . length ;
rank: 19
score: 99.28368268694196
patch: residuals CaMeL Weights [ iter ] = current CaMeL Point . length ;
rank: 19
score: 99.26826404389881
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 19
score: 99.11867268880208
patch: int n CaMeL R = current CaMeL Point . length - current CaMeL Point . length ;
rank: 19
score: 99.07539876302083
patch: ++ iter ; try ; ++ iter ;
rank: 19
score: 99.06782836914063
patch: check CaMeL Parameters ( current CaMeL Point ) ;
rank: 19
score: 99.03009033203125
patch: iter = current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 19
score: 98.99974714006696
patch: ++ iter ; ++ start ;
rank: 19
score: 98.9288330078125
patch: if ( iter == null ; return iter ; }
rank: 20
score: 99.2487460049716
patch: final int current CaMeL Point = current CaMeL Point ;
rank: 20
score: 99.11438666449652
patch: ++ iter ; this . ++ iter ;
rank: 20
score: 99.06276157924107
patch: return new Block CaMeL Real CaMeL Matrix ( current CaMeL Point ) ;
rank: 20
score: 99.0296630859375
patch: if ( iter < current CaMeL Point . length ) {
rank: 20
score: 98.99147542317708
patch: ++ iter ; ++ iter ; / /
rank: 20
score: 98.91995239257812
patch: if ( ! iter != null ;
rank: 21
score: 99.33323669433594
patch: current = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 21
score: 99.2637249490489
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 21
score: 99.24809434678819
patch: int iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 21
score: 99.24400983537946
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ;
rank: 21
score: 99.06647491455078
patch: ++ iter ; else ++ iter ;
rank: 21
score: 99.06071920955883
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 21
score: 99.02535574776786
patch: int n CaMeL C = current CaMeL Point . length - 1 ;
rank: 21
score: 98.97111206054687
patch: ++ iter ; ++ iter ; -- iter ;
rank: 21
score: 98.9139873798077
patch: if ( ! iter . is CaMeL Empty ( ; ) ;
rank: 22
score: 99.26048060825893
patch: / * int n CaMeL C = current CaMeL Point . length ;
rank: 22
score: 99.24244181315105
patch: double n CaMeL C = current CaMeL Point . length ;
rank: 22
score: 99.11194864908855
patch: ++ n CaMeL C ; ++ n CaMeL C ; }
rank: 22
score: 99.06536865234375
patch: ++ iter ; for ++ iter ;
rank: 22
score: 99.05994415283203
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 22
score: 98.96877034505208
patch: ++ iter ; ++ ; ++ iter ;
rank: 22
score: 98.91071166992188
patch: if ( ! iter . is CaMeL Empty ;
rank: 23
score: 99.11172485351562
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }
rank: 23
score: 99.061767578125
patch: ++ iter ; iter ; int iter ;
rank: 23
score: 99.0464336688702
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 23
score: 99.01784842354911
patch: j = current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 23
score: 98.96546282087054
patch: ++ $NUMBER$ ; ++ iter ;
rank: 23
score: 98.90928141276042
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 24
score: 99.32310791015625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . get CaMeL Row ( ) ;
rank: 24
score: 99.23321063701923
patch: final int n CaMeL C = target CaMeL Values . length ;
rank: 24
score: 99.11083984375
patch: ++ n CaMeL R ; ++ n CaMeL C ;
rank: 24
score: 99.0452880859375
patch: Object current CaMeL Point = current CaMeL Point . length ;
rank: 24
score: 99.04485212053571
patch: finally { ++ iter ; }
rank: 24
score: 99.01783243815105
patch: int iter = current CaMeL Point . length - 1 ;
rank: 24
score: 98.94996473524306
patch: ++ iter ; ; ++ iter ; ;
rank: 24
score: 98.905517578125
patch: if ( iter == null ; break ;
rank: 25
score: 99.3226318359375
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 25
score: 99.25071885850694
patch: int n CaMeL C = current CaMeL Point . length * current CaMeL Point . length ;
rank: 25
score: 99.23334099264706
patch: final double [ ] current CaMeL Point = this . current CaMeL Point . length ;
rank: 25
score: 99.23211991159539
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 25
score: 99.10641659007354
patch: int n CaMeL R = current CaMeL Point . length ; ++ n CaMeL C ;
rank: 25
score: 99.0445327758789
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 25
score: 99.01771647135416
patch: int iter = current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 25
score: 98.92731584821429
patch: ++ iter ; ++ 0 ;
rank: 25
score: 98.89979771205357
patch: if ( iter == 0 ;
rank: 26
score: 99.31596374511719
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 26
score: 99.10050746372768
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 26
score: 99.04440646701389
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( current CaMeL Point ) ;
rank: 26
score: 99.01594761439732
patch: int n CaMeL C = current CaMeL Point . length ( ) ;
rank: 26
score: 98.91891140407986
patch: ++ iter ; ++ iter ; else ;
rank: 26
score: 98.89979044596355
patch: if ( ! iter . is CaMeL Empty ( ; )
rank: 27
score: 99.31439887152777
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( ) ;
rank: 27
score: 99.2392333984375
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 27
score: 99.10045668658088
patch: int n CaMeL C = current CaMeL Point . length ; ++ n CaMeL C ;
rank: 27
score: 99.04278564453125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 27
score: 99.02456665039062
patch: ++ iter ; iter ; * /
rank: 27
score: 99.01260375976562
patch: int iter = current CaMeL Point . length - iter ;
rank: 27
score: 98.90618896484375
patch: iter ; ++ iter ;
rank: 27
score: 98.89898681640625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 28
score: 99.31302490234376
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . get CaMeL Value ( ) ;
rank: 28
score: 99.2384765625
patch: final int [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 28
score: 99.22435238486842
patch: Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 28
score: 99.22213745117188
patch: double weight CaMeL Matrix = current CaMeL Point . length ;
rank: 28
score: 99.0964111328125
patch: ++ iter ; current = iter . iter ;
rank: 28
score: 99.0393954190341
patch: n CaMeL R = current CaMeL Point . length ;
rank: 28
score: 99.02021026611328
patch: i * ++ ; ++ iter ;
rank: 28
score: 98.90603637695312
patch: ++ ++ 1 ; ++ iter ;
rank: 28
score: 98.89879760742187
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 29
score: 99.3058090209961
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 29
score: 99.21944387335526
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 29
score: 99.09531537224265
patch: final int iter = current CaMeL Point . length - current CaMeL Point . length ;
rank: 29
score: 99.03937639508929
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 29
score: 99.02018519810268
patch: / * ] ++ iter ;
rank: 29
score: 98.90443250868056
patch: iter ++ ; ++ ; ++ iter ;
rank: 29
score: 98.89739990234375
patch: else { if ++ iter ;
rank: 30
score: 99.30299479166666
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . length ;
rank: 30
score: 99.23312717013889
patch: int n CaMeL C = current CaMeL Point . length - current CaMeL Point . length ;
rank: 30
score: 99.0892001065341
patch: final double iter = current CaMeL Point . length ;
rank: 30
score: 99.03412186472039
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair >
rank: 30
score: 99.00911458333333
patch: iter = current CaMeL Point . length ;
rank: 30
score: 98.89668782552083
patch: ++ iter ; ; if ++ iter ;
rank: 30
score: 98.89597865513393
patch: else { if ( ! iter . is CaMeL Empty ( ) ;
rank: 31
score: 99.29878997802734
patch: residuals CaMeL Weights [ n CaMeL R ] = current CaMeL Point . length ;
rank: 31
score: 99.22592995383523
patch: final double [ ] current CaMeL Point = current ;
rank: 31
score: 99.21624145507812
patch: int n CaMeL C = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 31
score: 99.08815220424107
patch: ++ iter ; current CaMeL Point [ n CaMeL C ] = ;
rank: 31
score: 99.03133138020833
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 31
score: 99.00655423677884
patch: Thread . current CaMeL Thread ( ) . start ( ) ;
rank: 31
score: 98.89207628038194
patch: / ; ++ iter ; ++ iter ;
rank: 32
score: 99.2947998046875
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 32
score: 99.22511693050987
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 32
score: 99.217529296875
patch: final double current CaMeL Point = current CaMeL Point ;
rank: 32
score: 99.21396484375
patch: final double [ ] residuals CaMeL Weights = current CaMeL Point . length ;
rank: 32
score: 98.99379069010416
patch: current CaMeL Point = current CaMeL Point . to CaMeL Array ( ) ;
rank: 32
score: 98.89100864955357
patch: if ( ! iter . is CaMeL Empty ( ; ) ) {
rank: 33
score: 99.2138671875
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair * current CaMeL Point . length ;
rank: 33
score: 99.08310171274039
patch: int iter = current CaMeL Point . length ; ++ iter ;
rank: 33
score: 99.02650960286458
patch: long n CaMeL R = current CaMeL Point . length ;
rank: 33
score: 98.99945068359375
patch: ++ iter ; int iter ;
rank: 33
score: 98.99100167410714
patch: int n CaMeL R = current CaMeL Point . length - 1 ;
rank: 33
score: 98.88888113839286
patch: ++ iter ; ++ max ;
rank: 33
score: 98.88887786865234
patch: else { if ; ++ iter ;
rank: 34
score: 99.28465576171875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 34
score: 99.21335671164773
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 34
score: 99.20503065321181
patch: int n CaMeL C = current CaMeL Point . length : current CaMeL Point . length ;
rank: 34
score: 99.07785213694854
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ;
rank: 34
score: 99.02509014423077
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 34
score: 98.99896240234375
patch: ++ iter ; iter ;
rank: 34
score: 98.99004720052083
patch: try { current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 34
score: 98.88880072699652
patch: ++ iter ; ++ iter ; ++ ;
rank: 34
score: 98.88206990559895
patch: if ( ! iter . is CaMeL Empty ++ ) ;
rank: 35
score: 99.21311848958334
patch: int n CaMeL C = current CaMeL Point [ n CaMeL C ] ;
rank: 35
score: 99.20023193359376
patch: double current CaMeL Point = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 35
score: 99.02490234375
patch: Integer n CaMeL C = current CaMeL Point . length ;
rank: 35
score: 98.99427625868056
patch: ++ iter ; try ; int iter ;
rank: 35
score: 98.98849722055289
patch: final int iter = current CaMeL Point . length ( ) ;
rank: 35
score: 98.88846261160714
patch: ++ iter ; ++ $STRING$ ;
rank: 35
score: 98.876220703125
patch: if ( ! iter . is CaMeL Empty ( ; ) {
rank: 36
score: 99.27965630425348
patch: current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 36
score: 99.21015760633681
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new double [ n CaMeL C ] ;
rank: 36
score: 99.20034993489584
patch: final double [ ] target CaMeL Values = current CaMeL Point . length ;
rank: 36
score: 99.07701764787946
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 36
score: 98.99424743652344
patch: ++ iter ; ++ 1 ; ;
rank: 36
score: 98.98240443638393
patch: int n CaMeL R = current CaMeL Point . length ( ) ;
rank: 36
score: 98.887451171875
patch: ++ start ; ++ iter ;
rank: 36
score: 98.87601470947266
patch: else { return ++ iter ; }
rank: 37
score: 99.27888793945313
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . get CaMeL Point ( ) ;
rank: 37
score: 99.19749232700893
patch: current CaMeL Point [ iter ] = current CaMeL Point . length ;
rank: 37
score: 99.1968635110294
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 37
score: 99.01611328125
patch: Integer current CaMeL Point = current CaMeL Point . length ;
rank: 37
score: 98.9930648803711
patch: ++ iter ; try { iter ;
rank: 37
score: 98.98150165264423
patch: final int iter = current CaMeL Point . length - 1 ;
rank: 37
score: 98.88398742675781
patch: ++ iter ; ++ ++ 1 ;
rank: 37
score: 98.87202758789063
patch: throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 38
score: 99.27593994140625
patch: current CaMeL Point [ n CaMeL R ] = current CaMeL Point . length ;
rank: 38
score: 99.20787353515625
patch: double [ ] current CaMeL Point = current ;
rank: 38
score: 99.1964111328125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 38
score: 99.015576171875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 38
score: 98.8744125366211
patch: ++ iter ; iter = iter ;
rank: 38
score: 98.87045724051339
patch: if ( iter != null ;
rank: 39
score: 99.27443333675987
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 39
score: 99.20775349934895
patch: int [ ] current = current CaMeL Point . length ;
rank: 39
score: 99.19471571180556
patch: Real CaMeL Matrix weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 39
score: 99.06795654296874
patch: ++ n CaMeL C + n CaMeL C ;
rank: 39
score: 99.0140380859375
patch: n CaMeL C = current CaMeL Point . length ; ++ ;
rank: 39
score: 98.99131556919643
patch: ++ iter ; ++ value ;
rank: 39
score: 98.97831217447917
patch: if ( ! iter . is CaMeL Empty ; ) {
rank: 39
score: 98.87247721354167
patch: ++ iter ; ++ iter ; } iter
rank: 39
score: 98.87003871372768
patch: if ( ! iter . is CaMeL Empty ++ this . iter ;
rank: 40
score: 99.19145651424633
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 40
score: 99.18860626220703
patch: double [ ] current CaMeL Point = this . current CaMeL Point . length ;
rank: 40
score: 99.06785074869792
patch: current CaMeL Point [ iter ] = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 40
score: 98.98444281684027
patch: ++ iter ; iter ; ++ iter ;
rank: 40
score: 98.97574869791667
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 40
score: 98.87173800998264
patch: iter ; ++ iter ; ++ iter ;
rank: 41
score: 99.2711181640625
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 41
score: 99.190185546875
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point ;
rank: 41
score: 99.06594509548611
patch: ++ n CaMeL C ; break ; }
rank: 41
score: 99.00800323486328
patch: result = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 41
score: 98.98264857700893
patch: ++ iter ; if iter ;
rank: 41
score: 98.97506009615384
patch: current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 41
score: 98.86605072021484
patch: else { / * * * /
rank: 41
score: 98.86502075195312
patch: ++ 0 ; ++ iter ; ++ iter ;
rank: 42
score: 99.27080426897321
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 42
score: 99.18398813100961
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 42
score: 99.063671875
patch: ++ n CaMeL C ; ++ iter * /
rank: 42
score: 99.00767517089844
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) ;
rank: 42
score: 98.9793930053711
patch: ++ iter ; final ++ iter ;
rank: 42
score: 98.86395874023438
patch: ++ iter ; ++ iter ; ++ 1 ;
rank: 43
score: 99.27046508789063
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair . get CaMeL Row ( current CaMeL Point ) ;
rank: 43
score: 99.18659410978618
patch: Real CaMeL Matrix current CaMeL Point = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 43
score: 99.18130313648896
patch: final int Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ;
rank: 43
score: 99.06285749162946
patch: ++ n CaMeL C ; ++ n CaMeL C ; ++ iter ;
rank: 43
score: 99.0067889873798
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 43
score: 98.97793918185764
patch: ++ iter ; int iter + iter ;
rank: 43
score: 98.971435546875
patch: final ; current CaMeL Point = current CaMeL Point . length ;
rank: 43
score: 98.86054823133681
patch: if ( iter == null ; * /
rank: 43
score: 98.85661315917969
patch: ++ iter ; ; ++ 1 ;
rank: 44
score: 99.27039184570313
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 44
score: 99.20020345052083
patch: int n CaMeL C = target CaMeL Values [ n CaMeL C ] ;
rank: 44
score: 99.1863544170673
patch: final double [ ] current CaMeL Point = current CaMeL Point ;
rank: 44
score: 99.06118594898896
patch: final double iter = current CaMeL Point . length - current CaMeL Point . length ;
rank: 44
score: 99.00592041015625
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix ) ;
rank: 44
score: 98.97747802734375
patch: this . ++ iter ; ++ iter ;
rank: 44
score: 98.96958705357143
patch: if ( ! iter . contains ( current CaMeL Point ) ) {
rank: 44
score: 98.85931803385417
patch: if ( ! iter . is CaMeL Empty ( ) ; ++ iter ;
rank: 44
score: 98.85263061523438
patch: ++ 0 ; ; ++ iter ;
rank: 45
score: 99.18528917100694
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Solver ( ) ;
rank: 45
score: 99.05949132582721
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 45
score: 99.00460379464286
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 45
score: 98.97428385416667
patch: ++ iter ; ++ iter ; break ;
rank: 45
score: 98.96395169771634
patch: n CaMeL C = current CaMeL Point . length ( ) ;
rank: 45
score: 98.85894012451172
patch: else { iter += iter ; }
rank: 45
score: 98.85015869140625
patch: ++ $STRING$ ; ++ iter ;
rank: 46
score: 99.26840209960938
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 46
score: 99.19818405877976
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 46
score: 99.18351236979167
patch: double n CaMeL R = current CaMeL Point . length ;
rank: 46
score: 99.17937469482422
patch: int Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ;
rank: 46
score: 99.05926920572917
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 46
score: 99.00406494140626
patch: result = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 46
score: 98.97109985351562
patch: ++ iter ; ++ * * /
rank: 46
score: 98.96256510416667
patch: int iter = current . last CaMeL Index CaMeL Of ( $STRING$ ) ;
rank: 46
score: 98.85606079101562
patch: if ( iter == 0 ; return iter ;
rank: 46
score: 98.84832085503473
patch: ++ iter ; ; ++ iter ; }
rank: 47
score: 99.26812744140625
patch: int current CaMeL Point = n CaMeL R : current CaMeL Point . length ;
rank: 47
score: 99.18159623579545
patch: final int n CaMeL C = n CaMeL C ;
rank: 47
score: 99.05922037760416
patch: ++ n CaMeL C ; int iter = current CaMeL Point . length ;
rank: 47
score: 99.00149739583334
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 47
score: 98.96484375
patch: ++ 0 ; ++ iter ; ;
rank: 47
score: 98.96154022216797
patch: if ( iter != null ) {
rank: 47
score: 98.85265350341797
patch: if ( iter == null ; }
rank: 47
score: 98.84703063964844
patch: ++ iter ; iter if ++ ;
rank: 48
score: 99.26722476356908
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 48
score: 99.19718794389205
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 48
score: 99.17701721191406
patch: int n CaMeL C = current CaMeL Point . length - n CaMeL C ;
rank: 48
score: 99.05802648207721
patch: int n CaMeL R = current CaMeL Point . length ; ++ n CaMeL R ;
rank: 48
score: 99.00038364955357
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ; }
rank: 48
score: 98.96470642089844
patch: ++ iter ; while ++ 1 ;
rank: 48
score: 98.95970740685097
patch: Thread . current CaMeL Thread ( ) . interrupt ( ) ;
rank: 48
score: 98.8513692220052
patch: if ( . is CaMeL Empty ( ; ) ) {
rank: 48
score: 98.84475708007812
patch: ++ 1 ; ++ iter ; ++ iter ;
rank: 49
score: 99.17637724034927
patch: int iter = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 49
score: 99.0544921875
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 49
score: 98.99964141845703
patch: result = weight CaMeL Matrix . get CaMeL Row ( n CaMeL C ) ;
rank: 49
score: 98.96245574951172
patch: ++ iter ; ++ - $NUMBER$ ;
rank: 49
score: 98.95611572265625
patch: int iter = current CaMeL Point . length + 1 ;
rank: 49
score: 98.85019356863839
patch: if ( iter > 0 ;
rank: 49
score: 98.83953857421875
patch: ++ iter ; ++ start ; ++ iter ;
rank: 50
score: 99.264501953125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row CaMeL Vector ( ) ;
rank: 50
score: 99.17015991210937
patch: double iter = current CaMeL Point . length ;
rank: 50
score: 99.05418178013393
patch: ++ iter ; if ( ;
rank: 50
score: 98.99577530570652
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 50
score: 98.95905412946429
patch: ++ value ; ++ iter ;
rank: 50
score: 98.95496715198864
patch: current CaMeL Point = current CaMeL Point . length ;
rank: 50
score: 98.84827599158653
patch: if ( . is CaMeL Empty ( ) ; ++ iter ;
rank: 50
score: 98.83826904296875
patch: ++ iter ; ++ 1 ; ++ iter ;
rank: 51
score: 99.19605170355902
patch: int current CaMeL Point = current CaMeL Point . length * current CaMeL Point . length ;
rank: 51
score: 99.17816631610577
patch: final int n CaMeL R = target CaMeL Values . length ;
rank: 51
score: 99.16498879825367
patch: final double Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ;
rank: 51
score: 99.05186971028645
patch: ++ n CaMeL C ; } ++ n CaMeL C ;
rank: 51
score: 98.99295043945312
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 51
score: 98.95628526475694
patch: ++ iter ; int iter = iter ;
rank: 51
score: 98.95372596153847
patch: while ( ! iter . is CaMeL Empty ( ) ) {
rank: 51
score: 98.84789100060097
patch: if ( ! iter . is CaMeL Empty ( ) ; }
rank: 51
score: 98.83627319335938
patch: ++ iter ; ++ iter ; ++ start ;
rank: 52
score: 99.260595703125
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ;
rank: 52
score: 99.19407145182292
patch: current = current CaMeL Point . length ;
rank: 52
score: 99.17796325683594
patch: int n CaMeL C = n CaMeL R : current CaMeL Point . length ;
rank: 52
score: 98.99285888671875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ;
rank: 52
score: 98.95515441894531
patch: ++ iter ; ++ * * ;
rank: 52
score: 98.95265549879808
patch: final int iter = current CaMeL Point . length - iter ;
rank: 52
score: 98.84728131975446
patch: if ( ! iter . is CaMeL Empty ( ) ; break ;
rank: 52
score: 98.83538818359375
patch: / ; ++ iter ;
rank: 53
score: 99.25855712890625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 53
score: 99.17405192057292
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = compute CaMeL Residuals ( ) ;
rank: 53
score: 99.16152056525735
patch: measurement = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 53
score: 99.04976806640624
patch: ++ n CaMeL C ; ; ++ iter ;
rank: 53
score: 98.99251302083333
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 53
score: 98.95511881510417
patch: / * ++ iter ; ++ iter ;
rank: 53
score: 98.84556884765625
patch: else { iter = iter . length ; }
rank: 53
score: 98.83307562934027
patch: ++ iter ; ++ ++ iter ; ;
rank: 54
score: 99.25697835286458
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ( ) ;
rank: 54
score: 99.19029235839844
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 54
score: 99.172119140625
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 54
score: 99.1600570678711
patch: int iter = current CaMeL Point . length : current CaMeL Point . length ;
rank: 54
score: 99.04922688802084
patch: int iter = current CaMeL Point . length ; ++ n CaMeL C ;
rank: 54
score: 98.99146225873162
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; }
rank: 54
score: 98.95335083007812
patch: else ++ iter ;
rank: 54
score: 98.95152064732143
patch: int n CaMeL C = current CaMeL Point . length + 1 ;
rank: 54
score: 98.84395658052884
patch: if ( . is CaMeL Empty ( ) ; return iter ;
rank: 54
score: 98.83285522460938
patch: ++ iter ; ; if iter ;
rank: 55
score: 99.25631713867188
patch: current = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point , current CaMeL Point ) ;
rank: 55
score: 99.18905978732639
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current * current CaMeL Point . length ;
rank: 55
score: 99.15966078814338
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 55
score: 99.0483065518466
patch: current CaMeL Point [ n CaMeL C ] = ;
rank: 55
score: 98.99040083451705
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair >
rank: 55
score: 98.950830078125
patch: try { Thread . current CaMeL Thread ( ) . interrupt ( ) ;
rank: 55
score: 98.8408203125
patch: if ( iter == null ; return null ;
rank: 55
score: 98.83086547851562
patch: ++ iter ; ++ iter ; return iter ;
rank: 56
score: 99.17089233398437
patch: int current CaMeL Point = current CaMeL Point ;
rank: 56
score: 99.15946451822917
patch: double iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 56
score: 99.04678344726562
patch: ++ current CaMeL Point [ n CaMeL C ] = ;
rank: 56
score: 98.98891379616477
patch: n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 56
score: 98.95054931640625
patch: ++ iter ; ++ iter ; while iter ;
rank: 56
score: 98.84003448486328
patch: else { ++ iter ; * /
rank: 56
score: 98.82735770089286
patch: ++ true ; ++ iter ;
rank: 57
score: 99.25303955078125
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair . get CaMeL Entry ( current CaMeL Point ) ;
rank: 57
score: 99.1707012469952
patch: final int current CaMeL Point = target CaMeL Values . length ;
rank: 57
score: 99.15817742598684
patch: final double weight CaMeL Matrix = current CaMeL Point . length : current CaMeL Point . length ;
rank: 57
score: 99.04632568359375
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 57
score: 98.98858087713069
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 57
score: 98.94988606770833
patch: if ( ! iter . is CaMeL Na CaMeL N ( ) ) {
rank: 57
score: 98.83981759207589
patch: if ( ! iter . is CaMeL Empty ++ ) return null ;
rank: 57
score: 98.82638113839286
patch: ++ iter ; iter ++ ;
rank: 58
score: 99.25157819475446
patch: int iter = n CaMeL R : current CaMeL Point . length ;
rank: 58
score: 99.185791015625
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 58
score: 99.15484940378289
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ,
rank: 58
score: 99.04509735107422
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C ;
rank: 58
score: 98.98657836914063
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 58
score: 98.94912283761161
patch: / * ; ++ iter ;
rank: 58
score: 98.94537353515625
patch: current CaMeL Point [ n CaMeL C ] = iter ;
rank: 58
score: 98.83655802408855
patch: if ( ! iter . is CaMeL Empty ++ iter ;
rank: 59
score: 99.24983723958333
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Value ( ) ;
rank: 59
score: 99.14984130859375
patch: int [ ] current CaMeL Point = this . current CaMeL Point . length ;
rank: 59
score: 98.98631873497597
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) get CaMeL
rank: 59
score: 98.94883219401042
patch: ++ iter ; ++ - - iter ;
rank: 59
score: 98.94476318359375
patch: current CaMeL Point [ 0 ] = iter ;
rank: 59
score: 98.83638509114583
patch: if ( ! iter . is CaMeL Empty ( ) ; return iter ;
rank: 59
score: 98.81989135742188
patch: ++ iter ; ++ iter ; = iter ;
rank: 60
score: 99.24797227647569
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 60
score: 99.16891818576389
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 60
score: 99.14823913574219
patch: b = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 60
score: 99.04022979736328
patch: ++ n CaMeL C ; ++ n CaMeL C ; ++ n CaMeL C ;
rank: 60
score: 98.98617699032738
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . to CaMeL Array ( ) ;
rank: 60
score: 98.94512261284723
patch: ++ iter ; ++ * - iter ;
rank: 60
score: 98.93966471354166
patch: if ( current CaMeL Point . starts CaMeL With ( $STRING$ ) ) {
rank: 60
score: 98.83514404296875
patch: if ( . is CaMeL Empty ( ) ) break ;
rank: 60
score: 98.81784396701389
patch: ++ iter ; ; ++ iter ; else
rank: 61
score: 99.24728393554688
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) .
rank: 61
score: 99.18123726222827
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 61
score: 99.14683532714844
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 61
score: 98.98600551060268
patch: result = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 61
score: 98.93748474121094
patch: ++ iter ; iter * * /
rank: 61
score: 98.93715122767857
patch: n CaMeL C = current CaMeL Point . length ; ++ iter ;
rank: 61
score: 98.8346455891927
patch: if ( . is CaMeL Empty ( ) ) continue ;
rank: 61
score: 98.81447347005208
patch: ++ ; ++ iter ; ++ iter ;
rank: 62
score: 99.17991536458334
patch: int current CaMeL Point = current CaMeL Point [ n CaMeL C ] ;
rank: 62
score: 99.0387939453125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 62
score: 98.9368896484375
patch: current CaMeL Point = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 62
score: 98.93609619140625
patch: catch ++ iter ; ++ iter ;
rank: 62
score: 98.83339146205357
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 63
score: 99.17964504076087
patch: int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 63
score: 99.16527557373047
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( ) ;
rank: 63
score: 99.1455078125
patch: int n CaMeL C = current CaMeL Point . length + n CaMeL C ;
rank: 63
score: 99.03721516927084
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 63
score: 98.98351033528645
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 63
score: 98.93616832386364
patch: iter = current CaMeL Point . length ( ) ;
rank: 63
score: 98.9358139038086
patch: ++ iter ; ++ iter ; ++
rank: 63
score: 98.83225319602273
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 63
score: 98.81241183810764
patch: ++ iter ; ; ; ++ iter ;
rank: 64
score: 99.16324288504464
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 64
score: 99.03687395368304
patch: ++ iter ; final Point CaMeL Vector CaMeL Value CaMeL Pair ++ ;
rank: 64
score: 98.98310990767045
patch: n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 64
score: 98.9346590909091
patch: try { iter = current CaMeL Point . length ;
rank: 64
score: 98.934326171875
patch: ++ iter ; int iter ++ ;
rank: 64
score: 98.8304443359375
patch: else { return iter ; } }
rank: 64
score: 98.81200493706598
patch: ++ iter ; ++ iter ; ; iter
rank: 65
score: 99.241845703125
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 65
score: 99.17784881591797
patch: ++ current CaMeL Point . length ; current = current CaMeL Point . length ;
rank: 65
score: 99.16204512746711
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current CaMeL Point ;
rank: 65
score: 99.14222208658855
patch: int weight CaMeL Matrix = current CaMeL Point . length ;
rank: 65
score: 99.03681182861328
patch: ++ iter * / ++ iter ;
rank: 65
score: 98.98290337456598
patch: < n CaMeL C ; ++ ) {
rank: 65
score: 98.93235778808594
patch: ++ 1 ; ++ iter ; ;
rank: 65
score: 98.829541015625
patch: if ( iter == null ) return null ;
rank: 66
score: 99.23958129882813
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 66
score: 99.17316545758929
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 66
score: 99.14075425091912
patch: final Real CaMeL Matrix [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 66
score: 99.03658040364583
patch: int iter = current . index CaMeL Of ( current CaMeL Point ) ;
rank: 66
score: 98.98247736150569
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 66
score: 98.92896270751953
patch: ++ - iter ; ++ iter ;
rank: 66
score: 98.92809186662946
patch: int iter = current CaMeL Point . length - n CaMeL C ;
rank: 66
score: 98.82574462890625
patch: else { ++ * * iter ;
rank: 66
score: 98.80992889404297
patch: iter ; ++ ; = iter ;
rank: 67
score: 99.23809814453125
patch: if ( current CaMeL Point . length < n CaMeL C ) {
rank: 67
score: 99.16757202148438
patch: b = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 67
score: 99.1553955078125
patch: Real CaMeL Matrix [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 67
score: 99.13831787109375
patch: int iter = target CaMeL Values . length ;
rank: 67
score: 99.03626251220703
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R ;
rank: 67
score: 98.98232634171195
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 67
score: 98.92863246372768
patch: / * ] iter ++ ;
rank: 67
score: 98.92696126302083
patch: while ( ! iter . is CaMeL Empty ( ) )
rank: 67
score: 98.82518005371094
patch: else { ++ iter ; } }
rank: 67
score: 98.80778672960069
patch: ++ iter ; ++ iter ; / ;
rank: 68
score: 99.16746690538194
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair * current CaMeL Point . length ;
rank: 68
score: 99.15474446614583
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ;
rank: 68
score: 99.13367571149554
patch: double [ ] residuals CaMeL Weights = current CaMeL Point . length ;
rank: 68
score: 98.92816162109375
patch: ++ iter ; iter ; if iter ;
rank: 68
score: 98.92522786458333
patch: try { Thread . current CaMeL Thread ( ) . start ( ) ;
rank: 68
score: 98.82236153738839
patch: if ( ! iter . is CaMeL Empty ++ ) return iter ;
rank: 68
score: 98.80768585205078
patch: ++ - 1 ; ++ iter ;
rank: 69
score: 99.23797607421875
patch: ++ current CaMeL Point ; current CaMeL Point = current CaMeL Point . length ;
rank: 69
score: 99.16744995117188
patch: residuals CaMeL Weights [ n CaMeL C ] = current ;
rank: 69
score: 99.13357704564145
patch: double current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 69
score: 98.9806377704327
patch: [ ] n CaMeL C = current CaMeL Point . length ;
rank: 69
score: 98.92408854166666
patch: if ( ! iter . compare CaMeL To ( current CaMeL Point ) ;
rank: 69
score: 98.82138296274039
patch: else { if ( ! iter . is CaMeL Empty ++ )
rank: 70
score: 99.2376708984375
patch: int current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 70
score: 99.15095350477431
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . current CaMeL Point ( ) ;
rank: 70
score: 99.13336181640625
patch: final double weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 70
score: 98.98045518663194
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ) ;
rank: 70
score: 98.92368570963542
patch: if ( iter == current CaMeL Point . length ) {
rank: 70
score: 98.91692437065973
patch: ++ iter ; ++ iter ; * /
rank: 70
score: 98.81942409939236
patch: if ( iter == null ) return ;
rank: 71
score: 99.2375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . get CaMeL Entry ( ) ;
rank: 71
score: 99.16692352294922
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 71
score: 99.14964881310097
patch: final int weight CaMeL Matrix = current CaMeL Point . length ;
rank: 71
score: 99.12751988002232
patch: int n CaMeL C = this . current CaMeL Point . length ;
rank: 71
score: 99.0322021484375
patch: ++ iter ; int n CaMeL C = current CaMeL Point . length ;
rank: 71
score: 98.97780247738487
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair >
rank: 71
score: 98.92209298270089
patch: int n CaMeL R = current CaMeL Point . length + 1 ;
rank: 71
score: 98.91092681884766
patch: ++ iter ; while iter ; ;
rank: 71
score: 98.81911795479911
patch: if ( ! iter . is CaMeL Empty ( ; ) . ;
rank: 71
score: 98.80405970982143
patch: ++ null ; ++ iter ;
rank: 72
score: 99.23644341362848
patch: current = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point , current CaMeL Point ) ;
rank: 72
score: 99.16587477463942
patch: final int [ ] current = current CaMeL Point . length ;
rank: 72
score: 99.14801580255681
patch: final int current CaMeL Point = n CaMeL C ;
rank: 72
score: 99.12607247488839
patch: long [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 72
score: 99.03208618164062
patch: ++ iter ; current = current . ++ ;
rank: 72
score: 98.97737630208333
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 72
score: 98.90281372070312
patch: ++ iter ; ++ iter ; int iter ;
rank: 72
score: 98.81763567243304
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 72
score: 98.80278015136719
patch: ++ iter ; iter / / /
rank: 73
score: 99.14679276315789
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 73
score: 99.12261493389423
patch: final String current CaMeL Point = current CaMeL Point . length ;
rank: 73
score: 99.02860260009766
patch: ++ n CaMeL C ; final Point CaMeL Vector CaMeL Value CaMeL Pair ++ ;
rank: 73
score: 98.97542317708333
patch: result = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 73
score: 98.91952078683036
patch: current CaMeL Point = current CaMeL Point . length ; ++ iter ;
rank: 73
score: 98.90099334716797
patch: ++ iter ; ++ - 0 ;
rank: 73
score: 98.81748453776042
patch: else { this . iter = iter . iter ; }
rank: 73
score: 98.80122375488281
patch: ++ iter ; ++ iter ; try
rank: 74
score: 99.2340087890625
patch: if ( current CaMeL Point . length < current CaMeL Point . length ) {
rank: 74
score: 99.16350997121711
patch: final int n CaMeL C = current CaMeL Point . length * current CaMeL Point . length ;
rank: 74
score: 99.14503238075658
patch: final Real CaMeL Matrix weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 74
score: 99.1209487915039
patch: int n CaMeL C = current CaMeL Point . length : n CaMeL C ;
rank: 74
score: 99.02854225852273
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 74
score: 98.97522989908855
patch: if ( converged ) {
rank: 74
score: 98.91695462740384
patch: final int iter = current CaMeL Point . length + 1 ;
rank: 74
score: 98.89638943142361
patch: / * ] iter ; ++ iter ;
rank: 74
score: 98.81717258029514
patch: if ( iter == 0 ; break ;
rank: 74
score: 98.80075073242188
patch: } iter ++ ; ++ iter ;
rank: 75
score: 99.23233468191964
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . length ;
rank: 75
score: 99.1629971590909
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , n CaMeL C ) ;
rank: 75
score: 99.120849609375
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 75
score: 99.0263671875
patch: int n CaMeL R = current CaMeL Point . length ; ++ iter ;
rank: 75
score: 98.9744873046875
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 75
score: 98.91602672230114
patch: if ( current CaMeL Point . length > 0 )
rank: 75
score: 98.89535183376736
patch: ++ iter ; ++ * ++ iter ;
rank: 75
score: 98.81643240792411
patch: if ( iter == null )
rank: 76
score: 99.23152923583984
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 76
score: 99.11883223684211
patch: final double current CaMeL Point = current CaMeL Point . length : current CaMeL Point . length ;
rank: 76
score: 99.02614920479911
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 76
score: 98.97227376302084
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = current ;
rank: 76
score: 98.8948974609375
patch: ++ iter ; iter ; * ;
rank: 76
score: 98.81504128196023
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 76
score: 98.7963134765625
patch: } ++ iter ;
rank: 77
score: 99.1187744140625
patch: if ( n CaMeL C < current CaMeL Point . length ) {
rank: 77
score: 99.02581024169922
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 77
score: 98.97123637952302
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix . get CaMeL Row CaMeL
rank: 77
score: 98.91545758928571
patch: current CaMeL Point = current CaMeL Point . substring ( iter ) ;
rank: 77
score: 98.89281005859375
patch: ++ iter ; ++ iter ; for iter ;
rank: 77
score: 98.81378173828125
patch: else { if ( ! iter . is CaMeL Empty ;
rank: 77
score: 98.79619750976562
patch: ++ $NUMBER$ ; ++ iter ; ++ iter ;
rank: 78
score: 99.1409912109375
patch: / * int n CaMeL R = current CaMeL Point . length ;
rank: 78
score: 99.1149014559659
patch: final double [ ] current CaMeL Point = null ;
rank: 78
score: 98.97052764892578
patch: result = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 78
score: 98.8096923828125
patch: if ( . is CaMeL Empty ( ) ) return null ;
rank: 78
score: 98.79483032226562
patch: ++ -- iter ; ++ iter ;
rank: 79
score: 99.22667778862848
patch: current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 79
score: 99.14003392269737
patch: int n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 79
score: 99.02378493088942
patch: ++ n CaMeL C ; ++ n CaMeL C ; ; ;
rank: 79
score: 98.97006405101104
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point .
rank: 79
score: 98.91269155649039
patch: int iter = current CaMeL Point [ 0 ] . length ;
rank: 79
score: 98.89147186279297
patch: ++ iter ; for iter ++ ;
rank: 79
score: 98.807373046875
patch: if ( iter == null ; ++ iter ;
rank: 79
score: 98.79276529947917
patch: ++ iter ; ++ iter ; ; ;
rank: 80
score: 99.22655029296875
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ;
rank: 80
score: 99.15816650390624
patch: b = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 80
score: 99.13981548108552
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair )
rank: 80
score: 99.11139322916667
patch: final double weight CaMeL Matrix . current = current CaMeL Point . length ;
rank: 80
score: 99.0237045288086
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ;
rank: 80
score: 98.91110026041666
patch: int n CaMeL C = current CaMeL Point . length ; ++ iter ;
rank: 80
score: 98.80675397600446
patch: if ( ! iter . is CaMeL Empty ( ) ) break ;
rank: 80
score: 98.79263305664062
patch: ++ iter ; ++ iter ; if iter ;
rank: 81
score: 99.2254638671875
patch: current = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 81
score: 99.15470886230469
patch: current = weight CaMeL Matrix . get CaMeL Row ( n CaMeL C ) ;
rank: 81
score: 99.02352905273438
patch: ++ iter ; current CaMeL Point [ iter ] = ;
rank: 81
score: 98.89028494698661
patch: / * ++ ++ iter ;
rank: 81
score: 98.79083251953125
patch: ++ iter ; ++ this ;
rank: 82
score: 99.22545030381944
patch: residuals CaMeL Weights [ current CaMeL Point . length ] = current CaMeL Point . length ;
rank: 82
score: 99.13911437988281
patch: int current CaMeL Point = n CaMeL C : current CaMeL Point . length ;
rank: 82
score: 99.10900006975446
patch: double current CaMeL Point [ ] = current CaMeL Point . length ;
rank: 82
score: 98.9685291108631
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point ;
rank: 82
score: 98.9099853515625
patch: ++ iter ; if ( current CaMeL Point . length > 0 ) {
rank: 82
score: 98.89027622767857
patch: int iter ; ++ iter ;
rank: 82
score: 98.80436488560268
patch: if ( . is CaMeL Empty ( ) ) . ++ iter ;
rank: 82
score: 98.78935895647321
patch: ++ new ; ++ iter ;
rank: 83
score: 99.22542898995536
patch: ++ [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 83
score: 99.15315326891448
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ n CaMeL C ] ;
rank: 83
score: 99.13597347861842
patch: return weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point , current CaMeL Point ) ;
rank: 83
score: 99.02264404296875
patch: int iter = current . index CaMeL Of ( current CaMeL Point ;
rank: 83
score: 98.96764197716347
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > ++ ;
rank: 83
score: 98.90989467075893
patch: int n CaMeL C = current CaMeL Point . length - iter ;
rank: 83
score: 98.88938903808594
patch: ++ iter ; if ++ 1 ;
rank: 83
score: 98.80381774902344
patch: else { ++ [ 1 ] ;
rank: 84
score: 99.22525460379464
patch: residuals CaMeL Weights [ 0 ] = current CaMeL Point . length ;
rank: 84
score: 99.15262001439145
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 84
score: 99.13367984169408
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current CaMeL Point ;
rank: 84
score: 99.10592447916666
patch: final double weight CaMeL Matrix = this . current CaMeL Point . length ;
rank: 84
score: 98.90913529829545
patch: j = current CaMeL Point . length ( ) ;
rank: 84
score: 98.88733927408855
patch: try { ++ iter ;
rank: 84
score: 98.80285034179687
patch: if ( iter != null ; return iter ;
rank: 84
score: 98.78810337611607
patch: ++ this ; ++ iter ;
rank: 85
score: 99.22493061266448
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Block CaMeL Real CaMeL Matrix ( ) ;
rank: 85
score: 99.15257975260417
patch: int current CaMeL Point = target CaMeL Values [ n CaMeL C ] ;
rank: 85
score: 99.10482788085938
patch: double current CaMeL Point = current CaMeL Point . length - n CaMeL C ;
rank: 85
score: 99.0172119140625
patch: ++ n CaMeL C ; int n CaMeL C = current CaMeL Point . length ;
rank: 85
score: 98.9664794921875
patch: Iterator < Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair >
rank: 85
score: 98.90878731863839
patch: final int iter = current CaMeL Point . length ; ++ iter ;
rank: 85
score: 98.88718668619792
patch: ++ iter ; ++ * * iter ;
rank: 85
score: 98.80210524338942
patch: if ( ! iter . is CaMeL Empty ++ ) continue ;
rank: 85
score: 98.7850341796875
patch: ++ max ; ++ iter ;
rank: 86
score: 99.22469075520833
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 86
score: 99.103759765625
patch: final double current CaMeL Point = this . current CaMeL Point . length ;
rank: 86
score: 99.0162124633789
patch: ++ iter ; current = current ;
rank: 86
score: 98.96630859375
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = 0 ;
rank: 86
score: 98.90875244140625
patch: if ( iter >= current CaMeL Point . length ) {
rank: 86
score: 98.80194091796875
patch: if ( ! iter . is CaMeL Empty ( ; ; ) {
rank: 87
score: 99.2236572265625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . current CaMeL Point ( ) ;
rank: 87
score: 99.15220240542763
patch: final int n CaMeL C = current CaMeL Point . length - current CaMeL Point . length ;
rank: 87
score: 99.01510620117188
patch: ++ n CaMeL C ; if ( current CaMeL Point . length > 0 )
rank: 87
score: 98.96586100260417
patch: y = current CaMeL Point . length ;
rank: 87
score: 98.90627034505208
patch: int iter = current CaMeL Point . length + iter ;
rank: 87
score: 98.88505554199219
patch: ++ iter ; iter + iter ;
rank: 87
score: 98.80142211914062
patch: else { if ; * * /
rank: 88
score: 99.15147333559783
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point . length ;
rank: 88
score: 99.13205295138889
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Value ( ) ;
rank: 88
score: 99.09976356907895
patch: b = current CaMeL Point . length ; current CaMeL Point = current CaMeL Point . length ;
rank: 88
score: 99.01470626027961
patch: current CaMeL Point [ iter ] = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 88
score: 98.96558779761905
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point ;
rank: 88
score: 98.905517578125
patch: if ( iter . is CaMeL Empty ( ) ) {
rank: 88
score: 98.88422309027777
patch: ++ iter ; try ; if iter ;
rank: 88
score: 98.80107421875
patch: else { iter = iter . 0 ; }
rank: 88
score: 98.78118896484375
patch: ++ 1 ; ; ++ iter ;
rank: 89
score: 99.13190569196429
patch: int n CaMeL C = n CaMeL C - n CaMeL C ;
rank: 89
score: 99.01462689568015
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 89
score: 98.96355794270833
patch: n CaMeL C = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 89
score: 98.9053955078125
patch: if ( current CaMeL Point . length == 0 ) {
rank: 89
score: 98.8839111328125
patch: ++ iter ; ++ $NUMBER$ ;
rank: 89
score: 98.80104282924107
patch: if ( ! iter . is CaMeL Empty ( ) ) continue ;
rank: 89
score: 98.77982003348214
patch: ++ iter ; ++ false ;
rank: 90
score: 99.21878487723214
patch: int iter = n CaMeL C : current CaMeL Point . length ;
rank: 90
score: 99.15057927911931
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Block CaMeL Real CaMeL Matrix ( current CaMeL Point ) ;
rank: 90
score: 99.13180106026786
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current = current ;
rank: 90
score: 99.09873560855263
patch: final double weight CaMeL Matrix = current CaMeL Point . length - current CaMeL Point . length ;
rank: 90
score: 99.01456996372768
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 90
score: 98.9634297688802
patch: Iterator n CaMeL R = current CaMeL Point . length ;
rank: 90
score: 98.90489095052084
patch: ++ iter ; Thread . current CaMeL Thread ( ) . start ( ;
rank: 90
score: 98.8796875
patch: ++ iter ; else
rank: 90
score: 98.80029296875
patch: if ( iter != null ; break ;
rank: 90
score: 98.77397155761719
patch: ++ ( iter ; ++ iter ;
rank: 91
score: 99.21465192522321
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 91
score: 99.15044294084821
patch: final double -- n CaMeL C = current CaMeL Point . length ;
rank: 91
score: 99.13094656808036
patch: double [ ] target CaMeL Values = current CaMeL Point . length ;
rank: 91
score: 99.01443684895834
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ; }
rank: 91
score: 98.96288384331598
patch: end = current CaMeL Point . length ;
rank: 91
score: 98.90458984375
patch: try { current CaMeL Point = current CaMeL Point . length - 1 ;
rank: 91
score: 98.87930297851562
patch: / * * / ++ iter ;
rank: 91
score: 98.79835510253906
patch: Object iter = iter . length ;
rank: 91
score: 98.77384185791016
patch: if iter ++ ; ++ iter ;
rank: 92
score: 99.2143310546875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = this . current CaMeL Point . length ;
rank: 92
score: 99.09794921875
patch: residuals CaMeL Weights [ iter ] = current CaMeL Point . length ; }
rank: 92
score: 99.01261683872768
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 92
score: 98.96271073190789
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . 0 ;
rank: 92
score: 98.90382737379808
patch: if ( ! iter . contains ( current CaMeL Point ) ;
rank: 92
score: 98.87921142578125
patch: ++ iter ; while iter + iter ;
rank: 92
score: 98.79826354980469
patch: if ( iter > 0 ) {
rank: 93
score: 99.21420627170139
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = this . current CaMeL Point . length ;
rank: 93
score: 99.15031881893383
patch: current = current CaMeL Point . length ; current = current CaMeL Point . length ;
rank: 93
score: 99.13011881510417
patch: final int n CaMeL C = current CaMeL Point . length ( ) ;
rank: 93
score: 99.09783935546875
patch: double current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 93
score: 99.01142120361328
patch: current = current CaMeL Point . substring ( 0 , n CaMeL C ) ;
rank: 93
score: 98.96181640625
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 93
score: 98.90028889973958
patch: j = current CaMeL Point . length ;
rank: 93
score: 98.87838745117188
patch: ++ iter ; synchronized ++ iter ;
rank: 93
score: 98.79592660757211
patch: if ( ! iter . is CaMeL Empty ++ ) break ;
rank: 93
score: 98.77005767822266
patch: ++ iter ; iter / ++ ;
rank: 94
score: 99.15024701286765
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 94
score: 99.12918429904514
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current = current CaMeL Point . length ;
rank: 94
score: 99.09718017578125
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 94
score: 99.01116180419922
patch: ++ iter ; if ( iter ;
rank: 94
score: 98.961142578125
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point ;
rank: 94
score: 98.89992065429688
patch: if ( current CaMeL Point != null ) {
rank: 94
score: 98.7949462890625
patch: if ( ! iter . is CaMeL Empty ++ ) . ++ iter ;
rank: 94
score: 98.76819610595703
patch: ++ iter ; ++ iter ; /
rank: 95
score: 99.14942467730978
patch: int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 95
score: 99.12873391544117
patch: final int n CaMeL C = n CaMeL C : current CaMeL Point . length ;
rank: 95
score: 99.09668579101563
patch: b = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 95
score: 99.01028442382812
patch: ++ iter ; current CaMeL Point = iter ;
rank: 95
score: 98.96078889266305
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point ;
rank: 95
score: 98.7947285970052
patch: if ( . is CaMeL Empty ( ) ; break ;
rank: 95
score: 98.766748046875
patch: ++ iter ; ++ 0 ; ++ iter ;
rank: 96
score: 99.21132940995066
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point ( ) ;
rank: 96
score: 99.1491466703869
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 96
score: 99.12706801470588
patch: final int n CaMeL C = n CaMeL R : current CaMeL Point . length ;
rank: 96
score: 99.09622995476974
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . current CaMeL Point . length ;
rank: 96
score: 99.00991339432566
patch: ++ iter ; current CaMeL Point = current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 96
score: 98.95972357855902
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( n CaMeL C ) ;
rank: 96
score: 98.8971923828125
patch: final int n CaMeL C = current CaMeL Point . length - 1 ;
rank: 96
score: 98.87537730823864
patch: ++ iter ; ++ iter ; ++ iter ; ;
rank: 97
score: 99.14890455163044
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ;
rank: 97
score: 99.12460327148438
patch: double [ ] current CaMeL Point = current CaMeL Point ;
rank: 97
score: 99.09427584134616
patch: final Real CaMeL Matrix current = current CaMeL Point . length ;
rank: 97
score: 99.00970865885417
patch: ++ iter ; int n CaMeL R = current CaMeL Point . length ;
rank: 97
score: 98.95759765625
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point ;
rank: 97
score: 98.8970477764423
patch: n CaMeL C = current CaMeL Point . length - 1 ;
rank: 97
score: 98.87497780539773
patch: ++ iter ; ++ iter ; if ++ iter ;
rank: 97
score: 98.7936279296875
patch: if ( iter != null && iter . is CaMeL Empty ( ) ;
rank: 97
score: 98.76139831542969
patch: ++ iter ; ; = iter ;
rank: 98
score: 99.21113024259868
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 98
score: 99.14853922526042
patch: check CaMeL Parameters ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 98
score: 99.094189453125
patch: b = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 98
score: 99.0079345703125
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 98
score: 98.95748291015624
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , current CaMeL Point ) ;
rank: 98
score: 98.89540201822916
patch: if ( ! iter . is CaMeL Empty ( ) ) ++ iter ;
rank: 98
score: 98.87496185302734
patch: ++ iter ; int iter * /
rank: 98
score: 98.7594482421875
patch: ++ ++ iter ;
rank: 99
score: 99.21008978949652
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Entry ( ) ;
rank: 99
score: 99.12322591145833
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 99
score: 99.09223022460938
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 99
score: 98.95729693244485
patch: tmp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 99
score: 98.87101745605469
patch: ++ iter ; else iter * /
rank: 99
score: 98.79303385416667
patch: if ( iter == null || iter . is CaMeL Empty ( ) ;
rank: 99
score: 98.7559585571289
patch: ++ iter ; ; ++ 0 ;
rank: 100
score: 99.20961216517857
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = null ;
rank: 100
score: 99.14617047991071
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 100
score: 99.12248399522569
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 100
score: 99.0921630859375
patch: int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 100
score: 99.00706263950893
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point ;
rank: 100
score: 98.95626068115234
patch: state = Convergence CaMeL Checker . get CaMeL Row ( current CaMeL Point ) ;
rank: 100
score: 98.89419759114584
patch: int iter = current CaMeL Point [ 0 ] . length ( ) ;
rank: 100
score: 98.87057834201389
patch: super . ++ iter ; ++ iter ;
rank: 100
score: 98.79198455810547
patch: } else { if ++ iter ;
rank: 100
score: 98.75505065917969
patch: ++ iter ; ++ -- iter ;
rank: 101
score: 99.14592179008152
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) weight CaMeL Matrix ;
rank: 101
score: 99.12134806315105
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point ;
rank: 101
score: 99.09165736607143
patch: int [ ] residuals CaMeL Weights = current CaMeL Point . length ;
rank: 101
score: 99.00685424804688
patch: ++ n CaMeL C ; ++ iter ; ;
rank: 101
score: 98.95612444196429
patch: ret = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 101
score: 98.89314488002232
patch: int n CaMeL R = current CaMeL Point . length - iter ;
rank: 101
score: 98.86926947699652
patch: ++ iter ; ++ iter ; try ;
rank: 101
score: 98.79141998291016
patch: / * * ; ++ iter ;
rank: 101
score: 98.75211588541667
patch: ++ iter ; ; iter if ++ ;
rank: 102
score: 99.20881652832031
patch: current = weight CaMeL Matrix . get CaMeL Row ( n CaMeL R ) ;
rank: 102
score: 99.145751953125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) null ;
rank: 102
score: 99.12099783761161
patch: residuals CaMeL Weights ( current CaMeL Point , current CaMeL Point ) ;
rank: 102
score: 99.09072440011161
patch: if ( ! converged ) {
rank: 102
score: 99.00621744791667
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 102
score: 98.78975677490234
patch: if ( iter == 0 ) {
rank: 102
score: 98.75160522460938
patch: ++ start ; ++ iter ; ++ iter ;
rank: 103
score: 99.08886000689338
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 103
score: 99.00525665283203
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 103
score: 98.95499420166016
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values ) ;
rank: 103
score: 98.86777072482639
patch: ++ iter ; try { int iter ;
rank: 103
score: 98.78925115411931
patch: throw new Runtime CaMeL Exception ( $STRING$ + iter ;
rank: 103
score: 98.75133056640625
patch: ++ iter ; ; if iter = iter ;
rank: 104
score: 99.20842827690973
patch: current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 104
score: 99.12029065583882
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 104
score: 99.0880062705592
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 104
score: 99.00430733816964
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ;
rank: 104
score: 98.95325288318452
patch: tmp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 104
score: 98.8907470703125
patch: try { current = current CaMeL Point . length ;
rank: 104
score: 98.8669204711914
patch: / * ++ ; ++ iter ;
rank: 104
score: 98.78896077473958
patch: else { ++ [ 1 ] ; }
rank: 104
score: 98.7501220703125
patch: ++ ( ++ iter ; ++ iter ;
rank: 105
score: 99.20817735460069
patch: current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 105
score: 99.11981522409539
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point = current ;
rank: 105
score: 99.0035400390625
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 105
score: 98.95243835449219
patch: Integer current CaMeL Point = current CaMeL Point . int CaMeL Value ( ) ;
rank: 105
score: 98.88955453725961
patch: if ( ! iter . contains ( current CaMeL Point ) )
rank: 105
score: 98.86638726128473
patch: ++ 0 ; ++ iter ; iter ;
rank: 105
score: 98.788818359375
patch: if ( iter == null ; return ;
rank: 105
score: 98.74910736083984
patch: iter ++ ; ; ++ iter ;
rank: 106
score: 99.207861328125
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 106
score: 99.14434051513672
patch: int current CaMeL Point = current CaMeL Point . length - n CaMeL C ;
rank: 106
score: 99.11909315321181
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 106
score: 99.08766479492188
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL R ) ;
rank: 106
score: 99.00353285845588
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ;
rank: 106
score: 98.9523566750919
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point .
rank: 106
score: 98.865234375
patch: ++ iter ; for iter ;
rank: 106
score: 98.78861490885417
patch: if ( iter == null ; / ;
rank: 106
score: 98.74739583333333
patch: ++ iter ; ++ iter ; ; else
rank: 107
score: 99.14419991629464
patch: / / int n CaMeL C = current CaMeL Point . length ;
rank: 107
score: 99.11856882195724
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 107
score: 99.08718436104911
patch: int iter = current CaMeL Point . length : n CaMeL C ;
rank: 107
score: 98.95158555772569
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . ;
rank: 107
score: 98.88800920758929
patch: ++ iter ; if ( current CaMeL Point . length > 0 )
rank: 107
score: 98.7876309481534
patch: if ( . is CaMeL Empty ( ) ) {
rank: 107
score: 98.74630126953124
patch: ++ iter ; ++ max ; ++ iter ;
rank: 108
score: 99.20426432291667
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current ;
rank: 108
score: 99.1180648803711
patch: result = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 108
score: 99.08645629882812
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( n CaMeL R ) ;
rank: 108
score: 98.99915161132813
patch: ++ iter ; current = current CaMeL Point ;
rank: 108
score: 98.95085313585069
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ) ;
rank: 108
score: 98.88716634114583
patch: final ; int iter = current CaMeL Point . length ;
rank: 108
score: 98.78560093470982
patch: if ( ! iter . is CaMeL Empty ++ ) ++ iter ;
rank: 108
score: 98.74585571289063
patch: ++ iter ; ++ $STRING$ ; ++ iter ;
rank: 109
score: 99.20377604166667
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 109
score: 99.14119819972827
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair * current CaMeL Point . length ;
rank: 109
score: 99.11797223772321
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . length ;
rank: 109
score: 98.9503238075658
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . 0 ;
rank: 109
score: 98.88486328125
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 109
score: 98.78482259114584
patch: if ( iter != null || iter . is CaMeL Empty ( ) ;
rank: 110
score: 99.20282303659539
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 110
score: 99.14046223958333
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair - current CaMeL Point . length ;
rank: 110
score: 99.11769797585227
patch: int ++ iter = current CaMeL Point . length ;
rank: 110
score: 99.08442957261029
patch: final double weight CaMeL Matrix = current CaMeL Point . length - n CaMeL C ;
rank: 110
score: 98.99837646484374
patch: ++ iter = current CaMeL Point . length ;
rank: 110
score: 98.95008196149554
patch: result = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 110
score: 98.85885620117188
patch: ++ iter ; if iter ++ ;
rank: 110
score: 98.78481820913461
patch: if ( ! iter . is CaMeL Empty ( ; ) )
rank: 110
score: 98.7441635131836
patch: / ++ iter ; ++ iter ;
rank: 111
score: 99.199169921875
patch: int current CaMeL Point = n CaMeL C ;
rank: 111
score: 99.14005962171052
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 111
score: 99.11740451388889
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current : current CaMeL Point . length ;
rank: 111
score: 99.08383178710938
patch: int n CaMeL C = current CaMeL Point . length * n CaMeL C ;
rank: 111
score: 98.99751112196181
patch: ++ n CaMeL C ; if ( ;
rank: 111
score: 98.94998168945312
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ) ;
rank: 111
score: 98.78323800223214
patch: else { ++ 0 ; }
rank: 111
score: 98.74322509765625
patch: ++ iter ; ++ iter ; / / /
rank: 112
score: 99.13948277064732
patch: int n CaMeL C = current CaMeL Point . length ; / /
rank: 112
score: 99.11679416232639
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new double [ n CaMeL R ] ;
rank: 112
score: 99.08214460100446
patch: int iter = current CaMeL Point . length + n CaMeL C ;
rank: 112
score: 98.99749348958333
patch: ++ n CaMeL C + n CaMeL C ; ++ n CaMeL C ;
rank: 112
score: 98.9496711282169
patch: ret = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 112
score: 98.88219401041667
patch: try { current CaMeL Point = current CaMeL Point . length + 1 ;
rank: 112
score: 98.8569107055664
patch: ++ iter ; int iter * ;
rank: 112
score: 98.78304850260416
patch: if ( ! iter . is CaMeL Empty ( ) ) return null ;
rank: 112
score: 98.74320983886719
patch: ++ ++ iter ; ++ 1 ;
rank: 113
score: 99.11648380055146
patch: final int current CaMeL Point = n CaMeL R : current CaMeL Point . length ;
rank: 113
score: 99.08099043996711
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 113
score: 98.99719916449652
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ) ;
rank: 113
score: 98.94932972301136
patch: throw new Null CaMeL Argument CaMeL Exception ( ) ;
rank: 113
score: 98.88166155133929
patch: if ( ! iter . is CaMeL Na CaMeL N ( ) )
rank: 113
score: 98.85316467285156
patch: i ; ++ ; ++ iter ;
rank: 113
score: 98.7829833984375
patch: else { iter = iter . iter ; }
rank: 113
score: 98.74177381727431
patch: ++ iter ; ; if iter ++ ;
rank: 114
score: 99.11594935825893
patch: int iter = n CaMeL C - current CaMeL Point . length ;
rank: 114
score: 98.99715423583984
patch: ++ n CaMeL C ; ; ;
rank: 114
score: 98.94820149739583
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . ;
rank: 114
score: 98.88138834635417
patch: iter = current CaMeL Point . length ; ++ iter ;
rank: 114
score: 98.85251871744792
patch: ++ 1 ; ++ iter ; iter ;
rank: 114
score: 98.78151157924107
patch: if ( ! iter . is CaMeL Empty ++ ) . ; }
rank: 114
score: 98.74115753173828
patch: ++ iter ; iter / * /
rank: 115
score: 99.19473876953126
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ current CaMeL Point . length ;
rank: 115
score: 99.0802001953125
patch: int n CaMeL C = weight CaMeL Matrix . length ;
rank: 115
score: 98.9967510516827
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 115
score: 98.94667746803977
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 115
score: 98.87888009207589
patch: if ( current CaMeL Point . starts CaMeL With ( $STRING$ ) ;
rank: 115
score: 98.85115051269531
patch: this . iter ; ++ iter ;
rank: 115
score: 98.78133392333984
patch: if ( iter == null ; else
rank: 115
score: 98.74002511160714
patch: ++ iter ; ++ name ;
rank: 116
score: 99.11524309430804
patch: / ? Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 116
score: 99.07819680606617
patch: boolean converged = false ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 116
score: 98.99618709788604
patch: ++ current CaMeL Point [ n CaMeL C ] = current CaMeL Point . length ;
rank: 116
score: 98.94660500919117
patch: [ ] current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 116
score: 98.87821138822116
patch: current CaMeL Point = current CaMeL Point . length - 1 ;
rank: 116
score: 98.84976196289062
patch: ++ iter ; iter ; if ++ iter ;
rank: 116
score: 98.780419921875
patch: else { throw new Runtime CaMeL Exception ; }
rank: 116
score: 98.73854573567708
patch: ++ iter ; else ; ++ iter ;
rank: 117
score: 99.1917724609375
patch: ++ iter ; int current CaMeL Point = current CaMeL Point . length ;
rank: 117
score: 98.993310546875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ; }
rank: 117
score: 98.94429321289063
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point ;
rank: 117
score: 98.87810668945312
patch: Iterator iter = iter . iterator ( ) ;
rank: 117
score: 98.84835052490234
patch: ++ iter ; iter * * ;
rank: 117
score: 98.737841796875
patch: ++ iter ; ; ++ iter ; iter ;
rank: 118
score: 99.13712993421052
patch: final int n CaMeL C = current CaMeL Point . length : current CaMeL Point . length ;
rank: 118
score: 99.11482238769531
patch: Real CaMeL Matrix current = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 118
score: 99.07669270833334
patch: final double weight CaMeL Matrix = current CaMeL Point . length ( ) ;
rank: 118
score: 98.99179974724265
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 118
score: 98.94251360212054
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point
rank: 118
score: 98.84678649902344
patch: iter * ++ ; ++ iter ;
rank: 118
score: 98.77931213378906
patch: if ( ! iter == 0 ;
rank: 118
score: 98.73761664496527
patch: if iter = iter ; ++ iter ;
rank: 119
score: 99.13676452636719
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . solve ( ) ;
rank: 119
score: 98.99058131167763
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point . length ;
rank: 119
score: 98.94205078125
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL
rank: 119
score: 98.876953125
patch: final ; current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 119
score: 98.84642791748047
patch: ++ iter ; try + iter ;
rank: 119
score: 98.77803548177083
patch: else { this . iter = iter . length ; }
rank: 119
score: 98.73743896484375
patch: ++ iter ; iter / / = iter ;
rank: 120
score: 99.190673828125
patch: if ( n CaMeL C < n CaMeL C ) {
rank: 120
score: 99.13627406529018
patch: final int ++ n CaMeL C = current CaMeL Point . length ;
rank: 120
score: 99.07590157645089
patch: int n CaMeL C = current CaMeL Point . length : 0 ;
rank: 120
score: 98.94187825520834
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) target CaMeL Values .
rank: 120
score: 98.87518780048077
patch: current CaMeL Point = current CaMeL Point . length + 1 ;
rank: 120
score: 98.84495713975694
patch: ++ iter ; / * * / /
rank: 120
score: 98.7780253092448
patch: else { iter = iter . to CaMeL Array ++ ;
rank: 120
score: 98.73672824435764
patch: ++ iter ; ++ iter ; } else
rank: 121
score: 99.19029541015625
patch: current = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point , current CaMeL Point ) ;
rank: 121
score: 99.13557235054348
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ;
rank: 121
score: 99.11080169677734
patch: int current CaMeL Point = 0 ;
rank: 121
score: 99.07584635416667
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; }
rank: 121
score: 98.98992919921875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 121
score: 98.9400863647461
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 121
score: 98.84394836425781
patch: / * ] iter = iter ;
rank: 121
score: 98.7775370279948
patch: if ( ! iter . is CaMeL Empty ++ 1 ;
rank: 121
score: 98.73096381293402
patch: ++ iter ; ++ iter ; ; /
rank: 122
score: 99.13516898777173
patch: int current CaMeL Point = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 122
score: 98.9398662860577
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 122
score: 98.8749267578125
patch: final int iter = current CaMeL Point . length - n CaMeL C ;
rank: 122
score: 98.84327528211806
patch: ++ iter ; ++ * int iter ;
rank: 122
score: 98.77579439603366
patch: if ( . is CaMeL Empty ( ) ) return iter ;
rank: 122
score: 98.73092990451389
patch: ++ iter ; ++ iter ; else }
rank: 123
score: 99.18881064967105
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current ;
rank: 123
score: 99.13467407226562
patch: current = current CaMeL Point [ n CaMeL R ] ;
rank: 123
score: 99.11042336856617
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 123
score: 99.07583182198661
patch: if ( n CaMeL R < current CaMeL Point . length ) {
rank: 123
score: 98.9893310546875
patch: ++ n CaMeL C ; ++ iter = current CaMeL Point . length ;
rank: 123
score: 98.9395751953125
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 123
score: 98.87213134765625
patch: current CaMeL Point [ n CaMeL R ] = iter ;
rank: 123
score: 98.83913167317708
patch: try { ++ iter ; ++ iter ;
rank: 123
score: 98.77547781808036
patch: if ( . is CaMeL Empty ( ) ; return iter ; }
rank: 123
score: 98.73069763183594
patch: ++ iter ; ; ++ start ;
rank: 124
score: 99.18852887834821
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 124
score: 99.13413783482143
patch: ++ n CaMeL C ; current = current CaMeL Point . length ;
rank: 124
score: 99.07561492919922
patch: double Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ;
rank: 124
score: 98.98851776123047
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 124
score: 98.93910217285156
patch: -- iter ;
rank: 124
score: 98.87208048502605
patch: if ( ! iter . contains ( current ) ) {
rank: 124
score: 98.83816528320312
patch: ++ iter ; ++ 0 ; ;
rank: 124
score: 98.77426147460938
patch: if ( . is CaMeL Empty ( ) ) return ;
rank: 124
score: 98.73044162326389
patch: ++ new ++ ; ++ iter ; ;
rank: 125
score: 99.18838500976562
patch: ++ n CaMeL R ; current CaMeL Point = current CaMeL Point . length ;
rank: 125
score: 99.13331821986607
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 125
score: 99.10966186523437
patch: int n CaMeL C = n CaMeL C ;
rank: 125
score: 99.07257486979167
patch: final long [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 125
score: 98.98802839006696
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 125
score: 98.93805609809027
patch: return new Block CaMeL Real CaMeL Matrix ( current CaMeL Point , current CaMeL Point ) ;
rank: 125
score: 98.871533203125
patch: try { current CaMeL Point = current CaMeL Point . length - iter ;
rank: 125
score: 98.83803982204861
patch: ++ iter ; ++ ; int iter ;
rank: 125
score: 98.77394797585227
patch: if ( iter == 0 ; return iter ; }
rank: 125
score: 98.72982788085938
patch: ++ ; ++ iter ;
rank: 126
score: 99.13306681315105
patch: b = current CaMeL Point [ n CaMeL C ] ;
rank: 126
score: 99.10835774739583
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Weighted CaMeL Jacobian ( ) ;
rank: 126
score: 99.07242525540866
patch: final long n CaMeL C = current CaMeL Point . length ;
rank: 126
score: 98.93798828125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 126
score: 98.8680419921875
patch: if ( current CaMeL Point . starts CaMeL With ( $STRING$ ) )
rank: 126
score: 98.83773803710938
patch: ++ iter ; ++ 1 iter ;
rank: 126
score: 98.77311197916667
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ++ ;
rank: 126
score: 98.72844102647569
patch: ++ iter ; ++ iter ; else /
rank: 127
score: 99.18812962582237
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Point ( ) ;
rank: 127
score: 99.10727945963542
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current CaMeL Point = current CaMeL Point ;
rank: 127
score: 99.07177734375
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 127
score: 98.98729032628677
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 127
score: 98.93724524456522
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point .
rank: 127
score: 98.86789376395089
patch: if ( ! iter . is CaMeL Empty ( ) ; else {
rank: 127
score: 98.83648126775569
patch: ++ iter ; ++ iter ; while ++ iter ;
rank: 127
score: 98.7728271484375
patch: else { if ( ! iter . is CaMeL Empty ( ) )
rank: 128
score: 99.18782261439732
patch: if ( current CaMeL Point . length < n CaMeL R ) {
rank: 128
score: 99.10701127485795
patch: final int n CaMeL C = n CaMeL R ;
rank: 128
score: 99.0714619954427
patch: int iter = this . current CaMeL Point . length ;
rank: 128
score: 98.98710632324219
patch: int n CaMeL R = current CaMeL Point . length - n CaMeL R ;
rank: 128
score: 98.93656412760417
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 128
score: 98.86774088541667
patch: n CaMeL C = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 128
score: 98.83409881591797
patch: final ++ iter ; ++ iter ;
rank: 128
score: 98.772216796875
patch: if ( iter == null ) break ;
rank: 128
score: 98.72723388671875
patch: ++ iter ; ++ iter ; / *
rank: 129
score: 99.18735961914062
patch: final int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 129
score: 99.07115173339844
patch: double current CaMeL Point = current CaMeL Point . length + n CaMeL C ;
rank: 129
score: 98.98701985677083
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 129
score: 98.93640950520833
patch: n CaMeL C = current CaMeL Point . length - n CaMeL C ;
rank: 129
score: 98.83162689208984
patch: while ++ iter ; ++ iter ;
rank: 129
score: 98.77158610026042
patch: ++ [ 1 ] ;
rank: 130
score: 99.1866455078125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = new double [ n CaMeL C ] ;
rank: 130
score: 99.10516357421875
patch: Real CaMeL Matrix ( current CaMeL Point , current CaMeL Point ) ;
rank: 130
score: 99.07091522216797
patch: int n CaMeL C = current CaMeL Point . length - n CaMeL R ;
rank: 130
score: 98.93529510498047
patch: ( ( Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > )
rank: 130
score: 98.8662109375
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 130
score: 98.83158735795455
patch: ++ iter ; ++ iter ; ++ - iter ;
rank: 130
score: 98.77139892578126
patch: if ( . is CaMeL Empty ( ) )
rank: 130
score: 98.72222900390625
patch: ++ iter ; iter / ; /
rank: 131
score: 99.18625895182292
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 131
score: 99.10353306361607
patch: / * int n CaMeL C = target CaMeL Values . length ;
rank: 131
score: 98.9861348470052
patch: ++ n CaMeL R ; ++ n CaMeL C ; ;
rank: 131
score: 98.93382771809895
patch: super . do CaMeL Optimize ( current CaMeL Point ) ;
rank: 131
score: 98.77078247070312
patch: if ( ! iter . is CaMeL Empty ++ 0 ;
rank: 131
score: 98.72162737165179
patch: if iter ; ++ iter ;
rank: 132
score: 99.18619113498264
patch: current = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( current CaMeL Point ) ;
rank: 132
score: 99.12928682215073
patch: ++ n CaMeL C ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 132
score: 99.10280064174107
patch: int iter = n CaMeL R - current CaMeL Point . length ;
rank: 132
score: 99.06644694010417
patch: int iter = 0 ;
rank: 132
score: 98.98604329427083
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 132
score: 98.93255974264706
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 132
score: 98.86343149038461
patch: final int iter = current CaMeL Point . length + iter ;
rank: 132
score: 98.83013361150569
patch: ++ iter ; ++ iter ; ; ++ iter ;
rank: 132
score: 98.76975319602273
patch: else { this . iter = iter . iter ;
rank: 132
score: 98.72078857421874
patch: ++ $STRING$ ; ++ iter ; ++ iter ;
rank: 133
score: 99.18602159288194
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) . length ;
rank: 133
score: 99.12885974702381
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 133
score: 99.10220772879464
patch: Object [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 133
score: 98.98544921875
patch: ++ n CaMeL C - n CaMeL C ;
rank: 133
score: 98.93236083984375
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values , current CaMeL Point ) ;
rank: 133
score: 98.86300998263889
patch: iter = iter . iterator ( ) ;
rank: 133
score: 98.83006286621094
patch: ++ iter ; else iter * ;
rank: 133
score: 98.76816813151042
patch: if ( ! iter . is CaMeL Empty ; break ;
rank: 133
score: 98.72040557861328
patch: ++ iter ; ; return iter ;
rank: 134
score: 99.06337280273438
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( n CaMeL C ) ;
rank: 134
score: 98.98527526855469
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ;
rank: 134
score: 98.93154907226562
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point ;
rank: 134
score: 98.86245930989584
patch: try { current CaMeL Point = current CaMeL Point . length + iter ;
rank: 134
score: 98.82929823133681
patch: ++ iter ; ++ iter ; out ;
rank: 134
score: 98.768115234375
patch: else { iter = iter . iter ( ;
rank: 134
score: 98.71852111816406
patch: ++ $NUMBER$ ; ; ++ iter ;
rank: 135
score: 99.1002909342448
patch: if ( ! converged ;
rank: 135
score: 98.98412214006696
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair -- ;
rank: 135
score: 98.76641845703125
patch: if ( ! iter . is CaMeL Empty ++ ( ;
rank: 135
score: 98.71464538574219
patch: / ; ++ ; ++ iter ;
rank: 136
score: 99.12696748621323
patch: int iter = weight CaMeL Matrix . get CaMeL Row ( n CaMeL C ) ;
rank: 136
score: 99.10000430836396
patch: final Real CaMeL Matrix current = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 136
score: 98.98317307692308
patch: ++ n CaMeL C ; ++ n CaMeL C ; ; }
rank: 136
score: 98.92945149739583
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 136
score: 98.86147238991477
patch: iter = current CaMeL Point . length - iter ;
rank: 136
score: 98.8276596069336
patch: } ++ iter ; while iter ;
rank: 136
score: 98.76471819196429
patch: if ( ! iter . is CaMeL Empty ( ) ; return ;
rank: 136
score: 98.71129692925348
patch: ++ new ++ ; ; ++ iter ;
rank: 137
score: 99.12694251019022
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) n CaMeL C ;
rank: 137
score: 99.09996202256944
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Point ( ) ;
rank: 137
score: 99.0626220703125
patch: throw new Null CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 137
score: 98.98314666748047
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 137
score: 98.9293964092548
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 137
score: 98.82648468017578
patch: ++ iter ; else - iter ;
rank: 137
score: 98.76248931884766
patch: return iter ; } ++ iter ;
rank: 137
score: 98.71106828962054
patch: ++ iter ; ++ Math ;
rank: 138
score: 99.1837158203125
patch: try { Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 138
score: 99.12638346354167
patch: current = current CaMeL Point . length * current CaMeL Point . length ;
rank: 138
score: 98.92937677556819
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , current CaMeL Point ) ;
rank: 138
score: 98.85973011363636
patch: current = current CaMeL Point . length ( ) ;
rank: 138
score: 98.7624178799716
patch: if ( iter == null ; return null ; }
rank: 138
score: 98.71031188964844
patch: ++ iter ; ; -- iter ;
rank: 139
score: 99.12631460336539
patch: int ++ n CaMeL C = current CaMeL Point . length ;
rank: 139
score: 99.09978485107422
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current : current CaMeL Point ;
rank: 139
score: 98.98288198617789
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 139
score: 98.92862099095395
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL
rank: 139
score: 98.85963134765625
patch: if ( iter == this . ++ ) {
rank: 139
score: 98.82619222005208
patch: ++ iter ; int iter + 0 ;
rank: 139
score: 98.76239885602679
patch: if ( ! iter . is CaMeL Empty ( ) ; * /
rank: 139
score: 98.70829264322917
patch: iter ; ++ ; ++ iter ; ;
rank: 140
score: 99.181884765625
patch: current = weight CaMeL Matrix . get CaMeL Value ( current CaMeL Point ) ;
rank: 140
score: 99.12546900699013
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ) ;
rank: 140
score: 99.09964192708334
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ) ;
rank: 140
score: 99.06072319878473
patch: final double weight CaMeL Matrix = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 140
score: 98.98271179199219
patch: ++ iter ; if ( ! ;
rank: 140
score: 98.9274432842548
patch: private Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 140
score: 98.85896809895833
patch: if ( ! iter . compare CaMeL To ( current CaMeL Point ) )
rank: 140
score: 98.825439453125
patch: ++ iter ; break ;
rank: 140
score: 98.7617899576823
patch: else {
rank: 140
score: 98.70787702287946
patch: ++ iter ; ++ null ;
rank: 141
score: 99.12467041015626
patch: residuals CaMeL Weights [ iter ] = current ;
rank: 141
score: 99.09961655560662
patch: Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 141
score: 99.05919125205592
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( ) . length ;
rank: 141
score: 98.9268734580592
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL
rank: 141
score: 98.82500457763672
patch: ++ iter ; if iter iter ;
rank: 141
score: 98.76157052176339
patch: if ( ! iter . is CaMeL Empty ( ) ) return ;
rank: 141
score: 98.70740509033203
patch: / iter ++ ; ++ iter ;
rank: 142
score: 99.12405556126645
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) .
rank: 142
score: 98.9824282997533
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 142
score: 98.92671472886029
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 142
score: 98.8567138671875
patch: final int n CaMeL R = current CaMeL Point . length - 1 ;
rank: 142
score: 98.82264709472656
patch: } ++ iter ; int iter ;
rank: 142
score: 98.7613858309659
patch: if ( . is CaMeL Empty ( ; ) ;
rank: 142
score: 98.70669119698661
patch: ++ iter ; iter / /
rank: 143
score: 99.12391880580357
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; / /
rank: 143
score: 99.098876953125
patch: final int current CaMeL Point = n CaMeL C : current CaMeL Point . length ;
rank: 143
score: 99.05812581380208
patch: int Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ( ) ;
rank: 143
score: 98.9820556640625
patch: ++ n CaMeL C ; ; ++ n CaMeL C ; }
rank: 143
score: 98.9261833639706
patch: rs = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 143
score: 98.85608723958333
patch: final int n CaMeL R = current CaMeL Point . length ( ) ;
rank: 143
score: 98.82138400607639
patch: ++ iter ; iter ; * * /
rank: 143
score: 98.76033935546874
patch: if ( iter == null ; return false ;
rank: 143
score: 98.70269775390625
patch: ++ new ; ++ iter ; ++ iter ;
rank: 144
score: 99.1800896139706
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix ) ;
rank: 144
score: 99.12382289341518
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point ;
rank: 144
score: 99.09852818080357
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current : current ;
rank: 144
score: 98.98119439019098
patch: ++ iter ; current CaMeL Point = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 144
score: 98.92476806640624
patch: i = current CaMeL Point . length ; }
rank: 144
score: 98.85596720377605
patch: if ( current CaMeL Point . length > 1 ) {
rank: 144
score: 98.82012329101562
patch: try { ++ iter ; } ++ iter ;
rank: 144
score: 98.75941772460938
patch: if ( iter == 0 ) return null ;
rank: 144
score: 98.70185089111328
patch: ++ for ++ ; ++ iter ;
rank: 145
score: 99.17999877929688
patch: current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 145
score: 99.12352294921875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current ) ;
rank: 145
score: 99.09706467848558
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point ;
rank: 145
score: 98.92466735839844
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 145
score: 98.8555908203125
patch: n CaMeL C = current CaMeL Point . length + 1 ;
rank: 145
score: 98.82002258300781
patch: int iter ++ ; ++ iter ;
rank: 145
score: 98.70147705078125
patch: ++ 0 ;
rank: 146
score: 99.17976209852431
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . do CaMeL Optimize ( ) ;
rank: 146
score: 99.12328383501838
patch: b = current CaMeL Point . length ; current = current CaMeL Point . length ;
rank: 146
score: 99.09571940104166
patch: final double n CaMeL C = current CaMeL Point . length ( ) ;
rank: 146
score: 99.05714818050987
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . length - n CaMeL C ;
rank: 146
score: 98.97959798177084
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter ;
rank: 146
score: 98.92433076746323
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ) ;
rank: 146
score: 98.8552734375
patch: if ( ! iter . starts CaMeL With ( current CaMeL Point ) ;
rank: 146
score: 98.75815836588542
patch: if ( . is CaMeL Empty ( ) ) { }
rank: 146
score: 98.69660034179688
patch: ++ iter ; ++ iter ; ++ 0 ;
rank: 147
score: 99.17975616455078
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point ;
rank: 147
score: 99.05652465820313
patch: final Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 147
score: 98.9791015625
patch: ++ n CaMeL C ; ++ n CaMeL C + n CaMeL C ;
rank: 147
score: 98.923291015625
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point . 0 ;
rank: 147
score: 98.85413614908855
patch: while ( iter == current CaMeL Point . length ) {
rank: 147
score: 98.81956481933594
patch: ++ iter ; ++ iter ; *
rank: 147
score: 98.69624328613281
patch: ++ iter ; ++ iter ; iter
rank: 148
score: 99.17789713541667
patch: current = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 148
score: 99.09532973345588
patch: Real CaMeL Matrix weight CaMeL Matrix = new Block CaMeL Real CaMeL Matrix ( ) ;
rank: 148
score: 99.05587768554688
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 148
score: 98.97906494140625
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 148
score: 98.92320667613636
patch: i = current CaMeL Point . length ; ++ ;
rank: 148
score: 98.8540508563702
patch: ++ iter ; current CaMeL Point [ n CaMeL C ] ;
rank: 148
score: 98.8169677734375
patch: ++ iter ; ++ * * ++ iter ;
rank: 148
score: 98.75510079520089
patch: if ( iter == 0 )
rank: 148
score: 98.69565836588542
patch: ++ * ++ iter ; ++ iter ;
rank: 149
score: 99.17704692639802
patch: int n CaMeL C = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 149
score: 99.12289428710938
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 149
score: 98.97898512620192
patch: ++ n CaMeL C ; if ; ++ n CaMeL C ;
rank: 149
score: 98.9228515625
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair >
rank: 149
score: 98.85397338867188
patch: final int iter 1 = current CaMeL Point . length ;
rank: 149
score: 98.81643337673611
patch: ++ iter ; ++ 1 + iter ;
rank: 149
score: 98.75489095052083
patch: if ( iter == null && ! . is CaMeL Empty ( ) ;
rank: 149
score: 98.69487169053819
patch: ++ iter ; ++ ++ iter ; else
rank: 150
score: 99.12255859375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( n CaMeL C ) ;
rank: 150
score: 99.09367231889205
patch: final int current CaMeL Point = n CaMeL R ;
rank: 150
score: 99.05459594726562
patch: double [ ] current CaMeL Point = null ;
rank: 150
score: 98.977783203125
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 150
score: 98.92167394301471
patch: ( ( Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > ) ;
rank: 150
score: 98.8538485440341
patch: if ; iter = current CaMeL Point . length ;
rank: 150
score: 98.81584028764205
patch: ++ iter ; ++ iter ; ++ iter ; }
rank: 150
score: 98.75453186035156
patch: else { * * * * /
rank: 150
score: 98.69393310546874
patch: ++ iter ; iter / ; ++ iter ;
rank: 151
score: 99.17654239430146
patch: return compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point , current CaMeL Point ) ;
rank: 151
score: 99.12083435058594
patch: final int n CaMeL C = current CaMeL Point [ n CaMeL C ] ;
rank: 151
score: 99.09360177176339
patch: int current CaMeL Point = n CaMeL C - n CaMeL C ;
rank: 151
score: 99.05437622070312
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , target CaMeL Values ) ;
rank: 151
score: 98.97727966308594
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 151
score: 98.92153695913461
patch: y = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 151
score: 98.85258265904018
patch: if ( iter instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 151
score: 98.75390625
patch: else { iter = iter . to CaMeL Array ( ) ; }
rank: 151
score: 98.69373914930556
patch: ++ iter ; ++ iter ; ; }
rank: 152
score: 99.17647976345486
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point . length ;
rank: 152
score: 99.1206942471591
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 152
score: 99.09254807692308
patch: final double weight CaMeL Matrix = target CaMeL Values . length ;
rank: 152
score: 98.92124837239584
patch: result = new Block CaMeL Real CaMeL Matrix ( current CaMeL Point ) ;
rank: 152
score: 98.85171072823661
patch: ++ iter ; Thread . current CaMeL Thread ( ) . start ;
rank: 152
score: 98.75322808159723
patch: else { ++ iter ; break ; }
rank: 152
score: 98.69326443142361
patch: ++ iter ; iter / ; / /
rank: 153
score: 99.17538016183036
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 153
score: 99.08932495117188
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ( ) ;
rank: 153
score: 99.05208093979779
patch: final int n CaMeL C = current CaMeL Point . length - n CaMeL C ;
rank: 153
score: 98.9759012858073
patch: ++ iter ; current CaMeL Point = current CaMeL Point ;
rank: 153
score: 98.8516337076823
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 153
score: 98.81382921006944
patch: ++ iter ; if iter + iter ;
rank: 153
score: 98.75270298549107
patch: if ( ! iter . is CaMeL Empty ( ) ) { }
rank: 153
score: 98.6910400390625
patch: ++ iter ; ; iter ++ ;
rank: 154
score: 99.17501831054688
patch: int n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 154
score: 99.11739676339286
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ;
rank: 154
score: 99.0517333984375
patch: int n CaMeL C = current CaMeL Point . - n CaMeL C ;
rank: 154
score: 98.97579616970486
patch: ++ iter ; current = ++ iter ;
rank: 154
score: 98.919921875
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . int CaMeL Value ( ) ;
rank: 154
score: 98.85019356863839
patch: int iter = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 154
score: 98.8125991821289
patch: ++ iter ; ++ - $STRING$ ;
rank: 154
score: 98.752294921875
patch: if ( . is CaMeL Empty ( ) ) . ++ iter ; }
rank: 154
score: 98.68946533203125
patch: ++ iter ; ++ iter ; else iter ;
rank: 155
score: 99.11703973067434
patch: final double n CaMeL C = current CaMeL Point . length * current CaMeL Point . length ;
rank: 155
score: 99.0885009765625
patch: int n CaMeL C = n CaMeL R - n CaMeL C ;
rank: 155
score: 99.05096435546875
patch: double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 155
score: 98.9743408203125
patch: long iter = current CaMeL Point . length ; ++ n CaMeL C ;
rank: 155
score: 98.91893717447917
patch: n CaMeL C = current CaMeL Point . int CaMeL Value ( ) ;
rank: 155
score: 98.8498868075284
patch: j = current CaMeL Point . length - 1 ;
rank: 155
score: 98.81092071533203
patch: ++ iter ; iter iter * /
rank: 155
score: 98.75131460336539
patch: if ( ! iter . is CaMeL Empty ( iter ) ;
rank: 155
score: 98.6881815592448
patch: if iter = iter ;
rank: 156
score: 99.17244262695313
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R , current CaMeL Point ) ;
rank: 156
score: 99.11323686079545
patch: final double length = current CaMeL Point . length ;
rank: 156
score: 99.08794759114583
patch: final int n CaMeL C = n CaMeL C - n CaMeL C ;
rank: 156
score: 99.05037195542279
patch: boolean converged = false ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 156
score: 98.97378743489584
patch: ++ iter = current . index CaMeL Of ( current CaMeL Point ) ;
rank: 156
score: 98.849462890625
patch: ++ iter ; if ( ! iter . is CaMeL Empty ( ) )
rank: 156
score: 98.81040261008523
patch: ++ iter ; ++ iter ; } ++ iter ;
rank: 156
score: 98.74990505642361
patch: else { ++ * * iter ; }
rank: 156
score: 98.68743218315973
patch: ++ iter ; ; if ++ 1 ;
rank: 157
score: 99.17215169270834
patch: int current CaMeL Point = target CaMeL Values [ current CaMeL Point ] ;
rank: 157
score: 99.11292613636364
patch: ++ current CaMeL Point [ n CaMeL C ] ;
rank: 157
score: 99.08775916466347
patch: final double n CaMeL C = target CaMeL Values . length ;
rank: 157
score: 99.05030014935662
patch: double weight CaMeL Matrix [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 157
score: 98.97347318209134
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 157
score: 98.91871178668478
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 157
score: 98.84836050180289
patch: n CaMeL C = current CaMeL Point . length - iter ;
rank: 157
score: 98.80985260009766
patch: ++ iter ; if - iter ;
rank: 157
score: 98.748046875
patch: if ( ! iter . is CaMeL Empty ( ;
rank: 157
score: 98.68742540147569
patch: ++ iter ; iter / / / /
rank: 158
score: 99.17136101973684
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 158
score: 99.05017903645833
patch: int double [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 158
score: 98.97279710036058
patch: ++ n CaMeL C ; ; ++ n CaMeL C ; ;
rank: 158
score: 98.918701171875
patch: super . do CaMeL Optimize ( current CaMeL Point , current CaMeL Point ) ;
rank: 158
score: 98.84803118024554
patch: int n CaMeL C = current CaMeL Point . length + iter ;
rank: 158
score: 98.80806732177734
patch: ++ iter ; ++ - * /
rank: 158
score: 98.74796840122768
patch: if ( ! iter . is CaMeL Empty ( ) ) . ;
rank: 159
score: 99.17117513020834
patch: if ( current CaMeL Point . length < n CaMeL R ] ) {
rank: 159
score: 99.11084856305804
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 159
score: 99.04979705810547
patch: int n CaMeL C = current CaMeL Point . length : n CaMeL R ;
rank: 159
score: 98.9709228515625
patch: double iter = current CaMeL Point . length ; ++ n CaMeL C ;
rank: 159
score: 98.91834077380952
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = current CaMeL Point . length ;
rank: 159
score: 98.84797807173295
patch: final Integer iter = current CaMeL Point . length ;
rank: 159
score: 98.80771484375
patch: ++ iter ; ++ * / ++ iter ;
rank: 159
score: 98.74787902832031
patch: ++ iter [ 0 ] ; }
rank: 159
score: 98.68473052978516
patch: ++ $STRING$ ; ; ++ iter ;
rank: 160
score: 99.04972759046052
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 160
score: 98.97059733072916
patch: ++ n CaMeL C ; ++ n CaMeL C ; this . ++ ;
rank: 160
score: 98.84787326388889
patch: ++ current CaMeL Point [ 0 ] ;
rank: 160
score: 98.80741882324219
patch: ++ iter ; iter ; / ;
rank: 160
score: 98.746923828125
patch: if ( . is CaMeL Empty ( ; * 0 . 0 ) ;
rank: 160
score: 98.68455505371094
patch: ++ iter ; ; ++ max ;
rank: 161
score: 99.17098388671874
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , current CaMeL Point ) ;
rank: 161
score: 99.08587646484375
patch: residuals CaMeL Weights [ iter ] = current CaMeL Point ;
rank: 161
score: 99.04922003495066
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row CaMeL Matrix ( ) ;
rank: 161
score: 98.97004137541118
patch: current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ( $STRING$ ) ;
rank: 161
score: 98.91795131138393
patch: state = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 161
score: 98.84618123372395
patch: if ( iter != current CaMeL Point . length ) {
rank: 161
score: 98.80568440755208
patch: ++ 1 ++ iter ;
rank: 161
score: 98.74671519886364
patch: ++ < 0 > iter = iter . length ;
rank: 161
score: 98.68437364366319
patch: ++ iter ; iter ++ ; ++ ;
rank: 162
score: 99.1097347861842
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 162
score: 99.0856574563419
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ 0 ] ;
rank: 162
score: 99.04910098805146
patch: int n CaMeL C = current CaMeL Point . length ; int iter = 0 ;
rank: 162
score: 98.96816781850961
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 162
score: 98.91758661684783
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = 0 ;
rank: 162
score: 98.84603177584134
patch: int iter = current . index CaMeL Of ( $STRING$ ) ;
rank: 162
score: 98.80537414550781
patch: } ++ iter ; ++ 1 ;
rank: 162
score: 98.74598039899554
patch: if ( ! iter . is CaMeL Empty ( ; ) continue ;
rank: 162
score: 98.6839599609375
patch: ++ iter ; ++ true ;
rank: 163
score: 99.08556019176136
patch: final int iter = residuals CaMeL Weights . length ;
rank: 163
score: 98.96781412760417
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair . ++ ;
rank: 163
score: 98.9171142578125
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair
rank: 163
score: 98.84511893136161
patch: int iter = current CaMeL Point . length - n CaMeL R ;
rank: 163
score: 98.80522155761719
patch: ++ 1 ; ++ - iter ;
rank: 163
score: 98.74570875901442
patch: if ( ! iter . is CaMeL Empty ( && ) ;
rank: 164
score: 99.10833740234375
patch: int iter = n CaMeL C && current CaMeL Point . length ;
rank: 164
score: 99.0484619140625
patch: final double [ ] weight CaMeL Matrix = current CaMeL Point . length ;
rank: 164
score: 98.96733747209821
patch: ++ iter = current . index CaMeL Of ( current CaMeL Point ;
rank: 164
score: 98.91697782628677
patch: list = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 164
score: 98.84471784319196
patch: if ( ! iter . is CaMeL Na CaMeL N ( ) ;
rank: 164
score: 98.74554036458333
patch: if ( ! iter . is CaMeL Empty ( ; ) ++ iter ;
rank: 164
score: 98.6822280883789
patch: { ++ iter ; ++ iter ;
rank: 165
score: 99.17039271763393
patch: current = weight CaMeL Matrix . get CaMeL Entry ( current ) ;
rank: 165
score: 99.10797729492188
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point . get CaMeL Value ( ) ;
rank: 165
score: 99.04779411764706
patch: final double current CaMeL Point = current CaMeL Point . length - n CaMeL C ;
rank: 165
score: 98.9169677734375
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix , current CaMeL Point ) ;
rank: 165
score: 98.80406188964844
patch: ++ iter ; for ++ 1 ;
rank: 165
score: 98.745458984375
patch: if ( ! iter . is CaMeL Empty ( ; ) . max ;
rank: 165
score: 98.68193708147321
patch: ++ iter ; ++ min ;
rank: 166
score: 99.16945286800987
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( ) ;
rank: 166
score: 99.10712224786931
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 166
score: 99.04779052734375
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Value ( current CaMeL Point ) ;
rank: 166
score: 98.96396108774039
patch: current = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 166
score: 98.91648954503677
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . ) ;
rank: 166
score: 98.84407552083333
patch: ++ iter ; if ( ! iter . is CaMeL Empty ( ) ;
rank: 166
score: 98.80314127604167
patch: ++ iter ; ++ iter ; ; *
rank: 166
score: 98.74458530970982
patch: else { ++ * iter ;
rank: 166
score: 98.68045654296876
patch: ++ this ; ++ iter ; ++ iter ;
rank: 167
score: 99.16904810855263
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Point ( current CaMeL Point ) ;
rank: 167
score: 99.10557338169643
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair * current ;
rank: 167
score: 99.04731750488281
patch: double current CaMeL Point = current CaMeL Point . length - n CaMeL R ;
rank: 167
score: 98.96367536272321
patch: ++ n CaMeL C ; if ( current CaMeL Point . length ;
rank: 167
score: 98.84281412760417
patch: if ( current CaMeL Point . length == 1 ) {
rank: 167
score: 98.74405670166016
patch: else { ++ * * * /
rank: 167
score: 98.67991807725694
patch: ++ iter ; ; else ++ iter ;
rank: 168
score: 99.104541015625
patch: final String [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 168
score: 99.04490443638393
patch: boolean converged = current CaMeL Point . length - n CaMeL C ;
rank: 168
score: 98.96308729383681
patch: int n CaMeL R = current CaMeL Point . length ; ++ n CaMeL C ; ;
rank: 168
score: 98.91605631510417
patch: Iterator n CaMeL C = current CaMeL Point . 0 ;
rank: 168
score: 98.84256998697917
patch: current CaMeL Point = current CaMeL Point . trim ( ) . length ;
rank: 168
score: 98.80020141601562
patch: ++ iter ; iter + 0 ;
rank: 168
score: 98.74324174360795
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 168
score: 98.67789916992187
patch: ++ iter ; ++ iter ; throw iter ;
rank: 169
score: 99.16721062911184
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ n CaMeL R ] ;
rank: 169
score: 99.10447095788044
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 169
score: 99.04445513556985
patch: final double n CaMeL C = current CaMeL Point . length - n CaMeL C ;
rank: 169
score: 98.9628018465909
patch: ++ iter ; this . ++ n CaMeL C ;
rank: 169
score: 98.91548374720982
patch: Iterator n CaMeL C = current CaMeL Point . n CaMeL C ;
rank: 169
score: 98.84229329427083
patch: current CaMeL Point = current CaMeL Point . length ( ) - 1 ;
rank: 169
score: 98.80014038085938
patch: ++ 0 ; ++ - iter ;
rank: 169
score: 98.74305943080357
patch: if ( ! iter . is CaMeL Empty ( ) ; continue ;
rank: 169
score: 98.67726643880208
patch: ++ iter ; ++ iter + iter ;
rank: 170
score: 99.166748046875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current = current CaMeL Point . length ;
rank: 170
score: 99.08158365885417
patch: final double [ ] current CaMeL Point = this . current CaMeL Point ;
rank: 170
score: 99.04440487132354
patch: int iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 170
score: 98.96254069010416
patch: current = current CaMeL Point . length ( ) - n CaMeL C ;
rank: 170
score: 98.91523742675781
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 170
score: 98.84228515625
patch: if ( current CaMeL Point . length == 0 )
rank: 170
score: 98.7421630859375
patch: if ( iter == null ) return iter ;
rank: 170
score: 98.67666015625
patch: ++ iter ; ++ iter ; ++ max ;
rank: 171
score: 99.16615295410156
patch: current = weight CaMeL Matrix . get CaMeL Point ( current CaMeL Point ) ;
rank: 171
score: 98.9624252319336
patch: ++ n CaMeL C ; if ;
rank: 171
score: 98.91506778492646
patch: ( ( Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > ) {
rank: 171
score: 98.84215291341145
patch: if ( current CaMeL Point . length > iter ) {
rank: 171
score: 98.7994873046875
patch: ++ iter ; ++ iter ; ++ value ;
rank: 171
score: 98.741162109375
patch: if ( ! iter . is CaMeL Empty ( ; ) throw null ;
rank: 172
score: 99.165673828125
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point , current CaMeL Point ) ;
rank: 172
score: 99.10350452769886
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ) ;
rank: 172
score: 99.0796786221591
patch: final int converged = current CaMeL Point . length ;
rank: 172
score: 99.0437075966283
patch: int iter = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) . length ;
rank: 172
score: 98.96239295372597
patch: ++ iter ; double iter = current CaMeL Point . length ;
rank: 172
score: 98.9149169921875
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 172
score: 98.84209735576923
patch: iter = current CaMeL Point . length - n CaMeL C ;
rank: 172
score: 98.79898071289062
patch: ++ iter ; else return iter ;
rank: 172
score: 98.74093862680289
patch: if ( . is CaMeL Empty ( ) ) throw null ;
rank: 172
score: 98.6760762532552
patch: ++ iter ; ; iter
rank: 173
score: 99.10165550595238
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 173
score: 99.07920619419643
patch: try { Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 173
score: 98.96221923828125
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 173
score: 98.84195963541667
patch: n CaMeL C = current CaMeL Point . length ( ) - 1 ;
rank: 173
score: 98.74069649832589
patch: if ( ! iter . is CaMeL Empty ; this . iter ;
rank: 173
score: 98.67557373046876
patch: ++ null ; ++ iter ; ++ iter ;
rank: 174
score: 99.16550118582589
patch: current CaMeL Point [ 0 ] = current CaMeL Point . length ;
rank: 174
score: 99.07881673177083
patch: throw new Null CaMeL Argument CaMeL Exception ( ) ; }
rank: 174
score: 98.91471354166667
patch: if ( current CaMeL Point . length < n CaMeL C ; ) {
rank: 174
score: 98.83959197998047
patch: while ( iter != null ) {
rank: 174
score: 98.79826354980469
patch: ++ iter ; ++ * iter ;
rank: 174
score: 98.74066925048828
patch: Object iter ; if ++ iter ;
rank: 174
score: 98.67529296875
patch: ++ max ; ++ iter ; ++ iter ;
rank: 175
score: 99.163427734375
patch: final int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 175
score: 99.101318359375
patch: int current CaMeL Point = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 175
score: 99.04177676930146
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . length ( ) ;
rank: 175
score: 98.9610595703125
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 175
score: 98.91460890997024
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > ++ ;
rank: 175
score: 98.83927699497768
patch: if ( ! iter . compare CaMeL To ( current ) ) {
rank: 175
score: 98.79794311523438
patch: ++ iter ; iter iter out ;
rank: 175
score: 98.73911830357143
patch: if ( ! iter . is CaMeL Empty ++ ) . ; else
rank: 175
score: 98.674560546875
patch: ++ true ; ++ iter ; ++ iter ;
rank: 176
score: 99.1620342548077
patch: current = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 176
score: 99.10063825334821
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix ;
rank: 176
score: 99.07839786305146
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ) ;
rank: 176
score: 99.04135131835938
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , weight CaMeL Matrix ) ;
rank: 176
score: 98.96039496527777
patch: int n CaMeL C = current CaMeL Point . length ; ++ n CaMeL C ; ;
rank: 176
score: 98.91460418701172
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point = current ;
rank: 176
score: 98.83877328725961
patch: current CaMeL Point = current CaMeL Point . trim ( ) ;
rank: 176
score: 98.79638671875
patch: ++ iter ; try { ++ iter ; ;
rank: 176
score: 98.73866624098558
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ;
rank: 176
score: 98.67306179470486
patch: else ; ++ iter ; ++ iter ;
rank: 177
score: 99.09927978515626
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Block CaMeL Real CaMeL Matrix ( current ) ;
rank: 177
score: 99.07820638020833
patch: int n CaMeL R = target CaMeL Values . length ;
rank: 177
score: 99.04071044921875
patch: int iter = this . target CaMeL Values . length ;
rank: 177
score: 98.95996771918402
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 177
score: 98.91397758152173
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 177
score: 98.838232421875
patch: final int iter = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 177
score: 98.79578993055556
patch: ++ iter ; else if ++ iter ;
rank: 177
score: 98.73800223214286
patch: if ( ! iter . is CaMeL Empty ; ++ 0 . ;
rank: 177
score: 98.67231580946181
patch: ++ ++ ++ iter ; ++ iter ;
rank: 178
score: 99.16021728515625
patch: if ( n CaMeL C < n CaMeL R ) {
rank: 178
score: 99.0986572265625
patch: double n CaMeL C = current CaMeL Point [ n CaMeL C ] ;
rank: 178
score: 99.07790120442708
patch: final Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 178
score: 98.959765625
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 178
score: 98.913232421875
patch: current CaMeL Point = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 178
score: 98.83597506009616
patch: current CaMeL Point = current CaMeL Point . length + iter ;
rank: 178
score: 98.79446750217014
patch: ++ iter ; iter ; * / /
rank: 178
score: 98.67064751519098
patch: ++ iter ; ++ ( ++ iter ;
rank: 179
score: 99.15971544053819
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair . solve ( current CaMeL Point ) ;
rank: 179
score: 99.09848022460938
patch: int iter = n CaMeL C - n CaMeL C ;
rank: 179
score: 99.07763671875
patch: final int n CaMeL C = current CaMeL Point . length : n CaMeL C ;
rank: 179
score: 99.03936089409723
patch: b = current CaMeL Point . length ;
rank: 179
score: 98.95839029947916
patch: ++ n CaMeL C ; ++ n CaMeL C - n CaMeL C ;
rank: 179
score: 98.9124755859375
patch: if ( n CaMeL C < n CaMeL C ; ) {
rank: 179
score: 98.83577473958333
patch: if ( ! iter . is CaMeL Empty ; n CaMeL C ++ ;
rank: 179
score: 98.79434204101562
patch: ++ iter ; ++ value ; ++ iter ;
rank: 179
score: 98.73788888113839
patch: if ( ! iter . is CaMeL Empty ( ; iter ++ ;
rank: 180
score: 99.15943196614583
patch: current = new Block CaMeL Real CaMeL Matrix ( current CaMeL Point ) ;
rank: 180
score: 99.03876410590277
patch: final Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 180
score: 98.95804595947266
patch: ++ n CaMeL C ; ++ n CaMeL C ; System . out . ;
rank: 180
score: 98.83575439453125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 180
score: 98.79425048828125
patch: ++ iter ; if iter ; iter ;
rank: 180
score: 98.7375717163086
patch: if ( iter == 0 ; }
rank: 180
score: 98.67033386230469
patch: ++ new ; ++ iter ; ;
rank: 181
score: 99.15846604567308
patch: final Object current CaMeL Point = current CaMeL Point . length ;
rank: 181
score: 99.09669799804688
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > = current ;
rank: 181
score: 98.91170601222827
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = current ;
rank: 181
score: 98.8347919170673
patch: current CaMeL Point = current CaMeL Point . length - iter ;
rank: 181
score: 98.79412841796875
patch: ++ iter ; try ; if ++ iter ;
rank: 181
score: 98.73686218261719
patch: else { / * * / }
rank: 181
score: 98.67012532552083
patch: ++ iter ; ++ iter ; iterator ;
rank: 182
score: 99.157421875
patch: int current CaMeL Point = target CaMeL Values [ n CaMeL R ] ;
rank: 182
score: 99.09562683105469
patch: b = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 182
score: 99.07643755744485
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ iter ] ;
rank: 182
score: 99.03838348388672
patch: int n CaMeL C = current CaMeL Point . length + n CaMeL R ;
rank: 182
score: 98.95698852539063
patch: ++ iter ; ; this . ++ iter ;
rank: 182
score: 98.834765625
patch: current CaMeL Point [ iter ] = iter ;
rank: 182
score: 98.79269845145089
patch: ++ name ; ++ iter ;
rank: 182
score: 98.73677571614583
patch: if ( iter == 0 ) return ;
rank: 182
score: 98.6671371459961
patch: if iter * ; ++ iter ;
rank: 183
score: 99.093359375
patch: int n CaMeL C = current CaMeL Point [ n CaMeL R ] ;
rank: 183
score: 99.03729248046875
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( 0 ) ;
rank: 183
score: 98.95685221354167
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 183
score: 98.91035970052083
patch: n CaMeL R = current CaMeL Point . length ; }
rank: 183
score: 98.79178873697917
patch: i ++ ; ++ ; int iter ;
rank: 183
score: 98.73512098524306
patch: if ( iter == iter ; break ;
rank: 183
score: 98.667041015625
patch: ++ iter ; ++ ++ iter ; iter ;
rank: 184
score: 99.15689425998264
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current = current CaMeL Point . length ;
rank: 184
score: 99.09299142020089
patch: int current CaMeL Point = current * current CaMeL Point . length ;
rank: 184
score: 99.03672485351562
patch: final double n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 184
score: 98.95674133300781
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 184
score: 98.83324085582386
patch: if ( iter < current CaMeL Point . length )
rank: 184
score: 98.79175914417614
patch: ++ iter ; ++ iter ; for ++ iter ;
rank: 184
score: 98.73511505126953
patch: if ( < 0 ; break ;
rank: 184
score: 98.66700439453125
patch: ++ iter ; ++ name ; ++ iter ;
rank: 185
score: 99.03628976004464
patch: int iter = current CaMeL Point . length : n CaMeL R ;
rank: 185
score: 98.95658656529018
patch: ++ iter ; current = current CaMeL Point . length ( ) ;
rank: 185
score: 98.90987396240234
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 185
score: 98.8332275390625
patch: final int n CaMeL C = current CaMeL Point . length + 1 ;
rank: 185
score: 98.790771484375
patch: ++ iter ; int iter ; ++ iter ;
rank: 185
score: 98.73478560014205
patch: if ( ! iter . contains ( iter ) ;
rank: 185
score: 98.6650146484375
patch: ++ iter ; ++ this ; ++ iter ;
rank: 186
score: 99.15604440789474
patch: int < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current CaMeL Point . length ;
rank: 186
score: 99.09276181175595
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) this ;
rank: 186
score: 99.03597412109374
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 186
score: 98.90970284598214
patch: rs = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 186
score: 98.83268229166667
patch: ++ iter + 1 ;
rank: 186
score: 98.79038492838542
patch: ++ iter ; iter ; int 1 ;
rank: 186
score: 98.73414963942308
patch: if ( ! iter . is CaMeL Empty ++ ) return ;
rank: 186
score: 98.664306640625
patch: ++ iter ; iter ; ++ ;
rank: 187
score: 99.155810546875
patch: if ( current CaMeL Point . length < n CaMeL C ] ) {
rank: 187
score: 99.03572351792279
patch: final Real CaMeL Matrix [ ] residuals CaMeL Weights = current CaMeL Point . length ;
rank: 187
score: 98.95623779296875
patch: ++ iter * / * /
rank: 187
score: 98.90916806175595
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 187
score: 98.78976440429688
patch: else ++ iter ; ++ 1 ;
rank: 187
score: 98.73387315538194
patch: else { if ++ iter ; * /
rank: 187
score: 98.66412353515625
patch: ++ 1 ;
rank: 188
score: 99.09230669806985
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 188
score: 98.95621744791667
patch: ++ iter ; current CaMeL Point = ;
rank: 188
score: 98.90911254882812
patch: i = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 188
score: 98.78883192274306
patch: ++ iter ; ++ 1 ; iter ;
rank: 188
score: 98.73375701904297
patch: else { / * ; * /
rank: 188
score: 98.6629409790039
patch: ++ * iter ; ++ iter ;
rank: 189
score: 99.091943359375
patch: current = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 189
score: 99.03438895089286
patch: double weight CaMeL Matrix = current CaMeL Point . length ( ) ;
rank: 189
score: 98.95532904730902
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ; }
rank: 189
score: 98.90883567116477
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 189
score: 98.83053152901786
patch: if ( current CaMeL Point . length <= n CaMeL C ) {
rank: 189
score: 98.7872314453125
patch: try { ++ iter ; ;
rank: 189
score: 98.73374720982143
patch: else { iter ++ ; }
rank: 189
score: 98.66212681361607
patch: ++ false ; ++ iter ;
rank: 190
score: 99.15409633091518
patch: current = weight CaMeL Matrix . get CaMeL Entry ( iter ) ;
rank: 190
score: 99.09153119255515
patch: int iter = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 190
score: 99.0342548076923
patch: boolean converged = checker . converged ( current CaMeL Point ) ;
rank: 190
score: 98.90845743815105
patch: ] current CaMeL Point = current CaMeL Point . length ;
rank: 190
score: 98.82938929966518
patch: int n CaMeL R = current CaMeL Point . length + iter ;
rank: 190
score: 98.7871322631836
patch: ++ iter ; start - iter ;
rank: 190
score: 98.73369806463069
patch: if ( iter != null ; return iter ; }
rank: 190
score: 98.66199951171875
patch: ++ iter ; ++ iter ; iter ; }
rank: 191
score: 99.09076891447368
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Weighted CaMeL Jacobian ( current ) ;
rank: 191
score: 99.0730313387784
patch: final double weight CaMeL Matrix = current CaMeL Point ;
rank: 191
score: 99.03184407552084
patch: / * * compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 191
score: 98.90842848557692
patch: y = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 191
score: 98.82816569010417
patch: while ( iter < current CaMeL Point . length ) {
rank: 191
score: 98.78604125976562
patch: ++ iter ; ++ - * ;
rank: 191
score: 98.733642578125
patch: if ( ! iter . is CaMeL Empty ++ $NUMBER$ ;
rank: 192
score: 99.09072043678977
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 192
score: 99.072509765625
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point ;
rank: 192
score: 99.03174641927083
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; ++ iter ;
rank: 192
score: 98.95144992404514
patch: current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ( $STRING$ ;
rank: 192
score: 98.90828804347827
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Row CaMeL Vector ( ) ;
rank: 192
score: 98.8279696377841
patch: int iter = current CaMeL Point [ 0 ] ;
rank: 192
score: 98.78340148925781
patch: else ++ iter ; int iter ;
rank: 192
score: 98.73274448939732
patch: if ( ! iter . is CaMeL Empty ( ; iter -- ;
rank: 192
score: 98.65773518880208
patch: ++ ( ++ iter ;
rank: 193
score: 99.08936982996323
patch: m = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 193
score: 99.07109239366319
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 193
score: 99.03099907769098
patch: b = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 193
score: 98.9509989420573
patch: ++ iter = current CaMeL Point . length ( ) ;
rank: 193
score: 98.9079256924716
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 193
score: 98.82611638849431
patch: current CaMeL Point [ iter ++ ] = iter ;
rank: 193
score: 98.78251647949219
patch: i { ++ ; ++ iter ;
rank: 193
score: 98.73193359375
patch: else { if ++ iter ; break ; }
rank: 193
score: 98.65431043836806
patch: ++ iter ; ++ iter ; else *
rank: 194
score: 98.95061577690973
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 194
score: 98.90779976222827
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 194
score: 98.82347523082386
patch: final ; iter = current CaMeL Point . length ;
rank: 194
score: 98.78227403428819
patch: ++ iter ; ++ * * ; /
rank: 194
score: 98.730712890625
patch: if ( iter == null ; break ; }
rank: 194
score: 98.65413818359374
patch: ++ iter ; ++ false ; ++ iter ;
rank: 195
score: 99.08904157366071
patch: final double Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 195
score: 99.02976771763393
patch: double current CaMeL Point = current CaMeL Point . length : 0 ;
rank: 195
score: 98.95028686523438
patch: ++ iter ; current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 195
score: 98.90743215460526
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current ;
rank: 195
score: 98.82228306361607
patch: try { current CaMeL Point = current CaMeL Point . length ( ;
rank: 195
score: 98.78223765980114
patch: ++ iter ; if ++ iter ; ++ iter ;
rank: 195
score: 98.73058471679687
patch: if ( iter == 0 ; return null ;
rank: 195
score: 98.65380859375
patch: ++ super ; ++ iter ;
rank: 196
score: 99.15123793658088
patch: ++ current CaMeL Point [ n CaMeL R ] = current CaMeL Point . length ;
rank: 196
score: 99.0887451171875
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 196
score: 99.06943359375
patch: return weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 196
score: 98.94990234375
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ( ;
rank: 196
score: 98.90607096354167
patch: current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 196
score: 98.82106370192308
patch: ++ iter ; current CaMeL Point [ 0 ] = iter ;
rank: 196
score: 98.78213065011161
patch: / * / ++ iter ;
rank: 196
score: 98.73044259207589
patch: if ( ! iter . is CaMeL Empty ( ; ) break ;
rank: 196
score: 98.65361022949219
patch: ++ 0 ; ++ iter ; }
rank: 197
score: 99.1511166221217
patch: ++ current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 197
score: 99.088623046875
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 197
score: 98.94969985064338
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 197
score: 98.90571145450367
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL
rank: 197
score: 98.81897844587054
patch: try { Thread . current CaMeL Thread ( ) . start ( ;
rank: 197
score: 98.78205023871527
patch: ++ 1 + iter ; ++ iter ;
rank: 197
score: 98.72998725043402
patch: else { if ( iter == 0 ;
rank: 198
score: 99.15072631835938
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Point ( ) ;
rank: 198
score: 99.06871686662946
patch: double n CaMeL C = current CaMeL Point . length ( ) ;
rank: 198
score: 99.0284423828125
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ( ) ;
rank: 198
score: 98.94964192708333
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 198
score: 98.90543405633224
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 198
score: 98.8185565655048
patch: if ( ! iter . is CaMeL Empty ( ) ; else
rank: 198
score: 98.7819091796875
patch: finally { ++ iter ; } ++ iter ;
rank: 198
score: 98.7298583984375
patch: if ( iter == iter ) {
rank: 198
score: 98.65220642089844
patch: ++ 0 ; ++ iter ; else
rank: 199
score: 99.15069580078125
patch: int current CaMeL Point = target CaMeL Values . length ;
rank: 199
score: 99.08836780894886
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ) ;
rank: 199
score: 99.06819915771484
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ;
rank: 199
score: 98.94952392578125
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 199
score: 98.90482370476974
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point ;
rank: 199
score: 98.72977701822917
patch: else { ++ [ 0 ] ; }
rank: 199
score: 98.65219455295139
patch: ++ iter ; ++ iter ; } /
rank: 200
score: 99.0276766690341
patch: final int iter = target CaMeL Values . length ;
rank: 200
score: 98.94915008544922
patch: ++ n CaMeL C ; current CaMeL Point [ n CaMeL C ] = ;
rank: 200
score: 98.90413724459134
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 200
score: 98.78168334960938
patch: ++ value ; ++ iter ; ++ iter ;
rank: 200
score: 98.7279052734375
patch: if ( iter == 0 ; * /
rank: 200
score: 98.65202113560268
patch: ++ iter ; ; / /
rank: 201
score: 99.088134765625
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 201
score: 99.06631673177084
patch: final Object [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 201
score: 99.02666877297794
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . to CaMeL String ( ) ;
rank: 201
score: 98.94863552517361
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 201
score: 98.90373149671052
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) weight CaMeL Matrix . get CaMeL Row CaMeL
rank: 201
score: 98.8170166015625
patch: assert current CaMeL Point [ 0 ] != null ;
rank: 201
score: 98.78128814697266
patch: if ++ iter ; ++ 1 ;
rank: 201
score: 98.727734375
patch: else { iter = iter . start ; }
rank: 201
score: 98.651904296875
patch: ++ iter ; ++ iter ; iter ; iter
rank: 202
score: 99.08805766858552
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 202
score: 99.06604721966912
patch: final double weight CaMeL Matrix = current CaMeL Point . get CaMeL Value ( ) ;
rank: 202
score: 98.94821166992188
patch: ++ iter - 1 ;
rank: 202
score: 98.90321260340073
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) target CaMeL Values . get CaMeL
rank: 202
score: 98.81685965401786
patch: Thread . current CaMeL Thread ( ) . start ( ) ; }
rank: 202
score: 98.72767991286058
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + iter ;
rank: 202
score: 98.65033721923828
patch: ++ ++ iter ; ++ start ;
rank: 203
score: 99.14806518554687
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 203
score: 99.0258430032169
patch: final double weight CaMeL Matrix = current CaMeL Point . length - n CaMeL R ;
rank: 203
score: 98.9481136924342
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ;
rank: 203
score: 98.90272105823864
patch: [ ] current CaMeL Point = current CaMeL Point .
rank: 203
score: 98.81684221540179
patch: if ( ! iter . equals ( current CaMeL Point ) ) {
rank: 203
score: 98.72632514105902
patch: if ( iter == iter ; * /
rank: 203
score: 98.65017361111111
patch: ++ iter ; ++ ++ ++ iter ;
rank: 204
score: 99.08726196289062
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , n CaMeL C ) ;
rank: 204
score: 99.06519368489583
patch: final double [ ] current CaMeL Point = compute CaMeL Residuals ( ) ;
rank: 204
score: 99.02512613932292
patch: boolean converged = current CaMeL Point . length ( ) ;
rank: 204
score: 98.947998046875
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 204
score: 98.90232252038044
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . int CaMeL Value ( ) ;
rank: 204
score: 98.81660600142045
patch: ++ iter ; current CaMeL Point [ iter ] ;
rank: 204
score: 98.77841525607639
patch: if this . iter ; ++ iter ;
rank: 204
score: 98.72617750901442
patch: if ( ! iter . is CaMeL Empty ++ ( ) ;
rank: 204
score: 98.64999728732639
patch: ++ iter ; ++ Math + iter ;
rank: 205
score: 99.14784240722656
patch: current = weight CaMeL Matrix . get CaMeL Entry ( weight CaMeL Matrix ) ;
rank: 205
score: 99.0868252840909
patch: b = new double [ n CaMeL C ] ;
rank: 205
score: 99.06503092447916
patch: final double [ ] current CaMeL Point = target CaMeL Values . length ;
rank: 205
score: 99.02489516314338
patch: final int n CaMeL C = current CaMeL Point . length + n CaMeL C ;
rank: 205
score: 98.94755284926471
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 205
score: 98.90208899456522
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 205
score: 98.81575520833333
patch: final ; try { current CaMeL Point = current CaMeL Point . length ;
rank: 205
score: 98.77803802490234
patch: ++ iter ; ++ value ; ;
rank: 205
score: 98.72536057692308
patch: if ( ! iter . is CaMeL Empty ( ) ) ;
rank: 205
score: 98.64947509765625
patch: ++ iter ; ++ Math ; ++ iter ;
rank: 206
score: 99.1477801983173
patch: final boolean current CaMeL Point = current CaMeL Point . length ;
rank: 206
score: 99.06494903564453
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . current ;
rank: 206
score: 99.02465006510417
patch: final double current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 206
score: 98.94724635074013
patch: current CaMeL Point [ iter ] = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 206
score: 98.90152994791667
patch: list = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 206
score: 98.81527005709134
patch: int iter = current CaMeL Point [ iter ] . length ;
rank: 206
score: 98.77701144748264
patch: ++ iter ; iter ; String iter ;
rank: 206
score: 98.72482299804688
patch: if ( iter ;
rank: 206
score: 98.64881243024554
patch: ++ iter ; ; iter ;
rank: 207
score: 99.08597412109376
patch: current = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 207
score: 99.06477355957031
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current CaMeL Point = current ;
rank: 207
score: 99.02373046875
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Value ( current CaMeL Point ) ;
rank: 207
score: 98.94707489013672
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , ;
rank: 207
score: 98.90129651521382
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current ;
rank: 207
score: 98.81444202769886
patch: if ( ! iter . is CaMeL Empty ; )
rank: 207
score: 98.77644486860795
patch: ++ iter ; ++ iter ; this . iter ;
rank: 207
score: 98.72464693509616
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ++ ; }
rank: 207
score: 98.64870198567708
patch: ++ iter ; ++ ++ iter ; }
rank: 208
score: 99.14760916573661
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 208
score: 99.08595186121323
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 208
score: 99.02282104492187
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 208
score: 98.9003155048077
patch: y = current CaMeL Point . int CaMeL Value ( ) ;
rank: 208
score: 98.8134033203125
patch: if ( ! iter . starts CaMeL With ( current CaMeL Point ) )
rank: 208
score: 98.77627902560764
patch: if ++ iter ; ++ iter ; ;
rank: 208
score: 98.72415771484376
patch: return iter ; }
rank: 208
score: 98.64850463867188
patch: ++ iter ; ++ iter ; ++ false ;
rank: 209
score: 99.14704332853618
patch: ++ current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 209
score: 99.08582153320313
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ) ;
rank: 209
score: 99.06292169744319
patch: final double weight CaMeL Matrix = weight CaMeL Matrix ;
rank: 209
score: 99.02262573242187
patch: double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 209
score: 98.94683074951172
patch: int n CaMeL R = current CaMeL Point . length - n CaMeL C ;
rank: 209
score: 98.90018920898437
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . current CaMeL Point ) ;
rank: 209
score: 98.81163330078125
patch: j = current CaMeL Point [ 0 ] ;
rank: 209
score: 98.7760009765625
patch: ++ iter ; else { ++ iter ;
rank: 209
score: 98.72408040364583
patch: else { else { ++ iter ; }
rank: 209
score: 98.64849853515625
patch: ++ iter ; ++ iter ; / / ;
rank: 210
score: 99.08544921875
patch: final int current CaMeL Point = current CaMeL Point [ n CaMeL C ] ;
rank: 210
score: 99.0628662109375
patch: / ? Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ;
rank: 210
score: 99.02251120174633
patch: final double weight CaMeL Matrix = current CaMeL Point . length + n CaMeL C ;
rank: 210
score: 98.94606370192308
patch: final double iter = current CaMeL Point . length ( ) ;
rank: 210
score: 98.89999871504934
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . ) ;
rank: 210
score: 98.81161733774039
patch: j = current CaMeL Point . length ( ) - 1 ;
rank: 210
score: 98.77584499782986
patch: ++ iter ; ++ 1 ++ iter ;
rank: 210
score: 98.72398546006944
patch: else { iter = iter . length ;
rank: 210
score: 98.64827728271484
patch: ++ ! iter ; ++ iter ;
rank: 211
score: 99.08460908777573
patch: final double [ ] current CaMeL Point = Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 211
score: 99.0611063639323
patch: final int ++ iter = current CaMeL Point . length ;
rank: 211
score: 99.02180989583333
patch: int Point CaMeL Vector CaMeL Value CaMeL Pair = current ;
rank: 211
score: 98.94593048095703
patch: ++ iter * / * * /
rank: 211
score: 98.81136881510416
patch: if ( iter != null && iter . is CaMeL Empty ( ) )
rank: 211
score: 98.77577718098958
patch: int iter + iter ; ++ iter ;
rank: 211
score: 98.72398376464844
patch: return new ++ [ iter ] ;
rank: 211
score: 98.64683024088542
patch: ++ iter ; ; ++ ++ iter ;
rank: 212
score: 99.14591064453126
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current ( ) ;
rank: 212
score: 99.08444081182066
patch: double n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 212
score: 99.06056213378906
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current = current CaMeL Point ;
rank: 212
score: 99.02142333984375
patch: final double weight CaMeL Matrix = residuals CaMeL Weights [ current CaMeL Point . length ] ;
rank: 212
score: 98.94546329273896
patch: current CaMeL Point [ iter ] = new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 212
score: 98.89967974494485
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 212
score: 98.8102294921875
patch: ++ iter ; Thread . current CaMeL Thread ( ) . interrupt ( ;
rank: 212
score: 98.77495574951172
patch: ++ iter ; ; iter * /
rank: 212
score: 98.7227783203125
patch: else { if ( ! iter . is CaMeL Empty ++ ;
rank: 212
score: 98.64669036865234
patch: ++ iter ; iter * ++ ;
rank: 213
score: 99.14578247070312
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current - n CaMeL C ;
rank: 213
score: 99.083984375
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 213
score: 99.06041044347427
patch: final double weight CaMeL Matrix = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 213
score: 98.94539097377232
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 213
score: 98.8996484375
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ;
rank: 213
score: 98.8101806640625
patch: try { current = current CaMeL Point . length ( ) ;
rank: 213
score: 98.77324567522321
patch: else { ++ iter ; ;
rank: 213
score: 98.72267150878906
patch: else { / * ++ * /
rank: 213
score: 98.64529418945312
patch: ++ iter ; ; / / /
rank: 214
score: 99.145458984375
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 214
score: 99.08395182291666
patch: / * final int n CaMeL C = current CaMeL Point . length ;
rank: 214
score: 99.06015450613839
patch: int current CaMeL Point = n CaMeL R - n CaMeL C ;
rank: 214
score: 99.02099609375
patch: int current = current CaMeL Point . length ;
rank: 214
score: 98.94528198242188
patch: ++ iter ; current CaMeL Point = current CaMeL Point . trim ( ) ;
rank: 214
score: 98.89946954900569
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 214
score: 98.80941772460938
patch: n CaMeL C = current CaMeL Point [ 0 ] ;
rank: 214
score: 98.77322387695312
patch: ++ iter ; ++ iter iter ;
rank: 214
score: 98.7215576171875
patch: else { ( ++ iter ;
rank: 214
score: 98.64527723524306
patch: ++ ++ iter ; ++ iter ; ;
rank: 215
score: 99.14520263671875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ( ) ;
rank: 215
score: 99.05877007378473
patch: final double [ ] current CaMeL Point ;
rank: 215
score: 99.02024931066177
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point . length ; }
rank: 215
score: 98.94500373391544
patch: ++ iter ; current CaMeL Point = current CaMeL Point . index CaMeL Of ( ;
rank: 215
score: 98.89927045036765
patch: res = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 215
score: 98.80880301339286
patch: ++ iter ; if ( current CaMeL Point . length == 0 )
rank: 215
score: 98.7728500366211
patch: ++ iter ; if iter ; ;
rank: 215
score: 98.72123718261719
patch: if ( iter < 0 ) {
rank: 215
score: 98.64522298177083
patch: ++ ++ iter ; ; ++ iter ;
rank: 216
score: 99.14496170847039
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 216
score: 99.0585693359375
patch: int current CaMeL Point = n CaMeL R ;
rank: 216
score: 99.01926879882812
patch: final double n CaMeL C = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 216
score: 98.94466145833333
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current ;
rank: 216
score: 98.89902750651042
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL Matrix ( ) ;
rank: 216
score: 98.77242279052734
patch: } ++ iter ; if iter ;
rank: 216
score: 98.7200927734375
patch: else { ++ * ++ iter ;
rank: 216
score: 98.64519585503473
patch: ++ iter ; ++ iter ; else else
rank: 217
score: 99.0827277688419
patch: checker = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 217
score: 98.94455437911184
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current . get CaMeL Point ( ) ;
rank: 217
score: 98.89872602982955
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair )
rank: 217
score: 98.80704171316964
patch: current CaMeL Point = current CaMeL Point . to CaMeL Array ( ;
rank: 217
score: 98.77228393554688
patch: ++ iter ; while iter ; ++ iter ;
rank: 217
score: 98.71916368272569
patch: / * * * / ++ iter ;
rank: 217
score: 98.6451416015625
patch: iter else ++ ; ++ iter ;
rank: 218
score: 99.0822394875919
patch: Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 218
score: 99.0186767578125
patch: int n CaMeL C = new double [ n CaMeL C ] ;
rank: 218
score: 98.94432157628677
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R ;
rank: 218
score: 98.89791165865384
patch: if ( n CaMeL C < current CaMeL Point . length )
rank: 218
score: 98.80692545572917
patch: ++ iter ; ++ n CaMeL R ;
rank: 218
score: 98.77211216517857
patch: ++ iter ; return iter ;
rank: 218
score: 98.71897888183594
patch: ++ iter ; return iter ; }
rank: 219
score: 99.08203125
patch: int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 219
score: 99.0569206686581
patch: final int current CaMeL Point = current CaMeL Point : current CaMeL Point . length ;
rank: 219
score: 99.0166244506836
patch: int iter = n CaMeL C ;
rank: 219
score: 98.944287109375
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 219
score: 98.89756556919643
patch: res = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 219
score: 98.80637904575893
patch: if ( ! iter . starts CaMeL With ( current ) ) {
rank: 219
score: 98.77201334635417
patch: / * ++ iter ; int iter ;
rank: 219
score: 98.71866048177084
patch: if ( ! iter . is CaMeL Empty ( ) ) return iter ;
rank: 220
score: 99.14191637541118
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( n CaMeL R ) ;
rank: 220
score: 99.05681694878473
patch: Real CaMeL Matrix ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 220
score: 99.01622817095588
patch: final double current CaMeL Point = current CaMeL Point . length + n CaMeL C ;
rank: 220
score: 98.94417898995536
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 220
score: 98.89698204627403
patch: Iterator Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 220
score: 98.80511881510417
patch: final int iter = current CaMeL Point . length - n CaMeL R ;
rank: 220
score: 98.77166069878473
patch: ++ iter ; else * ++ iter ;
rank: 220
score: 98.71783447265625
patch: finally { if ++ iter ; }
rank: 220
score: 98.64238739013672
patch: ++ true ; ; ++ iter ;
rank: 221
score: 99.14189067639802
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . solve ( current CaMeL Point ) ;
rank: 221
score: 99.08071001838235
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( current ) ;
rank: 221
score: 99.05667114257812
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; current = current ;
rank: 221
score: 99.01519165039062
patch: int n CaMeL C = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 221
score: 98.94357299804688
patch: current = current CaMeL Point [ iter ] ;
rank: 221
score: 98.8966064453125
patch: result = weight CaMeL Matrix . get CaMeL Row ( n CaMeL R ) ;
rank: 221
score: 98.80305989583333
patch: final int n CaMeL R = current CaMeL Point . length + 1 ;
rank: 221
score: 98.77027130126953
patch: ++ value ; ++ iter ; ;
rank: 221
score: 98.716552734375
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ++ 1 ; }
rank: 221
score: 98.64091796875
patch: ++ iter ; ++ iter ; iter ++ ;
rank: 222
score: 99.05654009650735
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 222
score: 99.01464125689338
patch: final double n CaMeL C = current CaMeL Point . length + n CaMeL C ;
rank: 222
score: 98.94307163783482
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ; }
rank: 222
score: 98.89570545014881
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 222
score: 98.8021952311198
patch: if ( current CaMeL Point . length != 0 ) {
rank: 222
score: 98.77013481987848
patch: ++ iter ; * / ++ iter ;
rank: 222
score: 98.71582970252403
patch: if ( ! iter . is CaMeL Empty ( ) ; ;
rank: 223
score: 99.08055962456598
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 223
score: 99.0145622702206
patch: final double [ ] current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 223
score: 98.94287109375
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) . ++ ;
rank: 223
score: 98.89498291015624
patch: i = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 223
score: 98.79843139648438
patch: final int iter = current CaMeL Point . length ) ;
rank: 223
score: 98.77005004882812
patch: ++ iter ; ++ - value ;
rank: 223
score: 98.71566569010416
patch: if ( iter == null && iter . is CaMeL Empty ( ) ;
rank: 223
score: 98.63875732421874
patch: ++ iter ; ++ iter ; ; / /
rank: 224
score: 99.14067840576172
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = this . current CaMeL Point ;
rank: 224
score: 99.0522216796875
patch: int n CaMeL C = n CaMeL R ;
rank: 224
score: 98.9422966452206
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ) ;
rank: 224
score: 98.894775390625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . 0 ;
rank: 224
score: 98.76990356445313
patch: ++ iter ; if iter ; ++ iter ;
rank: 224
score: 98.71525065104167
patch: if ( . is CaMeL Empty ( ) ) { ++ iter ; }
rank: 224
score: 98.63802083333333
patch: ++ iter ; ++ ;
rank: 225
score: 99.1406185752467
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length 1 ;
rank: 225
score: 99.07996622721355
patch: current = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 225
score: 99.05206976996527
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point ;
rank: 225
score: 99.01434326171875
patch: int current CaMeL Point = weight CaMeL Matrix . length ;
rank: 225
score: 98.94171820746527
patch: ++ iter ; current = current . ;
rank: 225
score: 98.89437430245536
patch: check CaMeL Parameters ( current CaMeL Point , n CaMeL C ) ;
rank: 225
score: 98.71516418457031
patch: if ( iter == null ; {
rank: 226
score: 99.05192565917969
patch: final Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker ;
rank: 226
score: 99.01314697265624
patch: n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 226
score: 98.9414794921875
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 226
score: 98.894287109375
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 226
score: 98.79747663225446
patch: ++ iter ; Thread . current CaMeL Thread ( ) . interrupt ;
rank: 226
score: 98.76858520507812
patch: / * ] iter ; * /
rank: 226
score: 98.71432729867789
patch: if ( ! iter . is CaMeL Empty ( $NUMBER$ ) ;
rank: 226
score: 98.63680267333984
patch: ++ iter ; iter } ++ ;
rank: 227
score: 99.07941436767578
patch: int n CaMeL C = current CaMeL Point . length * n CaMeL R ;
rank: 227
score: 99.05128987630208
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Row ( ) ;
rank: 227
score: 99.01302396334134
patch: int iter = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 227
score: 98.94131905691964
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , ;
rank: 227
score: 98.89423162286931
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . do CaMeL Optimize ( ) ) ;
rank: 227
score: 98.79676231971153
patch: n CaMeL C = current CaMeL Point . length + iter ;
rank: 227
score: 98.71398162841797
patch: if ( iter < iter ) {
rank: 227
score: 98.63623046875
patch: ++ iter ; ; } ++ iter ;
rank: 228
score: 99.13910784040179
patch: try { Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 228
score: 99.07926432291667
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 228
score: 99.01262350643383
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point . length ; }
rank: 228
score: 98.89417034646739
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . 0 ;
rank: 228
score: 98.79628499348958
patch: if ( current CaMeL Point [ 0 ] == null )
rank: 228
score: 98.76706949869792
patch: ++ iter ; try { iter ++ ;
rank: 228
score: 98.71352132161458
patch: else { if ( iter > 0 ;
rank: 228
score: 98.63509368896484
patch: ++ iter ; ++ new ++ ;
rank: 229
score: 99.13847520616319
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = this . current CaMeL Point ;
rank: 229
score: 99.05115763346355
patch: / * int iter = current CaMeL Point . length ;
rank: 229
score: 99.0125732421875
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ n CaMeL C ] ;
rank: 229
score: 98.9409912109375
patch: double iter = current . index CaMeL Of ( current CaMeL Point ) ;
rank: 229
score: 98.89400809151786
patch: n CaMeL C = current CaMeL Point . length ; n CaMeL C = current CaMeL Point . length ;
rank: 229
score: 98.7962137858073
patch: current CaMeL Point [ n CaMeL C ] = 0 ;
rank: 229
score: 98.76698996803977
patch: if ++ iter ; ++ iter ; ++ iter ;
rank: 229
score: 98.71311442057292
patch: if ( ! iter . is CaMeL Empty ( ; (
rank: 229
score: 98.63501654730902
patch: ++ iter ; ++ iter ; * ;
rank: 230
score: 99.13846628289474
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( n CaMeL C ) ;
rank: 230
score: 99.07742745535714
patch: Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current CaMeL Point . length ;
rank: 230
score: 99.05105251736111
patch: final int current CaMeL Point = 0 ;
rank: 230
score: 99.01168387276786
patch: int n CaMeL C = target CaMeL Values . length : 0 ;
rank: 230
score: 98.89331868489583
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 230
score: 98.76693725585938
patch: int iter ; ++ - iter ;
rank: 230
score: 98.71309407552083
patch: else { iter = iter . iter ;
rank: 231
score: 99.13752826891448
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 231
score: 99.07738095238095
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( current CaMeL Point ) ;
rank: 231
score: 99.05058149857955
patch: final int n CaMeL C = current CaMeL Point ;
rank: 231
score: 98.93946184430804
patch: current CaMeL Point [ n CaMeL C ] = current . length ;
rank: 231
score: 98.892822265625
patch: Integer current CaMeL Point = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 231
score: 98.7952880859375
patch: iter = current CaMeL Point . length - 1 ;
rank: 231
score: 98.76675075954861
patch: ++ 1 ++ iter ; ++ iter ;
rank: 231
score: 98.71306610107422
patch: else { / * / * /
rank: 231
score: 98.63218858506944
patch: ++ iter ; iter / / ++ ;
rank: 232
score: 99.05050838694854
patch: final String current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 232
score: 99.0112060546875
patch: final double weight CaMeL Matrix = current CaMeL Point . length : 0 ;
rank: 232
score: 98.93919881184895
patch: ++ iter ; if ( current CaMeL Point . length ;
rank: 232
score: 98.89274379185268
patch: if ( n CaMeL C < target CaMeL Values . length ) {
rank: 232
score: 98.79473876953125
patch: int n CaMeL C = iter - n CaMeL C ;
rank: 232
score: 98.76673719618056
patch: else { ++ iter ; ++ iter ;
rank: 232
score: 98.71295166015625
patch: else { if ++ * iter ;
rank: 233
score: 99.13619559151786
patch: int iter = weight CaMeL Matrix . current CaMeL Point ( ) ;
rank: 233
score: 99.07695978338069
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , n CaMeL R ) ;
rank: 233
score: 99.04969133649554
patch: int current CaMeL Point = current CaMeL Point : current CaMeL Point ;
rank: 233
score: 99.01097005208334
patch: final double weight CaMeL Matrix [ ] = current CaMeL Point . length ;
rank: 233
score: 98.76655578613281
patch: ++ - 0 ; ++ iter ;
rank: 233
score: 98.71273040771484
patch: return ++ [ 0 ] ; }
rank: 233
score: 98.63181849888393
patch: ++ Math ; ++ iter ;
rank: 234
score: 99.13584798177084
patch: ++ weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 234
score: 99.07688685825893
patch: current CaMeL Point = current CaMeL Point [ n CaMeL C ] ;
rank: 234
score: 99.04843478732639
patch: double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 234
score: 99.01087443033855
patch: String current CaMeL Point = current CaMeL Point . length ;
rank: 234
score: 98.93897298177083
patch: ++ iter ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 234
score: 98.89223069411058
patch: { Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 234
score: 98.792724609375
patch: if ( current CaMeL Point . length == iter ) {
rank: 234
score: 98.71181030273438
patch: if ( iter == iter ) return null ;
rank: 234
score: 98.63177490234375
patch: ++ length ; ++ iter ;
rank: 235
score: 99.07633109714673
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 235
score: 99.04739718967014
patch: double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 235
score: 99.0107177734375
patch: current CaMeL Point [ iter ] = current CaMeL Point . length ; }
rank: 235
score: 98.93888585707721
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , ; }
rank: 235
score: 98.8921142578125
patch: iter = current CaMeL Point . length ; }
rank: 235
score: 98.79203287760417
patch: current CaMeL Point [ 0 ] = current CaMeL Point [ 0 ] ;
rank: 235
score: 98.76614040798611
patch: / * ] iter ; int iter ;
rank: 235
score: 98.71087091619319
patch: if ( . is CaMeL Empty ( ; ) )
rank: 235
score: 98.63087681361607
patch: ++ iter ; iter * /
rank: 236
score: 99.07609049479167
patch: int current CaMeL Point = current CaMeL Point [ n CaMeL R ] ;
rank: 236
score: 99.0106201171875
patch: current CaMeL Point = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 236
score: 98.938232421875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ) ;
rank: 236
score: 98.8917465209961
patch: state = Convergence CaMeL Checker . get CaMeL Point ( current CaMeL Point ) ;
rank: 236
score: 98.79140218098958
patch: ++ iter ; ++ current CaMeL Point [ 0 ] ;
rank: 236
score: 98.76475694444444
patch: ++ iter ; ++ iter ; 0 ;
rank: 236
score: 98.71060180664062
patch: / * * * /
rank: 237
score: 99.13410500919117
patch: current = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . length ;
rank: 237
score: 99.0758056640625
patch: int n CaMeL C = target CaMeL Values [ n CaMeL R ] ;
rank: 237
score: 99.0462979403409
patch: final double [ ] current = current CaMeL Point ;
rank: 237
score: 99.01041666666667
patch: / / compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 237
score: 98.93815104166667
patch: ++ iter ; current = iter . ;
rank: 237
score: 98.89119466145833
patch: tmp = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 237
score: 98.79119873046875
patch: current = current CaMeL Point . length ; ++ iter ;
rank: 237
score: 98.71012878417969
patch: } else { ++ iter ; }
rank: 237
score: 98.62993706597223
patch: ++ iter ; ++ $STRING$ + iter ;
rank: 238
score: 99.04622977120536
patch: Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Residuals ( ) ;
rank: 238
score: 99.01033935546874
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( n CaMeL R ) ;
rank: 238
score: 98.93812913161058
patch: final ; final int iter = current CaMeL Point . length ;
rank: 238
score: 98.89086196001838
patch: y = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 238
score: 98.79036458333333
patch: iter = iter . read ( current CaMeL Point ) ;
rank: 238
score: 98.76430935329861
patch: i ++ ; ++ ; ++ iter ;
rank: 238
score: 98.62980651855469
patch: ++ 1 ; ++ iter ; else
rank: 239
score: 99.13306535993304
patch: if ( current CaMeL Point . do CaMeL Optimize ( ) ) {
rank: 239
score: 99.0441425030048
patch: int ! n CaMeL C = current CaMeL Point . length ;
rank: 239
score: 99.01006116365132
patch: double current CaMeL Point = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 239
score: 98.89076450892857
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL C = current CaMeL Point . length ;
rank: 239
score: 98.79022623697917
patch: ++ iter ; current CaMeL Point [ n CaMeL C ] = iter ;
rank: 239
score: 98.76390075683594
patch: ++ iter ; ++ * / ;
rank: 239
score: 98.70928485576923
patch: if ( ! iter . is CaMeL Empty ++ ) . ;
rank: 239
score: 98.62897338867188
patch: ++ iter ; ++ iter ; else / /
rank: 240
score: 99.1328857421875
patch: ++ iter ; double n CaMeL C = current CaMeL Point . length ;
rank: 240
score: 99.0737941576087
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 240
score: 99.04410129123264
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . current CaMeL Point ;
rank: 240
score: 99.00954764229911
patch: int iter = current CaMeL Point . length + n CaMeL R ;
rank: 240
score: 98.936767578125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ;
rank: 240
score: 98.89027099609375
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > }
rank: 240
score: 98.78949381510417
patch: n CaMeL C = current CaMeL Point . length ( ) + 1 ;
rank: 240
score: 98.76334381103516
patch: iter { ++ ; ++ iter ;
rank: 240
score: 98.70897081163194
patch: else { ++ [ iter ] ; }
rank: 240
score: 98.62887137276786
patch: ++ current ; ++ iter ;
rank: 241
score: 99.13274825246711
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point [ 0 ] ;
rank: 241
score: 99.0734112079327
patch: current = current CaMeL Point . length - n CaMeL C ;
rank: 241
score: 99.04357096354167
patch: final int current CaMeL Point = n CaMeL C - n CaMeL C ;
rank: 241
score: 99.00835712139423
patch: final int Point CaMeL Vector CaMeL Value CaMeL Pair = current ;
rank: 241
score: 98.93675944010417
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ; }
rank: 241
score: 98.78935411241319
patch: ++ current CaMeL Point [ iter ] ;
rank: 241
score: 98.70857747395833
patch: if ( ! iter . is CaMeL Empty ++ this ;
rank: 241
score: 98.62856716579861
patch: ++ iter ; ; iter / ++ ;
rank: 242
score: 99.13262618215461
patch: current CaMeL Point = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 242
score: 99.07289189877717
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) n CaMeL R ;
rank: 242
score: 99.0428466796875
patch: double current CaMeL Point = current CaMeL Point ;
rank: 242
score: 99.00804985894098
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 242
score: 98.88984985351563
patch: iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 242
score: 98.78886195591518
patch: int iter = current . last CaMeL Index CaMeL Of ( $STRING$ ;
rank: 242
score: 98.76218087332589
patch: try { ++ iter ; }
rank: 242
score: 98.70839436848958
patch: } if ++ iter ;
rank: 242
score: 98.62777709960938
patch: iter ++ ; ++ ;
rank: 243
score: 99.1314697265625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . null ;
rank: 243
score: 99.00803048270089
patch: int [ ] current CaMeL Point = target CaMeL Values . length ;
rank: 243
score: 98.9361572265625
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 243
score: 98.88959817325367
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . ;
rank: 243
score: 98.7884521484375
patch: iter = iter . iter ( ) ;
rank: 243
score: 98.70830829326923
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 243
score: 98.62687852647569
patch: ++ iter ; } if ++ iter ;
rank: 244
score: 99.12840983072917
patch: ++ iter ; double current CaMeL Point = current CaMeL Point . length ;
rank: 244
score: 99.07237484580592
patch: final double [ ] current CaMeL Point = current CaMeL Point . to CaMeL Array ( ) ;
rank: 244
score: 99.0415790264423
patch: int ++ n CaMeL R = current CaMeL Point . length ;
rank: 244
score: 99.00786276424633
patch: ++ n CaMeL C ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 244
score: 98.935791015625
patch: ++ iter ; current = current . hash CaMeL Code ( ) ;
rank: 244
score: 98.8895772298177
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 244
score: 98.78831787109375
patch: iter = current CaMeL Point [ 0 ] ;
rank: 244
score: 98.761962890625
patch: ++ iter ; iter * - iter ;
rank: 244
score: 98.70748901367188
patch: else { this . iter = iter . start ; }
rank: 244
score: 98.62563650948661
patch: iter ++ ; ++ iter ;
rank: 245
score: 99.1282894736842
patch: int n CaMeL C = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 245
score: 99.07197498139881
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) false ;
rank: 245
score: 99.0072772686298
patch: int iter = current CaMeL Point . - n CaMeL C ;
rank: 245
score: 98.93567833533653
patch: ++ iter ; current = current CaMeL Point . length ; ;
rank: 245
score: 98.88942173549107
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ) ;
rank: 245
score: 98.78826141357422
patch: if ( iter >= 0 ) {
rank: 245
score: 98.75942654079861
patch: ++ iter ; ++ value ; iter ;
rank: 245
score: 98.70714393028847
patch: if ( ! iter . is CaMeL Empty ( ; break ;
rank: 245
score: 98.62528991699219
patch: ++ iter ; ; ++ $STRING$ ;
rank: 246
score: 99.12789113898026
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 246
score: 99.04065659466912
patch: Real CaMeL Matrix current CaMeL Point = new Block CaMeL Real CaMeL Matrix ( ) ;
rank: 246
score: 99.00725959329044
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . to CaMeL Array ( ) ;
rank: 246
score: 98.9356689453125
patch: ++ iter ; current CaMeL Point [ n CaMeL C ] = ; }
rank: 246
score: 98.88899311266448
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 246
score: 98.75815836588542
patch: ++ iter ; try { if iter ;
rank: 246
score: 98.706298828125
patch: if ( . iter == 0 ;
rank: 246
score: 98.62497287326389
patch: ++ ++ iter ; ++ iter ; else
rank: 247
score: 99.07177734375
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 247
score: 99.00674438476562
patch: int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair {
rank: 247
score: 98.93555704752605
patch: int iter = current . length - n CaMeL C ;
rank: 247
score: 98.888896484375
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ;
rank: 247
score: 98.78635475852273
patch: final int current = current CaMeL Point . length ;
rank: 247
score: 98.70601806640624
patch: if ( iter == 0 ) return iter ;
rank: 247
score: 98.6246826171875
patch: ++ iter ; ++ $NUMBER$ ; ++ iter ;
rank: 248
score: 99.12727355957031
patch: int current CaMeL Point = current CaMeL Point . length - n CaMeL R ;
rank: 248
score: 99.04028998480902
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 248
score: 99.00656127929688
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 248
score: 98.93535614013672
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = iter . ;
rank: 248
score: 98.8887051669034
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) . double CaMeL Value ( ) ;
rank: 248
score: 98.78539100060097
patch: Math . abs ( current CaMeL Point [ 0 ] ) ;
rank: 248
score: 98.75747341579861
patch: else ++ iter ; ++ iter ; ;
rank: 248
score: 98.70577566964286
patch: else { iter -- ; }
rank: 248
score: 98.62413787841797
patch: ++ 1 ; ++ iter ; }
rank: 249
score: 99.126220703125
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = null ;
rank: 249
score: 99.0715801532452
patch: int iter = current CaMeL Point [ n CaMeL C ] ;
rank: 249
score: 99.04024011948529
patch: final double n CaMeL C = current CaMeL Point . get CaMeL Value ( ) ;
rank: 249
score: 99.00638521634616
patch: final int n CaMeL C = weight CaMeL Matrix . length ;
rank: 249
score: 98.93417358398438
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter , iter ;
rank: 249
score: 98.88799176897321
patch: found = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 249
score: 98.7853495279948
patch: ++ iter ; current CaMeL Point [ iter ++ ] ;
rank: 249
score: 98.75655517578124
patch: / * ] ++ iter ; ++ iter ;
rank: 249
score: 98.7050448330966
patch: else { this . iter = iter . length ;
rank: 249
score: 98.62334333147321
patch: ++ iter ; iter / ;
rank: 250
score: 99.1255594889323
patch: current = residuals CaMeL Weights [ n CaMeL C ] ;
rank: 250
score: 98.93321736653645
patch: final int iter = current CaMeL Point . length ( ;
rank: 250
score: 98.88752184416118
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL Row CaMeL
rank: 250
score: 98.78523763020833
patch: if ( iter == target CaMeL Values . length ) {
rank: 250
score: 98.75625610351562
patch: this . ++ iter ; ++ iter ; ;
rank: 250
score: 98.62214006696429
patch: ++ list ; ++ iter ;
rank: 251
score: 99.07050637637867
patch: Decomposition CaMeL Solver < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 251
score: 99.00531412760417
patch: / / * compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 251
score: 98.93284606933594
patch: ++ n CaMeL C ; iter = current CaMeL Point . length ( ) ;
rank: 251
score: 98.88737349076705
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , n CaMeL C ) ;
rank: 251
score: 98.78502308238636
patch: final short iter = current CaMeL Point . length ;
rank: 251
score: 98.7556660970052
patch: ++ * ++ iter ;
rank: 251
score: 98.70485276442308
patch: if ( ! iter . is CaMeL Empty ( 1 ) ;
rank: 251
score: 98.62211390904018
patch: ++ iter ; iter -- ;
rank: 252
score: 99.06971499794408
patch: int n CaMeL C = current CaMeL Point . length * ( current CaMeL Point . length ;
rank: 252
score: 99.00400904605263
patch: int n CaMeL C = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 252
score: 98.93276798023896
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , n CaMeL C ;
rank: 252
score: 98.88732379415761
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 252
score: 98.7845703125
patch: try { current CaMeL Point = current CaMeL Point . trim ( ) ;
rank: 252
score: 98.75535365513393
patch: ++ iter ; int 1 ;
rank: 252
score: 98.70374348958333
patch: if ( ! iter . is CaMeL Empty ( ; ) return null ;
rank: 252
score: 98.62183295355902
patch: ++ iter ; ++ start ; iter ;
rank: 253
score: 99.0697021484375
patch: if ( current CaMeL Point . length < current CaMeL Point . length )
rank: 253
score: 99.03699544270833
patch: final double n CaMeL R = current CaMeL Point . length ( ) ;
rank: 253
score: 99.00337049696181
patch: final double weight CaMeL Matrix = current CaMeL Point [ current CaMeL Point . length ] ;
rank: 253
score: 98.93243408203125
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 253
score: 98.88722534179688
patch: set CaMeL Cost ( current CaMeL Point ) ;
rank: 253
score: 98.78455699573864
patch: final float iter = current CaMeL Point . length ;
rank: 253
score: 98.75503540039062
patch: else { ++ iter ; break ;
rank: 253
score: 98.7036602313702
patch: if ( ! iter . is CaMeL Empty ( 0 ) ;
rank: 253
score: 98.62173122829861
patch: if iter * ++ ; ++ iter ;
rank: 254
score: 99.06946518841912
patch: matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 254
score: 99.03677804129464
patch: int n CaMeL C = n CaMeL C - n CaMeL R ;
rank: 254
score: 99.0033023231908
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . length - n CaMeL R ;
rank: 254
score: 98.93197811351104
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point [ iter ] ;
rank: 254
score: 98.88691980698529
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . get CaMeL
rank: 254
score: 98.78385786576705
patch: j = current CaMeL Point . length + 1 ;
rank: 254
score: 98.75466918945312
patch: int iter ; ++ - 1 ;
rank: 254
score: 98.70363159179688
patch: if ( iter == null ; / * ;
rank: 254
score: 98.62165832519531
patch: iter ; if iter = iter ;
rank: 255
score: 99.03677133413461
patch: final int n CaMeL C = residuals CaMeL Weights . length ;
rank: 255
score: 99.0030517578125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , residuals CaMeL Weights ) ;
rank: 255
score: 98.93125915527344
patch: current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ;
rank: 255
score: 98.88688579358552
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 255
score: 98.78336588541667
patch: current CaMeL Point [ n CaMeL C ] = 1 ;
rank: 255
score: 98.75448608398438
patch: ++ iter ; try { break ;
rank: 255
score: 98.70348358154297
patch: else { return iter ; ; }
rank: 255
score: 98.62128295898438
patch: ++ iter ; iter if iter = iter ;
rank: 256
score: 99.12302652994792
patch: Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Entry ( ) ;
rank: 256
score: 99.06927490234375
patch: current = compute CaMeL Residuals ( current CaMeL Point , current CaMeL Point ) ;
rank: 256
score: 99.03568892045455
patch: final double n CaMeL C = current CaMeL Point ;
rank: 256
score: 99.00299393503289
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . to CaMeL Array ( ) ;
rank: 256
score: 98.93104553222656
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 256
score: 98.8851318359375
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . ) ;
rank: 256
score: 98.78273703835227
patch: if ( ! iter . contains ( current ) )
rank: 256
score: 98.75275421142578
patch: / ] iter ; ++ iter ;
rank: 256
score: 98.70259312220982
patch: if ( ! iter . is CaMeL Empty ( ) ; / ;
rank: 256
score: 98.62010192871094
patch: if iter * / ++ iter ;
rank: 257
score: 99.12245396205357
patch: int current CaMeL Point = n CaMeL R - n CaMeL R ;
rank: 257
score: 99.06903754340277
patch: double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 257
score: 98.93088003305289
patch: ++ n CaMeL C ; ++ n CaMeL C ; if ;
rank: 257
score: 98.78252766927083
patch: final int n CaMeL C = current CaMeL Point . length - iter ;
rank: 257
score: 98.75032043457031
patch: ++ iter ; ++ - ; ;
rank: 257
score: 98.70188395182292
patch: else { throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 257
score: 98.61954171316964
patch: ++ iter ; ++ current ;
rank: 258
score: 99.06901332310268
patch: final int Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 258
score: 99.03354779411765
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; int iter = 0 ;
rank: 258
score: 99.00290398848684
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 258
score: 98.93087332589286
patch: double iter = current . index CaMeL Of ( current CaMeL Point ;
rank: 258
score: 98.88490513392857
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > ++ ;
rank: 258
score: 98.78204345703125
patch: current = current CaMeL Point [ 0 ] ;
rank: 258
score: 98.74989149305556
patch: ++ iter ; * / int iter ;
rank: 258
score: 98.70138985770089
patch: if ( ! iter . is CaMeL Empty ( ) ; * ;
rank: 258
score: 98.619482421875
patch: ++ iter ; ++ iter ; else / ;
rank: 259
score: 99.06875465029762
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ) ;
rank: 259
score: 99.00281982421875
patch: int converged = current CaMeL Point . length ;
rank: 259
score: 98.93080647786458
patch: final int iter = current CaMeL Point . length ; ;
rank: 259
score: 98.8843994140625
patch: Integer n CaMeL C = current CaMeL Point . int CaMeL Value ( ) ;
rank: 259
score: 98.78177897135417
patch: if ( ! iter . is CaMeL Empty ; n CaMeL C ++ )
rank: 259
score: 98.74988471137152
patch: ++ iter ; ; ; int iter ;
rank: 259
score: 98.70115831163194
patch: return new ++ [ iter ] ; }
rank: 259
score: 98.618701171875
patch: ++ iter ; ++ iter ; ++ $NUMBER$ ;
rank: 260
score: 99.0681381225586
patch: int iter = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 260
score: 99.03329031808036
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; / ?
rank: 260
score: 99.00253295898438
patch: b = current CaMeL Point [ n CaMeL R ] ;
rank: 260
score: 98.88422185724431
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , 0 ) ;
rank: 260
score: 98.781689453125
patch: input = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 260
score: 98.70095590444711
patch: if ( ! iter . is CaMeL Empty ; ++ iter ;
rank: 260
score: 98.617138671875
patch: ++ iter ; ++ iter ; iter ; else
rank: 261
score: 99.12113683363971
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 261
score: 99.06803755326705
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix ) ;
rank: 261
score: 99.03260149274554
patch: double [ ] current CaMeL Point = this . current CaMeL Point ;
rank: 261
score: 99.00137939453126
patch: double current = current CaMeL Point . length ;
rank: 261
score: 98.93013080797698
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ;
rank: 261
score: 98.88395182291667
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point , current ) ;
rank: 261
score: 98.78147536057692
patch: int n CaMeL C = current CaMeL Point [ 0 ] ;
rank: 261
score: 98.70079549153645
patch: if ( . is CaMeL Empty ( ) ; return ;
rank: 262
score: 99.12096405029297
patch: int current CaMeL Point = weight CaMeL Matrix . current CaMeL Point ( ) ;
rank: 262
score: 99.06768243963069
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current ) ;
rank: 262
score: 99.03232643821023
patch: final double current CaMeL Point = n CaMeL C ;
rank: 262
score: 98.93009730747768
patch: ++ n CaMeL C ; ++ n CaMeL C ; break ; }
rank: 262
score: 98.88267299107143
patch: result = weight CaMeL Matrix . get CaMeL Solver ( ) . get CaMeL Row CaMeL Vector ( ) ;
rank: 262
score: 98.74896240234375
patch: int iter ; else ++ iter ;
rank: 262
score: 98.70018421519886
patch: throw new Runtime CaMeL Exception ( $STRING$ + 1 ;
rank: 262
score: 98.61547173394098
patch: ++ < ++ iter ; ++ iter ;
rank: 263
score: 99.12036946614583
patch: for ( double current CaMeL Point : current CaMeL Point . length ) {
rank: 263
score: 99.0675910500919
patch: int iter = weight CaMeL Matrix . get CaMeL Row ( n CaMeL R ) ;
rank: 263
score: 99.03183880974265
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ,
rank: 263
score: 99.0009765625
patch: final int [ ] residuals CaMeL Weights = current CaMeL Point . length ;
rank: 263
score: 98.92970784505208
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point . ;
rank: 263
score: 98.88256072998047
patch: Object current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 263
score: 98.7794921875
patch: event = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 263
score: 98.70003255208333
patch: if ( ! iter . is CaMeL Empty ++ ) }
rank: 263
score: 98.61531982421874
patch: ++ iter ; ++ null ; ++ iter ;
rank: 264
score: 99.12027780633224
patch: int n CaMeL C = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 264
score: 99.00094443873355
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 264
score: 98.88253623560855
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair {
rank: 264
score: 98.77879115513393
patch: final int iter = current . index CaMeL Of ( $STRING$ ) ;
rank: 264
score: 98.74825613839286
patch: ++ * / ++ iter ;
rank: 264
score: 98.6998291015625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; ;
rank: 264
score: 98.61448669433594
patch: ++ ++ 0 ; ++ iter ;
rank: 265
score: 99.03049538352273
patch: final double n CaMeL C = n CaMeL C ;
rank: 265
score: 99.00062255859375
patch: if ( n CaMeL C < 0 ) {
rank: 265
score: 98.92937268708882
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 265
score: 98.8824462890625
patch: iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 265
score: 98.6998291015625
patch: if ( ! iter . is CaMeL Empty ++ this . iter )
rank: 265
score: 98.61387329101562
patch: ++ iter ; ++ min ; ++ iter ;
rank: 266
score: 99.06704275948661
patch: b = Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 266
score: 99.03034319196429
patch: int current CaMeL Point = n CaMeL R : current CaMeL Point ;
rank: 266
score: 98.99996948242188
patch: int iter = new double [ n CaMeL C ] ;
rank: 266
score: 98.92913818359375
patch: current = current . index CaMeL Of ( current ) ;
rank: 266
score: 98.88192894345238
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . get CaMeL Value ( ) ;
rank: 266
score: 98.7780517578125
patch: try { Thread . current CaMeL Thread ( ) . stop ( ) ;
rank: 266
score: 98.74788041548295
patch: ++ iter ; ++ iter ; ++ - 1 ;
rank: 266
score: 98.69795445033482
patch: if ( ! iter . is CaMeL Empty ++ ; ++ iter ;
rank: 266
score: 98.61300659179688
patch: ++ $NUMBER$ ; ++ iter ; ;
rank: 267
score: 99.11976623535156
patch: ++ current CaMeL Point [ current CaMeL Point , current CaMeL Point . length ;
rank: 267
score: 99.06665717230902
patch: b = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point , current CaMeL Point ) ;
rank: 267
score: 99.02971540178571
patch: double [ ] current CaMeL Point = target CaMeL Values . length ;
rank: 267
score: 98.99988902698864
patch: final double current = current CaMeL Point . length ;
rank: 267
score: 98.92817125822368
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ;
rank: 267
score: 98.77804129464286
patch: ++ iter ; Thread . current CaMeL Thread ( ) . set ;
rank: 267
score: 98.74781629774306
patch: ++ iter ; ++ - iter ; ;
rank: 267
score: 98.69767456054687
patch: ++ * ( iter * 0 . 0 ;
rank: 267
score: 98.61278076171875
patch: ++ iter ; ++ iter ; ++ $STRING$ ;
rank: 268
score: 99.1197445518092
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 1 ) ;
rank: 268
score: 99.029296875
patch: final int n CaMeL C = current CaMeL Point . length : n CaMeL R ;
rank: 268
score: 98.9997917624081
patch: final double current CaMeL Point = current CaMeL Point . length - n CaMeL R ;
rank: 268
score: 98.88137950067934
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 268
score: 98.7469482421875
patch: ++ iter ; int iter { ++ ;
rank: 268
score: 98.69755415482955
patch: if ( iter == null ) return null ; }
rank: 268
score: 98.61255560980902
patch: int iter = iter ; ++ iter ;
rank: 269
score: 99.06622023809524
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current CaMeL Point . length ;
rank: 269
score: 99.02865397135416
patch: final int current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 269
score: 98.998974609375
patch: int n CaMeL C = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 269
score: 98.9281005859375
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 269
score: 98.77706204927884
patch: try { current CaMeL Point = current CaMeL Point . ++ ;
rank: 269
score: 98.74686008029514
patch: ++ iter ; ++ iter ; * *
rank: 269
score: 98.61207411024306
patch: ++ iter ; iter if iter ++ ;
rank: 270
score: 99.06595284598214
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 270
score: 99.02705078125
patch: final Real CaMeL Matrix ( current CaMeL Point , current CaMeL Point ) ;
rank: 270
score: 98.88021047491776
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = current CaMeL Point .
rank: 270
score: 98.77703302556819
patch: if ( iter == current CaMeL Point . length )
rank: 270
score: 98.74642181396484
patch: ++ iter ; try ; iter ;
rank: 270
score: 98.69713745117187
patch: else { this . iter = iter ; }
rank: 270
score: 98.61154513888889
patch: ++ iter ; ++ iter ; try /
rank: 271
score: 99.1180778952206
patch: final double current CaMeL Point = n CaMeL R : current CaMeL Point . length ;
rank: 271
score: 99.02677699497768
patch: final int n CaMeL C = current CaMeL Point . length 1 ;
rank: 271
score: 98.99859619140625
patch: int current CaMeL Point = current CaMeL Point . length : 0 ;
rank: 271
score: 98.92787863991477
patch: ++ n CaMeL C ; System . arraycopy ( ;
rank: 271
score: 98.87990500710227
patch: iter = current CaMeL Point . length ; ++ ;
rank: 271
score: 98.7769775390625
patch: if ( ! iter . is CaMeL Assignable CaMeL From ( current ) )
rank: 271
score: 98.74609375
patch: int iter ; while ++ iter ;
rank: 271
score: 98.69690704345703
patch: else { return new ++ ; }
rank: 271
score: 98.61137390136719
patch: ++ ( 1 ; ++ iter ;
rank: 272
score: 99.026416015625
patch: final int current CaMeL Point = current CaMeL Point : current CaMeL Point ;
rank: 272
score: 98.99854951746323
patch: double current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 272
score: 98.92780219184027
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ;
rank: 272
score: 98.87967258029514
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( n CaMeL R ) ;
rank: 272
score: 98.77677699497768
patch: final int iter = iter . index CaMeL Of ( $STRING$ ) ;
rank: 272
score: 98.7457275390625
patch: ++ iter ; ++ iter ; ++ *
rank: 272
score: 98.69601675180289
patch: if ( ! iter . is CaMeL Empty iter ( ) ;
rank: 272
score: 98.61113630022321
patch: ++ iter ; ++ break ;
rank: 273
score: 99.11678738064236
patch: current = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point . length ) ;
rank: 273
score: 99.06521945529514
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 273
score: 99.02618408203125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = this ;
rank: 273
score: 98.99795096261161
patch: double weight CaMeL Matrix = new double [ n CaMeL C ] ;
rank: 273
score: 98.9277279502467
patch: int iter = current CaMeL Point . length - current CaMeL Point . length ; ++ iter ;
rank: 273
score: 98.87864583333334
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point )
rank: 273
score: 98.77676595052084
patch: current CaMeL Point = current CaMeL Point . length ( ) + 1 ;
rank: 273
score: 98.74521706321023
patch: this . ++ iter ; ++ iter ; iter ;
rank: 273
score: 98.69576009114583
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 273
score: 98.61083984375
patch: ++ iter ; } ++ iter ; else
rank: 274
score: 99.02570452008929
patch: Real CaMeL Matrix [ ] current = current CaMeL Point . length ;
rank: 274
score: 98.9977165670956
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 274
score: 98.92752779447116
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 274
score: 98.87860398065476
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 274
score: 98.77672467912946
patch: ++ iter ; if ( current CaMeL Point . length > 0 ;
rank: 274
score: 98.74468315972223
patch: ++ iter ; else ; int iter ;
rank: 274
score: 98.6957275390625
patch: else { throw new Runtime CaMeL Exception ++ ;
rank: 274
score: 98.61029815673828
patch: ++ new ; ; ++ iter ;
rank: 275
score: 99.1166240985577
patch: final boolean n CaMeL C = current CaMeL Point . length ;
rank: 275
score: 99.064697265625
patch: int iter = weight CaMeL Matrix . length ;
rank: 275
score: 98.99753981370192
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . length ;
rank: 275
score: 98.9269287109375
patch: ++ current CaMeL Point [ iter ] = current CaMeL Point . length ;
rank: 275
score: 98.87808430989584
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = null ;
rank: 275
score: 98.77654622395833
patch: final ; current CaMeL Point = current CaMeL Point . length - 1 ;
rank: 275
score: 98.74446868896484
patch: ++ 0 ; if ++ iter ;
rank: 275
score: 98.69537353515625
patch: else { throw new Illegal CaMeL Argument CaMeL Exception iter ;
rank: 275
score: 98.60915701729911
patch: ++ iter ; ++ * ;
rank: 276
score: 99.06419735863095
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry ( current ) ;
rank: 276
score: 98.997314453125
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( 0 ) ;
rank: 276
score: 98.92667643229167
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 276
score: 98.87769368489583
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ;
rank: 276
score: 98.775390625
patch: try { Thread . current CaMeL Thread ( ) . interrupt ( ;
rank: 276
score: 98.74419403076172
patch: ++ iter ; ++ iter ; start
rank: 276
score: 98.6953353881836
patch: ++ * * * ++ iter ;
rank: 276
score: 98.60906982421875
patch: ++ ( ++ 1 ; ++ iter ;
rank: 277
score: 99.11359998914931
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; }
rank: 277
score: 99.06410845588235
patch: ak = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 277
score: 99.02421569824219
patch: / ? Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ;
rank: 277
score: 98.99678762335526
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Entry ( ) . length ;
rank: 277
score: 98.92633415670956
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 277
score: 98.87755062705592
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair >>
rank: 277
score: 98.77490234375
patch: Node current = current . get CaMeL Parent ( ) ;
rank: 277
score: 98.74397786458333
patch: ++ iter ; try ;
rank: 277
score: 98.69530571831598
patch: if ( iter == null ; else {
rank: 277
score: 98.60715157645089
patch: ++ iter ; ++ * /
rank: 278
score: 99.11331380208334
patch: int current CaMeL Point = current CaMeL Point [ current CaMeL Point ] ;
rank: 278
score: 98.9257080078125
patch: ++ n CaMeL C ; this . ++ ;
rank: 278
score: 98.87735648777173
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . length ;
rank: 278
score: 98.77478966346153
patch: try { iter = current CaMeL Point . length ( ) ;
rank: 278
score: 98.74386596679688
patch: / * ] iter ;
rank: 278
score: 98.6944580078125
patch: if ( . is CaMeL Empty ( ) ) ;
rank: 278
score: 98.60643853081598
patch: ++ iter ; ++ if ++ iter ;
rank: 279
score: 99.11308019301471
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row CaMeL
rank: 279
score: 99.0233487215909
patch: final String current CaMeL Point = current CaMeL Point ;
rank: 279
score: 98.99609375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Point ( 0 ) ;
rank: 279
score: 98.92570665147569
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point , ;
rank: 279
score: 98.87723795572917
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 1 ) ;
rank: 279
score: 98.77364095052083
patch: int iter = current . last CaMeL Index CaMeL Of ( ++ ) ;
rank: 279
score: 98.74356842041016
patch: / * ++ iter ; * /
rank: 279
score: 98.69425964355469
patch: if ++ [ 0 ] ; }
rank: 279
score: 98.60591430664063
patch: ++ iter ; iter
rank: 280
score: 99.06317749023438
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Id ( ) ;
rank: 280
score: 98.9960205078125
patch: final double current CaMeL Point [ ] = current CaMeL Point . length ;
rank: 280
score: 98.92547607421875
patch: current CaMeL Point [ iter ] = ;
rank: 280
score: 98.77244984019886
patch: temp = current CaMeL Point . length ( ) ;
rank: 280
score: 98.74301979758523
patch: ++ iter ; ++ iter ; int iter ++ ;
rank: 280
score: 98.69356960720486
patch: if ( iter == null ; * ;
rank: 280
score: 98.60588989257812
patch: ++ iter ; ++ iter ; iter ; ;
rank: 281
score: 99.06308128720238
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 281
score: 99.02243939568015
patch: Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 281
score: 98.87704903738839
patch: throw new Singular CaMeL Matrix CaMeL Exception ( current CaMeL Point ) ;
rank: 281
score: 98.77199881417411
patch: if ( iter != null )
rank: 281
score: 98.69356595552884
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ;
rank: 281
score: 98.60512084960938
patch: iter iter ++ ; ++ ; ++ iter ;
rank: 282
score: 99.1116943359375
patch: ++ current CaMeL Point . length ;
rank: 282
score: 99.0220458984375
patch: int iter = residuals CaMeL Weights . length ;
rank: 282
score: 98.92526041666666
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 282
score: 98.876708984375
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 282
score: 98.77176920572917
patch: final int iter = current CaMeL Point . length + n CaMeL C ;
rank: 282
score: 98.6934481534091
patch: if ( iter == null ) return null ; else
rank: 283
score: 99.11080228365384
patch: current = current CaMeL Point . get CaMeL Value ( ) ;
rank: 283
score: 99.06283365885416
patch: double current CaMeL Point = current CaMeL Point [ n CaMeL C ] ;
rank: 283
score: 98.99498697916667
patch: boolean converged = false ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 283
score: 98.92485608552632
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , current CaMeL Point ;
rank: 283
score: 98.87660522460938
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , current CaMeL Point ) ;
rank: 283
score: 98.77106267755681
patch: i = current CaMeL Point . length ( ) ;
rank: 283
score: 98.74234347873264
patch: ++ iter ; else * int iter ;
rank: 283
score: 98.693359375
patch: int iter = iter . length ;
rank: 283
score: 98.60415649414062
patch: ++ super ; ++ iter ; ++ iter ;
rank: 284
score: 99.11039011101974
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; int current CaMeL Point = 0 ;
rank: 284
score: 99.06270141601563
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Type ( ) ;
rank: 284
score: 98.92442975725446
patch: int n CaMeL R = current CaMeL Point . length / $NUMBER$ ;
rank: 284
score: 98.8765399639423
patch: private Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 284
score: 98.77036354758523
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 284
score: 98.74197387695312
patch: ++ 1 + iter ;
rank: 284
score: 98.69286295572917
patch: if ( ! iter . is CaMeL Empty ( ) ) throw null ;
rank: 284
score: 98.60281032986111
patch: ++ iter ; ++ iter ; / }
rank: 285
score: 99.10990182976974
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Entry ( 0 ) ;
rank: 285
score: 99.06255812872024
patch: int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 285
score: 99.02126057942708
patch: int iter = n CaMeL R - n CaMeL C ;
rank: 285
score: 98.99397583007813
patch: int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 285
score: 98.92438151041667
patch: ++ current CaMeL Point [ n CaMeL C ] = current CaMeL Point ;
rank: 285
score: 98.87610880533855
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > do CaMeL Optimize ( )
rank: 285
score: 98.76942027698864
patch: root = current CaMeL Point . length ( ) ;
rank: 285
score: 98.74139404296875
patch: ++ iter ; ++ iter ; final
rank: 285
score: 98.6922607421875
patch: if ( ! iter . is CaMeL Empty ; this . ++ iter ;
rank: 285
score: 98.60230712890625
patch: ++ iter ; ++ iter ; -- 1 ;
rank: 286
score: 99.06231134588069
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , weight CaMeL Matrix ) ;
rank: 286
score: 98.99372414981617
patch: final double [ ] current CaMeL Point = current CaMeL Point . length . length ;
rank: 286
score: 98.92431640625
patch: ++ n CaMeL C ; break ;
rank: 286
score: 98.87606956845238
patch: temp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 286
score: 98.76828438895089
patch: ++ iter ; throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 286
score: 98.7412338256836
patch: ++ iter ; try ; break ;
rank: 286
score: 98.60163879394531
patch: ++ iter ; iter * ; /
rank: 287
score: 99.10973403033088
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point ;
rank: 287
score: 99.062255859375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) 0 ;
rank: 287
score: 98.99327087402344
patch: if ( checker == null ) {
rank: 287
score: 98.92400764016544
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , current CaMeL Point ;
rank: 287
score: 98.87537493024554
patch: entry = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 287
score: 98.76802280970982
patch: ++ iter ; throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 287
score: 98.74123128255208
patch: ++ iter ; while ++ iter ; ;
rank: 287
score: 98.6915283203125
patch: if ( ! iter . is CaMeL Empty ++ ) break ; }
rank: 287
score: 98.6014404296875
patch: ++ $NUMBER$ ; ++ iter ; else
rank: 288
score: 99.10911158511513
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point ;
rank: 288
score: 99.06206512451172
patch: final double n CaMeL C = current CaMeL Point [ n CaMeL C ] ;
rank: 288
score: 98.99320845170455
patch: final double converged = current CaMeL Point . length ;
rank: 288
score: 98.9233169555664
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter ) ;
rank: 288
score: 98.87474524456522
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current ;
rank: 288
score: 98.76714680989583
patch: current CaMeL Point = current CaMeL Point . index CaMeL Of ( $STRING$ )
rank: 288
score: 98.74071044921875
patch: if iter ; ++ iter ; ++ iter ;
rank: 288
score: 98.69119262695312
patch: / * ; if ++ iter ;
rank: 288
score: 98.60125732421875
patch: int iter = iter ;
rank: 289
score: 99.10879720052084
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; ++ iter ;
rank: 289
score: 99.01947380514706
patch: final int n CaMeL C = target CaMeL Values . length : n CaMeL C ;
rank: 289
score: 98.99299059416118
patch: final int Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ( ) ;
rank: 289
score: 98.8747265625
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point .
rank: 289
score: 98.76668003627232
patch: try { current CaMeL Point = current CaMeL Point . length ; ;
rank: 289
score: 98.74032592773438
patch: ++ iter ; ; * * /
rank: 289
score: 98.6910629272461
patch: if ( iter iter > 0 ;
rank: 289
score: 98.60079956054688
patch: ++ iter ; ++ iter ; else ++ ;
rank: 290
score: 98.99283175998264
patch: final double current CaMeL Point = weight CaMeL Matrix . get ( current CaMeL Point ) ;
rank: 290
score: 98.92255715762867
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( this , current CaMeL Point ;
rank: 290
score: 98.87458147321429
patch: other = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 290
score: 98.7401123046875
patch: / * ++ iter ; /
rank: 290
score: 98.69024658203125
patch: if ++ [ 0 ] ;
rank: 290
score: 98.60055202907986
patch: ++ iter ; ++ ++ 1 ; ;
rank: 291
score: 99.10802459716797
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 291
score: 99.06148681640624
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point . get CaMeL Point ( ) ;
rank: 291
score: 98.99208374023438
patch: boolean converged = current CaMeL Point . length ;
rank: 291
score: 98.9222183227539
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 291
score: 98.87415364583333
patch: current CaMeL Point = current CaMeL Point . int CaMeL Value ( ) ;
rank: 291
score: 98.76625366210938
patch: temp = current CaMeL Point [ 0 ] ;
rank: 291
score: 98.74010009765625
patch: ++ iter ; int iter ; int iter ;
rank: 291
score: 98.6900390625
patch: final ++ [ ] iter = iter . to CaMeL Array ( ) ;
rank: 291
score: 98.59957275390624
patch: ++ iter ; iter * / ++ iter ;
rank: 292
score: 99.0614501953125
patch: b = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , current CaMeL Point ) ;
rank: 292
score: 98.99193318684895
patch: final double [ ] = current CaMeL Point . length ;
rank: 292
score: 98.92203561883224
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , n CaMeL C ;
rank: 292
score: 98.87328491210937
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 292
score: 98.76598510742187
patch: if ( iter >= n CaMeL C ) {
rank: 292
score: 98.73954772949219
patch: ++ iter ; iter iter * ;
rank: 292
score: 98.68918282645089
patch: if ( iter == iter )
rank: 292
score: 98.59904649522569
patch: ++ iter ; } ++ iter ; ;
rank: 293
score: 99.10652923583984
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Value ( ) ;
rank: 293
score: 98.9918212890625
patch: final Real CaMeL Matrix [ ] current = current CaMeL Point . length ;
rank: 293
score: 98.9214618389423
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ;
rank: 293
score: 98.87328040081522
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . 0 ;
rank: 293
score: 98.76515706380208
patch: int current = current CaMeL Point . length - 1 ;
rank: 293
score: 98.7393798828125
patch: if ++ iter ; ++ - iter ;
rank: 293
score: 98.68866729736328
patch: if ( ++ iter > 0 ;
rank: 293
score: 98.5989990234375
patch: ++ iter ; iter if iter ;
rank: 294
score: 98.99177381727431
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 294
score: 98.92138671875
patch: long iter = current CaMeL Point . length ;
rank: 294
score: 98.8732048483456
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) weight CaMeL Matrix . get CaMeL
rank: 294
score: 98.76461791992188
patch: if ( current CaMeL Point . length < iter ) {
rank: 294
score: 98.73937225341797
patch: / * ++ iter ; / /
rank: 294
score: 98.68838840060764
patch: if ( iter == 0 ) break ;
rank: 294
score: 98.59750705295139
patch: ++ iter ; ++ iter ; } }
rank: 295
score: 99.1060855263158
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 295
score: 99.0595703125
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row CaMeL Vector ( ) ;
rank: 295
score: 99.01523061899039
patch: final double n CaMeL R = target CaMeL Values . length ;
rank: 295
score: 98.99090576171875
patch: final double weight CaMeL Matrix = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 295
score: 98.92060852050781
patch: ++ n CaMeL C ; if ( current CaMeL Point . length > iter )
rank: 295
score: 98.87291949728261
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 295
score: 98.76400052584134
patch: try { current CaMeL Point = iter . iter ( ) ;
rank: 295
score: 98.68832397460938
patch: if ( iter ; * * ;
rank: 295
score: 98.59678649902344
patch: iter iter ++ ; if ++ ;
rank: 296
score: 99.05897827148438
patch: int [ ] current CaMeL Point = current ;
rank: 296
score: 99.0149787454044
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point ;
rank: 296
score: 98.91973876953125
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . ;
rank: 296
score: 98.87270100911458
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , n CaMeL C ) ;
rank: 296
score: 98.76360677083333
patch: Math . max ( iter , current CaMeL Point [ 0 ] ) ;
rank: 296
score: 98.73829650878906
patch: synchronized ++ iter ; ++ iter ;
rank: 296
score: 98.6882553100586
patch: else { ( ++ iter ; }
rank: 296
score: 98.5966552734375
patch: iter ; ++ ; ++ iter ; iter ;
rank: 297
score: 99.10540093315973
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ) ;
rank: 297
score: 99.01485188802083
patch: final Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point ;
rank: 297
score: 98.990478515625
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) . length ;
rank: 297
score: 98.87266956676136
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . to CaMeL Array ( ) ;
rank: 297
score: 98.7632723721591
patch: c = current CaMeL Point . length ( ) ;
rank: 297
score: 98.73808288574219
patch: int iter ; if ++ iter ;
rank: 297
score: 98.68783569335938
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ; }
rank: 298
score: 99.10515998391544
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 298
score: 99.01419270833334
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker ;
rank: 298
score: 98.99036516462054
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ) .
rank: 298
score: 98.91861122532895
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point [ n CaMeL C ] ;
rank: 298
score: 98.87264578683036
patch: iter = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 298
score: 98.76298828125
patch: ++ iter ; throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 298
score: 98.68757847377232
patch: if ( ! iter . is CaMeL Empty ( ) ++ iter ;
rank: 299
score: 99.01398782169117
patch: int n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( iter ) ;
rank: 299
score: 98.98983944163604
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 299
score: 98.918310546875
patch: ++ current CaMeL Point [ iter ] = ;
rank: 299
score: 98.7628662109375
patch: final ; current CaMeL Point = current CaMeL Point . length + 1 ;
rank: 299
score: 98.73714192708333
patch: ++ iter ; ++ * / iter ;
rank: 299
score: 98.68755548650569
patch: else { iter = iter . iter ( ; }
rank: 299
score: 98.59407806396484
patch: ++ iter ; iter / -- ;
rank: 300
score: 99.01387845552884
patch: final double [ ] current CaMeL Point = current CaMeL Point .
rank: 300
score: 98.98965219350961
patch: final double Point CaMeL Vector CaMeL Value CaMeL Pair = current ;
rank: 300
score: 98.91812896728516
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter . ;
rank: 300
score: 98.87259347098214
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ( ) {
rank: 300
score: 98.76205240885416
patch: final int n CaMeL R = current CaMeL Point . length - iter ;
rank: 300
score: 98.7370834350586
patch: * ++ iter ; ++ iter ;
rank: 300
score: 98.68719482421875
patch: if ( ! iter . is CaMeL Empty ( ; ++ iter ;
rank: 300
score: 98.59272766113281
patch: ++ iter ; ++ start ; ;
rank: 301
score: 99.10264677159927
patch: ++ n CaMeL R ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 301
score: 99.0569080171131
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( n CaMeL R ) ;
rank: 301
score: 99.01292419433594
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker ;
rank: 301
score: 98.98940022786458
patch: int [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 301
score: 98.9180419921875
patch: ++ iter [ n CaMeL C ] = current CaMeL Point . length ;
rank: 301
score: 98.76202392578125
patch: int iter = current CaMeL Point . length + $NUMBER$ ;
rank: 301
score: 98.7368672688802
patch: int iter + iter ;
rank: 301
score: 98.68636067708333
patch: ++ [ 0 ] ;
rank: 301
score: 98.59214782714844
patch: ; ++ iter ; ++ iter ;
rank: 302
score: 99.05681762695312
patch: current CaMeL Point [ ] = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 302
score: 99.01261683872768
patch: int current CaMeL Point = n CaMeL C - n CaMeL R ;
rank: 302
score: 98.98922568873355
patch: final Real CaMeL Matrix weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 302
score: 98.91799094460227
patch: ++ n CaMeL C + n CaMeL C ; ;
rank: 302
score: 98.87235691236413
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 302
score: 98.761865234375
patch: current CaMeL Point = current CaMeL Point . length ( ) - iter ;
rank: 302
score: 98.73674011230469
patch: ++ iter ; ++ case iter ;
rank: 302
score: 98.68618774414062
patch: else { ++ ++ iter ; }
rank: 302
score: 98.59181518554688
patch: ++ iter ; ++ iter ; ++ this ;
rank: 303
score: 99.10171169704861
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL
rank: 303
score: 99.05637428977273
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) .
rank: 303
score: 99.01256452287946
patch: double n CaMeL R = current CaMeL Point . length ( ) ;
rank: 303
score: 98.98874080882354
patch: final double weight CaMeL Matrix = current CaMeL Point . length : n CaMeL C ;
rank: 303
score: 98.91774338942308
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ; }
rank: 303
score: 98.76176234654018
patch: int iter = current CaMeL Point . length ( ) - 1 ;
rank: 303
score: 98.73421223958333
patch: ++ iter ; ++ - - 1 ;
rank: 303
score: 98.6853496844952
patch: if ( ! iter . is CaMeL Empty ( this ) ;
rank: 303
score: 98.59160614013672
patch: ++ start ; ++ iter ; ;
rank: 304
score: 99.10126091452206
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; ++ n CaMeL C ;
rank: 304
score: 99.05487932477679
patch: int current CaMeL Point = current CaMeL Point . length ; / /
rank: 304
score: 98.91773223876953
patch: current = current CaMeL Point . substring ( iter , n CaMeL C ) ;
rank: 304
score: 98.87198539402173
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . to CaMeL String ( ) ;
rank: 304
score: 98.7616854580966
patch: j = current CaMeL Point . length - iter ;
rank: 304
score: 98.68527221679688
patch: if ( ! iter . is CaMeL Empty ++ true ;
rank: 304
score: 98.5909423828125
patch: ++ iter ; iter return iter ;
rank: 305
score: 99.10097830636161
patch: current = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 305
score: 98.98799133300781
patch: double [ ] current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 305
score: 98.87197536892361
patch: result = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 305
score: 98.76160606971153
patch: if ( ! iter . equals ( current CaMeL Point ) ;
rank: 305
score: 98.73330688476562
patch: } int iter ; ++ iter ;
rank: 305
score: 98.68433634440105
patch: if ( ! iter . is CaMeL Empty ( ; ;
rank: 305
score: 98.59062364366319
patch: ++ iter ; ++ iter ; else iter
rank: 306
score: 99.01200727982955
patch: final Object current CaMeL Point = current CaMeL Point ;
rank: 306
score: 98.98765804893092
patch: final double Point CaMeL Vector CaMeL Value CaMeL Pair = current CaMeL Point . length ( ) ;
rank: 306
score: 98.91708553538604
patch: int iter = current CaMeL Point . length - current CaMeL Point . length ; ;
rank: 306
score: 98.87177734375
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > do CaMeL Optimize ( ) {
rank: 306
score: 98.76158854166667
patch: temp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 306
score: 98.73325805664062
patch: ++ iter ; ++ - ; ++ iter ;
rank: 306
score: 98.68411254882812
patch: return new Object [ iter ] ;
rank: 306
score: 98.5902328491211
patch: ++ -- 1 ; ++ iter ;
rank: 307
score: 99.09987505744485
patch: final int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 307
score: 99.05351329985119
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 307
score: 99.011962890625
patch: current = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 307
score: 98.98707071940105
patch: / * compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 307
score: 98.91684857536765
patch: current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ( ;
rank: 307
score: 98.87151135896382
patch: [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 307
score: 98.76128595525569
patch: current CaMeL Point [ n CaMeL R ] = ;
rank: 307
score: 98.73321533203125
patch: ++ iter ; ++ iter ; public
rank: 307
score: 98.6835708618164
patch: / * * * ++ * /
rank: 307
score: 98.58778211805556
patch: ++ iter ; iter / / / ;
rank: 308
score: 99.09944974459134
patch: current = current CaMeL Point . get CaMeL Row ( ) ;
rank: 308
score: 99.05332946777344
patch: final int n CaMeL C = target CaMeL Values [ n CaMeL C ] ;
rank: 308
score: 99.01113712086396
patch: final double n CaMeL C = current CaMeL Point . length : n CaMeL C ;
rank: 308
score: 98.98621283637152
patch: int iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 308
score: 98.91659109933036
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 308
score: 98.87143841911765
patch: i = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 308
score: 98.76111653645833
patch: n CaMeL C = current CaMeL Point . length ( ) - iter ;
rank: 308
score: 98.73320770263672
patch: ++ iter ; while ++ $NUMBER$ ;
rank: 308
score: 98.68252766927084
patch: if ( ! iter . is CaMeL Empty ( ) ) . add ;
rank: 308
score: 98.58644612630208
patch: ++ iter ; ; ;
rank: 309
score: 99.09917891652961
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Value ( ) ;
rank: 309
score: 98.98572887073864
patch: final double current CaMeL Point = n CaMeL R ;
rank: 309
score: 98.9164287860577
patch: ++ n CaMeL C ; ++ iter - n CaMeL C ;
rank: 309
score: 98.87141687729779
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL C = current ;
rank: 309
score: 98.76105205829327
patch: j = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 309
score: 98.73296440972223
patch: ++ iter ; ; / * / /
rank: 309
score: 98.68227914663461
patch: if ( ! iter . is CaMeL Empty ( || ) ;
rank: 309
score: 98.58567979600694
patch: ++ iter ; ; iter / / /
rank: 310
score: 99.09902774586396
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; int iter = 0 ;
rank: 310
score: 99.01058756510416
patch: final byte [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 310
score: 98.91637311662946
patch: final double iter = current CaMeL Point . length ; ++ iter ;
rank: 310
score: 98.87127326516544
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . next CaMeL
rank: 310
score: 98.76097523082386
patch: current = current CaMeL Point . length - 1 ;
rank: 310
score: 98.73273383246527
patch: ++ iter ; int iter = 0 ;
rank: 310
score: 98.68218994140625
patch: if ( iter == 0 ; ++ iter ;
rank: 310
score: 98.58557891845703
patch: ++ null ; ; ++ iter ;
rank: 311
score: 99.0980224609375
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current CaMeL Point ;
rank: 311
score: 99.00928452435662
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current = null ;
rank: 311
score: 98.98536028180804
patch: double current CaMeL Point = new double [ n CaMeL C ] ;
rank: 311
score: 98.91633157169117
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ;
rank: 311
score: 98.76044108072917
patch: tmp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 311
score: 98.7318359375
patch: if ++ iter ;
rank: 311
score: 98.68086751302083
patch: if ( . is CaMeL Empty ( ) ) ; }
rank: 311
score: 98.58511691623264
patch: ++ iter ; ++ max ; iter ;
rank: 312
score: 99.05256922104779
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; ++ n CaMeL C ;
rank: 312
score: 99.00912475585938
patch: return weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ; }
rank: 312
score: 98.91595458984375
patch: int n CaMeL R = current CaMeL Point . length ; ++ n CaMeL R ; ;
rank: 312
score: 98.871142578125
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 312
score: 98.759228515625
patch: final int iter = iter . last CaMeL Index CaMeL Of ( $STRING$ ;
rank: 312
score: 98.73177083333333
patch: } ++ iter ; while ++ iter ;
rank: 312
score: 98.68081665039062
patch: / * ++ * * * /
rank: 312
score: 98.58456081814236
patch: ++ iter ; ++ ; = iter ;
rank: 313
score: 99.09752699908088
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 313
score: 99.00857204861111
patch: final Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 313
score: 98.91592068142361
patch: ++ n CaMeL C ; iter ++ ;
rank: 313
score: 98.87080213758681
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 313
score: 98.75873272235577
patch: current = current CaMeL Point . length ( ) - 1 ;
rank: 313
score: 98.73173014322917
patch: / * ++ iter ; / / /
rank: 313
score: 98.68018450055804
patch: else { return null ; }
rank: 313
score: 98.58411407470703
patch: ++ ( ++ iter ; / /
rank: 314
score: 99.09746237362133
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length 1 ;
rank: 314
score: 99.05210658482143
patch: Decomposition CaMeL Solver < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = get CaMeL Solver ( ) ;
rank: 314
score: 99.00822618272569
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Weighted CaMeL Jacobian ( current ;
rank: 314
score: 98.91551717122395
patch: ++ iter ; current CaMeL Point = iter . iter ;
rank: 314
score: 98.87058512369792
patch: [ ] current CaMeL Point = current CaMeL Point . ;
rank: 314
score: 98.7582674893466
patch: iter = current CaMeL Point . length + 1 ;
rank: 314
score: 98.73150634765625
patch: ++ iter ; try ; ++ iter ; ;
rank: 314
score: 98.67999822443181
patch: if ( iter == null ; return false ; }
rank: 314
score: 98.58357238769531
patch: ++ iter ; ++ 1 ; }
rank: 315
score: 99.0510723407452
patch: int Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 315
score: 98.98440317007211
patch: final double current CaMeL Point = weight CaMeL Matrix . length ;
rank: 315
score: 98.91503295898437
patch: ++ n CaMeL C ; if ( ! ;
rank: 315
score: 98.8705303485577
patch: int n CaMeL C = current CaMeL Point . length ; final
rank: 315
score: 98.75792347301136
patch: if ( ! iter . contains ( current ) ;
rank: 315
score: 98.73100934709821
patch: i * ; ++ iter ;
rank: 315
score: 98.67998046875
patch: if ( ! iter . is CaMeL Empty ( ) ; ++ iter )
rank: 315
score: 98.58352661132812
patch: ++ ( iter ; ++ 1 ;
rank: 316
score: 99.051025390625
patch: int current CaMeL Point = current CaMeL Point . length * current CaMeL Point ;
rank: 316
score: 99.00762469951923
patch: final double current CaMeL Point = target CaMeL Values . length ;
rank: 316
score: 98.984130859375
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , current CaMeL Point ) ;
rank: 316
score: 98.91487943209134
patch: current CaMeL Point [ iter ] = ++ n CaMeL C ;
rank: 316
score: 98.75764683314732
patch: current CaMeL Point = current CaMeL Point . to CaMeL String ( ;
rank: 316
score: 98.73092990451389
patch: ++ iter ; for iter ; ; *
rank: 316
score: 98.67990112304688
patch: , iter = iter . length ;
rank: 316
score: 98.58218994140626
patch: ++ iter ; ++ true ; ++ iter ;
rank: 317
score: 98.98384857177734
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 317
score: 98.914306640625
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ; }
rank: 317
score: 98.8702392578125
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ; }
rank: 317
score: 98.757373046875
patch: final Integer iter = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 317
score: 98.73017883300781
patch: ++ iter ; ++ $NUMBER$ ; ;
rank: 317
score: 98.679443359375
patch: if ( . is CaMeL Empty ( ; * 0 . $NUMBER$ ) ;
rank: 317
score: 98.58155059814453
patch: public ++ iter ; ++ iter ;
rank: 318
score: 99.09560139973958
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point ;
rank: 318
score: 99.05047898065476
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ;
rank: 318
score: 99.00568096454327
patch: return compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 318
score: 98.9827880859375
patch: double iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 318
score: 98.9136493389423
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 318
score: 98.86996605282738
patch: y = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 318
score: 98.75692983774039
patch: if ( iter < current CaMeL Point . length ; ) {
rank: 318
score: 98.72958374023438
patch: ++ iter ; ; int iter ;
rank: 318
score: 98.6794204711914
patch: if ( iter ; > 0 ;
rank: 318
score: 98.58072509765626
patch: ++ iter ; ++ iter ; ++ break ;
rank: 319
score: 99.09468841552734
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get ( ) ;
rank: 319
score: 99.00567985983456
patch: final int n CaMeL C = current CaMeL Point . length * n CaMeL C ;
rank: 319
score: 98.91336220189145
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current . get CaMeL Value ( ) ;
rank: 319
score: 98.8699261209239
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current ;
rank: 319
score: 98.729052734375
patch: ++ iter ; try { ++ iter ; }
rank: 319
score: 98.67936197916667
patch: if ( . is CaMeL Empty ( ; > 0 )
rank: 320
score: 99.09433419363839
patch: current = weight CaMeL Matrix [ current CaMeL Point . length ] ;
rank: 320
score: 99.04991455078125
patch: current CaMeL Point [ ] += weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ;
rank: 320
score: 98.982421875
patch: int iter = current CaMeL Point . length : 0 ;
rank: 320
score: 98.91326141357422
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 320
score: 98.86965942382812
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , current CaMeL Point ) ;
rank: 320
score: 98.75623430524554
patch: if ( current CaMeL Point . length ( ) > 0 ) {
rank: 320
score: 98.72862413194444
patch: / * ++ ++ ; ++ iter ;
rank: 320
score: 98.67899576822917
patch: if ( ! iter . is CaMeL Empty ; * /
rank: 320
score: 98.58005196707589
patch: } iter ; ++ iter ;
rank: 321
score: 98.982373046875
patch: return new double [ n CaMeL C ] ;
rank: 321
score: 98.91318184988839
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair = ;
rank: 321
score: 98.72823079427083
patch: ++ iter ; while iter + 0 ;
rank: 321
score: 98.67888849431819
patch: if ( iter == null ; return ++ iter ;
rank: 321
score: 98.57981872558594
patch: ++ iter ; ; iter / /
rank: 322
score: 99.09390419407895
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ; / * /
rank: 322
score: 99.04987444196429
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 322
score: 99.0042365579044
patch: final int n CaMeL R = current CaMeL Point . length : n CaMeL C ;
rank: 322
score: 98.98212076822917
patch: int iter = current CaMeL Point . length ; int iter = 0 ;
rank: 322
score: 98.9126953125
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 322
score: 98.86955460258152
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 322
score: 98.75563401442308
patch: try { current CaMeL Point [ n CaMeL C ] = ;
rank: 322
score: 98.72751686789773
patch: ++ iter ; ++ iter ; final ++ iter ;
rank: 322
score: 98.67875671386719
patch: else { ++ [ 0 ] ;
rank: 322
score: 98.5794921875
patch: ++ iter ; ++ iter ; -- start ;
rank: 323
score: 99.09364827473958
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ; / /
rank: 323
score: 99.04985119047619
patch: int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 323
score: 99.00392061121323
patch: final int n CaMeL R = current CaMeL Point . length : n CaMeL R ;
rank: 323
score: 98.91254625822368
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ) ; }
rank: 323
score: 98.8694206686581
patch: temp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 323
score: 98.75542340959821
patch: if ( ! iter . compare CaMeL To ( iter ) ) {
rank: 323
score: 98.72738647460938
patch: ++ iter ; for iter ; ;
rank: 323
score: 98.67868041992188
patch: if ( ! iter . is CaMeL Empty ++ false ;
rank: 323
score: 98.57947455512152
patch: if iter = 0 ; ++ iter ;
rank: 324
score: 99.0494384765625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 324
score: 98.91249712775735
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 324
score: 98.86895392922794
patch: other = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 324
score: 98.7544189453125
patch: ++ iter ; Thread . current CaMeL Thread ( ) . stop ( ;
rank: 324
score: 98.72734985351562
patch: ++ iter ; ++ * ; ++ iter ;
rank: 324
score: 98.67832641601562
patch: else { iter = iter . max ; }
rank: 324
score: 98.57845458984374
patch: ++ 0 ; ++ iter ; -- iter ;
rank: 325
score: 99.0918197631836
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 325
score: 99.04928152901786
patch: b = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 325
score: 99.00315163352273
patch: final int n CaMeL R = n CaMeL C ;
rank: 325
score: 98.91238403320312
patch: current CaMeL Point [ n CaMeL C ] = ; }
rank: 325
score: 98.86895073784723
patch: max = current CaMeL Point . length ;
rank: 325
score: 98.75392659505208
patch: ++ iter ; ++ n CaMeL C ; ++ iter ;
rank: 325
score: 98.72624206542969
patch: ++ 1 iter ; ++ iter ;
rank: 325
score: 98.67808314732143
patch: if ( . is CaMeL Empty ( ) ) return iter ; }
rank: 325
score: 98.57823944091797
patch: ++ start ; ; ++ iter ;
rank: 326
score: 99.09161698190789
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . get CaMeL Entry ( ) ;
rank: 326
score: 99.04928152901786
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ;
rank: 326
score: 99.00277506510416
patch: final int n CaMeL C = n CaMeL R - n CaMeL C ;
rank: 326
score: 98.98021742876838
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) . {
rank: 326
score: 98.91203227796052
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ;
rank: 326
score: 98.8685661764706
patch: state = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 326
score: 98.75391438802083
patch: ++ iter ; current CaMeL Point [ n CaMeL R ] = iter ;
rank: 326
score: 98.72586398654514
patch: ++ iter ; iter ; / * /
rank: 326
score: 98.67786516462054
patch: / * * * * /
rank: 327
score: 99.0914306640625
patch: int current CaMeL Point [ ] = current CaMeL Point . length ;
rank: 327
score: 99.049169921875
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point . get CaMeL Value ( ) ;
rank: 327
score: 99.00221470424107
patch: Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current = null ;
rank: 327
score: 98.98008728027344
patch: final double weight CaMeL Matrix = current CaMeL Point [ n CaMeL C ] ;
rank: 327
score: 98.911767578125
patch: current = current CaMeL Point . index CaMeL Of ( $STRING$ ) ; ;
rank: 327
score: 98.86850992838542
patch: result = compute CaMeL Value ( current CaMeL Point ) ;
rank: 327
score: 98.75336100260417
patch: int iter = current CaMeL Point . index CaMeL Of ( this ) ;
rank: 327
score: 98.72553168402777
patch: int iter ; ++ iter + iter ;
rank: 327
score: 98.67775065104166
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + iter + $STRING$ ;
rank: 327
score: 98.57764892578125
patch: ++ iter ; ++ iter ; ++ true ;
rank: 328
score: 99.09098677201705
patch: current = current . get CaMeL Point ( ) ;
rank: 328
score: 99.04906116832386
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current ) ;
rank: 328
score: 98.97999064127605
patch: / / compute CaMeL Cost ( current CaMeL Point ) ;
rank: 328
score: 98.91166178385417
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 328
score: 98.86830205502717
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Value ( ) ;
rank: 328
score: 98.72539728338069
patch: ++ iter ; while ++ iter ; ++ iter ;
rank: 328
score: 98.67771693638393
patch: if ( ! iter . is CaMeL Empty ( ) ; while ;
rank: 328
score: 98.57752821180556
patch: ++ ++ iter ; ++ iter ; }
rank: 329
score: 99.09033921185662
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ;
rank: 329
score: 99.00140380859375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point , current CaMeL Point ;
rank: 329
score: 98.97932703354779
patch: double current CaMeL Point = current CaMeL Point . length ; int iter = 0 ;
rank: 329
score: 98.91163940429688
patch: ++ iter ; ++ n CaMeL C ; ;
rank: 329
score: 98.86793428308823
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = current ;
rank: 329
score: 98.75279017857143
patch: int iter = current CaMeL Point . index CaMeL Of ( $STRING$ )
rank: 329
score: 98.72508239746094
patch: try { iter ; ++ iter ;
rank: 329
score: 98.6773681640625
patch: ( ( Illegal CaMeL State CaMeL Exception ) iter ; }
rank: 329
score: 98.57726372612848
patch: ++ new ; ++ iter ; iter ;
rank: 330
score: 99.09028894761029
patch: ++ current CaMeL Point [ current CaMeL Point [ current CaMeL Point . length ] ;
rank: 330
score: 99.00090874565973
patch: residuals CaMeL Weights ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 330
score: 98.97886439732143
patch: int current CaMeL Point = target CaMeL Values . length : 0 ;
rank: 330
score: 98.91161092122395
patch: ++ iter ; this . ++ n CaMeL C ; ;
rank: 330
score: 98.7525634765625
patch: assert current CaMeL Point [ iter ] . length > 0 ;
rank: 330
score: 98.72437286376953
patch: ++ iter ; iter - iter ;
rank: 330
score: 98.67694091796875
patch: return ++ [ 0 ] ;
rank: 330
score: 98.57712131076389
patch: ++ iter ; ++ iter ; } ;
rank: 331
score: 99.0487060546875
patch: final int n CaMeL C = current CaMeL Point . length ; / /
rank: 331
score: 99.000732421875
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( iter ) ;
rank: 331
score: 98.9783935546875
patch: measurement = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 331
score: 98.91150620404412
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 331
score: 98.867431640625
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = null ;
rank: 331
score: 98.67688927283653
patch: throw new Runtime CaMeL Exception ( $STRING$ + iter + $STRING$ ;
rank: 331
score: 98.57697143554688
patch: ++ iter ; ++ iter ; else ; iter
rank: 332
score: 99.04839797247024
patch: Decomposition CaMeL Solver < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current CaMeL Point . length ;
rank: 332
score: 98.97776392886513
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ) ;
rank: 332
score: 98.91132668887867
patch: ++ n CaMeL C ; if ( current CaMeL Point . length > 0 ) {
rank: 332
score: 98.86721365792411
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair > current = null ;
rank: 332
score: 98.75169154575893
patch: while ( ! iter . is CaMeL Empty ( ) ; ) {
rank: 332
score: 98.72380065917969
patch: ++ iter ; ++ case 1 ;
rank: 332
score: 98.67684936523438
patch: if ( ! iter . is CaMeL Empty iter ++ ;
rank: 332
score: 98.5769271850586
patch: ++ iter ; ++ 1 ; else
rank: 333
score: 99.08942727481617
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair . get CaMeL Row ( ) ;
rank: 333
score: 99.04810248480902
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current , current CaMeL Point ) ;
rank: 333
score: 98.99984741210938
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point ;
rank: 333
score: 98.97703857421875
patch: residuals CaMeL Weights [ iter ] = null ;
rank: 333
score: 98.91101837158203
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 333
score: 98.86673990885417
patch: Iterator < Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair )
rank: 333
score: 98.75147501627605
patch: if ( ! iter . equals ( current ) ) {
rank: 333
score: 98.72343444824219
patch: ++ iter ; else * * /
rank: 333
score: 98.67669208233173
patch: else { throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 333
score: 98.57677612304687
patch: ++ iter ; ++ iter ; ++ null ;
rank: 334
score: 98.99982766544117
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( ) ;
rank: 334
score: 98.86644398082386
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . to CaMeL String ( ) ) ;
rank: 334
score: 98.75105794270833
patch: current CaMeL Point [ iter ] = current CaMeL Point [ iter ] ;
rank: 334
score: 98.67664591471355
patch: if ( ! iter . is CaMeL Empty ++ iter )
rank: 334
score: 98.57666015625
patch: ++ iter ; ; else ;
rank: 335
score: 99.04739815848214
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) true ;
rank: 335
score: 98.99926079644098
patch: final int n CaMeL C = 0 ;
rank: 335
score: 98.90995279947917
patch: ++ iter ; final ; ++ iter ;
rank: 335
score: 98.86628069196429
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL
rank: 335
score: 98.72298855251736
patch: } ++ iter ; if ++ iter ;
rank: 335
score: 98.67573765345982
patch: if ( . is CaMeL Empty ( ) ; return ++ iter ;
rank: 336
score: 99.08857945033482
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current = current ;
rank: 336
score: 98.9986572265625
patch: final double n CaMeL C = current CaMeL Point . length 1 ;
rank: 336
score: 98.97677408854166
patch: double current CaMeL Point = target CaMeL Values [ n CaMeL C ] ;
rank: 336
score: 98.90966033935547
patch: ++ iter ; current CaMeL Point = current CaMeL Point . index CaMeL Of ;
rank: 336
score: 98.86617702907986
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , null ) ;
rank: 336
score: 98.75081787109374
patch: ++ iter ; current CaMeL Point = 0 ;
rank: 336
score: 98.72291564941406
patch: ++ 0 ; while ++ iter ;
rank: 336
score: 98.67550659179688
patch: else { throw new Runtime CaMeL Exception ++ iter ; }
rank: 336
score: 98.57618059430804
patch: ++ iter ; -- iter ;
rank: 337
score: 99.08854675292969
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current - n CaMeL R ;
rank: 337
score: 99.04686737060547
patch: int n CaMeL C = current CaMeL Point . length * current CaMeL Point ;
rank: 337
score: 98.8660529641544
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = n CaMeL C ;
rank: 337
score: 98.75054931640625
patch: ++ iter ; if ( current CaMeL Point . length > iter )
rank: 337
score: 98.72203826904297
patch: ++ iter ; ++ iter ; int
rank: 337
score: 98.67329624720982
patch: if ( ! iter . is CaMeL Empty ( ) ) throw ;
rank: 337
score: 98.57540130615234
patch: ++ iter ; ++ ; iter ;
rank: 338
score: 99.08842637803819
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current = current CaMeL Point ;
rank: 338
score: 99.04681687127976
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) checker ;
rank: 338
score: 98.99827473958334
patch: final int current CaMeL Point = current CaMeL Point - n CaMeL C ;
rank: 338
score: 98.97565056295956
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 338
score: 98.90913221571181
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ;
rank: 338
score: 98.86549072265625
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 338
score: 98.74915364583333
patch: ++ iter ; if ( current CaMeL Point . length > 1 ) {
rank: 338
score: 98.72188568115234
patch: ++ iter ; / * * /
rank: 338
score: 98.6727783203125
patch: if ( ! iter . is CaMeL Empty ( ) ; break ; }
rank: 338
score: 98.57515258789063
patch: ++ Math ; ++ iter ; ++ iter ;
rank: 339
score: 98.99818638392857
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ;
rank: 339
score: 98.97551618303571
patch: boolean converged = current CaMeL Point . length - n CaMeL R ;
rank: 339
score: 98.90873579545455
patch: int iter = current CaMeL Point . length ; ;
rank: 339
score: 98.72078450520833
patch: ++ iter ; / ; int iter ;
rank: 339
score: 98.67241668701172
patch: else { / * * ; }
rank: 339
score: 98.57459259033203
patch: ++ new ++ ; ++ 1 ;
rank: 340
score: 99.04647972470238
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 340
score: 98.99794634650735
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . current ;
rank: 340
score: 98.97494346217105
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . to CaMeL String ( ) . length ;
rank: 340
score: 98.90870079627403
patch: ++ iter ; final Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 340
score: 98.86528015136719
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 340
score: 98.74889026988636
patch: int iter 1 = current CaMeL Point . length ;
rank: 340
score: 98.72020806206598
patch: ++ iter ; / * * ; /
rank: 340
score: 98.67233712332589
patch: if ( iter ; break ;
rank: 340
score: 98.5733642578125
patch: if ++ 1 ; ++ iter ;
rank: 341
score: 99.08807051809211
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; ;
rank: 341
score: 99.04641544117646
patch: final int current CaMeL Point = current CaMeL Point . length - n CaMeL C ;
rank: 341
score: 98.97457275390624
patch: int [ ] current CaMeL Point = null ;
rank: 341
score: 98.9075927734375
patch: current CaMeL Point [ n CaMeL C ] = current ;
rank: 341
score: 98.86521402994792
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point [ 0 ] ;
rank: 341
score: 98.74876302083334
patch: ++ iter ; if ( current CaMeL Point . starts CaMeL With ( ;
rank: 341
score: 98.71981048583984
patch: ++ iter ; ++ int iter ;
rank: 341
score: 98.67225060096153
patch: if ( ! iter . is CaMeL Empty ( ; ) }
rank: 341
score: 98.57306518554688
patch: ++ iter ; ++ iter ; / * /
rank: 342
score: 99.08790498621323
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 342
score: 99.04568481445312
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair * current CaMeL Point ;
rank: 342
score: 98.99774576822917
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; / * /
rank: 342
score: 98.906982421875
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter ;
rank: 342
score: 98.86458914620536
patch: return new Block CaMeL Real CaMeL Matrix ( n CaMeL C ) ;
rank: 342
score: 98.7487548828125
patch: int iter = current . index CaMeL Of ( $STRING$ ) . length ;
rank: 342
score: 98.67191569010417
patch: if ( ! iter . is CaMeL Empty ( ) ; return null ;
rank: 342
score: 98.57262420654297
patch: ++ 0 ; ++ ++ iter ;
rank: 343
score: 99.08751502403847
patch: final long current CaMeL Point = current CaMeL Point . length ;
rank: 343
score: 99.04566714638158
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Block CaMeL Real CaMeL Matrix ) current ;
rank: 343
score: 98.9976094563802
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = 0 ;
rank: 343
score: 98.9068603515625
patch: ++ n CaMeL R ;
rank: 343
score: 98.74847966974431
patch: ++ iter ; System . exit ( 0 ) ;
rank: 343
score: 98.71961059570313
patch: this . ++ iter ; ++ iter ; }
rank: 343
score: 98.67137451171875
patch: if ( iter > 0 ; return iter ;
rank: 344
score: 99.04534912109375
patch: final int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 344
score: 98.99744370404412
patch: final double weight CaMeL Matrix = current CaMeL Point . get CaMeL Point ( ) ;
rank: 344
score: 98.97403971354167
patch: final double current CaMeL Point = current CaMeL Point . length : 0 ;
rank: 344
score: 98.90662638346355
patch: current = current . index CaMeL Of ( $STRING$ ) ;
rank: 344
score: 98.86385091145833
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 344
score: 98.74781901041666
patch: ++ iter ; if ( current CaMeL Point . length > iter ) {
rank: 344
score: 98.71890258789062
patch: int iter + iter + iter ;
rank: 344
score: 98.67083740234375
patch: if ( ! iter . is CaMeL Empty ( ; ) ) ;
rank: 344
score: 98.57133483886719
patch: ++ ++ iter ; ++ 0 ;
rank: 345
score: 99.04523174579327
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix ;
rank: 345
score: 98.9063232421875
patch: ++ iter ; this . ++ iter ; ;
rank: 345
score: 98.71876356336806
patch: ++ iter ; int iter * ++ ;
rank: 345
score: 98.67034912109375
patch: if ( ! iter . is CaMeL Empty ++ ) . ++ ;
rank: 345
score: 98.57122192382812
patch: ++ iter ; ++ current ; ++ iter ;
rank: 346
score: 99.04520263671876
patch: b = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point , current CaMeL Point ) ;
rank: 346
score: 98.97311580882354
patch: int current CaMeL Point = current CaMeL Point . length ; int iter = 0 ;
rank: 346
score: 98.90559895833333
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current . get CaMeL Point ( ;
rank: 346
score: 98.86296844482422
patch: < n CaMeL C ; ) {
rank: 346
score: 98.746435546875
patch: ++ iter ; if ( current CaMeL Point . length == 0 ) {
rank: 346
score: 98.71834988064236
patch: ++ iter ; int iter ; else *
rank: 346
score: 98.67006138392857
patch: else { / * * /
rank: 346
score: 98.57082790798611
patch: ++ iter ; } ++ iter ; }
rank: 347
score: 98.9730224609375
patch: final double [ ] current CaMeL Point = current CaMeL Point . length : 0 ;
rank: 347
score: 98.90552571614583
patch: ++ n CaMeL C ; iter = current CaMeL Point . length ; ;
rank: 347
score: 98.86292788856908
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair )
rank: 347
score: 98.7461669921875
patch: ++ iter ; throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 347
score: 98.718017578125
patch: value { ++ ; ++ iter ;
rank: 347
score: 98.66974748883929
patch: if ( iter != null && iter . is CaMeL Empty ++ )
rank: 347
score: 98.57069091796875
patch: ++ iter ; iter / * = iter ;
rank: 348
score: 99.0447021484375
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 348
score: 98.97218424479166
patch: final double [ ] current CaMeL Point += current CaMeL Point . length ;
rank: 348
score: 98.90544297960069
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter , ;
rank: 348
score: 98.86289876302084
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = null ;
rank: 348
score: 98.74574631911058
patch: ++ iter ; if ( ! iter . is CaMeL Empty ;
rank: 348
score: 98.71749877929688
patch: ++ iter ; while iter iter ;
rank: 348
score: 98.66973114013672
patch: / * * * ++ iter ;
rank: 348
score: 98.5700927734375
patch: ++ iter ; iter / ; -- iter ;
rank: 349
score: 99.08620198567708
patch: current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Row CaMeL
rank: 349
score: 99.04450141059027
patch: double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 349
score: 98.97162224264706
patch: final double [ ] current CaMeL Point = this . target CaMeL Values . length ;
rank: 349
score: 98.9051284790039
patch: int n CaMeL C = current CaMeL Point . length ( ) - 1 ;
rank: 349
score: 98.86287841796874
patch: y = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 349
score: 98.745361328125
patch: final int iter = current CaMeL Point . index CaMeL Of ( ;
rank: 349
score: 98.66927083333333
patch: if ( ! iter . is CaMeL Empty ++ && iter . equals ;
rank: 349
score: 98.56981811523437
patch: ++ iter ; iter = iter + iter ;
rank: 350
score: 99.08547973632812
patch: current = residuals CaMeL Weights [ n CaMeL R ] ;
rank: 350
score: 99.04439871651786
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current ) ;
rank: 350
score: 98.9957763671875
patch: final double current CaMeL Point = current CaMeL Point : current CaMeL Point ;
rank: 350
score: 98.97156633649554
patch: ++ iter ; / * /
rank: 350
score: 98.86284528459821
patch: Iterator n CaMeL C = target CaMeL Values . iterator ( ) ;
rank: 350
score: 98.74530901227679
patch: if ( current CaMeL Point . index CaMeL Of ( $STRING$ ) ;
rank: 350
score: 98.71634928385417
patch: ++ iter ; / ; ++ iter ;
rank: 350
score: 98.66902160644531
patch: else { ++ iter ; ; }
rank: 350
score: 98.56932983398437
patch: ++ iter ; ++ iter ; break ; ;
rank: 351
score: 98.9714599609375
patch: / / / compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ) ;
rank: 351
score: 98.90427652994792
patch: ++ n CaMeL C ; ++ n CaMeL C $NUMBER$ ;
rank: 351
score: 98.86259155273437
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > ++ ;
rank: 351
score: 98.71590576171874
patch: ++ iter ; ++ iter ; int value ;
rank: 351
score: 98.66876690204327
patch: if ( . is CaMeL Empty ( ; ) ++ iter ;
rank: 351
score: 98.56888834635417
patch: ++ iter ; iter / * ++ ;
rank: 352
score: 99.04407319568452
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > current = null ;
rank: 352
score: 98.9947280883789
patch: int n CaMeL C = 0 ;
rank: 352
score: 98.971435546875
patch: final double current CaMeL Point = current CaMeL Point . length + n CaMeL R ;
rank: 352
score: 98.90411376953125
patch: ++ iter ; if ( ; ;
rank: 352
score: 98.86256917317708
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 352
score: 98.74505145733173
patch: if ( ! iter . compare CaMeL To ( current ) ;
rank: 352
score: 98.71505301339286
patch: -- iter ; ++ iter ;
rank: 352
score: 98.66845703125
patch: if ( ! iter . is CaMeL Empty ++ ) . add ;
rank: 353
score: 98.97141627261513
patch: int iter = target CaMeL Values . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 353
score: 98.90404459635417
patch: current = current CaMeL Point . substring ( 0 , n CaMeL C ;
rank: 353
score: 98.86237535978618
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C . get CaMeL Row CaMeL
rank: 353
score: 98.71491241455078
patch: int iter * / ++ iter ;
rank: 353
score: 98.66797637939453
patch: return new ++ [ 1 ] ;
rank: 353
score: 98.56729888916016
patch: ++ max ; ; ++ iter ;
rank: 354
score: 99.08394582648026
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( 0 ) ;
rank: 354
score: 98.99318560431985
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 354
score: 98.9706169577206
patch: double iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 354
score: 98.90397644042969
patch: int n CaMeL R = current CaMeL Point . length ( ) - 1 ;
rank: 354
score: 98.86204833984375
patch: y = current CaMeL Point . length ; }
rank: 354
score: 98.74449055989584
patch: if ( ! iter . is CaMeL Assignable CaMeL From ( current ) ;
rank: 354
score: 98.71486409505208
patch: ++ iter ; int iter - iter ;
rank: 354
score: 98.6677579012784
patch: if ( iter == null ; return iter ; ;
rank: 354
score: 98.56623077392578
patch: ++ iter ; ; ++ $NUMBER$ ;
rank: 355
score: 99.08334189967105
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ current CaMeL Point ] ;
rank: 355
score: 99.0429458618164
patch: b = compute CaMeL Residuals ( current CaMeL Point , current CaMeL Point ) ;
rank: 355
score: 98.99303481158088
patch: if ( ! converged ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 355
score: 98.97038130326705
patch: final Real CaMeL Matrix weight CaMeL Matrix = null ;
rank: 355
score: 98.90376790364583
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair = null ;
rank: 355
score: 98.86201615767045
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 355
score: 98.74447631835938
patch: ++ iter ; Thread . current CaMeL Thread ( ) ;
rank: 355
score: 98.71425374348958
patch: ++ iter ; while ++ - iter ;
rank: 355
score: 98.66730205829327
patch: if ( ! iter . is CaMeL Empty ( ) ) }
rank: 355
score: 98.566162109375
patch: iter ; ++ ; ; ++ iter ;
rank: 356
score: 98.9036865234375
patch: int n CaMeL R = current CaMeL Point . length ; ;
rank: 356
score: 98.86189270019531
patch: n CaMeL C = current CaMeL Point . length ; boolean converged = false ;
rank: 356
score: 98.74343637319711
patch: final double iter = current CaMeL Point . length - 1 ;
rank: 356
score: 98.71417236328125
patch: ++ iter ; else break ;
rank: 356
score: 98.66668023003473
patch: else { ++ * ++ iter ; }
rank: 356
score: 98.56548394097223
patch: ++ iter ; iter / if ++ ;
rank: 357
score: 98.99108208550348
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . solve ;
rank: 357
score: 98.90348546645221
patch: int n CaMeL R = current CaMeL Point . length ; current CaMeL Point = ;
rank: 357
score: 98.86188299005681
patch: j = current CaMeL Point . length ; ++ ;
rank: 357
score: 98.7423095703125
patch: final int iter = current CaMeL Point . length + $NUMBER$ ;
rank: 357
score: 98.71412658691406
patch: / * ] iter iter * /
rank: 357
score: 98.66628793569711
patch: else { iter = iter . to CaMeL Array ( ) ;
rank: 357
score: 98.56523895263672
patch: ++ iter ; ; iter -- ;
rank: 358
score: 98.99071451822917
patch: final int n CaMeL C = n CaMeL C - n CaMeL R ;
rank: 358
score: 98.96930290670956
patch: int n CaMeL C = current CaMeL Point . length ; boolean converged = false ;
rank: 358
score: 98.90341366038604
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 358
score: 98.86115858289931
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , $NUMBER$ ) ;
rank: 358
score: 98.74214993990384
patch: iter = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 358
score: 98.71411743164063
patch: / * ; ++ iter ; ++ iter ;
rank: 358
score: 98.66559392755681
patch: if ( iter == null ) return iter ; }
rank: 358
score: 98.56486002604167
patch: ++ iter ; ; if iter / /
rank: 359
score: 99.04142456054687
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Class ( ) ;
rank: 359
score: 98.99065607244319
patch: final int n CaMeL R = current CaMeL Point ;
rank: 359
score: 98.9031512920673
patch: double iter = current CaMeL Point . length ; ++ iter ;
rank: 359
score: 98.86094665527344
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair : current CaMeL Point ) {
rank: 359
score: 98.74195353190105
patch: iter = current CaMeL Point [ 0 ] . length ;
rank: 359
score: 98.7139663696289
patch: ++ iter ; * ++ iter ;
rank: 359
score: 98.66526285807292
patch: if ( iter == 0 ; return ;
rank: 359
score: 98.56471761067708
patch: ++ iter ; iter if ++ ; ;
rank: 360
score: 99.04135277157738
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair * current ;
rank: 360
score: 98.96923828125
patch: b = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 360
score: 98.90278455946181
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = iter . iterator ( ;
rank: 360
score: 98.85958059210526
patch: Iterator < Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = current ;
rank: 360
score: 98.74152967664931
patch: ++ iter ; while ( true ) {
rank: 360
score: 98.71391296386719
patch: / * ] iter ; / /
rank: 360
score: 98.66505015980114
patch: if ( iter == null || iter == null ;
rank: 360
score: 98.56443786621094
patch: ++ iter ; ++ max ; ;
rank: 361
score: 99.08197985197368
patch: for ( Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point : current CaMeL Point ) {
rank: 361
score: 99.0410664876302
patch: int iter = current * current CaMeL Point . length ;
rank: 361
score: 98.99027876420455
patch: final int n CaMeL R = n CaMeL R ;
rank: 361
score: 98.90217141544117
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ;
rank: 361
score: 98.8587890625
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 361
score: 98.71367645263672
patch: ++ iter ; iter + 1 ;
rank: 361
score: 98.66478814019098
patch: if ( iter == null ; continue ;
rank: 362
score: 99.08170259915866
patch: this . current CaMeL Point = current CaMeL Point . length ;
rank: 362
score: 99.04090169270833
patch: final Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Residuals ( ) ;
rank: 362
score: 98.96884494357639
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 362
score: 98.90211995442708
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , ;
rank: 362
score: 98.8579610188802
patch: result = weight CaMeL Matrix . get CaMeL Solver ( ) . get CaMeL Row CaMeL Vector ( current CaMeL Point ) ;
rank: 362
score: 98.71320452008929
patch: i ++ ; ++ iter ;
rank: 362
score: 98.66444396972656
patch: return new int [ ] ; }
rank: 362
score: 98.56301443917411
patch: iter ; ++ iter ; ;
rank: 363
score: 98.98926544189453
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 363
score: 98.90192119891827
patch: ++ iter ; current CaMeL Point = current CaMeL Point . ;
rank: 363
score: 98.85737161075367
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) target CaMeL Values . get (
rank: 363
score: 98.73938802083333
patch: iter = current CaMeL Point . index CaMeL Of ( $STRING$ ) ; }
rank: 363
score: 98.71304321289062
patch: else ; ++ iter ;
rank: 363
score: 98.66401018415179
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ++ ) ; }
rank: 363
score: 98.56289672851562
patch: ++ this ; ; ++ iter ;
rank: 364
score: 99.08101981026786
patch: int target CaMeL Values [ ] = current CaMeL Point . length ;
rank: 364
score: 99.04082641601562
patch: check CaMeL Parameters ( current CaMeL Point , current CaMeL Point , current CaMeL Point . length ) ;
rank: 364
score: 98.96826171875
patch: int iter = n CaMeL R ;
rank: 364
score: 98.90159847861842
patch: current CaMeL Point [ n CaMeL C ] = new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 364
score: 98.8572933799342
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL C = current CaMeL Point .
rank: 364
score: 98.73911946614584
patch: int iter = current CaMeL Point . length ( ) ; ++ iter ;
rank: 364
score: 98.71303304036458
patch: / ; ++ iter ; int iter ;
rank: 364
score: 98.66387176513672
patch: if ( iter == ++ iter ;
rank: 364
score: 98.56195068359375
patch: } ++ iter ; ++ start ;
rank: 365
score: 99.08083926930146
patch: final Real CaMeL Matrix current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 365
score: 99.04080539279514
patch: check CaMeL Parameters ( current CaMeL Point , current CaMeL Point , n CaMeL C ) ;
rank: 365
score: 98.98910319010416
patch: final int current CaMeL Point = current CaMeL Point + n CaMeL C ;
rank: 365
score: 98.9014892578125
patch: long iter = current CaMeL Point . length ; ++ iter ;
rank: 365
score: 98.73876953125
patch: ++ iter ; current CaMeL Point [ n CaMeL R ] ;
rank: 365
score: 98.7129135131836
patch: ++ iter ; else iter ++ ;
rank: 365
score: 98.66370500837054
patch: if ( . is CaMeL Empty ( ) ) return null ; }
rank: 365
score: 98.56147003173828
patch: ++ $NUMBER$ ++ ; ++ iter ;
rank: 366
score: 99.08026994977679
patch: int n CaMeL C = n CaMeL R - n CaMeL R ;
rank: 366
score: 99.0406005859375
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 366
score: 98.98804649939903
patch: final int weight CaMeL Matrix = target CaMeL Values . length ;
rank: 366
score: 98.96717744715073
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . length : 0 ;
rank: 366
score: 98.90088653564453
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , ;
rank: 366
score: 98.85709421258224
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point .
rank: 366
score: 98.73872593470982
patch: current CaMeL Point = current CaMeL Point . index CaMeL Of ( ;
rank: 366
score: 98.71200900607639
patch: int iter + 0 ; ++ iter ;
rank: 366
score: 98.66367797851562
patch: if ( iter == 0 ; break ; }
rank: 366
score: 98.56092834472656
patch: ++ iter ; ++ ; / /
rank: 367
score: 99.08025716145833
patch: ++ current CaMeL Point [ 0 ] = current CaMeL Point . length ;
rank: 367
score: 99.04013671875
patch: b = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , n CaMeL C ) ;
rank: 367
score: 98.98780653211806
patch: double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 367
score: 98.9008056640625
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter , ;
rank: 367
score: 98.85680571056548
patch: i = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 367
score: 98.73769309303977
patch: ++ iter ; current CaMeL Point [ 0 ] ;
rank: 367
score: 98.7119140625
patch: ++ iter ; ++ * * / /
rank: 367
score: 98.66353062220982
patch: if ( . is CaMeL Empty ( ) ) { ++ iter ;
rank: 367
score: 98.56085205078125
patch: ++ iter ; ++ start ; }
rank: 368
score: 99.0399881998698
patch: final int CaMeL Value = current CaMeL Point . length ;
rank: 368
score: 98.96659088134766
patch: double current CaMeL Point = current CaMeL Point . length ; current CaMeL Point =
rank: 368
score: 98.90060085720486
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ;
rank: 368
score: 98.85673442639802
patch: Iterator < Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = 0 ;
rank: 368
score: 98.73734224759616
patch: try { current = current CaMeL Point . length - 1 ;
rank: 368
score: 98.71181030273438
patch: ++ iter ; ++ iter ; System . ;
rank: 368
score: 98.66338641826923
patch: if ( . is CaMeL Empty ( ; > 0 ) {
rank: 368
score: 98.56067657470703
patch: ++ $NUMBER$ iter ; ++ iter ;
rank: 369
score: 98.98744303385416
patch: Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point [ 0 ] ;
rank: 369
score: 98.96625114889706
patch: final double weight CaMeL Matrix = current CaMeL Point . length + n CaMeL R ;
rank: 369
score: 98.90058898925781
patch: ++ iter ; current . ++ ;
rank: 369
score: 98.85658330502717
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . length ;
rank: 369
score: 98.73682454427083
patch: final int n CaMeL C = current CaMeL Point . length + iter ;
rank: 369
score: 98.66328938802083
patch: if ( . is CaMeL Empty ( ; * 1 . 0 ) ;
rank: 369
score: 98.56009928385417
patch: } ++ iter ; ++ iter ; else
rank: 370
score: 99.07976331208882
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Value ( ) ;
rank: 370
score: 98.96619330512152
patch: measurement = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; }
rank: 370
score: 98.90056295955883
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , ; }
rank: 370
score: 98.71171061197917
patch: ++ $NUMBER$ + iter ; ++ iter ;
rank: 370
score: 98.66311645507812
patch: else { ++ iter ; } return iter ;
rank: 370
score: 98.55999755859375
patch: ++ 1 ; ++ ++ iter ;
rank: 371
score: 99.07893451891448
patch: for ( Point CaMeL Vector CaMeL Value CaMeL Pair current : current CaMeL Point . length ) {
rank: 371
score: 99.03944227430556
patch: check CaMeL Parameters ( current CaMeL Point , n CaMeL C , current CaMeL Point ) ;
rank: 371
score: 98.9005126953125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( this , iter ;
rank: 371
score: 98.85581341911765
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ) ;
rank: 371
score: 98.73639322916667
patch: int n CaMeL C = current CaMeL Point [ 0 ] . length ;
rank: 371
score: 98.71146240234376
patch: ++ iter ; ++ iter ; int 1 ;
rank: 371
score: 98.66285051618304
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } else {
rank: 371
score: 98.55924224853516
patch: ++ iter ; ; ++ null ;
rank: 372
score: 99.07856188322368
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ current CaMeL Point . length
rank: 372
score: 99.03915066189236
patch: double [ ] current CaMeL Point = current CaMeL Point . to CaMeL Array ( ) ;
rank: 372
score: 98.98696001838235
patch: final int n CaMeL C = target CaMeL Values . length : n CaMeL R ;
rank: 372
score: 98.90020751953125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point [ iter ] ;
rank: 372
score: 98.7359110514323
patch: int iter = current CaMeL Point . length - $NUMBER$ ;
rank: 372
score: 98.71135919744319
patch: } ++ iter ; ++ iter ; ++ iter ;
rank: 372
score: 98.66280364990234
patch: if ( iter == - 1 ;
rank: 372
score: 98.55789184570312
patch: ++ $NUMBER$ ; ++ iter ; }
rank: 373
score: 98.98572495404412
patch: final double n CaMeL R = current CaMeL Point . get CaMeL Value ( ) ;
rank: 373
score: 98.96560489430146
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix ) ;
rank: 373
score: 98.90005057198661
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ;
rank: 373
score: 98.73473182091347
patch: final Integer iter = current CaMeL Point . length ( ) ;
rank: 373
score: 98.7109375
patch: ++ iter ; else + iter ;
rank: 373
score: 98.55736626519098
patch: ++ iter ; iter / ++ ; ;
rank: 374
score: 99.07763671875
patch: int iter = current CaMeL Point [ current CaMeL Point . length ;
rank: 374
score: 98.9652961282169
patch: final int n CaMeL C = current CaMeL Point . length - n CaMeL R ;
rank: 374
score: 98.89998779296874
patch: ++ n CaMeL C ; } ++ iter ;
rank: 374
score: 98.85488891601562
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( residuals CaMeL Weights ) ;
rank: 374
score: 98.73451741536458
patch: ++ iter - iter ;
rank: 374
score: 98.71087646484375
patch: if 0 ++ iter ; ++ iter ;
rank: 374
score: 98.66265399639423
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 374
score: 98.55613199869792
patch: ++ $NUMBER$ ; ++ iter ; iter ;
rank: 375
score: 98.98528180803571
patch: final double [ ] current CaMeL Point = current CaMeL Point ) ;
rank: 375
score: 98.89926583426339
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ;
rank: 375
score: 98.8546875
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair : n CaMeL C ;
rank: 375
score: 98.73439378004808
patch: ++ iter ; if ( current CaMeL Point != null ) {
rank: 375
score: 98.71078152126736
patch: ++ iter ; ++ - * iter ;
rank: 375
score: 98.6623779296875
patch: ( ( Object [ ] ) iter . to CaMeL Array ( ) ;
rank: 375
score: 98.55571153428819
patch: ++ iter ; ; ++ 1 ; ;
rank: 376
score: 99.07754952566964
patch: if ( checker instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 376
score: 99.03705797697368
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 376
score: 98.89903349034927
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 376
score: 98.85456928453948
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 376
score: 98.73340715680804
patch: try { current CaMeL Point = current CaMeL Point . trim ( ;
rank: 376
score: 98.71050347222223
patch: int iter ; else ; ++ iter ;
rank: 376
score: 98.66126251220703
patch: else { if ++ iter 1 ;
rank: 376
score: 98.55526394314236
patch: ++ list ; ++ ; ++ iter ;
rank: 377
score: 99.07670375279018
patch: int current CaMeL Point = current CaMeL Point . length . length ;
rank: 377
score: 99.03696899414062
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , false ) ;
rank: 377
score: 98.98524693080357
patch: Real CaMeL Matrix [ ] current CaMeL Point = current CaMeL Point ;
rank: 377
score: 98.85434139476104
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 377
score: 98.7331298828125
patch: Math . min ( iter , current CaMeL Point [ 0 ] ) ;
rank: 377
score: 98.7103515625
patch: ++ 1 ; ++ iter ; int iter ;
rank: 377
score: 98.66098458426339
patch: if ( ! iter . is CaMeL Empty ( ; > 0 )
rank: 378
score: 99.07650596217105
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point . get CaMeL Row ( ) ;
rank: 378
score: 98.89789581298828
patch: ++ iter - n CaMeL C ;
rank: 378
score: 98.85429454985119
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > iter ;
rank: 378
score: 98.73248845880681
patch: ++ iter ; Thread . current CaMeL Thread ( ;
rank: 378
score: 98.70997619628906
patch: ++ 1 ; if ++ iter ;
rank: 378
score: 98.66090393066406
patch: } else { return iter ; }
rank: 378
score: 98.55487060546875
patch: ++ iter ; ++ ++ $NUMBER$ ;
rank: 379
score: 99.03667658025569
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 379
score: 98.9844970703125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point [ current CaMeL Point ;
rank: 379
score: 98.96272786458333
patch: double current CaMeL Point = weight CaMeL Matrix . length ;
rank: 379
score: 98.89738195082721
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 379
score: 98.85421316964286
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . 0 ;
rank: 379
score: 98.7323486328125
patch: if ( iter == null || iter . is CaMeL Empty ( ) )
rank: 379
score: 98.70980495876736
patch: ++ iter ; boolean iter = iter ;
rank: 379
score: 98.66056823730469
patch: if ( iter == 0 ; else
rank: 379
score: 98.55470784505208
patch: ++ ( ++ iter ; / / /
rank: 380
score: 99.07613975123355
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , false ) ;
rank: 380
score: 99.0365851907169
patch: int n CaMeL C = target CaMeL Values [ n CaMeL C ] . length ;
rank: 380
score: 98.984130859375
patch: if ( ! converged ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point ;
rank: 380
score: 98.96254368832237
patch: final double [ ] current CaMeL Point = Point CaMeL Vector CaMeL Value CaMeL Pair . current ;
rank: 380
score: 98.8973388671875
patch: ++ current CaMeL Point [ n CaMeL C ] = current . ;
rank: 380
score: 98.85401204427083
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current = current ;
rank: 380
score: 98.7321044921875
patch: try { current CaMeL Point = current CaMeL Point . length + $NUMBER$ ;
rank: 380
score: 98.66026088169643
patch: if ( ! iter . is CaMeL Empty ( ; ) ; }
rank: 380
score: 98.55437554253473
patch: ++ iter ; } iter if ++ ;
rank: 381
score: 99.07527883429276
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . current ;
rank: 381
score: 99.03638857886905
patch: m = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 381
score: 98.98359898158482
patch: double [ ] current CaMeL Point = compute CaMeL Residuals ( ) ;
rank: 381
score: 98.96215142144098
patch: final double current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 381
score: 98.89719109786184
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 381
score: 98.8537956686581
patch: entry = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 381
score: 98.7313232421875
patch: final String name = current CaMeL Point . length ( ) ;
rank: 381
score: 98.70962863498264
patch: ++ iter + iter ; ++ iter ;
rank: 381
score: 98.66025612571023
patch: final ++ [ ] iter = iter . length ;
rank: 382
score: 99.07525956003289
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = this . current CaMeL Point ;
rank: 382
score: 99.03631591796875
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ;
rank: 382
score: 98.98358623798077
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current 1 ;
rank: 382
score: 98.9613525390625
patch: double current CaMeL Point = current CaMeL Point . length ; ++ iter ;
rank: 382
score: 98.89714499080883
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ( current ) ;
rank: 382
score: 98.85377412683823
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL C = 0 ;
rank: 382
score: 98.73080880301339
patch: if ( current CaMeL Point . length > 0 ) ++ iter ;
rank: 382
score: 98.70897759331598
patch: ++ iter ; iter ; for iter ;
rank: 382
score: 98.65994262695312
patch: else { / * ++ iter ;
rank: 382
score: 98.55333600725446
patch: iter iter ++ ; ++ ;
rank: 383
score: 99.07504272460938
patch: if ( n CaMeL R < n CaMeL C ) {
rank: 383
score: 99.03609619140624
patch: b = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point , n CaMeL C ) ;
rank: 383
score: 98.9612972861842
patch: int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair ++ ;
rank: 383
score: 98.89683131167763
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ;
rank: 383
score: 98.85334777832031
patch: Iterator n CaMeL C = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 383
score: 98.73076837713069
patch: ++ n CaMeL C ; ++ n CaMeL R ;
rank: 383
score: 98.70891571044922
patch: ++ iter ; else if iter ;
rank: 383
score: 98.65991889105902
patch: if ( iter < 0 ; break ;
rank: 384
score: 99.07439864309211
patch: current = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point , current CaMeL Point . length ;
rank: 384
score: 99.03606305803571
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( current CaMeL Point , current ) ;
rank: 384
score: 98.98297674005681
patch: final Real CaMeL Matrix current CaMeL Point = current ;
rank: 384
score: 98.96097140842014
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , $STRING$ ) ;
rank: 384
score: 98.89676607572116
patch: ++ iter ; current CaMeL Point [ iter ] = iter ;
rank: 384
score: 98.85260009765625
patch: i = current CaMeL Point . length ; ++ iter ;
rank: 384
score: 98.72926432291666
patch: try { current = current CaMeL Point . index CaMeL Of ( $STRING$ ;
rank: 384
score: 98.70855034722223
patch: ++ iter ; if ++ iter ; ;
rank: 384
score: 98.65965857872597
patch: else { if ( ! iter . is CaMeL Empty ( ;
rank: 384
score: 98.55190700954861
patch: ++ iter ; ++ iter ; for iter
rank: 385
score: 99.03577241443452
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) converged ;
rank: 385
score: 98.98227945963542
patch: final Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 385
score: 98.96060983758224
patch: double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( 0 ) ;
rank: 385
score: 98.89657592773438
patch: int n CaMeL R = current CaMeL Point . length ; current CaMeL Point ;
rank: 385
score: 98.8524658203125
patch: -- iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 385
score: 98.72890014648438
patch: assert current CaMeL Point . length > 0 ;
rank: 385
score: 98.65961100260417
patch: if ( ! iter . is CaMeL Empty ++ ) return iter ; }
rank: 385
score: 98.55122884114583
patch: ++ iter ; ++ 0 ; iter ;
rank: 386
score: 99.07403157552083
patch: current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 386
score: 98.96058067908653
patch: boolean converged = current CaMeL Point [ n CaMeL C ] ;
rank: 386
score: 98.89598253038194
patch: ++ n CaMeL R ; ++ iter ;
rank: 386
score: 98.85216703869048
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ) ;
rank: 386
score: 98.72830636160714
patch: ++ iter ; if ( current CaMeL Point . length == 1 )
rank: 386
score: 98.70793321397569
patch: else if ++ iter ; ++ iter ;
rank: 386
score: 98.65960286458333
patch: if ( . is CaMeL Empty ( ; * 0 . 1 ) ;
rank: 386
score: 98.55099487304688
patch: / ++ ++ ; ++ iter ;
rank: 387
score: 99.03524925595238
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair ) ;
rank: 387
score: 98.96030787417763
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 387
score: 98.8958740234375
patch: final ; current CaMeL Point [ n CaMeL C ] = ;
rank: 387
score: 98.85200330946181
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point , 0 ) ;
rank: 387
score: 98.72819010416667
patch: Thread . current CaMeL Thread ( ) . start ( ;
rank: 387
score: 98.70743815104167
patch: / * ++ iter ;
rank: 387
score: 98.65939331054688
patch: if ( < 0 ; * /
rank: 387
score: 98.55038113064236
patch: ++ iter ; ++ ; / / /
rank: 388
score: 99.07389009915866
patch: int current CaMeL Point = target CaMeL Values [ 0 ] ;
rank: 388
score: 99.03522600446429
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) $NUMBER$ ;
rank: 388
score: 98.96029324001736
patch: double [ ] current CaMeL Point = weight CaMeL Matrix . to CaMeL Array ( ) ;
rank: 388
score: 98.89499383223684
patch: if ( iter < current CaMeL Point . length && current CaMeL Point . length > 0 )
rank: 388
score: 98.85157359730114
patch: return compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 388
score: 98.72769775390626
patch: ++ iter ; if ( current CaMeL Point ;
rank: 388
score: 98.70737033420139
patch: ++ iter ; ++ - ++ iter ;
rank: 388
score: 98.65802001953125
patch: if ( ! iter . is CaMeL Empty ++ ; return iter ;
rank: 389
score: 99.03474934895833
patch: int n CaMeL C = current CaMeL Point . length ; / * /
rank: 389
score: 98.95966448102679
patch: int n CaMeL C = weight CaMeL Matrix . length : 0 ;
rank: 389
score: 98.89344024658203
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current ) ;
rank: 389
score: 98.85115814208984
patch: ( ( Decomposition CaMeL Solver < Point CaMeL Vector CaMeL Value CaMeL Pair > )
rank: 389
score: 98.72743733723958
patch: final int iter = current CaMeL Point [ 0 ] ;
rank: 389
score: 98.6580059344952
patch: if ( . is CaMeL Empty ( ) ) ++ iter ;
rank: 389
score: 98.54786028180804
patch: ++ iter ; iter * ;
rank: 390
score: 99.07356342516448
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new double [ n CaMeL C ] ; ;
rank: 390
score: 99.03439565805289
patch: int iter = target CaMeL Values [ n CaMeL C ] ;
rank: 390
score: 98.98024495442708
patch: final int n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( iter ) ;
rank: 390
score: 98.95955164292279
patch: int n CaMeL C = current CaMeL Point . length ; double iter = 0 ;
rank: 390
score: 98.89338514539931
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current . get CaMeL Value ( ;
rank: 390
score: 98.85099283854167
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL
rank: 390
score: 98.70692952473958
patch: if ++ iter ; ; ++ iter ;
rank: 390
score: 98.65791320800781
patch: if ( iter ++ > 0 ;
rank: 390
score: 98.54765489366319
patch: iter iter if ++ ; ++ iter ;
rank: 391
score: 99.0343505859375
patch: current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 391
score: 98.97983127170139
patch: Real CaMeL Matrix [ ] current = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 391
score: 98.95942034040179
patch: final Real CaMeL Matrix weight CaMeL Matrix = current CaMeL Point ) ;
rank: 391
score: 98.89284842354911
patch: int n CaMeL R = current CaMeL Point . length / iter ;
rank: 391
score: 98.85050048828126
patch: < n CaMeL C ; iter ++ ) {
rank: 391
score: 98.72652180989583
patch: ++ iter ; ++ current CaMeL Point [ iter ] ;
rank: 391
score: 98.54749213324652
patch: iter ; ++ iter ; -- iter ;
rank: 392
score: 99.03394911024306
patch: current = current CaMeL Point . length * current CaMeL Point [ n CaMeL C ] ;
rank: 392
score: 98.97760009765625
patch: final double CaMeL Value = current CaMeL Point . length ;
rank: 392
score: 98.95934340533088
patch: final double n CaMeL C = current CaMeL Point . length - n CaMeL R ;
rank: 392
score: 98.89263916015625
patch: ++ iter ; current = current . index CaMeL Of ;
rank: 392
score: 98.72640286959134
patch: int n CaMeL R = current CaMeL Point [ 0 ] ;
rank: 392
score: 98.70571899414062
patch: final int iter ; ++ iter ;
rank: 392
score: 98.65723765980114
patch: if ( iter > 0 ; return iter ; }
rank: 392
score: 98.5467529296875
patch: if iter = ++ ++ iter ;
rank: 393
score: 99.07298865685097
patch: ++ current CaMeL Point [ current CaMeL Point . length ] ;
rank: 393
score: 99.03384835379464
patch: String [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 393
score: 98.97696940104167
patch: final double [ ] current = current ;
rank: 393
score: 98.95774213005515
patch: final double weight CaMeL Matrix = residuals CaMeL Weights [ current CaMeL Point . length ;
rank: 393
score: 98.89263509114583
patch: ++ n CaMeL C ; final Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 393
score: 98.8500744047619
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , ) ;
rank: 393
score: 98.72598266601562
patch: if ( ! iter . contains ( iter ) ) {
rank: 393
score: 98.70559256417411
patch: int iter ; int iter ;
rank: 393
score: 98.65699768066406
patch: if ( iter != null ; }
rank: 393
score: 98.54656982421875
patch: iter ; ++ iter ; ++ ;
rank: 394
score: 99.07274518694196
patch: current = weight CaMeL Matrix . get CaMeL Row ( iter ) ;
rank: 394
score: 98.95743136935764
patch: int iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 394
score: 98.89260864257812
patch: final int iter = current CaMeL Point . length - current CaMeL Point . ;
rank: 394
score: 98.85001046316964
patch: n CaMeL C = current CaMeL Point [ n CaMeL C ] ;
rank: 394
score: 98.725830078125
patch: ++ iter ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 394
score: 98.7055892944336
patch: ++ iter ; int * * /
rank: 394
score: 98.54642486572266
patch: ++ ++ $NUMBER$ ; ++ iter ;
rank: 395
score: 99.03336588541667
patch: double n CaMeL C = target CaMeL Values [ n CaMeL C ] ;
rank: 395
score: 98.97526411576705
patch: final double [ ] current CaMeL Point = 0 ;
rank: 395
score: 98.95728410993304
patch: double weight CaMeL Matrix = new double [ n CaMeL R ] ;
rank: 395
score: 98.89244079589844
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter , ;
rank: 395
score: 98.84989420572917
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix . get CaMeL Row CaMeL Matrix ( ) ) ;
rank: 395
score: 98.7256192294034
patch: if ( current CaMeL Point . length == 1 )
rank: 395
score: 98.70523507254464
patch: finally { ++ iter ; ;
rank: 395
score: 98.65676645132211
patch: if ( ! iter . is CaMeL Empty ( ; continue ;
rank: 395
score: 98.54612731933594
patch: ++ iter ; ++ $STRING$ ; ;
rank: 396
score: 99.03333100818452
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 396
score: 98.97509765625
patch: final double [ ] current CaMeL Point : current CaMeL Point . length ;
rank: 396
score: 98.89227294921875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C , iter ;
rank: 396
score: 98.84975798233695
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row ( 0 ) ;
rank: 396
score: 98.72556966145834
patch: current CaMeL Point = current CaMeL Point . char CaMeL At ( 0 ;
rank: 396
score: 98.70494384765625
patch: ++ iter ; ++ 1 ; int iter ;
rank: 396
score: 98.65673065185547
patch: else { / * * * ;
rank: 396
score: 98.54605865478516
patch: iter ; ++ ; -- iter ;
rank: 397
score: 98.97498914930556
patch: final int iter = n CaMeL C ;
rank: 397
score: 98.95633638822116
patch: int iter = current CaMeL Point . - n CaMeL R ;
rank: 397
score: 98.72539728338069
patch: if ( iter == target CaMeL Values . length )
rank: 397
score: 98.70482720269098
patch: ++ iter ; for iter { ++ ;
rank: 397
score: 98.65671608664773
patch: if ( iter == null ; / * * ;
rank: 397
score: 98.54550509982639
patch: ++ iter ; ++ iter ; = iter
rank: 398
score: 99.07154192243304
patch: residuals CaMeL Weights [ n CaMeL C ] = n CaMeL R ;
rank: 398
score: 99.0328304893092
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , $NUMBER$ ) ;
rank: 398
score: 98.9559326171875
patch: if ( current CaMeL Point . length ( ) == 0 ) {
rank: 398
score: 98.89208170572917
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 398
score: 98.84945475260416
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current . get CaMeL
rank: 398
score: 98.65665980747768
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 398
score: 98.54544406467014
patch: ++ iter ; else ++ iter ; ;
rank: 399
score: 99.03255208333333
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ,
rank: 399
score: 98.9743896484375
patch: final double [ ] current CaMeL Point = current CaMeL Point ( ) ;
rank: 399
score: 98.95588235294117
patch: final double weight CaMeL Matrix = current CaMeL Point . length : n CaMeL R ;
rank: 399
score: 98.89203350360577
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 399
score: 98.7243896484375
patch: j = Math . max ( 0 , current CaMeL Point . length ;
rank: 399
score: 98.70375061035156
patch: / * ] ++ ++ iter ;
rank: 399
score: 98.65665108816964
patch: if ( iter == $NUMBER$ ;
rank: 399
score: 98.54531521267361
patch: ++ new ++ ; ++ iter ; }
rank: 400
score: 99.0704345703125
patch: current = weight CaMeL Matrix . get CaMeL Row ( current ) ;
rank: 400
score: 98.97422960069444
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 400
score: 98.955810546875
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Entry ( ) ;
rank: 400
score: 98.8916015625
patch: ++ n CaMeL C ; iter = iter . ;
rank: 400
score: 98.84881591796875
patch: end = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 400
score: 98.72430974786931
patch: ++ iter ; if ( iter != null ) {
rank: 400
score: 98.70224609375
patch: if 0 ; ++ iter ; ++ iter ;
rank: 400
score: 98.65641954210069
patch: if ( iter == 0 ; / ;
rank: 401
score: 99.07008120888158
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL
rank: 401
score: 98.97411237444196
patch: int current CaMeL Point = n CaMeL C : current CaMeL Point ;
rank: 401
score: 98.89153583233173
patch: ++ iter = current CaMeL Point . length ; ++ iter ;
rank: 401
score: 98.84864095052083
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = null ;
rank: 401
score: 98.72430419921875
patch: if ( current CaMeL Point [ 0 ] != null )
rank: 401
score: 98.70183563232422
patch: / * ++ ++ ++ iter ;
rank: 401
score: 98.65607096354167
patch: if ( ! iter . is CaMeL Empty ( ; ) . equals ;
rank: 401
score: 98.54430474175348
patch: } ++ iter ; ++ iter ; }
rank: 402
score: 99.06992885044643
patch: if ( current CaMeL Point . length <= n CaMeL R ) {
rank: 402
score: 99.03122965494792
patch: int residuals CaMeL Weights = current CaMeL Point . length ;
rank: 402
score: 98.89132869944854
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ;
rank: 402
score: 98.84839585248162
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = 0 ;
rank: 402
score: 98.7240878018466
patch: if ( iter >= current CaMeL Point . length )
rank: 402
score: 98.70164489746094
patch: ++ iter ; ; ++ value ;
rank: 402
score: 98.65575154622395
patch: if ( ! iter . is CaMeL Empty ++ ++ ;
rank: 402
score: 98.54335327148438
patch: ++ new ++ ;
rank: 403
score: 99.03099149816177
patch: int n CaMeL C = current CaMeL Point [ n CaMeL C ] . length ;
rank: 403
score: 98.89114379882812
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 403
score: 98.84838053385417
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point ;
rank: 403
score: 98.7235858623798
patch: try { iter = current CaMeL Point . length - iter ;
rank: 403
score: 98.70140380859375
patch: / * ++ ++ iter ; ++ iter ;
rank: 403
score: 98.65530395507812
patch: if ( . is CaMeL Empty ( ) ) throw ;
rank: 403
score: 98.54301452636719
patch: for ++ iter ; ++ iter ;
rank: 404
score: 99.06965775923295
patch: ++ target CaMeL Values [ n CaMeL C ] ;
rank: 404
score: 98.95338270399306
patch: double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 404
score: 98.89098011363636
patch: ++ iter ; current = ++ n CaMeL C ;
rank: 404
score: 98.8483553799716
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Entry ( ) ;
rank: 404
score: 98.72291917067308
patch: if ( current CaMeL Point [ 0 ] . equals ( ;
rank: 404
score: 98.65497233072917
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } ++ iter ;
rank: 404
score: 98.54276275634766
patch: ++ iter ; ++ ( iter ;
rank: 405
score: 99.06935337611607
patch: if ( current CaMeL Point . length < n CaMeL R ] )
rank: 405
score: 98.9530029296875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , this ) ;
rank: 405
score: 98.8907829733456
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , ;
rank: 405
score: 98.72254356971153
patch: if ( current CaMeL Point . length > 0 ) break ;
rank: 405
score: 98.70052083333333
patch: ++ iter ; ++ * * ++ ;
rank: 405
score: 98.65472412109375
patch: , * * * * * /
rank: 405
score: 98.54222954644098
patch: iter ; ++ 0 ; ++ iter ;
rank: 406
score: 98.95297241210938
patch: / * compute CaMeL Cost ( current CaMeL Point ) ;
rank: 406
score: 98.89041341145834
patch: ++ current CaMeL Point [ n CaMeL C ] = current . length ;
rank: 406
score: 98.84776088169643
patch: Iterator n CaMeL C = current CaMeL Point . length ( ) ;
rank: 406
score: 98.72188568115234
patch: if ( iter != 0 ) {
rank: 406
score: 98.7002840909091
patch: ++ iter ; ++ - iter ; ++ iter ;
rank: 406
score: 98.65455118815105
patch: if ( ! iter . is CaMeL Empty ++ null ;
rank: 406
score: 98.54212188720703
patch: ++ iter ; ++ start ; else
rank: 407
score: 99.06900024414062
patch: int iter = n CaMeL C - n CaMeL R ;
rank: 407
score: 99.029150390625
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 407
score: 98.97096354166666
patch: final int current CaMeL Point = n CaMeL R - n CaMeL C ;
rank: 407
score: 98.95285470145089
patch: final boolean converged = false ;
rank: 407
score: 98.890380859375
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 407
score: 98.84760485197368
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current . get CaMeL Value ( ) ;
rank: 407
score: 98.7216796875
patch: if ( ! iter . starts CaMeL With ( current ) ;
rank: 407
score: 98.70008850097656
patch: ++ iter ; else iter out ;
rank: 407
score: 98.65420193142361
patch: else { ++ * iter ; * /
rank: 407
score: 98.54168701171875
patch: ++ iter ; ++ iter ; start ;
rank: 408
score: 99.06884765625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; {
rank: 408
score: 99.02892485119048
patch: checker = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 408
score: 98.95275006975446
patch: int n CaMeL C = current CaMeL Point . length ; do {
rank: 408
score: 98.89031427556819
patch: current = ++ iter ; ++ n CaMeL C ;
rank: 408
score: 98.84737723214286
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 408
score: 98.72163529829545
patch: current = current CaMeL Point . length - iter ;
rank: 408
score: 98.69986724853516
patch: ++ iter ; int * * ;
rank: 408
score: 98.654052734375
patch: else { if ++ iter ; } }
rank: 408
score: 98.54157257080078
patch: ++ iter ; ++ ! iter ;
rank: 409
score: 99.06866096047794
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 409
score: 99.0283203125
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 409
score: 98.84730440027573
patch: Iterator < Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > ++ ;
rank: 409
score: 98.72154744466145
patch: Iterator iter = current CaMeL Point . length ( ) ;
rank: 409
score: 98.54121907552083
patch: iter ; ++ iter ; ++ 1 ;
rank: 410
score: 98.9525146484375
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; ++ iter ;
rank: 410
score: 98.8899917602539
patch: ++ iter ; * / * /
rank: 410
score: 98.72147623697917
patch: root = current CaMeL Point . length ;
rank: 410
score: 98.69931369357639
patch: ++ iter ; iter ; while iter ;
rank: 410
score: 98.65341622488839
patch: if ( . is CaMeL Empty ( ) || iter == null ;
rank: 410
score: 98.54039001464844
patch: iter if ++ ; ++ iter ;
rank: 411
score: 99.06813267299107
patch: current CaMeL Point [ n CaMeL C ] += n CaMeL C ;
rank: 411
score: 99.02723999023438
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R , n CaMeL C ) ;
rank: 411
score: 98.97040473090277
patch: Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ,
rank: 411
score: 98.95196174172794
patch: final double weight CaMeL Matrix = weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 411
score: 98.8899787454044
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , iter ;
rank: 411
score: 98.84596761067708
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; }
rank: 411
score: 98.72113591974431
patch: if ( current CaMeL Point . length > iter )
rank: 411
score: 98.699072265625
patch: ++ 1 ; ++ iter ; ++ 1 ;
rank: 411
score: 98.6533447265625
patch: if ( . is CaMeL Empty ( ) ) { return null ; }
rank: 411
score: 98.53971862792969
patch: ++ iter ; ++ -- 1 ;
rank: 412
score: 99.06744384765625
patch: int n CaMeL C = target CaMeL Values [ current CaMeL Point . length ;
rank: 412
score: 99.0270663174716
patch: final int [ ] current CaMeL Point = current ;
rank: 412
score: 98.97007123161765
patch: final int n CaMeL C = current CaMeL Point . length * n CaMeL R ;
rank: 412
score: 98.88981797960069
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 412
score: 98.84587944878473
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 412
score: 98.72111002604167
patch: int iter = current CaMeL Point . length == 1 ;
rank: 412
score: 98.69873046875
patch: ++ iter ; ++ iter ; int - iter ;
rank: 412
score: 98.6531753540039
patch: / * * * * * /
rank: 412
score: 98.53929901123047
patch: ++ ++ 1 ; ++ 1 ;
rank: 413
score: 98.97003580729167
patch: final float [ ] current CaMeL Point = current CaMeL Point . length ;
rank: 413
score: 98.88949245876736
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R , iter ;
rank: 413
score: 98.84586234714673
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > iter = 0 ;
rank: 413
score: 98.7203877766927
patch: assert current CaMeL Point [ 0 ] . equals ( ;
rank: 413
score: 98.69833374023438
patch: ++ iter ; ++ * 1 ;
rank: 413
score: 98.65279541015624
patch: if ( iter == $NUMBER$ ; return iter ;
rank: 413
score: 98.5386962890625
patch: iter ; ++ iter = iter ;
rank: 414
score: 99.06698843149039
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; {
rank: 414
score: 99.02667236328125
patch: ak = compute CaMeL Residuals ( current CaMeL Point , current CaMeL Point ) ;
rank: 414
score: 98.95098555715461
patch: int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair -- ;
rank: 414
score: 98.88948567708333
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R , ; }
rank: 414
score: 98.84574962797619
patch: v = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 414
score: 98.6971768465909
patch: ++ iter ; ++ - 1 ; ++ iter ;
rank: 414
score: 98.65278625488281
patch: ++ * * * * iter ;
rank: 414
score: 98.53850640190973
patch: ++ iter ; ++ this + iter ;
rank: 415
score: 99.0666015625
patch: final int current CaMeL Point = current CaMeL Point . length . length ;
rank: 415
score: 99.02581024169922
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current * current CaMeL Point ;
rank: 415
score: 98.9696044921875
patch: final int current CaMeL Point = target CaMeL Values [ n CaMeL C ] ;
rank: 415
score: 98.8893310546875
patch: ++ iter ; this . ++ ++ iter ;
rank: 415
score: 98.84563654119319
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ; }
rank: 415
score: 98.71974534254808
patch: final int iter = current CaMeL Point . length - $NUMBER$ ;
rank: 415
score: 98.69677056206598
patch: int iter + iter ; int iter ;
rank: 415
score: 98.65243869357639
patch: ++ [ 1 ] ; ++ iter ;
rank: 415
score: 98.53810628255208
patch: iter ; ++ ++ ; ++ iter ;
rank: 416
score: 99.02529761904762
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point ,
rank: 416
score: 98.94950103759766
patch: if ( current CaMeL Point . length ( ) != n CaMeL C ) {
rank: 416
score: 98.889306640625
patch: final double iter = current CaMeL Point . length - n CaMeL C ;
rank: 416
score: 98.84562413832721
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point = 0 ;
rank: 416
score: 98.71873121995192
patch: if ( current CaMeL Point . length == 0 ) break ;
rank: 416
score: 98.69669596354167
patch: int iter ; ++ iter ; * /
rank: 416
score: 98.65241241455078
patch: if ( ! iter == $NUMBER$ ;
rank: 416
score: 98.53803846571181
patch: ++ iter ; ++ ; ++ 1 ;
rank: 417
score: 98.96907043457031
patch: if ( converged ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 417
score: 98.94898986816406
patch: final double weight CaMeL Matrix = current CaMeL Point . length ; ++ iter ;
rank: 417
score: 98.88916015625
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C , ;
rank: 417
score: 98.84554036458333
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point .
rank: 417
score: 98.69648573133681
patch: / * ] iter ; if iter ;
rank: 417
score: 98.65190972222223
patch: else { if ; ++ iter ; }
rank: 417
score: 98.53787570529514
patch: ++ iter ; ++ ; if iter ;
rank: 418
score: 99.06533203125
patch: ++ iter ; int current CaMeL Point = target CaMeL Values . length ;
rank: 418
score: 99.0236483487216
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 418
score: 98.96867231889205
patch: final double [ ] current CaMeL Point = false ;
rank: 418
score: 98.94880022321429
patch: double current CaMeL Point = new double [ n CaMeL R ] ;
rank: 418
score: 98.88893037683823
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current . get CaMeL Point ;
rank: 418
score: 98.8453838641827
patch: tmp = current CaMeL Point . do CaMeL Optimize ( ) ;
rank: 418
score: 98.7177225748698
patch: if ( current CaMeL Point . length != iter ) {
rank: 418
score: 98.69592963324652
patch: ++ iter ; * ; ++ iter ;
rank: 418
score: 98.65175955636161
patch: / * ++ * * /
rank: 418
score: 98.53781467013889
patch: ++ 0 ; ++ iter ; / /
rank: 419
score: 99.06524188701923
patch: for ( double current CaMeL Point : n CaMeL R ) {
rank: 419
score: 99.02348022460937
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point . get CaMeL Point ( ) ;
rank: 419
score: 98.96865844726562
patch: final double [ ] current CaMeL Point = current CaMeL Point . length 1 ;
rank: 419
score: 98.88890662560097
patch: ++ n CaMeL C ; ++ n CaMeL C ; break ;
rank: 419
score: 98.8451639811198
patch: result = do CaMeL Optimize ( current CaMeL Point ) ;
rank: 419
score: 98.71758478338069
patch: iter = current CaMeL Point . length + iter ;
rank: 419
score: 98.6953353881836
patch: ++ iter ; ; iter * ;
rank: 419
score: 98.6516845703125
patch: else { if ( ! iter . contains ;
rank: 419
score: 98.53687201605902
patch: / ; ++ iter ; ++ 1 ;
rank: 420
score: 99.06497192382812
patch: / / Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 420
score: 99.02329323508523
patch: current = current * current CaMeL Point . length ;
rank: 420
score: 98.96827607996323
patch: final double n CaMeL C = current CaMeL Point . length : n CaMeL R ;
rank: 420
score: 98.94818115234375
patch: current CaMeL Point [ iter ] = current ;
rank: 420
score: 98.84504699707031
patch: return new Block CaMeL Real CaMeL Matrix ( current CaMeL Point , current ) ;
rank: 420
score: 98.71725802951389
patch: result = iter . iter ( ) ;
rank: 420
score: 98.69510226779514
patch: ++ value ; ++ iter ; iter ;
rank: 420
score: 98.65146213107639
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 420
score: 98.53675842285156
patch: ++ iter ; } ++ 1 ;
rank: 421
score: 98.94817708333333
patch: int n CaMeL R = target CaMeL Values [ n CaMeL R ] ;
rank: 421
score: 98.88863932291666
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter , iter ;
rank: 421
score: 98.8448955829327
patch: n CaMeL C = current CaMeL Point . length ; * /
rank: 421
score: 98.71580810546875
patch: ++ iter ; while ( iter != null )
rank: 421
score: 98.69506225585937
patch: int iter ++ ;
rank: 421
score: 98.6513671875
patch: if ( . is CaMeL Empty ( ) ; * /
rank: 421
score: 98.53647867838542
patch: ++ iter ; ++ ; ++ start ;
rank: 422
score: 99.02274169921876
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , 0 ) ;
rank: 422
score: 98.96583557128906
patch: final double [ ] current CaMeL Point = current CaMeL Point [ 0 ] ;
rank: 422
score: 98.94782850477431
patch: final double [ ] current CaMeL Point = Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 422
score: 98.8885009765625
patch: ++ iter [ n CaMeL C ] = ;
rank: 422
score: 98.84461167279412
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point = current ;
rank: 422
score: 98.69472249348958
patch: / * ] iter ; / / /
rank: 422
score: 98.65128580729167
patch: if ( ! iter . is CaMeL Empty ++ ; }
rank: 422
score: 98.53644476996527
patch: } ++ iter ; } ++ iter ;
rank: 423
score: 99.06391987047698
patch: ++ n CaMeL C ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 423
score: 99.02192239200367
patch: Decomposition CaMeL Solver < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 423
score: 98.96579877068015
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = this ;
rank: 423
score: 98.94768210018383
patch: boolean converged = true ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 423
score: 98.88847081801471
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ;
rank: 423
score: 98.84428478422619
patch: state = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 423
score: 98.71432729867789
patch: final double iter = current CaMeL Point . length - iter ;
rank: 423
score: 98.65117645263672
patch: int length = iter . length ;
rank: 423
score: 98.53628200954861
patch: ++ iter ; ++ -- iter ; ;
rank: 424
score: 99.02151925223214
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) $STRING$ ;
rank: 424
score: 98.96576482599431
patch: final double value = current CaMeL Point . length ;
rank: 424
score: 98.94760470920139
patch: current CaMeL Point [ iter ] = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 424
score: 98.88837076822917
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter ) ;
rank: 424
score: 98.7143046061198
patch: synchronized ( this ) { current CaMeL Point = iter ;
rank: 424
score: 98.69436306423611
patch: ++ iter ; iter ; int * /
rank: 424
score: 98.65111432756696
patch: if ( iter < 0 )
rank: 424
score: 98.53618512834821
patch: ++ out ; ++ iter ;
rank: 425
score: 99.063232421875
patch: int iter = weight CaMeL Matrix . current CaMeL Point . length ;
rank: 425
score: 99.02147565569196
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; / /
rank: 425
score: 98.96543782552084
patch: final int current CaMeL Point = n CaMeL R : current CaMeL Point ;
rank: 425
score: 98.88829803466797
patch: int n CaMeL R = current CaMeL Point . length ( ) - iter ;
rank: 425
score: 98.84417724609375
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ) ;
rank: 425
score: 98.71406693892045
patch: assert current CaMeL Point [ 0 ] == null ;
rank: 425
score: 98.69404602050781
patch: ++ iter ; int iter ; ;
rank: 425
score: 98.65107073102679
patch: final ++ [ ] iter = iter . to CaMeL Array ++ ;
rank: 425
score: 98.53589630126953
patch: iter ; ++ ; ++ 0 ;
rank: 426
score: 98.96523215553977
patch: final double [ ] current CaMeL Point = true ;
rank: 426
score: 98.94690704345703
patch: int iter = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 426
score: 98.88793227251838
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C ;
rank: 426
score: 98.84414493336396
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 426
score: 98.71387736002605
patch: int iter = current CaMeL Point [ 0 ] . ;
rank: 426
score: 98.69401719835069
patch: ++ iter ; ++ $NUMBER$ + iter ;
rank: 426
score: 98.65066528320312
patch: return new ++ * iter ; }
rank: 426
score: 98.53471544053819
patch: ++ ( ++ iter ; ++ 1 ;
rank: 427
score: 99.06315104166667
patch: int current CaMeL Point = weight CaMeL Matrix [ current CaMeL Point ] ;
rank: 427
score: 98.96516418457031
patch: final double weight CaMeL Matrix = target CaMeL Values ( current CaMeL Point ) ;
rank: 427
score: 98.94593912760416
patch: int current CaMeL Point = current CaMeL Point . length ; ++ iter ;
rank: 427
score: 98.84405048076923
patch: cur = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 427
score: 98.71371694711539
patch: if ( ! iter . compare CaMeL To ( current ) )
rank: 427
score: 98.69383409288194
patch: int iter ; try ; ++ iter ;
rank: 427
score: 98.65059037642045
patch: if ( ! iter . is CaMeL Empty iter )
rank: 428
score: 99.06260463169643
patch: current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 428
score: 98.9452392578125
patch: final int n CaMeL C = current CaMeL Point . length : 0 ;
rank: 428
score: 98.88741361177884
patch: ++ n CaMeL C ; ++ n CaMeL C ; * /
rank: 428
score: 98.84403911389802
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ) ;
rank: 428
score: 98.65050397600446
patch: else { ++ 1 ; }
rank: 428
score: 98.53411865234375
patch: ++ copy ; ++ iter ;
rank: 429
score: 99.06247384207589
patch: current CaMeL Point [ n CaMeL C ] += n CaMeL R ;
rank: 429
score: 99.02058919270833
patch: ++ current CaMeL Point = current CaMeL Point . length ;
rank: 429
score: 98.88736724853516
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , iter ;
rank: 429
score: 98.84386097301136
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL Point ( ) ) ;
rank: 429
score: 98.71300659179687
patch: temp = current CaMeL Point [ iter ] ;
rank: 429
score: 98.69243706597223
patch: ++ iter ; / / * / /
rank: 429
score: 98.65011596679688
patch: if ( . is CaMeL Empty ( ) ; / ;
rank: 429
score: 98.53407287597656
patch: / ; iter ; ++ iter ;
rank: 430
score: 99.06226457868304
patch: residuals CaMeL Weights [ n CaMeL C ] = n CaMeL C ;
rank: 430
score: 99.02010947779605
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair * current ;
rank: 430
score: 98.96336263020834
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL
rank: 430
score: 98.84385172526042
patch: result = current CaMeL Point [ n CaMeL C ] ;
rank: 430
score: 98.7123553936298
patch: ++ iter ; Thread . current CaMeL Thread ( ) . ;
rank: 430
score: 98.69229465060764
patch: ++ iter ; int iter * ; /
rank: 430
score: 98.6500995342548
patch: if ( ! iter . is CaMeL Empty ( ) ; {
rank: 430
score: 98.53404998779297
patch: ++ new iter ; ++ iter ;
rank: 431
score: 98.96319580078125
patch: int [ ] current CaMeL Point = current CaMeL Point ;
rank: 431
score: 98.94436645507812
patch: final double weight CaMeL Matrix = target CaMeL Values [ n CaMeL C ] ;
rank: 431
score: 98.88696967230902
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C , ; }
rank: 431
score: 98.84369187127976
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL
rank: 431
score: 98.71177978515625
patch: if ( iter < n CaMeL C ) {
rank: 431
score: 98.69215223524306
patch: / ] ++ iter ; ++ iter ;
rank: 431
score: 98.64990234375
patch: else { if ( iter == null ;
rank: 431
score: 98.53392198350694
patch: ++ iter ; ; if iter -- ;
rank: 432
score: 99.01998562282986
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) .
rank: 432
score: 98.94366861979167
patch: double current CaMeL Point = target CaMeL Values [ n CaMeL R ] ;
rank: 432
score: 98.88690740411931
patch: ++ n CaMeL C ; while ( true ) {
rank: 432
score: 98.84345354352679
patch: other = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 432
score: 98.71108176491477
patch: if ( current CaMeL Point . length == iter )
rank: 432
score: 98.6920654296875
patch: int iter ; ++ iter ; ++ iter ;
rank: 432
score: 98.64984130859375
patch: else { this . iter = iter . max ; }
rank: 432
score: 98.53264617919922
patch: ++ new ++ ; ++ start ;
rank: 433
score: 99.05933556189903
patch: for ( double current CaMeL Point : n CaMeL C ) {
rank: 433
score: 98.96268717447917
patch: final int current CaMeL Point = n CaMeL C - n CaMeL R ;
rank: 433
score: 98.88689864309211
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , ;
rank: 433
score: 98.84335327148438
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point . ;
rank: 433
score: 98.71080932617187
patch: Iterator iter = current CaMeL Point . length ;
rank: 433
score: 98.64951869419643
patch: else { ++ out ; }
rank: 433
score: 98.53236219618056
patch: ++ iter ; iter / = iter ;
rank: 434
score: 99.01908365885417
patch: final int iter = weight CaMeL Matrix . get CaMeL Row ( n CaMeL C ) ;
rank: 434
score: 98.9622802734375
patch: final double n CaMeL R = current CaMeL Point ;
rank: 434
score: 98.94354926215277
patch: if ( current CaMeL Point . length ( ) != current CaMeL Point . length ) {
rank: 434
score: 98.88664245605469
patch: int iter = current CaMeL Point . length ; ++ n CaMeL C ; ;
rank: 434
score: 98.84315185546875
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 434
score: 98.70904071514423
patch: if ( current CaMeL Point [ 0 ] != null ) {
rank: 434
score: 98.69145063920455
patch: ++ iter ; / * * / ++ iter ;
rank: 434
score: 98.64861188616071
patch: if ( . is CaMeL Empty ( ) ; while ++ iter ;
rank: 435
score: 98.9617560891544
patch: final double [ ] current = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 435
score: 98.94353376116071
patch: boolean ! converged = false ;
rank: 435
score: 98.88618977864583
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ;
rank: 435
score: 98.84305826822917
patch: tmp = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 435
score: 98.708935546875
patch: ++ iter ; if ( iter != null )
rank: 435
score: 98.69140625
patch: int iter ; ++ iter ; ;
rank: 435
score: 98.64847564697266
patch: if ; * * * * /
rank: 435
score: 98.53080919053819
patch: ++ 0 ; ; ++ iter ; ;
rank: 436
score: 98.9603271484375
patch: final boolean converged = current CaMeL Point . length ;
rank: 436
score: 98.94251302083333
patch: int n CaMeL R = current CaMeL Point [ n CaMeL R ] ;
rank: 436
score: 98.88605700041118
patch: int n CaMeL R = current CaMeL Point . length - current CaMeL Point . length ; ;
rank: 436
score: 98.84281412760417
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 436
score: 98.70871206430289
patch: j = current CaMeL Point . length ( ) + 1 ;
rank: 436
score: 98.69115447998047
patch: ++ iter ; ++ * ; ;
rank: 436
score: 98.64837091619319
patch: if ( iter != null ) return iter ; }
rank: 436
score: 98.53030056423611
patch: ++ iter ; ++ } ++ iter ;
rank: 437
score: 99.01799774169922
patch: ++ iter ; final Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 437
score: 98.96027080829327
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = - 1 ;
rank: 437
score: 98.9424819946289
patch: final double weight CaMeL Matrix = current CaMeL Point [ n CaMeL R ] ;
rank: 437
score: 98.88602941176471
patch: current = current CaMeL Point . substring ( 0 , n CaMeL C ) ; ;
rank: 437
score: 98.84269205729167
patch: ( ( Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > ) converged ;
rank: 437
score: 98.69109344482422
patch: else ++ iter ; if iter ;
rank: 437
score: 98.64805772569444
patch: if ( < 0 ; iter ++ ;
rank: 437
score: 98.52998182508681
patch: ++ iter ; ++ ; ++ max ;
rank: 438
score: 99.05721609933036
patch: if ( current CaMeL Point . length < n CaMeL C ] )
rank: 438
score: 99.01793755425348
patch: ++ n CaMeL C ; final Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 438
score: 98.96024946732955
patch: final double [ ] current CaMeL Point = $STRING$ ;
rank: 438
score: 98.9419921875
patch: final double n CaMeL C = current CaMeL Point . length : 0 ;
rank: 438
score: 98.88589913504464
patch: ++ iter ; current CaMeL Point = current CaMeL Point . substring ;
rank: 438
score: 98.84249074835526
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ; }
rank: 438
score: 98.70745294744319
patch: ++ iter ; while ( iter != null ) {
rank: 438
score: 98.647705078125
patch: } if ( iter == null ;
rank: 438
score: 98.52912055121527
patch: ++ start ; ++ iter ; iter ;
rank: 439
score: 98.95935872395833
patch: final int n CaMeL C = current CaMeL Point . length - 0 ;
rank: 439
score: 98.8857650756836
patch: ++ n CaMeL C ; ++ n CaMeL C ; System . arraycopy ( ;
rank: 439
score: 98.84229678199405
patch: entry = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 439
score: 98.70730356069711
patch: if ( ! iter . equals ( current CaMeL Point ) )
rank: 439
score: 98.68855424360795
patch: ++ iter ; ++ * * / ++ iter ;
rank: 439
score: 98.64724295479911
patch: ++ < 0 > iter ;
rank: 439
score: 98.52897426060268
patch: if iter = ++ iter ;
rank: 440
score: 99.05674525669643
patch: current = current CaMeL Point [ current CaMeL Point . length ] ;
rank: 440
score: 99.01778157552083
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix ;
rank: 440
score: 98.95916389016544
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = false ;
rank: 440
score: 98.88550618489583
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ;
rank: 440
score: 98.84173583984375
patch: end = current CaMeL Point . length ; ++ iter ;
rank: 440
score: 98.68795776367188
patch: ++ iter ; ++ * / /
rank: 440
score: 98.64697265625
patch: ++ iter ; * * * /
rank: 440
score: 98.52860514322917
patch: ++ $STRING$ ; ++ iter ; iter ;
rank: 441
score: 99.05645345052083
patch: int current CaMeL Point = current CaMeL Point . length ; / * /
rank: 441
score: 99.01732288707386
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair , current ) ;
rank: 441
score: 98.95900315504808
patch: } Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 441
score: 98.93809678819444
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , false ) ;
rank: 441
score: 98.88531024639423
patch: ++ iter ; current = current . index CaMeL Of ( ;
rank: 441
score: 98.8413330078125
patch: end = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 441
score: 98.7067119891827
patch: try { current CaMeL Point [ n CaMeL R ] = ;
rank: 441
score: 98.68710666232639
patch: ++ iter ; for ++ - iter ;
rank: 441
score: 98.64685821533203
patch: if ( iter ; * * /
rank: 441
score: 98.52699110243056
patch: ++ iter ; iter / - ++ ;
rank: 442
score: 99.01729910714286
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry ( name ) ;
rank: 442
score: 98.95897001378677
patch: final double current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 442
score: 98.93768780048077
patch: int < double [ ] : current CaMeL Point . length ;
rank: 442
score: 98.88469989483173
patch: ++ iter ; int current = current CaMeL Point . length ;
rank: 442
score: 98.84114583333333
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ) ;
rank: 442
score: 98.7061767578125
patch: if ( current CaMeL Point . length >= 0 ) {
rank: 442
score: 98.68704986572266
patch: ++ iter ; final int iter ;
rank: 442
score: 98.64613850911458
patch: else { iter = iter . max ;
rank: 442
score: 98.52644178602431
patch: ++ iter ; iter / - 1 ;
rank: 443
score: 99.05621337890625
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point . length ( ) ;
rank: 443
score: 99.01719156901042
patch: int iter = current CaMeL Point . length ; / /
rank: 443
score: 98.95862630208333
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair [ ] current = current ;
rank: 443
score: 98.88468017578126
patch: ++ iter ; if ( iter == null )
rank: 443
score: 98.84111676897321
patch: result = weight CaMeL Matrix . get CaMeL Row ( 0 ) ;
rank: 443
score: 98.70521375868056
patch: if ( iter == null ) continue ;
rank: 443
score: 98.68663872612848
patch: try { ++ iter ; while iter ;
rank: 443
score: 98.64582655164931
patch: if ( < iter ; iter ++ ;
rank: 443
score: 98.5262451171875
patch: ++ new = iter ; ++ iter ;
rank: 444
score: 99.05598718979779
patch: final int n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 444
score: 98.95830078125
patch: final int n CaMeL C = current CaMeL Point . length * 0 ;
rank: 444
score: 98.93623046875
patch: int iter = current CaMeL Point . length ; boolean converged = false ;
rank: 444
score: 98.88460286458333
patch: double iter = current CaMeL Point . length ( ) ;
rank: 444
score: 98.8409756747159
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . to CaMeL Array ( ) ; }
rank: 444
score: 98.70511568509616
patch: while ( ! iter . is CaMeL Empty ( ) ; )
rank: 444
score: 98.68660111860795
patch: else ++ iter ; ++ iter ; ++ iter ;
rank: 444
score: 98.64570835658482
patch: if ( ! iter . is CaMeL Empty ( ) ; iter ;
rank: 444
score: 98.52571614583333
patch: ++ iter ; iter / - * /
rank: 445
score: 99.01688326322116
patch: double Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 445
score: 98.957275390625
patch: final int current CaMeL Point = current CaMeL Point - n CaMeL R ;
rank: 445
score: 98.88407135009766
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ++ iter ;
rank: 445
score: 98.84093366350446
patch: n CaMeL C = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 445
score: 98.70340670072116
patch: int iter = current CaMeL Point . length ; ++ iter )
rank: 445
score: 98.68658447265625
patch: ++ $NUMBER$ * ++ iter ;
rank: 445
score: 98.64562174479167
patch: if ( . is CaMeL Empty ( ) ) { break ; } }
rank: 446
score: 99.05437554253473
patch: current CaMeL Point [ 0 ] = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 446
score: 99.01673235212054
patch: b = Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 446
score: 98.88395182291667
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ;
rank: 446
score: 98.84090169270833
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ; }
rank: 446
score: 98.7029296875
patch: old = current CaMeL Point [ 0 ] ;
rank: 446
score: 98.68618435329861
patch: ++ iter ; / * ++ iter ;
rank: 446
score: 98.52475314670139
patch: ++ iter ; iter / ; * /
rank: 447
score: 99.05435884915866
patch: final String weight CaMeL Matrix = current CaMeL Point . length ;
rank: 447
score: 98.95670572916667
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = false ;
rank: 447
score: 98.93560791015625
patch: int iter = new double [ n CaMeL R ] ;
rank: 447
score: 98.88379845252403
patch: current CaMeL Point [ n CaMeL C ] = current . ;
rank: 447
score: 98.8406982421875
patch: true Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 447
score: 98.70213826497395
patch: int iter = current CaMeL Point . length > 0 ;
rank: 447
score: 98.64529079861111
patch: else { else { return iter ; }
rank: 447
score: 98.52474636501736
patch: ++ iter ; iter -- ; ++ ;
rank: 448
score: 99.053955078125
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = null ;
rank: 448
score: 99.01649169921875
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , n CaMeL R ) ;
rank: 448
score: 98.9564208984375
patch: int n CaMeL C = residuals CaMeL Weights . length ;
rank: 448
score: 98.93463689630681
patch: final double iter = target CaMeL Values . length ;
rank: 448
score: 98.88358800551471
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( this . ++ ;
rank: 448
score: 98.84018961588542
patch: ret = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 448
score: 98.68580322265625
patch: ++ iter ; ++ * * - iter ;
rank: 448
score: 98.6446762084961
patch: / * * * * ++ ;
rank: 448
score: 98.52467564174107
patch: ++ iter ; ++ length ;
rank: 449
score: 99.05356270926339
patch: current CaMeL Point = target CaMeL Values [ n CaMeL C ] ;
rank: 449
score: 98.93404134114583
patch: current CaMeL Point [ iter ] = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 449
score: 98.88303509880515
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , ;
rank: 449
score: 98.83992919921874
patch: j = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 449
score: 98.70183715820312
patch: int iter = iter - n CaMeL C ;
rank: 449
score: 98.68533664279514
patch: ++ iter ; try { ++ 1 ;
rank: 449
score: 98.64457397460937
patch: if ( ! iter == is CaMeL Empty ;
rank: 449
score: 98.52458360460069
patch: ++ iter ; ++ iter ; while ;
rank: 450
score: 99.05316569010417
patch: ++ iter ; double weight CaMeL Matrix = current CaMeL Point . length ;
rank: 450
score: 98.95594075520833
patch: final double [ ] current CaMeL Point = current CaMeL Point . ) ;
rank: 450
score: 98.93362087673611
patch: int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair {
rank: 450
score: 98.8828594501202
patch: ++ iter ; throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 450
score: 98.8397800611413
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > iter = current ;
rank: 450
score: 98.70098876953125
patch: int iter = current CaMeL Point . length == 0 ;
rank: 450
score: 98.68503639914773
patch: ++ iter ; try ; ++ iter ; iter ;
rank: 450
score: 98.64386596679688
patch: if ( iter == null ; return ; }
rank: 450
score: 98.52398003472223
patch: ++ iter ; iter ; / / /
rank: 451
score: 99.016015625
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point = current ;
rank: 451
score: 98.93283913352273
patch: final Real CaMeL Matrix weight CaMeL Matrix = current ;
rank: 451
score: 98.8397725423177
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . current CaMeL Point , current CaMeL Point ) ;
rank: 451
score: 98.70046762319711
patch: if ( current CaMeL Point . starts CaMeL With ( $STRING$ ;
rank: 451
score: 98.68425157335069
patch: ++ iter ; ++ iter ; current ;
rank: 451
score: 98.64368785511364
patch: ++ * ( iter * 0 . 0 ) ;
rank: 451
score: 98.5238037109375
patch: iter ; ++ ; ++ iter ; }
rank: 452
score: 99.05269949776786
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; null ;
rank: 452
score: 99.01597377232143
patch: ak = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 452
score: 98.9552001953125
patch: / * / Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 452
score: 98.93274739583333
patch: int n CaMeL R = current CaMeL Point [ n CaMeL C ] ;
rank: 452
score: 98.8824462890625
patch: ++ iter ; current = current . index CaMeL Of ( current ) ;
rank: 452
score: 98.83975923978366
patch: current = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 452
score: 98.69970703125
patch: final int iter = iter ;
rank: 452
score: 98.68389892578125
patch: this . ++ iter ;
rank: 452
score: 98.64334542410714
patch: if ( ! iter . is CaMeL Empty ( ; iter break ;
rank: 452
score: 98.52280099051339
patch: ++ iter ; ++ / /
rank: 453
score: 99.0526631673177
patch: int iter = n CaMeL R - n CaMeL R ;
rank: 453
score: 99.0157958984375
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Data ( ) ;
rank: 453
score: 98.95511067708334
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < double , double [ ] ;
rank: 453
score: 98.93208821614583
patch: if ( ! converged ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 453
score: 98.88242701480263
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ;
rank: 453
score: 98.83969261532738
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . get CaMeL Row ( ) ;
rank: 453
score: 98.69931265024039
patch: try { current = current CaMeL Point . length - iter ;
rank: 453
score: 98.68317328559027
patch: else ++ iter ; if ++ iter ;
rank: 453
score: 98.6432861328125
patch: if ( ! iter . is CaMeL Empty ( ) ) . ; else
rank: 453
score: 98.52132161458333
patch: ++ iter ; iter = iter ; }
rank: 454
score: 99.05239868164062
patch: residuals CaMeL Weights [ current CaMeL Point . length ] = current CaMeL Point ;
rank: 454
score: 98.95496715198864
patch: final double n CaMeL C = n CaMeL R ;
rank: 454
score: 98.93197292751736
patch: double current CaMeL Point = current CaMeL Point . length ; current CaMeL Point = 0 ;
rank: 454
score: 98.88237847222223
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ;
rank: 454
score: 98.83967808314732
patch: rs = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ;
rank: 454
score: 98.69906180245536
patch: ++ iter ; ++ iter )
rank: 454
score: 98.68288748604911
patch: ++ iter ; synchronized iter ;
rank: 454
score: 98.64314778645833
patch: if ( iter == iter ) break ;
rank: 454
score: 98.51826985677083
patch: ++ iter ; ++ iter ; ++ iter
rank: 455
score: 99.05180140904018
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . solve ;
rank: 455
score: 98.95482288707386
patch: final Real CaMeL Matrix current = current CaMeL Point ;
rank: 455
score: 98.93180338541667
patch: int n CaMeL R = target CaMeL Values [ n CaMeL C ] ;
rank: 455
score: 98.88191441127232
patch: ++ n CaMeL C ; ++ n CaMeL C ; if ( ;
rank: 455
score: 98.83956705729166
patch: break ; } Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 455
score: 98.68236194957386
patch: ++ ++ iter ; ++ iter ; ++ iter ;
rank: 455
score: 98.64309457632211
patch: if ( ! iter . is CaMeL Empty ++ ) { }
rank: 455
score: 98.51752580915179
patch: ++ iter ; iter ; ;
rank: 456
score: 99.01548461914062
patch: current CaMeL Point [ ] += weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 456
score: 98.9547831217448
patch: int current CaMeL Point = current CaMeL Point + 0 ;
rank: 456
score: 98.93177083333333
patch: double current CaMeL Point = current CaMeL Point [ n CaMeL R ] ;
rank: 456
score: 98.8817138671875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point , iter ;
rank: 456
score: 98.83944702148438
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point , n CaMeL C ) ;
rank: 456
score: 98.6988192471591
patch: if ( iter . is CaMeL Empty ( ) )
rank: 456
score: 98.6823486328125
patch: ++ iter ; ++ iter ; ++ * /
rank: 456
score: 98.64305826822917
patch: if ( ! iter . is CaMeL Empty ( ) ; throw null ;
rank: 456
score: 98.51744927300348
patch: ++ iter ; ; ++ 0 ; ;
rank: 457
score: 99.050537109375
patch: if ( checker . do CaMeL Optimize ( ) ) {
rank: 457
score: 99.01507859002976
patch: matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 457
score: 98.95423177083333
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < double , int [ ] ;
rank: 457
score: 98.93050808376736
patch: boolean converged = false ; ++ iter ;
rank: 457
score: 98.88168514476104
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ; }
rank: 457
score: 98.83944266183036
patch: return new Block CaMeL Real CaMeL Matrix ( target CaMeL Values ) ;
rank: 457
score: 98.69871012369792
patch: ++ iter ; System . arraycopy ( current CaMeL Point ;
rank: 457
score: 98.68234592013889
patch: / * ++ 0 ; ++ iter ;
rank: 457
score: 98.64304606119792
patch: if ( . is CaMeL Empty ( ) == $NUMBER$ ;
rank: 457
score: 98.51710728236607
patch: ++ iter ; ++ list ;
rank: 458
score: 99.01484818892045
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , target CaMeL Values ) ;
rank: 458
score: 98.881494140625
patch: ++ iter * /
rank: 458
score: 98.83933715820312
patch: int 0 = current CaMeL Point . length ;
rank: 458
score: 98.69778207632211
patch: j = current CaMeL Point . length ( ) - iter ;
rank: 458
score: 98.68189697265625
patch: ++ iter ; ++ 1 ; ++ 1 ;
rank: 458
score: 98.64301091974431
patch: throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ;
rank: 458
score: 98.51597086588542
patch: ++ iter ; ++ $STRING$ ; iter ;
rank: 459
score: 99.0148037997159
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , current CaMeL Point . length ) ;
rank: 459
score: 98.95382690429688
patch: final int n CaMeL C = n CaMeL R ] ;
rank: 459
score: 98.92449951171875
patch: boolean converged = true ;
rank: 459
score: 98.88123236762152
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ; ;
rank: 459
score: 98.8390780362216
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Solver ( ) ;
rank: 459
score: 98.69705200195312
patch: try { current CaMeL Point [ 0 ] = iter ;
rank: 459
score: 98.68156127929687
patch: if ++ iter ; ++ iter ; iter ;
rank: 459
score: 98.6427510579427
patch: if ( ! iter . is CaMeL Empty ++ $NUMBER$ )
rank: 459
score: 98.51478407118056
patch: ++ iter ; ++ ; ++ 0 ;
rank: 460
score: 99.050390625
patch: return compute CaMeL Residuals ( current CaMeL Point , current CaMeL Point ) ;
rank: 460
score: 99.0147372159091
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , false ) ;
rank: 460
score: 98.92425537109375
patch: double current CaMeL Point = target CaMeL Values . length ;
rank: 460
score: 98.83898315429687
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , n CaMeL C ) ;
rank: 460
score: 98.68143717447917
patch: ++ iter ; int iter + 1 ;
rank: 460
score: 98.64206949869792
patch: if ( ! iter . is CaMeL Empty ++ 0 )
rank: 460
score: 98.51390245225694
patch: ++ iter ; if iter = iter ;
rank: 461
score: 99.0503288717831
patch: ++ n CaMeL R ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 461
score: 99.0146716889881
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL R ) ;
rank: 461
score: 98.92415618896484
patch: double current CaMeL Point = 0 ;
rank: 461
score: 98.880126953125
patch: ++ iter ; current CaMeL Point [ n CaMeL R ] = ;
rank: 461
score: 98.838623046875
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ( )
rank: 461
score: 98.68119981553819
patch: ++ iter ; ++ ++ - iter ;
rank: 461
score: 98.51319715711806
patch: if iter * ; / ++ iter ;
rank: 462
score: 99.0501708984375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . length ; {
rank: 462
score: 99.01392211914063
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , 1 ) ;
rank: 462
score: 98.95354147518383
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL
rank: 462
score: 98.880126953125
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ;
rank: 462
score: 98.83859432444854
patch: v = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 462
score: 98.67965359157986
patch: ++ iter ; ; * int iter ;
rank: 462
score: 98.64191545758929
patch: , * * * * /
rank: 462
score: 98.51230875651042
patch: ++ iter ; ; else
rank: 463
score: 99.0127665201823
patch: ak = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 463
score: 98.953173828125
patch: final int n CaMeL C = current CaMeL Point . length * 1 ;
rank: 463
score: 98.92271728515625
patch: double current CaMeL Point = n CaMeL R ;
rank: 463
score: 98.87987603081598
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , ;
rank: 463
score: 98.83826622596153
patch: curr = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 463
score: 98.69370339133523
patch: try { current CaMeL Point [ 0 ] = ;
rank: 463
score: 98.6792704264323
patch: / ] ++ iter ;
rank: 463
score: 98.64188639322917
patch: else { iter = iter . 0 ;
rank: 463
score: 98.51158989800348
patch: ++ iter ; ; iter / -- ;
rank: 464
score: 99.04979750689338
patch: previous = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 464
score: 99.01272147042411
patch: ak = Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 464
score: 98.95314243861607
patch: final int n CaMeL C = current CaMeL Point [ 0 ] ;
rank: 464
score: 98.92259385850694
patch: final double current CaMeL Point = 0 ;
rank: 464
score: 98.87979929070724
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current . get CaMeL Point ( iter ;
rank: 464
score: 98.67882690429687
patch: ++ iter ; ++ iter ; int * /
rank: 464
score: 98.6416015625
patch: return new Object [ ] ; }
rank: 464
score: 98.510986328125
patch: ++ ++ ++ 1 ; ++ iter ;
rank: 465
score: 98.95311781939338
patch: final double n CaMeL C = current CaMeL Point . get CaMeL Point ( ) ;
rank: 465
score: 98.87916564941406
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C ;
rank: 465
score: 98.83818359375
patch: Iterator n CaMeL C = current CaMeL Point .
rank: 465
score: 98.6923828125
patch: j = current CaMeL Point . length + iter ;
rank: 465
score: 98.6781005859375
patch: ++ iter ; ++ iter ; ++ * iter ;
rank: 465
score: 98.64141845703125
patch: else { if iter * 0 . 0 ;
rank: 465
score: 98.51052517361111
patch: ++ iter ; ++ iter = iter ;
rank: 466
score: 98.92189378004808
patch: int iter = current CaMeL Point [ n CaMeL R ] ;
rank: 466
score: 98.87898084852431
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ) ;
rank: 466
score: 98.83814639136905
patch: n CaMeL C = current CaMeL Point . length ; current CaMeL Point = current CaMeL Point . length ;
rank: 466
score: 98.69124755859374
patch: ++ iter ; ++ n CaMeL C ; }
rank: 466
score: 98.64101155598958
patch: if ( ! iter . is CaMeL Empty iter ) {
rank: 466
score: 98.510498046875
patch: ++ iter ; ; if iter * ;
rank: 467
score: 98.95143037683823
patch: Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > current = null ;
rank: 467
score: 98.87869027944711
patch: ++ current CaMeL Point [ n CaMeL C ] = ; }
rank: 467
score: 98.83812537560097
patch: prev = current CaMeL Point . boolean CaMeL Value ( ) ;
rank: 467
score: 98.69108442826705
patch: if ( ! iter . contains ( iter ) )
rank: 467
score: 98.67723253038194
patch: / * ++ iter ; iter * /
rank: 467
score: 98.64099993024554
patch: ++ [ 1 ] ; }
rank: 467
score: 98.51044379340277
patch: ++ ( ++ 0 ; ++ iter ;
rank: 468
score: 99.04892403738839
patch: / ? Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 468
score: 99.01111421130952
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair * current CaMeL Point ;
rank: 468
score: 98.95127360026042
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = true ;
rank: 468
score: 98.87835223858173
patch: ++ n CaMeL C ; ++ n CaMeL C - iter ;
rank: 468
score: 98.8375577059659
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point ( ) ;
rank: 468
score: 98.6890536221591
patch: ++ iter ; System . exit ( iter ) ;
rank: 468
score: 98.67715793185764
patch: ++ iter ; * * int iter ;
rank: 468
score: 98.64095306396484
patch: , * * * ++ * /
rank: 468
score: 98.50948079427083
patch: ++ iter ; ; iter / * /
rank: 469
score: 99.04868977864584
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . null ;
rank: 469
score: 98.95079694475446
patch: residuals CaMeL Weights [ n CaMeL R ] = current CaMeL Point ;
rank: 469
score: 98.91913311298077
patch: final double [ ] current CaMeL Point = n CaMeL R ;
rank: 469
score: 98.87828480113636
patch: ++ iter ; current CaMeL Point = current . ;
rank: 469
score: 98.83745783025569
patch: [ ] current = current CaMeL Point . length ;
rank: 469
score: 98.6881436434659
patch: try { current CaMeL Point = current CaMeL Point ;
rank: 469
score: 98.6767822265625
patch: ++ iter ; / * / ++ iter ;
rank: 469
score: 98.64071655273438
patch: if ( iter != null ) return iter ;
rank: 469
score: 98.50940619574652
patch: ++ iter ; ; iter = iter ;
rank: 470
score: 98.91849459134616
patch: / / / compute CaMeL Cost ( current CaMeL Point ) ;
rank: 470
score: 98.87777889476104
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C , ;
rank: 470
score: 98.837255859375
patch: n CaMeL C = current CaMeL Point . length : n CaMeL C ;
rank: 470
score: 98.6873779296875
patch: ++ iter 1 ;
rank: 470
score: 98.67668321397569
patch: ++ iter ; iter * * * /
rank: 470
score: 98.64056803385417
patch: if ( ! iter . is CaMeL Empty ( ) ; return false ;
rank: 470
score: 98.50937906901042
patch: ++ iter ; iter / - / /
rank: 471
score: 99.0483169555664
patch: / * Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 471
score: 99.01056871916118
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ,
rank: 471
score: 98.9493049172794
patch: Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = true ;
rank: 471
score: 98.91709547776442
patch: / * * compute CaMeL Cost ( current CaMeL Point ) ;
rank: 471
score: 98.87758382161458
patch: current CaMeL Point [ iter ] = current CaMeL Point ;
rank: 471
score: 98.8370361328125
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point = null ;
rank: 471
score: 98.675732421875
patch: for ++ ; ++ iter ; ++ iter ;
rank: 471
score: 98.64055633544922
patch: else { if ++ ++ iter ;
rank: 471
score: 98.50905354817708
patch: iter ++ ; ++ iter ; ++ ;
rank: 472
score: 99.04818021334134
patch: current = current CaMeL Point . get CaMeL Point ( ) ;
rank: 472
score: 99.01054077148437
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL R ) ;
rank: 472
score: 98.9491678873698
patch: final int n CaMeL C = n CaMeL C ] ;
rank: 472
score: 98.91669921875
patch: b = current CaMeL Point [ iter ] ;
rank: 472
score: 98.87744140625
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point [ iter ] ) ;
rank: 472
score: 98.83690243675595
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > do {
rank: 472
score: 98.68576049804688
patch: Math . max ( iter , iter ) ;
rank: 472
score: 98.67567661830357
patch: / * ] iter * /
rank: 472
score: 98.64051164899554
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ++ 0 ; }
rank: 472
score: 98.50903998480902
patch: ++ iter ; iter / * / /
rank: 473
score: 99.04791259765625
patch: ++ iter ; current CaMeL Point [ current CaMeL Point . length ;
rank: 473
score: 98.94901820591518
patch: final double weight CaMeL Matrix = current CaMeL Point [ 0 ] ;
rank: 473
score: 98.87711588541667
patch: final double iter = current CaMeL Point . length ( ;
rank: 473
score: 98.83677455357143
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 473
score: 98.67560369318181
patch: ++ iter ; ++ iter ; if iter iter ;
rank: 473
score: 98.640185546875
patch: if ( iter != null || iter . is CaMeL Empty ( ) )
rank: 473
score: 98.50761583116319
patch: / ; iter ++ ; ++ iter ;
rank: 474
score: 99.04783412388393
patch: if ( current CaMeL Point . length > n CaMeL C ) {
rank: 474
score: 98.94832066127232
patch: if ( n CaMeL R < target CaMeL Values . length ) {
rank: 474
score: 98.9161846454327
patch: / / * compute CaMeL Cost ( current CaMeL Point ) ;
rank: 474
score: 98.87674713134766
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair = ++ iter ;
rank: 474
score: 98.83670043945312
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 , 0 ) ;
rank: 474
score: 98.68329412286931
patch: int iter = current CaMeL Point . length ) ;
rank: 474
score: 98.63993072509766
patch: else { ++ iter ; } ;
rank: 474
score: 98.50751410590277
patch: ++ iter ; ++ iter ; ; try
rank: 475
score: 99.04772077287946
patch: int current CaMeL Point = n CaMeL R + n CaMeL C ;
rank: 475
score: 98.94820404052734
patch: final int current CaMeL Point = target CaMeL Values [ current CaMeL Point ] ;
rank: 475
score: 98.914306640625
patch: for ( int ++ ; ) {
rank: 475
score: 98.87657255284927
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ;
rank: 475
score: 98.83648681640625
patch: result = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 475
score: 98.68248291015625
patch: result = current CaMeL Point [ 0 ] ;
rank: 475
score: 98.6749600497159
patch: ++ iter ; ++ 1 ; ; ++ iter ;
rank: 475
score: 98.63990367542614
patch: if ( iter == null ; / * * /
rank: 475
score: 98.50735812717014
patch: if ++ ++ iter ; ++ iter ;
rank: 476
score: 99.0088223544034
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point . length
rank: 476
score: 98.91430053710937
patch: if ( n CaMeL R < 0 ) {
rank: 476
score: 98.8758544921875
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ;
rank: 476
score: 98.83642578125
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > )
rank: 476
score: 98.67426893446181
patch: ++ iter ; int iter ; * /
rank: 476
score: 98.63927112926136
patch: if ( iter == null ; while ++ iter ;
rank: 476
score: 98.50663248697917
patch: ++ ; ++ 0 ; ++ iter ;
rank: 477
score: 99.00877888997395
patch: residuals CaMeL Weights [ n CaMeL R ] = current ;
rank: 477
score: 98.9463641826923
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < double [ ] ;
rank: 477
score: 98.87542169744319
patch: if ( iter != null ) { ++ iter ;
rank: 477
score: 98.83627115885416
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point .
rank: 477
score: 98.68165283203125
patch: ++ n CaMeL C ; ++ iter ; }
rank: 477
score: 98.67415945870536
patch: ++ 1 ; ++ 1 ;
rank: 477
score: 98.63926595052084
patch: if ( ! iter . is CaMeL Empty ( ; ) . value ;
rank: 477
score: 98.50639997209821
patch: ++ iter ; ++ super ;
rank: 478
score: 99.04649442784927
patch: current = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point ) ; }
rank: 478
score: 99.00862426757813
patch: current CaMeL Point [ ] = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C ) ;
rank: 478
score: 98.94621930803571
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = this ;
rank: 478
score: 98.9124755859375
patch: final double weight CaMeL Matrix = null ;
rank: 478
score: 98.8743034811581
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point , ;
rank: 478
score: 98.83594621930804
patch: n CaMeL R = current CaMeL Point . length ; ++ iter ;
rank: 478
score: 98.68134307861328
patch: while ( iter == 0 ) {
rank: 478
score: 98.67393275669643
patch: / * ++ iter ; ;
rank: 478
score: 98.638916015625
patch: if ( . is CaMeL Empty ( ; ++ iter ;
rank: 479
score: 99.00830078125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , false ) ;
rank: 479
score: 98.94572897518383
patch: final double [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point ;
rank: 479
score: 98.91184488932292
patch: final double weight CaMeL Matrix = current CaMeL Point ) ;
rank: 479
score: 98.68133544921875
patch: ++ iter ; ++ iter 1 ;
rank: 479
score: 98.67371715198864
patch: ++ iter ; ++ iter ; final int iter ;
rank: 479
score: 98.63884887695312
patch: try { iter = iter . iter ( ;
rank: 479
score: 98.4984375
patch: ++ iter ; }
rank: 480
score: 99.04581124441964
patch: int current CaMeL Point = n CaMeL R : n CaMeL R ;
rank: 480
score: 98.94557291666666
patch: final int current CaMeL Point = n CaMeL C : current CaMeL Point ;
rank: 480
score: 98.9103534405048
patch: / * * compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 480
score: 98.87355041503906
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ;
rank: 480
score: 98.835693359375
patch: c = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 480
score: 98.67927689985795
patch: if ( current CaMeL Point . length > 1 )
rank: 480
score: 98.67298719618056
patch: / * ++ 1 ; ++ iter ;
rank: 480
score: 98.63882882254464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 480
score: 98.49514334542411
patch: ++ 0 ; ++ 1 ;
rank: 481
score: 99.0455810546875
patch: ++ current CaMeL Point [ current CaMeL Point [ n CaMeL C ] ;
rank: 481
score: 99.00744047619048
patch: if ( current CaMeL Point . length < current CaMeL Point . length , current CaMeL Point . length )
rank: 481
score: 98.87352905273437
patch: ++ iter ; current = current . length ;
rank: 481
score: 98.83563523065476
patch: table = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 481
score: 98.6386962890625
patch: if ( iter == null ) throw null ;
rank: 481
score: 98.49396623883929
patch: / ; ; ++ iter ;
rank: 482
score: 99.04517618815105
patch: if ( n CaMeL R < n CaMeL R ) {
rank: 482
score: 99.00728062220982
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current * current ;
rank: 482
score: 98.94532470703125
patch: int n CaMeL C = current CaMeL Point ;
rank: 482
score: 98.87343186598558
patch: ++ iter ; current CaMeL Point [ iter ] = ; }
rank: 482
score: 98.677880859375
patch: if ( iter != this . ++ ) {
rank: 482
score: 98.67206488715277
patch: ++ iter ; iter ; * ; /
rank: 482
score: 98.63861553485577
patch: if ( ! iter . is CaMeL Empty ; break ; }
rank: 483
score: 99.04507882254464
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = this . current ;
rank: 483
score: 99.00581287202381
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current ) ;
rank: 483
score: 98.9452373798077
patch: int n CaMeL C = current CaMeL Point . length 1 ;
rank: 483
score: 98.87220001220703
patch: ++ n CaMeL C ; final ;
rank: 483
score: 98.83519789751838
patch: n CaMeL C = current CaMeL Point . length ; current CaMeL Point . ++ ;
rank: 483
score: 98.67701305042614
patch: final int iter = iter . iterator ( ) ;
rank: 483
score: 98.63858371310764
patch: else { return new ++ iter ; }
rank: 483
score: 98.49007742745536
patch: ++ * ; ++ iter ;
rank: 484
score: 99.04443359375
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL R ] ;
rank: 484
score: 99.00565962357955
patch: b = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ) ;
rank: 484
score: 98.94488166360294
patch: final double [ ] current = current CaMeL Point . get CaMeL Value ( ) ;
rank: 484
score: 98.90672607421875
patch: for ( boolean converged = false ; ) {
rank: 484
score: 98.87203216552734
patch: final double iter = current CaMeL Point . length - current CaMeL Point . ;
rank: 484
score: 98.83519345238095
patch: o = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 484
score: 98.6767578125
patch: current CaMeL Point [ 0 ] = ;
rank: 484
score: 98.6709317294034
patch: ++ iter ; ++ 1 ; ++ iter ; ;
rank: 484
score: 98.63818359375
patch: if ( iter == 0 ; return false ;
rank: 484
score: 98.48619588216145
patch: ++ ++ ++ iter ;
rank: 485
score: 98.83517020089286
patch: n CaMeL C = current CaMeL Point . length ; ++ 0 ;
rank: 485
score: 98.6763427734375
patch: ++ iter ; while ( iter == 0 )
rank: 485
score: 98.66993297230114
patch: ++ iter ; ++ iter ; ; int iter ;
rank: 485
score: 98.63801405164931
patch: if ( iter < 0 ) break ;
rank: 485
score: 98.48529924665179
patch: / ; ++ iter ; ;
rank: 486
score: 99.04334368024554
patch: int iter = residuals CaMeL Weights [ current CaMeL Point . length ;
rank: 486
score: 98.94426935369319
patch: final int length = current CaMeL Point . length ;
rank: 486
score: 98.90530160757211
patch: int n CaMeL C = current CaMeL Point . length length ;
rank: 486
score: 98.87153063322368
patch: ++ current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ( $STRING$ ;
rank: 486
score: 98.83516652960526
patch: result = weight CaMeL Matrix . get CaMeL Solver ( ) . get CaMeL Solver ( ) ;
rank: 486
score: 98.67609197443181
patch: ++ iter ; System . exit ( 1 ) ;
rank: 486
score: 98.6698974609375
patch: ++ iter ; try { if ++ iter ;
rank: 486
score: 98.63797433035714
patch: if ( ! iter . is CaMeL Empty ++ ) . iter ;
rank: 486
score: 98.48507690429688
patch: iter ++ ;
rank: 487
score: 99.0050936612216
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL R ] ;
rank: 487
score: 98.94364420572917
patch: final int current CaMeL Point = current CaMeL Point + n CaMeL R ;
rank: 487
score: 98.83510044642857
patch: c = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 487
score: 98.67606201171876
patch: current CaMeL Point [ 0 ] = 0 ;
rank: 487
score: 98.66986083984375
patch: ++ 0 ; ++ iter ; ++ 1 ;
rank: 487
score: 98.63794708251953
patch: else { ++ += iter ; }
rank: 487
score: 98.4818115234375
patch: return iter ; ++ iter ;
rank: 488
score: 98.90448552911931
patch: b = current CaMeL Point . length ( ) ;
rank: 488
score: 98.87141927083333
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ;
rank: 488
score: 98.83481732536765
patch: [ ] current CaMeL Point = current CaMeL Point . int CaMeL Value ( ) ;
rank: 488
score: 98.66921997070312
patch: ++ 0 ; ++ iter ; int iter ;
rank: 488
score: 98.63756452287946
patch: if ( ! iter . is CaMeL Empty ( ; ) false ;
rank: 488
score: 98.47971888950893
patch: ++ ++ iter ; iter ;
rank: 489
score: 99.0416971842448
patch: boolean current CaMeL Point = current CaMeL Point . length ;
rank: 489
score: 99.00453879616477
patch: if ( current CaMeL Point . length < current CaMeL Point . length , current CaMeL Point . length ) {
rank: 489
score: 98.94341681985294
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; int n CaMeL C ;
rank: 489
score: 98.9034912109375
patch: double current CaMeL Point = n CaMeL C ;
rank: 489
score: 98.87091936383929
patch: ++ iter ; int iter = current CaMeL Point . length ; ;
rank: 489
score: 98.83456600413604
patch: o = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 489
score: 98.66911010742187
patch: i * ++ ;
rank: 489
score: 98.63725142045455
patch: else { throw new Runtime CaMeL Exception ++ ; }
rank: 489
score: 98.47858537946429
patch: / ; ++ ++ iter ;
rank: 490
score: 99.00447221235795
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ;
rank: 490
score: 98.9034423828125
patch: final double [ ] current CaMeL Point = n CaMeL C ;
rank: 490
score: 98.87079216452206
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 490
score: 98.83453047902961
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL Point CaMeL
rank: 490
score: 98.66891915457589
patch: ++ iter ; int value ;
rank: 490
score: 98.6370849609375
patch: else { ( iter * 0 . 0 ;
rank: 490
score: 98.47828892299107
patch: ++ iter ; ++ ; /
rank: 491
score: 99.04103440504808
patch: int current CaMeL Point = current CaMeL Point [ 0 ] ;
rank: 491
score: 99.00436740451389
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry (
rank: 491
score: 98.94257061298077
patch: final double [ ] target CaMeL Values = current CaMeL Point ;
rank: 491
score: 98.90298227163461
patch: / / / compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 491
score: 98.87045288085938
patch: final double iter = current CaMeL Point . length ; ;
rank: 491
score: 98.67250569661458
patch: final ; ++ iter ;
rank: 491
score: 98.666748046875
patch: else * ++ iter ; ++ iter ;
rank: 491
score: 98.6370849609375
patch: if ( . is CaMeL Empty ( ) ) { break ; }
rank: 491
score: 98.47549874441964
patch: ++ iter ; ; / ;
rank: 492
score: 99.00413876488095
patch: final double [ ] current CaMeL Point = current CaMeL Point . length . to CaMeL Array ( ) ;
rank: 492
score: 98.90279812282986
patch: final double weight CaMeL Matrix = current ;
rank: 492
score: 98.87043313419117
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 492
score: 98.83419363839286
patch: found = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 492
score: 98.6714599609375
patch: if ( iter == this . iter ) {
rank: 492
score: 98.63706618088942
patch: if ( ! iter . is CaMeL Empty ++ ) * /
rank: 492
score: 98.47145298549107
patch: ++ iter ; ++ ; ;
rank: 493
score: 99.00411648220486
patch: final Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 493
score: 98.94210815429688
patch: int current CaMeL Point = n CaMeL R - 0 ;
rank: 493
score: 98.90193997896634
patch: final double weight CaMeL Matrix = get CaMeL Entry ( ) ;
rank: 493
score: 98.87018229166667
patch: ++ iter ; current CaMeL Point [ n CaMeL C ] = current ;
rank: 493
score: 98.83404250372024
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point .
rank: 493
score: 98.67092556423611
patch: c = current CaMeL Point . length ;
rank: 493
score: 98.66663275824652
patch: else { ++ iter ; while iter ;
rank: 493
score: 98.63655229048295
patch: if ( ! iter . equals ( && ) ;
rank: 493
score: 98.469482421875
patch: ++ 0 ; ++ start ;
rank: 494
score: 99.04011804917279
patch: int current CaMeL Point = weight CaMeL Matrix . get CaMeL Row ( 0 ) ;
rank: 494
score: 99.00405051491477
patch: current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 494
score: 98.86941046463816
patch: ++ n CaMeL C ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ;
rank: 494
score: 98.83380998883929
patch: item = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 494
score: 98.67091878255208
patch: synchronized ( this ) {
rank: 494
score: 98.66633911132813
patch: ++ iter ; while iter ; while iter ;
rank: 494
score: 98.63544464111328
patch: else { / * = iter ;
rank: 494
score: 98.46749441964286
patch: ++ iter ; iter / *
rank: 495
score: 99.04007393973214
patch: if ( current CaMeL Point . length >= n CaMeL C ) {
rank: 495
score: 98.9404541015625
patch: final double n CaMeL C = current CaMeL Point . length * 1 ;
rank: 495
score: 98.86934037642045
patch: ++ n CaMeL C ; this . ++ iter ;
rank: 495
score: 98.83298658288044
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair do CaMeL Optimize ( )
rank: 495
score: 98.66624866832386
patch: ++ iter ; ++ iter ; for iter ++ ;
rank: 495
score: 98.66448974609375
patch: try { Thread . sleep ( iter ) ;
rank: 495
score: 98.63499145507812
patch: else { if ++ [ 0 ] ; }
rank: 495
score: 98.46459089006696
patch: / ++ ; ++ iter ;
rank: 496
score: 99.03817313058036
patch: ++ current CaMeL Point ; current CaMeL Point = current CaMeL Point ;
rank: 496
score: 98.89977088341347
patch: int iter = current CaMeL Point . length ; / * /
rank: 496
score: 98.83286354758523
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > iter = current ;
rank: 496
score: 98.66620744977679
patch: / * ] iter ; /
rank: 496
score: 98.66385226779514
patch: if ( iter == 0 ) continue ;
rank: 496
score: 98.63495635986328
patch: , * * * * / /
rank: 497
score: 99.0381328876202
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ) ;
rank: 497
score: 98.94002591646634
patch: final double weight CaMeL Matrix = weight CaMeL Matrix ( ) ;
rank: 497
score: 98.89877554086539
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair new = current ;
rank: 497
score: 98.86854137073864
patch: ++ iter ; current CaMeL Point = ++ iter ;
rank: 497
score: 98.8326416015625
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix . get CaMeL Row ( ) ) ;
rank: 497
score: 98.66539306640625
patch: ++ name ; ++ iter ; ++ iter ;
rank: 497
score: 98.63487141927084
patch: if ( ! iter . is CaMeL Empty ++ ) { ++ iter ;
rank: 497
score: 98.46267264229911
patch: ++ iter ; ++ in ;
rank: 498
score: 99.03802959735577
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; {
rank: 498
score: 98.89833420973558
patch: int n CaMeL C = current CaMeL Point [ iter ] ;
rank: 498
score: 98.8684551532452
patch: ++ iter ; current = current CaMeL Point . length ( ;
rank: 498
score: 98.83256603422619
patch: tmp = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 498
score: 98.66414969308036
patch: i * / ++ iter ;
rank: 498
score: 98.6636629971591
patch: ++ iter ; if ( iter != 0 ) {
rank: 498
score: 98.63475748697917
patch: if ( ! iter . is CaMeL Empty ( ; ) return iter ;
rank: 498
score: 98.45946393694196
patch: ++ iterator ; ++ iter ;
rank: 499
score: 99.03801618303571
patch: while ( n CaMeL C < current CaMeL Point . length ) {
rank: 499
score: 98.86841430664063
patch: ++ iter ; while ( iter < iter )
rank: 499
score: 98.83249240451389
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ) ;
rank: 499
score: 98.6640380859375
patch: } ++ iter ; try { ++ iter ;
rank: 499
score: 98.66238064236111
patch: ++ iter ; ++ current CaMeL Point ;
rank: 499
score: 98.63443332248264
patch: if ( iter > 0 ; break ;
rank: 499
score: 98.4580078125
patch: ++ $NUMBER$ ;
rank: 500
score: 99.03775460379464
patch: if ( current CaMeL Point . length > n CaMeL R ) {
rank: 500
score: 98.89662863991477
patch: final double weight CaMeL Matrix = n CaMeL R ;
rank: 500
score: 98.86835271661931
patch: ++ iter = current CaMeL Point . length ; ;
rank: 500
score: 98.83242797851562
patch: end = current CaMeL Point . length ; }
rank: 500
score: 98.66123046875
patch: ++ iter ; if ( iter == 0 )
rank: 500
score: 98.63406982421876
patch: if ( iter == 0 ; return iter )
rank: 500
score: 98.45673479352679
patch: iter ++ ; ++ ; ;
rank: 501
score: 99.0375114889706
patch: final String current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 501
score: 98.93775024414063
patch: int n CaMeL R = n CaMeL R ;
rank: 501
score: 98.89659534801136
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 501
score: 98.86797417534723
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current ) ; }
rank: 501
score: 98.83237526633523
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 , n CaMeL C ) ;
rank: 501
score: 98.66385904947917
patch: ++ iter ; else iter * * /
rank: 501
score: 98.66050026633523
patch: if ( current CaMeL Point . length < iter )
rank: 501
score: 98.6337890625
patch: if ( iter == null && ! . is CaMeL Empty ( ) )
rank: 501
score: 98.45535714285714
patch: ++ iter ; ++ iterator ;
rank: 502
score: 99.03730325137867
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current . null ;
rank: 502
score: 99.00129045758929
patch: int current CaMeL Point = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 502
score: 98.93626912434895
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point ;
rank: 502
score: 98.89487868088942
patch: int n CaMeL C = target CaMeL Values [ iter ] ;
rank: 502
score: 98.86765543619792
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ;
rank: 502
score: 98.83170812270221
patch: item = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 502
score: 98.66356404622395
patch: int iter + 0 ;
rank: 502
score: 98.66021728515625
patch: ++ iter ; if ( iter != 0 )
rank: 502
score: 98.45382254464286
patch: ++ 1 ; ++ start ;
rank: 503
score: 99.03727452895221
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . solve ( ) ;
rank: 503
score: 99.0010922080592
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current ) ;
rank: 503
score: 98.89470966045673
patch: boolean converged = current CaMeL Point [ n CaMeL R ] ;
rank: 503
score: 98.86756310096153
patch: ++ n CaMeL C ; ++ n CaMeL C ; } ;
rank: 503
score: 98.83169410342262
patch: j = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 503
score: 98.65844048394098
patch: if ( iter == this . ++ )
rank: 503
score: 98.63352748325893
patch: if ( iter == null || iter . is CaMeL Empty ++ )
rank: 503
score: 98.43488420758929
patch: ++ iter ; ++ ; else
rank: 504
score: 99.03721110026042
patch: current = weight CaMeL Matrix [ n CaMeL C ] ;
rank: 504
score: 98.93517252604167
patch: final double [ ] current CaMeL Point = current CaMeL Point . start ;
rank: 504
score: 98.89357503255208
patch: int iter = target CaMeL Values . length : 0 ;
rank: 504
score: 98.86741638183594
patch: ++ iter ; int iter = current CaMeL Point . length ; ++ iter ;
rank: 504
score: 98.83167521158855
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C . get CaMeL Row CaMeL Vector ( ) ) ;
rank: 504
score: 98.66298217773438
patch: ++ iter ; try { ++ - iter ;
rank: 504
score: 98.65717163085938
patch: ++ iter , current CaMeL Point = 0 ;
rank: 504
score: 98.63319614955357
patch: if ( ! iter . is CaMeL Empty ( ) ; } }
rank: 504
score: 98.434326171875
patch: ++ iter ; ++ / ;
rank: 505
score: 99.03709106445312
patch: if ( checker . solve ( ) ) {
rank: 505
score: 99.00099875710227
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Block CaMeL Real CaMeL Matrix ( weight CaMeL Matrix ) ;
rank: 505
score: 98.93490397135416
patch: final int current CaMeL Point = current CaMeL Point : n CaMeL R ;
rank: 505
score: 98.86729213169643
patch: ++ iter ; current = ;
rank: 505
score: 98.83160109747024
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current . get CaMeL Row CaMeL Vector ( ) ;
rank: 505
score: 98.66294555664062
patch: ++ iter ; ++ iter ; for iter {
rank: 505
score: 98.65646362304688
patch: int n CaMeL C = iter ;
rank: 505
score: 98.63311212713069
patch: if ( . is CaMeL Empty ( ; ) {
rank: 505
score: 98.43346296037946
patch: ++ iter ; ++ ++ ;
rank: 506
score: 99.03700474330357
patch: int current CaMeL Point = n CaMeL R + n CaMeL R ;
rank: 506
score: 99.00099690755208
patch: ++ [ ] current = current CaMeL Point . length ;
rank: 506
score: 98.93455200195312
patch: int n CaMeL R = n CaMeL C ;
rank: 506
score: 98.89292555588942
patch: int n CaMeL C = current CaMeL Point . length ; ;
rank: 506
score: 98.86715359157986
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 506
score: 98.83159930889423
patch: { Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 506
score: 98.66289605034723
patch: ++ iter ; ++ iter ; value ;
rank: 506
score: 98.65625
patch: current CaMeL Point [ 0 ] = iter . ;
rank: 506
score: 98.63294566761364
patch: if ( iter == 0 ; return null ; }
rank: 507
score: 99.03636067708334
patch: int current CaMeL Point = residuals CaMeL Weights [ current CaMeL Point ] ;
rank: 507
score: 99.00079345703125
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair * current ;
rank: 507
score: 98.9335225423177
patch: double n CaMeL C = target CaMeL Values . length ;
rank: 507
score: 98.89168090820313
patch: double converged = current CaMeL Point . length ;
rank: 507
score: 98.86701795789931
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ; }
rank: 507
score: 98.83140345982143
patch: curr = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 507
score: 98.63272857666016
patch: ++ * * * iter ; /
rank: 507
score: 98.42586844308036
patch: ++ - ; ++ iter ;
rank: 508
score: 99.03630514705883
patch: final double n CaMeL C = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 508
score: 99.00027231069711
patch: current = current CaMeL Point . length * n CaMeL C ;
rank: 508
score: 98.93296983506944
patch: final Real CaMeL Matrix current = current ;
rank: 508
score: 98.89092407226562
patch: if ( current CaMeL Point == null ) {
rank: 508
score: 98.86675153459821
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( this , ;
rank: 508
score: 98.83099365234375
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > }
rank: 508
score: 98.66208902994792
patch: ++ iter ; iter iter = iter ;
rank: 508
score: 98.65404163707386
patch: ++ iter ; while ( iter . ; ) {
rank: 508
score: 98.63240559895833
patch: if ( ! iter . is CaMeL Empty ( ; }
rank: 508
score: 98.42579868861607
patch: ++ iter ; ++ - ;
rank: 509
score: 98.99986683238636
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 509
score: 98.89011452414773
patch: final double name = current CaMeL Point . length ;
rank: 509
score: 98.86672973632812
patch: int n CaMeL C = current CaMeL Point . length ( ) - iter ;
rank: 509
score: 98.8309909986413
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Value ( 0 ) ;
rank: 509
score: 98.66203477647569
patch: / * ] iter = ++ iter ;
rank: 509
score: 98.65383078835227
patch: if ( ! iter . equals ( current ) ;
rank: 509
score: 98.63191223144531
patch: if ( iter ; break ; }
rank: 509
score: 98.42531912667411
patch: iter ; ; ++ iter ;
rank: 510
score: 99.03597005208333
patch: for ( double n CaMeL C : current CaMeL Point . length ) {
rank: 510
score: 98.99973958333334
patch: final double [ ] current = Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 510
score: 98.88990367542614
patch: double CaMeL Value = current CaMeL Point . length ;
rank: 510
score: 98.83098810369319
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) target CaMeL Values . do CaMeL Optimize ( ) ) ;
rank: 510
score: 98.66199408637152
patch: ++ iter ; while iter ; iter ;
rank: 510
score: 98.65339660644531
patch: ++ iter ; while ( true )
rank: 510
score: 98.63131009615384
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 510
score: 98.42330496651786
patch: ++ new ++ ; iter ;
rank: 511
score: 99.03594970703125
patch: ++ current CaMeL Point [ current CaMeL Point ) ] ;
rank: 511
score: 98.99968804253473
patch: residuals CaMeL Weights [ iter ] = weight CaMeL Matrix . get CaMeL Type ( ) ;
rank: 511
score: 98.83087158203125
patch: y = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 511
score: 98.66190592447917
patch: ++ 0 ; try { ++ iter ;
rank: 511
score: 98.65337456597223
patch: j = iter . iter ( ) ;
rank: 511
score: 98.63092041015625
patch: if ( iter == null ) {
rank: 511
score: 98.42318289620536
patch: ++ iter ; iter ; else
rank: 512
score: 99.03562233664773
patch: current = new double [ n CaMeL C ] ;
rank: 512
score: 98.9996807391827
patch: residuals CaMeL Weights [ current CaMeL Point = n CaMeL C ;
rank: 512
score: 98.92952786959134
patch: final int current CaMeL Point = current CaMeL Point + 0 ;
rank: 512
score: 98.83057454427083
patch: return new Block CaMeL Real CaMeL Matrix ( current CaMeL Point ) ; }
rank: 512
score: 98.66032270951705
patch: ++ iter ; iter ; * / ++ iter ;
rank: 512
score: 98.65307006835937
patch: final ++ iter ;
rank: 512
score: 98.63056640625
patch: if ( ! iter . is CaMeL Empty ( ; > 0 ) {
rank: 512
score: 98.42109026227679
patch: ++ default ; ++ iter ;
rank: 513
score: 98.92920735677083
patch: final int current CaMeL Point = current CaMeL Point : n CaMeL C ;
rank: 513
score: 98.8837139423077
patch: int n CaMeL C = current CaMeL Point [ length ] ;
rank: 513
score: 98.86601039341518
patch: ++ iter ; target CaMeL Values [ n CaMeL C ] = ;
rank: 513
score: 98.83034153988487
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; ++ iter ;
rank: 513
score: 98.65936834161931
patch: ++ 1 ; ++ iter ; if ++ iter ;
rank: 513
score: 98.65160522460937
patch: int iter = iter - n CaMeL R ;
rank: 513
score: 98.62984212239583
patch: if ( ! iter . is CaMeL Empty ++ 1 )
rank: 513
score: 98.41686401367187
patch: ++ ++ 1 ;
rank: 514
score: 99.03494698660714
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . this ;
rank: 514
score: 98.99913024902344
patch: final int n CaMeL C = current CaMeL Point [ n CaMeL R ] ;
rank: 514
score: 98.88352614182692
patch: final double n CaMeL C = weight CaMeL Matrix . length ;
rank: 514
score: 98.86578728170956
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , n CaMeL C ;
rank: 514
score: 98.83029174804688
patch: j = current CaMeL Point . length ; }
rank: 514
score: 98.65897623697917
patch: ++ iter ; for iter + 0 ;
rank: 514
score: 98.65047878689236
patch: final int n CaMeL C = iter ;
rank: 514
score: 98.62975202287946
patch: if ( ! iter . is CaMeL Empty ( ) ; else }
rank: 514
score: 98.41374860491071
patch: ++ iter ; ++ out ;
rank: 515
score: 99.03468232996323
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ;
rank: 515
score: 98.99868594898896
patch: final double [ ] current CaMeL Point = current . get CaMeL Point ( ) ;
rank: 515
score: 98.92862141927084
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . length ;
rank: 515
score: 98.87998453776042
patch: double Point CaMeL Vector CaMeL Value CaMeL Pair = current ;
rank: 515
score: 98.86518012152777
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter . iter , ;
rank: 515
score: 98.82963053385417
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = false ;
rank: 515
score: 98.65875244140625
patch: ++ 0 ; iter ; int iter ;
rank: 515
score: 98.64934692382812
patch: i = current CaMeL Point [ 0 ] ;
rank: 515
score: 98.62965745192308
patch: if ( ! iter . is CaMeL Empty ++ ) iter ;
rank: 516
score: 99.03434535435268
patch: int iter = weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 516
score: 98.92828369140625
patch: System . arraycopy ( current CaMeL Point , 0 ) ;
rank: 516
score: 98.87984212239583
patch: double iter = new double [ n CaMeL C ] ;
rank: 516
score: 98.8644287109375
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter , ;
rank: 516
score: 98.64906819661458
patch: ++ iter ; if ( true ) {
rank: 516
score: 98.62952338324652
patch: if ( iter == iter ) return ;
rank: 516
score: 98.41025216238839
patch: ++ ( ++ ++ iter ;
rank: 517
score: 98.99796295166016
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair * current CaMeL Point ;
rank: 517
score: 98.92813313802084
patch: final double n CaMeL C = current CaMeL Point . length * 0 ;
rank: 517
score: 98.87865101207386
patch: final Real CaMeL Matrix ( current CaMeL Point ) ;
rank: 517
score: 98.86433679917279
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R , ;
rank: 517
score: 98.8295010653409
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair do = current ;
rank: 517
score: 98.65866427951389
patch: ++ iter ; int iter ; else ;
rank: 517
score: 98.64902565696023
patch: if ( ! iter . equals ( current ) )
rank: 517
score: 98.62881905691964
patch: if ( iter != null || iter . is CaMeL Empty ++ )
rank: 518
score: 99.03367396763393
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current = null ;
rank: 518
score: 98.99779110863095
patch: final double [ ] current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ;
rank: 518
score: 98.8778545673077
patch: if ( n CaMeL C < target CaMeL Values . length ;
rank: 518
score: 98.86432439630681
patch: ++ iter ; current = current CaMeL Point . ;
rank: 518
score: 98.82929021661931
patch: y = current CaMeL Point . length ; ++ ;
rank: 518
score: 98.65800170898437
patch: ++ iter ; else * / ++ iter ;
rank: 518
score: 98.6483383178711
patch: if ( iter >= iter ) {
rank: 518
score: 98.62871442522321
patch: if ( ! iter . is CaMeL Empty ( ; ) / ;
rank: 518
score: 98.40433175223214
patch: if iter = ++ 1 ;
rank: 519
score: 99.0333251953125
patch: final Object current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 519
score: 98.99739379882813
patch: residuals CaMeL Weights [ n CaMeL R ] = current CaMeL Point . get CaMeL Value ( ) ;
rank: 519
score: 98.87638716264205
patch: b = new double [ n CaMeL R ] ;
rank: 519
score: 98.8642911044034
patch: ++ n CaMeL C - n CaMeL C ; ;
rank: 519
score: 98.82918294270833
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair do CaMeL Optimize ( ) {
rank: 519
score: 98.65798117897727
patch: super . ++ iter ; ++ iter ; iter ;
rank: 519
score: 98.64826049804688
patch: while ( iter >= n CaMeL C ) {
rank: 519
score: 98.62819998604911
patch: if ( iter != null && iter . length > 0 ) {
rank: 519
score: 98.39812360491071
patch: ++ iter ; ++ copy ;
rank: 520
score: 99.03330775669643
patch: current CaMeL Point [ n CaMeL R ] = current CaMeL Point ;
rank: 520
score: 98.87623009314903
patch: final double [ ] current CaMeL Point = current . length ;
rank: 520
score: 98.86420084635417
patch: int iter = current CaMeL Point . length - current CaMeL Point . ;
rank: 520
score: 98.82915182674633
patch: table = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 520
score: 98.65787760416667
patch: ++ iter ; * * ++ iter ;
rank: 520
score: 98.64776000976562
patch: if ( iter != null ) ++ iter ;
rank: 520
score: 98.62810407366071
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; ++ iter ;
rank: 520
score: 98.39747837611607
patch: ++ iter ; ++ stop ;
rank: 521
score: 98.92629770132211
patch: final int [ ] current CaMeL Point = current CaMeL Point ;
rank: 521
score: 98.87398587740384
patch: int n CaMeL C = current CaMeL Point . length ; }
rank: 521
score: 98.8640606219952
patch: ++ n CaMeL C ; ++ n CaMeL C + iter ;
rank: 521
score: 98.8289566040039
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values ) ;
rank: 521
score: 98.65711669921875
patch: ++ iter ; int * / ++ iter ;
rank: 521
score: 98.647216796875
patch: if ( current CaMeL Point . length != 0 )
rank: 521
score: 98.6275390625
patch: else { if ( ! iter . equals ;
rank: 521
score: 98.39734903971355
patch: ++ iter ; else ;
rank: 522
score: 98.996826171875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) ( current ;
rank: 522
score: 98.9260762532552
patch: int current CaMeL Point = n CaMeL R - 1 ;
rank: 522
score: 98.87290261008523
patch: final double weight CaMeL Matrix = n CaMeL C ;
rank: 522
score: 98.86396789550781
patch: ++ iter ; final double iter ;
rank: 522
score: 98.82868041992188
patch: j = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 522
score: 98.65709092881944
patch: ++ iter ; * ; int iter ;
rank: 522
score: 98.64708862304687
patch: int n CaMeL C = iter - 1 ;
rank: 522
score: 98.62753295898438
patch: if ( iter != null ; ++ iter ;
rank: 522
score: 98.3951416015625
patch: ++ iter ; } iter
rank: 523
score: 98.99613229851974
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point . length ;
rank: 523
score: 98.92533365885417
patch: Point CaMeL Vector CaMeL Value CaMeL Pair iterator = current ;
rank: 523
score: 98.82856830797698
patch: n CaMeL C = current CaMeL Point . length ; current = current CaMeL Point . length ;
rank: 523
score: 98.6569580078125
patch: / * ] iter ++ ; ++ iter ;
rank: 523
score: 98.64698621961806
patch: ++ iter 1 ; ++ iter 1 ;
rank: 523
score: 98.62736372514205
patch: else { this . iter = iter . max ;
rank: 523
score: 98.39344133649554
patch: ++ 0 ; ++ 0 ;
rank: 524
score: 99.03085123697916
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( checker ) ;
rank: 524
score: 98.9234619140625
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < double [ ] ,
rank: 524
score: 98.8636474609375
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ;
rank: 524
score: 98.82851736886161
patch: int n CaMeL C = current CaMeL Point . length - 0 ;
rank: 524
score: 98.65639241536458
patch: / * ++ iter ; / * /
rank: 524
score: 98.6456631747159
patch: if ( current CaMeL Point [ 0 ] == ;
rank: 524
score: 98.62736206054687
patch: if ( iter == iter ) return iter ;
rank: 524
score: 98.38752092633929
patch: ++ $NUMBER$ ; ++ 1 ;
rank: 525
score: 98.99568314985795
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( $STRING$ ) ;
rank: 525
score: 98.92334594726563
patch: Real CaMeL Matrix current CaMeL Point = current ;
rank: 525
score: 98.87213604266827
patch: double current CaMeL Point = target CaMeL Values [ iter ] ;
rank: 525
score: 98.86341094970703
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( this , iter , ;
rank: 525
score: 98.8281962076823
patch: n CaMeL C = current CaMeL Point . length ; final
rank: 525
score: 98.65611572265625
patch: ++ 0 ; ++ iter ; while iter ;
rank: 525
score: 98.62715911865234
patch: if ( iter ; * / ;
rank: 525
score: 98.38626098632812
patch: if iter = 0 ;
rank: 526
score: 98.99557834201389
patch: final double [ ] current = null ;
rank: 526
score: 98.92261681189903
patch: final double weight CaMeL Matrix = target CaMeL Values ( ) ;
rank: 526
score: 98.86277262369792
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point . length - 1 ;
rank: 526
score: 98.828125
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 526
score: 98.65587269176136
patch: ++ iter ; ++ * * ; ++ iter ;
rank: 526
score: 98.64410955255681
patch: while ( iter == current CaMeL Point . length )
rank: 526
score: 98.62712097167969
patch: finally { ++ * iter ; }
rank: 526
score: 98.38615417480469
patch: ++ start ;
rank: 527
score: 99.02930501302083
patch: ++ iter ; int n CaMeL C = target CaMeL Values . length ;
rank: 527
score: 98.99539620535714
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , current CaMeL Point . length ;
rank: 527
score: 98.92207641601563
patch: double [ ] current = current CaMeL Point ;
rank: 527
score: 98.8710604580966
patch: final double [ ] residuals CaMeL Weights = null ;
rank: 527
score: 98.86264870383523
patch: ++ iter ; this . ++ n CaMeL R ;
rank: 527
score: 98.65575062144886
patch: ++ iter ; iter ; System . out . ;
rank: 527
score: 98.64401245117188
patch: int n CaMeL C = iter + 1 ;
rank: 528
score: 98.99513753255208
patch: residuals CaMeL Weights [ n CaMeL C ] = null ;
rank: 528
score: 98.921875
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = this ;
rank: 528
score: 98.8624755859375
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , ; }
rank: 528
score: 98.8280613111413
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = false ;
rank: 528
score: 98.65498860677083
patch: ++ iter ; ++ / * / /
rank: 528
score: 98.64255777994792
patch: if ( current CaMeL Point != null )
rank: 528
score: 98.62679714626736
patch: if ( iter != null ; * /
rank: 528
score: 98.38405064174107
patch: ++ min ; ++ iter ;
rank: 529
score: 99.02908528645834
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 529
score: 98.99513549804688
patch: residuals CaMeL Weights [ n CaMeL C ] = current CaMeL Point . get CaMeL Row ( ) ;
rank: 529
score: 98.9217529296875
patch: Real CaMeL Matrix weight CaMeL Matrix = current ;
rank: 529
score: 98.862451171875
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 529
score: 98.65470581054687
patch: ++ iter ; ++ - * ++ iter ;
rank: 529
score: 98.64030317826705
patch: current CaMeL Point [ iter ] = ++ iter ;
rank: 529
score: 98.62672729492188
patch: if ( iter == iter ; break ; }
rank: 529
score: 98.38064139229911
patch: ++ iter ; ++ System ;
rank: 530
score: 99.02865397135416
patch: if ( current CaMeL Point . length <= n CaMeL R ] ) {
rank: 530
score: 98.99492797851562
patch: final int current CaMeL Point = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R ) ;
rank: 530
score: 98.86884014423077
patch: if ( n CaMeL R < current CaMeL Point . length ;
rank: 530
score: 98.86209106445312
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ;
rank: 530
score: 98.82787146935097
patch: [ ] current CaMeL Point = current CaMeL Point . get CaMeL
rank: 530
score: 98.65439181857639
patch: / * ++ iter ; if iter ;
rank: 530
score: 98.6386962890625
patch: current CaMeL Point [ 1 ] = iter ;
rank: 531
score: 99.02805739182692
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; ;
rank: 531
score: 98.99486142113095
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) get ;
rank: 531
score: 98.9194844563802
patch: final double weight CaMeL Matrix ( current CaMeL Point ) ;
rank: 531
score: 98.86826782226562
patch: boolean converged = checker . converged ( ) ;
rank: 531
score: 98.86193169487848
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point [ 0 ] ;
rank: 531
score: 98.82779134114584
patch: check CaMeL Parameters ( current CaMeL Point , current CaMeL Point ) ; }
rank: 531
score: 98.65433756510417
patch: ++ iter ; / * int iter ;
rank: 531
score: 98.63738458806819
patch: target CaMeL Values [ iter ++ ] = iter ;
rank: 531
score: 98.62609252929687
patch: else { ++ * ( 0 . 0 ;
rank: 531
score: 98.375
patch: if iter * ++ ;
rank: 532
score: 98.9943339029948
patch: double [ ] current CaMeL Point = weight CaMeL Matrix ;
rank: 532
score: 98.91947021484376
patch: Real CaMeL Matrix [ ] current = current ;
rank: 532
score: 98.86760864257812
patch: if ( n CaMeL C == 0 ) {
rank: 532
score: 98.86161295572917
patch: ++ iter ; current CaMeL Point = current CaMeL Point . trim ( ;
rank: 532
score: 98.82767159598214
patch: return new Array CaMeL Real CaMeL Vector ( current CaMeL Point ) ;
rank: 532
score: 98.65388627485795
patch: ++ iter ; int iter ; while ++ iter ;
rank: 532
score: 98.6364013671875
patch: while ( iter < n CaMeL C ) {
rank: 532
score: 98.62544468470982
patch: if ( ! iter . is CaMeL Empty ++ ) . max ;
rank: 533
score: 99.02759728064903
patch: for ( double current CaMeL Point : current CaMeL Point ) {
rank: 533
score: 98.86149766710069
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ;
rank: 533
score: 98.82764733355978
patch: tmp = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Row CaMeL Vector ( ) ;
rank: 533
score: 98.65379503038194
patch: ++ iter ; ++ * + iter ;
rank: 533
score: 98.62544250488281
patch: else { ++ * 1 ; }
rank: 533
score: 98.37270682198661
patch: iter ++ ; ++ ; else
rank: 534
score: 99.02734375
patch: if ( current CaMeL Point . length >= n CaMeL R ) {
rank: 534
score: 98.99385151110198
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; int n CaMeL C = current ;
rank: 534
score: 98.91752115885417
patch: return weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 534
score: 98.86688232421875
patch: b = current CaMeL Point . length ; ++ iter ;
rank: 534
score: 98.86135864257812
patch: ++ iter ; current CaMeL Point [ n CaMeL C ;
rank: 534
score: 98.82762044270834
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current = current ;
rank: 534
score: 98.63566450639205
patch: assert current CaMeL Point [ 0 ] >= 0 ;
rank: 534
score: 98.36855643136161
patch: ++ 1 ; ++ 0 ;
rank: 535
score: 98.99365844726563
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , $NUMBER$ ) ;
rank: 535
score: 98.86614227294922
patch: / / if ( ! converged ;
rank: 535
score: 98.86133490668402
patch: ++ iter - 1 ; ++ iter ;
rank: 535
score: 98.8276008157169
patch: found = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 535
score: 98.65254720052083
patch: ++ iter ; if ++ - iter ;
rank: 535
score: 98.63556463068181
patch: try { iter = iter . iter ( ) ;
rank: 535
score: 98.62526041666666
patch: if ( ! iter . is CaMeL Empty ( ) ; return this ;
rank: 535
score: 98.36710030691964
patch: throw iter ; ++ iter ;
rank: 536
score: 99.02729348575367
patch: for ( Point CaMeL Vector CaMeL Value CaMeL Pair current : current CaMeL Point ) {
rank: 536
score: 98.91600623497597
patch: final int iter = n CaMeL C - n CaMeL C ;
rank: 536
score: 98.8635762532552
patch: int iter = new int [ n CaMeL C ] ;
rank: 536
score: 98.8611701516544
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 536
score: 98.826904296875
patch: y = current CaMeL Point . double CaMeL Value ( ) ;
rank: 536
score: 98.65242919921874
patch: / * / ++ iter ; ++ iter ;
rank: 536
score: 98.63548448350694
patch: ++ iter ; if ( false ) {
rank: 536
score: 98.62516566685268
patch: if ( ! iter . is CaMeL Empty ++ && ) . ;
rank: 536
score: 98.36611502511161
patch: ++ iter ; iter ; iter
rank: 537
score: 98.99336170014881
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry ( iter ) ;
rank: 537
score: 98.86049290707237
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ; ;
rank: 537
score: 98.82686183763587
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 537
score: 98.63444688585069
patch: ++ iter + 1 ; ++ iter ;
rank: 537
score: 98.6251553622159
patch: if ( iter == 0 ) return iter ; }
rank: 537
score: 98.36410086495536
patch: ++ iter ; ; iter }
rank: 538
score: 98.91456095377605
patch: int n CaMeL C = n CaMeL R - 0 ;
rank: 538
score: 98.82681884765626
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( current CaMeL Point , 0 ) ;
rank: 538
score: 98.65152994791667
patch: ++ iter ; while iter ; 0 ;
rank: 538
score: 98.6343994140625
patch: current CaMeL Point [ iter ++ ] = 0 ;
rank: 538
score: 98.62497780539773
patch: else { if ++ iter [ 0 ] ; }
rank: 538
score: 98.36380440848214
patch: iter ; ++ iter ; }
rank: 539
score: 98.993115234375
patch: residuals CaMeL Weights [ n CaMeL R ] = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 539
score: 98.91158040364583
patch: final int n CaMeL C = n CaMeL C 1 ;
rank: 539
score: 98.86024385340073
patch: int iter = current CaMeL Point . length - current CaMeL Point . length - ;
rank: 539
score: 98.82668138586956
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ;
rank: 539
score: 98.65132279829545
patch: ++ iter ; ++ 1 ; ++ - iter ;
rank: 539
score: 98.624755859375
patch: if ( ! iter . is CaMeL Empty ( ) ; * }
rank: 539
score: 98.36345563616071
patch: ++ ; ++ iter ; ;
rank: 540
score: 99.02576793323864
patch: current = current . get CaMeL Row ( ) ;
rank: 540
score: 98.99266468394886
patch: Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 540
score: 98.90987548828124
patch: Object current CaMeL Point = current CaMeL Point ;
rank: 540
score: 98.86017166940789
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ) ;
rank: 540
score: 98.82646741365132
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( current CaMeL Point ) ; }
rank: 540
score: 98.65128580729167
patch: ++ iter ; break ; if iter ;
rank: 540
score: 98.63388893821023
patch: try { current = iter . iter ( ) ;
rank: 540
score: 98.62470245361328
patch: if ( . is CaMeL Empty ;
rank: 540
score: 98.36307198660714
patch: ++ $NUMBER$ ; ++ start ;
rank: 541
score: 98.85960477941177
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ; }
rank: 541
score: 98.82644653320312
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > ;
rank: 541
score: 98.65087890625
patch: ++ iter ; int iter * / /
rank: 541
score: 98.63250732421875
patch: r = current CaMeL Point . length ;
rank: 541
score: 98.62450561523437
patch: else { return iter ; } return iter ;
rank: 541
score: 98.36275809151786
patch: iter ; iter if ++ ;
rank: 542
score: 99.02373046875
patch: for ( boolean n CaMeL R : current CaMeL Point . length ) {
rank: 542
score: 98.99233863467262
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = ( Point CaMeL Vector CaMeL Value CaMeL Pair ) 1 ;
rank: 542
score: 98.90842692057292
patch: int current CaMeL Point = n CaMeL R + 0 ;
rank: 542
score: 98.85944010416667
patch: ++ n CaMeL C ; if ( current CaMeL Point . length > ;
rank: 542
score: 98.82642711292614
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL Row ( ) ) ;
rank: 542
score: 98.65083821614583
patch: else ++ iter ; ; ++ iter ;
rank: 542
score: 98.62447415865384
patch: if ( ! iter . equals ++ && iter . equals ;
rank: 542
score: 98.36032540457589
patch: iter ; ++ iter ; else
rank: 543
score: 99.02371419270834
patch: current = current CaMeL Point ; current = current CaMeL Point . length ;
rank: 543
score: 98.99231538318452
patch: ++ current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 543
score: 98.8593505859375
patch: ++ n CaMeL C ; ++ n CaMeL C ; ++ iter * /
rank: 543
score: 98.82635819284539
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = n CaMeL C ;
rank: 543
score: 98.64998779296874
patch: else ++ iter ; ++ iter ; iter ;
rank: 543
score: 98.63075949928977
patch: current CaMeL Point [ 0 ] = ++ iter ;
rank: 543
score: 98.62383478338069
patch: if ( iter == 0 ) return null ; }
rank: 543
score: 98.35710797991071
patch: ++ iter ; ++ new ;
rank: 544
score: 99.0231182391827
patch: current = weight CaMeL Matrix . get CaMeL Entry ( ) ;
rank: 544
score: 98.90579223632812
patch: final int current CaMeL Point = n CaMeL R ] ;
rank: 544
score: 98.85927734375
patch: ++ n CaMeL C ; iter = current CaMeL Point . length ( ;
rank: 544
score: 98.85786946614583
patch: boolean converged = current CaMeL Point . length > 0 ;
rank: 544
score: 98.82630830652573
patch: ( ( Decomposition CaMeL Solver < Point CaMeL Vector CaMeL Value CaMeL Pair > ) {
rank: 544
score: 98.62987060546875
patch: if ( current CaMeL Point [ 0 ] ;
rank: 544
score: 98.62368774414062
patch: else { ++ * * ; }
rank: 544
score: 98.35675920758929
patch: ++ iter ; ; ; ;
rank: 545
score: 98.9046630859375
patch: final double [ ] current : current CaMeL Point . length ;
rank: 545
score: 98.85624186197917
patch: int iter = - n CaMeL C ;
rank: 545
score: 98.82618297230114
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current = 0 ;
rank: 545
score: 98.64858176491477
patch: ++ iter ; ++ iter ; System . out ;
rank: 545
score: 98.62960815429688
patch: current CaMeL Point [ 0 ] = 1 ;
rank: 545
score: 98.62362234933036
patch: if ( ! iter . is CaMeL Empty ( ) ; throw ;
rank: 545
score: 98.356689453125
patch: ++ 0 ; ++ max ;
rank: 546
score: 99.02208036534927
patch: Real CaMeL Matrix weight CaMeL Matrix = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 546
score: 98.99176580255681
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point
rank: 546
score: 98.85904693603516
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ( current ;
rank: 546
score: 98.85618591308594
patch: ++ iter ; { ++ iter ;
rank: 546
score: 98.82578822544643
patch: ret = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 546
score: 98.64845969460227
patch: ++ iter ; try { iter ; ++ iter ;
rank: 546
score: 98.62844509548611
patch: c = iter . iter ( ) ;
rank: 546
score: 98.62330845424107
patch: ++ [ 0 ] ; }
rank: 546
score: 98.35560825892857
patch: ++ iter ; ++ continue ;
rank: 547
score: 98.90329811789773
patch: final double iter = residuals CaMeL Weights . length ;
rank: 547
score: 98.85903751148896
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ) ;
rank: 547
score: 98.85430297851562
patch: current CaMeL Point [ iter ] = null ;
rank: 547
score: 98.82575334821429
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 547
score: 98.64818657769098
patch: ++ iter ; int iter { iter ;
rank: 547
score: 98.62312825520833
patch: if ( ! iter . is CaMeL Empty ; ++ 0 . 0 ;
rank: 547
score: 98.3510233561198
patch: long iter = iter ;
rank: 548
score: 99.02093975360577
patch: current = weight CaMeL Matrix . get CaMeL Value ( ) ;
rank: 548
score: 98.99063449435764
patch: residuals CaMeL Weights [ 0 ] = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 548
score: 98.90216619318181
patch: int n CaMeL C = n CaMeL R ] ;
rank: 548
score: 98.85887908935547
patch: ++ iter ; / * * ;
rank: 548
score: 98.85377502441406
patch: ++ iter ; / / * /
rank: 548
score: 98.82523970170455
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > iter = 0 ;
rank: 548
score: 98.64812554253473
patch: ++ iter ; int * - iter ;
rank: 548
score: 98.62789916992188
patch: ++ iter ; ++ iter ) {
rank: 548
score: 98.62291666666667
patch: if ( ! iter . is CaMeL Empty ( ) ; return ; }
rank: 548
score: 98.34961809430804
patch: ++ get ; ++ iter ;
rank: 549
score: 98.99061414930556
patch: final int iter = weight CaMeL Matrix . get CaMeL Row ( current CaMeL Point ) ;
rank: 549
score: 98.90067915482955
patch: int CaMeL Value = current CaMeL Point . length ;
rank: 549
score: 98.85884915865384
patch: ++ iter = current . index CaMeL Of ( iter ) ;
rank: 549
score: 98.85184054904514
patch: / / if ( ! converged ) {
rank: 549
score: 98.82523018973214
patch: prev = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 549
score: 98.6475497159091
patch: ++ iter ; ++ iter ; ++ ++ iter ;
rank: 549
score: 98.62750244140625
patch: ++ iter ? iter : iter ;
rank: 549
score: 98.62276204427083
patch: if ( ! iter . is CaMeL Empty ( ; ) . ; }
rank: 549
score: 98.3492431640625
patch: ++ ++ iter ; ;
rank: 550
score: 99.02076067243304
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) checker ) .
rank: 550
score: 98.98974609375
patch: Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , ) ;
rank: 550
score: 98.89942345252403
patch: int n CaMeL R = target CaMeL Values [ iter ] ;
rank: 550
score: 98.85883246527777
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter . iter ) ;
rank: 550
score: 98.8506571451823
patch: int iter = false ;
rank: 550
score: 98.647216796875
patch: ++ iter ; int value + iter ;
rank: 550
score: 98.626220703125
patch: if ( iter != current CaMeL Point . length )
rank: 550
score: 98.62247140066964
patch: if ( ! iter . is CaMeL Empty ( ) ) iter ;
rank: 550
score: 98.34633963448661
patch: for ++ ; ++ iter ;
rank: 551
score: 99.0199725811298
patch: int current CaMeL Point = current CaMeL Point . length 1 ;
rank: 551
score: 98.9895248413086
patch: if ( current CaMeL Point . length >= current CaMeL Point . length ) {
rank: 551
score: 98.8587158203125
patch: ++ iter ; current CaMeL Point = current CaMeL Point . length ; ;
rank: 551
score: 98.84901936848958
patch: int iter = current CaMeL Point . length ; do {
rank: 551
score: 98.64718017578124
patch: ++ 1 ; ++ iter ; while iter ;
rank: 551
score: 98.62598334418402
patch: try { current CaMeL Point = iter ;
rank: 551
score: 98.62191162109374
patch: ++ * iter ;
rank: 551
score: 98.34427315848214
patch: / ; ++ iter ; else
rank: 552
score: 99.01889272836539
patch: if ( current CaMeL Point . length < n CaMeL C )
rank: 552
score: 98.8990811434659
patch: int ++ iter = residuals CaMeL Weights . length ;
rank: 552
score: 98.85844870174633
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , current ;
rank: 552
score: 98.848876953125
patch: current CaMeL Point [ n CaMeL C ] = null ;
rank: 552
score: 98.82500457763672
patch: n CaMeL C = current CaMeL Point . length - n CaMeL C ; }
rank: 552
score: 98.64691840277777
patch: int iter ; else ; int iter ;
rank: 552
score: 98.62598334418402
patch: ++ iter ; while ( false ) {
rank: 552
score: 98.62181854248047
patch: , * * * * / }
rank: 552
score: 98.34351457868304
patch: ++ 0 ; ++ $STRING$ ;
rank: 553
score: 98.98926890980114
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair ( (
rank: 553
score: 98.89838201349431
patch: int ++ iter = target CaMeL Values . length ;
rank: 553
score: 98.84766642252605
patch: boolean converged = new double [ n CaMeL C ] ;
rank: 553
score: 98.82489624023438
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; final
rank: 553
score: 98.6461181640625
patch: ++ iter ; ++ iter ; for (
rank: 553
score: 98.6258212002841
patch: try { current CaMeL Point [ iter ] = ;
rank: 553
score: 98.62171282087054
patch: else { if ( ! iter . is CaMeL Empty ++ ) {
rank: 553
score: 98.3434549967448
patch: ++ new ++ ; ;
rank: 554
score: 99.01771763392857
patch: final double current CaMeL Point = current CaMeL Point . length 1 ;
rank: 554
score: 98.8976542154948
patch: Real CaMeL Matrix [ ] current = current CaMeL Point ;
rank: 554
score: 98.85764031661184
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter . get CaMeL Value ;
rank: 554
score: 98.84583129882813
patch: return new double [ n CaMeL R ] ;
rank: 554
score: 98.82486979166667
patch: return new Block CaMeL Real CaMeL Matrix ( current CaMeL Point , n CaMeL C ) ;
rank: 554
score: 98.64603000217014
patch: / * ] iter ; / * /
rank: 554
score: 98.625341796875
patch: if ( iter != this . iter ) {
rank: 554
score: 98.62130398220486
patch: if ( iter < iter ) break ;
rank: 554
score: 98.34305245535714
patch: ++ break ; ++ iter ;
rank: 555
score: 98.8976162997159
patch: final double [ ] current = current . length ;
rank: 555
score: 98.85739135742188
patch: ++ iter ; current = current . iter ;
rank: 555
score: 98.82452392578125
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Entry ( current CaMeL Point ) ;
rank: 555
score: 98.64529758029514
patch: / * ] * / ++ iter ;
rank: 555
score: 98.62523193359375
patch: j = current CaMeL Point [ iter ] ;
rank: 555
score: 98.62123325892857
patch: if ( iter < iter )
rank: 555
score: 98.34298270089286
patch: ++ ++ ++ ++ iter ;
rank: 556
score: 99.01551920572916
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; / * /
rank: 556
score: 98.85731090198864
patch: ++ n CaMeL C ; * / * * /
rank: 556
score: 98.84448920355902
patch: final double weight CaMeL Matrix = 0 ;
rank: 556
score: 98.82442220052083
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point [ iter ] ;
rank: 556
score: 98.64525689019098
patch: int iter * ++ ; ++ iter ;
rank: 556
score: 98.62419976128473
patch: temp = iter . iter ( ) ;
rank: 556
score: 98.62102801983173
patch: final ++ [ ] iter = iter . to CaMeL Array ;
rank: 556
score: 98.34284319196429
patch: ++ iter ; ; ++ ;
rank: 557
score: 99.0154052734375
patch: for ( double weight CaMeL Matrix : current CaMeL Point . length ) {
rank: 557
score: 98.98886108398438
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair - current CaMeL Point ;
rank: 557
score: 98.85723407451923
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 557
score: 98.84349568684895
patch: int iter = current CaMeL Point . length ; else {
rank: 557
score: 98.8242899576823
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 557
score: 98.6448974609375
patch: ++ 1 ; ++ 1 ; ++ iter ;
rank: 557
score: 98.621826171875
patch: while ( iter != null )
rank: 557
score: 98.62094552176339
patch: else { ++ value ; }
rank: 557
score: 98.34207589285714
patch: ++ iter ; ; * ;
rank: 558
score: 98.98875427246094
patch: if ( current CaMeL Point . length <= current CaMeL Point . length ) {
rank: 558
score: 98.85692641314338
patch: ++ n CaMeL C ; ++ n CaMeL C ; ++ n CaMeL C ; ;
rank: 558
score: 98.82411887428977
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . ;
rank: 558
score: 98.64469401041667
patch: ++ iter ; ; * ++ iter ;
rank: 558
score: 98.62181260850694
patch: final int iter = current . length ;
rank: 558
score: 98.6204833984375
patch: if ( . is CaMeL Empty ( ) ) { ;
rank: 558
score: 98.34104919433594
patch: return iter ;
rank: 559
score: 99.01355919471153
patch: int iter = residuals CaMeL Weights [ n CaMeL C ] ;
rank: 559
score: 98.98829287574405
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , false ) ;
rank: 559
score: 98.89502563476563
patch: int n CaMeL R = current CaMeL Point ;
rank: 559
score: 98.85666791130515
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C ; }
rank: 559
score: 98.83857421875
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 559
score: 98.82399583899456
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . to CaMeL Array ( ) ;
rank: 559
score: 98.64438205295139
patch: / * ; ++ iter + iter ;
rank: 559
score: 98.62157093394886
patch: int iter = current CaMeL Point [ iter ] ;
rank: 559
score: 98.62035193810097
patch: if ( iter != null && iter . length > 0 ;
rank: 559
score: 98.3388671875
patch: iter ; ++ ; ;
rank: 560
score: 99.012939453125
patch: final int current CaMeL Point = current CaMeL Point . length 1 ;
rank: 560
score: 98.9879901592548
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 560
score: 98.89420572916667
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = $STRING$ ;
rank: 560
score: 98.85647786458334
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current ) ;
rank: 560
score: 98.82396782769098
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values , current ) ;
rank: 560
score: 98.64434136284723
patch: / ++ ++ iter ; ++ iter ;
rank: 560
score: 98.62034254807692
patch: else { throw new Illegal CaMeL Argument CaMeL Exception iter ; }
rank: 560
score: 98.61994764539931
patch: temp = current CaMeL Point . length ;
rank: 560
score: 98.33855329241071
patch: ++ ( iter ; / /
rank: 561
score: 98.89394124348958
patch: Real CaMeL Matrix [ ] current CaMeL Point = current ;
rank: 561
score: 98.8563232421875
patch: ++ iter ; ; current = current CaMeL Point . length ;
rank: 561
score: 98.83734741210938
patch: double [ ] current CaMeL Point = 0 ;
rank: 561
score: 98.82391967773438
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL
rank: 561
score: 98.64390055338542
patch: / * * ++ ; ++ iter ;
rank: 561
score: 98.62009684244792
patch: else { ++ [ $NUMBER$ ] ; }
rank: 561
score: 98.618505859375
patch: if ( n CaMeL C != 0 ) {
rank: 561
score: 98.33790806361607
patch: ++ ( ++ iter ; else
rank: 562
score: 99.01070963541666
patch: int current CaMeL Point = residuals CaMeL Weights [ n CaMeL C ] ;
rank: 562
score: 98.89261881510417
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 562
score: 98.85551622178819
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ; ;
rank: 562
score: 98.83438449435764
patch: final double current CaMeL Point = current ;
rank: 562
score: 98.82378186677632
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ) ; }
rank: 562
score: 98.64384765625
patch: else { ++ iter ; } ++ iter ;
rank: 562
score: 98.61960671164773
patch: if ( . is CaMeL Empty ( ) ; }
rank: 562
score: 98.61836751302083
patch: iter = iter . clone ( ) ;
rank: 562
score: 98.33775983537946
patch: ++ iter ; ; iter {
rank: 563
score: 98.8917236328125
patch: if ( current CaMeL Point , current CaMeL Point ) {
rank: 563
score: 98.85520426432292
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; ;
rank: 563
score: 98.830859375
patch: int iter = this . n CaMeL C ;
rank: 563
score: 98.82375759548611
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) . for CaMeL
rank: 563
score: 98.64267306857639
patch: ++ iter ; ++ * * * /
rank: 563
score: 98.61845397949219
patch: return new ++ [ $NUMBER$ ] ;
rank: 563
score: 98.3240254720052
patch: ++ iter ; ; /
rank: 564
score: 98.98721078725961
patch: current CaMeL Point [ ] = current CaMeL Point . length ;
rank: 564
score: 98.89136759440105
patch: Point CaMeL Vector CaMeL Value CaMeL Pair start = current ;
rank: 564
score: 98.85511067708333
patch: ++ iter ; current CaMeL Point = current CaMeL Point . length ( ;
rank: 564
score: 98.82870483398438
patch: int length = current CaMeL Point . length ;
rank: 564
score: 98.8236945657169
patch: instanceof Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 ) ;
rank: 564
score: 98.64210340711806
patch: ++ iter ; * / if iter ;
rank: 564
score: 98.61821954900569
patch: ( ( Illegal CaMeL State CaMeL Exception ) iter ;
rank: 564
score: 98.61492365056819
patch: ++ iter ; while ( iter == 0 ) {
rank: 564
score: 98.32115478515625
patch: ++ - 1 ;
rank: 565
score: 98.8898037997159
patch: final double start = current CaMeL Point . length ;
rank: 565
score: 98.85501302083334
patch: ++ n CaMeL C ; iter = current CaMeL Point . length ; }
rank: 565
score: 98.82798461914062
patch: int iter = this . n CaMeL R ;
rank: 565
score: 98.82366388494319
patch: n CaMeL C = current CaMeL Point . length ; n CaMeL C = current CaMeL Point . length ; }
rank: 565
score: 98.64194946289062
patch: ++ iter ; ++ * / int iter ;
rank: 565
score: 98.61814186789773
patch: if ( iter == null ) return iter ; else
rank: 565
score: 98.31513214111328
patch: ++ $STRING$ ;
rank: 566
score: 99.01011149088542
patch: current = weight CaMeL Matrix [ n CaMeL R ] ;
rank: 566
score: 98.98676300048828
patch: int n CaMeL C = current CaMeL Point . length - current CaMeL Point ;
rank: 566
score: 98.85469818115234
patch: ++ n CaMeL C ; System . arraycopy ( ++ n CaMeL C , ;
rank: 566
score: 98.82659912109375
patch: final Real CaMeL Matrix < double [ ] ;
rank: 566
score: 98.64167131696429
patch: ++ * * ++ iter ;
rank: 566
score: 98.61762152777777
patch: else { ++ iter ; * * /
rank: 566
score: 98.61444091796875
patch: p = current CaMeL Point . length ;
rank: 566
score: 98.31211344401042
patch: iter iter if ++ ;
rank: 567
score: 99.00972493489583
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 567
score: 98.98667689732143
patch: final int n CaMeL C = current CaMeL Point . length $NUMBER$ ;
rank: 567
score: 98.8876708984375
patch: double n CaMeL C = n CaMeL C ;
rank: 567
score: 98.85384792751736
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ;
rank: 567
score: 98.82567249644886
patch: residuals CaMeL Weights [ iter ] = current ; }
rank: 567
score: 98.8234130859375
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ;
rank: 567
score: 98.64154730902777
patch: ++ iter ; break ; int iter ;
rank: 567
score: 98.6138583096591
patch: while ( iter < current CaMeL Point . length )
rank: 567
score: 98.30474853515625
patch: } iter ++ ;
rank: 568
score: 99.00939127604167
patch: final String current CaMeL Point = current CaMeL Point . length ( ) ;
rank: 568
score: 98.98667399088542
patch: i = current CaMeL Point [ n CaMeL C ] ;
rank: 568
score: 98.88765092329545
patch: throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 568
score: 98.85378130744485
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 568
score: 98.82334391276042
patch: tmp = compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 568
score: 98.64143880208333
patch: ++ iter ; iter ; - iter ;
rank: 568
score: 98.6173095703125
patch: / * * ++ * * /
rank: 568
score: 98.61358087713069
patch: final int iter = iter - n CaMeL C ;
rank: 568
score: 98.3030029296875
patch: iter ; ++ ;
rank: 569
score: 99.00928751627605
patch: int iter = n CaMeL R : n CaMeL C ;
rank: 569
score: 98.98649516858552
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Name ( ) ;
rank: 569
score: 98.85355870863971
patch: ++ current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ;
rank: 569
score: 98.82330877130681
patch: return do CaMeL Optimize ( current CaMeL Point ) ;
rank: 569
score: 98.64142456054688
patch: ++ iter ; ++ 1 ; ++ value ;
rank: 569
score: 98.6165771484375
patch: if ( iter > iter ) {
rank: 569
score: 98.61333673650569
patch: int current = current CaMeL Point [ 0 ] ;
rank: 569
score: 98.29935709635417
patch: iter ; ++ 0 ;
rank: 570
score: 98.98607288707386
patch: final int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 570
score: 98.88590181790866
patch: double [ ] current CaMeL Point = current CaMeL Point ) ;
rank: 570
score: 98.82261256167763
patch: result = weight CaMeL Matrix . get CaMeL Solver ( ) . to CaMeL Array ( ) ;
rank: 570
score: 98.8190030184659
patch: iter = new double [ n CaMeL C ] ;
rank: 570
score: 98.64132690429688
patch: ++ iter ; try { iter ; * /
rank: 570
score: 98.61599731445312
patch: if ( ++ 0 == iter ;
rank: 570
score: 98.61118774414062
patch: iter = iter . iterator ( ) ; }
rank: 570
score: 98.29707845052083
patch: ++ iter + iter ;
rank: 571
score: 99.00875854492188
patch: try { int iter = current CaMeL Point . length ;
rank: 571
score: 98.98592122395833
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , current CaMeL Point ) ;
rank: 571
score: 98.88538536658653
patch: final double [ ] current CaMeL Point = current CaMeL Point [
rank: 571
score: 98.85328504774306
patch: ++ iter * / * ++ iter ;
rank: 571
score: 98.82247721354166
patch: ret = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 571
score: 98.8175537109375
patch: if ( n CaMeL C > 0 ) {
rank: 571
score: 98.64102511935764
patch: / * * / / ++ iter ;
rank: 571
score: 98.61445617675781
patch: if ( iter instanceof ++ iter ;
rank: 571
score: 98.60993787977431
patch: old = current CaMeL Point . length ;
rank: 571
score: 98.29365539550781
patch: ++ this ;
rank: 572
score: 99.00844319661458
patch: current = new Block CaMeL Real CaMeL Matrix ( ) ;
rank: 572
score: 98.85320685891544
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 572
score: 98.82229132401316
patch: [ ] current CaMeL Point = current CaMeL Point . get CaMeL Row CaMeL Vector ( ) ;
rank: 572
score: 98.81532505580357
patch: final double weight CaMeL Matrix ;
rank: 572
score: 98.6140848795573
patch: if ( . is CaMeL Empty ( ) ) * ;
rank: 572
score: 98.60887451171875
patch: ++ iter ; while ( iter != 0 )
rank: 573
score: 98.88491821289062
patch: int ( n CaMeL C < n CaMeL C ) ;
rank: 573
score: 98.85247802734375
patch: ++ iter ; if ( iter == null ) break ;
rank: 573
score: 98.82169596354167
patch: this = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 573
score: 98.81508091517857
patch: final int iter = 0 ;
rank: 573
score: 98.6405517578125
patch: ++ iter ; iter ; * ++ iter ;
rank: 573
score: 98.61388397216797
patch: else { ++ [ $NUMBER$ ] ;
rank: 573
score: 98.60811767578124
patch: switch ( iter ) { case - 1 :
rank: 573
score: 98.28757934570312
patch: ++ -- iter ;
rank: 574
score: 99.00785319010417
patch: ++ current CaMeL Point [ current CaMeL Point [ current CaMeL Point ] ;
rank: 574
score: 98.88429612379808
patch: final double [ ] list = current CaMeL Point . length ;
rank: 574
score: 98.8214823404948
patch: int n CaMeL C = current CaMeL Point . 0 ;
rank: 574
score: 98.81366577148438
patch: double iter = target CaMeL Values . length ;
rank: 574
score: 98.64044189453125
patch: finally { ++ iter ;
rank: 574
score: 98.61338588169643
patch: else { ++ * ; }
rank: 574
score: 98.60798950195313
patch: ++ current CaMeL Point [ 0 ] ; }
rank: 574
score: 98.27806091308594
patch: ++ max ;
rank: 575
score: 99.00767933238636
patch: ++ current CaMeL Point [ n CaMeL R ] ;
rank: 575
score: 98.9845958891369
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry ( $STRING$ ) ;
rank: 575
score: 98.85227966308594
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ) ;
rank: 575
score: 98.82138893821023
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; ++ iter ;
rank: 575
score: 98.64036729600694
patch: ++ iter ; iter ; Integer iter ;
rank: 575
score: 98.61283111572266
patch: else { ++ * ; * /
rank: 575
score: 98.26621704101562
patch: iter iter ++ ;
rank: 576
score: 98.98452758789062
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ; }
rank: 576
score: 98.85218003216912
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ; }
rank: 576
score: 98.81203002929688
patch: boolean iter = current CaMeL Point . length ;
rank: 576
score: 98.64035373263889
patch: ++ 0 ; int iter + iter ;
rank: 576
score: 98.61279296875
patch: else { iter = iter ; }
rank: 576
score: 98.6062344637784
patch: switch ( n CaMeL C ) { case 1 :
rank: 576
score: 98.25989532470703
patch: ++ true ;
rank: 577
score: 99.00754801432292
patch: int target CaMeL Values = current CaMeL Point . length ;
rank: 577
score: 98.98280093544408
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Type ( ) ;
rank: 577
score: 98.85198653371711
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter ) ;
rank: 577
score: 98.82125854492188
patch: - 1 = current CaMeL Point . length ;
rank: 577
score: 98.61239013671874
patch: if ( iter == null ; return true ;
rank: 577
score: 98.605712890625
patch: current CaMeL Point [ iter ++ ] = true ;
rank: 577
score: 98.2587890625
patch: return iter ; ;
rank: 578
score: 99.00728352864583
patch: for ( boolean weight CaMeL Matrix : current CaMeL Point . length ) {
rank: 578
score: 98.8519756610577
patch: int n CaMeL R = current CaMeL Point . length ( ;
rank: 578
score: 98.8209228515625
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 578
score: 98.81057400173611
patch: int iter = - n CaMeL R ;
rank: 578
score: 98.61237250434027
patch: else { / * ++ * * /
rank: 578
score: 98.6044921875
patch: int iter = current CaMeL Point . length )
rank: 578
score: 98.25473022460938
patch: ++ iter = iter ;
rank: 579
score: 98.85184733072917
patch: ++ iter ; final ;
rank: 579
score: 98.8209228515625
patch: j = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 579
score: 98.63960774739583
patch: int iter + iter ; while iter ;
rank: 579
score: 98.61109008789063
patch: if ( iter < 0 ; iter ++ ;
rank: 579
score: 98.2457046508789
patch: ++ value ;
rank: 580
score: 99.0065673828125
patch: if ( current CaMeL Point . length <= n CaMeL C ] ) {
rank: 580
score: 98.87855113636364
patch: final int start = current CaMeL Point . length ;
rank: 580
score: 98.8510986328125
patch: ++ n CaMeL C ; break ; } ;
rank: 580
score: 98.82083290501645
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current . get CaMeL Point ( ) ;
rank: 580
score: 98.80927191840277
patch: final int iter = n CaMeL R ;
rank: 580
score: 98.63920762803819
patch: ++ iter ; ++ - 1 ; ;
rank: 580
score: 98.61086697048611
patch: / * * * ; ++ iter ;
rank: 580
score: 98.60183715820312
patch: while ( iter >= 0 ) {
rank: 580
score: 98.242919921875
patch: / ; iter ++ ;
rank: 581
score: 98.8509033203125
patch: ++ n CaMeL C ; * / * /
rank: 581
score: 98.8204345703125
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Value ( current CaMeL Point ) ;
rank: 581
score: 98.6390380859375
patch: ++ 0 ; ++ iter ; if ++ iter ;
rank: 581
score: 98.61063385009766
patch: else { ++ * $NUMBER$ ; }
rank: 581
score: 98.6016845703125
patch: ++ iter ; if ;
rank: 581
score: 98.24146728515625
patch: ++ - iter ;
rank: 582
score: 99.00568033854167
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( $STRING$ ) ;
rank: 582
score: 98.98189603365384
patch: current = current CaMeL Point . length - n CaMeL R ;
rank: 582
score: 98.85047743055556
patch: final int iter = current CaMeL Point . length - current CaMeL Point . length ; ;
rank: 582
score: 98.82038225446429
patch: return new Block CaMeL Real CaMeL Matrix ( weight CaMeL Matrix ) ;
rank: 582
score: 98.80708821614583
patch: int converged = false ;
rank: 582
score: 98.63855852399554
patch: value ++ ; ++ iter ;
rank: 582
score: 98.2390645345052
patch: ++ ( ++ 0 ;
rank: 583
score: 99.00499549278847
patch: current = current CaMeL Point . get CaMeL Entry ( ) ;
rank: 583
score: 98.98178100585938
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ,
rank: 583
score: 98.87481689453125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair list = current ;
rank: 583
score: 98.84966681985294
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter . iter ;
rank: 583
score: 98.82030140269886
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) target CaMeL Values . do CaMeL Optimize ( ) ) {
rank: 583
score: 98.63815646701389
patch: i * ++ ; ++ iter ; ;
rank: 583
score: 98.60975230823864
patch: else { this . iter = iter . start ;
rank: 583
score: 98.59940962357955
patch: ++ iter ; while ( iter != 0 ) {
rank: 583
score: 98.2379862467448
patch: Iterator iter = iter ;
rank: 584
score: 98.98173595610119
patch: Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 584
score: 98.87387917258523
patch: final int n CaMeL C += n CaMeL C ;
rank: 584
score: 98.84959411621094
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter ) ; }
rank: 584
score: 98.82021612870066
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . iter ;
rank: 584
score: 98.63798384232955
patch: ++ iter ; ++ iter ; while ++ 1 ;
rank: 584
score: 98.60972086588542
patch: else { throw new Runtime CaMeL Exception ;
rank: 584
score: 98.59874877929687
patch: if ( iter == this . ++ iter )
rank: 584
score: 98.23164876302083
patch: ++ < ++ iter ;
rank: 585
score: 98.9814453125
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current CaMeL Point . get CaMeL Value ( current ) ;
rank: 585
score: 98.87298583984375
patch: if ( ! current CaMeL Point . length ( ) ;
rank: 585
score: 98.84950256347656
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter ) ;
rank: 585
score: 98.82020399305556
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) . double CaMeL
rank: 585
score: 98.8018798828125
patch: final double [ ] current CaMeL Point =
rank: 585
score: 98.63714599609375
patch: ++ iter ; ; * / ++ iter ;
rank: 585
score: 98.60948181152344
patch: / * = iter * 0 ;
rank: 585
score: 98.22953796386719
patch: ++ null ;
rank: 586
score: 99.00382486979167
patch: int < Point CaMeL Vector CaMeL Value CaMeL Pair > current = current ;
rank: 586
score: 98.98143592247597
patch: current = current CaMeL Point [ current CaMeL Point . length ;
rank: 586
score: 98.8728759765625
patch: if ( ! converged ) { ++ iter ;
rank: 586
score: 98.84920247395833
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , iter ;
rank: 586
score: 98.82013811383929
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , current CaMeL Point ) ;
rank: 586
score: 98.80144708806819
patch: boolean converged = false ; boolean converged = false ;
rank: 586
score: 98.63713243272569
patch: int iter ; try ; int iter ;
rank: 586
score: 98.6090087890625
patch: else { ++ $NUMBER$ * iter ;
rank: 586
score: 98.59759521484375
patch: cur = current CaMeL Point . length ;
rank: 586
score: 98.2291971842448
patch: ++ ( ++ 1 ;
rank: 587
score: 98.8726473721591
patch: throw new Null CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 587
score: 98.84908254523026
patch: ++ iter ; current CaMeL Point = current CaMeL Point . get CaMeL Point ( iter ) ;
rank: 587
score: 98.81952776227679
patch: if ( current CaMeL Point . length < n CaMeL C ; )
rank: 587
score: 98.8009521484375
patch: int start = current CaMeL Point . length ;
rank: 587
score: 98.63695610894098
patch: ++ iter ; iter ; / iter ;
rank: 587
score: 98.60840606689453
patch: / * * * * / }
rank: 587
score: 98.22882080078125
patch: ++ iter ; iter }
rank: 588
score: 98.9809506064967
patch: Convergence CaMeL Checker < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current CaMeL Point ;
rank: 588
score: 98.87178344726563
patch: double [ ] current CaMeL Point = false ;
rank: 588
score: 98.84905395507812
patch: ++ iter ; if ( iter < iter )
rank: 588
score: 98.819482421875
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair } ;
rank: 588
score: 98.80040394176136
patch: converged = new double [ n CaMeL C ] ;
rank: 588
score: 98.63627794053819
patch: ++ 1 ; ++ iter ; * /
rank: 588
score: 98.5958584872159
patch: if ( current CaMeL Point . length != iter )
rank: 588
score: 98.22798665364583
patch: if iter * ; /
rank: 589
score: 98.87111206054688
patch: double [ ] current CaMeL Point = true ;
rank: 589
score: 98.84858534071181
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ) ;
rank: 589
score: 98.8190673828125
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ,
rank: 589
score: 98.63611518012152
patch: ++ iter ; int - - iter ;
rank: 589
score: 98.6076904296875
patch: if ( iter == null ; / * /
rank: 589
score: 98.595556640625
patch: if ( iter != current CaMeL Point ) {
rank: 589
score: 98.22682698567708
patch: break ; ++ iter ;
rank: 590
score: 98.99986979166667
patch: for ( boolean current CaMeL Point : current CaMeL Point . length ) {
rank: 590
score: 98.98082778033088
patch: final double [ ] current = current CaMeL Point . get CaMeL Point ( ) ;
rank: 590
score: 98.84830729166667
patch: synchronized ( this ) { ++ iter ;
rank: 590
score: 98.8188244047619
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = current CaMeL Point . 0 ;
rank: 590
score: 98.79868386008523
patch: final int [ ] current CaMeL Point = null ;
rank: 590
score: 98.63597276475694
patch: ++ iter ; iter * * ++ ;
rank: 590
score: 98.60761854383681
patch: else { / * * * / }
rank: 590
score: 98.59552612304688
patch: int n CaMeL R = iter - 1 ;
rank: 590
score: 98.22539672851562
patch: ++ 0 ; ;
rank: 591
score: 98.99965006510416
patch: int current CaMeL Point = residuals CaMeL Weights [ n CaMeL R ] ;
rank: 591
score: 98.980712890625
patch: final int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 591
score: 98.84828694661458
patch: ++ iter ; int iter = current CaMeL Point . ;
rank: 591
score: 98.81871948242187
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ( int
rank: 591
score: 98.79828435724431
patch: int current CaMeL Point = n CaMeL R ] ;
rank: 591
score: 98.63579644097223
patch: } ++ iter ; ++ iter ; ;
rank: 591
score: 98.60746256510417
patch: return new ++ [ 1 ] ; }
rank: 591
score: 98.59257676866319
patch: ++ iter ; synchronized ( this ) {
rank: 591
score: 98.2239278157552
patch: ++ } ++ iter ;
rank: 592
score: 98.9990234375
patch: current = current . current CaMeL Point ( ) ;
rank: 592
score: 98.98069763183594
patch: final int current CaMeL Point = current CaMeL Point [ n CaMeL R ] ;
rank: 592
score: 98.84772805606617
patch: int n CaMeL R = current CaMeL Point . length - current CaMeL Point . ;
rank: 592
score: 98.81870814732143
patch: p = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 592
score: 98.63527221679688
patch: logger . arraycopy ( iter , iter ) ;
rank: 592
score: 98.60746256510417
patch: else { if ++ * iter ; }
rank: 592
score: 98.59135437011719
patch: if ( iter == - 1 )
rank: 592
score: 98.22183227539062
patch: iter ;
rank: 593
score: 98.99856770833334
patch: if ( ! current CaMeL Point . length < n CaMeL C ) {
rank: 593
score: 98.8691162109375
patch: double [ ] current CaMeL Point = $STRING$ ;
rank: 593
score: 98.84750600961539
patch: ++ iter ; current CaMeL Point [ iter ] . ++ ;
rank: 593
score: 98.81855325137867
patch: node = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 593
score: 98.79724731445313
patch: if ( n CaMeL C <= 0 ) {
rank: 593
score: 98.6352206143466
patch: ++ iter ; ++ 1 ; if ++ iter ;
rank: 593
score: 98.60739571707589
patch: if ( ! ++ iter ;
rank: 593
score: 98.59114583333333
patch: root = get CaMeL Parent ( ) ;
rank: 593
score: 98.22069295247395
patch: } ++ ++ iter ;
rank: 594
score: 98.98020833333334
patch: double n CaMeL C = current CaMeL Point [ n CaMeL R ] ;
rank: 594
score: 98.84683048023896
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , ;
rank: 594
score: 98.81833718039773
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point
rank: 594
score: 98.7947998046875
patch: int iter = n CaMeL C ; ++ iter ;
rank: 594
score: 98.6350830078125
patch: / * * * * / ++ iter ;
rank: 594
score: 98.60680474175348
patch: else { / * * * * /
rank: 594
score: 98.59068603515625
patch: int iter = iter . iterator ( ) ;
rank: 594
score: 98.2162353515625
patch: ++ ( iter ;
rank: 595
score: 98.99820963541667
patch: int current CaMeL Point = current CaMeL Point ; ++ current CaMeL Point ;
rank: 595
score: 98.84623209635417
patch: ++ iter = current . index CaMeL Of ( iter ;
rank: 595
score: 98.7941650390625
patch: if ( n CaMeL C >= 0 ) {
rank: 595
score: 98.6349589029948
patch: else ++ iter ; ;
rank: 595
score: 98.606689453125
patch: if ( iter == null ; ++ iter ) {
rank: 595
score: 98.58528442382813
patch: try { Thread . sleep ( $NUMBER$ ) ;
rank: 595
score: 98.21556599934895
patch: ++ ; ++ 0 ;
rank: 596
score: 98.99805501302083
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( 0 ) ;
rank: 596
score: 98.84610748291016
patch: ++ iter ] = ++ iter ;
rank: 596
score: 98.81749877929687
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > ;
rank: 596
score: 98.7904281616211
patch: / / if ( converged ) {
rank: 596
score: 98.63470458984375
patch: / * ] ++ ; ++ iter ;
rank: 596
score: 98.60601043701172
patch: / * ; * * * /
rank: 596
score: 98.5818603515625
patch: current CaMeL Point [ iter ++ ] = ;
rank: 596
score: 98.21455891927083
patch: ++ iter ; ; }
rank: 597
score: 98.99796549479167
patch: for ( double n CaMeL R : current CaMeL Point . length ) {
rank: 597
score: 98.97990278764205
patch: current = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 597
score: 98.86005401611328
patch: double [ ] current = current ;
rank: 597
score: 98.84607651654412
patch: current CaMeL Point [ n CaMeL C ] = current CaMeL Point . length ; ;
rank: 597
score: 98.81746419270833
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > -- ;
rank: 597
score: 98.63467407226562
patch: ++ 0 ; ++ 1 ; ++ iter ;
rank: 597
score: 98.6059903231534
patch: else { iter = iter . iter ; * /
rank: 597
score: 98.58152940538194
patch: ++ iter ; ++ iter - 1 ;
rank: 597
score: 98.2139404296875
patch: iter ++ ; ;
rank: 598
score: 98.99769083658855
patch: int iter = n CaMeL C : n CaMeL C ;
rank: 598
score: 98.84569594439338
patch: ++ iter ; current CaMeL Point = current . index CaMeL Of ( $STRING$ ) ;
rank: 598
score: 98.81729789402173
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . to CaMeL Array ( ) ;
rank: 598
score: 98.78965759277344
patch: double [ ] current = null ;
rank: 598
score: 98.6345547762784
patch: ++ iter ; ++ iter ; int * ++ ;
rank: 598
score: 98.60541534423828
patch: if ( iter == 0 ; {
rank: 598
score: 98.58026801215277
patch: ++ iter - iter ; ++ iter ;
rank: 598
score: 98.21363321940105
patch: if ++ ++ iter ;
rank: 599
score: 98.9797595796131
patch: ++ current CaMeL Point [ n CaMeL C ] = current CaMeL Point . get CaMeL Value ( ) ;
rank: 599
score: 98.8598299893466
patch: int n CaMeL C = n CaMeL C ] ;
rank: 599
score: 98.84474092371323
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R ; }
rank: 599
score: 98.78746880425348
patch: final double weight CaMeL Matrix = false ;
rank: 599
score: 98.63407389322917
patch: ++ iter ; int * int iter ;
rank: 599
score: 98.60508728027344
patch: try { ++ iter ; * /
rank: 599
score: 98.21305338541667
patch: ++ iter ; iter /
rank: 600
score: 98.99517822265625
patch: int iter = n CaMeL R : n CaMeL R ;
rank: 600
score: 98.97968084161931
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( 0 ) ;
rank: 600
score: 98.85624186197917
patch: int ++ iter = n CaMeL C ;
rank: 600
score: 98.81693761488971
patch: curr = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 600
score: 98.78360324435764
patch: ++ iter ; boolean converged = false ;
rank: 600
score: 98.60494995117188
patch: / * * * ++ ; /
rank: 600
score: 98.57917616102431
patch: final int n CaMeL R = iter ;
rank: 600
score: 98.21134033203126
patch: { ++ iter ;
rank: 601
score: 98.99409993489583
patch: int iter = current CaMeL Point . length . length ;
rank: 601
score: 98.97955932617188
patch: current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Type ( ) ;
rank: 601
score: 98.85541449652777
patch: current CaMeL Point = current CaMeL Point ;
rank: 601
score: 98.84403170072116
patch: ++ n CaMeL C ; ++ n CaMeL C ; final ;
rank: 601
score: 98.81659490411931
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . get CaMeL Value ( ) ) ;
rank: 601
score: 98.78346557617188
patch: int $STRING$ = current CaMeL Point . length ;
rank: 601
score: 98.60469818115234
patch: if ( ! iter . contains ;
rank: 601
score: 98.21092732747395
patch: ++ ++ ++ 1 ;
rank: 602
score: 98.9931640625
patch: ++ iter ; int current CaMeL Point = current CaMeL Point ;
rank: 602
score: 98.8547030362216
patch: final int iter = weight CaMeL Matrix . length ;
rank: 602
score: 98.84389241536458
patch: ++ current CaMeL Point [ n CaMeL C ] = current CaMeL Point [ iter ] ;
rank: 602
score: 98.8164699388587
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair >> iter = 0 ;
rank: 602
score: 98.63294135199652
patch: ++ ++ iter ; if ++ iter ;
rank: 602
score: 98.60468885633681
patch: else { if ( iter == 0 )
rank: 602
score: 98.57777913411458
patch: if ( current CaMeL Point == null )
rank: 602
score: 98.20613098144531
patch: iter ; iter
rank: 603
score: 98.99274236505681
patch: ++ target CaMeL Values [ n CaMeL R ] ;
rank: 603
score: 98.97931671142578
patch: final double current CaMeL Point = current CaMeL Point [ n CaMeL C ] ;
rank: 603
score: 98.81644112723214
patch: Iterator n CaMeL C = current CaMeL Point . iter ( ) ;
rank: 603
score: 98.6329012784091
patch: ++ iter ; ++ iter ; this . ++ ;
rank: 603
score: 98.60454767400569
patch: if ( iter == $NUMBER$ ; return iter ; }
rank: 603
score: 98.57630750868056
patch: ++ iter ; while ( iter ) {
rank: 603
score: 98.20359497070312
patch: if iter ++ ;
rank: 604
score: 98.99027506510417
patch: if ( current CaMeL Point . length < 0 ) {
rank: 604
score: 98.97924086626838
patch: final int current CaMeL Point = current CaMeL Point . length - n CaMeL R ;
rank: 604
score: 98.85216175426136
patch: final double [ ] current CaMeL Point = $NUMBER$ ;
rank: 604
score: 98.84373563878677
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R ;
rank: 604
score: 98.8163553873698
patch: n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = null ;
rank: 604
score: 98.63276502821181
patch: ++ iter ; iter * * iter ;
rank: 604
score: 98.6044921875
patch: if ( ++ 0 > 0 ;
rank: 604
score: 98.57275390625
patch: if ( ! is CaMeL Empty ) {
rank: 604
score: 98.19925944010417
patch: return iter ; ; ;
rank: 605
score: 98.98843994140626
patch: current = residuals CaMeL Weights [ iter ] ;
rank: 605
score: 98.9790547688802
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 605
score: 98.84989790482955
patch: final double n CaMeL R = n CaMeL C ;
rank: 605
score: 98.84359036959134
patch: int n CaMeL C = current CaMeL Point . length ( ;
rank: 605
score: 98.81606573807566
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair )
rank: 605
score: 98.77710639105902
patch: int iter = 0 ; ++ iter ;
rank: 605
score: 98.63189019097223
patch: ++ iter ; int iter ; try ;
rank: 605
score: 98.60425415039063
patch: if ( iter ; ++ iter == 0 ;
rank: 605
score: 98.1969502766927
patch: ++ ( iter ; ;
rank: 606
score: 98.987060546875
patch: ++ iter ; current CaMeL Point = n CaMeL C ;
rank: 606
score: 98.843505859375
patch: ++ n CaMeL C ; ++ iter - 1 ;
rank: 606
score: 98.81599695542279
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = null ;
rank: 606
score: 98.775830078125
patch: int [ ] current CaMeL Point = 0 ;
rank: 606
score: 98.63188032670455
patch: ++ iter ; try ; int iter = iter ;
rank: 606
score: 98.57125515407986
patch: ++ iter ; do { ++ iter ;
rank: 606
score: 98.1963602701823
patch: ++ ; = iter ;
rank: 607
score: 98.84665749289773
patch: result = new double [ n CaMeL C ] ;
rank: 607
score: 98.8433837890625
patch: ++ n CaMeL C ; iter = current CaMeL Point ;
rank: 607
score: 98.81563895089286
patch: previous = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 607
score: 98.63152465820312
patch: ++ iter ; ++ - * - iter ;
rank: 607
score: 98.57002258300781
patch: ++ iter ; if ( true )
rank: 607
score: 98.1941426595052
patch: * ; ++ iter ;
rank: 608
score: 98.98578350360577
patch: if ( n CaMeL C < n CaMeL R ] ) {
rank: 608
score: 98.97821655273438
patch: final Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ;
rank: 608
score: 98.84584350585938
patch: String current CaMeL Point = current CaMeL Point ;
rank: 608
score: 98.84315999348958
patch: ++ n CaMeL R ; ++ n CaMeL C ; }
rank: 608
score: 98.81551106770833
patch: n CaMeL C = current CaMeL Point . length ; ++ iter ++ ;
rank: 608
score: 98.63140869140625
patch: ++ 1 ; int iter + iter ;
rank: 608
score: 98.60020862926136
patch: final Object [ ] iter = iter . length ;
rank: 608
score: 98.56873236762152
patch: prev = current CaMeL Point . length ;
rank: 608
score: 98.19369506835938
patch: ++ iter ; iter else
rank: 609
score: 98.9781161221591
patch: b = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current ) ;
rank: 609
score: 98.8454833984375
patch: Real CaMeL Matrix weight CaMeL Matrix = null ;
rank: 609
score: 98.84257238051471
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R ;
rank: 609
score: 98.815185546875
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL
rank: 609
score: 98.77420654296876
patch: if ( current CaMeL Point == 0 ) {
rank: 609
score: 98.63054809570312
patch: else { ++ iter ; if ++ iter ;
rank: 609
score: 98.60017903645833
patch: else { ++ * iter ; } }
rank: 609
score: 98.5666015625
patch: if ( iter == n CaMeL C ) {
rank: 609
score: 98.19027709960938
patch: ++ $NUMBER$ + iter ;
rank: 610
score: 98.84346923828124
patch: double [ ] current = current . length ;
rank: 610
score: 98.8424072265625
patch: ++ iter ; current CaMeL Point = current . get CaMeL Point ( iter ) ;
rank: 610
score: 98.81511773003473
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length ) ;
rank: 610
score: 98.771240234375
patch: int n CaMeL C = 0 ; ++ iter ;
rank: 610
score: 98.63054063585069
patch: ++ * ] iter ; ++ iter ;
rank: 610
score: 98.60012381417411
patch: / * ; * * /
rank: 610
score: 98.56605360243056
patch: ++ iter ; ++ iter ; if ;
rank: 610
score: 98.18826293945312
patch: iter ; ++ ++ ;
rank: 611
score: 98.9835917154948
patch: if ( n CaMeL C <= n CaMeL C ) {
rank: 611
score: 98.97768332741477
patch: b = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , current CaMeL Point . length ) ;
rank: 611
score: 98.84213436351104
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ iter , iter ;
rank: 611
score: 98.81510620117187
patch: n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair -- ;
rank: 611
score: 98.76981201171876
patch: b = current CaMeL Point [ 0 ] ;
rank: 611
score: 98.59933810763889
patch: else { if ++ iter 1 ; }
rank: 611
score: 98.5641860961914
patch: assert current CaMeL Point != null ;
rank: 611
score: 98.18606567382812
patch: } ; ++ iter ;
rank: 612
score: 98.97752549913194
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > current = null ;
rank: 612
score: 98.8420051125919
patch: ++ iter ; current = current CaMeL Point . index CaMeL Of ( iter ) ;
rank: 612
score: 98.81471354166666
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) checker . get CaMeL
rank: 612
score: 98.7687655362216
patch: final double [ ] current CaMeL Point = this ;
rank: 612
score: 98.63047096946023
patch: ++ iter ; ++ iter ; ++ case iter ;
rank: 612
score: 98.5992919921875
patch: if ( iter == null ; break ; else
rank: 612
score: 98.56270141601563
patch: assert current CaMeL Point [ 0 ] == ;
rank: 612
score: 98.18116251627605
patch: ++ ! ++ iter ;
rank: 613
score: 98.97723388671875
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL C , current ) ;
rank: 613
score: 98.84172905815973
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL R , ;
rank: 613
score: 98.81468098958334
patch: state = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ,
rank: 613
score: 98.76835493607955
patch: int n CaMeL C = current CaMeL Point ) ;
rank: 613
score: 98.63032836914063
patch: ++ iter ; try ; ++ iter ; }
rank: 613
score: 98.59838189019098
patch: if ( < 0 ) return null ;
rank: 613
score: 98.56176147460937
patch: ++ iter ; current CaMeL Point [ ] ;
rank: 613
score: 98.17933146158855
patch: ++ iter ; / /
rank: 614
score: 98.98268479567308
patch: ++ Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 614
score: 98.9769287109375
patch: residuals CaMeL Weights [ n CaMeL R ] = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ;
rank: 614
score: 98.83788452148437
patch: final int ++ iter = n CaMeL C ;
rank: 614
score: 98.81445990668402
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ) ;
rank: 614
score: 98.63023792613636
patch: / * ] iter ; * / ++ iter ;
rank: 614
score: 98.59766981336806
patch: return new Object [ ] = iter ;
rank: 614
score: 98.5610860188802
patch: ++ iter ; try {
rank: 614
score: 98.17207845052083
patch: ++ $NUMBER$ * iter ;
rank: 615
score: 98.9822246844952
patch: int iter = residuals CaMeL Weights [ n CaMeL R ] ;
rank: 615
score: 98.97682020399306
patch: final Real CaMeL Matrix < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 615
score: 98.84151204427083
patch: ++ n CaMeL C ; ++ iter = current . ;
rank: 615
score: 98.81441556490384
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) converged ;
rank: 615
score: 98.7654800415039
patch: / / if ( false ) {
rank: 615
score: 98.62992350260417
patch: ++ iter ; if iter - iter ;
rank: 615
score: 98.59716796875
patch: if ( iter > 0 )
rank: 615
score: 98.16379801432292
patch: ++ iter ; ; try
rank: 616
score: 98.97671169704861
patch: final Real CaMeL Matrix weight CaMeL Matrix = new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 616
score: 98.84148700420673
patch: int iter = current . index CaMeL Of ( current ) ;
rank: 616
score: 98.8371337890625
patch: double n CaMeL C = n CaMeL R ;
rank: 616
score: 98.81433823529412
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix ) ;
rank: 616
score: 98.62973854758523
patch: ++ iter ; ++ iter ; ++ 1 ; ;
rank: 616
score: 98.59701877170139
patch: else { if ( iter < 0 )
rank: 616
score: 98.559326171875
patch: if ( current != null ) {
rank: 616
score: 98.1569112141927
patch: ++ new = iter ;
rank: 617
score: 98.97657121930804
patch: double n CaMeL C = current CaMeL Point . length ; / /
rank: 617
score: 98.84120530348558
patch: ++ iter ; current = current . hash CaMeL Code ( ;
rank: 617
score: 98.81414184570312
patch: long current = current CaMeL Point . length ;
rank: 617
score: 98.76094970703124
patch: int iter = n CaMeL C . length ;
rank: 617
score: 98.62926635742187
patch: try { ++ iter ; ++ iter ; }
rank: 617
score: 98.59689670138889
patch: if ( iter == 0 ; * ;
rank: 617
score: 98.55862426757812
patch: int n CaMeL R = iter ;
rank: 618
score: 98.84072536892361
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ; }
rank: 618
score: 98.81409409466912
patch: this = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ) ;
rank: 618
score: 98.62908380681819
patch: ++ 1 ; ++ iter ; ++ iter ; ;
rank: 618
score: 98.55753580729167
patch: pos = current CaMeL Point . length ;
rank: 618
score: 98.154296875
patch: ++ else ++ iter ;
rank: 619
score: 98.97621256510416
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current ; / /
rank: 619
score: 98.84047444661458
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , iter , ;
rank: 619
score: 98.83526611328125
patch: double n CaMeL C = current CaMeL Point ;
rank: 619
score: 98.81409369574652
patch: result = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point , current CaMeL Point ) ;
rank: 619
score: 98.76063121448864
patch: return new double [ n CaMeL C ] ; }
rank: 619
score: 98.62834337022569
patch: ++ iter ; ++ iter ; try {
rank: 619
score: 98.59579467773438
patch: if ( iter == null ; throw null ;
rank: 619
score: 98.55691092354911
patch: if ( iter >= 0 )
rank: 619
score: 98.15102132161458
patch: if iter { ++ ;
rank: 620
score: 98.9776611328125
patch: current = ( double ) current CaMeL Point . length ;
rank: 620
score: 98.97613525390625
patch: residuals CaMeL Weights [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Value ( ) ;
rank: 620
score: 98.84046519886364
patch: ++ iter ; current CaMeL Point = iter . ;
rank: 620
score: 98.83378462357955
patch: final double n CaMeL R = n CaMeL R ;
rank: 620
score: 98.81338102921195
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = 0 ;
rank: 620
score: 98.76033528645833
patch: boolean converged = converged ;
rank: 620
score: 98.62816772460937
patch: ++ iter ; * * / ++ iter ;
rank: 620
score: 98.59573025173611
patch: else { iter += iter ; } }
rank: 620
score: 98.55689697265625
patch: if ( iter == null ) ++ iter ;
rank: 620
score: 98.14820353190105
patch: ++ 0 ; iter ;
rank: 621
score: 98.97605494449013
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . get CaMeL Row ( current ) ;
rank: 621
score: 98.83969455295139
patch: int n CaMeL R = current CaMeL Point . length ; current CaMeL Point = current ;
rank: 621
score: 98.83272298177083
patch: final int current CaMeL Point = current ;
rank: 621
score: 98.81334771050348
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ) ;
rank: 621
score: 98.76026746961806
patch: ++ iter ; / * * * /
rank: 621
score: 98.59560139973958
patch: else { if ( iter == $NUMBER$ ;
rank: 621
score: 98.55559624565973
patch: node = get CaMeL Parent ( ) ;
rank: 621
score: 98.14749145507812
patch: int 1 = iter ;
rank: 622
score: 98.97718224158653
patch: for ( boolean converged : current CaMeL Point . length ) {
rank: 622
score: 98.97604806082589
patch: int current CaMeL Point = new double [ n CaMeL C ] ;
rank: 622
score: 98.83948625837054
patch: ++ iter ; final double ;
rank: 622
score: 98.83087713068181
patch: final double [ ] target CaMeL Values = current ;
rank: 622
score: 98.81332236842105
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair /
rank: 622
score: 98.75995427911931
patch: int current CaMeL Point = 0 ; ++ iter ;
rank: 622
score: 98.62765842013889
patch: ++ - iter ; ++ iter ; ;
rank: 622
score: 98.59555053710938
patch: if ( iter == 0 ; / * ;
rank: 622
score: 98.55215115017361
patch: final int iter = current CaMeL Point ;
rank: 622
score: 98.14157104492188
patch: iter iter = iter ;
rank: 623
score: 98.97604604867789
patch: int Point CaMeL Vector CaMeL Value CaMeL Pair current = null ;
rank: 623
score: 98.97599487304687
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Weighted CaMeL Jacobian ( current CaMeL Point ,
rank: 623
score: 98.83944936899039
patch: ++ current CaMeL Point [ n CaMeL C ] = iter ;
rank: 623
score: 98.75855364118304
patch: boolean converged = ! converged ;
rank: 623
score: 98.62764485677083
patch: ++ iter ; ; / * ; /
rank: 623
score: 98.59499104817708
patch: else { if ++ iter - $NUMBER$ ;
rank: 623
score: 98.13949584960938
patch: / ; ++ 0 ;
rank: 624
score: 98.9751446063702
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = null ; ;
rank: 624
score: 98.83918313419117
patch: iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , ;
rank: 624
score: 98.83002319335938
patch: System . arraycopy ( current CaMeL Point ) ;
rank: 624
score: 98.8128597861842
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current . get CaMeL Row ( ) ;
rank: 624
score: 98.7575454711914
patch: / * if ( ! converged ;
rank: 624
score: 98.6275967684659
patch: ++ iter ; ++ iter ; System . iter ;
rank: 624
score: 98.59461669921875
patch: if ( iter == null ; * * /
rank: 624
score: 98.1354268391927
patch: iter ; ++ ; /
rank: 625
score: 98.97552490234375
patch: b = weight CaMeL Matrix . get CaMeL Entry ( current CaMeL Point , n CaMeL R ) ;
rank: 625
score: 98.97383626302083
patch: residuals CaMeL Weights [ n CaMeL C ] = 0 ;
rank: 625
score: 98.83916877297794
patch: ++ n CaMeL C ; if ( ! iter . is CaMeL Empty ( ) )
rank: 625
score: 98.62704806857639
patch: ++ iter ; try { iter ; *
rank: 625
score: 98.59421608664773
patch: else { iter = iter . value CaMeL Of ;
rank: 625
score: 98.54290093315973
patch: context = get CaMeL Context ( ) ;
rank: 625
score: 98.1322530110677
patch: if iter = 1 ;
rank: 626
score: 98.97529529389881
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , 0 ) ;
rank: 626
score: 98.83843315972223
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( this , current CaMeL Point ) ;
rank: 626
score: 98.82607199928977
patch: final Real CaMeL Matrix current CaMeL Point = null ;
rank: 626
score: 98.81255139802632
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL C = n CaMeL C ;
rank: 626
score: 98.75459120008681
patch: converged = current CaMeL Point . length ;
rank: 626
score: 98.6269287109375
patch: int iter ; ++ iter ; int iter ;
rank: 626
score: 98.59408230251736
patch: / * * * ++ * * /
rank: 626
score: 98.54205322265625
patch: while ( true ) { ++ iter ;
rank: 626
score: 98.1287841796875
patch: if iter ;
rank: 627
score: 98.9734598795573
patch: ++ current CaMeL Point . current CaMeL Point ( ) ;
rank: 627
score: 98.83829991957721
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 627
score: 98.82501220703125
patch: Real CaMeL Matrix current = current ;
rank: 627
score: 98.81244187127976
patch: a = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 627
score: 98.75454711914062
patch: if ( ! ! converged ) {
rank: 627
score: 98.62642415364583
patch: ++ 0 ++ iter ;
rank: 627
score: 98.59398304332386
patch: if ( iter == 0 ) return null ; else
rank: 627
score: 98.541748046875
patch: n CaMeL C = iter + 1 ;
rank: 627
score: 98.1252950032552
patch: } ++ iter ; ;
rank: 628
score: 98.83822970920139
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , n CaMeL C ) ;
rank: 628
score: 98.824560546875
patch: final double [ ] current CaMeL Point ++ ;
rank: 628
score: 98.81233354048295
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . ;
rank: 628
score: 98.75415649414063
patch: final double [ ] current CaMeL Point = (
rank: 628
score: 98.62642415364583
patch: ++ iter ; iter ; int 0 ;
rank: 628
score: 98.59227405894886
patch: try { iter = iter . iter ; * /
rank: 628
score: 98.537841796875
patch: if ( ! ++ iter ) {
rank: 628
score: 98.1227315266927
patch: ++ iter ; } else
rank: 629
score: 98.97395155164931
patch: residuals CaMeL Weights [ 0 ] = weight CaMeL Matrix . get CaMeL Type ( ) ;
rank: 629
score: 98.97274076021634
patch: int n CaMeL C = target CaMeL Values [ 0 ] ;
rank: 629
score: 98.81226870888158
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . max ;
rank: 629
score: 98.62629530164931
patch: ++ iter ; int iter * * /
rank: 629
score: 98.59226481119792
patch: else { if ; * * * /
rank: 629
score: 98.53626251220703
patch: ++ iter ; if ( false )
rank: 629
score: 98.12111409505208
patch: ++ if ++ iter ;
rank: 630
score: 98.97376069568452
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = compute CaMeL Residuals ( current CaMeL Point . length ) ;
rank: 630
score: 98.83791934742646
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , n CaMeL R ;
rank: 630
score: 98.82268415178571
patch: int ++ iter = 0 ;
rank: 630
score: 98.8122326078869
patch: t = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 630
score: 98.62628784179688
patch: ++ iter ; iter ; if ++ 1 ;
rank: 630
score: 98.59219970703126
patch: if ( iter == iter ; return iter ;
rank: 630
score: 98.53619384765625
patch: ++ iter ; if ; ++ iter ;
rank: 630
score: 98.12032063802083
patch: if iter * 0 ;
rank: 631
score: 98.97174541766827
patch: int current CaMeL Point = target CaMeL Values [ iter ] ;
rank: 631
score: 98.83788344439338
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C , iter ;
rank: 631
score: 98.82246537642045
patch: int current CaMeL Point = n CaMeL R 1 ;
rank: 631
score: 98.81220935639881
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair = current ;
rank: 631
score: 98.75240749782986
patch: / * if ( ! converged ) {
rank: 631
score: 98.6261874112216
patch: ++ iter ; ; ++ iter ; ++ iter ;
rank: 631
score: 98.59204779730902
patch: return new int [ ] = iter ;
rank: 631
score: 98.53564453125
patch: iter = iter . read ( ) ;
rank: 631
score: 98.11979166666667
patch: ++ - ++ iter ;
rank: 632
score: 98.9736560639881
patch: current CaMeL Point [ n CaMeL C ] = weight CaMeL Matrix . get CaMeL Entry ( 0 ) ;
rank: 632
score: 98.97107872596153
patch: ++ iter ; Point CaMeL Vector CaMeL Value CaMeL Pair current ;
rank: 632
score: 98.83783318014706
patch: ++ n CaMeL C ; current CaMeL Point [ n CaMeL C ] = ; }
rank: 632
score: 98.8220547762784
patch: final int weight CaMeL Matrix = current CaMeL Point ;
rank: 632
score: 98.8121826171875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , 0 ) ;
rank: 632
score: 98.59138706752232
patch: ++ [ * 0 ] ;
rank: 632
score: 98.5352783203125
patch: ++ iter ; System . out . ;
rank: 632
score: 98.11885375976563
patch: ++ 1 ; ;
rank: 633
score: 98.9698153409091
patch: residuals CaMeL Weights [ current CaMeL Point . length ;
rank: 633
score: 98.83774977463942
patch: current = current CaMeL Point . length ( ) - iter ;
rank: 633
score: 98.82168240017361
patch: final double n CaMeL C = 0 ;
rank: 633
score: 98.81131591796876
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current {
rank: 633
score: 98.74899291992188
patch: if ( checker == false ) {
rank: 633
score: 98.62589721679687
patch: ++ iter ; try { iter = iter ;
rank: 633
score: 98.59101019965277
patch: else { if ( iter > 0 )
rank: 633
score: 98.53512573242188
patch: int iter = iter - iter ;
rank: 633
score: 98.1187235514323
patch: ++ ++ iter ; else
rank: 634
score: 98.9736328125
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 634
score: 98.9691913311298
patch: if ( checker . solve ( current CaMeL Point ) ) {
rank: 634
score: 98.83745659722223
patch: current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ( ; }
rank: 634
score: 98.81077991832386
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair (
rank: 634
score: 98.74862670898438
patch: residuals CaMeL Weights [ iter ] = 0 ;
rank: 634
score: 98.62589518229167
patch: ++ iter ; if iter + 0 ;
rank: 634
score: 98.59053955078124
patch: else { if ( iter ; break ; }
rank: 634
score: 98.53443060980902
patch: final ; ++ iter ; ++ iter ;
rank: 634
score: 98.11545817057292
patch: } iter if ++ ;
rank: 635
score: 98.8369140625
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ;
rank: 635
score: 98.810302734375
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Row ( 0 ) ;
rank: 635
score: 98.58984375
patch: ++ * * iter ;
rank: 635
score: 98.53255462646484
patch: if ( iter >= 1 ) {
rank: 635
score: 98.1147216796875
patch: / iter ++ ;
rank: 636
score: 98.83683268229167
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( this . ++ ) ;
rank: 636
score: 98.8177490234375
patch: / * int iter = n CaMeL C ;
rank: 636
score: 98.81029110863095
patch: node = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 636
score: 98.7445297241211
patch: int n CaMeL C = null ;
rank: 636
score: 98.62547718394886
patch: ++ 0 ; ++ iter ; ++ iter ; ;
rank: 636
score: 98.58871895926339
patch: else { new ++ ; }
rank: 636
score: 98.53158569335938
patch: ++ iter + iter + 1 ;
rank: 636
score: 98.11397552490234
patch: ++ new ;
rank: 637
score: 98.97291148792614
patch: final int iter = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current = current ;
rank: 637
score: 98.96828206380208
patch: int iter = n CaMeL C : n CaMeL R ;
rank: 637
score: 98.83656141493056
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point ;
rank: 637
score: 98.81618430397727
patch: int n CaMeL C = n CaMeL R 1 ;
rank: 637
score: 98.8100353422619
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > current ;
rank: 637
score: 98.62521701388889
patch: / * ] iter ; ++ * /
rank: 637
score: 98.58870442708333
patch: , * * * /
rank: 637
score: 98.53048706054688
patch: if ( iter == 1 ) {
rank: 637
score: 98.11275227864583
patch: ++ -- ++ iter ;
rank: 638
score: 98.83572726779514
patch: ++ iter ; return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current ;
rank: 638
score: 98.80996704101562
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 638
score: 98.74053276909723
patch: if ( converged ) { ++ iter ;
rank: 638
score: 98.62517632378473
patch: catch ++ iter ; ++ iter ; ;
rank: 638
score: 98.58809407552083
patch: try { ++ iter ; } catch ;
rank: 638
score: 98.52395290798611
patch: ++ iter ; ++ iter + 1 ;
rank: 638
score: 98.1124979654948
patch: iter ; ++ ; else
rank: 639
score: 98.9721346768466
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( 1 ) ;
rank: 639
score: 98.96651204427083
patch: int iter = n CaMeL C + n CaMeL C ;
rank: 639
score: 98.81465287642045
patch: int n CaMeL C = n CaMeL C 1 ;
rank: 639
score: 98.80948893229167
patch: result = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ; }
rank: 639
score: 98.73798963758681
patch: final Real CaMeL Matrix weight CaMeL Matrix ;
rank: 639
score: 98.62513316761364
patch: ++ iter ; ++ iter ; if ++ 1 ;
rank: 639
score: 98.58741590711806
patch: return new ++ [ $NUMBER$ ] ; }
rank: 639
score: 98.10418701171875
patch: iter
rank: 640
score: 98.83536529541016
patch: ++ n CaMeL C ; * /
rank: 640
score: 98.80922629616477
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; ++ iter ;
rank: 640
score: 98.7371597290039
patch: if ( ! converged ) { {
rank: 640
score: 98.62511097301136
patch: ++ iter ; ++ iter ; while iter iter ;
rank: 640
score: 98.5872314453125
patch: if ( iter != null ; break ; }
rank: 640
score: 98.10235595703125
patch: } ++ iter ; else
rank: 641
score: 98.97153542258523
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( $NUMBER$ ) ;
rank: 641
score: 98.83517116970486
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) ; ++ iter ;
rank: 641
score: 98.81376953125
patch: current = weight CaMeL Matrix [ iter ] ;
rank: 641
score: 98.80884850543478
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 641
score: 98.73689778645833
patch: ++ iter ; / / * * /
rank: 641
score: 98.62501831054688
patch: ++ iter ; iter * * - iter ;
rank: 641
score: 98.58694458007812
patch: else { if ++ iter ; * * /
rank: 641
score: 98.51276506696429
patch: while ( iter == 0 )
rank: 642
score: 98.96494362571023
patch: current = current . get CaMeL Value ( ) ;
rank: 642
score: 98.83346557617188
patch: long iter = current CaMeL Point . length ( ) ;
rank: 642
score: 98.80883178710937
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) compute CaMeL Residuals ( current CaMeL Point ) ;
rank: 642
score: 98.73626708984375
patch: final Real CaMeL Matrix current = null ;
rank: 642
score: 98.62497287326389
patch: ++ iter ; ++ iter ; iter *
rank: 642
score: 98.58649553571429
patch: if ( iter ; * ;
rank: 642
score: 98.51185607910156
patch: while ( iter != 0 ) {
rank: 642
score: 98.09956868489583
patch: ++ ++ - 1 ;
rank: 643
score: 98.9712246981534
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( false ) ;
rank: 643
score: 98.81100463867188
patch: Real CaMeL Matrix current = current CaMeL Point ;
rank: 643
score: 98.80875244140626
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current ) . double CaMeL Value ( ) ;
rank: 643
score: 98.6249667080966
patch: ++ iter ; ++ iter ; ++ * * ;
rank: 643
score: 98.58499484592014
patch: ++ [ 0 ] ; ++ iter ;
rank: 643
score: 98.51146782769098
patch: final int iter = iter - iter ;
rank: 643
score: 98.09756469726562
patch: int 0 = iter ;
rank: 644
score: 98.9647725423177
patch: int iter = n CaMeL R + n CaMeL C ;
rank: 644
score: 98.83253987630208
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL C , ;
rank: 644
score: 98.80971069335938
patch: final int n CaMeL C = - 1 ;
rank: 644
score: 98.808349609375
patch: cur = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 644
score: 98.73114013671875
patch: final double iter = n CaMeL C ;
rank: 644
score: 98.62494574652777
patch: ++ 1 ; ++ iter ; break ;
rank: 644
score: 98.58498806423611
patch: else { / * ; * * /
rank: 644
score: 98.50937906901042
patch: if ( iter == - 1 ) {
rank: 644
score: 98.09025065104167
patch: ++ iter ; ++ *
rank: 645
score: 98.97068876378677
patch: int n CaMeL C = current CaMeL Point . length ; ++ n CaMeL R ;
rank: 645
score: 98.80833129882812
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values , n CaMeL C ) ;
rank: 645
score: 98.73039899553571
patch: final double [ ] current ;
rank: 645
score: 98.62469482421875
patch: ++ iter ; start ; int iter ;
rank: 645
score: 98.58416069878473
patch: if ( iter != null ) break ;
rank: 645
score: 98.0889892578125
patch: } ++ iter ; }
rank: 646
score: 98.96343439275569
patch: final boolean iter = current CaMeL Point . length ;
rank: 646
score: 98.83179728190105
patch: ++ iter ; current CaMeL Point [ iter ] . ;
rank: 646
score: 98.80824788411458
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) ) ;
rank: 646
score: 98.73036702473958
patch: int iter = null ;
rank: 646
score: 98.62467447916667
patch: ++ $NUMBER$ ++ iter ;
rank: 646
score: 98.58409423828125
patch: if ( iter == null ; * / }
rank: 646
score: 98.50916883680556
patch: ++ iter 1 ; ++ iter $NUMBER$ ;
rank: 646
score: 98.08741251627605
patch: ++ list ; ++ ;
rank: 647
score: 98.96323649088542
patch: current = target CaMeL Values [ n CaMeL C ] ;
rank: 647
score: 98.83072916666667
patch: ++ n CaMeL C ; current = current CaMeL Point ;
rank: 647
score: 98.80823335193452
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL C = current CaMeL Point . 0 ;
rank: 647
score: 98.72991943359375
patch: int n CaMeL R = 0 ;
rank: 647
score: 98.62467447916667
patch: ++ iter ; ++ * * ++ /
rank: 647
score: 98.58339233398438
patch: else { if ++ [ 1 ] ; }
rank: 647
score: 98.50730895996094
patch: while ( iter < iter ) {
rank: 647
score: 98.08457946777344
patch: ++ list ;
rank: 648
score: 98.96243051382211
patch: if ( n CaMeL C < n CaMeL C ] ) {
rank: 648
score: 98.83000352647569
patch: ++ current CaMeL Point [ n CaMeL C ] = current . index CaMeL Of ( ;
rank: 648
score: 98.80797809103261
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ; } else {
rank: 648
score: 98.72981262207031
patch: boolean converged = false ; else {
rank: 648
score: 98.62362060546874
patch: ++ iter ; ++ - iter ; iter ;
rank: 648
score: 98.58301890980114
patch: if ( ! iter . is CaMeL Empty ) {
rank: 648
score: 98.08326212565105
patch: ++ $NUMBER$ = iter ;
rank: 649
score: 98.96210271661931
patch: ++ residuals CaMeL Weights [ n CaMeL C ] ;
rank: 649
score: 98.8296786221591
patch: final Point CaMeL Vector CaMeL Value CaMeL Pair ++ ;
rank: 649
score: 98.80736142113095
patch: data = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 649
score: 98.728662109375
patch: double weight CaMeL Matrix = weight CaMeL Matrix ;
rank: 649
score: 98.62353515625
patch: ++ iter ; else ++ iter ; ++ iter ;
rank: 649
score: 98.58274147727273
patch: if ( iter == null && iter == null ;
rank: 649
score: 98.50672064887152
patch: ++ iter ; while ( iter ; )
rank: 649
score: 98.07963053385417
patch: ++ ++ ++ 0 ;
rank: 650
score: 98.97028551603618
patch: b = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 1 ) ;
rank: 650
score: 98.96170043945312
patch: if ( target CaMeL Values . length > 0 ) {
rank: 650
score: 98.82920328776042
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ; }
rank: 650
score: 98.80733816964286
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . length ;
rank: 650
score: 98.62326388888889
patch: int iter ; int iter = iter ;
rank: 650
score: 98.58266194661458
patch: if ( iter ; iter > 0 ;
rank: 650
score: 98.50616455078125
patch: while ( iter == iter ) {
rank: 650
score: 98.07909138997395
patch: logger ; ++ iter ;
rank: 651
score: 98.96990607766544
patch: final double [ ] current CaMeL Point = current CaMeL Point . length ; / /
rank: 651
score: 98.9584452311198
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = $NUMBER$ ;
rank: 651
score: 98.82880995008681
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point ++ ;
rank: 651
score: 98.80729166666667
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values ) ;
rank: 651
score: 98.72283172607422
patch: int [ ] current = null ;
rank: 651
score: 98.62325710720486
patch: int iter + iter ; if iter ;
rank: 651
score: 98.58196149553571
patch: ++ iter ; break ; }
rank: 651
score: 98.50065782335069
patch: if ( iter == this . iter )
rank: 651
score: 98.07656860351562
patch: / ++ iter ;
rank: 652
score: 98.96990411931819
patch: ak = new double [ n CaMeL C ] ;
rank: 652
score: 98.82876925998264
patch: final double iter = current CaMeL Point . length - current CaMeL Point . length ; ;
rank: 652
score: 98.806884765625
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . get CaMeL
rank: 652
score: 98.722412109375
patch: int iter = n CaMeL R ] ;
rank: 652
score: 98.622900390625
patch: / * ; ++ iter ; int iter ;
rank: 652
score: 98.58129010881696
patch: return new ++ iter ; }
rank: 652
score: 98.49968719482422
patch: int iter = current . length ;
rank: 652
score: 98.07320149739583
patch: ++ ++ * iter ;
rank: 653
score: 98.9698486328125
patch: current = weight CaMeL Matrix . get CaMeL Entry ( n CaMeL R , current CaMeL Point . length ) ;
rank: 653
score: 98.8287582397461
patch: ++ n CaMeL C + iter ;
rank: 653
score: 98.72206624348958
patch: final double [ ] residuals CaMeL Weights ;
rank: 653
score: 98.62261284722223
patch: ++ iter ; ++ * String iter ;
rank: 653
score: 98.5810546875
patch: else { / * * ++ * /
rank: 653
score: 98.49929470486111
patch: if ( iter == this . ++ ;
rank: 653
score: 98.06962076822917
patch: ++ iter ; ; *
rank: 654
score: 98.82770385742188
patch: ++ n CaMeL C ; current = iter ;
rank: 654
score: 98.80622664741848
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL
rank: 654
score: 98.7901278409091
patch: final double [ ] current CaMeL Point = 1 ;
rank: 654
score: 98.72151014539931
patch: final double current CaMeL Point = null ;
rank: 654
score: 98.62230224609375
patch: / * ] ++ iter ; int iter ;
rank: 654
score: 98.58082798549107
patch: return iter ; } else {
rank: 654
score: 98.49749755859375
patch: if ( iter != 0 )
rank: 654
score: 98.064697265625
patch: public ++ iter ;
rank: 655
score: 98.96958229758523
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( this ) ;
rank: 655
score: 98.82657470703126
patch: ++ iter ; if ( iter != null ;
rank: 655
score: 98.80619303385417
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix ) ;
rank: 655
score: 98.71857367621527
patch: previous = current CaMeL Point . length ;
rank: 655
score: 98.62196180555556
patch: ++ iter ; 0 ; int iter ;
rank: 655
score: 98.58033582899306
patch: / * * * * ++ * /
rank: 655
score: 98.49611409505208
patch: final int iter = iter + 1 ;
rank: 655
score: 98.06346638997395
patch: ++ iter ; / ;
rank: 656
score: 98.96933815696023
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = current . new Point CaMeL Vector CaMeL Value CaMeL Pair ( ;
rank: 656
score: 98.95223999023438
patch: if ( 0 < current CaMeL Point . length ) {
rank: 656
score: 98.82607693142361
patch: int iter = current CaMeL Point . length - current CaMeL Point . length - iter ;
rank: 656
score: 98.80584161931819
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current = iter ;
rank: 656
score: 98.78898315429687
patch: final int current CaMeL Point = - 1 ;
rank: 656
score: 98.71727294921875
patch: int iter = current CaMeL Point != null ;
rank: 656
score: 98.62193603515625
patch: ++ iter ; int iter ; while iter ;
rank: 656
score: 98.58002263849431
patch: if ( iter == iter ) return null ; }
rank: 656
score: 98.06020100911458
patch: ++ 1 ; iter ;
rank: 657
score: 98.96873890269886
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , 1 ) ;
rank: 657
score: 98.82561700994319
patch: ++ n CaMeL C ; current = current . ;
rank: 657
score: 98.80569893973214
patch: result = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL R ) ;
rank: 657
score: 98.71497260199652
patch: final double n CaMeL C = null ;
rank: 657
score: 98.62105102539063
patch: ++ iter ; ; else { ++ iter ;
rank: 657
score: 98.58001708984375
patch: else { if ++ [ iter ] ; }
rank: 657
score: 98.49532318115234
patch: ++ iter ; while ( false )
rank: 657
score: 98.06020100911458
patch: if iter * / /
rank: 658
score: 98.96869255514706
patch: final double [ ] current = current CaMeL Point . get CaMeL Row ( ) ;
rank: 658
score: 98.8253173828125
patch: ++ current CaMeL Point [ n CaMeL C ] = current CaMeL Point . length ; }
rank: 658
score: 98.80524553571429
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . get CaMeL Entry ( ) ;
rank: 658
score: 98.78621215820313
patch: double weight CaMeL Matrix = current CaMeL Point ;
rank: 658
score: 98.71463448660714
patch: final int converged = false ;
rank: 658
score: 98.57945905412946
patch: else ; if ++ iter ;
rank: 658
score: 98.49275716145833
patch: ++ iter ; if ( iter ) {
rank: 658
score: 98.06006876627605
patch: continue ; ++ iter ;
rank: 659
score: 98.96855725740132
patch: final double [ ] current CaMeL Point = weight CaMeL Matrix . get CaMeL Solver ( ) ;
rank: 659
score: 98.95132211538461
patch: if ( ! n CaMeL C < n CaMeL C ) {
rank: 659
score: 98.82479519314236
patch: ++ current CaMeL Point [ iter ] = current . index CaMeL Of ( $STRING$ ) ;
rank: 659
score: 98.80479847301136
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , n CaMeL R ) ;
rank: 659
score: 98.78612670898437
patch: residuals CaMeL Weights ( current CaMeL Point ) ;
rank: 659
score: 98.71435546875
patch: if ( false ) {
rank: 659
score: 98.62024603949652
patch: ++ 0 ; ++ iter ; * /
rank: 659
score: 98.57908325195312
patch: if ( iter == iter ; return null ;
rank: 659
score: 98.48946126302083
patch: switch ( iter ) { case 1 :
rank: 659
score: 98.05931599934895
patch: ++ iter ; iter *
rank: 660
score: 98.96818033854167
patch: int n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair * /
rank: 660
score: 98.9507587139423
patch: if ( current CaMeL Point . length < n CaMeL R )
rank: 660
score: 98.82468483664773
patch: ++ iter ; while ( iter < iter ) {
rank: 660
score: 98.80356233016305
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair >> iter = current ;
rank: 660
score: 98.71302795410156
patch: int n CaMeL C = current ;
rank: 660
score: 98.6199951171875
patch: ++ iter ; / * / / /
rank: 660
score: 98.57866876775569
patch: if ( iter == iter . length ; * /
rank: 660
score: 98.4891357421875
patch: if ( iter != current ) {
rank: 660
score: 98.05835978190105
patch: if ; ++ iter ;
rank: 661
score: 98.95040893554688
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = 1 ;
rank: 661
score: 98.82423909505208
patch: ++ iter = new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ; ;
rank: 661
score: 98.80325753348214
patch: obj = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ;
rank: 661
score: 98.78419189453125
patch: Real CaMeL Matrix current CaMeL Point = null ;
rank: 661
score: 98.71024780273437
patch: b = current CaMeL Point . length ; }
rank: 661
score: 98.619921875
patch: / * ++ iter ; / ++ iter ;
rank: 661
score: 98.57814331054688
patch: if ( iter == iter ; ++ iter ;
rank: 661
score: 98.48519897460938
patch: final ; ++ n CaMeL C ;
rank: 662
score: 98.96717122395833
patch: final int current CaMeL Point = current CaMeL Point . length ; / /
rank: 662
score: 98.82421875
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , current CaMeL Point , iter ;
rank: 662
score: 98.80290876116071
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) compute CaMeL Residuals ( current CaMeL Point ) ) ;
rank: 662
score: 98.78416859019886
patch: double iter = current CaMeL Point [ 0 ] ;
rank: 662
score: 98.70892333984375
patch: if ( false ) { ++ iter ;
rank: 662
score: 98.61979457310268
patch: if 0 ; ++ iter ;
rank: 662
score: 98.57786976207386
patch: if ( iter == 0 ; return ++ iter ;
rank: 662
score: 98.48491559709821
patch: ++ n CaMeL C ; }
rank: 662
score: 98.05655924479167
patch: if ++ iter ; ;
rank: 663
score: 98.82368607954545
patch: ++ iter ; if ( iter == - 1 )
rank: 663
score: 98.80167643229167
patch: n CaMeL R = current CaMeL Point . length ; n CaMeL C = current CaMeL Point . length ;
rank: 663
score: 98.7826260653409
patch: final double [ ] target CaMeL Values = null ;
rank: 663
score: 98.70418875558036
patch: if ( ! false ) {
rank: 663
score: 98.61942545572917
patch: ++ iter ; ++ iter ; } *
rank: 663
score: 98.57760620117188
patch: else { ++ 0 ;
rank: 663
score: 98.05421956380208
patch: try ; ++ iter ;
rank: 664
score: 98.96448692908653
patch: final int iter = current * current CaMeL Point . length ;
rank: 664
score: 98.82328287760417
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair = new Point CaMeL Vector CaMeL Value CaMeL Pair
rank: 664
score: 98.80164591471355
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Row ( current CaMeL Point ) ;
rank: 664
score: 98.77958984375
patch: / * int iter = n CaMeL R ;
rank: 664
score: 98.70335693359375
patch: ++ iter ; {
rank: 664
score: 98.61920844184027
patch: ++ iter ; try ; for iter ;
rank: 664
score: 98.57593451605902
patch: if ( iter > 0 ; * /
rank: 664
score: 98.47998046875
patch: while ( true ) {
rank: 665
score: 98.9464823404948
patch: int current CaMeL Point = residuals CaMeL Weights . length ;
rank: 665
score: 98.82319471571181
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( ++ n CaMeL C ) ; }
rank: 665
score: 98.8011474609375
patch: throw new Singular CaMeL Matrix CaMeL Exception ( ) ;
rank: 665
score: 98.77897135416667
patch: int ++ iter = n CaMeL R ;
rank: 665
score: 98.70240478515625
patch: boolean converged = checker . converged ( iter ,
rank: 665
score: 98.57529025607639
patch: if ( iter == null ) throw ;
rank: 665
score: 98.47972106933594
patch: ++ iter ) { ++ iter ;
rank: 665
score: 98.05377197265625
patch: ++ iter ; iter {
rank: 666
score: 98.82245551215277
patch: ++ iter ; current CaMeL Point = current CaMeL Point . get CaMeL Point ( ) ;
rank: 666
score: 98.77864990234374
patch: final int ++ iter = n CaMeL R ;
rank: 666
score: 98.70191786024306
patch: final double weight CaMeL Matrix = $STRING$ ;
rank: 666
score: 98.61792670355902
patch: / * * ++ iter ; / /
rank: 666
score: 98.57517311789773
patch: ++ < 0 > iter = iter . iter ;
rank: 666
score: 98.05333251953125
patch: ++ ! iter ;
rank: 667
score: 98.94513494318181
patch: ++ iter ; ++ current CaMeL Point . length ;
rank: 667
score: 98.82235378689236
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( ) . add ( ;
rank: 667
score: 98.80003720238095
patch: rs = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C ) ;
rank: 667
score: 98.77618408203125
patch: double [ ] current CaMeL Point ;
rank: 667
score: 98.70170762803819
patch: for ( boolean ! converged ; ) {
rank: 667
score: 98.61763916015624
patch: try { ++ iter ; ++ iter ; ;
rank: 667
score: 98.57430013020833
patch: ++ iter ; while ;
rank: 667
score: 98.47618103027344
patch: ++ iter ; synchronized ( this )
rank: 667
score: 98.04943237304687
patch: ; ++ iter ;
rank: 668
score: 98.82225884331598
patch: int n CaMeL C = current CaMeL Point . length ( ) - n CaMeL C ;
rank: 668
score: 98.79989769345238
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . iter ( ) ;
rank: 668
score: 98.77373046875
patch: double n CaMeL R = current CaMeL Point ;
rank: 668
score: 98.70121765136719
patch: final if ( ! converged ) {
rank: 668
score: 98.61758761935764
patch: / * ] iter ; int 1 ;
rank: 668
score: 98.57421875
patch: else { ++ max ; }
rank: 668
score: 98.46903991699219
patch: ++ iter )
rank: 668
score: 98.04671630859374
patch: ++ iter ; try
rank: 669
score: 98.94437662760417
patch: if ( n CaMeL C <= n CaMeL R ) {
rank: 669
score: 98.82129584418402
patch: ++ iter ; current CaMeL Point = current CaMeL Point . index CaMeL Of ( ; }
rank: 669
score: 98.79835001627605
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R ) ;
rank: 669
score: 98.61758083767361
patch: int iter ++ ; if ++ iter ;
rank: 669
score: 98.46666124131944
patch: if ( iter >= n CaMeL C )
rank: 670
score: 98.9437967936198
patch: current CaMeL Point [ n CaMeL C ] = $STRING$ ;
rank: 670
score: 98.82126871744792
patch: new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , ++ n CaMeL C ) ;
rank: 670
score: 98.79832922894022
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair < double [ ] >
rank: 670
score: 98.77003987630208
patch: final int n CaMeL C = 1 ;
rank: 670
score: 98.69810655381944
patch: int converged = false ; ++ iter ;
rank: 670
score: 98.61716715494792
patch: ++ iter ; ++ iter ; int *
rank: 670
score: 98.57090454101562
patch: else { if iter * 0 . 0 /
rank: 670
score: 98.46655951605902
patch: switch ( iter ) { ++ iter ;
rank: 670
score: 98.03263092041016
patch: ++ super ;
rank: 671
score: 98.82093811035156
patch: ++ iter ; this . ++ ;
rank: 671
score: 98.7982761548913
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = false ;
rank: 671
score: 98.76923963758681
patch: final int n CaMeL C = current ;
rank: 671
score: 98.69808959960938
patch: if ( converged && false ) {
rank: 671
score: 98.61708984375
patch: ++ * / ++ iter ; ++ iter ;
rank: 671
score: 98.57068481445313
patch: else { if ( iter > 0 ) {
rank: 671
score: 98.0252685546875
patch: ++ current ;
rank: 672
score: 98.82033469460227
patch: ++ iter ; int iter = current . length ;
rank: 672
score: 98.79816545758929
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > ) {
rank: 672
score: 98.76624145507813
patch: Point CaMeL Vector CaMeL Value CaMeL Pair -- ;
rank: 672
score: 98.69634331597223
patch: ++ iter ; / / / * /
rank: 672
score: 98.61665852864583
patch: ++ iter ; ++ - * ; /
rank: 672
score: 98.57060411241319
patch: try { iter = iter . iter ;
rank: 672
score: 98.46465386284723
patch: ++ iter ; if ( iter == ;
rank: 672
score: 97.99820556640626
patch: ++ $NUMBER$ ; ;
rank: 673
score: 98.93789672851562
patch: ++ weight CaMeL Matrix . get CaMeL Row ( ) ;
rank: 673
score: 98.82020399305556
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter , ;
rank: 673
score: 98.7979736328125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , iter ) ;
rank: 673
score: 98.7651611328125
patch: int iter = n CaMeL R - 0 ;
rank: 673
score: 98.69565158420139
patch: final int n CaMeL C = null ;
rank: 673
score: 98.61662462022569
patch: / * ++ iter ; * / /
rank: 673
score: 98.5705078125
patch: if ( iter == 0 ) throw null ;
rank: 673
score: 98.46439615885417
patch: if ( iter != - 1 ) {
rank: 673
score: 97.99703979492188
patch: iter else ++ ;
rank: 674
score: 98.93739827473958
patch: int iter = n CaMeL R + n CaMeL R ;
rank: 674
score: 98.82017686631944
patch: ++ n CaMeL C ; iter = ;
rank: 674
score: 98.7979024251302
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , n CaMeL C , current CaMeL Point ) ;
rank: 674
score: 98.763916015625
patch: current CaMeL Point = n CaMeL C ;
rank: 674
score: 98.6954345703125
patch: ++ n CaMeL C ; current = current ;
rank: 674
score: 98.61619737413194
patch: ++ iter ; ++ / * ; /
rank: 674
score: 98.56935424804688
patch: else { ++ iter ; } / * /
rank: 674
score: 97.9964599609375
patch: / ; iter
rank: 675
score: 98.93659002130681
patch: current = weight CaMeL Matrix . get CaMeL Row CaMeL
rank: 675
score: 98.82013549804688
patch: ++ iter ; if ( iter > 0 )
rank: 675
score: 98.7972920735677
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Row ( n CaMeL C ) ;
rank: 675
score: 98.69430541992188
patch: boolean converged = converged = false ;
rank: 675
score: 98.61587185329861
patch: ++ iter ; int iter * out ;
rank: 675
score: 98.56912841796876
patch: if ( iter == null ; return this ;
rank: 675
score: 98.46218872070312
patch: int iter = iter + 1 ;
rank: 675
score: 97.99481201171875
patch: iter iter ;
rank: 676
score: 98.9554912860577
patch: int n CaMeL C = current CaMeL Point . length $NUMBER$ ;
rank: 676
score: 98.9363505045573
patch: int iter = n CaMeL C + n CaMeL R ;
rank: 676
score: 98.7971423921131
patch: return ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point . get CaMeL Point ( ) ;
rank: 676
score: 98.7598876953125
patch: int current CaMeL Point = current ;
rank: 676
score: 98.69363064236111
patch: final double current CaMeL Point = iter ;
rank: 676
score: 98.61516462053571
patch: ++ 0 ; ++ value ;
rank: 676
score: 98.46157400948661
patch: if ( iter >= iter )
rank: 676
score: 97.9886474609375
patch: ++ iter ; ++
rank: 677
score: 98.81795247395833
patch: ++ iter ; current = iter ; ;
rank: 677
score: 98.7967529296875
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , target CaMeL Values ) ;
rank: 677
score: 98.69358825683594
patch: / * if ( converged ) {
rank: 677
score: 98.6141357421875
patch: ++ 1 ; iter ; int iter ;
rank: 677
score: 98.56776258680556
patch: else { iter = iter . start ;
rank: 677
score: 97.96890258789062
patch: ++ length ;
rank: 678
score: 98.81753879123264
patch: final int iter = current CaMeL Point . length - current CaMeL Point . length - ;
rank: 678
score: 98.75665283203125
patch: if ( current CaMeL Point ) {
rank: 678
score: 98.69203694661458
patch: int iter = 1 ;
rank: 678
score: 98.61409505208333
patch: int iter ; / * * / /
rank: 678
score: 98.56770463423295
patch: try { ++ iter ; } catch ++ iter ;
rank: 678
score: 98.46031188964844
patch: while ( iter == 1 ) {
rank: 678
score: 97.96756744384766
patch: ++ false ;
rank: 679
score: 98.93350219726562
patch: if ( n CaMeL R <= n CaMeL C ) {
rank: 679
score: 98.81730143229167
patch: int n CaMeL R = current CaMeL Point . length ; current CaMeL Point = iter ;
rank: 679
score: 98.79639781605114
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > checker = null ;
rank: 679
score: 98.75211181640626
patch: residuals CaMeL Weights [ iter ] = $STRING$ ;
rank: 679
score: 98.69060601128473
patch: final double [ ++ n CaMeL C ;
rank: 679
score: 98.61337280273438
patch: ++ iter ; ++ iter ; - iter ;
rank: 679
score: 98.56718306107955
patch: if ( iter == null ) { break ; }
rank: 679
score: 98.45839436848958
patch: while ( false ) { ++ iter ;
rank: 680
score: 98.81643337673611
patch: current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , iter ;
rank: 680
score: 98.79632568359375
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point ) ;
rank: 680
score: 98.75158013237848
patch: final int n CaMeL R = 0 ;
rank: 680
score: 98.6128662109375
patch: ++ iter ; ++ iter ; synchronized iter ;
rank: 680
score: 98.45753696986607
patch: j = iter + 1 ;
rank: 680
score: 97.960107421875
patch: ++ $STRING$ ; ;
rank: 681
score: 98.9501953125
patch: current = current CaMeL Point . length * current CaMeL Point ;
rank: 681
score: 98.81610107421875
patch: final double iter = current CaMeL Point . length - current CaMeL Point . length - ;
rank: 681
score: 98.7954434481534
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current , current CaMeL Point ) ;
rank: 681
score: 98.75142211914063
patch: if ( weight CaMeL Matrix != null ) {
rank: 681
score: 98.68631320529514
patch: for ( int ++ iter ; ) {
rank: 681
score: 98.61219618055556
patch: iter ++ ; ++ ; int iter ;
rank: 681
score: 98.5660400390625
patch: else { return ++ iter ; } }
rank: 681
score: 98.45332336425781
patch: if ( false ) ++ iter ;
rank: 681
score: 97.95612335205078
patch: int iter ;
rank: 682
score: 98.81576538085938
patch: ++ n CaMeL C ; ++ iter * ;
rank: 682
score: 98.79543728298611
patch: first = current CaMeL Point . length ;
rank: 682
score: 98.68564181857639
patch: final double iter = n CaMeL R ;
rank: 682
score: 98.61104736328124
patch: ++ iter ; ++ iter ; return false ;
rank: 682
score: 98.56541859019886
patch: if ( iter == null ; / / * ;
rank: 682
score: 97.95296478271484
patch: throw iter ;
rank: 683
score: 98.81539577907986
patch: ++ iter ; new Point CaMeL Vector CaMeL Value CaMeL Pair ( iter , iter ) ;
rank: 683
score: 98.79542077105978
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > current CaMeL Point ;
rank: 683
score: 98.74808349609376
patch: System . arraycopy ( weight CaMeL Matrix ) ;
rank: 683
score: 98.61074490017361
patch: ++ iter ; value ; int iter ;
rank: 683
score: 98.56524103338069
patch: } if ( iter == null ; return iter ;
rank: 683
score: 97.95148315429688
patch: ++ ++ 0 ;
rank: 684
score: 98.92621404474431
patch: ++ current CaMeL Point [ current CaMeL Point ] ;
rank: 684
score: 98.81529651988636
patch: ++ n CaMeL C ; iter = current . ;
rank: 684
score: 98.79437934027777
patch: height = current CaMeL Point . length ;
rank: 684
score: 98.74688720703125
patch: final int current CaMeL Point = 1 ;
rank: 684
score: 98.56362575954861
patch: if ( iter < 0 ; * /
rank: 684
score: 98.44986300998264
patch: final int iter = iter + iter ;
rank: 684
score: 97.92574310302734
patch: ++ Math ;
rank: 685
score: 98.81497531467014
patch: ++ iter ; current CaMeL Point = current CaMeL Point . get CaMeL Row ( ) ;
rank: 685
score: 98.79433186848958
patch: rs = current CaMeL Point . length ;
rank: 685
score: 98.74503784179687
patch: double [ ] current CaMeL Point = $NUMBER$ ;
rank: 685
score: 98.68467712402344
patch: double current CaMeL Point = current ;
rank: 685
score: 98.60999891493056
patch: / * ; ++ iter ; * /
rank: 685
score: 98.56355590820313
patch: if ( iter < 0 ) return null ;
rank: 685
score: 98.44938659667969
patch: ++ iter $NUMBER$ n CaMeL C ;
rank: 685
score: 97.9255859375
patch: ++ -- 1 ;
rank: 686
score: 98.81421576605902
patch: r = new Point CaMeL Vector CaMeL Value CaMeL Pair ( n CaMeL R , iter ;
rank: 686
score: 98.79350142045455
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point ) ; break ;
rank: 686
score: 98.74439697265625
patch: int [ ] current = current CaMeL Point ;
rank: 686
score: 98.68345424107143
patch: final double iter = 0 ;
rank: 686
score: 98.60991753472223
patch: ++ iter ; ++ - * / /
rank: 686
score: 98.56353759765625
patch: else { return iter ; } } else {
rank: 686
score: 98.44778878348214
patch: if ( ++ iter ) {
rank: 686
score: 97.92240600585937
patch: throw iter ; ;
rank: 687
score: 98.7934039572011
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Point ( 0 ) ;
rank: 687
score: 98.68211146763393
patch: final int iter = false ;
rank: 687
score: 98.60990397135417
patch: ++ 1 ++ iter ; int iter ;
rank: 687
score: 98.56307644314236
patch: else { ( ++ iter ; * /
rank: 687
score: 97.9222412109375
patch: ++ name ;
rank: 688
score: 98.68026733398438
patch: int n CaMeL C = false ;
rank: 688
score: 98.56255425347223
patch: if ( iter < 0 ) return ;
rank: 688
score: 98.4465560913086
patch: ++ iter ; while ( iter )
rank: 688
score: 97.9163818359375
patch: ++ true ; ;
rank: 689
score: 98.81264241536458
patch: int n CaMeL R = current CaMeL Point . length ( ) - n CaMeL R ;
rank: 689
score: 98.7929050611413
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 689
score: 98.742138671875
patch: double [ ] target CaMeL Values = current ;
rank: 689
score: 98.67893473307292
patch: int iter = false ; ++ iter ;
rank: 689
score: 98.60886928013393
patch: ++ iter ; boolean iter ;
rank: 689
score: 98.56195068359375
patch: / * * * ++ iter * /
rank: 689
score: 98.44654083251953
patch: while ( iter >= iter ) {
rank: 689
score: 97.91438293457031
patch: iter ; ;
rank: 690
score: 98.91609330610795
patch: current = Point CaMeL Vector CaMeL Value CaMeL Pair ;
rank: 690
score: 98.81202281605114
patch: ++ n CaMeL C ; ++ iter + 1 ;
rank: 690
score: 98.79257600203805
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = converged ;
rank: 690
score: 98.6773681640625
patch: boolean converged = false ; {
rank: 690
score: 98.60809326171875
patch: m ++ ; ++ iter ;
rank: 690
score: 98.56174723307292
patch: else { break ; }
rank: 690
score: 98.44641876220703
patch: try { current = ++ iter ;
rank: 690
score: 97.89368693033855
patch: iter iter
rank: 691
score: 98.94027005709134
patch: current CaMeL Point = new double [ n CaMeL C ] ;
rank: 691
score: 98.91357421875
patch: if ( n CaMeL C < n CaMeL C )
rank: 691
score: 98.81160736083984
patch: ++ iter * / * iter ;
rank: 691
score: 98.79234483506944
patch: k = current CaMeL Point . length ;
rank: 691
score: 98.73831939697266
patch: while ( ! converged ; ) {
rank: 691
score: 98.67664252387152
patch: if ( n CaMeL C < 0 )
rank: 691
score: 98.56096733940973
patch: else { / * ++ iter * /
rank: 691
score: 97.89308471679688
patch: / ; iter ;
rank: 692
score: 98.79191450639205
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . to CaMeL Array ( ) ) ;
rank: 692
score: 98.73519134521484
patch: int iter = current CaMeL Point ;
rank: 692
score: 98.67601776123047
patch: / / if ( true ) {
rank: 692
score: 98.5605135830966
patch: if ( iter == iter ) return iter ; }
rank: 692
score: 98.43798828125
patch: changed = true ; ++ iter ;
rank: 692
score: 97.85535278320313
patch: ++ for ++ ;
rank: 693
score: 98.93956580528847
patch: final String [ ] current = current CaMeL Point . length ;
rank: 693
score: 98.79146144701087
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > iter = get CaMeL
rank: 693
score: 98.73010932074652
patch: int current CaMeL Point = - 1 ;
rank: 693
score: 98.67076110839844
patch: for ( boolean converged = ) {
rank: 693
score: 98.60655866350446
patch: ++ iter ; ++ ] ;
rank: 693
score: 98.55962456597223
patch: else { if ++ ++ iter ; }
rank: 693
score: 98.43737030029297
patch: ++ iter ; ++ iter $NUMBER$ ;
rank: 693
score: 97.8543212890625
patch: ++ ( 1 ;
rank: 694
score: 98.93825276692708
patch: ++ current CaMeL Point [ n CaMeL C ] ; }
rank: 694
score: 98.81073608398438
patch: ++ iter ; current = current . ++ )
rank: 694
score: 98.79069380326705
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > iter = null ;
rank: 694
score: 98.72639295789931
patch: final double current CaMeL Point = $STRING$ ;
rank: 694
score: 98.66378021240234
patch: int current CaMeL Point = 1 ;
rank: 694
score: 98.60642787388393
patch: } else { ++ iter ;
rank: 694
score: 98.5590576171875
patch: ++ [ 1 ] ; if ++ iter ;
rank: 694
score: 98.43717956542969
patch: if ; ++ n CaMeL C ;
rank: 694
score: 97.84156494140625
patch: ++ new ; ;
rank: 695
score: 98.81019897460938
patch: ++ iter ; current = iter + 1 ;
rank: 695
score: 98.66298421223958
patch: boolean converged = true ; ++ iter ;
rank: 695
score: 98.60601196289062
patch: ++ 1 ; ++ iter ; if iter ;
rank: 695
score: 98.55879720052083
patch: if ( ! iter != null ) {
rank: 695
score: 98.43695831298828
patch: final int iter = ++ iter ;
rank: 695
score: 97.840869140625
patch: ++ this ; ;
rank: 696
score: 98.9351337139423
patch: final Object [ ] current = current CaMeL Point . length ;
rank: 696
score: 98.9000577059659
patch: current = new double [ n CaMeL R ] ;
rank: 696
score: 98.7904052734375
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , n CaMeL R ) ;
rank: 696
score: 98.60452706473214
patch: * * ++ iter ; /
rank: 696
score: 98.55879720052083
patch: else { return iter ; } else {
rank: 696
score: 98.43342590332031
patch: int iter = iter - 1 ;
rank: 696
score: 97.839208984375
patch: ++ $NUMBER$ iter ;
rank: 697
score: 98.8063232421875
patch: float iter = current CaMeL Point . length ;
rank: 697
score: 98.79020552201705
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) . do CaMeL Optimize ( ) ;
rank: 697
score: 98.66163635253906
patch: if ( checker != null ) {
rank: 697
score: 98.55875244140626
patch: else { ++ iter ; ++ iter ; }
rank: 697
score: 98.4322738647461
patch: ++ iter ; current CaMeL Point ;
rank: 697
score: 97.83860778808594
patch: ++ out ;
rank: 698
score: 98.78993733723958
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , current ) ;
rank: 698
score: 98.65959930419922
patch: final boolean ! converged = false ;
rank: 698
score: 98.60381469726562
patch: ++ iter ; final else { ++ iter ;
rank: 698
score: 98.5586649576823
patch: return new ++ iter ;
rank: 698
score: 98.42681884765625
patch: if ( iter == $STRING$ ) {
rank: 698
score: 97.83349609375
patch: ++ new ; iter
rank: 699
score: 98.93295522836539
patch: final long [ ] current = current CaMeL Point . length ;
rank: 699
score: 98.80253295898437
patch: current CaMeL Point [ iter ] = ; }
rank: 699
score: 98.78990106997283
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point ( ) ;
rank: 699
score: 98.65930853949652
patch: null = current CaMeL Point . length ;
rank: 699
score: 98.60326538085937
patch: ++ iter ; ++ iter ; ++ * ;
rank: 699
score: 98.558349609375
patch: else { if ( iter != null ;
rank: 699
score: 98.4253438313802
patch: ++ iter ; do {
rank: 699
score: 97.8305419921875
patch: iter if ++ ;
rank: 700
score: 98.78987260298295
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( weight CaMeL Matrix . get CaMeL Solver ( ) ) ;
rank: 700
score: 98.70791965060764
patch: final double [ ] target CaMeL Values ;
rank: 700
score: 98.65869818793402
patch: final double weight CaMeL Matrix = iter ;
rank: 700
score: 98.603125
patch: ++ iter ; ; ; if ++ iter ;
rank: 700
score: 98.5574239095052
patch: if ( ! iter ;
rank: 700
score: 97.82863159179688
patch: ++ ++ $NUMBER$ ;
rank: 701
score: 98.80222389914773
patch: final long iter = current CaMeL Point . length ;
rank: 701
score: 98.78961736505681
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair > checker = current ;
rank: 701
score: 98.7042236328125
patch: int n CaMeL C = - 1 ;
rank: 701
score: 98.65825737847223
patch: ak = current CaMeL Point . length ;
rank: 701
score: 98.60288696289062
patch: ++ ++ iter ; ++ iter ; iter ;
rank: 701
score: 98.42513602120536
patch: ++ iter ; ; if ;
rank: 701
score: 97.82723388671874
patch: ++ start ; iter
rank: 702
score: 98.80211181640625
patch: ++ iter ; current CaMeL Point = current ;
rank: 702
score: 98.78922172214673
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point . get CaMeL
rank: 702
score: 98.70235866970486
patch: final int [ ] current CaMeL Point ;
rank: 702
score: 98.65657552083333
patch: final double n CaMeL C = current ;
rank: 702
score: 98.60266723632813
patch: ++ 0 ; ++ iter ; if iter ;
rank: 702
score: 98.557080078125
patch: if ( iter == 0 ; return ; }
rank: 702
score: 97.82037353515625
patch: while ++ iter ;
rank: 703
score: 98.78897094726562
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > < double [ ] {
rank: 703
score: 98.60200805664063
patch: ++ iter ; ++ - ; int iter ;
rank: 703
score: 98.55706787109375
patch: if ( . iter == 0 ) {
rank: 703
score: 98.42342376708984
patch: ++ iter ; if ( iter )
rank: 703
score: 97.81867065429688
patch: iter } ++ ;
rank: 704
score: 98.80029296875
patch: ++ n CaMeL C ; ++ iter * / ;
rank: 704
score: 98.78878784179688
patch: Object current = current CaMeL Point . length ;
rank: 704
score: 98.69825575086806
patch: final int n CaMeL R = current ;
rank: 704
score: 98.65373229980469
patch: / * if ( false ) {
rank: 704
score: 98.55670844184027
patch: / * ++ * * * * /
rank: 704
score: 98.42330932617188
patch: int iter = iter + iter ;
rank: 704
score: 97.81651611328125
patch: ++ null ; ;
rank: 705
score: 98.80015733506944
patch: ++ iter ; iter = iter . ;
rank: 705
score: 98.7887652853261
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . current CaMeL Point ( ) ;
rank: 705
score: 98.653564453125
patch: boolean checker = false ;
rank: 705
score: 98.55595703125
patch: if ( ! iter != null ; break ;
rank: 705
score: 98.42251586914062
patch: try { iter = ++ iter ;
rank: 705
score: 97.80884399414063
patch: ++ max ; ;
rank: 706
score: 98.78860473632812
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , target CaMeL Values ) ;
rank: 706
score: 98.69639587402344
patch: double n CaMeL C = 0 ;
rank: 706
score: 98.65353054470486
patch: if ( converged && ! converged ) {
rank: 706
score: 98.60067749023438
patch: ++ iter ; ++ iter ; ++ name ;
rank: 706
score: 98.55440063476563
patch: / * * /
rank: 706
score: 97.80156860351562
patch: return ++ iter ;
rank: 707
score: 98.79987127130681
patch: int iter = current . length ; ++ iter ;
rank: 707
score: 98.78839111328125
patch: result = weight CaMeL Matrix . get CaMeL Solver ( ) . get CaMeL Row CaMeL Vector ( n CaMeL C ) ;
rank: 707
score: 98.65308380126953
patch: double current CaMeL Point = null ;
rank: 707
score: 98.60062255859376
patch: int iter ; ++ iter ; while iter ;
rank: 707
score: 98.55409749348958
patch: else { ++ iter ; * / }
rank: 707
score: 97.79293212890624
patch: ++ start ; ;
rank: 708
score: 98.78799040421195
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > do = current ;
rank: 708
score: 98.695556640625
patch: / * int iter = 0 ;
rank: 708
score: 98.599267578125
patch: / * ++ iter ; ++ iter ; ;
rank: 708
score: 97.78482055664062
patch: ++ copy ;
rank: 709
score: 98.91964956430289
patch: final double [ ] value = current CaMeL Point . length ;
rank: 709
score: 98.87852783203125
patch: current = residuals CaMeL Weights [ 0 ] ;
rank: 709
score: 98.7991455078125
patch: ++ iter ; this . iter = iter ;
rank: 709
score: 98.78765869140625
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; int iter = 0 ;
rank: 709
score: 98.69302029079861
patch: final int current CaMeL Point = $STRING$ ;
rank: 709
score: 98.59903564453126
patch: ++ 0 ; ++ iter ; for iter ;
rank: 709
score: 98.55201939174107
patch: if ( iter ; null ;
rank: 709
score: 98.41623360770089
patch: n CaMeL C = iter ;
rank: 709
score: 97.78427734375
patch: int 1 ++ ;
rank: 710
score: 98.87798517400569
patch: int iter = residuals CaMeL Weights [ 0 ] ;
rank: 710
score: 98.78664232336956
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ( boolean converged ) {
rank: 710
score: 98.68960571289062
patch: if ( ! converged ; ) {
rank: 710
score: 98.64743041992188
patch: if ( converged && true ) {
rank: 710
score: 98.59763881138393
patch: ++ 1 * ++ iter ;
rank: 710
score: 98.55121527777777
patch: if ( iter == null ; else ;
rank: 710
score: 98.41439383370536
patch: if ( iter == 1 )
rank: 710
score: 97.7817138671875
patch: ++ 1 ; iter
rank: 711
score: 98.79795837402344
patch: ++ iter * / * / ;
rank: 711
score: 98.78647682883523
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , 0 , current CaMeL Point ) ;
rank: 711
score: 98.68901715959821
patch: if ( ! converged ; {
rank: 711
score: 98.59741821289063
patch: finally { ++ iter ; ++ iter ; }
rank: 711
score: 98.55091010199652
patch: , * * * / ++ iter ;
rank: 711
score: 98.4104232788086
patch: if ( true ) ++ iter ;
rank: 711
score: 97.7795654296875
patch: ++ value ; ;
rank: 712
score: 98.79723011363636
patch: ++ iter ; if ; ++ n CaMeL C ;
rank: 712
score: 98.78598022460938
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , current CaMeL Point . length ) ;
rank: 712
score: 98.68693712022569
patch: current CaMeL Point = n CaMeL R ;
rank: 712
score: 98.64650472005208
patch: if ( ! converged && false ) {
rank: 712
score: 98.55074734157986
patch: if ( iter == $NUMBER$ ; break ;
rank: 712
score: 98.40886688232422
patch: if ( iter != this ) {
rank: 712
score: 97.7730224609375
patch: } ++ 0 ;
rank: 713
score: 98.87160422585227
patch: current = current . get CaMeL Entry ( ) ;
rank: 713
score: 98.79644775390625
patch: ++ n CaMeL C ; if ( iter ;
rank: 713
score: 98.78579313858695
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . get CaMeL Row ( iter ) ;
rank: 713
score: 98.64582824707031
patch: ++ iter ; / * / {
rank: 713
score: 98.59691772460937
patch: catch ++ iter ;
rank: 713
score: 98.55042860243056
patch: ( ( Object [ ] ) iter ;
rank: 713
score: 98.40459333147321
patch: if ( iter == current )
rank: 713
score: 97.77207641601562
patch: long iter ++ ;
rank: 714
score: 98.91490478515625
patch: double length = current CaMeL Point . length ;
rank: 714
score: 98.87135009765625
patch: ++ current CaMeL Point = current CaMeL Point ;
rank: 714
score: 98.79303656684027
patch: ++ iter ; ; current = iter ;
rank: 714
score: 98.7850341796875
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( current CaMeL Point , current CaMeL Point ) ;
rank: 714
score: 98.68498399522569
patch: int iter = n CaMeL C ] ;
rank: 714
score: 98.64552137586806
patch: for ( ; ! converged ; ) {
rank: 714
score: 98.59616088867188
patch: / * ++ ++ * / ++ iter ;
rank: 714
score: 98.55039760044643
patch: if ( iter > $NUMBER$ ;
rank: 714
score: 98.40205891927083
patch: ++ iter ( ) ;
rank: 714
score: 97.76800537109375
patch: ++ get ++ ;
rank: 715
score: 98.8707763671875
patch: current = ( double ) n CaMeL C ;
rank: 715
score: 98.79276899857955
patch: ++ current CaMeL Point [ iter ] = iter ;
rank: 715
score: 98.7848612467448
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 715
score: 98.6838607788086
patch: int [ ] current = current ;
rank: 715
score: 98.6451187133789
patch: boolean converged = false ; ) {
rank: 715
score: 98.5961181640625
patch: ++ iter ; iter ; int - 1 ;
rank: 715
score: 98.54803466796875
patch: if ( iter == null ; / ; }
rank: 715
score: 98.40130615234375
patch: final int iter = 1 ;
rank: 715
score: 97.76612548828125
patch: ++ 0 ; iter
rank: 716
score: 98.91253192608173
patch: int iter = target CaMeL Values [ n CaMeL R ] ;
rank: 716
score: 98.789794921875
patch: ++ iter ; ; current = current . ;
rank: 716
score: 98.7847900390625
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( iter ) ;
rank: 716
score: 98.64376831054688
patch: final double [ ] < double ;
rank: 716
score: 98.595458984375
patch: ++ iter ; * / if ++ iter ;
rank: 716
score: 98.3975601196289
patch: ++ iter ; switch ( iter )
rank: 716
score: 97.76318359375
patch: else iter ++ ;
rank: 717
score: 98.68202039930556
patch: final double n CaMeL C = 1 ;
rank: 717
score: 98.6407470703125
patch: boolean converged = false ; = false ;
rank: 717
score: 98.59510498046875
patch: ++ iter ; ++ iter ; int iter {
rank: 717
score: 98.54716796875
patch: if ( iter == null ; * / ;
rank: 717
score: 98.39603424072266
patch: if ( iter != - 1 )
rank: 717
score: 97.7625244140625
patch: int 0 ++ ;
rank: 718
score: 98.90886896306819
patch: / * converged = current CaMeL Point . length ;
rank: 718
score: 98.86805308948864
patch: ++ target CaMeL Values [ current CaMeL Point ] ;
rank: 718
score: 98.7884750366211
patch: ++ n CaMeL C - iter ;
rank: 718
score: 98.64074028862848
patch: if ( false && ! converged ) {
rank: 718
score: 98.54685668945312
patch: if ( iter == null ; * * ;
rank: 718
score: 98.393310546875
patch: synchronized ( ++ iter ) {
rank: 718
score: 97.75465393066406
patch: } iter ;
rank: 719
score: 98.9081698330966
patch: final double length = residuals CaMeL Weights . length ;
rank: 719
score: 98.78377632472827
patch: ( ( Point CaMeL Vector CaMeL Value CaMeL Pair ) current CaMeL Point ) . add ( current CaMeL Point ) ;
rank: 719
score: 98.63629150390625
patch: if ( false && ! converged ;
rank: 719
score: 98.54631212022569
patch: else { if ++ iter - iter ;
rank: 719
score: 98.3928731282552
patch: if ( true ) {
rank: 719
score: 97.74339599609375
patch: iter ; iter ;
rank: 720
score: 98.86470170454545
patch: if ( n CaMeL C < n CaMeL R )
rank: 720
score: 98.78582763671875
patch: ++ iter * / * / ++ iter ;
rank: 720
score: 98.78282674153645
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Entry ( n CaMeL C ) ;
rank: 720
score: 98.67723253038194
patch: final int [ ] current = current ;
rank: 720
score: 98.6333999633789
patch: if ( converged && ! converged ;
rank: 720
score: 98.59075317382812
patch: / * ++ ++ iter ; int iter ;
rank: 720
score: 98.546142578125
patch: else ++ iter ; }
rank: 720
score: 97.74327392578125
patch: } ++ 1 ;
rank: 721
score: 98.90462239583333
patch: residuals CaMeL Weights [ n CaMeL C ] = $STRING$ ;
rank: 721
score: 98.67714146205357
patch: i = n CaMeL C ;
rank: 721
score: 98.63016183035714
patch: if ( ! true ) {
rank: 721
score: 98.59062848772321
patch: ++ 1 ; ++ value ;
rank: 721
score: 98.54557291666667
patch: if ( < 0 ; ++ iter ;
rank: 721
score: 98.38786969866071
patch: while ( iter == iter )
rank: 721
score: 97.74219360351563
patch: if ++ 0 ;
rank: 722
score: 98.78359153053977
patch: if ( iter < n CaMeL C ) break ;
rank: 722
score: 98.78189750339673
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . length , current CaMeL Point ) ; }
rank: 722
score: 98.67592366536458
patch: final double weight CaMeL Matrix ( ) ;
rank: 722
score: 98.62987603081598
patch: if ( true ) { ++ iter ;
rank: 722
score: 98.590087890625
patch: / * * ++ ; / ++ iter ;
rank: 722
score: 98.5448885830966
patch: throw new Runtime CaMeL Exception ( $STRING$ , iter ;
rank: 722
score: 98.3878173828125
patch: final int iter = iter )
rank: 722
score: 97.74168701171875
patch: ++ - $NUMBER$ ;
rank: 723
score: 98.86078435724431
patch: int current CaMeL Point = n CaMeL C 1 ;
rank: 723
score: 98.783349609375
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 723
score: 98.78163213315217
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair ( int iter ) {
rank: 723
score: 98.67317708333333
patch: final int n CaMeL C = $NUMBER$ ;
rank: 723
score: 98.62507629394531
patch: double iter = n CaMeL C ;
rank: 723
score: 98.58981323242188
patch: else ++ ++ iter ;
rank: 723
score: 98.5447021484375
patch: else { if ; * * * * /
rank: 723
score: 98.38323102678571
patch: j = iter - 1 ;
rank: 723
score: 97.73619079589844
patch: ++ iterator ;
rank: 724
score: 98.90261501736111
patch: current CaMeL Point [ ] = current ;
rank: 724
score: 98.78291459517045
patch: int iter = current CaMeL Point . length ( ;
rank: 724
score: 98.78025220788044
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair < double [ ] >
rank: 724
score: 98.67169867621527
patch: int ++ n CaMeL C = 0 ;
rank: 724
score: 98.61827850341797
patch: int n CaMeL C = 1 ;
rank: 724
score: 98.58836146763393
patch: ++ 1 ; int iter ;
rank: 724
score: 98.54463026258681
patch: if ( iter ; ++ iter iter ;
rank: 724
score: 97.72326049804687
patch: ++ iter ++ ;
rank: 725
score: 98.9018221768466
patch: int ++ n CaMeL C = n CaMeL C ;
rank: 725
score: 98.78240966796875
patch: ++ n CaMeL C ; / * * ;
rank: 725
score: 98.78009033203125
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point . current CaMeL Point , n CaMeL C ) ;
rank: 725
score: 98.58807983398438
patch: try { ++ iter ; if ++ iter ;
rank: 725
score: 98.54450819227431
patch: else { if ++ iter ; break ;
rank: 725
score: 98.36835588727679
patch: if ( iter != current )
rank: 725
score: 97.7180419921875
patch: ++ - 0 ;
rank: 726
score: 98.77946671195652
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair > n CaMeL R = target CaMeL Values . iterator ( ) ;
rank: 726
score: 98.66904025607639
patch: Real CaMeL Matrix < double [ ] ;
rank: 726
score: 98.60869004991319
patch: ++ iter ; if ( ! converged ;
rank: 726
score: 98.5878173828125
patch: ++ 1 ; ++ iter ; for iter ;
rank: 726
score: 98.54446072048611
patch: else { if ++ iter ++ ; }
rank: 726
score: 98.36478969029018
patch: if ( ! ++ iter )
rank: 726
score: 97.71463623046876
patch: ++ new iter ;
rank: 727
score: 98.85732199928977
patch: int iter = current CaMeL Point . length 1 ;
rank: 727
score: 98.78063286675348
patch: ++ n CaMeL C ; final double ;
rank: 727
score: 98.7788722826087
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair < Point CaMeL Vector CaMeL Value CaMeL Pair > current = null ;
rank: 727
score: 98.60369110107422
patch: if ( converged || false ) {
rank: 727
score: 98.58745727539062
patch: ++ iter ; / * * ++ iter ;
rank: 727
score: 98.54397922092014
patch: else { * * * * / }
rank: 727
score: 98.36197335379464
patch: final double iter = iter ;
rank: 727
score: 97.7124267578125
patch: ++ [ ] ;
rank: 728
score: 98.89943625710227
patch: current = current CaMeL Point . length ; / /
rank: 728
score: 98.77979871961806
patch: ++ iter - n CaMeL C ; ;
rank: 728
score: 98.7774074388587
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair > iter = null ;
rank: 728
score: 98.66630723741319
patch: final double current CaMeL Point = 1 ;
rank: 728
score: 98.60258653428819
patch: / / if ( ! false ) {
rank: 728
score: 98.54315740411931
patch: if ( iter == 0 ) return iter ; else
rank: 728
score: 97.7123291015625
patch: ++ iter ; /
rank: 729
score: 98.8984619140625
patch: double [ ] residuals CaMeL Weights = current ;
rank: 729
score: 98.77965198863636
patch: ++ n CaMeL C ; if ; ++ iter ;
rank: 729
score: 98.7767842610677
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair [ n CaMeL C ] ;
rank: 729
score: 98.66600206163194
patch: final int length = n CaMeL C ;
rank: 729
score: 98.60244750976562
patch: int iter = current ;
rank: 729
score: 98.58626098632813
patch: ++ iter ; if iter ; ++ 1 ;
rank: 729
score: 98.54290771484375
patch: ++ * * * iter ;
rank: 729
score: 98.35200718470982
patch: current CaMeL Point = iter ;
rank: 729
score: 97.70693969726562
patch: ++ ++ ] ;
rank: 730
score: 98.77644856770833
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair public Point CaMeL Vector CaMeL Value CaMeL Pair current = current . current ;
rank: 730
score: 98.66586303710938
patch: final int ++ n CaMeL C ;
rank: 730
score: 98.6006088256836
patch: ++ iter ; / * / }
rank: 730
score: 98.58612060546875
patch: int iter ; else * / ++ iter ;
rank: 730
score: 98.542529296875
patch: if ( iter == 0 ; break ; else
rank: 730
score: 97.70675048828124
patch: ++ - ] ;
rank: 731
score: 98.7771329012784
patch: ++ iter ; current . ++ ; ++ iter ;
rank: 731
score: 98.77573649088542
patch: n CaMeL C = current CaMeL Point . length ; Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current ;
rank: 731
score: 98.598388671875
patch: double iter = 0 ;
rank: 731
score: 98.54219193892045
patch: else { if iter * 0 . 0 ; }
rank: 731
score: 98.3511250813802
patch: while ( false ) {
rank: 731
score: 97.70548706054687
patch: * ++ iter ;
rank: 732
score: 98.89556206597223
patch: current = compute CaMeL Residuals ( ) ;
rank: 732
score: 98.77527465820313
patch: x = current CaMeL Point . length ; }
rank: 732
score: 98.66184488932292
patch: final Real CaMeL Matrix current CaMeL Point ;
rank: 732
score: 98.59677124023438
patch: / * if ( true ) {
rank: 732
score: 98.54205932617188
patch: else { ++ iter ; } return false ;
rank: 732
score: 98.34942626953125
patch: j = iter - iter ;
rank: 732
score: 97.69502563476563
patch: if ++ 1 ;
rank: 733
score: 98.84948120117187
patch: if ( 0 < n CaMeL C ) {
rank: 733
score: 98.77511257595486
patch: state = current CaMeL Point . length ;
rank: 733
score: 98.66016981336806
patch: iter = target CaMeL Values . length ;
rank: 733
score: 98.59441375732422
patch: double weight CaMeL Matrix = null ;
rank: 733
score: 98.58475952148437
patch: ++ iter ; ++ iter ; int * ;
rank: 733
score: 98.54185791015625
patch: if ( iter ; ++ iter > 0 ;
rank: 733
score: 97.68804321289062
patch: ++ $STRING$ ; iter
rank: 734
score: 98.89246715198864
patch: final double [ ] residuals CaMeL Weights = current ;
rank: 734
score: 98.84641723632812
patch: residuals CaMeL Weights [ 0 ] = current ;
rank: 734
score: 98.77339680989583
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . do CaMeL Optimize ( iter ) ;
rank: 734
score: 98.65787760416667
patch: final double n CaMeL C = $STRING$ ;
rank: 734
score: 98.59276580810547
patch: double current CaMeL Point = 1 ;
rank: 734
score: 98.58345947265624
patch: ++ iter ; for iter ; ++ iter ;
rank: 734
score: 98.54171752929688
patch: else { ++ iter ; * * * /
rank: 734
score: 98.34177943638393
patch: int iter = ++ iter ;
rank: 734
score: 97.68589477539062
patch: ++ max ; iter
rank: 735
score: 98.8404296875
patch: boolean converged = checker . solve ( ) ;
rank: 735
score: 98.7733642578125
patch: result = current CaMeL Point [ iter ] ;
rank: 735
score: 98.77152506510417
patch: ++ iter ; for ( ; ; )
rank: 735
score: 98.65552435980902
patch: final double n CaMeL R = 0 ;
rank: 735
score: 98.59213256835938
patch: double iter = n CaMeL R ;
rank: 735
score: 98.54119262695312
patch: if ( iter == null ; return iter )
rank: 735
score: 98.3385009765625
patch: ++ iter - iter ; ;
rank: 735
score: 97.68294067382813
patch: ++ value ; iter
rank: 736
score: 98.77155303955078
patch: long current CaMeL Point = 0 ;
rank: 736
score: 98.77097389914773
patch: ++ iter ; if ( current CaMeL Point . ;
rank: 736
score: 98.59183175223214
patch: final boolean converged = true ;
rank: 736
score: 98.54118041992187
patch: , * * * * / ++ iter ;
rank: 736
score: 98.33762904575893
patch: ++ iter ; try { ;
rank: 736
score: 97.68292236328125
patch: ++ ! 1 ;
rank: 737
score: 98.7712735262784
patch: < Point CaMeL Vector CaMeL Value CaMeL Pair ) {
rank: 737
score: 98.77088512073864
patch: int iter = current . index CaMeL Of ( ;
rank: 737
score: 98.65330674913194
patch: final Object current CaMeL Point = current ;
rank: 737
score: 98.59183175223214
patch: boolean ! converged = true ;
rank: 737
score: 98.5814697265625
patch: ++ iter ; int iter ; int * /
rank: 737
score: 98.54067160866477
patch: if ( ! iter == null ; return iter ;
rank: 737
score: 98.33631243024554
patch: ++ iter [ iter ] ;
rank: 737
score: 97.67853546142578
patch: / ; ;
rank: 738
score: 98.77078586154514
patch: ++ n CaMeL C ; if ; ;
rank: 738
score: 98.7692159016927
patch: return new Point CaMeL Vector CaMeL Value CaMeL Pair ( target CaMeL Values . get CaMeL Row CaMeL Vector ( ) ) ;
rank: 738
score: 98.58480834960938
patch: int current CaMeL Point = iter ;
rank: 738
score: 98.58090209960938
patch: ++ iter ; int 1 + iter 1 ;
rank: 738
score: 98.5397061434659
patch: if ( iter != null ; return ++ iter ;
rank: 738
score: 97.67683410644531
patch: ++ default ;
rank: 739
score: 98.83184814453125
patch: throw new Convergence CaMeL Exception ( ) ;
rank: 739
score: 98.76993408203126
patch: ++ iter ; this . ++ iter ; }
rank: 739
score: 98.76918538411458
patch: Point CaMeL Vector CaMeL Value CaMeL Pair current = new Point CaMeL Vector CaMeL Value CaMeL Pair ( current , 0 ) ;
rank: 739
score: 98.58358764648438
patch: boolean ! ! converged = false ;
rank: 739
score: 98.58057861328125
patch: / * ] iter ; if ++ iter ;
rank: 739
score: 98.53872680664062
patch: else { else { return iter ; } }
rank: 739
score: 98.32207380022321
patch: if ( ! iter ) {
rank: 739
score: 97.67449951171875
patch: } iter
rank: 740
score: 98.8304443359375
patch: ++ iter ; current = n CaMeL C ;
rank: 740
score: 98.76899857954545
patch: [ ] current CaMeL Point = current CaMeL Point ;
rank: 740
score: 98.5823974609375
patch: ++ iter ; / * / /
rank: 740
score: 98.58018188476562
patch: if ++ iter ; try { ++ iter ;
rank: 740
score: 98.53823020241477
patch: if ( iter == null ; else return iter ;
rank: 740
score: 98.31458391462054
patch: while ( iter >= 0 )
rank: 740
score: 97.67442626953125
patch: ++ Math ; ;
rank: 741
score: 98.769091796875
patch: ++ iter ; current = current . get ;
rank: 741
score: 98.76889038085938
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Row CaMeL Vector ( ) ; }
rank: 741
score: 98.58016531808036
patch: ++ iter ; break ; ;
rank: 741
score: 98.53815307617188
patch: if ( iter > 0 ; ++ iter ;
rank: 741
score: 97.66905517578125
patch: / ; ++ ;
rank: 742
score: 98.8797607421875
patch: int iter = compute CaMeL Residuals ( ) ;
rank: 742
score: 98.76908365885417
patch: ++ iter ; * /
rank: 742
score: 98.76883951822917
patch: protected Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; int iter = 0 ;
rank: 742
score: 98.64227294921875
patch: final int current CaMeL Point = $NUMBER$ ;
rank: 742
score: 98.57978515625
patch: ++ iter ; while iter ; int iter ;
rank: 742
score: 98.57593536376953
patch: int [ ] current CaMeL Point ;
rank: 742
score: 98.53769356863839
patch: else { ++ start ; }
rank: 742
score: 98.31063406808036
patch: ++ iter 1 ; if ;
rank: 742
score: 97.65752563476562
patch: ++ new ; else
rank: 743
score: 98.76810709635417
patch: result = Point CaMeL Vector CaMeL Value CaMeL Pair ( current CaMeL Point , current CaMeL Point , current CaMeL Point ) ;
rank: 743
score: 98.63864474826389
patch: int ++ iter = current CaMeL Point ;
rank: 743
score: 98.57893589564732
patch: int 0 ; ++ iter ;
rank: 743
score: 98.53759087456598
patch: else { / * * ; * /
rank: 743
score: 97.64949951171874
patch: ++ false ; ;
rank: 744
score: 98.76559787326389
patch: size = current CaMeL Point . length ;
rank: 744
score: 98.765380859375
patch: final ; current CaMeL Point [ iter ] = ;
rank: 744
score: 98.57837524414063
patch: else { ++ iter ; while ++ iter ;
rank: 744
score: 98.57572174072266
patch: if ( ! converged ) { }
rank: 744
score: 98.53750174386161
patch: / * / * * /
rank: 744
score: 98.30636160714286
patch: ++ iter + 1 ; ;
rank: 744
score: 97.6421142578125
patch: { iter ++ ;
rank: 745
score: 98.81797960069444
patch: ++ target CaMeL Values [ iter ] ;
rank: 745
score: 98.76531982421875
patch: public Point CaMeL Vector CaMeL Value CaMeL Pair current CaMeL Point = current CaMeL Point . length ; boolean converged = false ;
rank: 745
score: 98.63645426432292
patch: final double [ ] current = 0 ;
rank: 745
score: 98.57795933314732
patch: ++ 0 ; int iter ;
rank: 745
score: 98.57498604910714
patch: if ( converged ) { {
rank: 745
score: 98.53696695963542
patch: else { * * * * * /
rank: 745
score: 98.30391438802083
patch: ++ iter ) ++ ;
rank: 745
score: 97.6410888671875
patch: iter ++ ; }
rank: 746
score: 98.81715087890625
patch: ++ current CaMeL Point = n CaMeL C ;
rank: 746
score: 98.76357014973958
patch: Iterator < Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair Point CaMeL Vector CaMeL Value CaMeL Pair
rank: 746
score: 98.63606770833333
patch: final int 0 = n CaMeL C ;
rank: 746
score: 98.577783203125
patch: / * / ++ iter ; int iter ;
rank: 746
score: 98.5738754272461
patch: ++ iter ; / / else {
rank: 746
score: 98.5345947265625
patch: if ( iter < iter ) return null ;
rank: 746
score: 98.30006626674107
patch: ++ iter - 1 ; ;
rank: 746
score: 97.63865661621094
patch: ++ * ;
rank: 747
score: 98.76229858398438
patch: result = weight CaMeL Matrix . get CaMeL Row CaMeL Vector ( ) . get CaMeL Value ( n CaMeL C ) ;
rank: 747
score: 98.63486153738839
patch: final double n CaMeL C ;
rank: 747
score: 98.57715454101563
patch: ++ iter ; if ++ iter ; iter ;
rank: 747
score: 98.57356480189732
patch: final int iter = null ;
rank: 747
score: 98.53424072265625
patch: if ( iter < 0 ) return iter ;
rank: 747
score: 98.29864501953125
patch: ++ iter ; return new ;
rank: 747
score: 97.63858642578126
patch: ++ max ++ ;
rank: 748
score: 98.81509060329861
patch: ++ target CaMeL Values [ 0 ] ;
rank: 748
score: 98.76228841145833
patch: [ ] current CaMeL Point = current CaMeL Point . current CaMeL Point . current CaMeL Point . current CaMeL Point ; }
rank: 748
score: 98.76221313476563
patch: synchronized ( this ) { ++ iter ; }
rank: 748
score: 98.63456895616319
patch: if ( ! converged && ! converged ;
rank: 748
score: 98.57635498046875
patch: ++ iter ; else * * ++ iter ;
rank: 748
score: 98.5733413696289
patch: int n CaMeL C = $NUMBER$ ;
rank: 748
score: 98.53415749289773
patch: if ( iter == null || iter . equals ;
rank: 748
score: 98.29815063476562
patch: ++ iter ) {
rank: 748
score: 97.6322250366211
patch: / iter ;
rank: 749
score: 98.8628262606534
patch: Point CaMeL Vector CaMeL Value CaMeL Pair = current ;
rank: 749
score: 98.76210327148438
patch: pos = current CaMeL Point . length ; }
rank: 749
score: 98.63425699869792
patch: int CaMeL Value = n CaMeL C ;
rank: 749
score: 98.53271484375
patch: else { if ++ iter [ $NUMBER$ ] ; }
rank: 749
score: 98.29653494698661
patch: ++ iter + 1 ; }
rank: 749
score: 97.63108825683594
patch: ++ get ;
rank: 750
score: 98.81087036132813
patch: residuals CaMeL Weights [ 0 ] = 0 ;
rank: 750
score: 98.76077706473214
patch: ++ n CaMeL R ; ;
rank: 750
score: 98.75498046875
patch: { iter = current CaMeL Point . length ;
rank: 750
score: 98.62828911675348
patch: final double n CaMeL C = $NUMBER$ ;
rank: 750
score: 98.576025390625
patch: ++ iter ; try { ++ ++ iter ;
rank: 750
score: 98.56636265345982
patch: final double iter = false ;
rank: 750
score: 98.53270263671875
patch: if ( iter == iter ) throw null ;
rank: 750
score: 98.29230608258929
patch: final ++ n CaMeL C ;
rank: 750
score: 97.61351776123047
patch: int iter *
rank: 751
score: 98.80707659040179
patch: current = current CaMeL Point ;
rank: 751
score: 98.760009765625
patch: ++ n CaMeL C ; if ( ; ;
rank: 751
score: 98.75163130326705
patch: end = current CaMeL Point . length ; ++ ;
rank: 751
score: 98.62641059027777
patch: final double iter = current CaMeL Point ;
rank: 751
score: 98.56480916341145
patch: int iter = $NUMBER$ ;
rank: 751
score: 98.53145054408482
patch: else { ++ false ; }
rank: 751
score: 97.6044921875
patch: long iter ;
rank: 752
score: 98.85903098366477
patch: residuals CaMeL Weights [ current CaMeL Point = current ;
rank: 752
score: 98.7586669921875
patch: ++ iter ; final double ++ ;
rank: 752
score: 98.74942355685764
patch: tmp = current CaMeL Point . length ;
rank: 752
score: 98.62493218315973
patch: final int converged = n CaMeL C ;
rank: 752
score: 98.56988525390625
patch: ++ * * ++ iter ; ++ iter ;
rank: 752
score: 98.56394958496094
patch: double current CaMeL Point = iter ;
rank: 752
score: 98.53129438920455
patch: if ( iter == 0 ; / * * ;
rank: 752
score: 98.28531319754464
patch: while ( iter < iter )
rank: 752
score: 97.57073974609375
patch: ++ min ;
rank: 753
score: 98.7586669921875
patch: ++ iter ; while ( iter == iter ) {
rank: 753
score: 98.74625651041667
patch: num = current CaMeL Point . length ;
rank: 753
score: 98.62467738560268
patch: final int current CaMeL Point ;
rank: 753
score: 98.5697509765625
patch: ++ iter ; else * ; ++ iter ;
rank: 753
score: 98.5616455078125
patch: for ( boolean converged = false ;
rank: 753
score: 98.53095092773438
patch: if ( iter == null ; ++ iter )
rank: 753
score: 97.57059478759766
patch: ++ ; iter
rank: 754
score: 98.8566006747159
patch: final int [ ] current = current CaMeL Point ;
rank: 754
score: 98.80452270507813
patch: current = ( double ) n CaMeL R ;
rank: 754
score: 98.75814208984374
patch: ++ iter ; * / * ++ iter ;
rank: 754
score: 98.62422943115234
patch: int n CaMeL R = current ;
rank: 754
score: 98.55873107910156
patch: double weight CaMeL Matrix = 0 ;
rank: 754
score: 98.53094482421875
patch: if ( iter != null ; return null ;
rank: 754
score: 98.27565220424107
patch: if ( iter == this )
rank: 755
score: 98.8560791015625
patch: final String [ ] current CaMeL Point = current ;
rank: 755
score: 98.75813598632813
patch: int iter = current . length - iter ;
rank: 755
score: 98.73799641927083
patch: return current CaMeL Point [ iter ] ;
rank: 755
score: 98.62368774414062
patch: final int ++ iter = 0 ;
rank: 755
score: 98.56900024414062
patch: else if ++ iter ;
rank: 755
score: 98.55842590332031
patch: / / if ( ! converged )
rank: 755
score: 98.5307950106534
patch: if ( iter == null ; return true ; }
rank: 755
score: 98.27228655133929
patch: while ( iter == 1 )
rank: 755
score: 97.55664825439453
patch: iter ; else
rank: 756
score: 98.80357055664062
patch: int current CaMeL Point = weight CaMeL Matrix ;
rank: 756
score: 98.75806342230902
patch: ++ n CaMeL C ; * / ;
rank: 756
score: 98.73603959517045
patch: n CaMeL C = current CaMeL Point . 0 ;
rank: 756
score: 98.62257385253906
patch: int converged = n CaMeL C ;
rank: 756
score: 98.56898193359375
patch: ++ iter ; iter ; System . out ;
rank: 756
score: 98.53077392578125
patch: try { ++ iter ; } catch ; }
rank: 756
score: 97.5416488647461
patch: else ; iter
rank: 757
score: 98.8538818359375
patch: final Real CaMeL Matrix [ ] current = current ;
rank: 757
score: 98.73357599431819
patch: if ( current CaMeL Point . length ( ) >
rank: 757
score: 98.62204996744792
patch: final int current = n CaMeL C ;
rank: 757
score: 98.56864013671876
patch: ++ iter ; ; * * ++ iter ;
rank: 757
score: 98.55274200439453
patch: for ( boolean converged ; ) {
rank: 757
score: 98.5303955078125
patch: if ( ! iter . is CaMeL Empty )
rank: 757
score: 97.53242492675781
patch: ++ break ;
rank: 758
score: 98.80022583007812
patch: current = current ;
rank: 758
score: 98.75709117542614
patch: ++ iter ; if ( iter < iter ) {
rank: 758
score: 98.62110246930804
patch: final double current CaMeL Point ;
rank: 758
score: 98.552001953125
patch: int iter = $STRING$ . length ;
rank: 758
score: 98.52891322544643
patch: / * * ++ * /
rank: 758
score: 98.26925223214286
patch: current CaMeL Point = 0 ;
rank: 758
score: 97.5223388671875
patch: / ;
rank: 759
score: 98.79948120117187
patch: int checker = current CaMeL Point . length ;
rank: 759
score: 98.75694691051136
patch: ++ iter ; current = iter . iter ; ;
rank: 759
score: 98.7311123934659
patch: n CaMeL C = current CaMeL Point . ) ;
rank: 759
score: 98.62030029296875
patch: final double weight CaMeL Matrix = 1 ;
rank: 759
score: 98.55023956298828
patch: double current CaMeL Point = $STRING$ ;
rank: 759
score: 98.52867431640625
patch: else { else { ++ iter ; } }
rank: 759
score: 98.26835414341518
patch: try { current = iter ;
rank: 759
score: 97.49942779541016
patch: iter iter else
rank: 760
score: 98.79943237304687
patch: int weight CaMeL Matrix = n CaMeL C ;
rank: 760
score: 98.75592651367188
patch: ++ n CaMeL C ; iter = iter ;
rank: 760
score: 98.5672607421875
patch: ++ iter ; int iter ; int value ;
rank: 760
score: 98.52828979492188
patch: ++ * iter ; }
rank: 760
score: 98.26589529854911
patch: while ( iter != 0 )
rank: 760
score: 97.48149108886719
patch: iter else ;
rank: 761
score: 98.75572620738636
patch: ++ iter ; if ( iter > 0 ) {
rank: 761
score: 98.72821044921875
patch: max = current CaMeL Point . length ; }
rank: 761
score: 98.5277099609375
patch: if ( iter == null || iter != null ;
rank: 761
score: 98.2633056640625
patch: state = ++ iter ;
rank: 761
score: 97.47875213623047
patch: int iter /
rank: 762
score: 98.7545498934659
patch: ++ iter ; if ( iter == null ) {
rank: 762
score: 98.54703776041667
patch: int iter = true ;
rank: 762
score: 98.52714399857955
patch: if ( iter == null ; / * / ;
rank: 762
score: 98.26282610212054
patch: if ( current CaMeL Point ;
rank: 762
score: 97.45774841308594
patch: ++ ; /
rank: 763
score: 98.83815696022727
patch: b = new int [ n CaMeL C ] ;
rank: 763
score: 98.72744411892361
patch: start = current CaMeL Point . length ;
rank: 763
score: 98.61172921316964
patch: final double [ ] 1 ;
rank: 763
score: 98.56581420898438
patch: / * * ++ * / ++ iter ;
rank: 763
score: 98.54637145996094
patch: if ( ) { ++ iter ;
rank: 763
score: 98.52558244977679
patch: ++ iter ; * * /
rank: 763
score: 98.26205880301339
patch: j = iter ( ) ;
rank: 763
score: 97.44042205810547
patch: ++ iter .
rank: 764
score: 98.7542724609375
patch: ++ iter ; int iter = current . ;
rank: 764
score: 98.72735040838069
patch: pos = current CaMeL Point . length ; ++ ;
rank: 764
score: 98.610107421875
patch: final double n CaMeL R = current ;
rank: 764
score: 98.54507446289062
patch: boolean converged = checker == null ;
rank: 764
score: 98.52449174360795
patch: else { if ++ iter [ 1 ] ; }
rank: 764
score: 97.43151092529297
patch: for ++ ;
rank: 765
score: 98.78604736328126
patch: long current CaMeL Point = current CaMeL Point ;
rank: 765
score: 98.75299682617188
patch: ++ iter ; current = iter + iter ;
rank: 765
score: 98.72515869140625
patch: y = current CaMeL Point [ 0 ] ;
rank: 765
score: 98.60733642578126
patch: if ( converged ;
rank: 765
score: 98.56436157226562
patch: int iter * ++ ;
rank: 765
score: 98.53904215494792
patch: boolean converged = null ;
rank: 765
score: 98.523779296875
patch: if ( iter ; ++ iter < 0 ;
rank: 765
score: 98.26116071428571
patch: if ( iter == $STRING$ )
rank: 765
score: 97.42778015136719
patch: if iter {
rank: 766
score: 98.75049438476563
patch: ++ n CaMeL C ; while ( true )
rank: 766
score: 98.723681640625
patch: Integer current = current CaMeL Point . length ;
rank: 766
score: 98.60708182198661
patch: i = n CaMeL R ;
rank: 766
score: 98.53372628348214
patch: ++ iter ; / finally {
rank: 766
score: 98.52335981889205
patch: if ( iter == null ; while ; * /
rank: 766
score: 98.25821358816964
patch: Iterator iter = ++ iter ;
rank: 766
score: 97.42255401611328
patch: ++ in ;
rank: 767
score: 98.72027033025569
patch: y = current CaMeL Point . length ( ) ;
rank: 767
score: 98.56265694754464
patch: else ; ++ iter ; ;
rank: 767
score: 98.52975027901786
patch: boolean converged = false ; ;
rank: 767
score: 98.52321079799107
patch: else { * * * /
rank: 767
score: 97.41004435221355
patch: ++ ;
rank: 768
score: 98.77680799696181
patch: int iter = n CaMeL C 1 ;
rank: 768
score: 98.7452880859375
patch: ++ iter ; while ( iter == iter )
rank: 768
score: 98.60573032924107
patch: final int n CaMeL C ;
rank: 768
score: 98.56201171875
patch: ++ iter ; ++ iter ; ++ out ;
rank: 768
score: 98.52614048549107
patch: ++ boolean converged = false ;
rank: 768
score: 98.523046875
patch: if ( iter > 0 ; return null ;
rank: 768
score: 98.25599888392857
patch: j = iter + iter ;
rank: 768
score: 97.40191650390625
patch: = iter ;
rank: 769
score: 98.71902126736111
patch: col = current CaMeL Point . length ;
rank: 769
score: 98.60558319091797
patch: / * boolean converged = false ;
rank: 769
score: 98.5603271484375
patch: ++ value ; ++ iter ; int iter ;
rank: 769
score: 98.52583530970982
patch: for ( int ++ ) {
rank: 769
score: 98.52293090820312
patch: if ( iter < iter ; iter ++ ;
rank: 769
score: 98.25563267299107
patch: ++ iter ; } else {
rank: 769
score: 97.375732421875
patch: int 1 ;
rank: 770
score: 98.77202690972223
patch: int iter = n CaMeL R 1 ;
rank: 770
score: 98.71760697798295
patch: return new Block CaMeL Real CaMeL Matrix ( ) ;
rank: 770
score: 98.55975952148438
patch: ++ 1 ; ++ iter ; int 1 ;
rank: 770
score: 98.52156284877232
patch: final double iter = null ;
rank: 770
score: 98.52140669389205
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 770
score: 97.36363983154297
patch: } iter iter
rank: 771
score: 98.83107299804688
patch: ++ [ ] current CaMeL Point = current ;
rank: 771
score: 98.74273681640625
patch: int iter = current . length ( ) ;
rank: 771
score: 98.71292114257812
patch: add ( current CaMeL Point ) ;
rank: 771
score: 98.60411071777344
patch: / / int iter = 0 ;
rank: 771
score: 98.55873413085938
patch: ++ iter ; } else { ++ iter ;
rank: 771
score: 98.52085367838542
patch: return new ++ ; }
rank: 771
score: 98.52078683035714
patch: / / if ( converged ;
rank: 771
score: 98.24623325892857
patch: if ( iter >= 1 )
rank: 771
score: 97.36231994628906
patch: int 0 ;
rank: 772
score: 98.83106578480114
patch: m = new double [ n CaMeL C ] ;
rank: 772
score: 98.71147325303819
patch: row = current CaMeL Point . length ;
rank: 772
score: 98.60197448730469
patch: Real CaMeL Matrix weight CaMeL Matrix ;
rank: 772
score: 98.55830688476563
patch: ++ iter ; iter ; ++ iter ; ;
rank: 772
score: 98.52071707589286
patch: if ( < 0 ) {
rank: 772
score: 98.51954868861607
patch: if ( ! ! converged ;
rank: 772
score: 98.23921421595982
patch: i = iter + 1 ;
rank: 772
score: 97.34624481201172
patch: for iter {
rank: 773
score: 98.74077012803819
patch: ++ iter ; * / * * /
rank: 773
score: 98.71072048611111
patch: length = current CaMeL Point . length ;
rank: 773
score: 98.60182189941406
patch: boolean current CaMeL Point = 0 ;
rank: 773
score: 98.55791625976562
patch: ++ iter ; iter iter * - 1 ;
rank: 773
score: 98.5194091796875
patch: if ( iter == null ; while ; ) {
rank: 773
score: 98.51862444196429
patch: check CaMeL Parameters ( ) ;
rank: 773
score: 98.23836263020833
patch: ++ iter ; continue ;
rank: 773
score: 97.34465789794922
patch: / ++ ;
rank: 774
score: 98.75301106770833
patch: current = current . solve ( ) ;
rank: 774
score: 98.70585327148437
patch: k = current CaMeL Point . length ; }
rank: 774
score: 98.59919738769531
patch: int current CaMeL Point = $STRING$ ;
rank: 774
score: 98.55646623883929
patch: else iter ; ++ iter ;
rank: 774
score: 98.5188876065341
patch: if ( iter == iter ) return null ; else
rank: 774
score: 98.51069859095982
patch: final double converged = false ;
rank: 774
score: 98.23822021484375
patch: pos = iter + 1 ;
rank: 774
score: 97.3382797241211
patch: break ; ;
rank: 775
score: 98.74993218315973
patch: current = get CaMeL Point ( ) ;
rank: 775
score: 98.7058438387784
patch: if ( iter < n CaMeL C ; ) {
rank: 775
score: 98.59496307373047
patch: Object [ ] current = current ;
rank: 775
score: 98.51868286132813
patch: else { if ++ iter ; * / }
rank: 775
score: 98.50229317801339
patch: int iter = - 0 ;
rank: 775
score: 98.2355448404948
patch: ++ iter = 0 ;
rank: 775
score: 97.30116271972656
patch: ++ compare ;
rank: 776
score: 98.82717895507812
patch: final double = current CaMeL Point . length ;
rank: 776
score: 98.73414442274306
patch: ++ iter ; / * iter * /
rank: 776
score: 98.70474582248264
patch: h = current CaMeL Point . length ;
rank: 776
score: 98.55424281529018
patch: else { ++ - iter ;
rank: 776
score: 98.51863316127232
patch: / * * * / }
rank: 776
score: 98.49099731445312
patch: for ( int ) {
rank: 776
score: 98.23274448939732
patch: ++ iter ; System . ;
rank: 776
score: 97.30061340332031
patch: ++ $NUMBER$ /
rank: 777
score: 98.73395538330078
patch: ++ iter ; while ( true ;
rank: 777
score: 98.70011393229167
patch: column = current CaMeL Point . length ;
rank: 777
score: 98.58367919921875
patch: int current CaMeL Point = $NUMBER$ ;
rank: 777
score: 98.55421142578125
patch: ++ iter ; ++ * * int iter ;
rank: 777
score: 98.51826615767045
patch: if ( iter == 0 ; while ++ iter ;
rank: 777
score: 98.48884800502232
patch: / / if ( ) {
rank: 777
score: 97.29298400878906
patch: else iter ;
rank: 778
score: 98.74092320033482
patch: ++ n CaMeL C ; {
rank: 778
score: 98.73308648003473
patch: ++ iter * / / ++ iter ;
rank: 778
score: 98.5537109375
patch: / * * ++ iter ; ++ iter ;
rank: 778
score: 98.22637939453125
patch: if ( iter <= 0 )
rank: 778
score: 97.28901672363281
patch: if iter ]
rank: 779
score: 98.73860931396484
patch: ++ target CaMeL Values . length ;
rank: 779
score: 98.69890802556819
patch: check CaMeL Parameters ( current CaMeL Point ) ; }
rank: 779
score: 98.55364379882812
patch: int iter ; / * / ++ iter ;
rank: 779
score: 98.51736014229911
patch: / * ++ iter * /
rank: 779
score: 98.2254130045573
patch: result = ++ iter ;
rank: 779
score: 97.286865234375
patch: ++ * /
rank: 780
score: 98.82451036241319
patch: current = current * n CaMeL C ;
rank: 780
score: 98.73003387451172
patch: ++ iter ; ; if ( ;
rank: 780
score: 98.69752332899306
patch: return current CaMeL Point [ 0 ] ;
rank: 780
score: 98.57180786132812
patch: final double -- n CaMeL C ;
rank: 780
score: 98.553466796875
patch: j * ++ ; ++ ;
rank: 780
score: 98.48326764787946
patch: / / / / * /
rank: 780
score: 97.28221893310547
patch: ++ stop ;
rank: 781
score: 98.57028198242188
patch: final int n CaMeL C ++ ;
rank: 781
score: 98.47724260602679
patch: ++ iter ; / / /
rank: 781
score: 98.21816580636161
patch: ++ iter - 1 ; }
rank: 781
score: 97.27505493164062
patch: if iter /
rank: 782
score: 98.82006225585937
patch: int [ ] residuals CaMeL Weights = current ;
rank: 782
score: 98.7337875366211
patch: if ( converged > 0 ) {
rank: 782
score: 98.71879069010417
patch: synchronized ( iter ) { ++ iter ;
rank: 782
score: 98.56559753417969
patch: final int < double [ ] ;
rank: 782
score: 98.5532470703125
patch: ++ iter ; ++ 1 ; for iter ;
rank: 782
score: 98.51195417131696
patch: else { iter += iter ;
rank: 782
score: 98.47641427176339
patch: int iter = - 1 ;
rank: 782
score: 98.21592494419643
patch: final int start = 0 ;
rank: 782
score: 97.25006866455078
patch: ++ super .
rank: 783
score: 98.71826171875
patch: ++ iter * / * * ;
rank: 783
score: 98.69055853949652
patch: id = current CaMeL Point . length ;
rank: 783
score: 98.56421661376953
patch: Object current CaMeL Point = current ;
rank: 783
score: 98.55283203125
patch: ++ iter ; for ++ ; ++ iter ;
rank: 783
score: 98.50871058872768
patch: else { / * ; }
rank: 783
score: 98.47594342912946
patch: int < double [ ] ;
rank: 783
score: 98.21568952287946
patch: final int iter = current ;
rank: 783
score: 97.23779296875
patch: { iter ;
rank: 784
score: 98.81732788085938
patch: current = current ; ++ n CaMeL C ;
rank: 784
score: 98.72890896267361
patch: current CaMeL Point += n CaMeL C ;
rank: 784
score: 98.71824645996094
patch: ++ n CaMeL C ; ; }
rank: 784
score: 98.55644226074219
patch: if ( ! converged ; break ;
rank: 784
score: 98.55119018554687
patch: ++ iter ; iter iter * - iter ;
rank: 784
score: 98.5076395670573
patch: else { ++ out ;
rank: 784
score: 98.21538434709821
patch: ++ iter = iter . ;
rank: 784
score: 97.23539733886719
patch: iter else iter
rank: 785
score: 98.81463623046875
patch: current = compute CaMeL Residuals ( current ) ;
rank: 785
score: 98.71799723307292
patch: ++ iter ; while ( ; ) {
rank: 785
score: 98.68939208984375
patch: v = current CaMeL Point . length ;
rank: 785
score: 98.55010114397321
patch: int iter ; ++ 1 ;
rank: 785
score: 98.50513567243304
patch: ++ * * * * /
rank: 785
score: 98.46568806966145
patch: int current = 0 ;
rank: 785
score: 97.23226165771484
patch: ++ System ;
rank: 786
score: 98.71792166573661
patch: ++ iter ; final ; ;
rank: 786
score: 98.68599853515624
patch: entry = current CaMeL Point [ iter ] ;
rank: 786
score: 98.50419108072917
patch: / * * * ;
rank: 786
score: 98.46175711495536
patch: int ! converged = false ;
rank: 786
score: 97.22660827636719
patch: ++ iter *
rank: 787
score: 98.81280517578125
patch: ++ iter ; { ++ n CaMeL C ;
rank: 787
score: 98.71734619140625
patch: ++ iter ; iter = ++ iter ;
rank: 787
score: 98.68583170572917
patch: n CaMeL C = current CaMeL Point .
rank: 787
score: 98.55003662109375
patch: ++ iter ; ++ iter ; int start ;
rank: 787
score: 98.45350138346355
patch: double iter = false ;
rank: 787
score: 98.21120779854911
patch: x = iter + 1 ;
rank: 787
score: 97.22554016113281
patch: ++ iter /
rank: 788
score: 98.81126098632812
patch: double value = current CaMeL Point . length ;
rank: 788
score: 98.7168960571289
patch: ++ iter ; / * ; ;
rank: 788
score: 98.71410454644098
patch: if ( < n CaMeL C ) {
rank: 788
score: 98.54937133789062
patch: ++ iter ; iter ; * * * /
rank: 788
score: 98.54891531808036
patch: final double [ ] $NUMBER$ ;
rank: 788
score: 98.50235421316964
patch: if ++ [ iter ] ;
rank: 788
score: 98.4501953125
patch: int converged = true ;
rank: 788
score: 98.20682198660714
patch: while ( iter == null )
rank: 788
score: 97.21482849121094
patch: ++ trim ;
rank: 789
score: 98.80960422092014
patch: b = compute CaMeL Residuals ( ) ;
rank: 789
score: 98.71484375
patch: ++ iter ; if ( ++ iter ;
rank: 789
score: 98.6821533203125
patch: start = current CaMeL Point . length ; }
rank: 789
score: 98.54833984375
patch: ++ $NUMBER$ ; ++ iter ; int iter ;
rank: 789
score: 98.499755859375
patch: else { / * / }
rank: 789
score: 98.44926234654018
patch: int iter = ! converged ;
rank: 789
score: 98.20527866908482
patch: final float iter = iter ;
rank: 789
score: 97.2101058959961
patch: int $NUMBER$ ;
rank: 790
score: 98.8061767578125
patch: int value = current CaMeL Point . length ;
rank: 790
score: 98.68156602647569
patch: m = current CaMeL Point . length ;
rank: 790
score: 98.54819946289062
patch: ++ iter ; int * * ++ iter ;
rank: 790
score: 98.54515729631696
patch: int ++ n CaMeL C ;
rank: 790
score: 98.49619838169643
patch: else ++ iter * iter ;
rank: 790
score: 98.44858224051339
patch: / / / * * /
rank: 790
score: 98.20473807198661
patch: ++ iter - iter 1 ;
rank: 790
score: 97.2014389038086
patch: iter iter iter
rank: 791
score: 98.71432834201389
patch: ++ iter ; / * * * ;
rank: 791
score: 98.68143310546876
patch: y = current CaMeL Point [ iter ] ;
rank: 791
score: 98.54788643973214
patch: else ++ iter ; break ;
rank: 791
score: 98.54502360026042
patch: int converged = 0 ;
rank: 791
score: 98.49431501116071
patch: else { ++ iterator ; }
rank: 791
score: 98.44794573102679
patch: final boolean converged = converged ;
rank: 791
score: 98.2031758626302
patch: if ( ++ iter )
rank: 791
score: 97.19718933105469
patch: int iter {
rank: 792
score: 98.80335150824652
patch: final int [ ] current = null ;
rank: 792
score: 98.71101379394531
patch: current = ++ n CaMeL C ;
rank: 792
score: 98.68035888671875
patch: < n CaMeL R ; iter ++ ) {
rank: 792
score: 98.54596557617188
patch: / * ] iter ; / / / /
rank: 792
score: 98.49294607979911
patch: / * * * ; /
rank: 792
score: 98.20314534505208
patch: synchronized ( ++ iter )
rank: 792
score: 97.17840576171875
patch: ++ ; ;
rank: 793
score: 98.71071370442708
patch: ++ iter ; while ( ! ; )
rank: 793
score: 98.69419642857143
patch: current = n CaMeL C ;
rank: 793
score: 98.67933485243056
patch: super . do CaMeL Optimize ( ) ;
rank: 793
score: 98.54539998372395
patch: / ++ ++ iter ;
rank: 793
score: 98.53975677490234
patch: if ( current CaMeL Point . length
rank: 793
score: 98.49269321986607
patch: ++ [ * iter ] ;
rank: 793
score: 98.44091796875
patch: ++ iter ; else {
rank: 793
score: 98.20172991071429
patch: key = iter + 1 ;
rank: 793
score: 97.16279602050781
patch: ++ read ;
rank: 794
score: 98.7938720703125
patch: double [ ] residuals CaMeL Weights = null ;
rank: 794
score: 98.69101969401042
patch: ++ current CaMeL Point [ ++ ] ;
rank: 794
score: 98.67580837673611
patch: x = current CaMeL Point . length ;
rank: 794
score: 98.54537963867188
patch: ++ iter ; try { iter ; * ;
rank: 794
score: 98.53932189941406
patch: final double < n CaMeL C ;
rank: 794
score: 98.49075753348214
patch: current = iter * iter ;
rank: 794
score: 98.19536481584821
patch: current = iter - iter ;
rank: 794
score: 97.15983581542969
patch: long iter /
rank: 795
score: 98.67509765625
patch: tmp = current CaMeL Point [ iter ] ;
rank: 795
score: 98.54525320870536
patch: try { ++ - iter ;
rank: 795
score: 98.48975481305804
patch: ++ * * iter ; }
rank: 795
score: 98.4390360514323
patch: boolean iter = false ;
rank: 795
score: 97.15862274169922
patch: ++ split ;
rank: 796
score: 98.6732177734375
patch: Object current CaMeL Point = current CaMeL Point .
rank: 796
score: 98.54463413783482
patch: ++ iter ; int 0 ;
rank: 796
score: 98.48829868861607
patch: else { / * * ;
rank: 796
score: 98.43574829101563
patch: / / * /
rank: 796
score: 98.19093831380208
patch: do { ++ iter ;
rank: 796
score: 97.15657043457031
patch: ++ / /
rank: 797
score: 98.70571560329861
patch: ++ iter ; final double iter = ;
rank: 797
score: 98.67267523871527
patch: curr = current CaMeL Point . length ;
rank: 797
score: 98.54361572265626
patch: ++ iter ; iter ; * ; * /
rank: 797
score: 98.53235626220703
patch: Real CaMeL Matrix current = null ;
rank: 797
score: 98.48698207310268
patch: } if ++ * iter ;
rank: 797
score: 97.15447998046875
patch: ++ ; *
rank: 798
score: 98.6701904296875
patch: other = current CaMeL Point [ iter ] ;
rank: 798
score: 98.54336983816964
patch: start ++ ; ++ iter ;
rank: 798
score: 98.53182220458984
patch: / * int converged = 0 ;
rank: 798
score: 98.4854736328125
patch: try { ++ * iter ;
rank: 798
score: 98.43171909877232
patch: final int iter = true ;
rank: 798
score: 98.18384660993304
patch: iter = current CaMeL Point ;
rank: 798
score: 97.13711547851562
patch: long iter *
rank: 799
score: 98.7886962890625
patch: current = get CaMeL Row ( ) ;
rank: 799
score: 98.70546468098958
patch: ++ iter * iter ;
rank: 799
score: 98.48545619419643
patch: else { return ; ; }
rank: 799
score: 98.42355346679688
patch: / / / * /
rank: 799
score: 98.18108258928571
patch: ++ iter ; return null ;
rank: 799
score: 97.13165283203125
patch: ++ clone ;
rank: 800
score: 98.6669413248698
patch: if ( ! converged )
rank: 800
score: 98.54014282226562
patch: ++ iter ; ++ $NUMBER$ ; int iter ;
rank: 800
score: 98.48231724330357
patch: / * * * * ;
rank: 800
score: 97.12886047363281
patch: / iter iter
rank: 801
score: 98.70418972439236
patch: ++ iter ; System . arraycopy ( ;
rank: 801
score: 98.67353820800781
patch: ++ residuals CaMeL Weights . length ;
rank: 801
score: 98.66551513671875
patch: height = current CaMeL Point . length ; }
rank: 801
score: 98.53983851841518
patch: ++ iter ; iter ; *
rank: 801
score: 98.5307388305664
patch: double iter = current CaMeL Point ;
rank: 801
score: 98.48195103236607
patch: if ( iter > 1 ;
rank: 801
score: 98.41495186941964
patch: if ( false ) { {
rank: 801
score: 97.1288070678711
patch: ++ - ;
rank: 802
score: 98.7031021118164
patch: ++ iter ; * / * ;
rank: 802
score: 98.665380859375
patch: tmp = current CaMeL Point [ 0 ] ;
rank: 802
score: 98.66225179036458
patch: ++ current CaMeL Point ;
rank: 802
score: 98.53909737723214
patch: ++ iter ; - iter ;
rank: 802
score: 98.52906799316406
patch: int current = n CaMeL C ;
rank: 802
score: 98.48118373325893
patch: ++ [ ++ 0 ] ;
rank: 802
score: 98.41311645507812
patch: double iter = null ;
rank: 802
score: 98.17012532552083
patch: assert iter >= 0 ;
rank: 802
score: 97.125
patch: int 1 /
rank: 803
score: 98.78069458007812
patch: if ( ) { ++ n CaMeL C ;
rank: 803
score: 98.66488647460938
patch: state = current CaMeL Point [ 0 ] ;
rank: 803
score: 98.53846086774554
patch: i ; ++ - iter ;
rank: 803
score: 98.52442932128906
patch: final double n CaMeL C ++ ;
rank: 803
score: 98.47919573102679
patch: else ; ++ iter ; }
rank: 803
score: 98.4122314453125
patch: / / * * * /
rank: 803
score: 97.11312866210938
patch: } iter else
rank: 804
score: 98.69633265904018
patch: final ; ++ iter * /
rank: 804
score: 98.66454467773437
patch: Iterator n CaMeL R = current CaMeL Point .
rank: 804
score: 98.47911725725446
patch: if ; * * * /
rank: 804
score: 98.40501185825893
patch: boolean converged = ( converged ;
rank: 804
score: 98.16200764973958
patch: i ++ ; ++ ;
rank: 804
score: 97.11038208007812
patch: ++ / ;
rank: 805
score: 98.77966918945313
patch: double [ ] current CaMeL Point = this ;
rank: 805
score: 98.69521077473958
patch: ++ iter * / ;
rank: 805
score: 98.639404296875
patch: int current CaMeL Point = null ;
rank: 805
score: 98.52080535888672
patch: Real CaMeL Matrix current CaMeL Point ;
rank: 805
score: 98.47872924804688
patch: / * / * /
rank: 805
score: 98.40422712053571
patch: int boolean converged = false ;
rank: 805
score: 98.16181030273438
patch: synchronized ( this )
rank: 805
score: 97.10906982421875
patch: int iter ++
rank: 806
score: 98.7760498046875
patch: Object [ ] current CaMeL Point = current ;
rank: 806
score: 98.69515991210938
patch: current = ++ iter ;
rank: 806
score: 98.66187879774306
patch: level = current CaMeL Point . length ;
rank: 806
score: 98.63908168247768
patch: ++ ++ n CaMeL C ;
rank: 806
score: 98.51957702636719
patch: double weight CaMeL Matrix = current ;
rank: 806
score: 98.40047781808036
patch: boolean ! converged = converged ;
rank: 806
score: 97.107421875
patch: Iterator iter ;
rank: 807
score: 98.661572265625
patch: result = new Block CaMeL Real CaMeL Matrix (
rank: 807
score: 98.5338846842448
patch: int iter ; else ;
rank: 807
score: 98.51944732666016
patch: int converged = n CaMeL R ;
rank: 807
score: 98.47612653459821
patch: ++ iter [ 0 ] ;
rank: 807
score: 98.39901733398438
patch: boolean converged = 0 ;
rank: 807
score: 98.1592305501302
patch: try { current = ;
rank: 807
score: 97.10394287109375
patch: ++ map ;
rank: 808
score: 98.69414605034723
patch: while ( iter < n CaMeL C )
rank: 808
score: 98.65164184570312
patch: < n CaMeL C ; ++ )
rank: 808
score: 98.52623494466145
patch: else * ++ iter ;
rank: 808
score: 98.5167236328125
patch: int 0 = n CaMeL C ;
rank: 808
score: 98.47553362165179
patch: / * * * ++ /
rank: 808
score: 98.39771379743304
patch: final int converged = true ;
rank: 808
score: 98.1482442220052
patch: n CaMeL C -- ;
rank: 808
score: 97.10340881347656
patch: ++ ; else
rank: 809
score: 98.69280327690973
patch: ++ iter * / * * * /
rank: 809
score: 98.64567057291667
patch: [ ] current CaMeL Point = current ;
rank: 809
score: 98.5146255493164
patch: int weight CaMeL Matrix = 0 ;
rank: 809
score: 98.47475179036458
patch: return ++ iter ; }
rank: 809
score: 98.39507184709821
patch: final int iter = $NUMBER$ ;
rank: 809
score: 98.13865152994792
patch: ++ iter + $NUMBER$ ;
rank: 809
score: 97.1032943725586
patch: int iter iter
rank: 810
score: 98.77034505208333
patch: a = current CaMeL Point . length ;
rank: 810
score: 98.64441935221355
patch: Object current = current ;
rank: 810
score: 98.51333618164062
patch: double n CaMeL C = current ;
rank: 810
score: 98.47354561941964
patch: else { break ; } }
rank: 810
score: 98.13058471679688
patch: int iter = iter )
rank: 810
score: 97.09978485107422
patch: iter ; *
rank: 811
score: 98.76820068359375
patch: final int CaMeL Value = n CaMeL C ;
rank: 811
score: 98.6923828125
patch: ++ iter ; / * ;
rank: 811
score: 98.39384242466518
patch: / * if ( converged ;
rank: 811
score: 98.12914021809895
patch: ++ iter == 0 ;
rank: 811
score: 97.09664916992188
patch: ++ do ;
rank: 812
score: 98.6345947265625
patch: if ( converged )
rank: 812
score: 98.5133768717448
patch: ++ 0 + iter ;
rank: 812
score: 98.51038360595703
patch: int length = n CaMeL C ;
rank: 812
score: 98.47315325055804
patch: ++ iter ; if ; }
rank: 812
score: 98.39288330078125
patch: final if ( ! converged ;
rank: 812
score: 97.09647369384766
patch: ++ insert ;
rank: 813
score: 98.75594753689236
patch: ak = compute CaMeL Residuals ( ) ;
rank: 813
score: 98.68701171875
patch: ++ iter * / * ;
rank: 813
score: 98.50584193638393
patch: final double length = 0 ;
rank: 813
score: 98.1066385904948
patch: ++ iter - $NUMBER$ ;
rank: 813
score: 97.09615325927734
patch: ++ abs ;
rank: 814
score: 98.68449571397569
patch: ++ iter ; default : ++ iter ;
rank: 814
score: 98.63104248046875
patch: while ( ! converged ) {
rank: 814
score: 98.59266880580357
patch: current = weight CaMeL Matrix ;
rank: 814
score: 98.5038070678711
patch: int iter += n CaMeL C ;
rank: 814
score: 98.47165352957589
patch: this . ++ * iter ;
rank: 814
score: 98.09342447916667
patch: ++ iter == 1 ;
rank: 814
score: 97.09468841552734
patch: ++ ( ;
rank: 815
score: 98.68384467230902
patch: ++ iter ; current = iter ; }
rank: 815
score: 98.58882141113281
patch: int weight CaMeL Matrix = current ;
rank: 815
score: 98.49156697591145
patch: ++ * ] iter ;
rank: 815
score: 98.47129603794643
patch: else { ++ * * /
rank: 815
score: 98.38782755533855
patch: boolean converged = ) {
rank: 815
score: 98.09102172851563
patch: changed = true ;
rank: 815
score: 97.09171295166016
patch: ++ else ;
rank: 816
score: 98.62124294704861
patch: y = current CaMeL Point . ) ;
rank: 816
score: 98.49131556919643
patch: if ( ! converged ; ;
rank: 816
score: 98.4843241373698
patch: ++ ++ - iter ;
rank: 816
score: 98.47103445870536
patch: ++ ++ [ 0 ] ;
rank: 816
score: 98.38441975911458
patch: int iter = converged ;
rank: 816
score: 98.08773803710938
patch: ++ iter && iter ;
rank: 816
score: 97.08372497558594
patch: boolean iter ;
rank: 817
score: 98.68144989013672
patch: ++ n CaMeL C ; while ;
rank: 817
score: 98.61861419677734
patch: synchronized ( target CaMeL Values ) {
rank: 817
score: 98.08669026692708
patch: assert iter != null ;
rank: 817
score: 97.0823974609375
patch: iter else
rank: 818
score: 98.61341857910156
patch: equals ( current CaMeL Point ) ;
rank: 818
score: 98.57763671875
patch: ++ n CaMeL R ; {
rank: 818
score: 98.46637573242188
patch: / * * ;
rank: 818
score: 98.38184465680804
patch: if ( checker == null )
rank: 818
score: 98.08614095052083
patch: synchronized ( iter ) {
rank: 818
score: 97.06204986572266
patch: ; iter ;
rank: 819
score: 98.61094835069444
patch: state = get CaMeL Value ( ) ;
rank: 819
score: 98.57548522949219
patch: if ( converged < 0 ) {
rank: 819
score: 98.47446114676339
patch: final int current = 0 ;
rank: 819
score: 98.46567789713542
patch: / * = iter ;
rank: 819
score: 98.46305338541667
patch: if 0 ++ iter ;
rank: 819
score: 98.37644449869792
patch: for ( ; ) {
rank: 819
score: 98.08573404947917
patch: iter = ++ iter ;
rank: 819
score: 97.06139373779297
patch: iter ; /
rank: 820
score: 98.67682647705078
patch: ++ iter * / / * /
rank: 820
score: 98.60824245876736
patch: s = current CaMeL Point . length ;
rank: 820
score: 98.46256801060268
patch: i += n CaMeL C ;
rank: 820
score: 98.46206665039062
patch: / * ; * /
rank: 820
score: 98.45977783203125
patch: / ] iter ++ ;
rank: 820
score: 98.0821533203125
patch: ++ iter 1 ; }
rank: 820
score: 97.06121826171875
patch: int 0 /
rank: 821
score: 98.37436930338542
patch: / / * * /
rank: 821
score: 98.0748799641927
patch: System . arraycopy ( ;
rank: 821
score: 97.0572509765625
patch: iter ; ++
rank: 822
score: 98.72340223524306
patch: final String current CaMeL Point = current ;
rank: 822
score: 98.67435709635417
patch: ++ iter ; if ( ! ; ;
rank: 822
score: 98.60399034288194
patch: w = current CaMeL Point . length ;
rank: 822
score: 98.56706019810268
patch: if ( current CaMeL Point .
rank: 822
score: 98.45853678385417
patch: else { return ; }
rank: 822
score: 98.45631917317708
patch: ++ iter ; 0 ;
rank: 822
score: 98.37408447265625
patch: ++ iter ; / / else
rank: 822
score: 97.0543212890625
patch: ++ format ;
rank: 823
score: 98.60089111328125
patch: -- n CaMeL C ;
rank: 823
score: 98.45562744140625
patch: else { ++ 1 ;
rank: 823
score: 98.36934988839286
patch: int -- iter = 0 ;
rank: 823
score: 98.06741333007812
patch: input = ++ iter ;
rank: 823
score: 97.05305480957031
patch: int ++ ;
rank: 824
score: 98.59837510850694
patch: n CaMeL C = current CaMeL Point ;
rank: 824
score: 98.45277622767857
patch: final double start = 0 ;
rank: 824
score: 98.4515869140625
patch: ++ 1 iter ;
rank: 824
score: 98.44960530598958
patch: ++ [ $NUMBER$ ] ;
rank: 824
score: 98.35475667317708
patch: ++ iter ; { {
rank: 824
score: 97.05252838134766
patch: if iter ++
rank: 825
score: 98.4388427734375
patch: int iter ; try ;
rank: 825
score: 98.05322875976563
patch: ++ iter ] ;
rank: 825
score: 97.04869842529297
patch: try ; iter
rank: 826
score: 98.54080636160714
patch: current = n CaMeL R ;
rank: 826
score: 98.44789632161458
patch: / * ++ * /
rank: 826
score: 98.43701171875
patch: Integer iter + iter ;
rank: 826
score: 98.35164388020833
patch: double weight CaMeL Matrix ;
rank: 826
score: 97.03962707519531
patch: long 1 ;
rank: 827
score: 98.66826714409723
patch: while ( iter < n CaMeL R )
rank: 827
score: 97.03791046142578
patch: ++ exit ;
rank: 828
score: 98.70956759982639
patch: final int iter = weight CaMeL Matrix ;
rank: 828
score: 98.66810825892857
patch: ++ iter ; * / ;
rank: 828
score: 98.59408230251736
patch: li = current CaMeL Point . length ;
rank: 828
score: 98.5140380859375
patch: current = current . current ;
rank: 828
score: 98.43526785714286
patch: final int converged = 0 ;
rank: 828
score: 98.42850748697917
patch: else { ++ * ;
rank: 828
score: 98.04446411132812
patch: context = ++ iter ;
rank: 828
score: 97.03672790527344
patch: /
rank: 829
score: 98.66339111328125
patch: ++ iter ; ++ iter * /
rank: 829
score: 98.59402126736111
patch: this = current CaMeL Point . length ;
rank: 829
score: 98.508056640625
patch: current CaMeL Point = current ;
rank: 829
score: 98.4263203938802
patch: else iter * ++ ;
rank: 829
score: 98.34073893229167
patch: ++ iter ; finally {
rank: 829
score: 98.04261271158855
patch: while ( iter ) {
rank: 829
score: 97.03231811523438
patch: if iter iter
rank: 830
score: 98.59037272135417
patch: < n CaMeL R ; ++ ) {
rank: 830
score: 98.43104771205357
patch: final int length = 0 ;
rank: 830
score: 98.4251708984375
patch: ++ 1 - iter ;
rank: 830
score: 98.39454142252605
patch: if ( < 0 ;
rank: 830
score: 98.0399678548177
patch: if ( iter ) {
rank: 830
score: 97.02964782714844
patch: / ; else
rank: 831
score: 98.70302327473958
patch: b = get CaMeL Point ( ) ;
rank: 831
score: 98.66118621826172
patch: ++ iter - iter + 1 ;
rank: 831
score: 98.59031168619792
patch: while ( converged ) {
rank: 831
score: 98.50592041015625
patch: ++ iter ; ) {
rank: 831
score: 98.42323811848958
patch: i ; ++ iter ;
rank: 831
score: 98.3942159016927
patch: else { ++ value ;
rank: 831
score: 98.32645670572917
patch: int iter = $STRING$ ;
rank: 831
score: 98.0396016438802
patch: ++ iter = 1 ;
rank: 831
score: 97.028564453125
patch: ++ * *
rank: 832
score: 98.66102818080357
patch: ++ iter ; iter = ;
rank: 832
score: 98.42610677083333
patch: int start = 0 ;
rank: 832
score: 98.3923848470052
patch: , * * * ;
rank: 832
score: 98.03919474283855
patch: ++ iter >= 0 ;
rank: 832
score: 97.02653503417969
patch: ++ ++ ;
rank: 833
score: 98.65332794189453
patch: ++ iter ; / * iter ;
rank: 833
score: 98.58635796440973
patch: list = current CaMeL Point . length ;
rank: 833
score: 98.42513602120536
patch: final double [ ] ++ ;
rank: 833
score: 98.4167989095052
patch: else return ++ iter ;
rank: 833
score: 98.3084004720052
patch: boolean solve = false ;
rank: 833
score: 98.03357950846355
patch: ++ iter != null ;
rank: 833
score: 97.02459716796875
patch: else iter
rank: 834
score: 98.65330505371094
patch: ++ n CaMeL C * iter ;
rank: 834
score: 98.58466254340277
patch: state = current CaMeL Point . 0 ;
rank: 834
score: 98.42459542410714
patch: final double [ ] -- ;
rank: 834
score: 98.4135030110677
patch: ++ this . iter ;
rank: 834
score: 98.3894775390625
patch: else { else {
rank: 834
score: 98.03238932291667
patch: final ++ iter ; ;
rank: 834
score: 97.01220703125
patch: ++ continue ;
rank: 835
score: 98.42449951171875
patch: final int n CaMeL R ;
rank: 835
score: 98.38875325520833
patch: if ( != null ;
rank: 835
score: 98.26908365885417
patch: / / * / {
rank: 835
score: 98.0322509765625
patch: j = iter ;
rank: 835
score: 97.01165008544922
patch: long 0 ;
rank: 836
score: 98.58110894097223
patch: other = current CaMeL Point . length ;
rank: 836
score: 98.38836059570312
patch: } return iter ;
rank: 836
score: 98.26467895507812
patch: boolean converged : false ;
rank: 836
score: 98.0304463704427
patch: assert current != null ;
rank: 836
score: 97.01009368896484
patch: ++ value .
rank: 837
score: 98.68510437011719
patch: current = current ; ++ iter ;
rank: 837
score: 98.58003743489583
patch: o = current CaMeL Point . length ;
rank: 837
score: 98.41984049479167
patch: final int ++ iter ;
rank: 837
score: 98.40842895507812
patch: iter * ++ ;
rank: 837
score: 98.37318115234375
patch: , * * /
rank: 837
score: 98.26355997721355
patch: / * * / {
rank: 837
score: 98.02698771158855
patch: final int iter = ;
rank: 837
score: 97.00450134277344
patch: Iterator iter ++
rank: 838
score: 98.63295200892857
patch: current = iter + 1 ;
rank: 838
score: 98.57666778564453
patch: synchronized ( current CaMeL Point ) {
rank: 838
score: 98.40732828776042
patch: int iter : iter ;
rank: 838
score: 98.37155151367188
patch: ++ [ iter ] ;
rank: 838
score: 98.02345784505208
patch: ++ iter ; null ;
rank: 838
score: 97.00384521484375
patch: if iter :
rank: 839
score: 98.45346505301339
patch: final boolean converged = null ;
rank: 839
score: 98.41264125279018
patch: final double current = 0 ;
rank: 839
score: 98.4070536295573
patch: ++ * - iter ;
rank: 839
score: 98.36964925130208
patch: else { ++ start ;
rank: 839
score: 98.26051839192708
patch: boolean converged = iter ;
rank: 839
score: 98.01549275716145
patch: final ; ++ iter )
rank: 839
score: 96.99647521972656
patch: while iter ;
rank: 840
score: 98.41082763671875
patch: b = current CaMeL Point ;
rank: 840
score: 98.36832682291667
patch: / * += iter ;
rank: 840
score: 98.26050821940105
patch: for ( boolean ) {
rank: 840
score: 98.01348876953125
patch: final ++ iter ; }
rank: 840
score: 96.98991394042969
patch: continue ; ;
rank: 841
score: 98.61281040736607
patch: ++ iter = ++ iter ;
rank: 841
score: 98.57439507378473
patch: [ ] current CaMeL Point = 0 ;
rank: 841
score: 98.451171875
patch: ++ ++ n CaMeL R ;
rank: 841
score: 98.40816824776786
patch: final double [ ] 0 ;
rank: 841
score: 98.40279134114583
patch: ++ $NUMBER$ - iter ;
rank: 841
score: 98.36520385742188
patch: ++ * * * /
rank: 841
score: 98.2600809733073
patch: boolean checker = true ;
rank: 841
score: 98.01239013671875
patch: event = ++ iter ;
rank: 841
score: 96.98468017578125
patch: ++ Double ;
rank: 842
score: 98.57376437717014
patch: i = current CaMeL Point . 0 ;
rank: 842
score: 98.39952596028645
patch: ++ - iter ; ;
rank: 842
score: 98.35985310872395
patch: if ( iter ; }
rank: 842
score: 98.00081380208333
patch: try { iter = ;
rank: 842
score: 96.97837829589844
patch: iter -- ;
rank: 843
score: 98.57291412353516
patch: synchronized ( n CaMeL C ) {
rank: 843
score: 98.39879150390625
patch: i ; ++ ;
rank: 843
score: 98.39691162109375
patch: int current CaMeL Point ;
rank: 843
score: 98.35889689127605
patch: else return iter ; }
rank: 843
score: 98.24530029296875
patch: double [ ] current ;
rank: 843
score: 96.97813415527344
patch: ++ equals ;
rank: 844
score: 98.56968858506944
patch: current CaMeL Point = current CaMeL Point .
rank: 844
score: 98.3982645670573
patch: ++ iter ; * ;
rank: 844
score: 98.2434794108073
patch: int current = current ;
rank: 844
score: 96.97346496582031
patch: ++ set ;
rank: 845
score: 98.66498565673828
patch: int iter = weight CaMeL Matrix ;
rank: 845
score: 98.56812879774306
patch: iter = current CaMeL Point . 0 ;
rank: 845
score: 98.41782052176339
patch: current = current = current ;
rank: 845
score: 98.35489908854167
patch: else { ++ max ;
rank: 845
score: 97.99868774414062
patch: j = iter . ;
rank: 845
score: 96.9560546875
patch: int list ;
rank: 846
score: 98.23856608072917
patch: int iter = ) {
rank: 846
score: 97.99861653645833
patch: current CaMeL Point ++ ;
rank: 846
score: 96.95553588867188
patch: * ; iter
rank: 847
score: 98.57298932756696
patch: ++ iter * / iter ;
rank: 847
score: 98.56620279947917
patch: < n CaMeL C ; -- ) {
rank: 847
score: 98.41645050048828
patch: / * /
rank: 847
score: 98.38043212890625
patch: int ++ iter = 1 ;
rank: 847
score: 98.35367838541667
patch: if ( < 0 )
rank: 847
score: 98.23575846354167
patch: double converged = false ;
rank: 847
score: 97.9955342610677
patch: pos = - 1 ;
rank: 847
score: 96.95375061035156
patch: ++ Integer iter
rank: 848
score: 98.65338134765625
patch: residuals CaMeL Weights [ iter ] ;
rank: 848
score: 98.40936279296875
patch: ++ n CaMeL C ; .
rank: 848
score: 98.3868408203125
patch: catch iter ; ++ ;
rank: 848
score: 98.3480224609375
patch: if ++ ! iter ;
rank: 848
score: 97.9944559733073
patch: ++ iter ; current ;
rank: 848
score: 96.95283508300781
patch: this ; iter
rank: 849
score: 98.65252685546875
patch: residuals CaMeL Weights [ current CaMeL Point ;
rank: 849
score: 98.57073974609375
patch: current = iter . iter ;
rank: 849
score: 98.38517252604167
patch: / ; int iter ;
rank: 849
score: 98.34366861979167
patch: else { return iter ;
rank: 849
score: 98.22648111979167
patch: while ( ! converged ;
rank: 849
score: 97.99373372395833
patch: ++ iter ^ iter ;
rank: 849
score: 96.95258331298828
patch: int start ;
rank: 850
score: 98.65201568603516
patch: check CaMeL Parameters ( current ) ;
rank: 850
score: 98.56363351004464
patch: final ; ++ iter ++ ;
rank: 850
score: 98.53665924072266
patch: < n CaMeL R ; ) {
rank: 850
score: 98.36934988839286
patch: final int 0 = 0 ;
rank: 850
score: 98.22206624348958
patch: int [ ] current ;
rank: 850
score: 97.99339803059895
patch: ++ iter - 0 ;
rank: 850
score: 96.94701385498047
patch: ++ sum ;
rank: 851
score: 98.53656005859375
patch: i = ++ iter ;
rank: 851
score: 98.39457397460937
patch: current = null ;
rank: 851
score: 98.38037109375
patch: i * ++ ; ;
rank: 851
score: 98.36580113002232
patch: final String current CaMeL Point ;
rank: 851
score: 98.218994140625
patch: double current = 0 ;
rank: 851
score: 97.99315795898437
patch: switch ( iter )
rank: 851
score: 96.946044921875
patch: if iter *
rank: 852
score: 98.55868094308036
patch: final ; current = iter ;
rank: 852
score: 98.53579711914062
patch: long current CaMeL Point = current ;
rank: 852
score: 98.36332484654018
patch: iter = n CaMeL C ;
rank: 852
score: 98.33890787760417
patch: ++ < 0 > ;
rank: 852
score: 98.2162577311198
patch: double iter = 1 ;
rank: 852
score: 97.99229939778645
patch: i = - 1 ;
rank: 852
score: 96.93678283691406
patch: ++ log ;
rank: 853
score: 98.5555419921875
patch: ++ iter * ++ ;
rank: 853
score: 98.53534698486328
patch: synchronized ( weight CaMeL Matrix ) {
rank: 853
score: 98.36324637276786
patch: final double n CaMeL R ;
rank: 853
score: 98.33248901367188
patch: if ( false ;
rank: 853
score: 98.20225016276042
patch: boolean converged = current ;
rank: 853
score: 97.99034118652344
patch: i ++ ;
rank: 853
score: 96.93473815917969
patch: 
rank: 854
score: 98.53372192382812
patch: if ( converged && converged ) {
rank: 854
score: 98.35767822265625
patch: i = 0 ;
rank: 854
score: 98.33213297526042
patch: if ++ * iter ;
rank: 854
score: 98.20005289713542
patch: int converged = null ;
rank: 854
score: 97.98661295572917
patch: int current = iter ;
rank: 854
score: 96.93290710449219
patch: Iterator 0 ;
rank: 855
score: 98.63240814208984
patch: ++ [ ] current = current ;
rank: 855
score: 98.53372192382812
patch: Object current CaMeL Point = 0 ;
rank: 855
score: 98.36543782552083
patch: / else ++ iter ;
rank: 855
score: 98.3251953125
patch: } return ++ iter ;
rank: 855
score: 97.98593139648438
patch: ++ iter & iter ;
rank: 855
score: 96.93281555175781
patch: -= iter ;
rank: 856
score: 98.37148030598958
patch: ++ weight CaMeL Matrix ;
rank: 856
score: 98.36441040039062
patch: int iter + ++ ;
rank: 856
score: 98.32407633463542
patch: else { * * /
rank: 856
score: 98.19168701171876
patch: if ( ) {
rank: 856
score: 97.98363240559895
patch: c = ++ iter ;
rank: 856
score: 96.93174743652344
patch: iter / ;
rank: 857
score: 98.53495279947917
patch: ++ iter > 0 ;
rank: 857
score: 98.53077697753906
patch: n CaMeL C = ++ iter ;
rank: 857
score: 98.3643798828125
patch: final int iter ++ ;
rank: 857
score: 98.32374064127605
patch: assert iter == 0 ;
rank: 857
score: 98.19057210286458
patch: boolean checker = converged ;
rank: 857
score: 97.9823710123698
patch: assert iter >= iter ;
rank: 857
score: 96.92671203613281
patch: else iter iter
rank: 858
score: 98.53391810825893
patch: ++ iter ; final int ;
rank: 858
score: 98.35547746930804
patch: i += n CaMeL R ;
rank: 858
score: 98.3184305826823
patch: / * = 0 ;
rank: 858
score: 98.18860473632813
patch: ++ ! converged ;
rank: 858
score: 97.9822998046875
patch: scope = ++ iter ;
rank: 858
score: 96.92288208007812
patch: ++ $NUMBER$ *
rank: 859
score: 98.53294154575893
patch: final ; current = current ;
rank: 859
score: 98.36326090494792
patch: ++ * int iter ;
rank: 859
score: 98.3170166015625
patch: else { / * ;
rank: 859
score: 97.98108927408855
patch: for ( ; break ;
rank: 859
score: 96.85214233398438
patch: / iter
rank: 860
score: 98.52912248883929
patch: if ( iter <= iter )
rank: 860
score: 98.35152762276786
patch: int ++ iter = false ;
rank: 860
score: 98.32455444335938
patch: ++ iter ; / ?
rank: 860
score: 98.316650390625
patch: if ( iter ; ;
rank: 860
score: 98.18064371744792
patch: double iter = current ;
rank: 860
score: 97.9758056640625
patch: current = iter ;
rank: 860
score: 96.83870442708333
patch: else ;
rank: 861
score: 98.60770416259766
patch: if ( ! converged && ) {
rank: 861
score: 98.52235412597656
patch: Iterator iter = n CaMeL C ;
rank: 861
score: 98.35609944661458
patch: return ( ++ iter ;
rank: 861
score: 98.35128784179688
patch: int length = 0 ;
rank: 861
score: 98.31451416015625
patch: if ( == null ;
rank: 861
score: 97.97515869140625
patch: n CaMeL C ++ ;
rank: 861
score: 96.77970377604167
patch: { iter
rank: 862
score: 98.35256958007812
patch: catch ++ iter ; ;
rank: 862
score: 98.3503173828125
patch: int ++ iter ;
rank: 862
score: 98.3111572265625
patch: else { / * /
rank: 862
score: 98.16646321614583
patch: double iter = true ;
rank: 862
score: 97.97230021158855
patch: j = - 1 ;
rank: 862
score: 96.6813252766927
patch: break ;
rank: 863
score: 98.52471051897321
patch: ++ iter ; current . ;
rank: 863
score: 98.50308227539062
patch: long n CaMeL C = 0 ;
rank: 863
score: 98.35158284505208
patch: ++ start + iter ;
rank: 863
score: 98.3110580444336
patch: } else {
rank: 863
score: 98.30450439453125
patch: current = current ; ;
rank: 863
score: 98.16563924153645
patch: long iter = 0 ;
rank: 863
score: 97.97047119140625
patch: state = iter ;
rank: 863
score: 96.64711507161458
patch: ; iter
rank: 864
score: 98.49921417236328
patch: Integer current CaMeL Point = 0 ;
rank: 864
score: 98.34653727213542
patch: long iter + iter ;
rank: 864
score: 98.30881754557292
patch: else { ++ in ;
rank: 864
score: 98.16475423177083
patch: double current CaMeL Point ;
rank: 864
score: 97.9703369140625
patch: ++ iter 1 ; ;
rank: 864
score: 96.63569641113281
patch: ++
rank: 865
score: 98.51828438895089
patch: ++ iter ; for ; )
rank: 865
score: 98.49413190569196
patch: y = current CaMeL Point .
rank: 865
score: 98.34622628348214
patch: int n CaMeL C ++ ;
rank: 865
score: 98.34552001953125
patch: ++ value ; iter ;
rank: 865
score: 98.15720621744792
patch: ++ iter ; false ;
rank: 865
score: 97.96858723958333
patch: current = iter . ;
rank: 865
score: 96.4974365234375
patch: ++ else
rank: 866
score: 98.51047770182292
patch: ++ iter ; for ;
rank: 866
score: 98.34298706054688
patch: ++ - - iter ;
rank: 866
score: 98.30673217773438
patch: if ( ++ iter ;
rank: 866
score: 98.15565999348958
patch: for ( double ) {
rank: 866
score: 97.9685302734375
patch: if ( false )
rank: 866
score: 96.44101969401042
patch: ++ }
rank: 867
score: 98.50925990513393
patch: ++ iter ; if ; ;
rank: 867
score: 98.34345354352679
patch: final int iter = $STRING$ ;
rank: 867
score: 98.15396118164062
patch: ++ iter ; / *
rank: 867
score: 97.9636739095052
patch: System . out . ;
rank: 867
score: 96.43944549560547
patch: }
rank: 868
score: 98.50898088727679
patch: ++ iter * / / ;
rank: 868
score: 98.48701695033482
patch: < n CaMeL C ; }
rank: 868
score: 98.34269496372768
patch: final boolean converged = 0 ;
rank: 868
score: 98.2992451985677
patch: * * * * /
rank: 868
score: 98.26143798828124
patch: System . else {
rank: 868
score: 98.1468505859375
patch: int weight CaMeL Matrix ;
rank: 868
score: 97.96089680989583
patch: while ; ++ iter ;
rank: 868
score: 96.41267903645833
patch: continue ;
rank: 869
score: 98.5754165649414
patch: ++ n CaMeL C ; / /
rank: 869
score: 98.50196184430804
patch: ++ n CaMeL C $NUMBER$ ;
rank: 869
score: 98.48584747314453
patch: < n CaMeL C ; ++ ;
rank: 869
score: 98.33331298828125
patch: } int iter ++ ;
rank: 869
score: 98.292236328125
patch: else { continue ; }
rank: 869
score: 98.14278157552083
patch: ! converged = false ;
rank: 869
score: 97.95916748046875
patch: j = ++ iter ;
rank: 869
score: 96.30136108398438
patch: } ;
rank: 870
score: 98.50191824776786
patch: ++ iter * / ; ;
rank: 870
score: 98.33986118861607
patch: final double value = 0 ;
rank: 870
score: 98.3280029296875
patch: ++ iter ; else *
rank: 870
score: 98.28895060221355
patch: else { ++ false ;
rank: 870
score: 98.13882446289062
patch: boolean iter = true ;
rank: 870
score: 97.9564921061198
patch: Disposer . ++ iter ;
rank: 870
score: 96.27615356445312
patch: ++ do
rank: 871
score: 98.5015869140625
patch: final ++ iter ; final ;
rank: 871
score: 98.47257995605469
patch: long current CaMeL Point = iter ;
rank: 871
score: 98.32462565104167
patch: super . ++ iter ;
rank: 871
score: 98.2798360188802
patch: ++ * ( iter ;
rank: 871
score: 98.25072224934895
patch: if ( checker ) {
rank: 871
score: 96.24277750651042
patch: * ;
rank: 872
score: 98.50027901785714
patch: final ; ++ iter ; ;
rank: 872
score: 98.47224426269531
patch: i = 0 ; ++ iter ;
rank: 872
score: 98.32989501953125
patch: if ( ! converged ; }
rank: 872
score: 98.32459513346355
patch: ++ iter ; value ;
rank: 872
score: 98.27799682617187
patch: ( ++ iter ;
rank: 872
score: 98.1302734375
patch: / * / {
rank: 872
score: 97.94556274414063
patch: temp = iter ;
rank: 872
score: 96.20639038085938
patch: iter /
rank: 873
score: 98.49916294642857
patch: current = current . ++ ;
rank: 873
score: 98.32725306919643
patch: final Object current = current ;
rank: 873
score: 98.32423909505208
patch: int iter ++ ; else
rank: 873
score: 98.27271525065105
patch: else return null ; }
rank: 873
score: 98.12598673502605
patch: double iter = $NUMBER$ ;
rank: 873
score: 96.17786661783855
patch: System ;
rank: 874
score: 98.49217878069196
patch: ++ iter / * * /
rank: 874
score: 98.45745849609375
patch: = current CaMeL Point . length ;
rank: 874
score: 98.32677205403645
patch: int n CaMeL C ;
rank: 874
score: 98.32152303059895
patch: ++ name + iter ;
rank: 874
score: 98.27183024088542
patch: if ; * * /
rank: 874
score: 98.12249755859375
patch: ++ ! ! converged ;
rank: 874
score: 97.91011962890624
patch: result = iter ;
rank: 874
score: 96.17225138346355
patch: iterator ;
rank: 875
score: 98.49168178013393
patch: ++ n CaMeL C + ;
rank: 875
score: 98.45398712158203
patch: Integer current CaMeL Point = current ;
rank: 875
score: 98.26974487304688
patch: / * / * ;
rank: 875
score: 97.909326171875
patch: final int iter ;
rank: 875
score: 96.14676920572917
patch: iter }
rank: 876
score: 98.49052211216518
patch: current = ++ iter ; ;
rank: 876
score: 98.44427490234375
patch: if ( converged ) ++ iter ;
rank: 876
score: 98.31992594401042
patch: ++ iter + 0 ;
rank: 876
score: 98.26950073242188
patch: } else { if ;
rank: 876
score: 98.20432535807292
patch: ++ iter ; converged ;
rank: 876
score: 98.11463419596355
patch: ++ ++ iter ; {
rank: 876
score: 97.90679321289062
patch: while ( true )
rank: 876
score: 96.13594563802083
patch: ++ iter
rank: 877
score: 98.5509262084961
patch: final double [ ] = current ;
rank: 877
score: 98.3187255859375
patch: this ; ++ iter ;
rank: 877
score: 98.31806291852679
patch: final boolean solve = false ;
rank: 877
score: 98.26763916015625
patch: / * * ; /
rank: 877
score: 98.20157877604167
patch: current = current 1 ;
rank: 877
score: 98.11451212565105
patch: boolean converged += false ;
rank: 877
score: 97.89625244140625
patch: ++ iter $NUMBER$ ;
rank: 877
score: 96.13590494791667
patch: logger ;
rank: 878
score: 98.55023193359375
patch: current = null ; ++ iter ;
rank: 878
score: 98.31689453125
patch: m ; ++ iter ;
rank: 878
score: 98.31663295200893
patch: while ( converged ; ) {
rank: 878
score: 98.2650655110677
patch: if ++ iter ; }
rank: 878
score: 98.19589233398438
patch: ++ current CaMeL Point .
rank: 878
score: 98.10543212890624
patch: converged = false ;
rank: 878
score: 97.891845703125
patch: if ( true )
rank: 878
score: 96.1247049967448
patch: ++ *
rank: 879
score: 98.41792297363281
patch: break ; }
rank: 879
score: 98.31656494140626
patch: ++ iter iter ;
rank: 879
score: 98.2627665201823
patch: else { iter ++ ;
rank: 879
score: 98.19211832682292
patch: if ( current ) {
rank: 879
score: 97.87700805664062
patch: input = iter ;
rank: 879
score: 96.05838012695312
patch: this ;
rank: 880
score: 98.47254289899554
patch: ++ iter ; final Integer ;
rank: 880
score: 98.4158935546875
patch: -- iter ; ++ ;
rank: 880
score: 98.2626241048177
patch: / * ? * /
rank: 880
score: 98.19039916992188
patch: ++ iter ; $STRING$ ;
rank: 880
score: 98.06633911132812
patch: / * / /
rank: 880
score: 97.87044067382813
patch: ++ iter 0 ;
rank: 880
score: 96.0287577311198
patch: int iter
rank: 881
score: 98.2815185546875
patch: iter { ++ ;
rank: 881
score: 98.26076253255208
patch: if ++ < 0 ;
rank: 881
score: 98.0502685546875
patch: b = null ;
rank: 881
score: 97.87042846679688
patch: first = true ;
rank: 881
score: 96.01287841796875
patch: try
rank: 882
score: 98.47077287946429
patch: ++ iter ; ; final ;
rank: 882
score: 98.27716674804688
patch: i { ++ ;
rank: 882
score: 98.26066080729167
patch: Object iter ; while ;
rank: 882
score: 97.86602172851562
patch: changed = false ;
rank: 882
score: 96.0084228515625
patch: try ;
rank: 883
score: 98.47054617745536
patch: ++ n CaMeL C * /
rank: 883
score: 98.40299769810268
patch: [ ] current = current ;
rank: 883
score: 98.2595926920573
patch: ++ ++ iter ; }
rank: 883
score: 98.17612711588542
patch: ++ iter * * /
rank: 883
score: 98.03563232421875
patch: b = current ;
rank: 883
score: 96.00271606445312
patch: start ;
rank: 884
score: 98.25831095377605
patch: / * : * /
rank: 884
score: 98.16309611002605
patch: current = current ; }
rank: 884
score: 97.84498291015625
patch: pos = 0 ;
rank: 884
score: 95.98039245605469
patch: else
rank: 885
score: 98.2577616373698
patch: / * ++ * ;
rank: 885
score: 98.25712890625
patch: Integer iter ++ ;
rank: 885
score: 98.2516581217448
patch: int 0 = 0 ;
rank: 885
score: 97.98080444335938
patch: if ( ( (
rank: 885
score: 95.9479471842448
patch: super ;
rank: 886
score: 98.2577412923177
patch: else { if ; }
rank: 886
score: 98.2438720703125
patch: value { ++ ;
rank: 886
score: 98.2384033203125
patch: int max = 0 ;
rank: 886
score: 97.8366455078125
patch: found = true ;
rank: 886
score: 95.94160970052083
patch: / else
rank: 887
score: 98.46170479910714
patch: ++ iter ; while ; ;
rank: 887
score: 98.3907979329427
patch: while ( ! converged )
rank: 887
score: 98.23624674479167
patch: double start = 0 ;
rank: 887
score: 98.23271484375
patch: } int iter ;
rank: 887
score: 97.970654296875
patch: / / else {
rank: 887
score: 95.91771443684895
patch: Iterator iter
rank: 888
score: 98.37972586495536
patch: -- iter ; / * /
rank: 888
score: 98.25590006510417
patch: ++ * * * ;
rank: 888
score: 97.81785888671875
patch: ++ iter . ;
rank: 888
score: 95.90090942382812
patch: } else
rank: 889
score: 98.45997837611607
patch: current = iter + iter ;
rank: 889
score: 97.95771484375
patch: boolean converged ++ ;
rank: 889
score: 97.81669921875
patch: if ( ! ;
rank: 889
score: 95.8788350423177
patch: Logger ;
rank: 890
score: 98.45863647460938
patch: ++ iter * ;
rank: 890
score: 98.22007446289062
patch: i iter ++ ;
rank: 890
score: 97.95181884765626
patch: final double iter ;
rank: 890
score: 97.80967407226562
patch: j = 0 ;
rank: 890
score: 95.85972086588542
patch: / /
rank: 891
score: 98.21533813476563
patch: j * ++ ;
rank: 891
score: 97.94537353515625
patch: boolean converged ;
rank: 891
score: 97.79808959960937
patch: old = iter ;
rank: 891
score: 95.81785074869792
patch: ++ super
rank: 892
score: 98.2192626953125
patch: else return iter ;
rank: 892
score: 98.20217895507812
patch: double length = 0 ;
rank: 892
score: 98.12994384765625
patch: final double [ ] [
rank: 892
score: 97.79683227539063
patch: root = iter ;
rank: 892
score: 95.8065897623698
patch: / ++
rank: 893
score: 98.35982259114583
patch: return current CaMeL Point ;
rank: 893
score: 98.20673828125
patch: return null ; }
rank: 893
score: 97.930078125
patch: boolean converged -- ;
rank: 893
score: 97.7940673828125
patch: c = iter ;
rank: 894
score: 98.20247192382813
patch: , * * ;
rank: 894
score: 98.17847696940105
patch: final if ( converged ;
rank: 894
score: 97.78865356445313
patch: tmp = iter ;
rank: 894
score: 95.77561442057292
patch: iter *
rank: 895
score: 98.3549092610677
patch: -= n CaMeL C ;
rank: 895
score: 98.19369506835938
patch: ++ * * ;
rank: 895
score: 97.78448486328125
patch: final ;
rank: 895
score: 95.77435302734375
patch: final else
rank: 896
score: 98.43386840820312
patch: ++ iter ; new ;
rank: 896
score: 97.76918334960938
patch: x = iter ;
rank: 896
score: 95.75242106119792
patch: int 1
rank: 897
score: 98.4200948079427
patch: temp = ++ iter ;
rank: 897
score: 98.35163225446429
patch: if ( converged && converged )
rank: 897
score: 98.1900146484375
patch: int iter * ;
rank: 897
score: 98.1674072265625
patch: else { if ;
rank: 897
score: 97.8485107421875
patch: int < double ;
rank: 897
score: 97.7654296875
patch: pos = iter ;
rank: 897
score: 95.75099690755208
patch: * iter
rank: 898
score: 98.34874616350446
patch: n CaMeL C = 0 ;
rank: 898
score: 98.16097259521484
patch: else { }
rank: 898
score: 98.14798990885417
patch: int n CaMeL R ;
rank: 898
score: 97.84689331054688
patch: / * else {
rank: 898
score: 97.76477661132813
patch: key = iter ;
rank: 898
score: 95.74786376953125
patch: throw new
rank: 899
score: 98.3999532063802
patch: ++ iter % iter ;
rank: 899
score: 98.36650739397321
patch: b = weight CaMeL Matrix ;
rank: 899
score: 98.14756266276042
patch: if ( converged ; }
rank: 899
score: 98.0751953125
patch: current = 0 ;
rank: 899
score: 97.74867553710938
patch: ++ iter false ;
rank: 899
score: 95.74452718098958
patch: iterator iter
rank: 900
score: 98.34649658203125
patch: synchronized ( converged ) {
rank: 900
score: 98.1645263671875
patch: boolean iter ++ ;
rank: 900
score: 98.15462036132813
patch: / * ++ ;
rank: 900
score: 98.13669840494792
patch: double n CaMeL C ;
rank: 900
score: 97.82891235351562
patch: if ( current ;
rank: 900
score: 97.74857177734376
patch: final ; do {
rank: 900
score: 95.73436482747395
patch: return iter
rank: 901
score: 98.3958740234375
patch: ++ iter % $NUMBER$ ;
rank: 901
score: 98.34162248883929
patch: state = current CaMeL Point ;
rank: 901
score: 98.15336608886719
patch: / * ;
rank: 901
score: 98.12921142578125
patch: boolean iter = 0 ;
rank: 901
score: 97.8091064453125
patch: iter = null ;
rank: 901
score: 97.7460693359375
patch: first = false ;
rank: 901
score: 95.72981770833333
patch: ++ $NUMBER$
rank: 902
score: 98.3910420735677
patch: new ; ++ iter ;
rank: 902
score: 98.33744594029018
patch: < n CaMeL C ; )
rank: 902
score: 98.1615966796875
patch: ++ start ) ;
rank: 902
score: 98.13271484375
patch: ++ += iter ;
rank: 902
score: 98.11813354492188
patch: int iterator = 0 ;
rank: 902
score: 98.023095703125
patch: current = $STRING$ ;
rank: 902
score: 97.74525756835938
patch: previous = iter ;
rank: 902
score: 95.69314575195312
patch: return ;
rank: 903
score: 98.32999093191964
patch: state = n CaMeL C ;
rank: 903
score: 98.15938720703124
patch: synchronized ++ iter ;
rank: 903
score: 98.0075439453125
patch: if ( checker ;
rank: 903
score: 97.79605712890626
patch: / / try {
rank: 903
score: 97.7447265625
patch: final ; final ;
rank: 903
score: 95.6786600748698
patch: ++ /
rank: 904
score: 98.36440022786458
patch: current = current . ;
rank: 904
score: 98.32896205357143
patch: x = current CaMeL Point .
rank: 904
score: 98.07988891601562
patch: ++ * * /
rank: 904
score: 97.99673461914062
patch: current = this ;
rank: 904
score: 97.79006958007812
patch: b = false ;
rank: 904
score: 97.73930053710937
patch: i = iter ;
rank: 904
score: 95.67624918619792
patch: m ;
rank: 905
score: 98.32666015625
patch: entry = current ;
rank: 905
score: 98.07631225585938
patch: return this ; }
rank: 905
score: 97.7322509765625
patch: synchronized ( this ;
rank: 905
score: 95.66534423828125
patch: int 0
rank: 906
score: 98.15242919921874
patch: value . ++ ;
rank: 906
score: 98.10530598958333
patch: return weight CaMeL Matrix ;
rank: 906
score: 98.06353149414062
patch: * * * /
rank: 906
score: 97.7727783203125
patch: int iter -- ;
rank: 906
score: 95.66107177734375
patch: end ;
rank: 907
score: 98.1517578125
patch: ++ 0 iter ;
rank: 907
score: 97.94224243164062
patch: current CaMeL Point ;
rank: 907
score: 97.72047729492188
patch: final ++ iter )
rank: 907
score: 95.64072672526042
patch: result iter
rank: 908
score: 98.33671061197917
patch: ++ iter ; return ;
rank: 908
score: 98.14329833984375
patch: return new ++ ;
rank: 908
score: 98.09524536132812
patch: double value = 0 ;
rank: 908
score: 98.05721435546874
patch: ++ < 0 ;
rank: 908
score: 97.766259765625
patch: / / / /
rank: 908
score: 97.71959228515625
patch: synchronized ( iter )
rank: 908
score: 95.6268310546875
patch: org ;
rank: 909
score: 98.1384521484375
patch: for ++ iter ;
rank: 909
score: 98.04833984375
patch: if ( true ;
rank: 909
score: 97.92605590820312
patch: current CaMeL Point .
rank: 909
score: 97.76571044921874
patch: / * / }
rank: 909
score: 97.71885986328125
patch: ++ iter / *
rank: 909
score: 95.61789957682292
patch: default ;
rank: 910
score: 98.33096313476562
patch: ++ iter * / /
rank: 910
score: 98.13248291015626
patch: String iter ++ ;
rank: 910
score: 98.0928243001302
patch: final Real CaMeL Matrix ;
rank: 910
score: 97.76353759765625
patch: int iter = {
rank: 910
score: 97.71473999023438
patch: while ( false )
rank: 910
score: 95.60948181152344
patch: final
rank: 911
score: 98.31263224283855
patch: current ; ++ iter ;
rank: 911
score: 98.30074637276786
patch: while ( ! converged ; )
rank: 911
score: 98.08961995442708
patch: final int -- iter ;
rank: 911
score: 97.89337768554688
patch: current = false ;
rank: 911
score: 97.74393463134766
patch: int current ;
rank: 911
score: 97.7077880859375
patch: ++ iter true ;
rank: 911
score: 95.60281372070312
patch: ++ Math
rank: 912
score: 98.31070963541667
patch: ++ iter / iter ;
rank: 912
score: 98.2926534016927
patch: synchronized ( current ) {
rank: 912
score: 98.12744750976563
patch: / ] iter ;
rank: 912
score: 98.08908081054688
patch: if ( * converged ;
rank: 912
score: 98.02439880371094
patch: Object iter ;
rank: 912
score: 95.15679168701172
patch: return
rank: 913
score: 98.1264892578125
patch: j { ++ ;
rank: 913
score: 98.02394104003906
patch: else { ;
rank: 913
score: 97.85983276367188
patch: ++ checker ;
rank: 913
score: 97.6980712890625
patch: found = false ;
rank: 913
score: 95.15116882324219
patch: {
rank: 914
score: 98.30971272786458
patch: ++ iter ] = ;
rank: 914
score: 97.73463134765625
patch: boolean converged = ;
rank: 914
score: 97.69755249023437
patch: removed = true ;
rank: 914
score: 95.03399658203125
patch: throw
rank: 915
score: 98.26904907226563
patch: i = current ;
rank: 915
score: 98.11742553710937
patch: iter = iter ;
rank: 915
score: 98.08760579427083
patch: double converged = 0 ;
rank: 915
score: 98.01144409179688
patch: else return null ;
rank: 915
score: 97.73318481445312
patch: ++ converged ;
rank: 915
score: 94.89488220214844
patch: ;
rank: 916
score: 98.2928975423177
patch: ++ iter ; double ;
rank: 916
score: 98.10833740234375
patch: key { ++ ;
rank: 916
score: 97.84728393554687
patch: iter = current ;
rank: 916
score: 97.69088134765624
patch: project . ++ ;
rank: 916
score: 94.72816467285156
patch: count
rank: 917
score: 98.29252115885417
patch: double iter = iter ;
rank: 917
score: 98.25999145507812
patch: result = null ;
rank: 917
score: 98.10810546875
patch: else iter * ;
rank: 917
score: 98.08107503255208
patch: double iter = $STRING$ ;
rank: 917
score: 97.84490966796875
patch: System . finally {
rank: 917
score: 97.723974609375
patch: / * / ;
rank: 917
score: 97.69014282226563
patch: cur = iter ;
rank: 917
score: 94.70124816894531
patch: iterator
rank: 918
score: 98.25539143880208
patch: result = null ; }
rank: 918
score: 98.08843994140625
patch: Token iter ++ ;
rank: 918
score: 97.99915161132813
patch: return false ; }
rank: 918
score: 97.72147216796876
patch: final double current ;
rank: 918
score: 97.68353271484375
patch: context . ++ ;
rank: 918
score: 94.63578796386719
patch: public
rank: 919
score: 98.29146321614583
patch: ++ iter ; int ;
rank: 919
score: 98.2545674641927
patch: if ( current CaMeL Point
rank: 919
score: 98.07764689127605
patch: if ( converged ; {
rank: 919
score: 97.99637451171876
patch: , ++ iter ;
rank: 919
score: 97.718017578125
patch: double < double ;
rank: 919
score: 97.68280639648438
patch: prev = iter ;
rank: 919
score: 94.55819702148438
patch: *
rank: 920
score: 98.2827860514323
patch: final ; iter = ;
rank: 920
score: 98.25443725585937
patch: return current ; }
rank: 920
score: 98.0706278483073
patch: int converged = 1 ;
rank: 920
score: 97.99473571777344
patch: else { else
rank: 920
score: 97.68134765625
patch: final ; if ;
rank: 920
score: 94.54655456542969
patch: finally
rank: 921
score: 98.2709452311198
patch: r = ++ iter ;
rank: 921
score: 98.25249633789062
patch: -- iter ; }
rank: 921
score: 98.07738647460937
patch: for iter ++ ;
rank: 921
score: 97.80040283203125
patch: / / break ;
rank: 921
score: 97.70548095703126
patch: boolean ! converged ;
rank: 921
score: 97.68123168945313
patch: try ++ iter ;
rank: 921
score: 94.45559692382812
patch: m
rank: 922
score: 98.2669677734375
patch: ++ iter ; default :
rank: 922
score: 98.077099609375
patch: j ; ++ ;
rank: 922
score: 98.06763712565105
patch: if ( converged ; ;
rank: 922
score: 97.9839111328125
patch: ? * * /
rank: 922
score: 97.79979858398437
patch: int iter = )
rank: 922
score: 97.679248046875
patch: try { current ;
rank: 922
score: 97.65692138671875
patch: boolean converged {
rank: 922
score: 94.16020202636719
patch: end
rank: 923
score: 98.26369222005208
patch: ++ iter >= iter ;
rank: 923
score: 98.2505594889323
patch: -- iter ; * /
rank: 923
score: 97.797802734375
patch: current = true ;
rank: 923
score: 97.66959228515626
patch: reader . ++ ;
rank: 923
score: 97.65056610107422
patch: double current ;
rank: 923
score: 94.08970642089844
patch: next
rank: 924
score: 98.26296997070312
patch: ++ iter % * /
rank: 924
score: 98.24997965494792
patch: Node current = current ;
rank: 924
score: 98.06171875
patch: ++ start ++ ;
rank: 924
score: 97.97703857421875
patch: else { ; }
rank: 924
score: 97.79655151367187
patch: final / * /
rank: 924
score: 97.66851806640625
patch: j = iter )
rank: 924
score: 94.04774475097656
patch: default
rank: 925
score: 98.24344889322917
patch: sleep ( 0 ) ;
rank: 925
score: 97.9689453125
patch: else { / ;
rank: 925
score: 97.59477233886719
patch: / finally {
rank: 925
score: 94.04100036621094
patch: f
rank: 926
score: 98.24032592773438
patch: Object current = null ;
rank: 926
score: 98.04937133789062
patch: i ++ ; else
rank: 926
score: 97.96777954101563
patch: if ; * /
rank: 926
score: 97.66023559570313
patch: ++ iter ) ;
rank: 926
score: 94.03715515136719
patch: num
rank: 927
score: 98.23995971679688
patch: += n CaMeL C ;
rank: 927
score: 98.04605102539062
patch: int iter * /
rank: 927
score: 97.78367309570312
patch: current = 1 ;
rank: 927
score: 97.65020141601562
patch: int iter = ;
rank: 927
score: 97.54503631591797
patch: double iter ;
rank: 927
score: 94.01516723632812
patch: in
rank: 928
score: 98.2563985188802
patch: iter = iter . ;
rank: 928
score: 98.04511108398438
patch: else int iter ;
rank: 928
score: 97.64541625976562
patch: pos = 1 ;
rank: 928
score: 97.52747344970703
patch: / / /
rank: 928
score: 93.96626281738281
patch: boolean
rank: 929
score: 98.2554423014323
patch: ++ iter & $NUMBER$ ;
rank: 929
score: 98.04376220703125
patch: i ++ ; ;
rank: 929
score: 97.95980224609374
patch: else { return ;
rank: 929
score: 97.64169921875
patch: start = iter ;
rank: 929
score: 93.94587707519531
patch: copy
rank: 930
score: 98.2540791829427
patch: final ; current = ;
rank: 930
score: 98.0422607421875
patch: this . iter ;
rank: 930
score: 97.97455444335938
patch: ak = null ;
rank: 930
score: 97.95550537109375
patch: ++ * iter /
rank: 930
score: 97.76353759765625
patch: / / / ;
rank: 930
score: 97.51437377929688
patch: int iter =
rank: 930
score: 93.93853759765625
patch: start
rank: 931
score: 98.2371826171875
patch: state = current ;
rank: 931
score: 97.947802734375
patch: Object $NUMBER$ * /
rank: 931
score: 97.6391845703125
patch: first = iter ;
rank: 931
score: 97.45611572265625
patch: try {
rank: 931
score: 93.9356689453125
patch: j
rank: 932
score: 98.24951171875
patch: ++ iter *= $NUMBER$ ;
rank: 932
score: 97.96770629882812
patch: ak = false ;
rank: 932
score: 97.7448486328125
patch: ++ iter ; .
rank: 932
score: 97.63837890625
patch: block = iter ;
rank: 932
score: 97.41879272460938
patch: } try {
rank: 932
score: 93.91383361816406
patch: result
rank: 933
score: 98.21793823242187
patch: -- -- iter ;
rank: 933
score: 97.94674072265624
patch: ak = current ;
rank: 933
score: 97.94161987304688
patch: , * ;
rank: 933
score: 97.74427032470703
patch: / / ;
rank: 933
score: 97.63817342122395
patch: if ;
rank: 933
score: 97.41816711425781
patch: int ) {
rank: 933
score: 93.91050720214844
patch: this
rank: 934
score: 98.24715169270833
patch: final double iter = ;
rank: 934
score: 98.02462158203124
patch: ++ iter ; *
rank: 934
score: 97.73862915039062
patch: ++ $NUMBER$ ] ;
rank: 934
score: 97.6369384765625
patch: Iterator iter = ;
rank: 934
score: 97.40691375732422
patch: / / else
rank: 934
score: 93.85035705566406
patch: remaining
rank: 935
score: 98.18291473388672
patch: return current ;
rank: 935
score: 97.93731079101562
patch: / * ; }
rank: 935
score: 97.93336181640625
patch: final double length ;
rank: 935
score: 97.73231506347656
patch: return null ;
rank: 935
score: 97.630078125
patch: done = true ;
rank: 935
score: 93.82415771484375
patch: ret
rank: 936
score: 98.23902384440105
patch: ++ iter = current ;
rank: 936
score: 98.0149658203125
patch: catch iter ++ ;
rank: 936
score: 97.9365478515625
patch: * * * ;
rank: 936
score: 97.89227294921875
patch: ++ iter ; )
rank: 936
score: 97.62307739257812
patch: final ; ;
rank: 936
score: 97.33921813964844
patch: ++ ) {
rank: 936
score: 93.7347412109375
patch: last
rank: 937
score: 98.01370849609376
patch: result { ++ ;
rank: 937
score: 97.935595703125
patch: else { * ;
rank: 937
score: 97.6802978515625
patch: System . else
rank: 937
score: 97.32870483398438
patch: int converged ;
rank: 937
score: 93.67597961425781
patch: c
rank: 938
score: 98.21741739908855
patch: current = iter ; ;
rank: 938
score: 98.14571533203124
patch: state = 0 ;
rank: 938
score: 98.00802001953124
patch: i * * /
rank: 938
score: 97.93424682617187
patch: if ; * ;
rank: 938
score: 97.61524658203125
patch: curr = iter ;
rank: 938
score: 93.64944458007812
patch: System
rank: 939
score: 98.21604410807292
patch: while ; iter ++ ;
rank: 939
score: 98.13776245117188
patch: node = current ;
rank: 939
score: 98.00584106445312
patch: else ++ 1 ;
rank: 939
score: 97.78910319010417
patch: / *
rank: 939
score: 97.60782470703126
patch: match = true ;
rank: 939
score: 93.613525390625
patch: total
rank: 940
score: 98.1341796875
patch: state = null ;
rank: 940
score: 97.92939453125
patch: final Object iter ;
rank: 940
score: 97.78768310546874
patch: final double [ ]
rank: 940
score: 97.6055419921875
patch: tree = iter ;
rank: 940
score: 93.582763671875
patch: current
rank: 941
score: 98.20775349934895
patch: ++ iter *= iter ;
rank: 941
score: 97.92398681640626
patch: / * = ;
rank: 941
score: 97.85662231445312
patch: ++ iter ; final
rank: 941
score: 97.6044189453125
patch: p = iter ;
rank: 941
score: 93.55735778808594
patch: i
rank: 942
score: 98.2048848470052
patch: synchronized ( ++ iter ;
rank: 942
score: 97.25152587890625
patch: / / }
rank: 942
score: 93.55638122558594
patch: do
rank: 943
score: 98.20383707682292
patch: m = ++ iter ;
rank: 943
score: 98.11181640625
patch: state = false ;
rank: 943
score: 98.001708984375
patch: ++ start ) {
rank: 943
score: 97.60283813476562
patch: ++ iter ( ;
rank: 943
score: 97.22349548339844
patch: / / {
rank: 943
score: 93.55082702636719
patch: Iterator
rank: 944
score: 98.20156860351562
patch: cur = ++ iter ;
rank: 944
score: 98.10652465820313
patch: iter = 0 ;
rank: 944
score: 98.00050659179688
patch: throw new ) ;
rank: 944
score: 97.8924789428711
patch: } if ;
rank: 944
score: 97.60115966796874
patch: saved = iter ;
rank: 944
score: 97.2205810546875
patch: ++ iter :
rank: 944
score: 93.55018615722656
patch: logger
rank: 945
score: 98.1021728515625
patch: state = get CaMeL
rank: 945
score: 98.00028686523437
patch: else iter * /
rank: 945
score: 97.74179077148438
patch: int -- iter ;
rank: 945
score: 97.6001708984375
patch: i = 1 ;
rank: 945
score: 97.473876953125
patch: final else {
rank: 945
score: 97.20035552978516
patch: boolean converged .
rank: 945
score: 93.47945404052734
patch: size
rank: 946
score: 98.12073974609375
patch: ++ iter = ;
rank: 946
score: 98.09961547851563
patch: item = current ;
rank: 946
score: 97.87064361572266
patch: return this ;
rank: 946
score: 97.73990478515626
patch: residuals CaMeL Weights .
rank: 946
score: 97.59872436523438
patch: node = iter ;
rank: 946
score: 97.4693603515625
patch: * * /
rank: 946
score: 93.4757080078125
patch: super
rank: 947
score: 98.11422729492188
patch: if ( ; ;
rank: 947
score: 97.99652099609375
patch: finally ++ iter ;
rank: 947
score: 97.8622538248698
patch: finally {
rank: 947
score: 97.73499755859375
patch: int ++ 0 ;
rank: 947
score: 97.59700927734374
patch: j = 1 ;
rank: 947
score: 97.42926025390625
patch: System . }
rank: 947
score: 93.42166137695312
patch: mark
rank: 948
score: 98.07923583984375
patch: element = current ;
rank: 948
score: 97.75233154296875
patch: m = current ;
rank: 948
score: 97.59177856445312
patch: final ; break ;
rank: 948
score: 97.18992614746094
patch: boolean ) {
rank: 948
score: 93.41185760498047
patch: input
rank: 949
score: 98.074365234375
patch: ++ iter -- ;
rank: 949
score: 98.05474243164062
patch: -- ++ iter ;
rank: 949
score: 97.98973999023437
patch: int iter ; else
rank: 949
score: 97.72160034179687
patch: Iterator ( ) {
rank: 949
score: 97.38264973958333
patch: * /
rank: 949
score: 93.40208435058594
patch: pos
rank: 950
score: 98.03616943359376
patch: Iterator < double )
rank: 950
score: 97.98793334960938
patch: return false ; ;
rank: 950
score: 97.7378662109375
patch: b = $STRING$ ;
rank: 950
score: 97.71671752929687
patch: final int 1 ;
rank: 950
score: 97.5865234375
patch: r = iter ;
rank: 950
score: 97.18325805664062
patch: / / *
rank: 950
score: 93.36344909667969
patch: max
rank: 951
score: 98.03021850585938
patch: tmp = null ;
rank: 951
score: 97.73212890625
patch: a = current ;
rank: 951
score: 97.71497802734375
patch: / * break ;
rank: 951
score: 97.5818115234375
patch: i = iter )
rank: 951
score: 97.32365417480469
patch: * / /
rank: 951
score: 97.16047668457031
patch: double iter =
rank: 951
score: 93.340087890625
patch: My@@
rank: 952
score: 97.73125
patch: b = this ;
rank: 952
score: 97.57818603515625
patch: event = iter ;
rank: 952
score: 93.3232650756836
patch: s
rank: 953
score: 98.01002197265625
patch: state = ) {
rank: 953
score: 97.69054158528645
patch: / ?
rank: 953
score: 97.14102172851562
patch: if ( {
rank: 953
score: 93.30517578125
patch: l
rank: 954
score: 97.974267578125
patch: tmp = current ;
rank: 954
score: 97.91169738769531
patch: i * ;
rank: 954
score: 97.63967895507812
patch: / * else
rank: 954
score: 97.43174743652344
patch: return new ;
rank: 954
score: 97.27485656738281
patch: for ( int
rank: 954
score: 97.1287841796875
patch: final try {
rank: 954
score: 93.29024505615234
patch: old
rank: 955
score: 98.0056396484375
patch: ++ iter + ;
rank: 955
score: 97.95638427734374
patch: while ( converged )
rank: 955
score: 93.26266479492188
patch: :
rank: 956
score: 98.0046630859375
patch: this . ++ ;
rank: 956
score: 97.87522888183594
patch: return false ;
rank: 956
score: 97.12638092041016
patch: boolean checker ;
rank: 956
score: 93.25900268554688
patch: Logger
rank: 957
score: 97.9537109375
patch: previous = current ;
rank: 957
score: 97.84262084960938
patch: value ++ ;
rank: 957
score: 97.67305755615234
patch: , iter ;
rank: 957
score: 97.33509826660156
patch: i -- ;
rank: 957
score: 97.22111511230469
patch: / * }
rank: 957
score: 97.12075805664062
patch: final double <
rank: 957
score: 93.22769165039062
patch: @
rank: 958
score: 97.66670227050781
patch: int value ;
rank: 958
score: 97.11933135986328
patch: / * *
rank: 958
score: 93.2264175415039
patch: value
rank: 959
score: 97.8675765991211
patch: if ( ;
rank: 959
score: 97.80078125
patch: Token iter ;
rank: 959
score: 97.66082000732422
patch: , * /
rank: 959
score: 97.2031021118164
patch: / > ;
rank: 959
score: 97.11783599853516
patch: try { {
rank: 959
score: 93.22180938720703
patch: number
rank: 960
score: 97.9384765625
patch: other = current ;
rank: 960
score: 97.65625
patch: current ++ ;
rank: 960
score: 97.30300903320312
patch: if ( )
rank: 960
score: 97.25993347167969
patch: final ; }
rank: 960
score: 97.10352325439453
patch: if ( (
rank: 960
score: 93.19587707519531
patch: sub
rank: 961
score: 97.93719482421875
patch: o = current ;
rank: 961
score: 97.75424194335938
patch: i * /
rank: 961
score: 97.08929443359375
patch: $STRING$ .
rank: 961
score: 93.16205596923828
patch: after
rank: 962
score: 97.75191497802734
patch: Integer iter ;
rank: 962
score: 97.60585021972656
patch: if ; }
rank: 962
score: 97.16900634765625
patch: / - ;
rank: 962
score: 96.93503824869792
patch: do {
rank: 962
score: 93.14967346191406
patch: list
rank: 963
score: 97.93270874023438
patch: ret = null ;
rank: 963
score: 97.27569580078125
patch: ++ else {
rank: 963
score: 97.17300415039062
patch: context = ;
rank: 963
score: 93.13935852050781
patch: internal
rank: 964
score: 97.928466796875
patch: -- iter ; {
rank: 964
score: 97.83246459960938
patch: current . ++ ;
rank: 964
score: 97.5877456665039
patch: } else ;
rank: 964
score: 97.17160034179688
patch: ++ iter $NUMBER$
rank: 964
score: 93.13796997070312
patch: b
rank: 965
score: 97.92218017578125
patch: resource = current ;
rank: 965
score: 93.12796020507812
patch: skip
rank: 966
score: 97.69645690917969
patch: j ++ ;
rank: 966
score: 97.56512451171875
patch: int length ;
rank: 966
score: 96.75160725911458
patch: ) {
rank: 966
score: 93.10301208496094
patch: p
rank: 967
score: 97.80108642578125
patch: ++ iter - ;
rank: 967
score: 97.55226135253906
patch: else ; ;
rank: 967
score: 97.14486694335938
patch: result = ;
rank: 967
score: 96.88877360026042
patch: if (
rank: 967
score: 96.6751708984375
patch: System .
rank: 967
score: 93.09716796875
patch: out
rank: 968
score: 97.90617065429687
patch: while ( ) {
rank: 968
score: 97.21328735351562
patch: final int {
rank: 968
score: 96.4909159342448
patch: false ;
rank: 968
score: 93.05528259277344
patch: it
rank: 969
score: 97.72050476074219
patch: current = ;
rank: 969
score: 97.22734832763672
patch: final / /
rank: 969
score: 97.21284484863281
patch: / ? ;
rank: 969
score: 97.12100219726562
patch: j = ;
rank: 969
score: 93.05352783203125
patch: obj
rank: 970
score: 97.89528198242188
patch: state = converged ;
rank: 970
score: 97.59784698486328
patch: iter * ;
rank: 970
score: 97.22579956054688
patch: final * /
rank: 970
score: 97.18687438964844
patch: continue ; }
rank: 970
score: 97.10462188720703
patch: if ; ;
rank: 970
score: 96.68198649088542
patch: int CaMeL
rank: 970
score: 93.04194641113281
patch: int
rank: 971
score: 97.61109161376953
patch: final double ;
rank: 971
score: 97.58168029785156
patch: return 0 ;
rank: 971
score: 97.52345275878906
patch: else return ;
rank: 971
score: 97.0937728881836
patch: try { ;
rank: 971
score: 96.39600626627605
patch: current ;
rank: 971
score: 93.0384750366211
patch: pop
rank: 972
score: 97.5425033569336
patch: iter = ;
rank: 972
score: 97.2225570678711
patch: int * /
rank: 972
score: 97.14622497558594
patch: / $NUMBER$ ;
rank: 972
score: 97.09001922607422
patch: final final ;
rank: 972
score: 93.03486633300781
patch: found
rank: 973
score: 97.88616943359375
patch: result = current ;
rank: 973
score: 97.57210540771484
patch: iter * /
rank: 973
score: 97.22162628173828
patch: / 1 .
rank: 973
score: 97.07078552246094
patch: ++ iter 1
rank: 973
score: 96.29209391276042
patch: b ;
rank: 973
score: 93.02538299560547
patch: offset
rank: 974
score: 97.55384826660156
patch: String iter ;
rank: 974
score: 97.13365936279297
patch: / ? {
rank: 974
score: 96.28727213541667
patch: for (
rank: 974
score: 93.02201843261719
patch: cp
rank: 975
score: 97.06123352050781
patch: System . ;
rank: 975
score: 96.25968424479167
patch: data .
rank: 975
score: 93.01764678955078
patch: chunk
rank: 976
score: 97.74754333496094
patch: -- 0 ;
rank: 976
score: 97.5353012084961
patch: key ++ ;
rank: 976
score: 97.12200927734375
patch: final double [
rank: 976
score: 97.05787150065105
patch: while ;
rank: 976
score: 96.31333414713542
patch: current =
rank: 976
score: 93.01084899902344
patch: get
rank: 977
score: 97.47126770019531
patch: return ; }
rank: 977
score: 97.20694732666016
patch: double length ;
rank: 977
score: 96.22962443033855
patch: boolean }
rank: 977
score: 93.00880432128906
patch: x
rank: 978
score: 97.51679229736328
patch: Node iter ;
rank: 978
score: 97.47130584716797
patch: int max ;
rank: 978
score: 97.46942138671875
patch: long ++ ;
rank: 978
score: 96.28810628255208
patch: synchronized (
rank: 978
score: 96.20717366536458
patch: / :
rank: 978
score: 92.99998474121094
patch: prev
rank: 979
score: 97.51358032226562
patch: start ++ ;
rank: 979
score: 96.27977498372395
patch: { {
rank: 979
score: 96.19462076822917
patch: matrix .
rank: 979
score: 92.99783325195312
patch: e
rank: 980
score: 97.68611907958984
patch: >= 0 ;
rank: 980
score: 97.51213073730469
patch: f ++ ;
rank: 980
score: 97.4301986694336
patch: return true ;
rank: 980
score: 96.13037109375
patch: int }
rank: 980
score: 92.9912109375
patch: r
rank: 981
score: 97.4819107055664
patch: k ++ ;
rank: 981
score: 96.33048502604167
patch: I ;
rank: 981
score: 92.99055480957031
patch: index
rank: 982
score: 97.41853332519531
patch: context ++ ;
rank: 982
score: 97.37030792236328
patch: new ; ;
rank: 982
score: 96.28385416666667
patch: new ;
rank: 982
score: 96.24412027994792
patch: int {
rank: 982
score: 92.9888916015625
patch: self
rank: 983
score: 97.51277923583984
patch: -- 1 ;
rank: 983
score: 97.4039535522461
patch: * * ;
rank: 983
score: 97.29973602294922
patch: new ++ ;
rank: 983
score: 96.27573649088542
patch: update ;
rank: 983
score: 92.95063781738281
patch: t
rank: 984
score: 97.46484375
patch: assert false ;
rank: 984
score: 97.39253234863281
patch: if ; else
rank: 984
score: 96.20496622721355
patch: input ;
rank: 984
score: 96.20084635416667
patch: final int
rank: 984
score: 96.04095458984375
patch: ++ {
rank: 984
score: 92.92913818359375
patch: curr
rank: 985
score: 97.46440124511719
patch: result ++ ;
rank: 985
score: 96.03867594401042
patch: boolean {
rank: 985
score: 92.92680358886719
patch: initial
rank: 986
score: 96.1697285970052
patch: old ;
rank: 986
score: 96.15724690755208
patch: logger .
rank: 986
score: 96.0369873046875
patch: null ;
rank: 986
score: 92.91466522216797
patch: error
rank: 987
score: 96.93827311197917
patch: get CaMeL
rank: 987
score: 96.14817301432292
patch: Log .
rank: 987
score: 96.02850341796875
patch: int <
rank: 987
score: 92.87693786621094
patch: abs
rank: 988
score: 97.4470443725586
patch: char iter ;
rank: 988
score: 97.19552612304688
patch: double ++ ;
rank: 988
score: 96.8260498046875
patch: m }
rank: 988
score: 96.2183125813802
patch: / 1
rank: 988
score: 96.16086832682292
patch: synchronized ;
rank: 988
score: 92.86295318603516
patch: context
rank: 989
score: 97.42015075683594
patch: m ++ ;
rank: 989
score: 97.19503021240234
patch: temp = ;
rank: 989
score: 92.86103820800781
patch: stop
rank: 990
score: 97.02154541015625
patch: , ;
rank: 990
score: 92.85523986816406
patch: position
rank: 991
score: 97.16712188720703
patch: c = ;
rank: 991
score: 96.67965698242188
patch: ( (
rank: 991
score: 96.1571044921875
patch: / 0
rank: 991
score: 96.13531494140625
patch: ( ;
rank: 991
score: 92.84938049316406
patch: equals
rank: 992
score: 97.13694763183594
patch: while ; ;
rank: 992
score: 96.12556966145833
patch: state ;
rank: 992
score: 92.82743835449219
patch: original
rank: 993
score: 96.61973063151042
patch: state =
rank: 993
score: 96.11079915364583
patch: result ;
rank: 993
score: 92.78694152832031
patch: fix
rank: 994
score: 96.10812377929688
patch: switch ;
rank: 994
score: 94.17633056640625
patch: ?
rank: 994
score: 92.78424072265625
patch: line
rank: 995
score: 96.67760213216145
patch: i ;
rank: 995
score: 96.10469563802083
patch: block ;
rank: 995
score: 92.77693176269531
patch: -
rank: 996
score: 92.77320861816406
patch: state
rank: 997
score: 96.4954325358073
patch: finally ;
rank: 997
score: 96.08430989583333
patch: this .
rank: 997
score: 92.75137329101562
patch: h
rank: 998
score: 96.4910176595052
patch: catch ;
rank: 998
score: 92.75011444091797
patch: min
rank: 999
score: 96.05563354492188
patch: throw ;
rank: 999
score: 94.90214538574219
patch: long
rank: 999
score: 93.67943572998047
patch: ak
rank: 999
score: 92.74686431884766
patch: key
rank: 1000
score: 94.802001953125
patch: Object
rank: 1000
score: 93.72528839111328
patch: double
rank: 1000
score: 92.74665069580078
patch: removed
