rank: 1
score: 99.93098449707031
patch: out . write ( $STRING$ ) ;
rank: 1
score: 98.8337158203125
patch: get > i >
rank: 1
score: 98.46368408203125
patch: public Exception State
rank: 1
score: 98.35099792480469
patch: public public public
rank: 1
score: 98.04246012369792
patch: > i > i
rank: 1
score: 97.93256378173828
patch: public
rank: 2
score: 99.67772081163194
patch: public out . write ( $STRING$ ) ;
rank: 2
score: 99.58741251627605
patch: void out ( ) ;
rank: 2
score: 99.56217651367187
patch: out . write . write ( $STRING$ ) ;
rank: 2
score: 98.674560546875
patch: get >
rank: 2
score: 98.42549896240234
patch: public Exception Exception
rank: 2
score: 98.32706451416016
patch: public public set
rank: 2
score: 97.89567057291667
patch: > length > i
rank: 2
score: 97.79067993164062
patch: void
rank: 3
score: 99.4899169921875
patch: public static out . write ( $STRING$ ) ;
rank: 3
score: 99.48809814453125
patch: out out . write ( $STRING$ ) ;
rank: 3
score: 99.47609456380208
patch: out . write ( $STRING$ ) ; ;
rank: 3
score: 99.44629584418402
patch: out . write ( $STRING$ ) ) ;
rank: 3
score: 98.66733805338542
patch: for >
rank: 3
score: 98.314453125
patch: public public
rank: 3
score: 97.7774658203125
patch: get > i > i
rank: 3
score: 97.66659545898438
patch: public void
rank: 4
score: 99.48659104567308
patch: public out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 4
score: 99.455810546875
patch: out . write ( $STRING$ + $STRING$ ) ;
rank: 4
score: 99.42723388671875
patch: public abstract out . write ( $STRING$ ) ;
rank: 4
score: 99.42107391357422
patch: public void out ( $STRING$ ) ;
rank: 4
score: 99.40842013888889
patch: public out . write ( $STRING$ ) {
rank: 4
score: 98.6187255859375
patch: add > i >
rank: 4
score: 98.31539154052734
patch: public Exception null
rank: 4
score: 98.23046112060547
patch: public public add
rank: 4
score: 97.74415079752605
patch: catch > catch >
rank: 4
score: 96.96351623535156
patch: protected
rank: 5
score: 99.46842447916667
patch: out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 5
score: 99.44203879616477
patch: out . write ( byte [ ] $STRING$ ) ;
rank: 5
score: 99.41332397460937
patch: public out . write ( String $STRING$ ) ;
rank: 5
score: 99.38983764648438
patch: out . out . write ( $STRING$ ) ;
rank: 5
score: 98.5845718383789
patch: get > ]
rank: 5
score: 98.2002665201823
patch: public set
rank: 5
score: 98.12374114990234
patch: public null Exception
rank: 5
score: 97.73250325520833
patch: > i > Index
rank: 5
score: 96.89768473307292
patch: protected void
rank: 6
score: 99.4303866299716
patch: out . write ( ) throws IO CaMeL Exception ;
rank: 6
score: 99.40688650948661
patch: public void out ( ) ;
rank: 6
score: 98.54982503255208
patch: add >
rank: 6
score: 98.11334228515625
patch: public State State
rank: 6
score: 97.696044921875
patch: catch > i >
rank: 6
score: 96.8844223022461
patch: public public void
rank: 7
score: 99.42547607421875
patch: out . write ( byte [ ] ) ;
rank: 7
score: 99.41883433948864
patch: out . write ( $STRING$ * / $STRING$ ) ;
rank: 7
score: 99.39961751302083
patch: void out . write ( $STRING$ ) ;
rank: 7
score: 99.38114624023437
patch: out . write ( $STRING$ ) ; ) ;
rank: 7
score: 99.35222710503473
patch: String out . write ( $STRING$ ) ;
rank: 7
score: 98.51168060302734
patch: private get >
rank: 7
score: 98.13033294677734
patch: public synchronized <UNK>
rank: 7
score: 98.02960205078125
patch: public Exception Stack
rank: 7
score: 97.67971801757812
patch: > i > else
rank: 7
score: 96.87054443359375
patch: private void
rank: 8
score: 99.4184061686198
patch: out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 8
score: 99.41043853759766
patch: out . write ( byte ) ;
rank: 8
score: 99.37461635044643
patch: void out ( $STRING$ ) ;
rank: 8
score: 99.35770263671876
patch: public out . write ( $STRING$ ) ) ;
rank: 8
score: 99.35049438476562
patch: public synchronized out . write ( $STRING$ ) ;
rank: 8
score: 98.45956420898438
patch: private for >
rank: 8
score: 98.12549591064453
patch: public public get
rank: 8
score: 98.0132548014323
patch: public Exception
rank: 8
score: 97.67860107421875
patch: > i >
rank: 8
score: 96.8593521118164
patch: private
rank: 9
score: 99.41323617788461
patch: public out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 9
score: 99.38381125710227
patch: out . write ( $STRING$ + ( $STRING$ ) ;
rank: 9
score: 99.35397338867188
patch: public out . write ( ) ;
rank: 9
score: 99.34983520507812
patch: out . write ( $STRING$ , $STRING$ ) ;
rank: 9
score: 99.3350830078125
patch: out . write ( ) ;
rank: 9
score: 98.43824462890625
patch: private public public public
rank: 9
score: 98.12464141845703
patch: public public <UNK>
rank: 9
score: 97.9827880859375
patch: public Exception Error
rank: 9
score: 97.6544901529948
patch: catch > length >
rank: 9
score: 96.5662841796875
patch: >
rank: 10
score: 99.32838745117188
patch: out . write ( $STRING$ ) throws ) ;
rank: 10
score: 98.41325073242187
patch: private public get >
rank: 10
score: 98.12120564778645
patch: public add
rank: 10
score: 97.86467742919922
patch: public Error Exception
rank: 10
score: 97.6283935546875
patch: > catch >
rank: 10
score: 96.53011322021484
patch: public synchronized void
rank: 11
score: 99.37002563476562
patch: public out . write ( byte [ ] $STRING$ ) ;
rank: 11
score: 99.33715142144098
patch: private out . write ( $STRING$ ) ;
rank: 11
score: 98.3857666015625
patch: put > i >
rank: 11
score: 98.11644490559895
patch: public get
rank: 11
score: 97.86451721191406
patch: out State State
rank: 11
score: 97.62204996744792
patch: > length > length
rank: 11
score: 96.41976928710938
patch: Null
rank: 12
score: 99.39523550180289
patch: out . write ( $STRING$ ) . write ( $STRING$ ) ;
rank: 12
score: 99.3609952059659
patch: public out . write ( $STRING$ + $STRING$ ) ;
rank: 12
score: 99.33672417534723
patch: final out . write ( $STRING$ ) ;
rank: 12
score: 99.30716959635417
patch: public void write ( String $STRING$ ) ;
rank: 12
score: 98.37183227539063
patch: for > i >
rank: 12
score: 98.06562805175781
patch: public public run
rank: 12
score: 97.86367797851562
patch: public Exception Runtime
rank: 12
score: 97.61307779947917
patch: clear > i > i
rank: 12
score: 96.41830444335938
patch: public private void
rank: 13
score: 99.3538106282552
patch: public out . write ( ) throws IO CaMeL Exception ;
rank: 13
score: 99.2910489169034
patch: void out ( ) . write ( $STRING$ ) ;
rank: 13
score: 99.27499728732639
patch: $STRING$ out . write ( $STRING$ ) ;
rank: 13
score: 98.35691528320312
patch: get > arraycopy >
rank: 13
score: 98.05394744873047
patch: public public synchronized
rank: 13
score: 97.85363006591797
patch: public State Stack
rank: 13
score: 97.60019938151042
patch: > catch > i
rank: 13
score: 96.412109375
patch: public protected void
rank: 14
score: 99.35372585720486
patch: out . write ( String $STRING$ ) ;
rank: 14
score: 99.27303314208984
patch: write . write ( $STRING$ ) ;
rank: 14
score: 98.35011291503906
patch: private add >
rank: 14
score: 98.03553771972656
patch: public add >
rank: 14
score: 97.7874984741211
patch: public Exception Null
rank: 14
score: 97.57130940755208
patch: catch > arraycopy >
rank: 14
score: 96.3582051595052
patch: public Not
rank: 15
score: 99.35851287841797
patch: out . write . $STRING$ ) ;
rank: 15
score: 99.30549926757813
patch: String . [ ] out ( $STRING$ ) ;
rank: 15
score: 98.339990234375
patch: protected public public public
rank: 15
score: 98.00092315673828
patch: public public Stack
rank: 15
score: 97.76112365722656
patch: out
rank: 15
score: 97.5669657389323
patch: > size > i
rank: 15
score: 96.34394073486328
patch: public abstract void
rank: 16
score: 99.34352463942308
patch: protected out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 16
score: 99.29486762152777
patch: int out . write ( $STRING$ ) ;
rank: 16
score: 99.28459028764205
patch: public static out . write ( String $STRING$ ) ;
rank: 16
score: 99.26343994140625
patch: out . write ( $STRING$ ) throws $STRING$ ;
rank: 16
score: 98.32646942138672
patch: protected for >
rank: 16
score: 97.96567789713542
patch: public run
rank: 16
score: 97.67524719238281
patch: public Error State
rank: 16
score: 97.5668233235677
patch: > catch > >
rank: 16
score: 96.3419189453125
patch: I
rank: 17
score: 99.34118041992187
patch: public synchronized out . write ( $STRING$ ) {
rank: 17
score: 99.32152709960937
patch: public out . write ( $STRING$ + ) ;
rank: 17
score: 99.29456787109375
patch: public final out . write ( $STRING$ ) ;
rank: 17
score: 99.26025390625
patch: public out . write ( $STRING$ ) throws
rank: 17
score: 98.31217956542969
patch: get > Index
rank: 17
score: 97.95149230957031
patch: public public close
rank: 17
score: 97.56165313720703
patch: > i
rank: 17
score: 96.3309097290039
patch: public static void
rank: 18
score: 99.3236835186298
patch: private out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 18
score: 99.30962579900569
patch: public void out ( ) throws IO CaMeL Exception ;
rank: 18
score: 99.28648546006944
patch: public static void out ( $STRING$ ) ;
rank: 18
score: 99.25571511008523
patch: public abstract out . write ( String $STRING$ ) ;
rank: 18
score: 98.30372314453125
patch: private public add >
rank: 18
score: 97.66427612304688
patch: public null State
rank: 18
score: 97.55029907226563
patch: log > catch
rank: 19
score: 99.31727600097656
patch: public out . write ( $STRING$ )
rank: 19
score: 99.30398559570312
patch: out . write ( char [ ] ) ;
rank: 19
score: 99.27894422743056
patch: boolean out . write ( $STRING$ ) ;
rank: 19
score: 99.24409993489583
patch: protected out . write ( $STRING$ ) ;
rank: 19
score: 98.27646484375
patch: private private get >
rank: 19
score: 97.66004180908203
patch: public null null
rank: 19
score: 97.54305013020833
patch: catch > i case
rank: 19
score: 96.26875305175781
patch: protected public void
rank: 20
score: 99.30326080322266
patch: out . write ( String ) ;
rank: 20
score: 99.27259657118056
patch: Object out . write ( $STRING$ ) ;
rank: 20
score: 99.25028076171876
patch: public void out . write ( $STRING$ ) ;
rank: 20
score: 99.2436279296875
patch: public out . write ( $STRING$ ) { ;
rank: 20
score: 98.27587890625
patch: private protected get >
rank: 20
score: 97.85945892333984
patch: public public log
rank: 20
score: 97.65557861328125
patch: public State null
rank: 20
score: 97.5426534016927
patch: get > length > i
rank: 20
score: 96.25404357910156
patch: Not
rank: 21
score: 99.31403057391827
patch: private out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 21
score: 99.30110677083333
patch: public out . write ( $STRING$ ) throws IO CaMeL Exception
rank: 21
score: 99.23477935791016
patch: public out . write ( ) {
rank: 21
score: 98.25650024414062
patch: private public for >
rank: 21
score: 97.82093048095703
patch: public public private
rank: 21
score: 97.63392639160156
patch: public Runnable State
rank: 21
score: 97.53870646158855
patch: > length > Index
rank: 21
score: 96.222900390625
patch: public public Not
rank: 22
score: 99.30470628004808
patch: protected out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 22
score: 99.25491943359376
patch: out . write ( $STRING$ , $NUMBER$ ) ;
rank: 22
score: 99.23869493272569
patch: synchronized out . write ( $STRING$ ) ;
rank: 22
score: 99.22413940429688
patch: public out . write ( byte $STRING$ ) ;
rank: 22
score: 98.25112915039062
patch: get > catch >
rank: 22
score: 97.79694366455078
patch: public public while
rank: 22
score: 97.62260437011719
patch: private Exception State
rank: 22
score: 97.53204345703125
patch: add > i > i
rank: 22
score: 96.21120198567708
patch: abstract void
rank: 23
score: 99.30443115234375
patch: @ Override out . write ( $STRING$ ) ;
rank: 23
score: 99.25106811523438
patch: out . append ( $STRING$ ) ;
rank: 23
score: 99.23670959472656
patch: public void write ( $STRING$ ) ;
rank: 23
score: 99.22408718532986
patch: out . write ( $STRING$ $STRING$ ) ;
rank: 23
score: 98.2467269897461
patch: get > i
rank: 23
score: 97.79593658447266
patch: public run >
rank: 23
score: 97.59967803955078
patch: public Exception err
rank: 23
score: 97.52796427408855
patch: > length > ]
rank: 23
score: 96.20960998535156
patch: private public void
rank: 24
score: 99.2983627319336
patch: out . write ( char ) ;
rank: 24
score: 99.29471842447917
patch: public out . write ( $STRING$ * / $STRING$ ) ;
rank: 24
score: 99.23245239257812
patch: out . write ( $NUMBER$ ) ;
rank: 24
score: 99.21940104166667
patch: out . write ( $STRING$ ) ; .
rank: 24
score: 98.24369506835937
patch: set > i >
rank: 24
score: 97.79156494140625
patch: public public boolean
rank: 24
score: 97.59734344482422
patch: public null Error
rank: 24
score: 97.52500406901042
patch: catch > i ++
rank: 24
score: 96.12210083007812
patch: [ >
rank: 25
score: 99.29553900824652
patch: out . write ( $STRING$ + ) ;
rank: 25
score: 99.2920254794034
patch: out . write ( ) throws IO CaMeL Exception {
rank: 25
score: 99.20404052734375
patch: public out . write ( byte ) ;
rank: 25
score: 97.78553771972656
patch: public public print
rank: 25
score: 97.58589172363281
patch: private Exception Exception
rank: 25
score: 97.52262369791667
patch: catch > > i
rank: 25
score: 96.11833190917969
patch: fail > >
rank: 26
score: 99.29172973632812
patch: public out . write ( String str ) ;
rank: 26
score: 99.28905232747395
patch: public out . write ( ) throws IO CaMeL Exception {
rank: 26
score: 99.22891574435764
patch: public out . write ( out ) ;
rank: 26
score: 98.22660827636719
patch: add > ]
rank: 26
score: 97.73872884114583
patch: public close
rank: 26
score: 97.5511245727539
patch: public Error null
rank: 26
score: 97.5189208984375
patch: > i > null
rank: 26
score: 96.10462188720703
patch: $NUMBER$ >
rank: 27
score: 99.28692626953125
patch: out . write ( byte ) throws IO CaMeL Exception ;
rank: 27
score: 99.28253173828125
patch: out . write ( $STRING$ * / ) ;
rank: 27
score: 99.23429565429687
patch: out . write ( $STRING$ , 0 ) ;
rank: 27
score: 99.2252197265625
patch: void out ( out ) ;
rank: 27
score: 99.19873046875
patch: out . write ( out ) ;
rank: 27
score: 98.22311401367188
patch: private public public
rank: 27
score: 97.70693969726562
patch: public Stack
rank: 27
score: 97.54472351074219
patch: public Exception Not
rank: 27
score: 97.5175069173177
patch: > catch > else
rank: 27
score: 96.09835052490234
patch: public void throws
rank: 28
score: 99.28635475852273
patch: out . write ( char [ ] $STRING$ ) ;
rank: 28
score: 99.19710964626736
patch: out . write ( $STRING$ ) ; }
rank: 28
score: 98.21276245117187
patch: run > i >
rank: 28
score: 97.70177205403645
patch: public synchronized
rank: 28
score: 97.54170227050781
patch: public Error Error
rank: 28
score: 97.51211547851562
patch: try > i > i
rank: 28
score: 96.08342742919922
patch: get
rank: 29
score: 99.28599039713542
patch: out . write ( $STRING$ + out . length ) ;
rank: 29
score: 99.27203369140625
patch: public abstract void write ( ) throws IO CaMeL Exception ;
rank: 29
score: 99.22374267578125
patch: public void write ( final String $STRING$ ) ;
rank: 29
score: 99.22239854600694
patch: public static void write ( $STRING$ ) ;
rank: 29
score: 99.19642333984375
patch: public out out . write ( $STRING$ ) ;
rank: 29
score: 98.21115112304688
patch: remove > i >
rank: 29
score: 97.69880676269531
patch: public public int
rank: 29
score: 97.53898620605469
patch: public Null Exception
rank: 29
score: 97.5115254720052
patch: catch > i catch
rank: 29
score: 96.08128865559895
patch: public is
rank: 30
score: 99.27738813920455
patch: public out . write ( byte [ ] ) ;
rank: 30
score: 99.27166069878473
patch: out . write write ( $STRING$ ) ;
rank: 30
score: 99.21834309895833
patch: int out ( ) ;
rank: 30
score: 98.2083251953125
patch: do > i >
rank: 30
score: 97.68415069580078
patch: public public Thread
rank: 30
score: 97.50741577148438
patch: public Exception catch
rank: 30
score: 97.5060546875
patch: catch > >
rank: 30
score: 96.073974609375
patch: public new
rank: 31
score: 99.27723277698864
patch: out . write ( char ch [ ] ) ;
rank: 31
score: 99.21160888671875
patch: public int write ( $STRING$ ) ;
rank: 31
score: 99.20068969726563
patch: out . write ( $STRING$ , 1 ) ;
rank: 31
score: 99.18870035807292
patch: . out . write ( $STRING$ ) ;
rank: 31
score: 98.20238494873047
patch: protected add >
rank: 31
score: 97.68074798583984
patch: public set >
rank: 31
score: 97.49783325195312
patch: > i > out
rank: 31
score: 97.49156188964844
patch: @ Exception Exception
rank: 31
score: 96.06669616699219
patch: Nullable
rank: 32
score: 99.27117919921875
patch: out . write ( $STRING$ + ( $STRING$ ) ) ;
rank: 32
score: 99.25726787860577
patch: public out . write ( $STRING$ ) { return out ; }
rank: 32
score: 99.20833914620536
patch: private void out ( ) ;
rank: 32
score: 99.19961547851562
patch: private static out . write ( $STRING$ ) ;
rank: 32
score: 98.193359375
patch: has > i >
rank: 32
score: 97.67569732666016
patch: public public protected
rank: 32
score: 97.4935302734375
patch: catch > > else
rank: 32
score: 97.46781921386719
patch: out State Stack
rank: 32
score: 96.06320190429688
patch: > >
rank: 33
score: 99.20735677083333
patch: public abstract out . write ( ) ;
rank: 33
score: 99.192529296875
patch: out . write ( $STRING$ ) return $STRING$ ;
rank: 33
score: 98.1869873046875
patch: protected public add >
rank: 33
score: 97.65631103515625
patch: public synchronized public
rank: 33
score: 97.4911600748698
patch: > i > length
rank: 33
score: 97.46112823486328
patch: public Exception Runnable
rank: 33
score: 96.05946858723958
patch: public boolean
rank: 34
score: 99.26921251085069
patch: out . write ( String str ) ;
rank: 34
score: 99.19990844726563
patch: write . write . write ( $STRING$ ) ;
rank: 34
score: 99.19178355823864
patch: public out . write ( String int 1 ) ;
rank: 34
score: 98.18304443359375
patch: get > ] >
rank: 34
score: 97.6453857421875
patch: public public Runnable
rank: 34
score: 97.48971557617188
patch: > iterator > i
rank: 34
score: 97.45345306396484
patch: protected Exception Exception
rank: 35
score: 99.23844088040866
patch: out . write ( out . to CaMeL String ( ) ;
rank: 35
score: 99.198486328125
patch: public void write ( int String $STRING$ ) ;
rank: 35
score: 99.18916829427083
patch: public out . write ( String ) ;
rank: 35
score: 99.17744954427083
patch: public out . write . $STRING$ ) ;
rank: 35
score: 98.16892700195312
patch: private public run >
rank: 35
score: 97.63674926757812
patch: public public try
rank: 35
score: 97.48709106445312
patch: set > i > i
rank: 35
score: 97.45175170898438
patch: public Exception IO
rank: 35
score: 96.02299499511719
patch: < <UNK> <UNK>
rank: 36
score: 99.2639668782552
patch: out . write ( out . write ( $STRING$ ) ;
rank: 36
score: 99.236279296875
patch: public final out . write ( $STRING$ ) {
rank: 36
score: 99.19541713169643
patch: public int out ( ) ;
rank: 36
score: 99.18363952636719
patch: public void out ( $STRING$ ) {
rank: 36
score: 99.17383490668402
patch: out . write ( ] $STRING$ ) ;
rank: 36
score: 98.16102600097656
patch: private run >
rank: 36
score: 97.61094665527344
patch: public private public
rank: 36
score: 97.4790751139323
patch: catch > case >
rank: 36
score: 97.44631958007812
patch: / State Exception
rank: 37
score: 99.19444580078125
patch: public out . write ( String $STRING$ ) {
rank: 37
score: 99.18093872070312
patch: public out . write ( String name ) ;
rank: 37
score: 99.17294921875
patch: public out . write ( $STRING$ ) throws )
rank: 37
score: 98.16090393066406
patch: protected public public
rank: 37
score: 97.60685729980469
patch: out >
rank: 37
score: 97.47826131184895
patch: put > i > i
rank: 37
score: 97.44242095947266
patch: out Exception State
rank: 37
score: 95.95246124267578
patch: protected synchronized void
rank: 38
score: 99.19388156467014
patch: abstract out . write ( $STRING$ ) ;
rank: 38
score: 99.17974298650569
patch: public out . write ( $STRING$ ) return $STRING$ ;
rank: 38
score: 99.15385131835937
patch: public ) out . write ( $STRING$ ) ;
rank: 38
score: 98.1520263671875
patch: get > out >
rank: 38
score: 97.60612487792969
patch: public try >
rank: 38
score: 97.47677612304688
patch: log > case catch
rank: 38
score: 97.43766784667969
patch: private Exception null
rank: 38
score: 95.92564392089844
patch: private synchronized void
rank: 39
score: 99.2311299641927
patch: public abstract out . write . write ( $STRING$ ) ;
rank: 39
score: 99.19236061789773
patch: boolean . . out . write ( $STRING$ ) ;
rank: 39
score: 99.17654079861111
patch: public abstract void out ( $STRING$ ) ;
rank: 39
score: 98.14531860351562
patch: println > i >
rank: 39
score: 97.60612487792969
patch: public private <UNK>
rank: 39
score: 97.47666422526042
patch: > i > catch
rank: 39
score: 97.41984558105469
patch: public Exception Illegal
rank: 39
score: 95.92311604817708
patch: static void
rank: 40
score: 99.256103515625
patch: public out . write ( char [ ] $STRING$ ) ;
rank: 40
score: 99.2235107421875
patch: out . write ( $STRING$ ) . write ( ) ;
rank: 40
score: 99.19110662286931
patch: int . . out . write ( $STRING$ ) ;
rank: 40
score: 99.16751708984376
patch: public out . write ( String out ) ;
rank: 40
score: 99.15315551757813
patch: public out . write ( $STRING$ ) $STRING$ ;
rank: 40
score: 98.13720092773437
patch: protected public get >
rank: 40
score: 97.5970230102539
patch: public public remove
rank: 40
score: 97.45361328125
patch: public put > i >
rank: 40
score: 97.41321563720703
patch: public Error Stack
rank: 41
score: 99.22332208806819
patch: public int out ( ) throws IO CaMeL Exception ;
rank: 41
score: 99.1908203125
patch: public out . write ( String 1 ) ;
rank: 41
score: 99.1661044034091
patch: public static out . write ( $STRING$ $STRING$ ) ;
rank: 41
score: 99.15094672309027
patch: out . write ( byte $STRING$ ) ;
rank: 41
score: 98.13015747070312
patch: protected get >
rank: 41
score: 97.59668731689453
patch: public get >
rank: 41
score: 97.45204671223958
patch: public clear > i >
rank: 41
score: 97.39455159505208
patch: public Error
rank: 41
score: 95.91989135742188
patch: encode > >
rank: 42
score: 99.2442626953125
patch: public void out ( ) { ; }
rank: 42
score: 99.18964233398438
patch: private out . write ( String $STRING$ ) ;
rank: 42
score: 99.1618985262784
patch: public out . write ( $STRING$ ) throws $STRING$ ;
rank: 42
score: 99.14906616210938
patch: write . out . write ( $STRING$ ) ;
rank: 42
score: 98.11537475585938
patch: protected public for >
rank: 42
score: 97.594970703125
patch: public public next
rank: 42
score: 97.44887288411458
patch: > length > catch
rank: 42
score: 97.3846435546875
patch: public Runnable Exception
rank: 42
score: 95.8942642211914
patch: public final void
rank: 43
score: 99.218505859375
patch: out out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 43
score: 99.18949672154018
patch: public void out ( ) {
rank: 43
score: 99.1614990234375
patch: String . [ ] out ( ) ;
rank: 43
score: 99.14512939453125
patch: public out . write ( $STRING$ ) throws ;
rank: 43
score: 98.09403991699219
patch: synchronized get >
rank: 43
score: 97.59306335449219
patch: public public for
rank: 43
score: 97.444580078125
patch: > next > i
rank: 43
score: 97.38272094726562
patch: public Runtime Exception
rank: 43
score: 95.87094116210938
patch: synchronized void
rank: 44
score: 99.24132283528645
patch: out . write ( byte [ ] $STRING$ , ) ;
rank: 44
score: 99.2174072265625
patch: out . write ( $STRING$ ) write ( $STRING$ ) ;
rank: 44
score: 99.18180084228516
patch: void out . write ( ) ;
rank: 44
score: 99.1583251953125
patch: public void out ( $STRING$ ) { ;
rank: 44
score: 99.14063856336806
patch: out . write ( $STRING$ ) throws ;
rank: 44
score: 98.07391357421875
patch: protected protected get >
rank: 44
score: 97.5903091430664
patch: public public is
rank: 44
score: 97.43471272786458
patch: get > i > Index
rank: 44
score: 97.37660217285156
patch: protected Exception State
rank: 44
score: 95.86802164713542
patch: make >
rank: 45
score: 99.24061279296875
patch: out . write ( $STRING$ + out ) ;
rank: 45
score: 99.1570712002841
patch: public out . write ( String int $NUMBER$ ) ;
rank: 45
score: 99.13496704101563
patch: public out . write ( $STRING$ ) out ;
rank: 45
score: 98.06849975585938
patch: get > next >
rank: 45
score: 97.5562973022461
patch: public public System
rank: 45
score: 97.42982991536458
patch: catch > > Index
rank: 45
score: 97.37361145019531
patch: public Exception Thread
rank: 46
score: 99.23989868164062
patch: public abstract out . write ( byte [ ] ) ;
rank: 46
score: 99.21193625710227
patch: public void out ( ) throws IO CaMeL Exception {
rank: 46
score: 99.15428577769886
patch: public static void out . write ( $STRING$ ) ;
rank: 46
score: 98.06621704101562
patch: protected private get >
rank: 46
score: 97.55465698242188
patch: public public if
rank: 46
score: 97.42535400390625
patch: log > catch >
rank: 46
score: 97.36669158935547
patch: public Runnable null
rank: 46
score: 95.82991790771484
patch: map >
rank: 47
score: 99.2389404296875
patch: out . write ( $STRING$ + ( ) ;
rank: 47
score: 99.2112528483073
patch: public out . flush ( ) throws IO CaMeL Exception ;
rank: 47
score: 99.17744140625
patch: public abstract void write ( String $STRING$ ) ;
rank: 47
score: 99.14277648925781
patch: private void out ( $STRING$ ) ;
rank: 47
score: 98.05986328125
patch: update > i >
rank: 47
score: 97.54489135742188
patch: public static <UNK>
rank: 47
score: 97.4202168782552
patch: clear > length > i
rank: 47
score: 97.3662109375
patch: public Exception Out
rank: 48
score: 99.17627716064453
patch: void out ( String $STRING$ ) ;
rank: 48
score: 99.1415127840909
patch: public out . write ( $STRING$ ) throws ) ;
rank: 48
score: 99.12467651367187
patch: public public out . write ( $STRING$ ) ;
rank: 48
score: 98.05880126953124
patch: private synchronized get >
rank: 48
score: 97.41929117838542
patch: > arraycopy > >
rank: 48
score: 97.36514282226562
patch: public Exception run
rank: 48
score: 95.824951171875
patch: public Illegal
rank: 49
score: 99.20553823617789
patch: out . write . write ( ) throws IO CaMeL Exception ;
rank: 49
score: 99.17567138671875
patch: private abstract out . write ( $STRING$ ) ;
rank: 49
score: 98.05780029296875
patch: get > >
rank: 49
score: 97.53885904947917
patch: public while
rank: 49
score: 97.41316731770833
patch: > catch > Index
rank: 49
score: 97.36064910888672
patch: public Runtime State
rank: 49
score: 95.8204345703125
patch: protected abstract void
rank: 50
score: 99.23677825927734
patch: out . write ( $STRING$ + ;
rank: 50
score: 99.1724853515625
patch: protected void out ( ) ;
rank: 50
score: 99.14007568359375
patch: public void out ( $STRING$ ) return ;
rank: 50
score: 98.05537414550781
patch: put > ]
rank: 50
score: 97.53516387939453
patch: public finally >
rank: 50
score: 97.40920003255208
patch: > i > case
rank: 50
score: 97.3556900024414
patch: public Exception arraycopy
rank: 50
score: 95.82039642333984
patch: private abstract void
rank: 51
score: 99.20102761008523
patch: public abstract void out . write ( $STRING$ ) ;
rank: 51
score: 99.17156982421875
patch: void write ( $STRING$ ) ;
rank: 51
score: 99.1390625
patch: out . write ( $STRING$ , false ) ;
rank: 51
score: 99.10730997721355
patch: public out ( ) {
rank: 51
score: 98.05421142578125
patch: try > i >
rank: 51
score: 97.53425598144531
patch: Buffer
rank: 51
score: 97.40657552083333
patch: log > case else
rank: 51
score: 97.35300699869792
patch: public null
rank: 51
score: 95.8154296875
patch: run >
rank: 52
score: 99.23258833451705
patch: public out . write ( $STRING$ ) { ; }
rank: 52
score: 99.17092895507812
patch: public void out ( out ) ;
rank: 52
score: 99.10430230034723
patch: out . . write ( $STRING$ ) ;
rank: 52
score: 98.05418701171875
patch: get > finally >
rank: 52
score: 97.52792358398438
patch: public public String
rank: 52
score: 97.40085856119792
patch: > i > arraycopy
rank: 52
score: 97.35191345214844
patch: out null State
rank: 52
score: 95.79949951171875
patch: public void {
rank: 53
score: 99.1959698016827
patch: out . write . write ( ) throws IO CaMeL Exception {
rank: 53
score: 99.1698226928711
patch: void write ( String $STRING$ ) ;
rank: 53
score: 98.05255126953125
patch: private public
rank: 53
score: 97.51924133300781
patch: public synchronized get
rank: 53
score: 97.39198811848958
patch: > i catch >
rank: 53
score: 97.35128021240234
patch: public Exception out
rank: 53
score: 95.78914642333984
patch: protected private void
rank: 54
score: 99.2297696200284
patch: public out . write ( byte [ ] $STRING$ )
rank: 54
score: 99.195556640625
patch: private out . write ( ) throws IO CaMeL Exception {
rank: 54
score: 99.13472493489583
patch: Iterator out . write ( $STRING$ ) ;
rank: 54
score: 98.04522094726562
patch: protected public run >
rank: 54
score: 97.51699829101562
patch: public public check
rank: 54
score: 97.3839823404948
patch: if > i > i
rank: 54
score: 97.32473754882812
patch: private null Exception
rank: 54
score: 95.78653717041016
patch: iterator >
rank: 55
score: 99.22699652777777
patch: out . write ( char ch ) ;
rank: 55
score: 99.19518025716145
patch: protected out . write ( ) throws IO CaMeL Exception {
rank: 55
score: 99.16354370117188
patch: protected out . write ( String $STRING$ ) ;
rank: 55
score: 99.09845733642578
patch: public out . write ( byte ;
rank: 55
score: 98.038818359375
patch: private public put >
rank: 55
score: 97.49990844726562
patch: public protected public
rank: 55
score: 97.38360595703125
patch: for > i > i
rank: 55
score: 97.3175277709961
patch: / null Exception
rank: 55
score: 95.77754720052083
patch: public Null
rank: 56
score: 99.22518920898438
patch: out . write ( String ) throws IO CaMeL Exception ;
rank: 56
score: 99.1615966796875
patch: abstract . out . write ( $STRING$ ) ;
rank: 56
score: 99.0969950358073
patch: write ( $STRING$ ) ;
rank: 56
score: 98.0302978515625
patch: add > arraycopy >
rank: 56
score: 97.49774169921875
patch: public public append
rank: 56
score: 97.38285319010417
patch: initialize > i > i
rank: 56
score: 97.31442260742188
patch: public Null State
rank: 56
score: 95.77462768554688
patch: while > >
rank: 57
score: 99.22415500217014
patch: out . write ( ( $STRING$ ) ;
rank: 57
score: 99.1944580078125
patch: out . write ( $STRING$ ) { return out ; }
rank: 57
score: 99.1474942294034
patch: / ; void out . write ( $STRING$ ) ;
rank: 57
score: 99.12077192826705
patch: public out . write ( $STRING$ ) return out ;
rank: 57
score: 99.0958740234375
patch: public out . write ( ] $STRING$ ) ;
rank: 57
score: 98.01499938964844
patch: private put >
rank: 57
score: 97.48361206054688
patch: public private get
rank: 57
score: 97.3802719116211
patch: catch >
rank: 57
score: 97.29922485351562
patch: private null State
rank: 57
score: 95.77204895019531
patch: name >
rank: 58
score: 99.22174072265625
patch: public out . write ( $STRING$ + ( $STRING$ ) ;
rank: 58
score: 99.19145063920455
patch: public boolean out ( ) throws IO CaMeL Exception ;
rank: 58
score: 99.14732776988636
patch: void out ( out . write ( $STRING$ ) ;
rank: 58
score: 99.094091796875
patch: public out . write ( $STRING$ $STRING$ ) ;
rank: 58
score: 98.01016235351562
patch: synchronized for >
rank: 58
score: 97.48359680175781
patch: public public long
rank: 58
score: 97.37820434570312
patch: add > length > i
rank: 58
score: 97.28648376464844
patch: public null Null
rank: 59
score: 99.21857244318181
patch: public out . write ( char [ ] ) ;
rank: 59
score: 99.11998401988636
patch: out . write ( $STRING$ , - 1 ) ;
rank: 59
score: 99.09186401367188
patch: out . write ( $STRING$ ) . out ;
rank: 59
score: 98.00636291503906
patch: add > >
rank: 59
score: 97.48161315917969
patch: public final <UNK>
rank: 59
score: 97.37740071614583
patch: write > i > i
rank: 59
score: 97.28470611572266
patch: public State out
rank: 60
score: 99.21848366477273
patch: public out . write ( $STRING$ + ( ) ;
rank: 60
score: 99.18838500976562
patch: out . write ( $STRING$ , out . length ) ;
rank: 60
score: 99.1464510830966
patch: public abstract abstract out . write ( $STRING$ ) ;
rank: 60
score: 99.09029134114583
patch: public out . write ( $STRING$ ) throw
rank: 60
score: 98.00253295898438
patch: private get > >
rank: 60
score: 97.47804260253906
patch: public public starts
rank: 60
score: 97.37191772460938
patch: > exit > i
rank: 60
score: 97.26048278808594
patch: public null Runtime
rank: 60
score: 95.7535400390625
patch: protected protected void
rank: 61
score: 99.21593128551136
patch: @ Override public out . write ( $STRING$ ) ;
rank: 61
score: 99.18759155273438
patch: protected out . write ( ) throws IO CaMeL Exception ;
rank: 61
score: 99.14539184570313
patch: public static void write ( String $STRING$ ) ;
rank: 61
score: 99.11724298650569
patch: public out . write ( $STRING$ ) { / ;
rank: 61
score: 99.08817749023437
patch: public boolean out . write ( $STRING$ ) ;
rank: 61
score: 98.00053405761719
patch: get > arraycopy
rank: 61
score: 97.46709442138672
patch: public public register
rank: 61
score: 97.37167358398438
patch: catch > out >
rank: 61
score: 97.25785827636719
patch: protected Exception null
rank: 61
score: 95.7469253540039
patch: private private void
rank: 62
score: 99.21548800998264
patch: public out . write ( $STRING$ + ;
rank: 62
score: 99.13919406467014
patch: out . write ( char 1 ) ;
rank: 62
score: 99.11469060724431
patch: public out . write ( $STRING$ , $STRING$ ) ;
rank: 62
score: 99.08684539794922
patch: out . write ( write ) ;
rank: 62
score: 97.99171752929688
patch: private public public protected
rank: 62
score: 97.46350860595703
patch: public synchronized set
rank: 62
score: 97.3696797688802
patch: > i > >
rank: 62
score: 97.2574462890625
patch: public State err
rank: 63
score: 99.2130839029948
patch: out . write ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 63
score: 99.13883833451705
patch: public static out . write ( String $STRING$ ) {
rank: 63
score: 99.11141357421874
patch: out . write ( $STRING$ , true ) ;
rank: 63
score: 99.08609347873264
patch: out . write ( $STRING$ ) $STRING$ ;
rank: 63
score: 97.99153442382813
patch: private protected for >
rank: 63
score: 97.4609603881836
patch: public public put
rank: 63
score: 97.35074869791667
patch: > i > ++
rank: 63
score: 97.25712585449219
patch: public State Type
rank: 63
score: 95.72181193033855
patch: public private
rank: 64
score: 99.18683330829327
patch: public out . write ( byte ) throws IO CaMeL Exception ;
rank: 64
score: 99.13633510044643
patch: public int write ( ) ;
rank: 64
score: 99.08495483398437
patch: out . write ( $STRING$ + $NUMBER$ ) ;
rank: 64
score: 97.9876953125
patch: protected get > ]
rank: 64
score: 97.44990539550781
patch: public log >
rank: 64
score: 97.3468017578125
patch: catch > i
rank: 64
score: 97.25491333007812
patch: public public Exception
rank: 64
score: 95.71555582682292
patch: public delete
rank: 65
score: 99.2083740234375
patch: out . write ( String name ) ;
rank: 65
score: 99.136279296875
patch: void out . write ( String $STRING$ ) ;
rank: 65
score: 99.10853407118056
patch: public void out ( $STRING$ $STRING$ ) ;
rank: 65
score: 99.08034939236111
patch: write . write ( $STRING$ ) ) ;
rank: 65
score: 97.9814208984375
patch: on > i >
rank: 65
score: 97.44986724853516
patch: public public static
rank: 65
score: 97.33927408854167
patch: > i > size
rank: 65
score: 97.25094604492188
patch: public Null null
rank: 65
score: 95.71522521972656
patch: private protected void
rank: 66
score: 99.20123291015625
patch: public out . write ( $STRING$ ) { ) ; }
rank: 66
score: 99.18149038461539
patch: out . write ( int $STRING$ ) throws IO CaMeL Exception ;
rank: 66
score: 99.13619656032986
patch: public void write ( int $STRING$ ) ;
rank: 66
score: 99.07612440321181
patch: public out . write ( ) { ;
rank: 66
score: 97.97670288085938
patch: private protected add >
rank: 66
score: 97.4439926147461
patch: public private set
rank: 66
score: 97.33807373046875
patch: catch > length
rank: 66
score: 97.24488830566406
patch: public State Runtime
rank: 67
score: 99.1976318359375
patch: public abstract out . write ( $STRING$ + $STRING$ ) ;
rank: 67
score: 99.18040161132812
patch: out . write . write . $STRING$ ) ;
rank: 67
score: 99.13580322265625
patch: public void write ( out ) ;
rank: 67
score: 99.10489501953126
patch: private void out . write ( $STRING$ ) ;
rank: 67
score: 97.97184448242187
patch: private add > >
rank: 67
score: 97.4351806640625
patch: public void <UNK>
rank: 67
score: 97.33685302734375
patch: public clear > catch >
rank: 67
score: 97.24237060546875
patch: out State null
rank: 67
score: 95.70791625976562
patch: public IO
rank: 68
score: 99.19755249023437
patch: public void out ( $STRING$ ) { ; }
rank: 68
score: 99.18017578125
patch: public synchronized out . write . write ( $STRING$ ) {
rank: 68
score: 99.13313293457031
patch: out . write ( 1 ) ;
rank: 68
score: 99.10297185724431
patch: public synchronized out . write ( String $STRING$ ) ;
rank: 68
score: 99.07289428710938
patch: public out . write ( byte $STRING$ ) {
rank: 68
score: 97.97088623046875
patch: read > i >
rank: 68
score: 97.43375396728516
patch: public Stack <UNK>
rank: 68
score: 97.33076985677083
patch: > catch > catch
rank: 68
score: 97.22561645507812
patch: private Exception Error
rank: 69
score: 99.17877197265625
patch: public out . write ( char ch [ ] ) ;
rank: 69
score: 99.13298950195312
patch: ; void out . write ( $STRING$ ) ;
rank: 69
score: 99.102783203125
patch: String . [ ] write ( $STRING$ ) ;
rank: 69
score: 97.970849609375
patch: clear > i >
rank: 69
score: 97.43074544270833
patch: public log
rank: 69
score: 97.32931518554688
patch: catch > > null
rank: 69
score: 97.22484588623047
patch: public null Not
rank: 69
score: 95.70565795898438
patch: public protected
rank: 70
score: 99.176220703125
patch: out . write ( $STRING$ + str ) ;
rank: 70
score: 99.13215467664931
patch: out . write ( char $STRING$ ) ;
rank: 70
score: 99.10224066840277
patch: public static out write ( $STRING$ ) ;
rank: 70
score: 99.06836615668402
patch: public write . write ( $STRING$ ) ;
rank: 70
score: 97.96400451660156
patch: add > i
rank: 70
score: 97.42740885416667
patch: public print
rank: 70
score: 97.32600911458333
patch: set > length > i
rank: 70
score: 97.22173309326172
patch: public Exception Unsupported
rank: 70
score: 95.69925944010417
patch: public to
rank: 71
score: 99.19541237571023
patch: out . write ( byte [ ] out ) ;
rank: 71
score: 99.17577185997597
patch: out . write ( out . to CaMeL String ( ) )
rank: 71
score: 99.1297836303711
patch: int out . write ( ) ;
rank: 71
score: 99.1011962890625
patch: protected static out . write ( $STRING$ ) ;
rank: 71
score: 99.06763305664063
patch: . . out . write ( $STRING$ ) ;
rank: 71
score: 97.9572021484375
patch: append > i >
rank: 71
score: 97.40929412841797
patch: public public double
rank: 71
score: 97.32006225585937
patch: catch > else
rank: 71
score: 97.22129821777344
patch: protected null State
rank: 71
score: 95.69817352294922
patch: drop > >
rank: 72
score: 99.1953125
patch: void out . write ( ) throws IO CaMeL Exception ;
rank: 72
score: 99.17498309795673
patch: out . write ( $STRING$ ) . write ( $NUMBER$ ) ;
rank: 72
score: 99.09660200639205
patch: / * ] out . write ( $STRING$ ) ;
rank: 72
score: 99.064599609375
patch: out . write ( $STRING$ ) ; $STRING$ ;
rank: 72
score: 97.95057373046875
patch: get > length >
rank: 72
score: 97.40917205810547
patch: public public !
rank: 72
score: 97.31821695963542
patch: > length > null
rank: 72
score: 97.2186279296875
patch: public Null Error
rank: 72
score: 95.69662475585938
patch: public protected Not
rank: 73
score: 99.1916170987216
patch: . . . out . write ( $STRING$ ) ;
rank: 73
score: 99.17160373263889
patch: out . write ( $STRING$ , ) ;
rank: 73
score: 99.12958984375
patch: public private out . write ( $STRING$ ) ;
rank: 73
score: 99.0959701538086
patch: public static void out ( ) ;
rank: 73
score: 99.06283569335938
patch: out . write ( ) ) ;
rank: 73
score: 97.95032348632813
patch: add > catch >
rank: 73
score: 97.40438842773438
patch: public public catch
rank: 73
score: 97.31808471679688
patch: > length > else
rank: 73
score: 97.21278381347656
patch: public err State
rank: 73
score: 95.69590250651042
patch: public long
rank: 74
score: 99.19068400065105
patch: out . write ( ( ) throws IO CaMeL Exception ;
rank: 74
score: 99.09426047585227
patch: public static out . write ( final $STRING$ ) ;
rank: 74
score: 99.059619140625
patch: public protected out . write ( $STRING$ ) ;
rank: 74
score: 97.9494384765625
patch: add > out >
rank: 74
score: 97.3990478515625
patch: Set public <UNK>
rank: 74
score: 97.31471761067708
patch: > length > size
rank: 74
score: 97.21190643310547
patch: public null Stack
rank: 74
score: 95.69447326660156
patch: Map
rank: 75
score: 99.1707255045573
patch: public out . write ( char ch [ ] ) {
rank: 75
score: 99.09402465820312
patch: public void out ( $STRING$ + $STRING$ ) ;
rank: 75
score: 99.05529174804687
patch: public out . write ( final $STRING$ ) ;
rank: 75
score: 97.94706420898437
patch: add > ] >
rank: 75
score: 97.39657592773438
patch: public protected <UNK>
rank: 75
score: 97.3127950032552
patch: public for > i >
rank: 75
score: 97.21160888671875
patch: private Exception Stack
rank: 75
score: 95.68688201904297
patch: println > >
rank: 76
score: 99.1705322265625
patch: void out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 76
score: 99.11900745738636
patch: public out . out . write ( $STRING$ ) ;
rank: 76
score: 99.09317355685764
patch: static out . write ( $STRING$ ) ;
rank: 76
score: 99.05499267578125
patch: public int out . write ( $STRING$ ) ;
rank: 76
score: 97.94385986328125
patch: private get > ]
rank: 76
score: 97.39425659179688
patch: public public State
rank: 76
score: 97.31151326497395
patch: try > length > i
rank: 76
score: 97.20919799804688
patch: private Exception
rank: 76
score: 95.68409729003906
patch: < <UNK>
rank: 77
score: 99.18368530273438
patch: public out . write ( String ) throws IO CaMeL Exception
rank: 77
score: 99.17049153645833
patch: public out . flush ( ) throws IO CaMeL Exception {
rank: 77
score: 99.05155436197917
patch: public out . write ( $STRING$ ) )
rank: 77
score: 97.94259033203124
patch: protected get > catch
rank: 77
score: 97.38996124267578
patch: public public Object
rank: 77
score: 97.31126912434895
patch: > length > case
rank: 77
score: 97.1774673461914
patch: public Error Runtime
rank: 77
score: 95.68318176269531
patch: protected static void
rank: 78
score: 99.18289184570312
patch: public out . write ( String $STRING$ ) throws ) ;
rank: 78
score: 99.1703389485677
patch: private out . write ( ) throws IO CaMeL Exception ;
rank: 78
score: 99.11817169189453
patch: void . write ( $STRING$ ) ;
rank: 78
score: 99.04637908935547
patch: out . write ( $STRING$ ) throws
rank: 78
score: 97.94209289550781
patch: println > ]
rank: 78
score: 97.3876953125
patch: public public finally
rank: 78
score: 97.30609130859375
patch: get > i > catch
rank: 78
score: 97.17442321777344
patch: private Runtime State
rank: 78
score: 95.67245483398438
patch: public equals
rank: 79
score: 99.11803436279297
patch: private out . write ( ) ;
rank: 79
score: 99.04615783691406
patch: . . write ( $STRING$ ) ;
rank: 79
score: 97.9419677734375
patch: private private for >
rank: 79
score: 97.38467407226562
patch: arraycopy >
rank: 79
score: 97.30443115234375
patch: > arraycopy >
rank: 79
score: 97.16720581054688
patch: protected null Exception
rank: 79
score: 95.67091369628906
patch: public synchronized Not
rank: 80
score: 99.18194025213069
patch: public out . write ( $STRING$ + out ) ;
rank: 80
score: 99.1657470703125
patch: protected abstract out . write ( $STRING$ ) ;
rank: 80
score: 99.0863265991211
patch: public void out ( $STRING$ / ;
rank: 80
score: 97.9390869140625
patch: add > Index
rank: 80
score: 97.3802490234375
patch: public for
rank: 80
score: 97.30272827148437
patch: catch > catch
rank: 80
score: 97.1579360961914
patch: protected State State
rank: 80
score: 95.67033386230469
patch: ch >
rank: 81
score: 99.16505940755208
patch: @ Override out . write . write ( $STRING$ ) ;
rank: 81
score: 99.11605224609374
patch: / ] out . write ( $STRING$ ) ;
rank: 81
score: 99.08411516462054
patch: public void out ( $STRING$ ;
rank: 81
score: 99.0392822265625
patch: public public out . write ( $STRING$ ) {
rank: 81
score: 97.93657836914062
patch: replace > i >
rank: 81
score: 97.37928771972656
patch: public abstract <UNK>
rank: 81
score: 97.2996317545573
patch: catch > next >
rank: 81
score: 97.15604400634766
patch: public State arraycopy
rank: 82
score: 99.1810811360677
patch: public out . write ( ) { return out ; }
rank: 82
score: 99.16502028245192
patch: public out . write ( out . to CaMeL String ( )
rank: 82
score: 99.11429443359376
patch: public abstract out . write ( out ) ;
rank: 82
score: 99.03578016493056
patch: private out . write ( $STRING$ ) {
rank: 82
score: 97.93590087890625
patch: invoke > i >
rank: 82
score: 97.37190755208333
patch: public Thread
rank: 82
score: 97.29827880859375
patch: update > i > i
rank: 82
score: 97.15135955810547
patch: public $STRING$ Exception
rank: 83
score: 99.1807861328125
patch: out . write ( byte ch [ ] ) ;
rank: 83
score: 99.16319056919643
patch: out . write ( $STRING$ )
rank: 83
score: 99.11360168457031
patch: public abstract void out ( ) ;
rank: 83
score: 99.08247884114583
patch: public void out ( String $STRING$ ) ;
rank: 83
score: 99.03125
patch: public out . . write ( $STRING$ ) ;
rank: 83
score: 97.93583374023437
patch: put > ] >
rank: 83
score: 97.29156494140625
patch: > catch > null
rank: 83
score: 97.15020751953125
patch: public Runnable Stack
rank: 83
score: 95.66786193847656
patch: public public Null
rank: 84
score: 99.1626446063702
patch: out . write ( out . write ( $STRING$ ) ) ;
rank: 84
score: 99.08135431463069
patch: public out [ ] . write ( $STRING$ ) ;
rank: 84
score: 99.03099975585937
patch: public out . write . write ( ) ;
rank: 84
score: 97.9356689453125
patch: async > i >
rank: 84
score: 97.36824798583984
patch: public abstract get
rank: 84
score: 97.28432210286458
patch: catch > i --
rank: 84
score: 97.14102172851562
patch: public null Runnable
rank: 84
score: 95.66686248779297
patch: public public Illegal
rank: 85
score: 99.17784534801136
patch: out . write ( $STRING$ + $STRING$ ) ; ;
rank: 85
score: 99.16225022536058
patch: . . . * / out . write ( $STRING$ ) ;
rank: 85
score: 99.02789306640625
patch: public out . write ( $STRING$ ) return
rank: 85
score: 97.92896728515625
patch: protected get > Index
rank: 85
score: 97.36810302734375
patch: public contains >
rank: 85
score: 97.28399658203125
patch: catch > > Stack
rank: 85
score: 97.13277435302734
patch: public Error Null
rank: 86
score: 99.17716841264205
patch: out . write ( Char CaMeL Sequence str ) ;
rank: 86
score: 99.16150841346153
patch: public out . write ( out . write ( $STRING$ ) ;
rank: 86
score: 99.02497016059027
patch: ) out . write ( $STRING$ ) ;
rank: 86
score: 97.92894287109375
patch: get > err >
rank: 86
score: 97.36662292480469
patch: public public do
rank: 86
score: 97.28384399414062
patch: > i > err
rank: 86
score: 97.12893676757812
patch: public Exception Internal
rank: 86
score: 95.65723673502605
patch: public try
rank: 87
score: 99.160888671875
patch: public out . write . write ( $STRING$ ) ;
rank: 87
score: 99.10405883789062
patch: private synchronized out . write ( $STRING$ ) ;
rank: 87
score: 97.92355346679688
patch: get > length ]
rank: 87
score: 97.36615753173828
patch: public boolean <UNK>
rank: 87
score: 97.28330485026042
patch: catch > iterator >
rank: 87
score: 97.11968994140625
patch: private null null
rank: 87
score: 95.65620422363281
patch: select > >
rank: 88
score: 99.17472534179687
patch: void out ( ) throws IO CaMeL Exception ;
rank: 88
score: 99.16028771033653
patch: out . write ( byte $STRING$ ) throws IO CaMeL Exception ;
rank: 88
score: 99.07561700994319
patch: public synchronized void out . write ( $STRING$ ) ;
rank: 88
score: 97.92325439453126
patch: Default > arraycopy >
rank: 88
score: 97.36393737792969
patch: public public Map
rank: 88
score: 97.28061930338542
patch: > arraycopy > i
rank: 88
score: 97.11837005615234
patch: @ null Exception
rank: 88
score: 95.65608215332031
patch: private static void
rank: 89
score: 99.17466430664062
patch: out . write ( $STRING$ + write ) ;
rank: 89
score: 99.15988393930289
patch: public abstract out . write ( ) throws IO CaMeL Exception ;
rank: 89
score: 99.100537109375
patch: public void write . write ( $STRING$ ) ;
rank: 89
score: 99.07171630859375
patch: Object . write ( $STRING$ ) ;
rank: 89
score: 99.02056884765625
patch: out . write ( $STRING$ ) ) ) ;
rank: 89
score: 97.92158203125
patch: synchronized get > catch
rank: 89
score: 97.36258697509766
patch: public public current
rank: 89
score: 97.28018188476562
patch: > i > Stack
rank: 89
score: 97.11408996582031
patch: public State Exception
rank: 89
score: 95.65479278564453
patch: assign > >
rank: 90
score: 99.17206488715277
patch: out . write ( int ch ) ;
rank: 90
score: 99.09959581163194
patch: out . write ( Integer $STRING$ ) ;
rank: 90
score: 99.07132720947266
patch: protected void out ( $STRING$ ) ;
rank: 90
score: 97.91921997070312
patch: for > >
rank: 90
score: 97.3584493001302
patch: public <UNK>
rank: 90
score: 97.2790018717448
patch: catch > > >
rank: 90
score: 97.10535685221355
patch: protected Exception
rank: 90
score: 95.65133666992188
patch: public public new
rank: 91
score: 99.17200724283855
patch: public abstract out . write ( char [ ] ) ;
rank: 91
score: 99.15936748798077
patch: out out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 91
score: 99.09861924913194
patch: out . write ( byte ch ) ;
rank: 91
score: 99.01991577148438
patch: public $STRING$ out . write ( $STRING$ ) ;
rank: 91
score: 97.91365051269531
patch: protected run >
rank: 91
score: 97.10305786132812
patch: void State State
rank: 91
score: 95.64649963378906
patch: make > >
rank: 92
score: 99.17183430989583
patch: public void out ( $STRING$ ) throws IO CaMeL Exception ;
rank: 92
score: 99.15935601128473
patch: out . write . ( $STRING$ ) ;
rank: 92
score: 99.06845703125
patch: public String [ ] out ( $STRING$ ) ;
rank: 92
score: 99.01788940429688
patch: out ( ) . write ( $STRING$ ) ;
rank: 92
score: 97.9091288248698
patch: protected public
rank: 92
score: 97.35664367675781
patch: public protected get
rank: 92
score: 97.27548217773438
patch: catch > > catch
rank: 92
score: 97.10282897949219
patch: @ Exception null
rank: 92
score: 95.64559936523438
patch: Nullable public void
rank: 93
score: 99.17076619466145
patch: public abstract void out ( ) throws IO CaMeL Exception ;
rank: 93
score: 99.01329956054687
patch: out . write ( out . $STRING$ ) ;
rank: 93
score: 97.35308837890625
patch: public Runnable
rank: 93
score: 97.27547200520833
patch: get > i > length
rank: 93
score: 97.09869384765625
patch: private State State
rank: 93
score: 95.64012145996094
patch: public private Not
rank: 94
score: 99.16995239257812
patch: out . write ( Char CaMeL Sequence ) ;
rank: 94
score: 99.15674767127403
patch: public out . write ( long ) throws IO CaMeL Exception ;
rank: 94
score: 99.0888671875
patch: final . out . write ( $STRING$ ) ;
rank: 94
score: 99.0667391690341
patch: public static out . write ( String name ) ;
rank: 94
score: 99.0132344563802
patch: public out ( ) ;
rank: 94
score: 97.904296875
patch: protected protected add >
rank: 94
score: 97.352783203125
patch: public static public
rank: 94
score: 97.27386474609375
patch: > i > ]
rank: 94
score: 97.0959243774414
patch: public Exception No
rank: 94
score: 95.6258316040039
patch: flush > >
rank: 95
score: 99.16939290364583
patch: out . write ( $STRING$ + ( $STRING$ + ) ;
rank: 95
score: 99.15672889122597
patch: out . write ( long $STRING$ ) throws IO CaMeL Exception ;
rank: 95
score: 99.085693359375
patch: void out . write ( out ) ;
rank: 95
score: 99.0645751953125
patch: out . write ( str ) ;
rank: 95
score: 99.00927734375
patch: public out . write ( str ) ;
rank: 95
score: 97.90322265625
patch: protected synchronized get >
rank: 95
score: 97.35150146484375
patch: public public equals
rank: 95
score: 97.27256266276042
patch: has > i > i
rank: 95
score: 97.09246063232422
patch: out null >
rank: 95
score: 95.62526448567708
patch: void <UNK>
rank: 96
score: 99.1692782315341
patch: void out . write ( $STRING$ + $STRING$ ) ;
rank: 96
score: 99.15442833533653
patch: public write . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 96
score: 99.06411743164062
patch: out . write ( name ) ;
rank: 96
score: 99.007275390625
patch: private out . write ( $STRING$ ) ) ;
rank: 96
score: 97.90313110351562
patch: private private add >
rank: 96
score: 97.34991455078125
patch: public close >
rank: 96
score: 97.26734415690105
patch: > catch > length
rank: 96
score: 97.0921630859375
patch: public Exception exit
rank: 97
score: 99.15358323317308
patch: out . write ( $STRING$ ) { write ( $STRING$ ) ;
rank: 97
score: 99.08219909667969
patch: public boolean write ( $STRING$ ) ;
rank: 97
score: 99.06383167613636
patch: public final out . write ( String $STRING$ ) ;
rank: 97
score: 99.00567626953125
patch: public out . write ( out ;
rank: 97
score: 97.90057373046875
patch: final get >
rank: 97
score: 97.34439086914062
patch: public public notify
rank: 97
score: 97.26488240559895
patch: case > i >
rank: 97
score: 97.0909652709961
patch: protected Exception Error
rank: 98
score: 99.1653719815341
patch: public abstract out . write ( String str ) ;
rank: 98
score: 99.15265362079327
patch: out . write ( char ch ) throws IO CaMeL Exception ;
rank: 98
score: 99.08186848958333
patch: out . write ( byte 1 ) ;
rank: 98
score: 99.06361607142857
patch: public static out ( ) ;
rank: 98
score: 99.00344412667411
patch: public out . $STRING$ ) ;
rank: 98
score: 97.90050048828125
patch: clone > i >
rank: 98
score: 97.34315999348958
patch: public remove
rank: 98
score: 97.25685628255208
patch: get > length > length
rank: 98
score: 97.0904769897461
patch: synchronized State State
rank: 99
score: 99.16527303059895
patch: public out . write ( String str ) throws $STRING$ ;
rank: 99
score: 99.15187424879808
patch: public abstract out . write . long CaMeL Value ( ) ;
rank: 99
score: 99.08027479383681
patch: public void write ( String 1 ) ;
rank: 99
score: 99.00088500976562
patch: public out . write ( $STRING$ ) ; .
rank: 99
score: 97.89869689941406
patch: > ]
rank: 99
score: 97.3394546508789
patch: public protected set
rank: 99
score: 97.25638834635417
patch: get > length > Index
rank: 99
score: 97.08708190917969
patch: protected Runtime State
rank: 100
score: 99.16490589488636
patch: public out . write ( ) throws IO CaMeL Exception
rank: 100
score: 99.15089925130208
patch: out . write ( byte ) throws IO CaMeL Exception {
rank: 100
score: 99.07952880859375
patch: protected void out . write ( $STRING$ ) ;
rank: 100
score: 99.06133270263672
patch: out . write ( 0 ) ;
rank: 100
score: 98.99872436523438
patch: public out . write ( $STRING$ ) . ;
rank: 100
score: 97.8976318359375
patch: Data > i >
rank: 100
score: 97.33609008789062
patch: public public Writer
rank: 100
score: 97.256103515625
patch: clear > i > Index
rank: 100
score: 97.08279418945312
patch: public State
rank: 100
score: 95.6167500813802
patch: public do
rank: 101
score: 99.16324191623264
patch: out . write ( byte [ ) ;
rank: 101
score: 99.14842810997597
patch: out . write ( int $STRING$ ) throws IO CaMeL Exception {
rank: 101
score: 99.07789306640625
patch: void out ( ? $STRING$ : $STRING$ ) ;
rank: 101
score: 98.99808078342014
patch: out . write ( $STRING$ ) . ;
rank: 101
score: 97.89439697265625
patch: protected public protected public
rank: 101
score: 97.33592224121094
patch: public synchronized synchronized
rank: 101
score: 97.2550557454427
patch: > length > arraycopy
rank: 101
score: 97.07279968261719
patch: public err Exception
rank: 102
score: 99.14802689985795
patch: public String out ( ) throws IO CaMeL Exception ;
rank: 102
score: 99.07742309570312
patch: public void write ( final String 1 ) ;
rank: 102
score: 98.99742974175348
patch: out . write ( $STRING$ ) out ;
rank: 102
score: 97.89403076171875
patch: private public protected public
rank: 102
score: 97.33526611328125
patch: public synchronized add
rank: 102
score: 97.25445556640625
patch: catch > > out
rank: 102
score: 97.07101440429688
patch: public Exception Type
rank: 102
score: 95.6027323404948
patch: save >
rank: 103
score: 99.15950520833333
patch: out . write ( $STRING$ + ( $STRING$ ) ; ;
rank: 103
score: 99.14761117788461
patch: out . write ( $STRING$ ) out . write ( ) ;
rank: 103
score: 99.076708984375
patch: this . out . write ( $STRING$ ) ;
rank: 103
score: 99.0560302734375
patch: public synchronized void out ( $STRING$ ) ;
rank: 103
score: 98.99696655273438
patch: protected out . write ( $STRING$ ) ) ;
rank: 103
score: 97.89371948242187
patch: private get > catch
rank: 103
score: 97.33175659179688
patch: public out >
rank: 103
score: 97.25430297851562
patch: > catch > arraycopy
rank: 103
score: 97.06834411621094
patch: public State Index
rank: 103
score: 95.59554036458333
patch: has >
rank: 104
score: 99.15695190429688
patch: out . write ( ) throws $STRING$ + $STRING$ ) ;
rank: 104
score: 99.14661754261364
patch: private out . write ( $STRING$ + $STRING$ ) ;
rank: 104
score: 99.05589294433594
patch: public boolean out ( $STRING$ ) ;
rank: 104
score: 97.89299011230469
patch: final for >
rank: 104
score: 97.25296020507812
patch: stop > i > i
rank: 104
score: 97.06470489501953
patch: public Exception new
rank: 104
score: 95.58892822265625
patch: this >
rank: 105
score: 99.14551720252403
patch: public out . write ( $STRING$ ) throws IO CaMeL Exception )
rank: 105
score: 99.07521565755208
patch: boolean out ( ) ;
rank: 105
score: 99.05421031605114
patch: public void out . write ( String $STRING$ ) ;
rank: 105
score: 98.9917724609375
patch: public static out . write ( $STRING$ ) {
rank: 105
score: 97.88869018554688
patch: private get > Index
rank: 105
score: 97.32475280761719
patch: public private add
rank: 105
score: 97.24755859375
patch: public for > length >
rank: 105
score: 97.0636215209961
patch: public Runtime null
rank: 106
score: 99.15345255533855
patch: public void out ( ) throws IO CaMeL Exception { ;
rank: 106
score: 99.14536354758523
patch: public out . write ( $STRING$ ) { ) ;
rank: 106
score: 99.07362196180556
patch: public synchronized out . write ( ) ;
rank: 106
score: 99.0530672940341
patch: public out . write ( String int 0 ) ;
rank: 106
score: 98.98502197265626
patch: public void out . write ( $STRING$ ) {
rank: 106
score: 97.88641357421875
patch: synchronized add >
rank: 106
score: 97.31908416748047
patch: public public out
rank: 106
score: 97.2475077311198
patch: invoke > i > i
rank: 106
score: 97.06037139892578
patch: public Exception Writer
rank: 106
score: 95.58821614583333
patch: public String
rank: 107
score: 99.15283203125
patch: public Object out ( ) throws IO CaMeL Exception ;
rank: 107
score: 99.14347330729167
patch: protected out . write ( $STRING$ ) {
rank: 107
score: 98.98446219308036
patch: public out ( $STRING$ ) ;
rank: 107
score: 97.8838134765625
patch: protected protected for >
rank: 107
score: 97.31707763671875
patch: public public Hash
rank: 107
score: 97.24534098307292
patch: > catch > case
rank: 107
score: 97.05199432373047
patch: out Error State
rank: 108
score: 99.15155029296875
patch: out . write ( int $STRING$ ) ;
rank: 108
score: 99.1433438387784
patch: public abstract boolean out . write ( $STRING$ ) ;
rank: 108
score: 99.07318115234375
patch: public int write ( String $STRING$ ) ;
rank: 108
score: 99.05029296875
patch: public out . write ( char ) ;
rank: 108
score: 98.98263549804688
patch: out . write ( $STRING$ ) ; out ;
rank: 108
score: 97.88035278320312
patch: private public public private
rank: 108
score: 97.24493408203125
patch: clear > catch > >
rank: 108
score: 97.05181884765625
patch: public run State
rank: 108
score: 95.58489990234375
patch: abstract public void
rank: 109
score: 99.14694213867188
patch: out . write ( $STRING$ + write ( $STRING$ ) ;
rank: 109
score: 99.14324951171875
patch: write . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 109
score: 99.07269287109375
patch: int . . write ( $STRING$ ) ;
rank: 109
score: 99.04503284801136
patch: out . write ( $STRING$ ) + $STRING$ ) ;
rank: 109
score: 98.98191833496094
patch: public out . close ( ) ;
rank: 109
score: 97.87576293945312
patch: synchronized get > ]
rank: 109
score: 97.24208577473958
patch: case > catch >
rank: 109
score: 97.05165100097656
patch: out Exception Stack
rank: 109
score: 95.58353678385417
patch: public if
rank: 110
score: 99.14678400213069
patch: public out . write ( $STRING$ + name ) ;
rank: 110
score: 99.1431551846591
patch: out . write ( $STRING$ ) throws IO CaMeL Exception
rank: 110
score: 99.072509765625
patch: public void out . write ( ) ;
rank: 110
score: 99.0428466796875
patch: public void out ( String char CaMeL Value ) ;
rank: 110
score: 98.98009575737848
patch: public out . write ( byte ; .
rank: 110
score: 97.87417602539062
patch: document > i >
rank: 110
score: 97.31295776367188
patch: public System
rank: 110
score: 97.24188232421875
patch: get > length > ]
rank: 110
score: 97.04341125488281
patch: public Runtime Stack
rank: 111
score: 99.1463290127841
patch: out . write ( Char CaMeL Sequence $STRING$ ) ;
rank: 111
score: 99.1424560546875
patch: out . write ( $STRING$ ) ; write ( $STRING$ ) ;
rank: 111
score: 99.07145182291667
patch: public static out . write ( ) ;
rank: 111
score: 99.04241180419922
patch: public static out ( $STRING$ ) ;
rank: 111
score: 98.97938232421875
patch: public out . write ( long $STRING$ ) ;
rank: 111
score: 97.31076049804688
patch: public public Array
rank: 111
score: 97.24163818359375
patch: hash > i > i
rank: 111
score: 97.04301452636719
patch: public Exception finally
rank: 111
score: 95.58168538411458
patch: public Abstract
rank: 112
score: 99.1449686686198
patch: out . write ( $STRING$ + out . write ) ;
rank: 112
score: 99.14208984375
patch: out . write . write ( $STRING$ + $STRING$ ) ;
rank: 112
score: 98.97902221679688
patch: out . write ( write $STRING$ $STRING$ ) ;
rank: 112
score: 97.87265625
patch: process > i >
rank: 112
score: 97.29921468098958
patch: public next
rank: 112
score: 97.24021402994792
patch: catch > > arraycopy
rank: 112
score: 97.03662872314453
patch: protected null null
rank: 112
score: 95.57861328125
patch: public Object
rank: 113
score: 99.1409912109375
patch: final out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 113
score: 99.06487358940973
patch: out . write ( Integer 1 ) ;
rank: 113
score: 99.04082697088069
patch: public String CaMeL Buffer . write ( $STRING$ ) ;
rank: 113
score: 98.97869873046875
patch: public out . write ( byte ) {
rank: 113
score: 97.86937866210937
patch: request > i >
rank: 113
score: 97.23458862304688
patch: load > i > i
rank: 113
score: 97.03253173828125
patch: public Null Stack
rank: 113
score: 95.57377624511719
patch: Found > >
rank: 114
score: 99.14309692382812
patch: public out . write ( byte [ ] ;
rank: 114
score: 99.14091796875
patch: out . write ( $STRING$ | $STRING$ ) ;
rank: 114
score: 99.04047393798828
patch: public out . write ( char ;
rank: 114
score: 98.97858276367188
patch: out . write ( $STRING$ ) ; } .
rank: 114
score: 97.86932373046875
patch: local > i >
rank: 114
score: 97.2928466796875
patch: Set <UNK>
rank: 114
score: 97.23370361328125
patch: get > i > null
rank: 114
score: 97.0246810913086
patch: @ Exception State
rank: 114
score: 95.5733642578125
patch: ignore > >
rank: 115
score: 99.14248657226562
patch: public out . write ( $STRING$ + ( char ) ;
rank: 115
score: 99.03860812717014
patch: public void out ( $STRING$ ? ) ;
rank: 115
score: 97.86798095703125
patch: run > ]
rank: 115
score: 97.28923797607422
patch: public abstract public
rank: 115
score: 97.23295084635417
patch: > i case >
rank: 115
score: 97.01347351074219
patch: @ Exception Error
rank: 115
score: 95.56545003255208
patch: println >
rank: 116
score: 99.14152018229167
patch: out . write ( $STRING$ + ( char ) ) ;
rank: 116
score: 99.14022122896634
patch: out . write ( int ch ) throws IO CaMeL Exception {
rank: 116
score: 99.03734241832386
patch: private out . write ( $STRING$ , $STRING$ ) ;
rank: 116
score: 98.97265625
patch: out . write ( byte ( $STRING$ ) ;
rank: 116
score: 97.86580657958984
patch: for > ]
rank: 116
score: 97.28755950927734
patch: public append >
rank: 116
score: 97.23255411783855
patch: remove > i > i
rank: 116
score: 97.0110855102539
patch: public null IO
rank: 116
score: 95.5621566772461
patch: public public IO
rank: 117
score: 99.14109497070312
patch: public abstract out . write ( String ) ;
rank: 117
score: 99.14021809895833
patch: public abstract boolean write ( ) throws IO CaMeL Exception ;
rank: 117
score: 99.03699340820313
patch: public out . write ( Integer $STRING$ ) ;
rank: 117
score: 98.97212524414063
patch: public out . write ( $STRING$ ) ; }
rank: 117
score: 97.86077880859375
patch: get > iterator >
rank: 117
score: 97.28474426269531
patch: finally >
rank: 117
score: 97.23170979817708
patch: > catch > out
rank: 117
score: 97.00933837890625
patch: private Error Exception
rank: 118
score: 99.13998647836539
patch: out . write ( char ch ) throws IO CaMeL Exception {
rank: 118
score: 99.05751953125
patch: public void write ( int Integer $STRING$ ) ;
rank: 118
score: 99.03673206676136
patch: String out . write ( $STRING$ , $STRING$ ) ;
rank: 118
score: 98.97056884765625
patch: ( ) out . write ( $STRING$ ) ;
rank: 118
score: 97.86026611328126
patch: protected public put >
rank: 118
score: 97.28305053710938
patch: public synchronized run
rank: 118
score: 97.22891235351562
patch: catch > i else
rank: 118
score: 97.00605010986328
patch: public Exception :
rank: 118
score: 95.56032307942708
patch: public clear
rank: 119
score: 99.13866077769886
patch: out out . write ( $STRING$ + $STRING$ ) ;
rank: 119
score: 99.05748833550348
patch: public abstract void write ( $STRING$ ) ;
rank: 119
score: 97.85968780517578
patch: do > ]
rank: 119
score: 97.28169250488281
patch: Stack
rank: 119
score: 97.2267557779948
patch: log > length >
rank: 119
score: 97.00452423095703
patch: public Exception Throwable
rank: 120
score: 99.13636271158855
patch: out . write . out . write ( $STRING$ ) ;
rank: 120
score: 99.033447265625
patch: public void out ( $STRING$ ) throws ) ;
rank: 120
score: 98.96866455078126
patch: $STRING$ ) out . write ( $STRING$ ) ;
rank: 120
score: 97.85908203125
patch: protected protected public public
rank: 120
score: 97.22465209960937
patch: > length >
rank: 120
score: 97.00395965576172
patch: protected Exception Stack
rank: 121
score: 99.13395552201705
patch: out . write ( $STRING$ ) ; $STRING$ ) ;
rank: 121
score: 99.05490548270089
patch: public int out ( ) {
rank: 121
score: 97.858154296875
patch: write > i >
rank: 121
score: 97.2796630859375
patch: public private synchronized
rank: 121
score: 97.22348022460938
patch: > i > 0
rank: 121
score: 97.00035095214844
patch: public State 0
rank: 121
score: 95.55250040690105
patch: fail >
rank: 122
score: 99.13561072716347
patch: protected out . write ( $STRING$ ) { return out ; }
rank: 122
score: 99.13362630208333
patch: out . write ( $STRING$ ) ; throws IO CaMeL Exception
rank: 122
score: 99.05290222167969
patch: final void write ( $STRING$ ) ;
rank: 122
score: 99.031689453125
patch: out . write ( $STRING$ ) + $STRING$ ;
rank: 122
score: 98.9643798828125
patch: public out . write ( $STRING$ ) } ;
rank: 122
score: 97.855029296875
patch: add > finally >
rank: 122
score: 97.27885437011719
patch: public static get
rank: 122
score: 97.22212727864583
patch: > length > out
rank: 122
score: 96.99750518798828
patch: public Exception ch
rank: 122
score: 95.55043029785156
patch: public delete >
rank: 123
score: 99.134033203125
patch: private out . write ( $STRING$ )
rank: 123
score: 99.05272565569196
patch: public void write ( ) ;
rank: 123
score: 99.03021918402777
patch: void out ( $STRING$ + $STRING$ ) ;
rank: 123
score: 98.96041259765624
patch: public out . write ( Float $STRING$ ) ;
rank: 123
score: 97.8546142578125
patch: root > i >
rank: 123
score: 97.27487182617188
patch: print
rank: 123
score: 97.22047932942708
patch: run > i > i
rank: 123
score: 96.99213409423828
patch: public ( Exception
rank: 123
score: 95.54427337646484
patch: * { <UNK>
rank: 124
score: 99.13254616477273
patch: public void write ( ) throws IO CaMeL Exception ;
rank: 124
score: 99.13027954101562
patch: public out . write ( String str ) throws ) ;
rank: 124
score: 99.05052185058594
patch: protected out . write ( ) ;
rank: 124
score: 99.0301846590909
patch: private out . write ( $STRING$ ) return $STRING$ ;
rank: 124
score: 98.95863037109375
patch: out . write ( $STRING$ ) ; ) }
rank: 124
score: 97.85203247070312
patch: for > arraycopy >
rank: 124
score: 97.27348327636719
patch: public public values
rank: 124
score: 97.21879069010417
patch: get > i catch >
rank: 124
score: 96.99162292480469
patch: public err null
rank: 125
score: 99.13070913461539
patch: out . write ( $STRING$ ) throws IO CaMeL Exception ) ;
rank: 125
score: 99.12863991477273
patch: out . write ( ( byte [ ] ) ;
rank: 125
score: 99.02991333007813
patch: private final out . write ( $STRING$ ) ;
rank: 125
score: 98.95831909179688
patch: public protected out . write ( $STRING$ ) {
rank: 125
score: 97.85093994140625
patch: push > i >
rank: 125
score: 97.27313232421875
patch: public for >
rank: 125
score: 97.21795654296875
patch: > i > index
rank: 125
score: 96.98467254638672
patch: / State Error
rank: 126
score: 99.1306660970052
patch: out . write ( out . to CaMeL String ( )
rank: 126
score: 99.12862141927083
patch: out . write ( $STRING$ + ( int ch ) ;
rank: 126
score: 99.04924011230469
patch: private void out ( out ) ;
rank: 126
score: 98.95712280273438
patch: write ( out . write ( $STRING$ ) ;
rank: 126
score: 97.85037231445312
patch: private protected public public
rank: 126
score: 97.27066040039062
patch: public public clear
rank: 126
score: 97.21506754557292
patch: public for > catch >
rank: 126
score: 96.97205352783203
patch: protected Error Exception
rank: 127
score: 99.12919108072917
patch: out . write ( $STRING$ ) . flush ( ) ;
rank: 127
score: 97.84967041015625
patch: protected get > i
rank: 127
score: 97.2678451538086
patch: public public abstract
rank: 127
score: 97.21375528971355
patch: log > > catch
rank: 127
score: 96.9681396484375
patch: @ Error Exception
rank: 127
score: 95.53099822998047
patch: public flush >
rank: 128
score: 99.12908466045673
patch: boolean out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 128
score: 99.12813313802083
patch: out . write ( byte [ ] ;
rank: 128
score: 99.04916720920139
patch: public boolean write ( String $STRING$ ) ;
rank: 128
score: 99.02732155539773
patch: out . write ( $STRING$ , 0 , ) ;
rank: 128
score: 97.84789428710937
patch: properties > i >
rank: 128
score: 97.21237182617188
patch: get > catch > i
rank: 128
score: 96.96736145019531
patch: public null Illegal
rank: 129
score: 99.12767944335937
patch: out . write ( String ( $STRING$ ) ;
rank: 129
score: 99.04621717664931
patch: out . write ( 0 $STRING$ ) ;
rank: 129
score: 99.02656385633681
patch: public void . write ( $STRING$ ) ;
rank: 129
score: 98.95620727539062
patch: public out . write ( $STRING$ ) ) {
rank: 129
score: 97.84669799804688
patch: private protected run >
rank: 129
score: 97.21122233072917
patch: public for > out >
rank: 129
score: 96.96708679199219
patch: out null Stack
rank: 130
score: 99.12636311848958
patch: public out . write ( $STRING$ + $STRING$ + ) ;
rank: 130
score: 99.04484252929687
patch: public out . write ( int $STRING$ ) ;
rank: 130
score: 99.02501331676136
patch: public out . write ( $STRING$ ) = $STRING$ ;
rank: 130
score: 97.84642333984375
patch: flush > i >
rank: 130
score: 97.26332092285156
patch: get > else
rank: 130
score: 97.21002197265625
patch: > length > >
rank: 130
score: 96.9667739868164
patch: private Exception Runtime
rank: 131
score: 99.1275634765625
patch: protected out . write ( $STRING$ + $STRING$ ) ;
rank: 131
score: 99.1250712076823
patch: public out . write ( $STRING$ ) throws $STRING$ ) ;
rank: 131
score: 99.04244995117188
patch: public out . write ( String ch ) ;
rank: 131
score: 99.02311567826705
patch: public static out . write ( $STRING$ , ) ;
rank: 131
score: 98.95417131696429
patch: public out ( $STRING$ ) {
rank: 131
score: 97.84593505859375
patch: insert > i >
rank: 131
score: 97.26256561279297
patch: private synchronized <UNK>
rank: 131
score: 97.2079366048177
patch: case > arraycopy >
rank: 131
score: 96.96200561523438
patch: public State catch
rank: 132
score: 99.12589518229167
patch: out out . write ( $STRING$ * / $STRING$ ) ;
rank: 132
score: 99.12467447916667
patch: public out . write ( $STRING$ + out . ) ;
rank: 132
score: 99.04176161024306
patch: public void out ( int i ) ;
rank: 132
score: 99.02294921875
patch: out . write ( $STRING$ ) return out ;
rank: 132
score: 97.84315795898438
patch: protected private for >
rank: 132
score: 97.260498046875
patch: public public to
rank: 132
score: 97.2073262532552
patch: clear > i > length
rank: 132
score: 96.95650227864583
patch: void State
rank: 132
score: 95.51580810546875
patch: public void throw
rank: 133
score: 99.1256573016827
patch: out . write ( int ch ) throws IO CaMeL Exception ;
rank: 133
score: 99.12454223632812
patch: out . write ( $STRING$ + ( byte ) ) ;
rank: 133
score: 99.02252807617188
patch: out . write ( $STRING$ + 1 ) ;
rank: 133
score: 97.838134765625
patch: protected public catch >
rank: 133
score: 97.20679728190105
patch: for > length > i
rank: 133
score: 96.94783020019531
patch: out State out
rank: 133
score: 95.51353963216145
patch: Found >
rank: 134
score: 99.12429470486111
patch: out . write ( ) throws ) ;
rank: 134
score: 99.04159545898438
patch: public static out . write ( out ) ;
rank: 134
score: 99.02223899147727
patch: public out . write ( String int i ) ;
rank: 134
score: 97.83597412109376
patch: private for > >
rank: 134
score: 97.25940704345703
patch: public private run
rank: 134
score: 97.20231119791667
patch: get > size > i
rank: 134
score: 96.94686889648438
patch: public Runnable Error
rank: 134
score: 95.51238250732422
patch: protected public Not
rank: 135
score: 99.12449293870192
patch: out . write write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 135
score: 99.1229248046875
patch: out . write ( byte [ ] value ) ;
rank: 135
score: 99.04007568359376
patch: protected synchronized out . write ( $STRING$ ) ;
rank: 135
score: 99.02194213867188
patch: public static out . write ( char ) ;
rank: 135
score: 97.8349365234375
patch: execute > i >
rank: 135
score: 97.25940704345703
patch: private public <UNK>
rank: 135
score: 97.20211791992188
patch: if > length > i
rank: 135
score: 96.94100952148438
patch: out State err
rank: 135
score: 95.49873860677083
patch: public XML
rank: 136
score: 99.12134806315105
patch: public out . write ( String $STRING$ ) throws $STRING$ ;
rank: 136
score: 99.03946358816964
patch: public boolean out ( ) ;
rank: 136
score: 99.02155095880681
patch: out . write ( $STRING$ ) , $STRING$ ) ;
rank: 136
score: 98.94752332899306
patch: public out . write ( $NUMBER$ ) ;
rank: 136
score: 97.82982788085937
patch: private public append >
rank: 136
score: 97.20201619466145
patch: > size > Index
rank: 136
score: 96.93330383300781
patch: public State iterator
rank: 136
score: 95.49671427408855
patch: Linked >
rank: 137
score: 99.12425648082386
patch: public out . write ( char ch [ ] )
rank: 137
score: 99.1212666829427
patch: public out . write ( String name ) throws ) ;
rank: 137
score: 98.9461181640625
patch: public out . write ( $STRING$ ) { .
rank: 137
score: 97.82880249023438
patch: protected get > arraycopy
rank: 137
score: 97.25222778320312
patch: public public create
rank: 137
score: 97.20027160644531
patch: > Index
rank: 137
score: 96.93294525146484
patch: synchronized Exception State
rank: 138
score: 99.1241924579327
patch: out . write ( char $STRING$ ) throws IO CaMeL Exception ;
rank: 138
score: 99.1200838955966
patch: out . write ( $STRING$ + ( $STRING$ + ;
rank: 138
score: 99.03856811523437
patch: final { out . write ( $STRING$ ) ;
rank: 138
score: 99.02102322048611
patch: public final void out ( $STRING$ ) ;
rank: 138
score: 98.94550170898438
patch: out . write ( $STRING$ ) ( ) ;
rank: 138
score: 97.8287582397461
patch: get > catch
rank: 138
score: 97.19964599609375
patch: catch > > length
rank: 138
score: 96.93070983886719
patch: out Exception null
rank: 138
score: 95.48939514160156
patch: private void throws
rank: 139
score: 99.11937366832386
patch: out . write ( byte [ ] ( ) ;
rank: 139
score: 99.0356674194336
patch: void out ( int i ) ;
rank: 139
score: 99.02097389914773
patch: public final void out . write ( $STRING$ ) ;
rank: 139
score: 98.945068359375
patch: out . . . write ( $STRING$ ) ;
rank: 139
score: 97.827587890625
patch: put > arraycopy >
rank: 139
score: 97.2429428100586
patch: private public set
rank: 139
score: 97.1964111328125
patch: catch > ch >
rank: 139
score: 96.93061828613281
patch: public Runnable Runtime
rank: 139
score: 95.48191324869792
patch: public check
rank: 140
score: 99.12188251201923
patch: final out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 140
score: 99.03338623046875
patch: void write ( int String $STRING$ ) ;
rank: 140
score: 99.02020263671875
patch: public static void out ( $STRING$ ) return ;
rank: 140
score: 98.94456787109375
patch: public out . write ( ] $STRING$ ) {
rank: 140
score: 97.8243408203125
patch: private final get >
rank: 140
score: 97.2380599975586
patch: public public last
rank: 140
score: 97.19591267903645
patch: finally > catch >
rank: 140
score: 96.93046569824219
patch: public Error Not
rank: 140
score: 95.4791488647461
patch: delete > >
rank: 141
score: 99.12130033052884
patch: out . write ( long $STRING$ ) throws IO CaMeL Exception {
rank: 141
score: 99.11902965198864
patch: out . write ( byte [ ] chars ) ;
rank: 141
score: 99.03333740234375
patch: / ) out . write ( $STRING$ ) ;
rank: 141
score: 99.01994323730469
patch: public out . write ( String ;
rank: 141
score: 98.94184705946181
patch: out . write ( $STRING$ out ) ;
rank: 141
score: 97.823828125
patch: handler > i >
rank: 141
score: 97.19591267903645
patch: public for > > i
rank: 141
score: 96.92619323730469
patch: public Runtime Error
rank: 141
score: 95.4772440592448
patch: final void
rank: 142
score: 99.12032376802884
patch: out . write ( byte $STRING$ ) throws IO CaMeL Exception {
rank: 142
score: 99.11857466264205
patch: out . write ( char [ ] chars ) ;
rank: 142
score: 99.01873779296875
patch: public void out ( $STRING$ ) throws Exception ;
rank: 142
score: 98.94095611572266
patch: out . write ( ] ) ;
rank: 142
score: 97.822412109375
patch: protected private add >
rank: 142
score: 97.22489166259766
patch: public protected add
rank: 142
score: 97.19376627604167
patch: public put > arraycopy >
rank: 142
score: 96.9199447631836
patch: public Exception $STRING$
rank: 143
score: 99.03190307617187
patch: public out . write ( String 1 ) {
rank: 143
score: 99.01839773995536
patch: String out ( $STRING$ ) ;
rank: 143
score: 97.82125244140624
patch: protected add > >
rank: 143
score: 97.2247085571289
patch: Set synchronized <UNK>
rank: 143
score: 97.19296264648438
patch: log > arraycopy >
rank: 143
score: 96.91649627685547
patch: out State Type
rank: 143
score: 95.47208404541016
patch: save > >
rank: 144
score: 99.11900916466347
patch: out . write ( $STRING$ ) throws IO CaMeL Exception { ;
rank: 144
score: 99.11728922526042
patch: void out . write ( byte [ ] $STRING$ ) ;
rank: 144
score: 98.93919677734375
patch: public out . write ( byte ; this .
rank: 144
score: 97.22425842285156
patch: public public init
rank: 144
score: 97.1908467610677
patch: put > length > i
rank: 144
score: 96.91160583496094
patch: public Exception (
rank: 144
score: 95.46974182128906
patch: protected void throws
rank: 145
score: 99.11785888671875
patch: out . write ( $STRING$ , str . length ) ;
rank: 145
score: 99.02882385253906
patch: public private void out ( ) ;
rank: 145
score: 99.01307373046875
patch: out . write ( 0 , $STRING$ ) ;
rank: 145
score: 98.93905639648438
patch: public out . write ( byte out ) ;
rank: 145
score: 97.81964111328125
patch: add > next >
rank: 145
score: 97.21185302734375
patch: public list >
rank: 145
score: 97.19073486328125
patch: public clear > arraycopy >
rank: 145
score: 96.9057388305664
patch: public run Stack
rank: 145
score: 95.46913146972656
patch: boolean
rank: 146
score: 99.11703491210938
patch: out . write ( $STRING$ , str ) ;
rank: 146
score: 99.02827758789063
patch: boolean . out . write ( $STRING$ ) ;
rank: 146
score: 99.0124267578125
patch: out . write ( $STRING$ ) = $STRING$ ;
rank: 146
score: 98.93773193359375
patch: write . write ( $STRING$ + $STRING$ ) ;
rank: 146
score: 97.81767578125
patch: hash > i >
rank: 146
score: 97.21099090576172
patch: public public contains
rank: 146
score: 97.1883036295573
patch: for > i catch >
rank: 146
score: 96.90408325195312
patch: public Exception Number
rank: 146
score: 95.46913146972656
patch: public for <UNK>
rank: 147
score: 99.116455078125
patch: public int out . write ( ) throws IO CaMeL Exception ;
rank: 147
score: 99.11563110351562
patch: out . write ( $STRING$ + $STRING$ + out ) ;
rank: 147
score: 99.02754516601563
patch: int . . . write ( $STRING$ ) ;
rank: 147
score: 99.01129150390625
patch: boolean . . write ( $STRING$ ) ;
rank: 147
score: 98.93756781684027
patch: out . write ( final $STRING$ ) ;
rank: 147
score: 97.21043395996094
patch: public public ends
rank: 147
score: 97.1860860188802
patch: catch > > size
rank: 147
score: 96.90081024169922
patch: public null run
rank: 148
score: 99.11592240767045
patch: public boolean write ( ) throws IO CaMeL Exception ;
rank: 148
score: 99.1138916015625
patch: public out . write ( ) throws $STRING$ + ) ;
rank: 148
score: 99.01126708984376
patch: public static void write ( $STRING$ $STRING$ ) ;
rank: 148
score: 98.93718804253473
patch: public out . write ( write ) ;
rank: 148
score: 97.81364135742187
patch: private public catch >
rank: 148
score: 97.18494262695313
patch: public clear > i
rank: 148
score: 96.90060424804688
patch: public Exception EMPTY
rank: 149
score: 99.11590021306819
patch: public int out ( ) throws IO CaMeL Exception {
rank: 149
score: 99.11368408203126
patch: public void out ( ) { ; ; }
rank: 149
score: 99.02544487847223
patch: write . write ( String $STRING$ ) ;
rank: 149
score: 99.01123657226563
patch: public static void out ( $STRING$ $STRING$ ) ;
rank: 149
score: 98.93675401475694
patch: out . write ( $STRING$ ) ; )
rank: 149
score: 97.81342163085938
patch: close > i >
rank: 149
score: 97.19973754882812
patch: catch
rank: 149
score: 97.18443806966145
patch: catch > > case
rank: 149
score: 96.89908599853516
patch: void null State
rank: 149
score: 95.46476745605469
patch: is
rank: 150
score: 99.11578369140625
patch: protected out . write ( $STRING$ * / $STRING$ ) ;
rank: 150
score: 99.1133524576823
patch: out . write ( char ) throws IO CaMeL Exception ;
rank: 150
score: 97.81158447265625
patch: synchronized get > arraycopy
rank: 150
score: 97.1995340983073
patch: public int
rank: 150
score: 97.18402099609375
patch: catch > 0 >
rank: 150
score: 96.89860534667969
patch: private null Error
rank: 150
score: 95.46271514892578
patch: VM
rank: 151
score: 99.11565692608173
patch: void out . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 151
score: 99.11334228515625
patch: public out . write ( $STRING$ + ( byte ) ;
rank: 151
score: 99.02529568142361
patch: static void write ( String $STRING$ ) ;
rank: 151
score: 98.93598022460938
patch: out . write ( $STRING$ ) ; } ;
rank: 151
score: 97.81156921386719
patch: final add >
rank: 151
score: 97.1967544555664
patch: public public read
rank: 151
score: 97.18178304036458
patch: clear > length > length
rank: 151
score: 96.8963623046875
patch: synchronized Exception Exception
rank: 151
score: 95.45637512207031
patch: public public delete
rank: 152
score: 99.11557006835938
patch: public synchronized out . write ( $STRING$ + $STRING$ ) ;
rank: 152
score: 99.11314900716145
patch: public void out ( out ) throws IO CaMeL Exception ;
rank: 152
score: 99.0098544034091
patch: public void out . write ( $STRING$ ) return ;
rank: 152
score: 98.934912109375
patch: public out . write ( ) { $STRING$ ;
rank: 152
score: 97.81033325195312
patch: Data >
rank: 152
score: 97.1962890625
patch: public public start
rank: 152
score: 97.18069458007812
patch: > catch > size
rank: 152
score: 96.88471984863281
patch: out State arraycopy
rank: 153
score: 99.1135009765625
patch: private synchronized out . write ( $STRING$ ) {
rank: 153
score: 99.11004083806819
patch: public out . write ( out . write ) ;
rank: 153
score: 99.00713556463069
patch: public static out . write ( Object $STRING$ ) ;
rank: 153
score: 98.93468627929687
patch: public out . out . write ( ) ;
rank: 153
score: 97.80906168619792
patch: set >
rank: 153
score: 97.19550323486328
patch: public protected synchronized
rank: 153
score: 96.88034057617188
patch: synchronized null Exception
rank: 153
score: 95.45346069335938
patch: public static
rank: 154
score: 99.11297052556819
patch: public void write ( ) throws IO CaMeL Exception {
rank: 154
score: 99.10957475142045
patch: out . write ( byte out [ ] ) ;
rank: 154
score: 99.00614013671876
patch: String out . write ( String $STRING$ ) ;
rank: 154
score: 98.93331298828124
patch: public final out . write ( $STRING$ ) throws
rank: 154
score: 97.80819702148438
patch: do >
rank: 154
score: 97.19080352783203
patch: private public get
rank: 154
score: 97.1775614420573
patch: add > catch > >
rank: 154
score: 96.87481689453125
patch: public Error Runnable
rank: 154
score: 95.45318603515625
patch: public < void
rank: 155
score: 99.11284845525569
patch: public abstract int out . write ( $STRING$ ) ;
rank: 155
score: 98.93254258897569
patch: public out . write ( ) ) ;
rank: 155
score: 97.8056640625
patch: get > equals >
rank: 155
score: 97.19048309326172
patch: public Map <UNK>
rank: 155
score: 96.8746566772461
patch: public Exception public
rank: 155
score: 95.45023345947266
patch: public iterator >
rank: 156
score: 99.11215209960938
patch: out . write ( $STRING$ , out ) ;
rank: 156
score: 99.01618109809027
patch: void write . write ( $STRING$ ) ;
rank: 156
score: 99.00429077148438
patch: out . append ( $STRING$ + $STRING$ ) ;
rank: 156
score: 97.80267333984375
patch: I > for >
rank: 156
score: 97.18363444010417
patch: public starts
rank: 156
score: 97.17584228515625
patch: > next > Index
rank: 156
score: 96.87200927734375
patch: public Exception Clone
rank: 156
score: 95.44802856445312
patch: String
rank: 157
score: 99.11214192708333
patch: public out . write ( $STRING$ ) { return out ;
rank: 157
score: 99.10915305397727
patch: public abstract out . write ( int $STRING$ ) ;
rank: 157
score: 99.01521606445313
patch: public void out . write ( out ) ;
rank: 157
score: 98.93027072482639
patch: public out . write ( ] ) ;
rank: 157
score: 97.80054321289063
patch: protected for > >
rank: 157
score: 97.1749776204427
patch: get > i > else
rank: 157
score: 96.87162272135417
patch: out State
rank: 157
score: 95.44512939453125
patch: public load >
rank: 158
score: 99.11196899414062
patch: out . write ( $STRING$ ) . close ( ) ;
rank: 158
score: 99.107666015625
patch: out . write ( byte [ ] ) ; ;
rank: 158
score: 99.01317681206598
patch: public void write ( final $STRING$ ) ;
rank: 158
score: 99.00288696289063
patch: public static out . write ( String ) ;
rank: 158
score: 97.79921264648438
patch: synchronized private get >
rank: 158
score: 97.17786407470703
patch: has > else
rank: 158
score: 97.1742451985677
patch: append > i > i
rank: 158
score: 96.86722564697266
patch: / State State
rank: 158
score: 95.44342041015625
patch: public E
rank: 159
score: 99.11058553059895
patch: out . write ( $STRING$ ) { return $STRING$ ; }
rank: 159
score: 99.10575358072917
patch: public out . write ( $STRING$ + ( String ) ;
rank: 159
score: 99.00170220269098
patch: public static void out ( $STRING$ / ;
rank: 159
score: 97.7951416015625
patch: encode > i >
rank: 159
score: 97.17394002278645
patch: catch > equals >
rank: 159
score: 97.1702880859375
patch: public Writer <UNK>
rank: 159
score: 96.86225891113281
patch: private null Stack
rank: 160
score: 99.11051025390626
patch: protected synchronized out . write ( $STRING$ ) {
rank: 160
score: 99.10564630681819
patch: out . write ( $STRING$ + out . ) ;
rank: 160
score: 99.01105414496527
patch: void out ( out ; null ) ;
rank: 160
score: 99.00157581676136
patch: String . [ ] . write ( $STRING$ ) ;
rank: 160
score: 98.92691476004464
patch: out . write ( $STRING$ ;
rank: 160
score: 97.79378051757813
patch: private public remove >
rank: 160
score: 97.17362467447917
patch: clear > length > ]
rank: 160
score: 97.16923522949219
patch: next > Exception
rank: 160
score: 96.85357666015625
patch: private Exception Null
rank: 160
score: 95.43357340494792
patch: public Array
rank: 161
score: 99.10984293619792
patch: out . write ( $STRING$ , System . out ) ;
rank: 161
score: 99.1055196126302
patch: out [ ] write ( ) throws IO CaMeL Exception ;
rank: 161
score: 99.00899929470486
patch: out . write ( String 1 ) ;
rank: 161
score: 98.92608032226562
patch: . . write . write ( $STRING$ ) ;
rank: 161
score: 97.79373779296876
patch: get > > i
rank: 161
score: 97.17343139648438
patch: has > length > i
rank: 161
score: 97.16358947753906
patch: public public final
rank: 161
score: 96.85012817382812
patch: public State Thread
rank: 161
score: 95.43288167317708
patch: public increment
rank: 162
score: 99.10860188802083
patch: protected abstract void write ( ) throws IO CaMeL Exception ;
rank: 162
score: 99.1052958170573
patch: out . write ( write ( byte [ ] ) ;
rank: 162
score: 99.00779215494792
patch: private void write ( String $STRING$ ) ;
rank: 162
score: 98.99863688151042
patch: public out . write ( Object ) ;
rank: 162
score: 98.92540283203125
patch: out . write ( $STRING$ ) ; . .
rank: 162
score: 97.79342041015624
patch: protected run > ]
rank: 162
score: 97.1727803548177
patch: add > i > catch
rank: 162
score: 97.15776062011719
patch: public public replace
rank: 162
score: 96.84805297851562
patch: void State null
rank: 162
score: 95.43193054199219
patch: equals >
rank: 163
score: 99.10734049479167
patch: public synchronized out . write . write ( $STRING$ ) ;
rank: 163
score: 99.10499064127605
patch: out . write ( $STRING$ + ( String name ) ;
rank: 163
score: 99.00775146484375
patch: private void out ( ) {
rank: 163
score: 98.99846857244319
patch: public out . write ( String $STRING$ ) { ;
rank: 163
score: 97.79059448242188
patch: protected put > ]
rank: 163
score: 97.17140706380208
patch: get > i > size
rank: 163
score: 97.15747833251953
patch: public public clone
rank: 163
score: 96.84524536132812
patch: public public null
rank: 164
score: 99.1064453125
patch: private out . write ( $STRING$ * / $STRING$ ) ;
rank: 164
score: 99.10479125976562
patch: public abstract out . write ( byte ) ;
rank: 164
score: 99.00748901367187
patch: public void write ( int String 1 ) ;
rank: 164
score: 98.99782492897727
patch: out . write ( $STRING$ ) out . out ;
rank: 164
score: 97.790087890625
patch: main > i >
rank: 164
score: 97.16880289713542
patch: > i != i
rank: 164
score: 97.15650177001953
patch: public protected run
rank: 164
score: 96.84475708007812
patch: public public Error
rank: 165
score: 99.1057880108173
patch: out . write ( $STRING$ * / $STRING$ + $STRING$ ) ;
rank: 165
score: 99.10462535511364
patch: public out . write ( $STRING$ + write ) ;
rank: 165
score: 98.99690551757813
patch: boolean . . . write ( $STRING$ ) ;
rank: 165
score: 98.91734619140625
patch: public out . write ( byte ; ) ;
rank: 165
score: 97.78923797607422
patch: private public private
rank: 165
score: 97.16569010416667
patch: add > length > length
rank: 165
score: 97.15586853027344
patch: public public write
rank: 166
score: 99.10560960036058
patch: public synchronized out . write ( ) throws IO CaMeL Exception {
rank: 166
score: 99.10445556640624
patch: public out . write ( String ) { ;
rank: 166
score: 99.00211181640626
patch: public void write ( final String 0 ) ;
rank: 166
score: 98.99620903862848
patch: private static void out ( $STRING$ ) ;
rank: 166
score: 98.91719055175781
patch: out . write ( $STRING$ ) {
rank: 166
score: 97.78486938476563
patch: I > add >
rank: 166
score: 97.1653564453125
patch: > i case
rank: 166
score: 97.15533447265625
patch: has
rank: 166
score: 96.84149932861328
patch: public Error IO
rank: 166
score: 95.42265319824219
patch: void <UNK> <UNK>
rank: 167
score: 99.10460486778847
patch: out . write ( String $STRING$ ) throws IO CaMeL Exception ;
rank: 167
score: 99.10282759232955
patch: public abstract out . write ( $STRING$ ) ; ;
rank: 167
score: 99.00173514229911
patch: public boolean write ( ) ;
rank: 167
score: 98.91679077148437
patch: public out . write ( ] out ) ;
rank: 167
score: 97.78472900390625
patch: private run > >
rank: 167
score: 97.15859985351562
patch: > length > ++
rank: 167
score: 96.84114074707031
patch: public State Error
rank: 167
score: 95.42254638671875
patch: 
rank: 168
score: 99.10067138671874
patch: public out . write ( $STRING$ ) ; ;
rank: 168
score: 99.0016357421875
patch: private out . write ( String $STRING$ ) {
rank: 168
score: 98.99523162841797
patch: out . add ( $STRING$ ) ;
rank: 168
score: 98.91665649414062
patch: public out . write ( $STRING$ ) / ;
rank: 168
score: 97.78433227539062
patch: protected protected run >
rank: 168
score: 97.15850830078125
patch: clear > i > catch
rank: 168
score: 96.839111328125
patch: public null Out
rank: 168
score: 95.42090861002605
patch: encode >
rank: 169
score: 99.10315958658855
patch: out . write ( $STRING$ , byte [ ] ) ;
rank: 169
score: 99.10059703480114
patch: public out . write ( $STRING$ + $STRING$ + ;
rank: 169
score: 98.99999389648437
patch: out . write ( char += $STRING$ ) ;
rank: 169
score: 98.91627197265625
patch: public out . write ( final $STRING$ ) {
rank: 169
score: 97.783984375
patch: private public new >
rank: 169
score: 97.15567016601562
patch: > size > length
rank: 169
score: 96.83910369873047
patch: protected State Stack
rank: 169
score: 95.42082214355469
patch: private public Not
rank: 170
score: 99.10291466346153
patch: public synchronized out . write ( ) throws IO CaMeL Exception ;
rank: 170
score: 99.09971923828125
patch: Object out ( ) throws IO CaMeL Exception ;
rank: 170
score: 98.9150146484375
patch: out . write ( $STRING$ ) ; this .
rank: 170
score: 97.7829345703125
patch: protected public public protected
rank: 170
score: 97.15514119466145
patch: > count > i
rank: 170
score: 96.8386459350586
patch: public new State
rank: 171
score: 99.09908040364583
patch: out . write ( byte [ ] $STRING$ ) ; ;
rank: 171
score: 98.99496459960938
patch: public out . write ( byte ch ) ;
rank: 171
score: 98.99210611979167
patch: public void out ( $STRING$ ? ? ;
rank: 171
score: 98.91427001953124
patch: out . write ( $STRING$ ) ; . ;
rank: 171
score: 97.78278198242188
patch: protected public private public
rank: 171
score: 97.10657755533855
patch: public append
rank: 171
score: 96.83629608154297
patch: out Runtime State
rank: 171
score: 95.4126688639323
patch: public list
rank: 172
score: 99.10208834134616
patch: out . write . write ( $STRING$ * / $STRING$ ) ;
rank: 172
score: 98.99472384982639
patch: public void write ( String 0 ) ;
rank: 172
score: 98.99202270507813
patch: public void out ( $STRING$ ? ? ) ;
rank: 172
score: 98.91181640625
patch: public . out . write ( $STRING$ ) ;
rank: 172
score: 97.7795166015625
patch: synchronized get > Index
rank: 172
score: 97.153076171875
patch: get > i > arraycopy
rank: 172
score: 96.83499145507812
patch: out State Runtime
rank: 172
score: 95.41222381591797
patch: $NUMBER$ <UNK>
rank: 173
score: 99.10204139122597
patch: public static out . write ( ) throws IO CaMeL Exception ;
rank: 173
score: 99.09721544053819
patch: out [ ] write ( $STRING$ ) ;
rank: 173
score: 98.99415283203125
patch: static out . write ( String $STRING$ ) ;
rank: 173
score: 98.98963623046875
patch: out [ ] . write ( $STRING$ ) ;
rank: 173
score: 98.91181030273438
patch: public out . write ( $STRING$ ) ; )
rank: 173
score: 97.77827758789063
patch: can > i >
rank: 173
score: 97.15235392252605
patch: catch > else >
rank: 173
score: 97.08983612060547
patch: Next
rank: 173
score: 96.83354187011719
patch: / null Error
rank: 174
score: 99.10093180338542
patch: out . write . write ( $STRING$ , $STRING$ ) ;
rank: 174
score: 99.09713134765624
patch: out . write ( out . write ) ;
rank: 174
score: 98.99365912543402
patch: void out ( $STRING$ ; null ) ;
rank: 174
score: 98.98957963423295
patch: public out . write ( $STRING$ ) throws Exception ;
rank: 174
score: 98.91130913628473
patch: public ) . write ( $STRING$ ) ;
rank: 174
score: 97.77824096679687
patch: final get > catch
rank: 174
score: 97.14979044596355
patch: catch > i >=
rank: 174
score: 96.83211517333984
patch: public Exception Index
rank: 174
score: 95.40426635742188
patch: open > >
rank: 175
score: 99.10045369466145
patch: public out ( ) { this . out ( ) ;
rank: 175
score: 99.0965576171875
patch: public void out . write ( $STRING$ + $STRING$ ) ;
rank: 175
score: 98.99283175998264
patch: public void write ( String $STRING$ ) {
rank: 175
score: 98.98892211914062
patch: public out . write ( Object $STRING$ ) ;
rank: 175
score: 98.9105224609375
patch: public out . write . $STRING$ ) ) ;
rank: 175
score: 97.775830078125
patch: private private run >
rank: 175
score: 97.1496073404948
patch: get > out > i
rank: 175
score: 96.83072662353516
patch: public null err
rank: 176
score: 99.09986877441406
patch: protected out . write ( $STRING$ )
rank: 176
score: 99.09615071614583
patch: public out . write ( $STRING$ ) { ; ; }
rank: 176
score: 98.9922607421875
patch: final abstract out . write ( $STRING$ ) ;
rank: 176
score: 98.98577325994319
patch: void out . write ( $STRING$ , $STRING$ ) ;
rank: 176
score: 98.9100341796875
patch: public out . write ( byte 1 ) ;
rank: 176
score: 97.77424621582031
patch: set > ]
rank: 176
score: 97.14902750651042
patch: null > catch >
rank: 176
score: 97.06169128417969
patch: finally
rank: 176
score: 96.83008575439453
patch: public State Null
rank: 176
score: 95.39924621582031
patch: public abstract Not
rank: 177
score: 99.09972034801136
patch: public out . write ( $STRING$ * / ) ;
rank: 177
score: 99.09543863932292
patch: public static out . write ( $STRING$ + $STRING$ ) ;
rank: 177
score: 98.9917236328125
patch: public void write ( String String $STRING$ ) ;
rank: 177
score: 98.90964965820312
patch: public out out . write ( $STRING$ ) {
rank: 177
score: 97.77330932617187
patch: private run > ]
rank: 177
score: 97.1475321451823
patch: run > length > i
rank: 177
score: 97.0587666829427
patch: public register
rank: 177
score: 96.82449340820312
patch: public null catch
rank: 178
score: 99.099609375
patch: public abstract out . write ( $STRING$ * / $STRING$ ) ;
rank: 178
score: 99.09509887695313
patch: out . write ( ) throws $STRING$ ) ;
rank: 178
score: 98.99164428710938
patch: void . out . write ( $STRING$ ) ;
rank: 178
score: 98.90716552734375
patch: $STRING$ . write ( $STRING$ ) ;
rank: 178
score: 97.77227020263672
patch: put > i
rank: 178
score: 97.14736938476562
patch: try > i > Index
rank: 178
score: 96.8226318359375
patch: static null Exception
rank: 179
score: 99.0993182842548
patch: out . write ( char $STRING$ ) throws IO CaMeL Exception {
rank: 179
score: 99.0948974609375
patch: out . write ( $STRING$ + name ) ;
rank: 179
score: 98.99120415581598
patch: public int out . write ( ) ;
rank: 179
score: 98.90623779296875
patch: out . write ( $STRING$ + false ) ;
rank: 179
score: 97.76893310546875
patch: script > i >
rank: 179
score: 97.14676920572917
patch: catch > i :
rank: 179
score: 97.02591959635417
patch: public current
rank: 179
score: 96.82095336914062
patch: public $STRING$ null
rank: 180
score: 99.09376017252605
patch: public out . write ( byte ) throws IO CaMeL Exception
rank: 180
score: 98.99061414930556
patch: protected void write ( String $STRING$ ) ;
rank: 180
score: 98.98322088068181
patch: public out . write ( $STRING$ , $NUMBER$ ) ;
rank: 180
score: 98.90596923828124
patch: public out . write ( byte write ) ;
rank: 180
score: 97.76436767578124
patch: get > else catch
rank: 180
score: 97.14529418945312
patch: > length catch >
rank: 180
score: 97.02229817708333
patch: public double
rank: 180
score: 96.81645965576172
patch: public err Error
rank: 181
score: 99.09906560724431
patch: public out . write ( $STRING$ * / $STRING$ )
rank: 181
score: 99.09360758463542
patch: public out . write ( String ) { return out ;
rank: 181
score: 98.99053955078125
patch: public int write . write ( $STRING$ ) ;
rank: 181
score: 98.98314319957386
patch: public out . write ( int int $NUMBER$ ) ;
rank: 181
score: 98.90595092773438
patch: public out . write ( ) { ) ;
rank: 181
score: 97.76190185546875
patch: private get > arraycopy
rank: 181
score: 97.14491780598958
patch: clear > length > Index
rank: 181
score: 97.00927734375
patch: public put
rank: 181
score: 96.81059265136719
patch: public Thread Exception
rank: 181
score: 95.39152018229167
patch: public copy
rank: 182
score: 99.09621175130208
patch: public out . write ( $STRING$ * / $STRING$ ) {
rank: 182
score: 99.09360080295139
patch: out . write ( ) throws $STRING$ ;
rank: 182
score: 98.99015299479167
patch: public private out . write ( ) ;
rank: 182
score: 98.97916412353516
patch: public void out ( $STRING$ ? ;
rank: 182
score: 98.90457763671876
patch: out . write ( $STRING$ ) ; ) {
rank: 182
score: 97.76151123046876
patch: add > err >
rank: 182
score: 97.14377848307292
patch: get > length > catch
rank: 182
score: 97.00429280598958
patch: null >
rank: 182
score: 96.8079833984375
patch: protected null Stack
rank: 182
score: 95.39134724934895
patch: public find
rank: 183
score: 99.09344482421875
patch: public out . write ( char [ ] chars ) ;
rank: 183
score: 98.989013671875
patch: protected void out ( out ) ;
rank: 183
score: 98.90440538194444
patch: out . write ( ] out ) ;
rank: 183
score: 97.76090087890626
patch: setup > i >
rank: 183
score: 97.14271036783855
patch: public catch > i >
rank: 183
score: 96.80543518066406
patch: public EMPTY State
rank: 183
score: 95.3898213704427
patch: delete >
rank: 184
score: 99.09508599175348
patch: public final out . write ( $STRING$ )
rank: 184
score: 98.98779296875
patch: public private out ( ) ;
rank: 184
score: 98.90372314453126
patch: public out . write . write ( out ;
rank: 184
score: 97.76080322265625
patch: can > catch >
rank: 184
score: 97.14197794596355
patch: > iterator > Index
rank: 184
score: 96.80540466308594
patch: public $STRING$ Error
rank: 184
score: 95.38955688476562
patch: < public void
rank: 185
score: 99.09505521334134
patch: public out . write ( $STRING$ ) { return $STRING$ ; }
rank: 185
score: 99.0926180752841
patch: public abstract out . write ( $STRING$ + ) ;
rank: 185
score: 98.98739963107639
patch: private void out . write ( ) ;
rank: 185
score: 98.903076171875
patch: public out . write . $STRING$ ;
rank: 185
score: 97.76034545898438
patch: private public protected
rank: 185
score: 97.13710530598958
patch: add > length > ]
rank: 185
score: 96.96754964192708
patch: public Hash
rank: 185
score: 96.80242919921875
patch: private Null Exception
rank: 186
score: 99.09459431966145
patch: public out . close ( ) throws IO CaMeL Exception ;
rank: 186
score: 98.9873779296875
patch: public boolean write ( final String $STRING$ ) ;
rank: 186
score: 98.97723999023438
patch: out . write ( $STRING$ + 0 ) ;
rank: 186
score: 98.902783203125
patch: public out ( $STRING$ ) out ( ) ;
rank: 186
score: 97.76026000976563
patch: private public private public
rank: 186
score: 97.13645426432292
patch: log > case >
rank: 186
score: 96.96653238932292
patch: List <UNK>
rank: 186
score: 96.80194091796875
patch: out null Type
rank: 187
score: 99.0941874186198
patch: write . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 187
score: 98.98634033203125
patch: public out . write ( char 1 ) ;
rank: 187
score: 98.97709517045455
patch: int out . write ( $STRING$ , $STRING$ ) ;
rank: 187
score: 98.9026870727539
patch: public out . write ( $STRING$ ;
rank: 187
score: 97.7576171875
patch: private public public run
rank: 187
score: 97.13602701822917
patch: > finally > i
rank: 187
score: 96.96041870117188
patch: public notify
rank: 187
score: 96.80052947998047
patch: public err Stack
rank: 187
score: 95.3856709798177
patch: open >
rank: 188
score: 99.0894775390625
patch: void out . write ( String str ) ;
rank: 188
score: 98.98416476779514
patch: out . write ( Long $STRING$ ) ;
rank: 188
score: 98.976318359375
patch: public synchronized out write ( $STRING$ ) ;
rank: 188
score: 98.90255737304688
patch: public out . write . ) ;
rank: 188
score: 97.75595703125
patch: local > arraycopy >
rank: 188
score: 97.13390096028645
patch: > next > ]
rank: 188
score: 96.96034749348958
patch: public catch
rank: 188
score: 96.7972640991211
patch: / Exception Exception
rank: 188
score: 95.38442993164062
patch: private boolean
rank: 189
score: 99.09390963040866
patch: out . write ( $STRING$ ) throws ( IO CaMeL Exception {
rank: 189
score: 99.08842637803819
patch: public out . write ( String str )
rank: 189
score: 98.98402913411458
patch: public void write ( int $NUMBER$ ) ;
rank: 189
score: 98.97596324573864
patch: public static out . write ( $STRING$ ) ) ;
rank: 189
score: 98.90177612304687
patch: public out . write ( byte $NUMBER$ ) ;
rank: 189
score: 97.754833984375
patch: Default > catch >
rank: 189
score: 97.12942504882812
patch: clear > i > ++
rank: 189
score: 96.79698944091797
patch: public Error Illegal
rank: 189
score: 95.3839823404948
patch: load >
rank: 190
score: 99.09375
patch: public abstract out . write ( $STRING$ , $STRING$ ) ;
rank: 190
score: 98.98150024414062
patch: private out . write ( String 1 ) ;
rank: 190
score: 98.97541947798295
patch: out . write ( $STRING$ , - 0 ) ;
rank: 190
score: 98.90074157714844
patch: out . write ( SIZE ) ;
rank: 190
score: 97.75358276367187
patch: private synchronized for >
rank: 190
score: 97.1287129720052
patch: > iterator > length
rank: 190
score: 96.95271809895833
patch: private get
rank: 190
score: 96.79503631591797
patch: private Runtime Stack
rank: 191
score: 99.0931396484375
patch: out . write . long ( ) throws IO CaMeL Exception ;
rank: 191
score: 99.08680308948864
patch: public abstract out . write ( int ch ) ;
rank: 191
score: 98.98136596679687
patch: public out . write ( String 0 ) ;
rank: 191
score: 98.97540283203125
patch: public static out ( ) { ;
rank: 191
score: 98.89995659722223
patch: public out . write $STRING$ $STRING$ ) ;
rank: 191
score: 97.75334167480469
patch: remove > ]
rank: 191
score: 97.12864176432292
patch: initialize > length > i
rank: 191
score: 96.93961588541667
patch: public values
rank: 191
score: 96.79463958740234
patch: public State exit
rank: 192
score: 99.09286733774039
patch: public out . write . $STRING$ ) throws IO CaMeL Exception ;
rank: 192
score: 99.08650716145833
patch: out . write ( ) throws write ( $STRING$ ) ;
rank: 192
score: 98.98099365234376
patch: public int write ( final String $STRING$ ) ;
rank: 192
score: 98.975390625
patch: out . put ( $STRING$ , $STRING$ ) ;
rank: 192
score: 98.899267578125
patch: out . write ( $STRING$ ) out ) ;
rank: 192
score: 97.75146484375
patch: my > i >
rank: 192
score: 97.12856038411458
patch: insert > i > i
rank: 192
score: 96.7918701171875
patch: public $STRING$ State
rank: 192
score: 95.37577311197917
patch: public iterator
rank: 193
score: 98.97908782958984
patch: void write ( int $STRING$ ) ;
rank: 193
score: 98.97347683376736
patch: public static void out ( $STRING$ ) {
rank: 193
score: 97.75140991210938
patch: protected put > i
rank: 193
score: 97.12459309895833
patch: add > i > Index
rank: 193
score: 96.9258524576823
patch: public contains
rank: 193
score: 96.78804016113281
patch: void State Exception
rank: 193
score: 95.37239837646484
patch: public synchronized boolean
rank: 194
score: 99.09170297475961
patch: public boolean out . write ( ) throws IO CaMeL Exception ;
rank: 194
score: 99.0855379971591
patch: public abstract out . write ( String name ) ;
rank: 194
score: 98.97268337673611
patch: public boolean out ( $STRING$ ) { ;
rank: 194
score: 97.75015869140626
patch: private put > >
rank: 194
score: 97.12352498372395
patch: add > i > length
rank: 194
score: 96.7865982055664
patch: / err Exception
rank: 195
score: 99.09110201322116
patch: public out . write ( char ) throws IO CaMeL Exception ;
rank: 195
score: 98.97688802083333
patch: private abstract out . write ( ) ;
rank: 195
score: 98.97254774305556
patch: . . . write ( $STRING$ ) ;
rank: 195
score: 98.89592827690973
patch: public out . write ( ) { public
rank: 195
score: 97.748046875
patch: add > length >
rank: 195
score: 97.12314860026042
patch: add > length > Index
rank: 195
score: 96.91202799479167
patch: public !
rank: 195
score: 96.7860107421875
patch: void State Stack
rank: 196
score: 99.09051044170673
patch: public out . write ( $STRING$ ) { write ( ) ;
rank: 196
score: 99.08358764648438
patch: out . write ( ( byte [ ] $STRING$ ) ;
rank: 196
score: 98.97577514648438
patch: void out . write ( String 1 ) ;
rank: 196
score: 97.74506378173828
patch: get > length
rank: 196
score: 97.12278238932292
patch: return > catch >
rank: 196
score: 96.91072591145833
patch: public finally
rank: 196
score: 95.3688456217448
patch: protected boolean
rank: 197
score: 99.09002130681819
patch: public abstract void write . write ( $STRING$ ) ;
rank: 197
score: 98.97576226128473
patch: private out . write ( out ) ;
rank: 197
score: 98.97233442826705
patch: public out . write ( String . . . ;
rank: 197
score: 97.12216186523438
patch: public put > catch >
rank: 197
score: 96.87477111816406
patch: next
rank: 197
score: 96.78324127197266
patch: public Error err
rank: 197
score: 95.363037109375
patch: public Int
rank: 198
score: 99.08216552734375
patch: public void out ( ) throws IO CaMeL Exception
rank: 198
score: 98.97555541992188
patch: public void write ( int Integer $NUMBER$ ) ;
rank: 198
score: 98.97197931463069
patch: public synchronized out . write ( $STRING$ ) { ;
rank: 198
score: 97.73855590820312
patch: synchronized add > >
rank: 198
score: 97.12136840820312
patch: log > i > i
rank: 198
score: 96.85137939453125
patch: public create
rank: 198
score: 96.78150939941406
patch: public Error Internal
rank: 198
score: 95.35989379882812
patch: load > >
rank: 199
score: 99.08928888494319
patch: public abstract final out . write ( $STRING$ ) ;
rank: 199
score: 98.97529296875
patch: synchronized abstract out . write ( $STRING$ ) ;
rank: 199
score: 98.9710693359375
patch: public void out ( final $STRING$ ) ;
rank: 199
score: 98.89507446289062
patch: public $STRING$ out . write ( $STRING$ ) {
rank: 199
score: 97.73377075195313
patch: activate > i >
rank: 199
score: 97.12095133463542
patch: > size > else
rank: 199
score: 96.84629313151042
patch: public Map
rank: 199
score: 96.78143310546875
patch: public null Unsupported
rank: 200
score: 99.08926391601562
patch: public synchronized out . write ( $STRING$ ) { ) ;
rank: 200
score: 99.07916814630681
patch: public out . write ( String ( $STRING$ ) ;
rank: 200
score: 98.9710693359375
patch: public static abstract out . write ( $STRING$ ) ;
rank: 200
score: 97.73198852539062
patch: delete > i >
rank: 200
score: 97.12066650390625
patch: > next > else
rank: 200
score: 96.83970133463542
patch: public ends
rank: 200
score: 96.7747802734375
patch: public Exception Interrupted
rank: 200
score: 95.35450236002605
patch: search >
rank: 201
score: 99.08899943033855
patch: private abstract void write ( ) throws IO CaMeL Exception ;
rank: 201
score: 99.07893880208333
patch: public void write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 201
score: 98.97460327148437
patch: public out . write ( char ch ) ;
rank: 201
score: 98.89264594184027
patch: public write . write ( $STRING$ ) {
rank: 201
score: 97.73103637695313
patch: I > get >
rank: 201
score: 97.11968994140625
patch: > iterator > else
rank: 201
score: 96.77442932128906
patch: public Error Thread
rank: 202
score: 99.08727010091145
patch: out . out . write . write ( $STRING$ ) ;
rank: 202
score: 99.07830810546875
patch: public out . write ( char out [ ] ) ;
rank: 202
score: 98.97411499023437
patch: private int out . write ( $STRING$ ) ;
rank: 202
score: 98.97036743164062
patch: public static out . write ( byte ) ;
rank: 202
score: 98.892333984375
patch: write ( $STRING$ ) write ( $STRING$ ) ;
rank: 202
score: 97.72960205078125
patch: get > while >
rank: 202
score: 97.11612955729167
patch: write > length > i
rank: 202
score: 96.82806396484375
patch: public Writer
rank: 202
score: 96.7744140625
patch: public Null Runtime
rank: 202
score: 95.35401153564453
patch: public public Abstract
rank: 203
score: 99.08571213942308
patch: public final out . write ( ) throws IO CaMeL Exception ;
rank: 203
score: 99.07821316189236
patch: out . write ( byte value ) ;
rank: 203
score: 98.96809692382813
patch: out . write ( 0 + $STRING$ ) ;
rank: 203
score: 98.8908447265625
patch: public out . write ( byte ) ) ;
rank: 203
score: 97.728564453125
patch: refresh > i >
rank: 203
score: 97.11561075846355
patch: > i > Out
rank: 203
score: 96.77337646484375
patch: public null Thread
rank: 204
score: 99.08558146158855
patch: out . write . write . Byte ( $STRING$ ) ;
rank: 204
score: 99.07738240559895
patch: out . write ( write ) throws IO CaMeL Exception ;
rank: 204
score: 98.97339630126953
patch: boolean out . write ( ) ;
rank: 204
score: 98.96767356178977
patch: public out . write ( $STRING$ ) { * /
rank: 204
score: 98.89042358398437
patch: write ( out . get ( $STRING$ ) ;
rank: 204
score: 97.72727966308594
patch: static get >
rank: 204
score: 97.11360677083333
patch: log > case case
rank: 204
score: 96.77255249023438
patch: public protected Exception
rank: 205
score: 99.08555250901442
patch: public out . write ( int ) throws IO CaMeL Exception ;
rank: 205
score: 98.97230224609375
patch: out . write ( char ( $STRING$ ) ;
rank: 205
score: 97.72486114501953
patch: put > Index
rank: 205
score: 97.11351521809895
patch: hash > length > i
rank: 205
score: 96.81479899088542
patch: public last
rank: 205
score: 96.76451110839844
patch: out State Exception
rank: 205
score: 95.35067749023438
patch: public new >
rank: 206
score: 99.07674153645833
patch: public out . write ( ) throws $STRING$ + $STRING$ ;
rank: 206
score: 98.97197875976562
patch: public out . write ( Integer 1 ) ;
rank: 206
score: 98.9654208096591
patch: int out . write ( $STRING$ ) return $STRING$ ;
rank: 206
score: 98.88867950439453
patch: public out . write . out ;
rank: 206
score: 97.72471923828125
patch: trim > i >
rank: 206
score: 97.11280314127605
patch: > catch > Stack
rank: 206
score: 96.80173746744792
patch: private set
rank: 206
score: 96.76158905029297
patch: private State Stack
rank: 206
score: 95.34755452473958
patch: public flush
rank: 207
score: 99.08388108473558
patch: public out . write ( byte ) throws IO CaMeL Exception {
rank: 207
score: 99.07557169596355
patch: public out . write ( byte [ ] chars ) ;
rank: 207
score: 98.97179565429687
patch: XML . Runtime . write ( $STRING$ ) ;
rank: 207
score: 98.96412963867188
patch: out . write ( $STRING$ ) return ) ;
rank: 207
score: 98.88857014973958
patch: public out . write ( $STRING$ ) .
rank: 207
score: 97.72362670898437
patch: run > ] >
rank: 207
score: 97.11166381835938
patch: > i > next
rank: 207
score: 96.79073079427083
patch: Stack <UNK>
rank: 207
score: 96.7612813313802
patch: public Runtime
rank: 207
score: 95.34735107421875
patch: public public increment
rank: 208
score: 99.08318622295673
patch: out . write ( $STRING$ ) . write ( true ) ;
rank: 208
score: 99.07476806640625
patch: public out . write ( int ch ) ;
rank: 208
score: 98.97126770019531
patch: private abstract void out ( ) ;
rank: 208
score: 98.96412242542614
patch: public static out . write ( $STRING$ , / ;
rank: 208
score: 98.88773193359376
patch: public else out . write ( $STRING$ ) ;
rank: 208
score: 97.7231689453125
patch: I > public public
rank: 208
score: 97.11044311523438
patch: read > i > i
rank: 208
score: 96.78736368815105
patch: public start
rank: 208
score: 96.75975799560547
patch: private Error State
rank: 208
score: 95.34327697753906
patch: < >
rank: 209
score: 99.08294208233173
patch: public write . write ( $STRING$ ) throws IO CaMeL Exception {
rank: 209
score: 99.07469593394886
patch: out . write ( $STRING$ + ( ) ) ;
rank: 209
score: 98.97081298828125
patch: out . write ( $STRING$ , null ) ;
rank: 209
score: 98.96403364701705
patch: out . write ( $STRING$ , ( int ) ;
rank: 209
score: 98.88717041015624
patch: public out . write ( Long $STRING$ ) ;
rank: 209
score: 97.72294921875
patch: abstract get > i
rank: 209
score: 97.10996500651042
patch: set > i > Index
rank: 209
score: 96.78483072916667
patch: public trim
rank: 209
score: 96.75785827636719
patch: synchronized Exception null
rank: 210
score: 99.07238159179687
patch: public abstract out . write ( int ) ;
rank: 210
score: 98.96912299262152
patch: void . write ( String $STRING$ ) ;
rank: 210
score: 98.96345658735795
patch: public out . write ( int int 1 ) ;
rank: 210
score: 98.88704833984374
patch: out . write ( $STRING$ + true ) ;
rank: 210
score: 97.7203369140625
patch: private get > i
rank: 210
score: 96.7806167602539
patch: Value
rank: 210
score: 96.75613403320312
patch: out State catch
rank: 210
score: 95.3411636352539
patch: search > >
rank: 211
score: 99.08223470052083
patch: out . write . $STRING$ $STRING$ ) ;
rank: 211
score: 99.07237752278645
patch: public out . write ( Char CaMeL Sequence str ) ;
rank: 211
score: 98.96889822823661
patch: public String out ( ) ;
rank: 211
score: 98.88343641493056
patch: out . write ( $STRING$ ) throws )
rank: 211
score: 97.72000122070312
patch: get > size >
rank: 211
score: 97.10917154947917
patch: > size > ]
rank: 211
score: 96.75411987304688
patch: protected Exception Runtime
rank: 211
score: 95.33724975585938
patch: public decode >
rank: 212
score: 99.08054421164773
patch: out . flush ( ) throws IO CaMeL Exception ;
rank: 212
score: 99.07145552201705
patch: out . write ( char [ ] ch ) ;
rank: 212
score: 98.96801147460937
patch: protected out . write ( String 1 ) ;
rank: 212
score: 98.96274636008523
patch: public void out ( $STRING$ / * / ) ;
rank: 212
score: 98.8810302734375
patch: private out . write ( $STRING$ ) { ;
rank: 212
score: 97.71929931640625
patch: protected public append >
rank: 212
score: 97.10819498697917
patch: > i > iterator
rank: 212
score: 96.7662353515625
patch: public parse
rank: 212
score: 96.75355529785156
patch: public Runnable Null
rank: 212
score: 95.33394622802734
patch: has > >
rank: 213
score: 99.07928466796875
patch: out . write ( $STRING$ ) throws IO CaMeL Exception )
rank: 213
score: 99.07090250651042
patch: public out . write ( byte out [ ] ) ;
rank: 213
score: 98.96764458550348
patch: protected out . write ( out ) ;
rank: 213
score: 98.9626953125
patch: public static void out ( $STRING$ ? $STRING$ ;
rank: 213
score: 98.88088989257812
patch: public out . write ( out . out ;
rank: 213
score: 97.71802368164063
patch: schedule > i >
rank: 213
score: 97.1071268717448
patch: public clear > out >
rank: 213
score: 96.76292928059895
patch: Map <UNK>
rank: 213
score: 96.7531509399414
patch: protected null Error
rank: 214
score: 99.0775615985577
patch: out . write ( out . get CaMeL Bytes ( ) ;
rank: 214
score: 99.07047526041667
patch: public out . write ( byte [ ] out ) ;
rank: 214
score: 98.9664306640625
patch: void out ( int 1 ) ;
rank: 214
score: 98.96238014914773
patch: public out . write ( $STRING$ ) return false ;
rank: 214
score: 98.8808349609375
patch: public out . write ( SIZE $STRING$ ) ;
rank: 214
score: 97.7174072265625
patch: next > i >
rank: 214
score: 97.10575358072917
patch: finally > i catch
rank: 214
score: 96.75968933105469
patch: add
rank: 214
score: 96.7500228881836
patch: void Exception State
rank: 214
score: 95.3283182779948
patch: protected Not
rank: 215
score: 99.07691446940105
patch: protected out . write ( $STRING$ ) { return out ;
rank: 215
score: 98.96583557128906
patch: public int write ( out ) ;
rank: 215
score: 98.88079155815973
patch: out . write ( out ) ) ;
rank: 215
score: 97.716943359375
patch: if > i >
rank: 215
score: 97.10570678710937
patch: catch > case
rank: 215
score: 96.75115966796875
patch: public read
rank: 215
score: 96.74977111816406
patch: protected Null Exception
rank: 216
score: 99.07676344651442
patch: out . write ( $STRING$ ) throws IO CaMeL Exception { }
rank: 216
score: 98.88049994574652
patch: out . write ( SIZE $STRING$ ) ;
rank: 216
score: 97.71571044921875
patch: synchronized public get >
rank: 216
score: 97.10519409179688
patch: drop > i > i
rank: 216
score: 96.74468231201172
patch: static Exception Exception
rank: 216
score: 96.73974609375
patch: get ]
rank: 216
score: 95.32578531901042
patch: private synchronized
rank: 217
score: 99.0762430826823
patch: out . write ( $STRING$ , $STRING$ , $STRING$ ) ;
rank: 217
score: 99.06787109375
patch: void out . write ( $STRING$ + ( $STRING$ ) ;
rank: 217
score: 98.96207004123264
patch: public out . write ( Float ) ;
rank: 217
score: 98.88009304470486
patch: public out . write ( write ) {
rank: 217
score: 97.71279907226562
patch: reset > i >
rank: 217
score: 97.10489908854167
patch: add > i > >
rank: 217
score: 96.74200439453125
patch: public Error out
rank: 217
score: 96.7299296061198
patch: public out
rank: 217
score: 95.324951171875
patch: private delete >
rank: 218
score: 99.0760498046875
patch: out . write ( long ) throws IO CaMeL Exception ;
rank: 218
score: 99.06704372829861
patch: out . write ( $STRING$ + ; ;
rank: 218
score: 98.96196831597223
patch: public String [ ] out ( ) ;
rank: 218
score: 98.88001708984375
patch: out . write ( byte $STRING$ $STRING$ ) ;
rank: 218
score: 97.70794677734375
patch: set > arraycopy >
rank: 218
score: 97.101513671875
patch: catch > Index
rank: 218
score: 96.73999786376953
patch: synchronized null State
rank: 218
score: 96.72273763020833
patch: Util print
rank: 218
score: 95.32223510742188
patch: public public list
rank: 219
score: 99.074951171875
patch: out . write ( $STRING$ + str + $STRING$ ) ;
rank: 219
score: 99.06699625651042
patch: public out . write ( $STRING$ + ( int ) ;
rank: 219
score: 98.9615811434659
patch: public static void write . write ( $STRING$ ) ;
rank: 219
score: 98.87979561941964
patch: public out ( ) { ;
rank: 219
score: 97.70552978515624
patch: for > catch >
rank: 219
score: 97.10132853190105
patch: get > catch > >
rank: 219
score: 96.73870086669922
patch: public Exception log
rank: 220
score: 99.07474459134616
patch: public final out . write ( ) throws IO CaMeL Exception {
rank: 220
score: 99.06685791015624
patch: public abstract out . write ( char ) ;
rank: 220
score: 98.96396484375
patch: abstract . Runtime . write ( $STRING$ ) ;
rank: 220
score: 98.96143798828125
patch: int out . write ( String $STRING$ ) ;
rank: 220
score: 98.87960205078124
patch: public out . write ( out . ) ;
rank: 220
score: 97.70532836914063
patch: println > arraycopy >
rank: 220
score: 97.10001627604167
patch: > out > out
rank: 220
score: 96.73696899414062
patch: private null Runtime
rank: 220
score: 96.71033732096355
patch: private add
rank: 221
score: 99.07465069110577
patch: out . write ( out . to CaMeL String ( ) {
rank: 221
score: 99.06650612571023
patch: public void out . write ( String str ) ;
rank: 221
score: 98.96352810329861
patch: public abstract void write ( out ) ;
rank: 221
score: 98.96134948730469
patch: public static void out ( $STRING$ ;
rank: 221
score: 98.87910766601563
patch: public out . write ( protected $STRING$ ) ;
rank: 221
score: 97.70509643554688
patch: get > min >
rank: 221
score: 97.09963989257812
patch: > exit > ]
rank: 221
score: 96.73689270019531
patch: protected Error State
rank: 221
score: 96.70878092447917
patch: i
rank: 222
score: 99.07425631009616
patch: out . write ( long ch ) throws IO CaMeL Exception ;
rank: 222
score: 99.06642150878906
patch: out . write ( $STRING$ , ;
rank: 222
score: 98.96284790039063
patch: public int write ( int String $STRING$ ) ;
rank: 222
score: 98.96121215820312
patch: String out ( ) { return $STRING$ ; }
rank: 222
score: 98.87899169921874
patch: out . write ( $STRING$ $STRING$ $STRING$ ) ;
rank: 222
score: 97.70413818359376
patch: Default > next >
rank: 222
score: 97.09962972005208
patch: get > i > ]
rank: 222
score: 96.73674011230469
patch: public Exception iterator
rank: 222
score: 96.70477294921875
patch: public replace
rank: 222
score: 95.3177490234375
patch: public Long
rank: 223
score: 99.07410888671875
patch: out . write ( $STRING$ * $STRING$ ) ;
rank: 223
score: 99.0660067471591
patch: out . write ( $STRING$ write ( $STRING$ ) ;
rank: 223
score: 98.9613037109375
patch: public void out ( ) != null ) ;
rank: 223
score: 98.96116807725694
patch: public static out . write ( char ;
rank: 223
score: 98.8783447265625
patch: public out . write ( $STRING$ ) ; _
rank: 223
score: 97.70344848632813
patch: private public while >
rank: 223
score: 97.09883626302083
patch: catch > i length
rank: 223
score: 96.73534393310547
patch: synchronized State Stack
rank: 224
score: 98.96115944602273
patch: public out . write ( $STRING$ , 0 ) ;
rank: 224
score: 98.96109444754464
patch: public int write ( ) {
rank: 224
score: 98.87783813476562
patch: public boolean out . write ( $STRING$ ) {
rank: 224
score: 97.70220947265625
patch: get > > Index
rank: 224
score: 97.09881591796875
patch: get > length > >
rank: 224
score: 96.73377990722656
patch: final State State
rank: 224
score: 96.69655354817708
patch: protected get
rank: 224
score: 95.31631469726562
patch: matches > >
rank: 225
score: 99.0737060546875
patch: out . write . $STRING$ + $STRING$ ) ;
rank: 225
score: 99.0637939453125
patch: public out . write ( ) throws ) ;
rank: 225
score: 98.9608487215909
patch: protected out . write ( $STRING$ ) return $STRING$ ;
rank: 225
score: 98.877734375
patch: public out ( $STRING$ ) throws IO CaMeL Exception
rank: 225
score: 97.70211791992188
patch: private while >
rank: 225
score: 97.09674072265625
patch: clear > i > else
rank: 225
score: 96.73309326171875
patch: public Null Null
rank: 225
score: 96.68141682942708
patch: public clone
rank: 225
score: 95.31575012207031
patch: clear > >
rank: 226
score: 99.0729229266827
patch: public int out . write ( ) throws IO CaMeL Exception {
rank: 226
score: 98.9603271484375
patch: public void out ( ) { ;
rank: 226
score: 98.87770589192708
patch: write . write ( $STRING$ $STRING$ ) ;
rank: 226
score: 97.70184936523438
patch: Default > while >
rank: 226
score: 97.09649658203125
patch: insert > length > i
rank: 226
score: 96.72937774658203
patch: / out Exception
rank: 226
score: 96.66719563802083
patch: abstract get
rank: 226
score: 95.3147201538086
patch: static public void
rank: 227
score: 99.06365411931819
patch: public out . write ( char [ ] $STRING$ )
rank: 227
score: 98.95828857421876
patch: public void write ( out ; null ) ;
rank: 227
score: 98.87767876519098
patch: out . write . write $STRING$ ) ;
rank: 227
score: 97.7011962890625
patch: Default > i >
rank: 227
score: 97.09583740234375
patch: public add > public
rank: 227
score: 96.72584533691406
patch: public Error Out
rank: 227
score: 96.66299438476562
patch: null
rank: 228
score: 99.06223551432292
patch: out . write ( $STRING$ ) ; else { ; }
rank: 228
score: 98.95953979492188
patch: public out . write ( String key ) ;
rank: 228
score: 98.95796421595982
patch: private int out ( ) ;
rank: 228
score: 98.87759060329861
patch: public abstract out . write ( byte ;
rank: 228
score: 97.700537109375
patch: factory > for >
rank: 228
score: 96.72090148925781
patch: protected Runtime Stack
rank: 228
score: 96.66054280598958
patch: public Boolean
rank: 229
score: 99.07195575420673
patch: out . write write ( $STRING$ ) throws IO CaMeL Exception {
rank: 229
score: 99.06154378255208
patch: public out . write ( $STRING$ write ( $STRING$ ) ;
rank: 229
score: 98.95769391741071
patch: void write ( out ) ;
rank: 229
score: 98.87743530273437
patch: write . write ( $STRING$ ) ; ) ;
rank: 229
score: 97.698974609375
patch: pop > i >
rank: 229
score: 97.09530029296874
patch: public for > i
rank: 229
score: 96.71979522705078
patch: @ State State
rank: 229
score: 96.65976969401042
patch: public sleep
rank: 229
score: 95.30426025390625
patch: protected synchronized
rank: 230
score: 98.95803000710227
patch: public out . write ( String boolean $NUMBER$ ) ;
rank: 230
score: 98.95753784179688
patch: public void write ( final Integer $STRING$ ) ;
rank: 230
score: 97.6984375
patch: protected synchronized public public
rank: 230
score: 97.0930887858073
patch: remove > length > i
rank: 230
score: 96.71884155273438
patch: public Runnable err
rank: 230
score: 96.65370178222656
patch: Util
rank: 230
score: 95.30361938476562
patch: run > >
rank: 231
score: 99.07066853841145
patch: out . write . write . Long ( $STRING$ ) ;
rank: 231
score: 99.0606689453125
patch: out . write ( ) throws Interrupted CaMeL Exception ;
rank: 231
score: 98.9579190340909
patch: out . write ( String . . . ) ;
rank: 231
score: 98.95652262369792
patch: out . write ( new $STRING$ ) ;
rank: 231
score: 98.87621459960937
patch: public private out . write ( $STRING$ ) {
rank: 231
score: 97.69830932617188
patch: abstract get > ]
rank: 231
score: 97.09281412760417
patch: add > catch > i
rank: 231
score: 96.71676635742188
patch: public State get
rank: 231
score: 96.647216796875
patch: arraycopy
rank: 231
score: 95.30262756347656
patch: org <UNK> <UNK>
rank: 232
score: 99.05954996744792
patch: public out . write ( String ( String str ) ;
rank: 232
score: 98.95782470703125
patch: String out . write ( $STRING$ ) ) ;
rank: 232
score: 98.87577514648437
patch: public out . write . write $STRING$ ) ;
rank: 232
score: 97.69751739501953
patch: private remove >
rank: 232
score: 97.09279378255208
patch: invoke > length > i
rank: 232
score: 96.71637725830078
patch: public private Exception
rank: 232
score: 96.64508056640625
patch: else
rank: 232
score: 95.3004150390625
patch: replace > >
rank: 233
score: 98.956103515625
patch: public void write ( String Integer 1 ) ;
rank: 233
score: 98.87239583333333
patch: public out . write ( $STRING$ ) (
rank: 233
score: 97.695166015625
patch: put > out >
rank: 233
score: 97.09108479817708
patch: println > i > i
rank: 233
score: 96.7153549194336
patch: public Exception XML
rank: 233
score: 96.63972981770833
patch: private run
rank: 233
score: 95.29890441894531
patch: abstract synchronized void
rank: 234
score: 99.0696309407552
patch: out . write ( $STRING$ ? $STRING$ : $STRING$ ) ;
rank: 234
score: 99.05836995442708
patch: public out . write ( $STRING$ + $STRING$ ) ; ;
rank: 234
score: 98.95559353298611
patch: final void write ( String $STRING$ ) ;
rank: 234
score: 98.87179226345486
patch: $STRING$ out . write ( out ) ;
rank: 234
score: 97.69428100585938
patch: handle > i >
rank: 234
score: 97.09104410807292
patch: catch > size >
rank: 234
score: 96.71049499511719
patch: public Exception ==
rank: 234
score: 95.29872131347656
patch: public abstract boolean
rank: 235
score: 99.06959025065105
patch: out . write ( $STRING$ ) { write ( ) ;
rank: 235
score: 99.05836486816406
patch: out . write ( int ) ;
rank: 235
score: 98.95654296875
patch: Object out . write ( $STRING$ , $STRING$ ) ;
rank: 235
score: 98.95557657877605
patch: void write ( ) ;
rank: 235
score: 98.87145317925348
patch: public out . write ( 1 ) ;
rank: 235
score: 97.69387817382812
patch: for > out >
rank: 235
score: 97.09050903320312
patch: clear > catch >
rank: 235
score: 96.709228515625
patch: / Runtime Exception
rank: 235
score: 96.63595581054688
patch: public size
rank: 235
score: 95.29618072509766
patch: public reverse >
rank: 236
score: 99.0691387469952
patch: out . write ( String $STRING$ ) throws IO CaMeL Exception {
rank: 236
score: 99.0579325358073
patch: out . write ( String str ) throws IO CaMeL Exception
rank: 236
score: 98.9561434659091
patch: out . write ( $STRING$ ) write ( ) ;
rank: 236
score: 98.95525512695312
patch: public out . write ( String start ) ;
rank: 236
score: 98.87057156032986
patch: out . write ( $STRING$ ) ; public
rank: 236
score: 97.691064453125
patch: get > > catch
rank: 236
score: 97.09035237630208
patch: > run > catch
rank: 236
score: 96.70842742919922
patch: protected Runnable State
rank: 236
score: 96.63031005859375
patch: append >
rank: 236
score: 95.29415893554688
patch: > throws
rank: 237
score: 99.06840006510417
patch: out . write ( $STRING$ * * / $STRING$ ) ;
rank: 237
score: 99.0574239095052
patch: out . write ( $STRING$ + ( $STRING$ + ; ;
rank: 237
score: 98.95537567138672
patch: public static void out ( ) {
rank: 237
score: 98.95501098632812
patch: private void write . write ( $STRING$ ) ;
rank: 237
score: 98.86900499131944
patch: public out ( ) out ( ) {
rank: 237
score: 97.69009399414062
patch: private append >
rank: 237
score: 97.08976236979167
patch: public iterator > i >
rank: 237
score: 96.70604705810547
patch: public State finally
rank: 237
score: 96.62869262695312
patch: / ]
rank: 237
score: 95.29396057128906
patch: public static boolean
rank: 238
score: 98.9549893465909
patch: public void out . write ( String out ) ;
rank: 238
score: 98.95464477539062
patch: public abstract out . write ( $NUMBER$ ) ;
rank: 238
score: 98.86875915527344
patch: out . write ( $STRING$ ; .
rank: 238
score: 97.687548828125
patch: local > catch >
rank: 238
score: 97.0889892578125
patch: get > i > case
rank: 238
score: 96.70403289794922
patch: public Exception TRUE
rank: 238
score: 95.29388427734375
patch: if >
rank: 239
score: 99.05710671164773
patch: out . write ( ) throws out . ) ;
rank: 239
score: 98.954248046875
patch: public void out ( ) { return ; }
rank: 239
score: 97.6875244140625
patch: protected private public public
rank: 239
score: 97.0888671875
patch: public hash > i >
rank: 239
score: 96.70169830322266
patch: out null 0
rank: 239
score: 96.62601725260417
patch: public compare
rank: 239
score: 95.29100545247395
patch: Unique >
rank: 240
score: 99.06781005859375
patch: out out . write ( ) throws IO CaMeL Exception ;
rank: 240
score: 99.0568514737216
patch: out . write ( out . write ( ) ;
rank: 240
score: 98.95385064019098
patch: String . [ ] out ( ) {
rank: 240
score: 98.95294189453125
patch: public synchronized out . write ( out ) ;
rank: 240
score: 98.86718071831598
patch: private out . write ( $STRING$ ) throws
rank: 240
score: 97.68694458007812
patch: protected private run >
rank: 240
score: 97.08714803059895
patch: public exit > i >
rank: 240
score: 96.70159912109375
patch: public Runtime Runtime
rank: 240
score: 95.29015350341797
patch: public Iterable >
rank: 241
score: 99.06741333007812
patch: out . write . Long ( $STRING$ ) ;
rank: 241
score: 98.95366876775569
patch: public out . write ( $STRING$ ) return true ;
rank: 241
score: 98.95208740234375
patch: void out ( ? $NUMBER$ : 0 ) ;
rank: 241
score: 98.86553083147321
patch: write ( ] $STRING$ ) ;
rank: 241
score: 97.68663787841797
patch: println > Index
rank: 241
score: 97.0860595703125
patch: > out > null
rank: 241
score: 96.69515991210938
patch: @ Exception Null
rank: 241
score: 95.29002380371094
patch: public static Not
rank: 242
score: 99.06720440204327
patch: out . write ( String str ) throws IO CaMeL Exception {
rank: 242
score: 99.05616455078125
patch: out . write ( write ( $STRING$ ) ;
rank: 242
score: 98.95338134765625
patch: public static out . write ( Object ) ;
rank: 242
score: 98.86522081163194
patch: out . write ( write $STRING$ ) ;
rank: 242
score: 97.68636474609374
patch: final get > arraycopy
rank: 242
score: 97.08603922526042
patch: add > i > ++
rank: 242
score: 96.6949462890625
patch: * State Exception
rank: 243
score: 99.0557352701823
patch: public out . write ( String name , $STRING$ ) ;
rank: 243
score: 98.95303344726562
patch: boolean out . write ( String $STRING$ ) ;
rank: 243
score: 98.95079345703125
patch: int . out . write ( $STRING$ ) ;
rank: 243
score: 98.86056179470486
patch: out . write . write ( ) ;
rank: 243
score: 97.68619537353516
patch: protected put >
rank: 243
score: 97.08255767822266
patch: > null
rank: 243
score: 96.69091033935547
patch: public State ch
rank: 243
score: 96.60611979166667
patch: Exception
rank: 243
score: 95.28606414794922
patch: public synchronized new
rank: 244
score: 99.06671697443181
patch: out . write . write ( $STRING$ ) ; ;
rank: 244
score: 99.055419921875
patch: out . write ( char [ ] value ) ;
rank: 244
score: 98.95298936631944
patch: public out . write ( name ) ;
rank: 244
score: 98.94965209960938
patch: private private out . write ( $STRING$ ) ;
rank: 244
score: 98.8580322265625
patch: out . write ( $NUMBER$ $STRING$ ) ;
rank: 244
score: 97.686083984375
patch: in > i >
rank: 244
score: 97.07835896809895
patch: > length > index
rank: 244
score: 96.68773651123047
patch: public Error new
rank: 244
score: 96.599853515625
patch: get i
rank: 244
score: 95.28598022460938
patch: public public XML
rank: 245
score: 99.06665978064903
patch: public out ( ) { this . out ( ) ; }
rank: 245
score: 98.95258123224431
patch: private static out . write ( String $STRING$ ) ;
rank: 245
score: 98.94877115885417
patch: long out . write ( $STRING$ ) ;
rank: 245
score: 98.85741509331598
patch: out . write ( $STRING$ ) ; _
rank: 245
score: 97.68380737304688
patch: start > i >
rank: 245
score: 97.0777587890625
patch: public for > i case
rank: 245
score: 96.68596649169922
patch: public Exception trace
rank: 245
score: 96.58327229817708
patch: ]
rank: 245
score: 95.28532409667969
patch: abstract abstract void
rank: 246
score: 99.05486505681819
patch: public out . write ( $STRING$ + str ) ;
rank: 246
score: 98.95206298828126
patch: protected final out . write ( $STRING$ ) ;
rank: 246
score: 98.85682508680556
patch: out . write ( ) ; ) ;
rank: 246
score: 97.68379516601563
patch: cache > i >
rank: 246
score: 96.68257141113281
patch: public null new
rank: 246
score: 96.57594807942708
patch: public write
rank: 247
score: 99.0648905436198
patch: out . write ( $STRING$ ) { return 0 ; }
rank: 247
score: 99.05411376953126
patch: out . write ( Byte ( $STRING$ ) ;
rank: 247
score: 98.95186157226563
patch: public out . write ( char [ ) ;
rank: 247
score: 98.94869995117188
patch: public int out ( $STRING$ ) ;
rank: 247
score: 97.68134765625
patch: keys > i >
rank: 247
score: 97.07644653320312
patch: > out > i
rank: 247
score: 96.56247965494792
patch: public init
rank: 247
score: 95.28310139973958
patch: clear >
rank: 248
score: 99.06421837439903
patch: out . write ( String str ) throws IO CaMeL Exception ;
rank: 248
score: 98.951806640625
patch: out . write ( 0 , 1 ) ;
rank: 248
score: 98.94765896267361
patch: private void out ( int i ) ;
rank: 248
score: 98.85359954833984
patch: public out . write $STRING$ ) ;
rank: 248
score: 97.67777099609376
patch: message > i >
rank: 248
score: 96.68213907877605
patch: synchronized Exception
rank: 248
score: 96.55886840820312
patch: public load
rank: 248
score: 95.28286743164062
patch: Default
rank: 249
score: 99.06406813401442
patch: synchronized out . write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 249
score: 98.95161576704545
patch: public void out ( Integer char CaMeL Value ) ;
rank: 249
score: 98.94696723090277
patch: public void out ( int 1 ) ;
rank: 249
score: 98.85350036621094
patch: public out . close ( ) {
rank: 249
score: 97.67482299804688
patch: I > run >
rank: 249
score: 97.07550048828125
patch: > i > finally
rank: 249
score: 96.6803970336914
patch: private State 0
rank: 249
score: 95.28209686279297
patch: protected final void
rank: 250
score: 99.0636319247159
patch: public long out ( ) throws IO CaMeL Exception ;
rank: 250
score: 99.053369140625
patch: out . write ( $STRING$ ) { ; }
rank: 250
score: 98.95136052911931
patch: void out ( $STRING$ ? $STRING$ : $STRING$ ) ;
rank: 250
score: 98.94627685546875
patch: void out . write ( byte ch ) ;
rank: 250
score: 97.67412719726562
patch: protected run > i
rank: 250
score: 97.07447306315105
patch: get > i : public
rank: 250
score: 96.67851257324219
patch: public Exception !=
rank: 250
score: 96.54465738932292
patch: contains >
rank: 250
score: 95.28196207682292
patch: ch
rank: 251
score: 99.06349534254808
patch: out . write ( $STRING$ * / ) throws IO CaMeL Exception
rank: 251
score: 99.05314127604167
patch: out . write ( $STRING$ + out ;
rank: 251
score: 98.95102761008523
patch: public void out ( String char : $STRING$ ) ;
rank: 251
score: 98.94462280273437
patch: out . write ( byte > i ) ;
rank: 251
score: 98.85162353515625
patch: public write ( $STRING$ ) ;
rank: 251
score: 97.6732421875
patch: for > next >
rank: 251
score: 97.07431030273438
patch: setup > i > i
rank: 251
score: 96.67601013183594
patch: abstract Exception Exception
rank: 251
score: 96.5400899251302
patch: public return
rank: 251
score: 95.27957916259766
patch: sleep > >
rank: 252
score: 99.06327681107955
patch: public abstract synchronized out . write ( $STRING$ ) ;
rank: 252
score: 99.052001953125
patch: public abstract out . write ( $STRING$ + ( ) ;
rank: 252
score: 98.95008002387152
patch: public out . write ( Character ) ;
rank: 252
score: 98.94452514648438
patch: protected out . write ( String $STRING$ ) {
rank: 252
score: 98.8512191772461
patch: $STRING$ out . write ( ) ;
rank: 252
score: 97.67296142578125
patch: change > i >
rank: 252
score: 97.07389322916667
patch: add > i > ]
rank: 252
score: 96.67495727539062
patch: java State State
rank: 252
score: 96.53992716471355
patch: set
rank: 252
score: 95.2780049641927
patch: protected is
rank: 253
score: 99.06293194110577
patch: public out . write ( long ) throws IO CaMeL Exception {
rank: 253
score: 99.05078125
patch: out . write ( char [ ] $STRING$ , ) ;
rank: 253
score: 98.949951171875
patch: public void out ( $STRING$ ) { return ; }
rank: 253
score: 97.67210693359375
patch: contains > i >
rank: 253
score: 97.0731201171875
patch: public for > arraycopy >
rank: 253
score: 96.67485046386719
patch: public Error run
rank: 253
score: 95.27232360839844
patch: sort > >
rank: 254
score: 99.06292724609375
patch: out . write ( $STRING$ , $STRING$ , true ) ;
rank: 254
score: 99.05044555664062
patch: public abstract out . write . write . $STRING$ ) ;
rank: 254
score: 98.94972922585227
patch: public static out . write ( String out ) ;
rank: 254
score: 98.943359375
patch: public String write ( String $STRING$ ) ;
rank: 254
score: 98.84651692708333
patch: public out . write ( out ) {
rank: 254
score: 97.67176513671875
patch: private public set >
rank: 254
score: 97.07257080078125
patch: public for > i catch
rank: 254
score: 96.67324829101562
patch: protected State 0
rank: 254
score: 95.2707290649414
patch: private final void
rank: 255
score: 98.94918212890624
patch: out . write ( $STRING$ ) ? $STRING$ ;
rank: 255
score: 98.94204711914062
patch: private void write ( $STRING$ ) ;
rank: 255
score: 98.84574381510417
patch: write . . write ( $STRING$ ) ;
rank: 255
score: 97.67127075195313
patch: Later > catch >
rank: 255
score: 97.07222493489583
patch: put > i > Index
rank: 255
score: 96.6729507446289
patch: public new null
rank: 255
score: 96.52723185221355
patch: next >
rank: 255
score: 95.26991271972656
patch: public abstract synchronized
rank: 256
score: 99.06203049879808
patch: out . write ( long ch ) throws IO CaMeL Exception {
rank: 256
score: 98.94863891601562
patch: public out . write ( String $NUMBER$ ) ;
rank: 256
score: 98.9420166015625
patch: int . write ( $STRING$ ) ;
rank: 256
score: 98.8441162109375
patch: public void out . write ( ) {
rank: 256
score: 97.66984252929687
patch: iterator > i >
rank: 256
score: 97.07175699869792
patch: clear > i > case
rank: 256
score: 96.66967010498047
patch: public Error arraycopy
rank: 256
score: 96.49971516927083
patch: private <UNK>
rank: 257
score: 99.06096942608173
patch: out . write . long ( ) throws IO CaMeL Exception {
rank: 257
score: 99.0483065518466
patch: out . write ( write ( char ch ) ;
rank: 257
score: 98.9418701171875
patch: public out . write ( String str ) {
rank: 257
score: 98.84328206380208
patch: public out . write ( out ) throws
rank: 257
score: 97.66880798339844
patch: for > i
rank: 257
score: 97.07119750976562
patch: > next > catch
rank: 257
score: 96.66832733154297
patch: public new Exception
rank: 257
score: 96.49913533528645
patch: protected set
rank: 257
score: 95.267578125
patch: public Throwable
rank: 258
score: 99.0607401529948
patch: public final void write ( ) throws IO CaMeL Exception ;
rank: 258
score: 99.0477294921875
patch: out . write ( out . write ( byte ) ;
rank: 258
score: 98.94185791015624
patch: public out . write ( long ch ) ;
rank: 258
score: 98.84052385602679
patch: write ( ] 1 ) ;
rank: 258
score: 97.6684326171875
patch: final get > while
rank: 258
score: 97.07093811035156
patch: > length
rank: 258
score: 96.66551208496094
patch: private Error Error
rank: 258
score: 96.49856567382812
patch: public fill
rank: 258
score: 95.26723225911458
patch: public map
rank: 259
score: 99.04646439985795
patch: out . write ( byte [ ] str ) ;
rank: 259
score: 98.9468661221591
patch: public static out . write ( $STRING$ ) / ;
rank: 259
score: 98.94159807477679
patch: write . write ( ) ;
rank: 259
score: 98.83831108940973
patch: out . write ( $STRING$ ) { ;
rank: 259
score: 97.66786499023438
patch: can > arraycopy >
rank: 259
score: 97.06899007161458
patch: > exit > Index
rank: 259
score: 96.66260528564453
patch: private Runnable State
rank: 259
score: 96.49298095703125
patch: get :
rank: 259
score: 95.26685587565105
patch: public T
rank: 260
score: 99.05795288085938
patch: public final void write ( ) throws IO CaMeL Exception {
rank: 260
score: 99.04406127929687
patch: public out . write ( ) throws $STRING$ ;
rank: 260
score: 98.94155883789062
patch: synchronized out . write ( ) ;
rank: 260
score: 98.83804757254464
patch: out . write ( out ;
rank: 260
score: 97.66680908203125
patch: By > for >
rank: 260
score: 97.06715698242188
patch: public put > i
rank: 260
score: 96.66124725341797
patch: public Thread State
rank: 260
score: 96.48480224609375
patch: System
rank: 260
score: 95.26657104492188
patch: public public E
rank: 261
score: 99.05734487680289
patch: public out . write ( String ) throws IO CaMeL Exception ;
rank: 261
score: 99.04391479492188
patch: out . write ( out ) throws IO CaMeL Exception ;
rank: 261
score: 98.94610040838069
patch: out . write ( char [ ] out ) ;
rank: 261
score: 98.94104614257813
patch: void out ( ? 0 : 0 ) ;
rank: 261
score: 98.83633422851562
patch: out . write ( byte ; .
rank: 261
score: 97.66651611328125
patch: set > catch >
rank: 261
score: 97.0659688313802
patch: get > i > out
rank: 261
score: 96.66057586669922
patch: private Runnable Exception
rank: 261
score: 96.4818115234375
patch: return
rank: 261
score: 95.26380920410156
patch: equals > >
rank: 262
score: 99.04366048177083
patch: public abstract out . write ( out . write ) ;
rank: 262
score: 98.94599609375
patch: public void out ( $STRING$ ) throws $STRING$ ;
rank: 262
score: 97.66609497070313
patch: bind > i >
rank: 262
score: 97.06337483723958
patch: catch > finally >
rank: 262
score: 96.6583480834961
patch: protected Exception Null
rank: 262
score: 96.4780782063802
patch: public code
rank: 262
score: 95.26052856445312
patch: @
rank: 263
score: 99.0434061686198
patch: public out . write . write ( $STRING$ + ) ;
rank: 263
score: 98.83443450927734
patch: out . write ( $STRING$ ) (
rank: 263
score: 97.6642822265625
patch: Default > for >
rank: 263
score: 96.65562438964844
patch: * Exception Exception
rank: 263
score: 96.4659423828125
patch: public stop
rank: 264
score: 99.0566875751202
patch: out . write ( Byte $STRING$ ) throws IO CaMeL Exception ;
rank: 264
score: 99.04290771484375
patch: public out . write ( String str , $STRING$ ) ;
rank: 264
score: 98.94542347301136
patch: public void out . write ( String name ) ;
rank: 264
score: 98.9398681640625
patch: public out . write ( char $STRING$ ) ;
rank: 264
score: 98.82944742838542
patch: public write ( $STRING$ ) throws $STRING$ ;
rank: 264
score: 97.66414184570313
patch: private public next >
rank: 264
score: 97.06207275390625
patch: log > catch catch
rank: 264
score: 96.65560913085938
patch: out null Index
rank: 265
score: 99.05584161931819
patch: public int write ( ) throws IO CaMeL Exception ;
rank: 265
score: 99.04166666666667
patch: public synchronized out . write ( $STRING$ ) { ; }
rank: 265
score: 98.94530140269886
patch: public static out . write ( char [ ) ;
rank: 265
score: 98.93901977539062
patch: private abstract void write ( String $STRING$ ) ;
rank: 265
score: 98.82791137695312
patch: public out ( $STRING$ ) { ;
rank: 265
score: 97.66275024414062
patch: private private public public
rank: 265
score: 97.06168619791667
patch: > iterator > ]
rank: 265
score: 96.65558624267578
patch: out arraycopy State
rank: 265
score: 96.45487467447917
patch: public err
rank: 266
score: 99.05551147460938
patch: out out . write ( ) throws IO CaMeL Exception {
rank: 266
score: 99.04108220880681
patch: out . write ( write ( $STRING$ value ) ;
rank: 266
score: 98.94350857204861
patch: public void out ( String out ) ;
rank: 266
score: 98.93863525390626
patch: public int write ( out ; null ) ;
rank: 266
score: 98.82747395833333
patch: out . write ( $STRING$ + $STRING$ ;
rank: 266
score: 97.66256713867188
patch: protected public private
rank: 266
score: 97.05663452148437
patch: public for > >
rank: 266
score: 96.65420532226562
patch: public Exception create
rank: 266
score: 96.45318603515625
patch: Set public
rank: 266
score: 95.25065612792969
patch: contains > >
rank: 267
score: 99.05532497829861
patch: out write . write ( $STRING$ ) ;
rank: 267
score: 99.04107666015625
patch: public out . write ( $STRING$ + $STRING$ $STRING$ ) ;
rank: 267
score: 98.94341430664062
patch: public void out ( write ( $STRING$ ) ;
rank: 267
score: 98.93734741210938
patch: void out ( int $STRING$ ) ;
rank: 267
score: 98.82700602213542
patch: public out ( $STRING$ ) throws ) {
rank: 267
score: 97.66249389648438
patch: log > i >
rank: 267
score: 96.44775390625
patch: Value <UNK>
rank: 267
score: 95.25065612792969
patch: public synchronized String
rank: 268
score: 99.05392456054688
patch: public out . write ( byte [ ] chars ) {
rank: 268
score: 98.9433349609375
patch: public void out ( String $STRING$ ) { ;
rank: 268
score: 98.93732299804688
patch: public private out . write ( out ) ;
rank: 268
score: 98.82618059430804
patch: write ( ] $NUMBER$ ) ;
rank: 268
score: 97.66011962890624
patch: Main > i >
rank: 268
score: 96.65289306640625
patch: public Exception IS
rank: 268
score: 96.44708251953125
patch: private close
rank: 268
score: 95.24774169921875
patch: public map >
rank: 269
score: 99.0528094951923
patch: public out . write ( $STRING$ ) throws Interrupted CaMeL Exception ;
rank: 269
score: 99.04008345170455
patch: write . write ( ) throws IO CaMeL Exception ;
rank: 269
score: 98.94240500710227
patch: out . write ( $STRING$ ) || true ) ;
rank: 269
score: 98.93686930338542
patch: public void write ( int 1 ) ;
rank: 269
score: 98.82585991753473
patch: out ( ) write ( $STRING$ ) ;
rank: 269
score: 97.65897216796876
patch: do > arraycopy >
rank: 269
score: 96.65259552001953
patch: private Exception err
rank: 269
score: 96.44486490885417
patch: public trace
rank: 270
score: 99.0523681640625
patch: public out . write ( byte [ ] $STRING$ ) {
rank: 270
score: 99.0399169921875
patch: public out . write ( ) throws Interrupted CaMeL Exception ;
rank: 270
score: 98.82340785435268
patch: out . write . $STRING$ ;
rank: 270
score: 97.6588623046875
patch: post > i >
rank: 270
score: 96.995849609375
patch: finally > i
rank: 270
score: 96.65193939208984
patch: private Error null
rank: 270
score: 96.44364420572917
patch: Util finally
rank: 270
score: 95.2441635131836
patch: public clear >
rank: 271
score: 99.05224609375
patch: out . write ( $STRING$ ) { ) ; }
rank: 271
score: 98.94206099076705
patch: out . write ( $STRING$ ) , 0 ) ;
rank: 271
score: 98.93633422851562
patch: void out . write ( char 1 ) ;
rank: 271
score: 98.82313368055556
patch: public out . write ( $NUMBER$ ) {
rank: 271
score: 97.65825805664062
patch: accept > i >
rank: 271
score: 96.99505615234375
patch: public for catch >
rank: 271
score: 96.65098571777344
patch: / State null
rank: 272
score: 99.05179850260417
patch: out . write ( $STRING$ ) return ( $STRING$ ) ;
rank: 272
score: 98.94176136363636
patch: public out . write ( $STRING$ , 1 ) ;
rank: 272
score: 98.93520100911458
patch: out . write ( - 1 ) ;
rank: 272
score: 98.82212999131944
patch: write out . write ( $STRING$ ) ;
rank: 272
score: 97.65697631835937
patch: protected run > >
rank: 272
score: 96.99487915039063
patch: log > null
rank: 272
score: 96.64915466308594
patch: public Exception System
rank: 272
score: 96.42912292480469
patch: Manager
rank: 272
score: 95.24314880371094
patch: abstract protected void
rank: 273
score: 99.05153586647727
patch: public out . write ( byte [ ] out )
rank: 273
score: 98.94135076349431
patch: public out . write ( int double $NUMBER$ ) ;
rank: 273
score: 98.9343994140625
patch: public ( out . write ( $STRING$ ) ;
rank: 273
score: 98.82073296440973
patch: out . out . write ( ) ;
rank: 273
score: 97.6568603515625
patch: has > ]
rank: 273
score: 96.64900207519531
patch: protected Error null
rank: 273
score: 96.42566935221355
patch: public Security
rank: 274
score: 99.05145263671875
patch: out . write . write ( $STRING$ * / ) ;
rank: 274
score: 99.03768920898438
patch: synchronized out . write ( ) throws IO CaMeL Exception ;
rank: 274
score: 98.94080946180556
patch: public out . write ( Integer ) ;
rank: 274
score: 98.9332275390625
patch: out . write ( false ) ;
rank: 274
score: 98.81886291503906
patch: public out . flush ( ) ;
rank: 274
score: 97.65530395507812
patch: do > >
rank: 274
score: 96.64820861816406
patch: @ Exception Not
rank: 274
score: 96.42519124348958
patch: public Safe
rank: 274
score: 95.23855590820312
patch: public XML >
rank: 275
score: 98.93186950683594
patch: int . . write ( ) ;
rank: 275
score: 98.81599934895833
patch: out . write ( long $STRING$ ) ;
rank: 275
score: 97.65443725585938
patch: private static get >
rank: 275
score: 96.968505859375
patch: get > i catch
rank: 275
score: 96.64654541015625
patch: public null Internal
rank: 276
score: 99.0511474609375
patch: public final out . write ( $STRING$ ) throws IO CaMeL Exception
rank: 276
score: 99.03694291548295
patch: public out . write ( ) throws $STRING$ ) ;
rank: 276
score: 98.9312744140625
patch: protected out ( ) ;
rank: 276
score: 98.81290011935764
patch: out . write out ( $STRING$ ) ;
rank: 276
score: 96.96638488769531
patch: > catch
rank: 276
score: 96.64500427246094
patch: private null Null
rank: 276
score: 95.2364273071289
patch: initialize > >
rank: 277
score: 99.05026245117188
patch: protected out . write ( $STRING$ ) throws IO CaMeL Exception
rank: 277
score: 98.93839111328126
patch: public void out ( $STRING$ + out ) ;
rank: 277
score: 98.93116455078125
patch: out . write ( char ++ $STRING$ ) ;
rank: 277
score: 96.9662094116211
patch: > else
rank: 277
score: 96.64458465576172
patch: / null State
rank: 277
score: 96.4130147298177
patch: public parent
rank: 277
score: 95.2362289428711
patch: synchronized public void
rank: 278
score: 99.05019309303977
patch: public boolean out ( ) throws IO CaMeL Exception {
rank: 278
score: 99.03629150390626
patch: public out . write ( String value ) ;
rank: 278
score: 98.81117757161458
patch: public final out . write ( ) {
rank: 278
score: 97.65218353271484
patch: update > ]
rank: 278
score: 96.96574096679687
patch: try > catch >
rank: 278
score: 96.643310546875
patch: out Error Stack
rank: 278
score: 96.40737915039062
patch: Util catch
rank: 279
score: 99.0496826171875
patch: public final boolean write ( ) throws IO CaMeL Exception ;
rank: 279
score: 99.03619384765625
patch: public out . write ( String ) { ) ; }
rank: 279
score: 98.93721147017045
patch: private static void out . write ( $STRING$ ) ;
rank: 279
score: 98.93063354492188
patch: out . write ( final String $STRING$ ) ;
rank: 279
score: 98.81117757161458
patch: . write . write ( $STRING$ ) ;
rank: 279
score: 97.64673614501953
patch: add > arraycopy
rank: 279
score: 96.9600830078125
patch: > i catch
rank: 279
score: 96.63701629638672
patch: final Exception Exception
rank: 279
score: 96.40662638346355
patch: public Clone
rank: 280
score: 99.04869666466347
patch: public out . write ( String str ) throws IO CaMeL Exception
rank: 280
score: 99.0358553799716
patch: out . write ( Char CaMeL Sequence value ) ;
rank: 280
score: 98.93715598366477
patch: public static out . write ( $STRING$ , ) {
rank: 280
score: 98.93009185791016
patch: final out . write ( ) ;
rank: 280
score: 98.80968560112848
patch: write . write ( ] $STRING$ ) ;
rank: 280
score: 97.62202453613281
patch: get > next
rank: 280
score: 96.9511474609375
patch: catch > arraycopy
rank: 280
score: 96.63668823242188
patch: public run null
rank: 280
score: 96.40397135416667
patch: public wait
rank: 280
score: 95.23577880859375
patch: public private boolean
rank: 281
score: 99.0485370342548
patch: out . write ( Byte $STRING$ ) throws IO CaMeL Exception {
rank: 281
score: 98.936669921875
patch: out . append ( $STRING$ , $STRING$ ) ;
rank: 281
score: 98.80955674913194
patch: public write ( $STRING$ ) throws ) ;
rank: 281
score: 97.61430358886719
patch: private catch >
rank: 281
score: 96.93724975585937
patch: log > case
rank: 281
score: 96.63639831542969
patch: public Exception Override
rank: 281
score: 95.2357177734375
patch: public public copy
rank: 282
score: 98.9341812133789
patch: out . delete ( $STRING$ ) ;
rank: 282
score: 98.92999267578125
patch: public abstract void out ( String $STRING$ ) ;
rank: 282
score: 98.80946858723958
patch: out . write ( $STRING$ ) ; return
rank: 282
score: 97.60960388183594
patch: private set >
rank: 282
score: 96.9303955078125
patch: log > length
rank: 282
score: 96.63636779785156
patch: @ Exception Runtime
rank: 282
score: 95.23500569661458
patch: protected new
rank: 283
score: 99.04737267127403
patch: out . write ( $STRING$ ) { write ( $NUMBER$ ) ;
rank: 283
score: 98.93379720052083
patch: public void out ( $STRING$ ? $STRING$ ;
rank: 283
score: 98.92921142578125
patch: abstract . write . write . $STRING$ ) ;
rank: 283
score: 98.80820719401042
patch: out . write ( ] 1 ) ;
rank: 283
score: 97.6083984375
patch: protected public protected
rank: 283
score: 96.92979125976562
patch: catch > size
rank: 283
score: 96.63597106933594
patch: public Throwable State
rank: 283
score: 95.2312240600586
patch: if > >
rank: 284
score: 99.04671536959134
patch: private out . write ( $STRING$ ) { return out ; }
rank: 284
score: 99.03453572591145
patch: Object out . write ( ) throws IO CaMeL Exception ;
rank: 284
score: 98.93359375
patch: public static void out ( $STRING$ ) { ;
rank: 284
score: 98.9278564453125
patch: public void write ( String str ) ;
rank: 284
score: 98.80716705322266
patch: out . write ( $STRING$ ) .
rank: 284
score: 96.92215576171876
patch: catch > null
rank: 284
score: 96.6357650756836
patch: @ Exception Stack
rank: 284
score: 96.39370727539062
patch: protected add
rank: 285
score: 99.04632013494319
patch: public abstract Object out . write ( $STRING$ ) ;
rank: 285
score: 98.93344116210938
patch: public String CaMeL Buffer write ( $STRING$ ) ;
rank: 285
score: 98.92782253689236
patch: public void out ( int $NUMBER$ ) ;
rank: 285
score: 98.80708821614583
patch: public out . write . write ) ;
rank: 285
score: 97.60101318359375
patch: Default >
rank: 285
score: 96.63380432128906
patch: @ null Error
rank: 285
score: 96.39207967122395
patch: public in
rank: 285
score: 95.22691345214844
patch: public public T
rank: 286
score: 99.04521040482955
patch: public out . write ( byte [ ] ) {
rank: 286
score: 98.9331942471591
patch: public abstract out . write ( String out ) ;
rank: 286
score: 98.92746310763889
patch: void out ( ) != null ) ;
rank: 286
score: 98.80591498480902
patch: out . write ( Float $STRING$ ) ;
rank: 286
score: 97.59504699707031
patch: set > Index
rank: 286
score: 96.9116455078125
patch: > out >
rank: 286
score: 96.63372039794922
patch: public Number State
rank: 286
score: 95.2267074584961
patch: public public compile
rank: 287
score: 99.04506429036458
patch: out . write ( $STRING$ ) throws ( $STRING$ ) ;
rank: 287
score: 99.03355916341145
patch: public out . write ( byte ch [ ] ) ;
rank: 287
score: 98.93293900923295
patch: public static out . write ( int $STRING$ ) ;
rank: 287
score: 98.92709350585938
patch: public boolean write ( out ) ;
rank: 287
score: 97.58525085449219
patch: protected append >
rank: 287
score: 96.90601196289063
patch: if > catch >
rank: 287
score: 96.6325454711914
patch: public State Internal
rank: 287
score: 95.22511291503906
patch: < synchronized void
rank: 288
score: 99.04474346454327
patch: protected out . write ( out . write ( $STRING$ ) ;
rank: 288
score: 99.03286743164062
patch: public out . write ( ) throws Interrupted CaMeL Exception {
rank: 288
score: 98.92674255371094
patch: protected void write ( $STRING$ ) ;
rank: 288
score: 98.80501883370536
patch: out . write ( ) {
rank: 288
score: 97.58349609375
patch: private clear >
rank: 288
score: 96.88638305664062
patch: get > i ++
rank: 288
score: 96.63252258300781
patch: final null State
rank: 288
score: 95.2249755859375
patch: expand > >
rank: 289
score: 99.0446065266927
patch: public out . write ( char [ ] chars ) {
rank: 289
score: 99.032470703125
patch: void out . write ( byte [ ] ) ;
rank: 289
score: 98.926318359375
patch: void out . write ( byte 1 ) ;
rank: 289
score: 98.80300564236111
patch: public out . append ( $STRING$ ) ;
rank: 289
score: 97.58338928222656
patch: clear > ]
rank: 289
score: 96.885595703125
patch: > size >
rank: 289
score: 96.62873840332031
patch: protected Error Error
rank: 289
score: 95.2231953938802
patch: select >
rank: 290
score: 99.032275390625
patch: out . write ( byte [ ] $STRING$ )
rank: 290
score: 98.93256487165179
patch: public static out ( ) {
rank: 290
score: 98.80251736111111
patch: out . write . write ( $STRING$ ;
rank: 290
score: 96.88466796875
patch: case > else
rank: 290
score: 96.62660217285156
patch: public Runtime Null
rank: 290
score: 95.22089385986328
patch: public public Int
rank: 291
score: 99.03182220458984
patch: out . write ( out . ;
rank: 291
score: 98.92569732666016
patch: m . write ( $STRING$ ) ;
rank: 291
score: 98.80158148871527
patch: out . write ( byte ) ) ;
rank: 291
score: 97.5786361694336
patch: protected catch >
rank: 291
score: 96.8741455078125
patch: finally > length
rank: 291
score: 96.62657928466797
patch: public null arraycopy
rank: 291
score: 95.2208251953125
patch: < void
rank: 292
score: 99.03125
patch: public out . write ( String $STRING$ )
rank: 292
score: 98.93187120225694
patch: public static out . write ( ) {
rank: 292
score: 98.92477756076389
patch: public void write ( int str ) ;
rank: 292
score: 98.80054389105902
patch: public protected void out ( $STRING$ ) ;
rank: 292
score: 97.57611083984375
patch: get > while
rank: 292
score: 96.87039184570312
patch: log > else
rank: 292
score: 96.62651824951172
patch: out State Index
rank: 292
score: 96.36185709635417
patch: public Tree
rank: 293
score: 99.04367065429688
patch: out . write ( Byte . Byte . value ) ;
rank: 293
score: 99.03043989701705
patch: public void out ( $STRING$ ) throws IO CaMeL Exception
rank: 293
score: 98.93109741210938
patch: out . write ( 0 , $NUMBER$ ) ;
rank: 293
score: 98.92445068359375
patch: public abstract void write ( int $STRING$ ) ;
rank: 293
score: 97.57435607910156
patch: println > i
rank: 293
score: 96.62467193603516
patch: * null Exception
rank: 293
score: 96.3606465657552
patch: Util >
rank: 293
score: 95.21883138020833
patch: public Process
rank: 294
score: 99.0435321514423
patch: out . write ( $STRING$ ) throws IO CaMeL Exception ; ;
rank: 294
score: 99.03041585286458
patch: out . write ( $STRING$ + ( ( $STRING$ ) ;
rank: 294
score: 98.93080444335938
patch: void out . write ( $STRING$ ) ) ;
rank: 294
score: 98.9240966796875
patch: void out ( ) write ( $STRING$ ) ;
rank: 294
score: 98.79787868923611
patch: public out . write ( final ) ;
rank: 294
score: 97.5737075805664
patch: private replace >
rank: 294
score: 96.86055755615234
patch: > size
rank: 294
score: 96.62291717529297
patch: public > Exception
rank: 294
score: 96.35692342122395
patch: Set set
rank: 294
score: 95.21798706054688
patch: protected delete >
rank: 295
score: 99.04182942708333
patch: out . write ( $STRING$ , 0 , $STRING$ ) ;
rank: 295
score: 99.0303955078125
patch: write . write ( byte [ ] $STRING$ ) ;
rank: 295
score: 97.57246398925781
patch: private do >
rank: 295
score: 96.86040649414062
patch: catch > ]
rank: 295
score: 96.62063598632812
patch: out Exception err
rank: 295
score: 96.3530985514323
patch: protected run
rank: 296
score: 99.03031782670455
patch: out . write ( char out [ ] ) ;
rank: 296
score: 98.92986450195312
patch: / * ] out write ( $STRING$ ) ;
rank: 296
score: 98.92240600585937
patch: protected void write . write ( $STRING$ ) ;
rank: 296
score: 98.79678005642361
patch: public out . add ( $STRING$ ) ;
rank: 296
score: 97.5721664428711
patch: invoke > ]
rank: 296
score: 96.8572265625
patch: case > i
rank: 296
score: 96.62004089355469
patch: protected null Runtime
rank: 296
score: 96.34976196289062
patch: log
rank: 296
score: 95.21484375
patch: public public Unsupported
rank: 297
score: 99.04102579752605
patch: public void write ( $STRING$ ) throws IO CaMeL Exception {
rank: 297
score: 99.03028564453125
patch: public out . write ( char [ ] ;
rank: 297
score: 98.92152235243056
patch: public void write . write ( ) ;
rank: 297
score: 98.79669189453125
patch: public public out . write ( ) {
rank: 297
score: 97.56680297851562
patch: try > ]
rank: 297
score: 96.8555419921875
patch: try > length >
rank: 297
score: 96.61524963378906
patch: public ( Error
rank: 297
score: 96.34841918945312
patch: Buffer <UNK>
rank: 298
score: 99.04090372721355
patch: public out . write ( $STRING$ ) { return ; }
rank: 298
score: 99.02997436523438
patch: public out . write write ( $STRING$ ) ;
rank: 298
score: 98.92784534801136
patch: private out . write ( $STRING$ , 0 ) ;
rank: 298
score: 98.7947998046875
patch: public out . write ( ] ) {
rank: 298
score: 97.56257629394531
patch: get > index
rank: 298
score: 96.61473846435547
patch: protected public Exception
rank: 298
score: 96.34138997395833
patch: Util next
rank: 298
score: 95.2142105102539
patch: synchronized
rank: 299
score: 99.04088416466347
patch: out . write ( $STRING$ ) throws ( IO CaMeL Exception ;
rank: 299
score: 99.02735392252605
patch: public out . write ( $STRING$ + ( $STRING$ + ;
rank: 299
score: 98.92784423828125
patch: public static out . write ( int ) ;
rank: 299
score: 98.91990966796875
patch: public boolean write ( int String $STRING$ ) ;
rank: 299
score: 97.56022644042969
patch: run > i
rank: 299
score: 96.85487060546875
patch: public exit > i
rank: 299
score: 96.61460876464844
patch: protected State Type
rank: 299
score: 96.33902994791667
patch: public abstract
rank: 299
score: 95.21310424804688
patch: public * {
rank: 300
score: 99.04043344350961
patch: protected out . write ( byte ) throws IO CaMeL Exception ;
rank: 300
score: 99.02703302556819
patch: public out . write ( $STRING$ + out . ;
rank: 300
score: 98.92729356553819
patch: List out . write ( $STRING$ ) ;
rank: 300
score: 98.79472520616319
patch: write . write ( $STRING$ ) $STRING$ ;
rank: 300
score: 97.55961608886719
patch: run > Index
rank: 300
score: 96.61407470703125
patch: private Null State
rank: 300
score: 95.209228515625
patch: private abstract <UNK>
rank: 301
score: 98.92726828835227
patch: out . write ( Integer . [ ] ) ;
rank: 301
score: 98.91926405164931
patch: protected void out . write ( ) ;
rank: 301
score: 97.55271402994792
patch: remove >
rank: 301
score: 96.85245361328126
patch: catch > iterator
rank: 301
score: 96.61405944824219
patch: protected Runnable Exception
rank: 301
score: 96.32291666666667
patch: public Bit
rank: 301
score: 95.20774332682292
patch: public throw
rank: 302
score: 99.02635701497395
patch: out . write ( char ch [ ] , ) ;
rank: 302
score: 98.91901397705078
patch: void out ( out $STRING$ ) ;
rank: 302
score: 98.79412163628473
patch: public out . write ( chars ) ;
rank: 302
score: 96.85055541992188
patch: catch > out
rank: 302
score: 96.61255645751953
patch: public Runnable catch
rank: 302
score: 96.32259114583333
patch: public disable
rank: 302
score: 95.20379638671875
patch: public wait >
rank: 303
score: 99.0245028409091
patch: public abstract out . write ( char ch ) ;
rank: 303
score: 98.9268798828125
patch: private out . write ( String int 1 ) ;
rank: 303
score: 98.9165283203125
patch: public void out ( final String $STRING$ ) ;
rank: 303
score: 98.790771484375
patch: out . write ( ] $NUMBER$ ) ;
rank: 303
score: 97.55120849609375
patch: abstract get >
rank: 303
score: 96.8478515625
patch: > next >
rank: 303
score: 96.6125259399414
patch: public err Runtime
rank: 303
score: 96.31980387369792
patch: Util else
rank: 304
score: 99.03952026367188
patch: out . write ( $STRING$ , ( $STRING$ ) ) ;
rank: 304
score: 99.02434747869319
patch: out . write ( String str ) throws $STRING$ ;
rank: 304
score: 98.91604953342014
patch: void write ( final String $STRING$ ) ;
rank: 304
score: 97.5480728149414
patch: close > ]
rank: 304
score: 96.84490966796875
patch: > out
rank: 304
score: 96.61207580566406
patch: out State 0
rank: 304
score: 96.315185546875
patch: public intern
rank: 304
score: 95.20259857177734
patch: public protected boolean
rank: 305
score: 99.0239590731534
patch: out . write ( String name , $STRING$ ) ;
rank: 305
score: 98.92608087713069
patch: public static out . write ( $STRING$ ) { ;
rank: 305
score: 98.78983561197917
patch: public final out . write ( ) ;
rank: 305
score: 97.54400634765625
patch: I > public
rank: 305
score: 96.84026489257812
patch: > i ++
rank: 305
score: 96.61152648925781
patch: private public Exception
rank: 305
score: 95.20253499348958
patch: public Integer
rank: 306
score: 99.03940054086539
patch: private out . write ( byte ) throws IO CaMeL Exception ;
rank: 306
score: 98.92415073939732
patch: public boolean out ( ) {
rank: 306
score: 98.91500854492188
patch: public boolean write ( out ; null ) ;
rank: 306
score: 97.5430908203125
patch: private protected public
rank: 306
score: 96.6099853515625
patch: private Exception IO
rank: 306
score: 96.31009928385417
patch: Buffer >
rank: 306
score: 95.20186614990234
patch: public synchronized Illegal
rank: 307
score: 99.03848266601562
patch: protected abstract out . write . write ( $STRING$ ) ;
rank: 307
score: 99.0218505859375
patch: out . write ( byte [ ] ( $STRING$ ) ;
rank: 307
score: 98.92406116832386
patch: public out . write ( int int 0 ) ;
rank: 307
score: 98.91411675347223
patch: public void write ( final out ) ;
rank: 307
score: 98.7884292602539
patch: public out write ( $STRING$ ) ;
rank: 307
score: 97.54249572753906
patch: protected while >
rank: 307
score: 96.81367797851563
patch: public run > catch
rank: 307
score: 96.60848236083984
patch: public null No
rank: 307
score: 96.3100077311198
patch: public FINAL
rank: 308
score: 99.03841145833333
patch: public out . flush ( ) { return out ; }
rank: 308
score: 98.92377471923828
patch: out . write ( Integer ) ;
rank: 308
score: 98.91402180989583
patch: public void write ( int out ) ;
rank: 308
score: 97.53709411621094
patch: protected protected public
rank: 308
score: 96.80520629882812
patch: case > null
rank: 308
score: 96.60794067382812
patch: out Thread State
rank: 308
score: 95.1995620727539
patch: public public iterator
rank: 309
score: 98.9237393465909
patch: out . write ( $STRING$ ) return $STRING$ ) ;
rank: 309
score: 98.91361694335937
patch: void write . write ( String $STRING$ ) ;
rank: 309
score: 98.78822157118056
patch: public write ( $STRING$ ) throws ) {
rank: 309
score: 97.52956136067708
patch: put >
rank: 309
score: 96.80145263671875
patch: public for > length
rank: 309
score: 96.6043930053711
patch: private State Type
rank: 309
score: 96.29152425130208
patch: has else
rank: 309
score: 95.19319661458333
patch: ignore >
rank: 310
score: 99.03810813210227
patch: public String out ( ) throws IO CaMeL Exception {
rank: 310
score: 99.0208231608073
patch: public out . write ( byte [ ] ) { ;
rank: 310
score: 98.92305908203124
patch: public static void . write ( $STRING$ ) ;
rank: 310
score: 98.91317138671874
patch: public static out . write . $STRING$ ) ;
rank: 310
score: 97.52796936035156
patch: handle > ]
rank: 310
score: 96.79930419921875
patch: return > i
rank: 310
score: 96.60387420654297
patch: final Exception State
rank: 310
score: 96.28535970052083
patch: Class print
rank: 310
score: 95.19229125976562
patch: append > >
rank: 311
score: 99.03778076171875
patch: public final out . write . write ( $STRING$ ) ;
rank: 311
score: 99.02076416015625
patch: out . write ( $STRING$ + out . ;
rank: 311
score: 98.92291870117188
patch: public out . write ( $STRING$ ) return ;
rank: 311
score: 98.91312255859376
patch: out . write ( new byte [ ] ;
rank: 311
score: 98.78691948784723
patch: public out ( ) out ( ) ;
rank: 311
score: 97.52732340494792
patch: private protected
rank: 311
score: 96.79024047851563
patch: public add > protected
rank: 311
score: 96.60382080078125
patch: public null (
rank: 311
score: 96.28284708658855
patch: Set add
rank: 312
score: 99.03762817382812
patch: out . write ( $STRING$ * / $STRING$ ) ) ;
rank: 312
score: 99.0207010904948
patch: out . write ( $STRING$ + ( int ) ) ;
rank: 312
score: 98.91298217773438
patch: private void write ( final String $STRING$ ) ;
rank: 312
score: 96.78059387207031
patch: > arraycopy
rank: 312
score: 96.60151672363281
patch: out Exception Exception
rank: 312
score: 96.28040568033855
patch: public value
rank: 312
score: 95.19136047363281
patch: public synchronized protected
rank: 313
score: 99.0374043782552
patch: private out . write ( $STRING$ ) throws IO CaMeL Exception
rank: 313
score: 98.92156372070312
patch: public out . write ( String double ) ;
rank: 313
score: 98.91249084472656
patch: public String write ( $STRING$ ) ;
rank: 313
score: 98.78601752387152
patch: public boolean out . write ( ) {
rank: 313
score: 97.51183064778645
patch: try >
rank: 313
score: 96.78050537109375
patch: for > length >
rank: 313
score: 96.60147094726562
patch: abstract Exception State
rank: 313
score: 96.27784220377605
patch: Util add
rank: 313
score: 95.19122314453125
patch: store > >
rank: 314
score: 99.0371981534091
patch: protected void out ( ) throws IO CaMeL Exception ;
rank: 314
score: 99.0198974609375
patch: out . write ( char value ) ;
rank: 314
score: 98.92085404829545
patch: out . write ( $STRING$ , $STRING$ ) ) ;
rank: 314
score: 98.91223822699652
patch: public void write ( int Integer ) ;
rank: 314
score: 97.50999450683594
patch: get > size
rank: 314
score: 96.77767333984374
patch: append > i
rank: 314
score: 96.27714029947917
patch: append
rank: 314
score: 95.19119262695312
patch: public public map
rank: 315
score: 99.03712815504808
patch: out . write ( ) throws IO CaMeL Exception { ) ;
rank: 315
score: 99.01968383789062
patch: out . write ( $STRING$ + ( ) $STRING$ ) ;
rank: 315
score: 98.91173706054687
patch: out . write ( 0 * / ) ;
rank: 315
score: 97.50714874267578
patch: private new >
rank: 315
score: 96.59963989257812
patch: void null null
rank: 315
score: 96.27239990234375
patch: State <UNK>
rank: 315
score: 95.18968200683594
patch: public protected Illegal
rank: 316
score: 99.03615500710227
patch: out . write ( $STRING$ * / byte ) ;
rank: 316
score: 98.9199951171875
patch: . . . . write ( $STRING$ ) ;
rank: 316
score: 98.91140407986111
patch: private int write ( String $STRING$ ) ;
rank: 316
score: 98.78315734863281
patch: out . write $STRING$ $STRING$ ) ;
rank: 316
score: 97.50534057617188
patch: async > ]
rank: 316
score: 96.77365112304688
patch: catch > ++
rank: 316
score: 96.59774780273438
patch: synchronized null null
rank: 316
score: 96.26966349283855
patch: private Stack
rank: 316
score: 95.18875122070312
patch: public public flush
rank: 317
score: 99.01858520507812
patch: out . write ( $STRING$ + out . size ) ;
rank: 317
score: 98.91998969184027
patch: out . write ( $STRING$ ) } ;
rank: 317
score: 98.91057739257812
patch: public abstract void write ( final $STRING$ ) ;
rank: 317
score: 98.78215874565973
patch: public void out ( ] $STRING$ ) {
rank: 317
score: 96.77238159179687
patch: public clear > Index
rank: 317
score: 96.59587097167969
patch: out Null State
rank: 317
score: 96.26597086588542
patch: Writer
rank: 317
score: 95.18689727783203
patch: abstract static void
rank: 318
score: 99.03577677408855
patch: out . write ( long ) throws IO CaMeL Exception {
rank: 318
score: 99.0178934733073
patch: public out . write ( String $STRING$ ) { ) ;
rank: 318
score: 98.90898895263672
patch: void out ( String out ) ;
rank: 318
score: 98.78185356987848
patch: public out . write ( byte ; _
rank: 318
score: 96.59366607666016
patch: public Error catch
rank: 318
score: 96.26442464192708
patch: public identity
rank: 318
score: 95.1851577758789
patch: * { >
rank: 319
score: 99.03575550426136
patch: public boolean write ( ) throws IO CaMeL Exception {
rank: 319
score: 99.01787775213069
patch: public out . write ( $STRING$ ) { ; ;
rank: 319
score: 98.91886596679687
patch: out . replace ( $STRING$ , $STRING$ ) ;
rank: 319
score: 98.90850830078125
patch: void out ( out ( ) ;
rank: 319
score: 98.7812728881836
patch: out . write . write ) ;
rank: 319
score: 97.48406982421875
patch: flush > ]
rank: 319
score: 96.76824340820312
patch: public for > Index
rank: 319
score: 96.59017944335938
patch: @ Exception
rank: 319
score: 95.18495178222656
patch: public synchronized is
rank: 320
score: 99.01778157552083
patch: out . write ( ( char ch [ ] ) ;
rank: 320
score: 98.91847534179688
patch: out . write ( $STRING$ ) { / ;
rank: 320
score: 98.90842013888889
patch: private void out ( String $STRING$ ) ;
rank: 320
score: 98.7810287475586
patch: public out ( ] $STRING$ ) {
rank: 320
score: 97.4831771850586
patch: private read >
rank: 320
score: 96.76729736328124
patch: finally > catch
rank: 320
score: 96.587158203125
patch: final null Exception
rank: 320
score: 96.26224772135417
patch: public class
rank: 320
score: 95.18458048502605
patch: private is
rank: 321
score: 99.01768909801136
patch: public void out ( ) throws Interrupted CaMeL Exception ;
rank: 321
score: 98.91730291193181
patch: public out . write ( $STRING$ ) { * ;
rank: 321
score: 98.90761990017361
patch: public void out ( String $STRING$ ) {
rank: 321
score: 98.78009033203125
patch: public boolean out . write ( ) ;
rank: 321
score: 96.76636962890625
patch: case > catch
rank: 321
score: 96.5864028930664
patch: public null out
rank: 321
score: 96.2605489095052
patch: get Exception
rank: 321
score: 95.18026733398438
patch: this > >
rank: 322
score: 99.03460138494319
patch: protected void out ( ) throws IO CaMeL Exception {
rank: 322
score: 99.01718971946023
patch: out . write ( $STRING$ + ( ) ; ;
rank: 322
score: 98.91693793402777
patch: / * ] out ( $STRING$ ) ;
rank: 322
score: 98.90698920355902
patch: protected abstract out . write ( ) ;
rank: 322
score: 98.77914767795139
patch: public out . write ( this ) ;
rank: 322
score: 97.47653198242188
patch: private write >
rank: 322
score: 96.58326721191406
patch: private Null null
rank: 322
score: 96.25928497314453
patch: Model
rank: 322
score: 95.17995198567708
patch: Ruby >
rank: 323
score: 99.03426419771634
patch: out . write ( $STRING$ * / $STRING$ * / ) ;
rank: 323
score: 98.916845703125
patch: private boolean out . write ( $STRING$ ) ;
rank: 323
score: 98.9053955078125
patch: protected int out . write ( $STRING$ ) ;
rank: 323
score: 98.7790756225586
patch: private out . write ( ) {
rank: 323
score: 97.47421264648438
patch: clone > ]
rank: 323
score: 96.7622802734375
patch: > while >
rank: 323
score: 96.58274841308594
patch: private Exception Not
rank: 323
score: 96.2540283203125
patch: get else
rank: 323
score: 95.17710876464844
patch: abstract private void
rank: 324
score: 99.03367106119792
patch: public write . write ( ) throws IO CaMeL Exception ;
rank: 324
score: 99.01590983072917
patch: public abstract out . write ( $STRING$ + out ) ;
rank: 324
score: 98.91648171164773
patch: public static static out . write ( $STRING$ ) ;
rank: 324
score: 98.77883572048611
patch: out . write ( abstract $STRING$ ) ;
rank: 324
score: 97.47264099121094
patch: remove > i
rank: 324
score: 96.76153564453125
patch: > iterator >
rank: 324
score: 96.5818862915039
patch: public EMPTY Exception
rank: 324
score: 96.24927775065105
patch: public Unsupported
rank: 324
score: 95.17593383789062
patch: verify > >
rank: 325
score: 99.03364868164063
patch: public out ( ) throws IO CaMeL Exception ;
rank: 325
score: 99.01578776041667
patch: out . write ( $STRING$ + $STRING$ + write ) ;
rank: 325
score: 98.91560502485795
patch: public out . write ( write ( $STRING$ ) ;
rank: 325
score: 98.90519883897569
patch: public void write ( $STRING$ $STRING$ ) ;
rank: 325
score: 98.77880859375
patch: public write . write ( ) ;
rank: 325
score: 97.47174835205078
patch: handler > ]
rank: 325
score: 96.58140563964844
patch: private Exception Runnable
rank: 325
score: 96.2477518717448
patch: public exit
rank: 325
score: 95.17473602294922
patch: public public Throwable
rank: 326
score: 99.0330810546875
patch: public out . write ( $STRING$ ) { }
rank: 326
score: 99.0150655110677
patch: public out . write ( byte [ ] value ) ;
rank: 326
score: 98.9150146484375
patch: out . write ( $STRING$ ) = null ;
rank: 326
score: 98.9048828125
patch: public out . write ( String write ) ;
rank: 326
score: 98.77870178222656
patch: public protected void out ( ) ;
rank: 326
score: 97.46920776367188
patch: do > i
rank: 326
score: 96.57850646972656
patch: / catch Exception
rank: 326
score: 96.24634806315105
patch: public as
rank: 327
score: 99.03287447415866
patch: protected out . write ( $STRING$ ) throws IO CaMeL Exception )
rank: 327
score: 98.90379503038194
patch: public void write ( String name ) ;
rank: 327
score: 98.77839660644531
patch: public out ( Exception $STRING$ ) {
rank: 327
score: 97.46276092529297
patch: println > arraycopy
rank: 327
score: 96.74035034179687
patch: has > catch >
rank: 327
score: 96.57789611816406
patch: non null State
rank: 327
score: 96.24352010091145
patch: abstract set
rank: 327
score: 95.17132568359375
patch: public compile
rank: 328
score: 99.03270263671875
patch: out . write . Byte ( $STRING$ ) ;
rank: 328
score: 99.01255104758523
patch: out . write ( char [ ] ( ) ;
rank: 328
score: 98.91419566761364
patch: public void out ( $STRING$ ) { $STRING$ ; }
rank: 328
score: 98.90344848632813
patch: public static void write ( String $STRING$ ) {
rank: 328
score: 98.77792019314236
patch: out . write ( byte out ) ;
rank: 328
score: 97.46256256103516
patch: private public synchronized
rank: 328
score: 96.73948974609375
patch: public iterator > i
rank: 328
score: 96.57789611816406
patch: out State iterator
rank: 328
score: 96.24161783854167
patch: get ++
rank: 328
score: 95.16915893554688
patch: protected abstract <UNK>
rank: 329
score: 99.03267045454545
patch: protected out . write ( $STRING$ , $STRING$ ) ;
rank: 329
score: 99.0123291015625
patch: public void out ( ) { out ( ) ; }
rank: 329
score: 98.91408962673611
patch: public String [ ] out ( ) {
rank: 329
score: 98.77787950303819
patch: protected out . write ( $STRING$ ) throws
rank: 329
score: 97.460693359375
patch: open > ]
rank: 329
score: 96.73903198242188
patch: exit > i
rank: 329
score: 96.57672119140625
patch: public Exception Map
rank: 329
score: 96.24024454752605
patch: public Package
rank: 329
score: 95.16793823242188
patch: to
rank: 330
score: 99.01221923828125
patch: out . write ( $STRING$ + value ) ;
rank: 330
score: 98.91408081054688
patch: out . write ( $STRING$ ) } ) ;
rank: 330
score: 98.90240478515625
patch: protected abstract void out ( ) ;
rank: 330
score: 97.46034240722656
patch: remove > Index
rank: 330
score: 96.73887634277344
patch: > case
rank: 330
score: 96.57506561279297
patch: static Error Exception
rank: 330
score: 96.2388203938802
patch: private while
rank: 330
score: 95.1666488647461
patch: < Not <UNK>
rank: 331
score: 99.03157865084134
patch: public synchronized out . write ( $STRING$ ) throws IO CaMeL Exception
rank: 331
score: 99.011865234375
patch: public Object out . write ( $STRING$ ) ;
rank: 331
score: 98.91370849609375
patch: public out . write ( String int ) ;
rank: 331
score: 98.90199279785156
patch: void out ( String 1 ) ;
rank: 331
score: 98.77751159667969
patch: public out . flush ( ) {
rank: 331
score: 97.45960998535156
patch: protected remove >
rank: 331
score: 96.734716796875
patch: do > catch >
rank: 331
score: 96.57467651367188
patch: void null Stack
rank: 331
score: 96.23704528808594
patch: size
rank: 331
score: 95.16539001464844
patch: public read >
rank: 332
score: 99.0309814453125
patch: out . write ( $STRING$ , this ) ;
rank: 332
score: 99.01154920789931
patch: public synchronized out . write ( $STRING$ )
rank: 332
score: 98.91366577148438
patch: out . set ( $STRING$ , $STRING$ ) ;
rank: 332
score: 98.90182495117188
patch: out . write ( null ) ;
rank: 332
score: 98.77555338541667
patch: public out . write ( str ) {
rank: 332
score: 97.45664978027344
patch: wait > ]
rank: 332
score: 96.7308349609375
patch: public clear > null
rank: 332
score: 96.57395935058594
patch: java State Stack
rank: 332
score: 96.2349141438802
patch: ++
rank: 333
score: 99.0112548828125
patch: public out . write ( boolean $STRING$ ) ;
rank: 333
score: 98.77462429470486
patch: out . write ( write out ) ;
rank: 333
score: 97.456298828125
patch: final run >
rank: 333
score: 96.72869873046875
patch: return > else
rank: 333
score: 96.57279205322266
patch: public Exception PI
rank: 333
score: 96.2332051595052
patch: public available
rank: 333
score: 95.16412353515625
patch: public protected new
rank: 334
score: 99.01102294921876
patch: out . write ( $STRING$ + $STRING$ + ;
rank: 334
score: 98.91284790039063
patch: public static void out ( $STRING$ ? ) ;
rank: 334
score: 98.90087280273437
patch: public void write ( String Integer $STRING$ ) ;
rank: 334
score: 98.77320014105902
patch: out . write ( $STRING$ ) ) throws
rank: 334
score: 97.44710540771484
patch: do > Index
rank: 334
score: 96.72548217773438
patch: catch catch >
rank: 334
score: 96.57247924804688
patch: out err State
rank: 334
score: 96.2218017578125
patch: public key
rank: 334
score: 95.16143798828125
patch: public matches
rank: 335
score: 99.00946599786931
patch: out . write ( $STRING$ + $STRING$ + ) ;
rank: 335
score: 98.91281960227273
patch: public static out . write ( String key ) ;
rank: 335
score: 98.77302381727431
patch: . . write ( $STRING$ ) ) ;
rank: 335
score: 97.44564819335938
patch: process > ]
rank: 335
score: 96.72220458984376
patch: clear > length >
rank: 335
score: 96.5718994140625
patch: public Enum State
rank: 335
score: 95.15678405761719
patch: public private Illegal
rank: 336
score: 99.02935791015625
patch: public out . close ( ) throws IO CaMeL Exception {
rank: 336
score: 99.00849609375
patch: write . write ( byte [ ] ) ;
rank: 336
score: 98.91259765625
patch: out . write ( $STRING$ ) ) return out ;
rank: 336
score: 98.90035247802734
patch: out . write ( true ) ;
rank: 336
score: 96.57099914550781
patch: @ Exception Runnable
rank: 336
score: 96.219482421875
patch: public Auto
rank: 337
score: 99.0291239420573
patch: public boolean out . write ( $STRING$ + $STRING$ ) ;
rank: 337
score: 99.00831187855114
patch: out . write ( Char CaMeL Sequence chars ) ;
rank: 337
score: 98.91171603732639
patch: public out . write ( int ) ;
rank: 337
score: 98.9002685546875
patch: private int write ( $STRING$ ) ;
rank: 337
score: 97.44070434570312
patch: set > i
rank: 337
score: 96.7191162109375
patch: null > else
rank: 337
score: 96.56882731119792
patch: private Error
rank: 337
score: 96.21048990885417
patch: abstract run
rank: 337
score: 95.15406036376953
patch: public public reverse
rank: 338
score: 99.0284893329327
patch: private static out . write ( ) throws IO CaMeL Exception ;
rank: 338
score: 99.00813802083333
patch: protected out . write ( byte [ ] $STRING$ ) ;
rank: 338
score: 98.90972900390625
patch: public void out ( $STRING$ / ) ;
rank: 338
score: 97.43939208984375
patch: on > ]
rank: 338
score: 96.71666870117187
patch: public catch > i
rank: 338
score: 96.56661224365234
patch: public EMPTY null
rank: 338
score: 96.20992024739583
patch: has ]
rank: 338
score: 95.1530990600586
patch: close > >
rank: 339
score: 99.0283954326923
patch: public void out . write ( ) throws IO CaMeL Exception {
rank: 339
score: 98.90966796875
patch: String . [ ] out ( ) { ; }
rank: 339
score: 98.89896240234376
patch: void out . write ( Integer 1 ) ;
rank: 339
score: 98.76776123046875
patch: public public void out ( $STRING$ ) ;
rank: 339
score: 97.43914794921875
patch: put > arraycopy
rank: 339
score: 96.71353149414062
patch: initialize > catch >
rank: 339
score: 96.5655288696289
patch: public Throwable Exception
rank: 339
score: 96.20961507161458
patch: synchronized get
rank: 340
score: 99.02798227163461
patch: private out . write ( out . write ( $STRING$ ) ;
rank: 340
score: 98.90947931463069
patch: public out . write ( $STRING$ ) ? $STRING$ ;
rank: 340
score: 98.8986328125
patch: void . write ( out , $STRING$ ) ;
rank: 340
score: 98.76597086588542
patch: public out . write ( $STRING$ ; .
rank: 340
score: 97.43900299072266
patch: static add >
rank: 340
score: 96.71243896484376
patch: run > catch
rank: 340
score: 96.56502532958984
patch: public Null Not
rank: 340
score: 95.1519775390625
patch: sort >
rank: 341
score: 99.02757568359375
patch: out . err . write ( $STRING$ ) ;
rank: 341
score: 99.00709838867188
patch: public out . write ( byte [ ) ;
rank: 341
score: 98.9092129794034
patch: public static out . write ( byte [ ) ;
rank: 341
score: 98.89847412109376
patch: static void write ( final String $STRING$ ) ;
rank: 341
score: 98.76321072048611
patch: private out . write ( $STRING$ ) throw
rank: 341
score: 97.43638610839844
patch: can > ]
rank: 341
score: 96.712255859375
patch: > exit >
rank: 341
score: 96.56035614013672
patch: private Exception out
rank: 341
score: 96.20266723632812
patch: Vector <UNK>
rank: 341
score: 95.15174102783203
patch: write > >
rank: 342
score: 99.0256680575284
patch: out . flush ( ) throws IO CaMeL Exception {
rank: 342
score: 99.00691731770833
patch: public out . write ( String str ) { ) ;
rank: 342
score: 98.90892944335937
patch: public void out ( ? > out ) ;
rank: 342
score: 98.76172637939453
patch: write . write ( out ) ;
rank: 342
score: 97.43475341796875
patch: Data > >
rank: 342
score: 96.70771789550781
patch: > Stack
rank: 342
score: 96.55995178222656
patch: public Exception case
rank: 342
score: 95.15163167317708
patch: expected >
rank: 343
score: 99.02473588423295
patch: out out . write . write ( $STRING$ ) ;
rank: 343
score: 99.00691528320313
patch: public out . write ( $STRING$ str ) ;
rank: 343
score: 98.90765991210938
patch: write . write ( $STRING$ , $STRING$ ) ;
rank: 343
score: 98.89825439453125
patch: void out write ( String $STRING$ ) ;
rank: 343
score: 98.76108805338542
patch: public out . write ( $STRING$ ) public
rank: 343
score: 97.42926025390625
patch: abstract for >
rank: 343
score: 96.55742645263672
patch: private Exception Thread
rank: 343
score: 96.20243835449219
patch: Array
rank: 343
score: 95.15054321289062
patch: public resolve
rank: 344
score: 99.02454630533855
patch: public final void out ( ) throws IO CaMeL Exception {
rank: 344
score: 99.0067647298177
patch: public out . write ( char [ ] value ) ;
rank: 344
score: 98.89779052734374
patch: public out . write ( String ch ) {
rank: 344
score: 98.75891791449652
patch: public out ( $STRING$ ) throws $STRING$ ;
rank: 344
score: 97.42807006835938
patch: Instance > >
rank: 344
score: 96.70498046875
patch: log > i
rank: 344
score: 96.55220031738281
patch: public Exception print
rank: 344
score: 96.20213317871094
patch: Thread
rank: 344
score: 95.14895629882812
patch: show >
rank: 345
score: 99.0063985188802
patch: public synchronized out . write ( byte [ ] ) ;
rank: 345
score: 98.90708229758523
patch: public static out . write ( String char ) ;
rank: 345
score: 98.89774169921876
patch: private out . write ( int $STRING$ ) ;
rank: 345
score: 97.42654418945312
patch: request > ]
rank: 345
score: 96.70330200195312
patch: put > catch >
rank: 345
score: 96.5498275756836
patch: @ Null Exception
rank: 345
score: 96.18728637695312
patch: File
rank: 345
score: 95.14846801757812
patch: public protected private
rank: 346
score: 99.02278275923295
patch: out . write ( $STRING$ ) ; $STRING$ * /
rank: 346
score: 98.90707397460938
patch: int out . write ( $STRING$ ) ) ;
rank: 346
score: 98.89749755859376
patch: public int . . write ( $STRING$ ) ;
rank: 346
score: 98.75771484375
patch: public out . ;
rank: 346
score: 97.42335510253906
patch: public catch >
rank: 346
score: 96.54969024658203
patch: public ( Not
rank: 346
score: 96.18497721354167
patch: Util i
rank: 346
score: 95.14842224121094
patch: public abstract is
rank: 347
score: 99.00608132102273
patch: public out . write ( byte [ ] chars )
rank: 347
score: 98.8969955444336
patch: private static void out ( ) ;
rank: 347
score: 98.75766427176339
patch: public out ( Exception ) {
rank: 347
score: 96.699853515625
patch: case > Index
rank: 347
score: 96.54916381835938
patch: synchronized Null State
rank: 347
score: 96.18271891276042
patch: Value print
rank: 347
score: 95.14717102050781
patch: index
rank: 348
score: 99.02264404296875
patch: out . write ( chars ) throws IO CaMeL Exception ;
rank: 348
score: 99.00588650173611
patch: out . write ( $STRING$ str ) ;
rank: 348
score: 98.90671608664773
patch: public static out . write ( String Byte ) ;
rank: 348
score: 98.89595947265624
patch: private static void write ( String $STRING$ ) ;
rank: 348
score: 98.75721232096355
patch: public out . out ;
rank: 348
score: 97.42013549804688
patch: private trim >
rank: 348
score: 96.69887084960938
patch: catch > 0
rank: 348
score: 96.54872131347656
patch: synchronized Exception Stack
rank: 348
score: 95.14691925048828
patch: private void <UNK>
rank: 349
score: 99.02243041992188
patch: public abstract out . write ( $STRING$ * / ) ;
rank: 349
score: 99.00579279119319
patch: public out . write ( $STRING$ + value ) ;
rank: 349
score: 98.9067049893466
patch: public out . write ( int char $NUMBER$ ) ;
rank: 349
score: 98.8955810546875
patch: public out . write ( byte ch ) {
rank: 349
score: 98.75681559244792
patch: write . out . write ( ) ;
rank: 349
score: 97.41494750976562
patch: execute > ]
rank: 349
score: 96.69848022460937
patch: public append > i
rank: 349
score: 96.54735565185547
patch: out Exception catch
rank: 349
score: 96.17767333984375
patch: public insert
rank: 349
score: 95.14678955078125
patch: public synchronized private
rank: 350
score: 99.0220947265625
patch: . . * / out . write ( $STRING$ ) ;
rank: 350
score: 99.00485229492188
patch: public void out . write ( byte [ ] $STRING$ )
rank: 350
score: 98.90662231445313
patch: public out . write ( Character $STRING$ ) ;
rank: 350
score: 98.89483642578125
patch: public String . . . . } ) ;
rank: 350
score: 98.75554656982422
patch: out . write ( Float ) ;
rank: 350
score: 97.40899658203125
patch: protected protected
rank: 350
score: 96.69435424804688
patch: log > ++
rank: 350
score: 96.54653930664062
patch: public State Writer
rank: 350
score: 96.17399088541667
patch: get catch
rank: 350
score: 95.14426676432292
patch: public char
rank: 351
score: 98.90643310546875
patch: public void out ( $STRING$ / * ) ;
rank: 351
score: 98.89470825195312
patch: out . write ( byte * / ) ;
rank: 351
score: 98.75502522786458
patch: out ( $STRING$ ) ;
rank: 351
score: 96.690283203125
patch: return > length
rank: 351
score: 96.5462875366211
patch: static Exception State
rank: 351
score: 96.1719462076823
patch: null :
rank: 352
score: 99.02042236328126
patch: out . write ( $STRING$ , ( ) ;
rank: 352
score: 99.00429465553977
patch: out . write ( $STRING$ + ( byte ) ;
rank: 352
score: 98.90519409179687
patch: public synchronized out . write ( String ) ;
rank: 352
score: 98.89449637276786
patch: protected int out ( ) ;
rank: 352
score: 98.75453016493056
patch: public out . write ( 0 ) ;
rank: 352
score: 97.40119934082031
patch: private close >
rank: 352
score: 96.687109375
patch: public get > public
rank: 352
score: 96.54579162597656
patch: public Runnable out
rank: 353
score: 99.00424194335938
patch: public out . write ( $STRING$ + out . length )
rank: 353
score: 98.90494791666667
patch: String out ( ) ;
rank: 353
score: 98.8944091796875
patch: public void write ( final String $STRING$ ) {
rank: 353
score: 98.75412326388889
patch: private write . write ( $STRING$ ) ;
rank: 353
score: 97.40061442057292
patch: Instance >
rank: 353
score: 96.68671875
patch: get > i case
rank: 353
score: 96.54512023925781
patch: public Exception Unknown
rank: 353
score: 96.168701171875
patch: public Internal
rank: 353
score: 95.14166259765625
patch: public abstract Array
rank: 354
score: 99.01925659179688
patch: public out ( ) throws IO CaMeL Exception {
rank: 354
score: 98.90490112304687
patch: final out . write ( $STRING$ ) ) ;
rank: 354
score: 98.89408569335937
patch: final . write . write . $STRING$ ) ;
rank: 354
score: 98.75331115722656
patch: public out . $STRING$ ) ) ;
rank: 354
score: 97.40022277832031
patch: protected replace >
rank: 354
score: 96.54412841796875
patch: @ Error null
rank: 354
score: 96.16635131835938
patch: size >
rank: 354
score: 95.14027404785156
patch: public public matches
rank: 355
score: 99.01924641927083
patch: out . write ( $STRING$ ) { flush ( ) ;
rank: 355
score: 99.00391642252605
patch: public out . write ( char ) throws IO CaMeL Exception
rank: 355
score: 98.90396554129464
patch: out . flush ( ) ;
rank: 355
score: 98.75320095486111
patch: out . write ( $STRING$ ) ; out
rank: 355
score: 96.68096313476562
patch: public write > i
rank: 355
score: 96.54046630859375
patch: All State State
rank: 355
score: 96.16494750976562
patch: public all
rank: 355
score: 95.14024861653645
patch: private Not
rank: 356
score: 99.01878773082386
patch: out . write . write ( ( $STRING$ ) ;
rank: 356
score: 99.00360662286931
patch: out . write ( char char [ ] ) ;
rank: 356
score: 98.903759765625
patch: public void out ( $STRING$ $STRING$ ) { ;
rank: 356
score: 98.8930908203125
patch: private abstract out . write ( out ) ;
rank: 356
score: 98.75194634331598
patch: out . write ( write ) ) ;
rank: 356
score: 97.39759063720703
patch: next > ]
rank: 356
score: 96.67845458984375
patch: exit > length
rank: 356
score: 96.53987884521484
patch: synchronized Error Exception
rank: 356
score: 96.157958984375
patch: public Out
rank: 357
score: 99.0187655362216
patch: out . write ( $STRING$ $STRING$ , $STRING$ ) ;
rank: 357
score: 99.00341796875
patch: Object out . write ( $STRING$ + $STRING$ ) ;
rank: 357
score: 98.90288434709821
patch: Object out ( $STRING$ ) ;
rank: 357
score: 98.89256591796875
patch: out . write ( char * / ) ;
rank: 357
score: 98.751220703125
patch: out . write ( byte ( ) ;
rank: 357
score: 97.39387512207031
patch: static for >
rank: 357
score: 96.67813720703126
patch: case > Stack
rank: 357
score: 96.53959655761719
patch: private Exception Illegal
rank: 357
score: 96.15791829427083
patch: public Interrupted
rank: 357
score: 95.1380615234375
patch: Null >
rank: 358
score: 99.01870727539062
patch: public out . write ( byte [ ] out ) {
rank: 358
score: 99.00313313802083
patch: out . write ( char [ ) ;
rank: 358
score: 98.9021728515625
patch: public out . write ( String char ) ;
rank: 358
score: 98.89217122395833
patch: public abstract void out ( out ) ;
rank: 358
score: 98.74989827473958
patch: public abstract out . write ( out ;
rank: 358
score: 97.39075469970703
patch: synchronized run >
rank: 358
score: 96.67047729492188
patch: finally > else
rank: 358
score: 96.1538594563802
patch: abstract add
rank: 359
score: 99.01816813151042
patch: public final out . write ( $STRING$ + $STRING$ ) ;
rank: 359
score: 99.003076171875
patch: void out . write ( $STRING$ + ) ;
rank: 359
score: 98.90205078125
patch: public out . write ( Boolean $STRING$ ) ;
rank: 359
score: 98.74806722005208
patch: out . write . write $STRING$ $STRING$ ;
rank: 359
score: 97.38986206054688
patch: read > ]
rank: 359
score: 96.66907958984375
patch: public for > catch
rank: 359
score: 96.53936004638672
patch: public null Throwable
rank: 359
score: 96.14699300130208
patch: exists >
rank: 359
score: 95.1365966796875
patch: < abstract void
rank: 360
score: 99.01816628196023
patch: out . write . write ( $STRING$ $STRING$ ) ;
rank: 360
score: 99.00281871448864
patch: public String out ( ) { return $STRING$ ; }
rank: 360
score: 98.90187581380208
patch: public void out ( String name ) ;
rank: 360
score: 98.89153374565973
patch: public public out . write ( ) ;
rank: 360
score: 98.74767388237848
patch: public out . close ( ) { ;
rank: 360
score: 97.38858032226562
patch: private arraycopy >
rank: 360
score: 96.66483154296876
patch: catch > err
rank: 360
score: 96.53687286376953
patch: synchronized Error State
rank: 360
score: 95.13577270507812
patch: public public throw
rank: 361
score: 99.00168678977273
patch: public out . write ( char [ ] chars )
rank: 361
score: 98.9016357421875
patch: public static out . write ( $STRING$ / ;
rank: 361
score: 98.89127197265626
patch: public out . write ( String i ) ;
rank: 361
score: 97.38397216796875
patch: private private
rank: 361
score: 96.6645751953125
patch: catch > index
rank: 361
score: 96.53363037109375
patch: @ Error Error
rank: 361
score: 96.13568115234375
patch: Util set
rank: 362
score: 99.0177714029948
patch: public final void out ( ) throws IO CaMeL Exception ;
rank: 362
score: 99.00108753551136
patch: public out . write ( String ) { ; }
rank: 362
score: 98.90157741970486
patch: out . write ( $STRING$ ) * ;
rank: 362
score: 98.89102608816964
patch: protected void out ( ) {
rank: 362
score: 98.74724663628473
patch: public out . write ( byte ) throws
rank: 362
score: 97.38374328613281
patch: append > ]
rank: 362
score: 96.53294372558594
patch: public State Class
rank: 362
score: 96.13437906901042
patch: Set close
rank: 362
score: 95.13359069824219
patch: public private new
rank: 363
score: 99.00102095170455
patch: out . write ( String ( int ch ) ;
rank: 363
score: 98.89088657924107
patch: final void out ( ) ;
rank: 363
score: 97.38063049316406
patch: write > ]
rank: 363
score: 96.53054809570312
patch: public arraycopy Exception
rank: 363
score: 96.1342264811198
patch: has i
rank: 364
score: 99.0169677734375
patch: public static out . write ( $STRING$ , $STRING$ ) ;
rank: 364
score: 99.00098765980114
patch: out . write ( $STRING$ + $STRING$ $STRING$ ) ;
rank: 364
score: 98.89053005642361
patch: public void out ( int i ) {
rank: 364
score: 98.7464599609375
patch: write ( $STRING$ ) ) ;
rank: 364
score: 97.37275695800781
patch: close > i
rank: 364
score: 96.52938079833984
patch: public new Stack
rank: 364
score: 96.13262939453125
patch: public child
rank: 364
score: 95.13277435302734
patch: protected void <UNK>
rank: 365
score: 99.01692708333333
patch: public write . write ( ) throws IO CaMeL Exception {
rank: 365
score: 98.99970037286931
patch: out . write ( String str , $STRING$ ) ;
rank: 365
score: 98.900048828125
patch: boolean out . write ( $STRING$ ) ) ;
rank: 365
score: 98.89048936631944
patch: public int write . write ( ) ;
rank: 365
score: 98.74577331542969
patch: write . write . $STRING$ ) ;
rank: 365
score: 97.37198638916016
patch: add > catch
rank: 365
score: 96.6576171875
patch: clear > i
rank: 365
score: 96.52863311767578
patch: protected $STRING$ Exception
rank: 365
score: 96.1310323079427
patch: public directory
rank: 365
score: 95.13214874267578
patch: public private private
rank: 366
score: 99.01685587565105
patch: public out . write ( Char CaMeL Sequence $STRING$ ) ;
rank: 366
score: 98.99967447916667
patch: public out . write ( $STRING$ ) { $STRING$ ; }
rank: 366
score: 98.90001085069444
patch: public static void out ( ) { ;
rank: 366
score: 98.8904052734375
patch: out . write ( byte + $STRING$ ) ;
rank: 366
score: 98.74534776475694
patch: public out . write ( SIZE ) ;
rank: 366
score: 97.3692855834961
patch: update > Index
rank: 366
score: 96.6549072265625
patch: set > length >
rank: 366
score: 96.5273208618164
patch: public null :
rank: 366
score: 96.1232198079427
patch: public keep
rank: 366
score: 95.13212076822917
patch: public reverse
rank: 367
score: 99.01611328125
patch: out . write ( $STRING$ , $NUMBER$ * $NUMBER$ ) ;
rank: 367
score: 98.998388671875
patch: synchronized void out . write ( $STRING$ ) ;
rank: 367
score: 98.89927455357143
patch: boolean out ( $STRING$ ) ;
rank: 367
score: 98.89039442274306
patch: public int write ( int $STRING$ ) ;
rank: 367
score: 96.65338745117188
patch: public public for >
rank: 367
score: 96.52444458007812
patch: public Exception Safe
rank: 367
score: 96.12125651041667
patch: public offset
rank: 367
score: 95.13117980957031
patch: public public load
rank: 368
score: 99.01590983072917
patch: out . write . ( ) throws IO CaMeL Exception ;
rank: 368
score: 98.89898003472223
patch: public static int out ( $STRING$ ) ;
rank: 368
score: 98.88976372612848
patch: public void write ( int name ) ;
rank: 368
score: 98.7442626953125
patch: write . write ( $STRING$ ) out ;
rank: 368
score: 97.36357116699219
patch: set > >
rank: 368
score: 96.65248107910156
patch: public put >
rank: 368
score: 96.52194213867188
patch: out Exception Runtime
rank: 368
score: 96.12001546223958
patch: entry >
rank: 368
score: 95.13043212890625
patch: initialize >
rank: 369
score: 98.9979756673177
patch: public void out ( $STRING$ ) throws IO CaMeL Exception {
rank: 369
score: 98.89893934461806
patch: out . write ( $STRING$ ) return ;
rank: 369
score: 98.88904418945313
patch: public out . write ( ) ; null ;
rank: 369
score: 98.74276394314236
patch: public write . write ( $STRING$ ; .
rank: 369
score: 97.3621826171875
patch: log > ]
rank: 369
score: 96.65098876953125
patch: close > catch >
rank: 369
score: 96.52194213867188
patch: non Exception State
rank: 369
score: 96.12000528971355
patch: list >
rank: 369
score: 95.13015747070312
patch: assign >
rank: 370
score: 99.01394653320312
patch: public final out . write . write ( $STRING$ ) {
rank: 370
score: 98.99789428710938
patch: private out . write ( byte [ ] $STRING$ ) ;
rank: 370
score: 98.89868774414063
patch: final out . write ( String $STRING$ ) ;
rank: 370
score: 98.88902282714844
patch: this . write ( $STRING$ ) ;
rank: 370
score: 98.74273003472223
patch: $STRING$ ) . write ( $STRING$ ) ;
rank: 370
score: 97.36125183105469
patch: add > length
rank: 370
score: 96.6502197265625
patch: for > i catch
rank: 370
score: 96.51934814453125
patch: public Runnable arraycopy
rank: 370
score: 95.12977600097656
patch: public insert >
rank: 371
score: 99.01338334517045
patch: out . write . write ( $STRING$ ) ) ;
rank: 371
score: 98.99716186523438
patch: public int write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 371
score: 98.89844970703125
patch: public static out . write ( char [ ;
rank: 371
score: 98.88714599609375
patch: out . write ( Integer ch ) ;
rank: 371
score: 98.74191284179688
patch: public out ( Exception $STRING$ ) ;
rank: 371
score: 97.36107635498047
patch: private clone >
rank: 371
score: 96.51905822753906
patch: @ null null
rank: 371
score: 96.11771647135417
patch: public Word
rank: 371
score: 95.12940216064453
patch: public abstract String
rank: 372
score: 99.01312255859375
patch: out . write ( out ) throws IO CaMeL Exception {
rank: 372
score: 98.99537242542614
patch: public void out . write ( $STRING$ + ) ;
rank: 372
score: 98.886669921875
patch: public void write ( int char $NUMBER$ ) ;
rank: 372
score: 98.7410888671875
patch: $STRING$ out . write ( byte ) ;
rank: 372
score: 97.35839080810547
patch: assert > ]
rank: 372
score: 96.64450073242188
patch: initialize > i >
rank: 372
score: 96.51724243164062
patch: public Error Unsupported
rank: 372
score: 96.11753336588542
patch: protected close
rank: 372
score: 95.12884521484375
patch: public synchronized long
rank: 373
score: 99.01292114257812
patch: public int out ( ) { return out ;
rank: 373
score: 98.99500621448864
patch: out . write ( byte [ ] ch ) ;
rank: 373
score: 98.89813842773438
patch: private out . write ( $STRING$ $STRING$ ) ;
rank: 373
score: 98.88665771484375
patch: public out . write ( String SIZE ) ;
rank: 373
score: 98.74102783203125
patch: public out out . write ( ) ;
rank: 373
score: 97.35771179199219
patch: local > ]
rank: 373
score: 96.64293212890625
patch: insert > length >
rank: 373
score: 96.51518249511719
patch: public Null IO
rank: 373
score: 96.11293538411458
patch: Set run
rank: 373
score: 95.12879943847656
patch: public synchronized Object
rank: 374
score: 99.0128682454427
patch: out . write . write ( $STRING$ ) ; ) ;
rank: 374
score: 98.994140625
patch: public out . write ( byte [ ] str ) ;
rank: 374
score: 98.89719848632812
patch: public byte [ ] out ( $STRING$ ) ;
rank: 374
score: 98.88661024305556
patch: public void write ( String out ) ;
rank: 374
score: 98.73849148220486
patch: public out . write ( ch ) ;
rank: 374
score: 97.35516357421875
patch: if > ]
rank: 374
score: 96.51472473144531
patch: public : Exception
rank: 374
score: 96.1122538248698
patch: public index
rank: 375
score: 98.99374389648438
patch: out . write ( $STRING$ + ( $STRING$ $STRING$ ) ;
rank: 375
score: 98.88646443684895
patch: private out ( ) ;
rank: 375
score: 98.73741658528645
patch: public out . ) ;
rank: 375
score: 97.3526382446289
patch: replace > ]
rank: 375
score: 96.63817749023437
patch: has > length >
rank: 375
score: 96.51464080810547
patch: private Exception arraycopy
rank: 375
score: 96.10868326822917
patch: Utilities public
rank: 375
score: 95.12844848632812
patch: ( > {
rank: 376
score: 98.99363199869792
patch: public out . write ( char [ ] ch ) ;
rank: 376
score: 98.88599989149306
patch: public int . . write ( ) ;
rank: 376
score: 98.73708089192708
patch: out . write ( $STRING$ ) ; boolean
rank: 376
score: 97.35261535644531
patch: synchronized public public
rank: 376
score: 96.63759155273438
patch: catch > Stack
rank: 376
score: 96.51385498046875
patch: public Throwable null
rank: 376
score: 96.10812377929688
patch: public content
rank: 376
score: 95.12779235839844
patch: public sleep >
rank: 377
score: 98.89635009765625
patch: public static out write ( String $STRING$ ) ;
rank: 377
score: 98.885693359375
patch: public public out . write ( out ) ;
rank: 377
score: 98.73665364583333
patch: public public void out ( $STRING$ ) {
rank: 377
score: 97.35256958007812
patch: private private public
rank: 377
score: 96.51373291015625
patch: protected Null State
rank: 377
score: 95.12763214111328
patch: public replace >
rank: 378
score: 98.89614868164062
patch: int . [ ] out ( $STRING$ ) ;
rank: 378
score: 98.88539428710938
patch: public void write ( String $NUMBER$ 1 ) ;
rank: 378
score: 98.73646375868056
patch: out . write ( byte $NUMBER$ ) ;
rank: 378
score: 97.34652709960938
patch: protected set >
rank: 378
score: 96.63474731445312
patch: > i --
rank: 378
score: 96.51313781738281
patch: @ null State
rank: 378
score: 96.10557047526042
patch: Iterator <UNK>
rank: 379
score: 98.99186567826705
patch: public String out ( ) { return out ; }
rank: 379
score: 98.89388275146484
patch: public void out ( String ) ;
rank: 379
score: 98.88526746961806
patch: private static out . write ( ) ;
rank: 379
score: 98.73582628038194
patch: public out . write . out ) ;
rank: 379
score: 97.34559631347656
patch: private log >
rank: 379
score: 96.6343505859375
patch: public run > case
rank: 379
score: 96.51106262207031
patch: abstract Exception null
rank: 379
score: 96.1050313313802
patch: get finally
rank: 379
score: 95.12683868408203
patch: iterator > >
rank: 380
score: 98.99171956380208
patch: public out . write ( $STRING$ ) throws ) { ;
rank: 380
score: 98.89354790581598
patch: protected static void out ( $STRING$ ) ;
rank: 380
score: 98.88505859375
patch: void out ( ) ; null ; null }
rank: 380
score: 97.344482421875
patch: final put >
rank: 380
score: 96.6331787109375
patch: catch > next
rank: 380
score: 96.51101684570312
patch: protected null Null
rank: 380
score: 96.10475667317708
patch: public final
rank: 380
score: 95.12570190429688
patch: List
rank: 381
score: 99.00792347301136
patch: public long write ( ) throws IO CaMeL Exception ;
rank: 381
score: 98.99109903971355
patch: public out . write ( String $STRING$ ) { ; }
rank: 381
score: 98.89299665178571
patch: public String out ( ) {
rank: 381
score: 98.88504367404514
patch: void out ( ) ; null ) ;
rank: 381
score: 98.73537190755208
patch: public out out . write ( ) {
rank: 381
score: 97.34140014648438
patch: protected clear >
rank: 381
score: 96.63218180338542
patch: case
rank: 381
score: 96.50916290283203
patch: public State Out
rank: 381
score: 96.10414632161458
patch: public native
rank: 381
score: 95.1240463256836
patch: public public highest
rank: 382
score: 99.00725763494319
patch: out . write ( char ch [ ] ) {
rank: 382
score: 98.892822265625
patch: public void out ( $STRING$ ? ? $STRING$ ;
rank: 382
score: 98.884765625
patch: public void out ( String $NUMBER$ ] ) ;
rank: 382
score: 98.73484971788194
patch: out . write ( $STRING$ ) throws throws
rank: 382
score: 97.33677673339844
patch: push > ]
rank: 382
score: 96.630908203125
patch: log > arraycopy
rank: 382
score: 96.50537109375
patch: static Exception
rank: 382
score: 96.1025899251302
patch: public byte
rank: 383
score: 99.00684204101563
patch: out . write ( $STRING$ , byte ) ;
rank: 383
score: 98.8924560546875
patch: private out . write ( String name ) ;
rank: 383
score: 98.883642578125
patch: public static void write ( int $STRING$ ) ;
rank: 383
score: 98.73465983072917
patch: out . write ( $NUMBER$ ) ) ;
rank: 383
score: 97.33636474609375
patch: has > i
rank: 383
score: 96.63077392578126
patch: for > i ++
rank: 383
score: 96.50504302978516
patch: VM null State
rank: 383
score: 95.12223307291667
patch: flush >
rank: 384
score: 99.00497436523438
patch: public out . write ( Char CaMeL Sequence str ) {
rank: 384
score: 98.98914252387152
patch: out . write ( String value ) ;
rank: 384
score: 98.891943359375
patch: public void . . write ( $STRING$ ) ;
rank: 384
score: 98.88262261284723
patch: void out ( || out ( ) ;
rank: 384
score: 98.73405626085069
patch: public out . write ( out . ;
rank: 384
score: 97.3314208984375
patch: private try >
rank: 384
score: 96.62921142578125
patch: clear > arraycopy >
rank: 384
score: 96.50434112548828
patch: out ch State
rank: 384
score: 96.09652709960938
patch: equals
rank: 385
score: 99.00482177734375
patch: out . write ( ( ) throws IO CaMeL Exception {
rank: 385
score: 98.98839314778645
patch: public out . write ( char char [ ] ) ;
rank: 385
score: 98.89132690429688
patch: public String [ ] out ( ) { ;
rank: 385
score: 98.8825912475586
patch: protected int write ( $STRING$ ) ;
rank: 385
score: 98.73385184151786
patch: out . write ( byte ;
rank: 385
score: 97.33120727539062
patch: activate > ]
rank: 385
score: 96.6278564453125
patch: > i else
rank: 385
score: 96.50225067138672
patch: public == Exception
rank: 385
score: 95.11981201171875
patch: protected void {
rank: 386
score: 98.98748779296875
patch: out . write ( $STRING$ ) ; / * * ;
rank: 386
score: 98.88242797851562
patch: public void write ( final String out ) ;
rank: 386
score: 98.73356797960069
patch: write ( ) write ( $STRING$ ) ;
rank: 386
score: 97.32952117919922
patch: synchronized set >
rank: 386
score: 96.62615966796875
patch: exit > catch
rank: 386
score: 96.50193786621094
patch: void Runtime State
rank: 386
score: 96.09033203125
patch: private int
rank: 386
score: 95.11918640136719
patch: public public Boolean
rank: 387
score: 98.9868496981534
patch: out . write ( $STRING$ , ( $STRING$ ) ;
rank: 387
score: 98.88200378417969
patch: void out ( int $NUMBER$ ) ;
rank: 387
score: 98.7332992553711
patch: out . write ( ( ) ;
rank: 387
score: 97.32560729980469
patch: close > Index
rank: 387
score: 96.625048828125
patch: null > catch
rank: 387
score: 96.50151062011719
patch: synchronized Exception Error
rank: 387
score: 96.08915201822917
patch: public lock
rank: 387
score: 95.11861419677734
patch: show > >
rank: 388
score: 99.00368430397727
patch: public out . write ( ) { return out ;
rank: 388
score: 98.88152398003473
patch: public boolean write ( int $STRING$ ) ;
rank: 388
score: 98.73318820529514
patch: public protected out . write ( ) {
rank: 388
score: 97.324462890625
patch: private protected private
rank: 388
score: 96.6234130859375
patch: if > length >
rank: 388
score: 96.50099182128906
patch: public State Number
rank: 388
score: 96.08479817708333
patch: public $STRING$
rank: 388
score: 95.11767578125
patch: public synchronized equals
rank: 389
score: 99.00196329752605
patch: out . write ( chars ) throws IO CaMeL Exception {
rank: 389
score: 98.89013061523437
patch: public static out . write ( long ) ;
rank: 389
score: 98.88117811414931
patch: public byte [ ] out ( ) ;
rank: 389
score: 98.73297797309027
patch: public void out . write ( out ;
rank: 389
score: 97.32270050048828
patch: add > next
rank: 389
score: 96.49775695800781
patch: protected State Index
rank: 389
score: 96.0845947265625
patch: public length
rank: 389
score: 95.11749267578125
patch: public protected protected
rank: 390
score: 98.9855624112216
patch: static out . write ( $STRING$ + $STRING$ ) ;
rank: 390
score: 98.88931884765626
patch: public static void write ( $STRING$ , / ;
rank: 390
score: 97.32233428955078
patch: try > >
rank: 390
score: 96.62084350585937
patch: hash > catch >
rank: 390
score: 96.49514770507812
patch: public catch Exception
rank: 390
score: 96.0823974609375
patch: public compute
rank: 390
score: 95.11618041992188
patch: public public Process
rank: 391
score: 99.00140935724431
patch: public abstract out . write ( long $STRING$ ) ;
rank: 391
score: 98.98553466796875
patch: out . write ( $STRING$ + this ) ;
rank: 391
score: 98.88920288085937
patch: public void out ( $STRING$ ? ) { ;
rank: 391
score: 98.88030327690973
patch: public T write ( String $STRING$ ) ;
rank: 391
score: 98.73203531901042
patch: out . write ( $STRING$ ; ) ;
rank: 391
score: 97.32060241699219
patch: fire > ]
rank: 391
score: 96.62054443359375
patch: write > catch >
rank: 391
score: 96.49405670166016
patch: public null Writer
rank: 391
score: 96.08101399739583
patch: public interrupt
rank: 391
score: 95.11466471354167
patch: public float
rank: 392
score: 99.00094604492188
patch: public boolean write ( $STRING$ ) throws IO CaMeL Exception ;
rank: 392
score: 98.88860473632812
patch: out . write ( $STRING$ ) = true ;
rank: 392
score: 98.88017578125
patch: public void write ( final Integer 1 ) ;
rank: 392
score: 98.73164876302083
patch: public write . write . $STRING$ ) ;
rank: 392
score: 96.49374389648438
patch: private Exception catch
rank: 392
score: 96.08078002929688
patch: Value arraycopy
rank: 393
score: 99.00060017903645
patch: out . write ( ch ) throws IO CaMeL Exception ;
rank: 393
score: 98.98489379882812
patch: public void out ( ) throws Interrupted CaMeL Exception { ;
rank: 393
score: 98.88675537109376
patch: public out . write ( String long ) ;
rank: 393
score: 98.73015001085069
patch: out . write ( byte ; ) ;
rank: 393
score: 97.31864166259766
patch: show > ]
rank: 393
score: 96.6184326171875
patch: remove > catch >
rank: 393
score: 96.49259185791016
patch: out null arraycopy
rank: 393
score: 96.0782979329427
patch: has :
rank: 393
score: 95.1121826171875
patch: public protected Null
rank: 394
score: 99.00028852982955
patch: out [ 0 ] . write ( $STRING$ ) ;
rank: 394
score: 98.98465576171876
patch: out . write ( ) throws IO CaMeL Exception
rank: 394
score: 98.88558959960938
patch: public void out ( String char $NUMBER$ ) ;
rank: 394
score: 98.72998725043402
patch: public out . write . $STRING$ $STRING$ ;
rank: 394
score: 96.6167236328125
patch: setup > catch >
rank: 394
score: 96.48936462402344
patch: / State Null
rank: 394
score: 96.07778930664062
patch: Next >
rank: 394
score: 95.10926310221355
patch: public evaluate
rank: 395
score: 98.98410866477273
patch: public abstract out . write . write ( ) ;
rank: 395
score: 98.88553466796876
patch: public out . write ( int name ) ;
rank: 395
score: 98.87790934244792
patch: out . write ( Long 1 ) ;
rank: 395
score: 98.72782897949219
patch: public protected void out ( ) {
rank: 395
score: 97.31793212890625
patch: schedule > ]
rank: 395
score: 96.61470336914063
patch: ch catch >
rank: 395
score: 96.48934936523438
patch: out Runtime Stack
rank: 395
score: 96.07642618815105
patch: Util return
rank: 395
score: 95.1087646484375
patch: public private protected
rank: 396
score: 98.9840420809659
patch: private void out ( ) throws IO CaMeL Exception ;
rank: 396
score: 98.88533325195313
patch: out . write ( $STRING$ ) $STRING$ ) ;
rank: 396
score: 98.87784423828126
patch: public void out ( ) == null ) ;
rank: 396
score: 98.72734917534723
patch: public out . write ( ) { return
rank: 396
score: 97.31756591796875
patch: protected protected private
rank: 396
score: 96.6109375
patch: insert > catch >
rank: 396
score: 96.48918151855469
patch: public State current
rank: 396
score: 95.10863240559895
patch: drop >
rank: 397
score: 98.98333185369319
patch: out . write ( char [ ] str ) ;
rank: 397
score: 98.87590942382812
patch: public static void write ( String 1 ) ;
rank: 397
score: 98.72694905598958
patch: protected write . write ( $STRING$ ) ;
rank: 397
score: 97.31619262695312
patch: put > catch
rank: 397
score: 96.61073608398438
patch: run > catch >
rank: 397
score: 96.4890365600586
patch: private State Index
rank: 397
score: 96.07218424479167
patch: System >
rank: 397
score: 95.10720825195312
patch: * { void
rank: 398
score: 98.9829989346591
patch: out . write ( String str ) throws ) ;
rank: 398
score: 98.88524034288194
patch: void . . write ( $STRING$ ) ;
rank: 398
score: 98.87531127929688
patch: void out . write ( long $STRING$ ) ;
rank: 398
score: 98.72593180338542
patch: ; out . write ( $STRING$ ) ;
rank: 398
score: 96.48861694335938
patch: private Exception Out
rank: 398
score: 95.10719299316406
patch: public write >
rank: 399
score: 98.99933416193181
patch: private out . write ( $STRING$ * / $STRING$ )
rank: 399
score: 98.8847412109375
patch: private out . write ( String out ) ;
rank: 399
score: 98.8752670288086
patch: void write ( String 1 ) ;
rank: 399
score: 98.72572835286458
patch: public out . write ( ] ; .
rank: 399
score: 97.31456756591797
patch: refresh > ]
rank: 399
score: 96.6064208984375
patch: clear > out >
rank: 399
score: 96.48812866210938
patch: public Error Writer
rank: 399
score: 96.0711161295573
patch: Collection <UNK>
rank: 399
score: 95.1068115234375
patch: private void {
rank: 400
score: 98.88463677300348
patch: out . write ( $STRING$ ) ? ;
rank: 400
score: 98.87517632378473
patch: public void out ( String 1 ) ;
rank: 400
score: 98.72557237413194
patch: public out . write ( ) { }
rank: 400
score: 97.31211853027344
patch: main > ]
rank: 400
score: 96.60487060546875
patch: > else <UNK>
rank: 400
score: 96.48789978027344
patch: protected Exception Not
rank: 400
score: 95.10621134440105
patch: replace >
rank: 401
score: 98.99884033203125
patch: public out . write ( $STRING$ * / )
rank: 401
score: 98.98089599609375
patch: public out . write ( char [ ] str ) ;
rank: 401
score: 98.8751708984375
patch: public void write ( int String out ) ;
rank: 401
score: 97.31098937988281
patch: protected synchronized public
rank: 401
score: 96.48670959472656
patch: public TRUE State
rank: 401
score: 96.06783294677734
patch: State
rank: 402
score: 98.98066850142045
patch: public void out ( out ) throws IO CaMeL Exception
rank: 402
score: 98.883935546875
patch: out . write ( $STRING$ ) = 0 ;
rank: 402
score: 98.8748779296875
patch: out ( ) ;
rank: 402
score: 98.72360568576389
patch: $STRING$ write . write ( $STRING$ ) ;
rank: 402
score: 97.3097915649414
patch: remove > >
rank: 402
score: 96.60030517578124
patch: public for > null
rank: 402
score: 96.48663330078125
patch: out State exit
rank: 402
score: 96.0645751953125
patch: private Runnable
rank: 402
score: 95.10069274902344
patch: public Validate >
rank: 403
score: 98.99859619140625
patch: public synchronized out . write ( $STRING$ ) throws $STRING$ ;
rank: 403
score: 98.98046875
patch: public out . write ( String str ) throws )
rank: 403
score: 98.8836181640625
patch: public void out ( ) { $STRING$ ; }
rank: 403
score: 98.87403700086806
patch: public static void write ( out ) ;
rank: 403
score: 98.72310638427734
patch: ) . write ( $STRING$ ) ;
rank: 403
score: 96.48541259765625
patch: private Error Stack
rank: 403
score: 96.06423950195312
patch: synchronized public
rank: 403
score: 95.1004638671875
patch: private new
rank: 404
score: 98.9985860188802
patch: private out . write ( $STRING$ * / $STRING$ ) {
rank: 404
score: 98.87387424045139
patch: double out . write ( $STRING$ ) ;
rank: 404
score: 98.72228325737848
patch: public out . write out ( ) ;
rank: 404
score: 97.30730438232422
patch: write > i
rank: 404
score: 96.48365783691406
patch: <= Exception Exception
rank: 404
score: 96.06058756510417
patch: Queue >
rank: 405
score: 98.99813842773438
patch: out . write ( $STRING$ * $NUMBER$ * $NUMBER$ ) ;
rank: 405
score: 98.97922770182292
patch: public synchronized out . write ( $STRING$ ) { ; ;
rank: 405
score: 98.88162231445312
patch: private void out ( $STRING$ + $STRING$ ) ;
rank: 405
score: 98.87354736328125
patch: public out . write ( String name ) {
rank: 405
score: 98.72127278645833
patch: public out write ( ] $STRING$ ) ;
rank: 405
score: 97.30705261230469
patch: for > Index
rank: 405
score: 96.59609375
patch: return > catch
rank: 405
score: 96.48336029052734
patch: public Thread null
rank: 405
score: 95.09720865885417
patch: store >
rank: 406
score: 98.99806043836806
patch: @ Override out . write ( $STRING$ )
rank: 406
score: 98.9792147549716
patch: out . write ( $STRING$ ) ; ; ) ;
rank: 406
score: 98.88119070870536
patch: public synchronized out ( ) ;
rank: 406
score: 98.87308756510417
patch: private abstract void out ( $STRING$ ) ;
rank: 406
score: 98.72100830078125
patch: out ( ) out ( ) ;
rank: 406
score: 97.30416107177734
patch: protected private public
rank: 406
score: 96.59576416015625
patch: for > i case
rank: 406
score: 96.48333740234375
patch: public Exception 0
rank: 406
score: 96.05830891927083
patch: public format
rank: 406
score: 95.0955810546875
patch: public public char
rank: 407
score: 98.99798583984375
patch: out . write ( Byte ) throws IO CaMeL Exception ;
rank: 407
score: 98.97905939275569
patch: public out . write ( $STRING$ + long ) ;
rank: 407
score: 98.88080444335938
patch: public static void write ( String out ) ;
rank: 407
score: 97.30366516113281
patch: private public run
rank: 407
score: 96.59423828125
patch: public clear > catch
rank: 407
score: 96.48285675048828
patch: public Override State
rank: 407
score: 96.05764770507812
patch: Class finally
rank: 407
score: 95.09524536132812
patch: while >
rank: 408
score: 98.9788818359375
patch: out . write ( ) throws ( $STRING$ ) ;
rank: 408
score: 98.88049926757813
patch: public void out ( $STRING$ * / ) ;
rank: 408
score: 98.87114715576172
patch: public abstract void write ( ) ;
rank: 408
score: 98.72042083740234
patch: out . write ( ch ) ;
rank: 408
score: 97.30110168457031
patch: protected public synchronized
rank: 408
score: 96.59014282226562
patch: public clear > length
rank: 408
score: 96.4822006225586
patch: public Exception Enum
rank: 408
score: 96.05696614583333
patch: public name
rank: 408
score: 95.09356689453125
patch: iterator
rank: 409
score: 98.87068939208984
patch: void write ( int Integer ) ;
rank: 409
score: 98.71953667534723
patch: public void out ( ] $STRING$ ) ;
rank: 409
score: 96.58779296875
patch: clear > case >
rank: 409
score: 96.48066711425781
patch: public Exception Lookup
rank: 409
score: 96.05690511067708
patch: public Class
rank: 410
score: 98.87931993272569
patch: public boolean . write ( $STRING$ ) ;
rank: 410
score: 98.71931966145833
patch: private out . write ( byte ) ;
rank: 410
score: 96.4803695678711
patch: out State Null
rank: 410
score: 96.05462646484375
patch: Set synchronized
rank: 410
score: 95.09290568033855
patch: expand >
rank: 411
score: 98.97751686789773
patch: public out . write ( String str ) { ;
rank: 411
score: 98.86969672309027
patch: out . write ( $STRING$ ) ) {
rank: 411
score: 98.71896701388889
patch: public out . write ( $STRING$ ) /
rank: 411
score: 97.29434204101562
patch: protected arraycopy >
rank: 411
score: 96.4802017211914
patch: static Error State
rank: 411
score: 96.05457560221355
patch: public US
rank: 411
score: 95.09065246582031
patch: public public Long
rank: 412
score: 98.9956766764323
patch: out . write ( $STRING$ ) throws Interrupted CaMeL Exception ;
rank: 412
score: 98.87847900390625
patch: public private void out ( $STRING$ ) ;
rank: 412
score: 98.86968994140625
patch: abstract void write ( $STRING$ ) ;
rank: 412
score: 98.71879069010417
patch: out . write ( Short $STRING$ ) ;
rank: 412
score: 97.29364013671875
patch: handler > i
rank: 412
score: 96.58583984375
patch: > case >
rank: 412
score: 96.47949981689453
patch: public Null Runnable
rank: 413
score: 98.9769287109375
patch: public abstract out . write ( $STRING$ $STRING$ ) ;
rank: 413
score: 98.87752075195313
patch: String . . out write ( $STRING$ ) ;
rank: 413
score: 98.86959838867188
patch: void out ( $STRING$ $STRING$ ) ;
rank: 413
score: 98.71845160590277
patch: public out out . write ( byte ;
rank: 413
score: 97.29343668619792
patch: update >
rank: 413
score: 96.58519287109375
patch: case > arraycopy
rank: 413
score: 96.47833251953125
patch: public Exception do
rank: 413
score: 96.0472412109375
patch: Set >
rank: 414
score: 98.99452903053977
patch: public out . write . write ( $STRING$ ) {
rank: 414
score: 98.97676225142045
patch: public out . write ( String ) { ; ;
rank: 414
score: 98.87657165527344
patch: out . set ( $STRING$ ) ;
rank: 414
score: 98.86793212890625
patch: void out ( ) . write ( ) ;
rank: 414
score: 97.29280090332031
patch: get > Array
rank: 414
score: 96.58192138671875
patch: case > length
rank: 414
score: 96.47696685791016
patch: public : null
rank: 414
score: 95.08782958984375
patch: public synchronized static
rank: 415
score: 98.99425159801136
patch: private out . write ( $STRING$ ) { ) ;
rank: 415
score: 98.97669474283855
patch: public void out . write ( byte [ ] ) ;
rank: 415
score: 98.87605590820313
patch: public void out ( $STRING$ ? ? / ;
rank: 415
score: 98.86729736328125
patch: void out . write ( byte [ ) ;
rank: 415
score: 98.71714952256944
patch: public out . write . $STRING$ ; .
rank: 415
score: 97.29141235351562
patch: protected private
rank: 415
score: 96.58057861328125
patch: log > iterator
rank: 415
score: 96.47681427001953
patch: / arraycopy Exception
rank: 415
score: 96.04707845052083
patch: public substring
rank: 416
score: 98.99425159801136
patch: public int write ( ) throws IO CaMeL Exception {
rank: 416
score: 98.97669135199652
patch: out . write ( char [ ] ;
rank: 416
score: 98.87532958984374
patch: public static out write ( $STRING$ $STRING$ ) ;
rank: 416
score: 98.86596069335937
patch: public void write ( int String Integer ) ;
rank: 416
score: 98.71692572699652
patch: public void out ( Exception $STRING$ ) {
rank: 416
score: 97.28871154785156
patch: try > i
rank: 416
score: 96.47640228271484
patch: protected Runnable null
rank: 416
score: 95.0811258951823
patch: public }
rank: 417
score: 98.99371337890625
patch: public final out . write ( $STRING$ ) { ) ;
rank: 417
score: 98.97660688920455
patch: out . write ( $STRING$ + ( String ) ;
rank: 417
score: 98.87531873914931
patch: public out . write ( Byte ) ;
rank: 417
score: 98.71659851074219
patch: public boolean out ( ) { ;
rank: 417
score: 97.28837585449219
patch: update > i
rank: 417
score: 96.57547607421876
patch: update > catch >
rank: 417
score: 96.47529602050781
patch: private Runnable null
rank: 417
score: 96.04140218098958
patch: public Number
rank: 418
score: 98.87507934570313
patch: public static void out ( $STRING$ / / ;
rank: 418
score: 98.86505126953125
patch: public void write ( int String ) ;
rank: 418
score: 98.71633572048611
patch: public out . write ( $STRING$ ) Exception
rank: 418
score: 97.2881088256836
patch: script > ]
rank: 418
score: 96.57536315917969
patch: > err
rank: 418
score: 96.47480773925781
patch: private null Not
rank: 418
score: 96.04052734375
patch: public count
rank: 418
score: 95.07106526692708
patch: Single >
rank: 419
score: 98.97601873224431
patch: public abstract out . write ( String value ) ;
rank: 419
score: 98.8744384765625
patch: public static void out ( String $STRING$ ) ;
rank: 419
score: 98.86471896701389
patch: private synchronized out . write ( ) ;
rank: 419
score: 98.71579318576389
patch: out . write ( $STRING$ ) ; throw
rank: 419
score: 97.28648376464844
patch: can > catch
rank: 419
score: 96.57282104492188
patch: > > public
rank: 419
score: 96.47368621826172
patch: out null out
rank: 419
score: 96.03487141927083
patch: List public
rank: 419
score: 95.0609130859375
patch: TYPE
rank: 420
score: 98.99339710582386
patch: out out . write ( $STRING$ * / ) ;
rank: 420
score: 98.97601318359375
patch: public void out ( out ) throws IO CaMeL Exception {
rank: 420
score: 98.71529812282986
patch: public out . write ( Float ) {
rank: 420
score: 97.28466033935547
patch: protected read >
rank: 420
score: 96.57141723632813
patch: case > case
rank: 420
score: 96.47323608398438
patch: public State Illegal
rank: 420
score: 96.03465779622395
patch: abstract public
rank: 420
score: 95.05712890625
patch: void >
rank: 421
score: 98.9933573404948
patch: out . write ( $STRING$ ) ; ( ( ) ;
rank: 421
score: 98.974951171875
patch: public out . write ( $STRING$ name ) ;
rank: 421
score: 98.87435574001736
patch: Object . . write ( $STRING$ ) ;
rank: 421
score: 98.86351182725694
patch: write . write ( byte $STRING$ ) ;
rank: 421
score: 98.71527099609375
patch: public package . write ( $STRING$ ) ;
rank: 421
score: 97.28378295898438
patch: load > ]
rank: 421
score: 96.57042694091797
patch: case public
rank: 421
score: 96.47010803222656
patch: / State Runtime
rank: 421
score: 96.03436279296875
patch: private for
rank: 422
score: 98.99326393821023
patch: out . write ( $STRING$ $STRING$ + $STRING$ ) ;
rank: 422
score: 98.97458902994792
patch: public void out . write ( ) throws IO CaMeL Exception
rank: 422
score: 98.87428283691406
patch: out . remove ( $STRING$ ) ;
rank: 422
score: 98.71397569444444
patch: public out . write ( byte ; ;
rank: 422
score: 96.56843872070313
patch: public log > null
rank: 422
score: 96.46997833251953
patch: public Runnable Thread
rank: 422
score: 96.02984619140625
patch: private starts
rank: 423
score: 98.97405450994319
patch: public abstract out . write ( $STRING$ str ) ;
rank: 423
score: 98.8741455078125
patch: public static void out ( $STRING$ / ) ;
rank: 423
score: 98.86170959472656
patch: public void write ( final ) ;
rank: 423
score: 98.71319580078125
patch: out . write ( ) + $STRING$ ;
rank: 423
score: 97.28120422363281
patch: private next >
rank: 423
score: 96.56813354492188
patch: public log > catch
rank: 423
score: 96.46942138671875
patch: void null Exception
rank: 423
score: 96.02793375651042
patch: Set get
rank: 424
score: 98.97393243963069
patch: public void out ( ) throws Interrupted CaMeL Exception {
rank: 424
score: 98.8739990234375
patch: public void out . write ( String ) ;
rank: 424
score: 98.86130099826389
patch: public out . write ( false ) ;
rank: 424
score: 98.71270751953125
patch: write ( $STRING$ ) throws ) ;
rank: 424
score: 97.27928161621094
patch: private flush >
rank: 424
score: 96.46884155273438
patch: void Exception null
rank: 424
score: 95.04294840494792
patch: public START
rank: 425
score: 98.9925537109375
patch: out . write ( $STRING$ * ) ;
rank: 425
score: 98.97383626302083
patch: public out . write ( String ( int ch ) ;
rank: 425
score: 98.86098904079861
patch: public abstract write ( String $STRING$ ) ;
rank: 425
score: 98.71258544921875
patch: public out . write ( String ) {
rank: 425
score: 97.27726745605469
patch: new catch >
rank: 425
score: 96.56332397460938
patch: public run > length
rank: 425
score: 96.46592712402344
patch: public ( null
rank: 425
score: 96.02513631184895
patch: private remove
rank: 426
score: 98.99202473958333
patch: out . write ( $STRING$ ) ; write ( ) ;
rank: 426
score: 98.97333318536931
patch: out . write ( byte byte [ ] ) ;
rank: 426
score: 98.87363009982639
patch: String static . write ( $STRING$ ) ;
rank: 426
score: 98.86027018229167
patch: void out ( ) {
rank: 426
score: 98.71158854166667
patch: public out ( $STRING$ ) throws ) ;
rank: 426
score: 97.276611328125
patch: encode > ]
rank: 426
score: 96.56329345703125
patch: > count >
rank: 426
score: 96.46308898925781
patch: public Exception Process
rank: 426
score: 96.02487182617188
patch: public random
rank: 427
score: 98.9918212890625
patch: protected void write ( ) throws IO CaMeL Exception ;
rank: 427
score: 98.97329711914062
patch: public out . write write ( byte [ ] ) ;
rank: 427
score: 98.87328423394098
patch: public synchronized void write ( $STRING$ ) ;
rank: 427
score: 98.71142578125
patch: public out write ( ] $STRING$ ) {
rank: 427
score: 97.27278900146484
patch: private protected protected
rank: 427
score: 96.56256103515625
patch: public stop > i
rank: 427
score: 96.46233367919922
patch: void Exception Exception
rank: 427
score: 96.02386474609375
patch: Util out
rank: 428
score: 98.99176025390625
patch: public out . write ( Char CaMeL Sequence out ) ;
rank: 428
score: 98.97223455255681
patch: public out . write ( String name , ) ;
rank: 428
score: 98.87188110351562
patch: public boolean out ( $STRING$ ) throws ) ;
rank: 428
score: 98.85907660590277
patch: void out ( String $NUMBER$ ] ) ;
rank: 428
score: 98.71104600694444
patch: public out . write ( long ) ;
rank: 428
score: 96.56167602539062
patch: out catch >
rank: 428
score: 96.46090698242188
patch: public State IO
rank: 428
score: 96.02351888020833
patch: Util Exception
rank: 428
score: 95.03564453125
patch: unmodifiable >
rank: 429
score: 98.99165852864583
patch: public out . write ( out . write ( $STRING$ )
rank: 429
score: 98.97174627130681
patch: out . write ( $STRING$ ) ; } ) ;
rank: 429
score: 98.8584716796875
patch: public int write ( $STRING$ ) ; null ;
rank: 429
score: 98.71058872767857
patch: write ( ] out ) ;
rank: 429
score: 97.27164459228516
patch: iterator > ]
rank: 429
score: 96.45964813232422
patch: private $STRING$ Exception
rank: 429
score: 96.0208231608073
patch: Utilities void
rank: 430
score: 98.97157592773438
patch: public void out ( ) { out ; }
rank: 430
score: 98.85818481445312
patch: static void write ( $STRING$ ) ;
rank: 430
score: 97.27156829833984
patch: println > catch
rank: 430
score: 96.55948486328126
patch: > length catch
rank: 430
score: 96.4595947265625
patch: public Null Illegal
rank: 430
score: 96.01987711588542
patch: has Exception
rank: 430
score: 95.03390502929688
patch: public (
rank: 431
score: 98.97129313151042
patch: out . write ( ( byte ) ;
rank: 431
score: 98.85694580078125
patch: protected abstract out . write ( out ) ;
rank: 431
score: 98.70909966362848
patch: public out . write ( final ) {
rank: 431
score: 97.26932525634766
patch: refresh > i
rank: 431
score: 96.55660400390624
patch: set > out >
rank: 431
score: 96.45880889892578
patch: public Exception LINE
rank: 431
score: 96.01774088541667
patch: Utilities get
rank: 432
score: 98.99132283528645
patch: out . write ( $STRING$ + $STRING$ + this ) ;
rank: 432
score: 98.97042236328124
patch: out . write ( ( char ch ) ;
rank: 432
score: 98.87085571289063
patch: out . write ( 0 , 0 ) ;
rank: 432
score: 97.267822265625
patch: ignore > ]
rank: 432
score: 96.55494384765625
patch: get > i --
rank: 432
score: 96.458251953125
patch: public : State
rank: 432
score: 96.01670328776042
patch: public AWT
rank: 432
score: 95.03273010253906
patch: Collection
rank: 433
score: 98.969970703125
patch: public out . write ( $STRING$ ) ; ) ;
rank: 433
score: 98.85662841796875
patch: public out . write ( String Character ) ;
rank: 433
score: 98.70797390407986
patch: public void out ( Exception $STRING$ ) ;
rank: 433
score: 97.26673889160156
patch: protected public run
rank: 433
score: 96.45802307128906
patch: public Writer Exception
rank: 433
score: 96.01338704427083
patch: public Byte
rank: 434
score: 98.989501953125
patch: protected synchronized out . write . write ( $STRING$ ) {
rank: 434
score: 98.86971435546874
patch: Object out . write ( $STRING$ ) ) ;
rank: 434
score: 98.70793321397569
patch: public out . write ( true ) ;
rank: 434
score: 97.26374816894531
patch: setup > ]
rank: 434
score: 96.45761108398438
patch: protected Error Stack
rank: 434
score: 96.01300048828125
patch: Util Stack
rank: 434
score: 95.02736409505208
patch: Write >
rank: 435
score: 98.98940207741477
patch: write . write ( ) throws IO CaMeL Exception {
rank: 435
score: 98.96948852539063
patch: void write ( ) throws IO CaMeL Exception ;
rank: 435
score: 98.86968994140625
patch: public static out . write ( $STRING$ , ;
rank: 435
score: 98.85601196289062
patch: void out ( $STRING$ ? $STRING$ : ) ;
rank: 435
score: 98.70772976345486
patch: out . write ( T $STRING$ ) ;
rank: 435
score: 97.26173400878906
patch: run > arraycopy
rank: 435
score: 96.5533447265625
patch: public run > i
rank: 435
score: 96.4559326171875
patch: private Exception run
rank: 435
score: 96.01278686523438
patch: public wrap
rank: 435
score: 95.025390625
patch: matches >
rank: 436
score: 98.98859320746527
patch: public out . write ( int $STRING$ )
rank: 436
score: 98.9691874186198
patch: public static out . write ( byte [ ] ) ;
rank: 436
score: 98.86834716796875
patch: public void out ( $STRING$ ) { out ;
rank: 436
score: 98.85599517822266
patch: public public void out ( ) ;
rank: 436
score: 98.70766872829861
patch: public out ( ) out = $STRING$ ;
rank: 436
score: 97.26115417480469
patch: private synchronized public
rank: 436
score: 96.552685546875
patch: load > catch >
rank: 436
score: 96.45384979248047
patch: protected Null null
rank: 436
score: 96.00501505533855
patch: private log
rank: 437
score: 98.96917169744319
patch: out . write ( char [ ] ) ; ;
rank: 437
score: 98.86817084418402
patch: public static out ( String $STRING$ ) ;
rank: 437
score: 98.70697699652777
patch: public out . write ( ) out ;
rank: 437
score: 97.26084899902344
patch: protected new >
rank: 437
score: 96.55105590820312
patch: public clear > else
rank: 437
score: 96.45352172851562
patch: synchronized State null
rank: 437
score: 96.00304158528645
patch: System print
rank: 438
score: 98.98835893110795
patch: public synchronized void out . write ( $STRING$ ) {
rank: 438
score: 98.96893865411931
patch: out . write ( ) throws $STRING$ + ) ;
rank: 438
score: 98.86790635850694
patch: out . append ( $STRING$ ) ) ;
rank: 438
score: 98.85520629882812
patch: public void write ( int String $NUMBER$ ) ;
rank: 438
score: 98.70673963758681
patch: public out . write ( ) ) throw
rank: 438
score: 97.25977325439453
patch: private start >
rank: 438
score: 96.45213317871094
patch: private null err
rank: 438
score: 96.00286865234375
patch: public ensure
rank: 439
score: 98.9881924715909
patch: public int out ( ) { return 0 ; }
rank: 439
score: 98.96835327148438
patch: out . write ( ( int ch ) ;
rank: 439
score: 98.86737060546875
patch: public out . write ( Object out ) ;
rank: 439
score: 98.85506184895833
patch: protected void write ( int $STRING$ ) ;
rank: 439
score: 98.7059097290039
patch: public abstract write ( $STRING$ ) ;
rank: 439
score: 97.25817108154297
patch: put > length
rank: 439
score: 96.54850463867187
patch: has > i catch
rank: 439
score: 96.45047760009766
patch: public Exception FALSE
rank: 439
score: 96.00049845377605
patch: Util ]
rank: 439
score: 95.01683553059895
patch: public ch
rank: 440
score: 98.96834309895833
patch: public out . write ( String name )
rank: 440
score: 98.86727294921874
patch: public void out ( $STRING$ ] out ) ;
rank: 440
score: 98.70553249782986
patch: private out . write ( $STRING$ ) )
rank: 440
score: 97.25651550292969
patch: hash > ]
rank: 440
score: 96.54753112792969
patch: > index
rank: 440
score: 96.45011901855469
patch: out null catch
rank: 440
score: 96.00030517578125
patch: public false
rank: 440
score: 95.01597086588542
patch: verify >
rank: 441
score: 98.98785400390625
patch: out . write ( $STRING$ , value ) ;
rank: 441
score: 98.96731567382812
patch: public out . write ( $STRING$ write ( byte ) ;
rank: 441
score: 98.86713518415179
patch: out . close ( ) ;
rank: 441
score: 98.85401746961806
patch: void out ( $STRING$ + 0 ) ;
rank: 441
score: 98.70552571614583
patch: out . write ( out $STRING$ ) ;
rank: 441
score: 97.25620524088542
patch: local >
rank: 441
score: 96.547412109375
patch: public put > null
rank: 441
score: 96.45005798339844
patch: private Null Error
rank: 441
score: 95.9940694173177
patch: protected <UNK>
rank: 441
score: 95.015625
patch: public short
rank: 442
score: 98.98780314127605
patch: public out . write ( $STRING$ ) { return $STRING$ ;
rank: 442
score: 98.96729532877605
patch: public synchronized out . write ( $STRING$ + ( ) ;
rank: 442
score: 98.853515625
patch: public void write ( int Integer out ) ;
rank: 442
score: 97.25015258789062
patch: root > ]
rank: 442
score: 96.54392700195312
patch: case > out
rank: 442
score: 96.44908142089844
patch: public Null err
rank: 442
score: 95.989501953125
patch: public break
rank: 442
score: 95.01516723632812
patch: execute >
rank: 443
score: 98.96722412109375
patch: public out . write ( String str ) throws $STRING$ )
rank: 443
score: 98.85300021701389
patch: write . write ( Integer $STRING$ ) ;
rank: 443
score: 97.24822998046875
patch: trim > ]
rank: 443
score: 96.5436767578125
patch: assert > catch >
rank: 443
score: 96.44874572753906
patch: protected Exception err
rank: 443
score: 95.98946126302083
patch: public enable
rank: 443
score: 95.01202392578125
patch: name
rank: 444
score: 98.98768199573864
patch: protected out . write ( $STRING$ ) { ) ;
rank: 444
score: 98.96698552911931
patch: out . write ( $STRING$ ) { ; ; }
rank: 444
score: 98.86591254340277
patch: public static void out ( ) return ;
rank: 444
score: 98.85289655412946
patch: public protected out ( ) ;
rank: 444
score: 98.70413643973214
patch: public out ( $STRING$ ) throws
rank: 444
score: 97.24796295166016
patch: start > ]
rank: 444
score: 96.53756103515624
patch: finally > arraycopy
rank: 444
score: 96.44721221923828
patch: public Exception as
rank: 444
score: 95.01137288411458
patch: protected while
rank: 445
score: 98.98741566051136
patch: public out . err . write ( $STRING$ ) ;
rank: 445
score: 98.9652099609375
patch: synchronized out . write ( byte [ ] ) ;
rank: 445
score: 98.86579725477431
patch: public void out ( $STRING$ out ) ;
rank: 445
score: 98.70296902126736
patch: public int out . write ( ) {
rank: 445
score: 97.2476806640625
patch: Gui >
rank: 445
score: 96.537548828125
patch: call > catch >
rank: 445
score: 96.44668579101562
patch: public Error No
rank: 445
score: 95.9881591796875
patch: Utilities synchronized
rank: 446
score: 98.98720481178977
patch: out out . write ( $STRING$ , $STRING$ ) ;
rank: 446
score: 98.965087890625
patch: abstract out . write ( $STRING$ + $STRING$ ) ;
rank: 446
score: 98.8654296875
patch: public String CaMeL Buffer out ( $STRING$ ) ;
rank: 446
score: 98.7028299967448
patch: public out . $STRING$ ;
rank: 446
score: 97.24763488769531
patch: open > i
rank: 446
score: 96.53561401367188
patch: do > length >
rank: 446
score: 96.44647216796875
patch: / State Stack
rank: 446
score: 95.98762512207031
patch: while
rank: 446
score: 95.0067647298177
patch: write >
rank: 447
score: 98.98709106445312
patch: public synchronized out . write ( $STRING$ * / ) ;
rank: 447
score: 98.96309037642045
patch: public void out ( $STRING$ ) { ; ; }
rank: 447
score: 98.86537000868056
patch: private out . write ( String ) ;
rank: 447
score: 98.8522216796875
patch: public out . write ( char ch ) {
rank: 447
score: 98.70250701904297
patch: public public void out ( ) {
rank: 447
score: 97.24655151367188
patch: handler > Index
rank: 447
score: 96.44635009765625
patch: out Stack
rank: 447
score: 95.98715209960938
patch: has arraycopy
rank: 447
score: 95.00019836425781
patch: abstract
rank: 448
score: 98.987060546875
patch: out . write ( long ) ;
rank: 448
score: 98.96232466264205
patch: out . write ( $STRING$ + ( char ) ;
rank: 448
score: 98.86508178710938
patch: public void out ( String char 1 ) ;
rank: 448
score: 98.85166015625
patch: abstract . write . write . write ) ;
rank: 448
score: 98.70201280381944
patch: public out . write ( protected ) ;
rank: 448
score: 97.24642944335938
patch: invoke > Index
rank: 448
score: 96.52702026367187
patch: next > i
rank: 448
score: 96.4460678100586
patch: out Exception arraycopy
rank: 449
score: 98.98688299005681
patch: protected out . write . write ( $STRING$ ) ;
rank: 449
score: 98.9622469815341
patch: out . write ( ( char [ ] ) ;
rank: 449
score: 98.86498345269098
patch: String . . write ( $STRING$ ) ;
rank: 449
score: 98.85155029296875
patch: public static out . write ( public ) ;
rank: 449
score: 98.70193820529514
patch: out ( ) out ( $STRING$ ) ;
rank: 449
score: 97.24583435058594
patch: set > arraycopy
rank: 449
score: 96.52603149414062
patch: for catch > >
rank: 449
score: 96.44602966308594
patch: public Exception Character
rank: 449
score: 95.9776611328125
patch: null ]
rank: 449
score: 94.99550374348958
patch: true >
rank: 450
score: 98.98681640625
patch: public String write ( ) throws IO CaMeL Exception ;
rank: 450
score: 98.86446533203124
patch: out . write ( $STRING$ ) = false ;
rank: 450
score: 98.85146077473958
patch: public void out ( int $STRING$ ) ;
rank: 450
score: 98.7017593383789
patch: public write . write ( ) {
rank: 450
score: 97.24456787109375
patch: properties > ]
rank: 450
score: 96.524658203125
patch: catch > finally
rank: 450
score: 96.44403076171875
patch: out null iterator
rank: 450
score: 95.9729715983073
patch: Util arraycopy
rank: 450
score: 94.98819986979167
patch: process >
rank: 451
score: 98.9859375
patch: protected final out . write ( $STRING$ ) {
rank: 451
score: 98.961181640625
patch: synchronized out . write ( $STRING$ + $STRING$ ) ;
rank: 451
score: 98.86376342773437
patch: out . write ( $NUMBER$ + $STRING$ ) ;
rank: 451
score: 98.85133870442708
patch: public int write ( $STRING$ $STRING$ ) ;
rank: 451
score: 98.70166693793402
patch: out . write . $STRING$ ) ) ;
rank: 451
score: 97.24249267578125
patch: substring > ]
rank: 451
score: 96.52212524414062
patch: case > size
rank: 451
score: 96.44247436523438
patch: public Error exit
rank: 451
score: 95.97071329752605
patch: Class catch
rank: 451
score: 94.98709106445312
patch: protected Illegal
rank: 452
score: 98.8635986328125
patch: public Object [ ] out ( $STRING$ ) ;
rank: 452
score: 98.85071672712054
patch: int write ( $STRING$ ) ;
rank: 452
score: 98.70093451605902
patch: public synchronized out . write ( ) {
rank: 452
score: 97.2419662475586
patch: reset > ]
rank: 452
score: 96.5210205078125
patch: has > i case
rank: 452
score: 96.44156646728516
patch: void State Error
rank: 452
score: 95.9693094889323
patch: public i
rank: 453
score: 98.95958362926136
patch: public abstract out . write ( byte [ ) ;
rank: 453
score: 98.86354573567708
patch: public final void write ( $STRING$ ) ;
rank: 453
score: 98.70074462890625
patch: public out . write ( abstract ) ;
rank: 453
score: 97.24081420898438
patch: flush > i
rank: 453
score: 96.52063598632813
patch: setup > length >
rank: 453
score: 96.44124348958333
patch: protected Error
rank: 453
score: 95.96492513020833
patch: private Thread
rank: 454
score: 98.98488362630208
patch: protected out . write ( char ch [ ] ) {
rank: 454
score: 98.95789683948864
patch: out . write ( String $STRING$ ) throws ) ;
rank: 454
score: 98.84893798828125
patch: void write . write ( ) ;
rank: 454
score: 98.69968087332589
patch: public out . write ) ;
rank: 454
score: 96.52060546875
patch: > run >
rank: 454
score: 96.43856048583984
patch: @ Error State
rank: 454
score: 94.98406982421875
patch: int
rank: 455
score: 98.9576083096591
patch: public out . write ( $STRING$ + short ) ;
rank: 455
score: 98.848876953125
patch: void out ( int 0 ) ;
rank: 455
score: 97.23865509033203
patch: arraycopy > >
rank: 455
score: 96.51984252929688
patch: public close > i
rank: 455
score: 96.43779754638672
patch: protected Exception IO
rank: 455
score: 95.9596455891927
patch: Buffer arraycopy
rank: 456
score: 98.95747514204545
patch: out . write ( $STRING$ ) ; / * ;
rank: 456
score: 98.86289672851562
patch: public void int . write ( $STRING$ ) ;
rank: 456
score: 98.84853786892361
patch: protected void out ( String $STRING$ ) ;
rank: 456
score: 97.23849487304688
patch: do > arraycopy
rank: 456
score: 96.51902465820312
patch: run > length >
rank: 456
score: 96.43438720703125
patch: / ch Exception
rank: 456
score: 94.97885131835938
patch: clear
rank: 457
score: 98.98355712890626
patch: out out . write ( $STRING$ ) ; ;
rank: 457
score: 98.95607299804688
patch: public void out ( out ) { ; }
rank: 457
score: 98.861572265625
patch: public String out . write ( $STRING$ ) ;
rank: 457
score: 98.8480224609375
patch: protected static void out ( ) ;
rank: 457
score: 98.69727240668402
patch: public out . out . $STRING$ ) ;
rank: 457
score: 97.23544311523438
patch: change > ]
rank: 457
score: 96.51807250976563
patch: catch > equals
rank: 457
score: 96.43405151367188
patch: final Exception null
rank: 457
score: 95.958251953125
patch: protected Stack
rank: 458
score: 98.86148071289062
patch: public void out ( $STRING$ $STRING$ ? ) ;
rank: 458
score: 98.84796752929688
patch: private out . write ( String 1 ) {
rank: 458
score: 98.69681803385417
patch: out . write . write . $STRING$ ;
rank: 458
score: 97.23458862304688
patch: field > >
rank: 458
score: 96.51737060546876
patch: list > i
rank: 458
score: 96.4339599609375
patch: All null State
rank: 458
score: 95.95751953125
patch: private try
rank: 459
score: 98.98295454545455
patch: out . write ( ) { return out ; }
rank: 459
score: 98.86140747070313
patch: out . write ( 0 + 1 ) ;
rank: 459
score: 98.69638400607639
patch: public $STRING$ ) throws IO CaMeL Exception {
rank: 459
score: 97.23402404785156
patch: get > out
rank: 459
score: 96.43339538574219
patch: @ State Error
rank: 459
score: 95.95401000976562
patch: public Type
rank: 459
score: 94.97233072916667
patch: public no
rank: 460
score: 98.98262162642045
patch: out . write ( $STRING$ * / float ) ;
rank: 460
score: 98.86005859375
patch: out . write ( $STRING$ ) * ) ;
rank: 460
score: 98.69633483886719
patch: public out ( Exception out ) ;
rank: 460
score: 97.23317464192708
patch: Input >
rank: 460
score: 96.51307983398438
patch: update > length >
rank: 460
score: 96.4333267211914
patch: @ State Exception
rank: 460
score: 94.97208658854167
patch: trim >
rank: 461
score: 98.95527787642045
patch: out . write ( Char CaMeL Sequence out ) ;
rank: 461
score: 98.69593641493056
patch: public out . set ( $STRING$ ) ;
rank: 461
score: 97.2313003540039
patch: perform > ]
rank: 461
score: 96.51236572265626
patch: return > Index
rank: 461
score: 96.43319702148438
patch: final Exception
rank: 461
score: 95.95242309570312
patch: Class add
rank: 461
score: 94.96354675292969
patch: do
rank: 462
score: 98.98231811523438
patch: public out . write ( int $STRING$ ) {
rank: 462
score: 98.95501154119319
patch: out . write ( char ( char ch ) ;
rank: 462
score: 98.85960557725694
patch: String out ( $STRING$ + $STRING$ ) ;
rank: 462
score: 98.69585503472223
patch: public protected out . write ( ) ;
rank: 462
score: 97.23072052001953
patch: private in >
rank: 462
score: 96.51005859375
patch: public hash > i
rank: 462
score: 96.43296813964844
patch: out Exception Type
rank: 463
score: 98.98220825195312
patch: out . write ( str ) throws IO CaMeL Exception ;
rank: 463
score: 98.95421253551136
patch: out . write ( write ( $STRING$ str ) ;
rank: 463
score: 98.69564819335938
patch: write ( out . $STRING$ ) ;
rank: 463
score: 96.43279266357422
patch: public Runnable IO
rank: 463
score: 95.95071411132812
patch: Argument <UNK>
rank: 464
score: 98.98214721679688
patch: void out . write ( ) throws IO CaMeL Exception {
rank: 464
score: 98.95395729758523
patch: public out . write ( String ) { ) ;
rank: 464
score: 98.8592529296875
patch: out . write ( value ) ;
rank: 464
score: 98.8469467163086
patch: void out ( int length ) ;
rank: 464
score: 97.22757720947266
patch: running > ]
rank: 464
score: 96.50775756835938
patch: initialize > arraycopy >
rank: 464
score: 96.43148040771484
patch: public Exception Array
rank: 464
score: 95.94685872395833
patch: abstract close
rank: 465
score: 98.95328979492187
patch: out . write ( $STRING$ ) ; else {
rank: 465
score: 98.85920061383929
patch: int out ( $STRING$ ) ;
rank: 465
score: 98.69406467013889
patch: public out ( ) throws IO CaMeL Exception
rank: 465
score: 97.22737121582031
patch: get > finally
rank: 465
score: 96.50697021484375
patch: > i ;
rank: 465
score: 96.42986297607422
patch: out State finally
rank: 465
score: 95.94533284505208
patch: Util append
rank: 465
score: 94.95139567057292
patch: public free
rank: 466
score: 98.95306951349431
patch: out . write ( $STRING$ ) ; ; else {
rank: 466
score: 98.85679321289062
patch: public static out . write ( Float ) ;
rank: 466
score: 98.84552873883929
patch: private boolean out ( ) ;
rank: 466
score: 98.69382052951389
patch: protected out . write ( byte ) ;
rank: 466
score: 97.2264404296875
patch: synchronized put >
rank: 466
score: 96.50682373046875
patch: public count > i
rank: 466
score: 96.427734375
patch: protected Exception Runnable
rank: 466
score: 95.94092814127605
patch: Util log
rank: 466
score: 94.9506123860677
patch: $NUMBER$
rank: 467
score: 98.98170166015625
patch: public out ( ) { super ( ) ;
rank: 467
score: 98.952392578125
patch: public boolean out ( ) { return false ; }
rank: 467
score: 98.84457058376736
patch: private void write ( int $STRING$ ) ;
rank: 467
score: 98.69349500868056
patch: public out . write ( $NUMBER$ ; .
rank: 467
score: 97.225830078125
patch: private public for
rank: 467
score: 96.50626373291016
patch: > iterator
rank: 467
score: 96.42692565917969
patch: void $STRING$ State
rank: 467
score: 95.94022623697917
patch: length ]
rank: 468
score: 98.98151189630681
patch: @ Override out . write ( $STRING$ ) * /
rank: 468
score: 98.9516268643466
patch: public out . write ( Char CaMeL Sequence ) ;
rank: 468
score: 98.85595092773437
patch: public void out ( $STRING$ / : * ;
rank: 468
score: 98.69321017795139
patch: public out . write ( key ) ;
rank: 468
score: 97.22561645507812
patch: post > ]
rank: 468
score: 96.5059326171875
patch: append > Index
rank: 468
score: 96.42648315429688
patch: out State Thread
rank: 469
score: 98.9806416829427
patch: public final boolean out ( ) throws IO CaMeL Exception ;
rank: 469
score: 98.9495849609375
patch: out . write ( boolean $STRING$ ) ;
rank: 469
score: 98.85589599609375
patch: protected out . write ( String name ) ;
rank: 469
score: 98.84304470486111
patch: public void write ( int i ) ;
rank: 469
score: 98.69268035888672
patch: public out ( ] $STRING$ ) ;
rank: 469
score: 97.224609375
patch: root >
rank: 469
score: 96.50263061523438
patch: try > out >
rank: 469
score: 96.42589569091797
patch: public Null Thread
rank: 469
score: 95.93947347005208
patch: public split
rank: 469
score: 94.94685872395833
patch: protected delete
rank: 470
score: 98.94893022017045
patch: public void out ( ) { ; } ) ;
rank: 470
score: 98.84303501674107
patch: private void write ( ) ;
rank: 470
score: 98.69217258029514
patch: } out . write ( $STRING$ ) ;
rank: 470
score: 97.22312927246094
patch: configure > ]
rank: 470
score: 96.4258804321289
patch: / Error Exception
rank: 470
score: 95.939208984375
patch: Set void
rank: 470
score: 94.94639078776042
patch: public highest
rank: 471
score: 98.9794588955966
patch: private void out ( ) throws IO CaMeL Exception {
rank: 471
score: 98.9485751065341
patch: out . write ( byte ) throws $STRING$ ) ;
rank: 471
score: 98.85415988498264
patch: public static out ( $STRING$ ) { ;
rank: 471
score: 98.84216986762152
patch: public void write ( Integer $STRING$ ) ;
rank: 471
score: 98.69199916294643
patch: out . write $STRING$ ) ;
rank: 471
score: 96.50103759765625
patch: public while > catch
rank: 471
score: 96.4257583618164
patch: public Thread Error
rank: 471
score: 95.932861328125
patch: private String
rank: 471
score: 94.94549560546875
patch: begin >
rank: 472
score: 98.97869318181819
patch: out . write out . write ( $STRING$ ) ;
rank: 472
score: 98.94841172960069
patch: out . write ( byte ) ; ;
rank: 472
score: 98.84172973632812
patch: public void write . write ( out ) ;
rank: 472
score: 98.69173855251736
patch: public out . append ( $STRING$ ) {
rank: 472
score: 97.21858978271484
patch: format > ]
rank: 472
score: 96.5006103515625
patch: get > exit >
rank: 472
score: 96.42488098144531
patch: private null catch
rank: 472
score: 95.92819213867188
patch: current
rank: 472
score: 94.94268798828125
patch: run
rank: 473
score: 98.97783813476562
patch: private final out . write ( $STRING$ ) {
rank: 473
score: 98.94734700520833
patch: public void out ( ) throws $STRING$ ;
rank: 473
score: 98.85304090711806
patch: public static void write ( $STRING$ / ;
rank: 473
score: 98.8411376953125
patch: public void out ( ) ; null ) ;
rank: 473
score: 98.69169786241319
patch: public $STRING$ out . write ( byte ;
rank: 473
score: 97.21849060058594
patch: abstract add >
rank: 473
score: 96.4239273071289
patch: public XML Exception
rank: 473
score: 95.92746988932292
patch: public hash
rank: 474
score: 98.94697875976563
patch: public out . write ( $STRING$ + out ;
rank: 474
score: 98.84030490451389
patch: public static void out ( out ) ;
rank: 474
score: 98.6904296875
patch: out . write ( TYPE $STRING$ ) ;
rank: 474
score: 97.2164306640625
patch: for > arraycopy
rank: 474
score: 96.49777221679688
patch: public case catch >
rank: 474
score: 96.42173767089844
patch: static Exception null
rank: 474
score: 95.92542521158855
patch: log >
rank: 474
score: 94.93824259440105
patch: public decode
rank: 475
score: 98.97708129882812
patch: public static out . write . write . $STRING$ ) ;
rank: 475
score: 98.94696599786931
patch: public out . write ( String ( String ) ;
rank: 475
score: 98.8517578125
patch: public out . write ( $STRING$ ) * ;
rank: 475
score: 98.84009467230902
patch: out . write ( - $NUMBER$ ) ;
rank: 475
score: 98.68991427951389
patch: public protected void out ( $STRING$ ) {
rank: 475
score: 97.21636962890625
patch: async > i
rank: 475
score: 96.4959228515625
patch: null > i
rank: 475
score: 96.42147827148438
patch: private null >
rank: 476
score: 98.97689208984374
patch: out . write ( $STRING$ : $STRING$ ) ;
rank: 476
score: 98.94636674360795
patch: public out . write ( String ( String str )
rank: 476
score: 98.83987862723214
patch: final void write ( ) ;
rank: 476
score: 98.68977864583333
patch: public write . write ( out ) ;
rank: 476
score: 97.2159194946289
patch: get > iterator
rank: 476
score: 96.4950927734375
patch: hash > length >
rank: 476
score: 96.42147827148438
patch: private Runtime null
rank: 476
score: 95.92215983072917
patch: Class next
rank: 477
score: 98.97677612304688
patch: out . write ( write ) throws IO CaMeL Exception {
rank: 477
score: 98.9454678622159
patch: public int out ( ) { return out ; }
rank: 477
score: 98.85100708007812
patch: public static out . write ( byte [ ;
rank: 477
score: 98.83967590332031
patch: protected void write ( out ) ;
rank: 477
score: 98.68960232204861
patch: public out . . write ( byte ;
rank: 477
score: 97.21514892578125
patch: clear > Index
rank: 477
score: 96.49486083984375
patch: catch > starts
rank: 477
score: 96.42111206054688
patch: final Error Exception
rank: 478
score: 98.94502563476563
patch: public out . write ( Writer out ) ;
rank: 478
score: 98.850341796875
patch: public out . write ( String Byte ) ;
rank: 478
score: 98.83945719401042
patch: abstract void write ( String $STRING$ ) ;
rank: 478
score: 98.68896484375
patch: public out . write ( ) { .
rank: 478
score: 97.21334838867188
patch: main > i
rank: 478
score: 96.49464111328125
patch: public log > case
rank: 478
score: 96.4208755493164
patch: out Exception out
rank: 478
score: 95.91110229492188
patch: size :
rank: 479
score: 98.97613525390625
patch: public final boolean write ( ) throws IO CaMeL Exception {
rank: 479
score: 98.85009765625
patch: private void out ( $STRING$ ) { ;
rank: 479
score: 98.68895806206598
patch: public out . write ( ) ) return
rank: 479
score: 97.21076965332031
patch: catalog > >
rank: 479
score: 96.49427490234375
patch: public put > catch
rank: 479
score: 96.42081451416016
patch: public EMPTY Stack
rank: 479
score: 95.9107666015625
patch: Message
rank: 480
score: 98.97608531605114
patch: protected boolean out ( ) throws IO CaMeL Exception ;
rank: 480
score: 98.94385375976563
patch: out . write ( String name , ) ;
rank: 480
score: 98.84981282552083
patch: private void out ( $STRING$ ) return ;
rank: 480
score: 98.83914184570312
patch: abstract . write ( $STRING$ ) ;
rank: 480
score: 98.68873596191406
patch: out . write ( chars ) ;
rank: 480
score: 97.21022542317708
patch: Invalid >
rank: 480
score: 96.493359375
patch: if > out >
rank: 480
score: 96.41963958740234
patch: @ Exception IO
rank: 480
score: 95.91017659505208
patch: public max
rank: 480
score: 94.91649373372395
patch: org >
rank: 481
score: 98.97562662760417
patch: public int out . write ( $STRING$ )
rank: 481
score: 98.942822265625
patch: out . write ( $STRING$ + ; ) ;
rank: 481
score: 98.84893120659723
patch: public byte [ ] out ( ) {
rank: 481
score: 98.83853149414062
patch: final void out ( $STRING$ ) ;
rank: 481
score: 98.68863932291667
patch: public out . write ( out ) Exception
rank: 481
score: 97.20950317382812
patch: read >
rank: 481
score: 96.49163208007812
patch: return > case
rank: 481
score: 96.41939544677734
patch: else Exception Exception
rank: 481
score: 95.90980021158855
patch: values >
rank: 482
score: 98.9746602376302
patch: public out . write ( byte ch [ ] ) {
rank: 482
score: 98.94212123325893
patch: public void out ( $STRING$ )
rank: 482
score: 98.68851725260417
patch: write . write write ( $STRING$ ) ;
rank: 482
score: 97.20845031738281
patch: final set >
rank: 482
score: 96.48995971679688
patch: public close > catch
rank: 482
score: 96.4185791015625
patch: public Exception wrap
rank: 482
score: 94.90882110595703
patch: this
rank: 483
score: 98.9744540127841
patch: public out . write ( Char CaMeL Sequence str )
rank: 483
score: 98.94210205078124
patch: out . write ( $STRING$ ( $STRING$ ) ;
rank: 483
score: 98.84686279296875
patch: out . start ( $STRING$ ) ;
rank: 483
score: 98.83804931640626
patch: out . write ( $STRING$ ) ; null ;
rank: 483
score: 97.2069091796875
patch: clone > i
rank: 483
score: 96.48989868164062
patch: stop > catch >
rank: 483
score: 96.41738891601562
patch: public null exit
rank: 483
score: 95.90521240234375
patch: public Unknown
rank: 483
score: 94.90811157226562
patch: selected >
rank: 484
score: 98.97413126627605
patch: out . write ( ) throws IO CaMeL Exception { ;
rank: 484
score: 98.94193115234376
patch: public abstract out . write ( $STRING$ + ;
rank: 484
score: 98.84657287597656
patch: public boolean out ( $STRING$ ) {
rank: 484
score: 98.68745930989583
patch: out . write ( protected $STRING$ ) ;
rank: 484
score: 97.20573425292969
patch: dispose > ]
rank: 484
score: 96.4885025024414
patch: > print
rank: 484
score: 96.4168472290039
patch: static null null
rank: 484
score: 95.90511067708333
patch: public instanceof
rank: 484
score: 94.90806070963542
patch: Open >
rank: 485
score: 98.97327677408855
patch: public synchronized out . write ( $STRING$ * / $STRING$ )
rank: 485
score: 98.94144015842014
patch: out . write ( Character ch ) ;
rank: 485
score: 98.83713107638889
patch: public void out ( int $NUMBER$ ) {
rank: 485
score: 98.68648274739583
patch: public out . write ( 1 ) {
rank: 485
score: 97.2055892944336
patch: protected protected protected
rank: 485
score: 96.48663330078125
patch: case >
rank: 485
score: 95.90079752604167
patch: public Validate
rank: 485
score: 94.90706380208333
patch: public POSITIVE
rank: 486
score: 98.9398193359375
patch: out . write ( ) throws ( byte ) ;
rank: 486
score: 98.83713107638889
patch: private int out . write ( ) ;
rank: 486
score: 98.685546875
patch: public out . write ( TYPE ) ;
rank: 486
score: 97.20535278320312
patch: try > Index
rank: 486
score: 96.48585205078125
patch: / ; public
rank: 486
score: 96.4163818359375
patch: public Null Internal
rank: 486
score: 94.90425618489583
patch: protected long
rank: 487
score: 98.9727071126302
patch: out . write ( str ) throws IO CaMeL Exception {
rank: 487
score: 98.84515991210938
patch: public int [ ] out ( $STRING$ ) ;
rank: 487
score: 98.68505096435547
patch: public out ( Exception out ) {
rank: 487
score: 97.20466613769531
patch: pop > ]
rank: 487
score: 96.48538818359376
patch: > finally >
rank: 487
score: 96.41612243652344
patch: / State Runnable
rank: 487
score: 95.89467366536458
patch: private System
rank: 487
score: 94.90195719401042
patch: public EMPTY
rank: 488
score: 98.939453125
patch: public abstract out . write ( byte [ ] ;
rank: 488
score: 98.837060546875
patch: public static out . write ( final ) ;
rank: 488
score: 98.68398708767361
patch: public out . write ( out ) throw
rank: 488
score: 97.20176696777344
patch: Names > >
rank: 488
score: 96.48530883789063
patch: initialize > length >
rank: 488
score: 96.41596984863281
patch: / null Null
rank: 488
score: 95.89431762695312
patch: println
rank: 488
score: 94.89760335286458
patch: Nullable public
rank: 489
score: 98.93937852647569
patch: out . write ( $STRING$ ) ; $STRING$
rank: 489
score: 98.84400092230902
patch: public abstract void out ( $STRING$ / ;
rank: 489
score: 98.68295627170139
patch: out . write ( ) ) ) ;
rank: 489
score: 97.20135498046875
patch: constructor > ]
rank: 489
score: 96.48375244140625
patch: > equals >
rank: 489
score: 95.89125569661458
patch: public delegate
rank: 489
score: 94.89759826660156
patch: new
rank: 490
score: 98.9392822265625
patch: boolean out ( ) throws IO CaMeL Exception ;
rank: 490
score: 98.84339141845703
patch: public void out ( write ) ;
rank: 490
score: 98.83600463867188
patch: public void write ( int String $STRING$ ) {
rank: 490
score: 98.68282741970486
patch: public out ) write ( $STRING$ ) ;
rank: 490
score: 97.19793701171875
patch: instance > ]
rank: 490
score: 96.48363037109375
patch: != catch >
rank: 490
score: 96.41493225097656
patch: public null public
rank: 490
score: 95.89027913411458
patch: private print
rank: 490
score: 94.89206949869792
patch: private delete
rank: 491
score: 98.96968587239583
patch: out . write ( $STRING$ * / $STRING$ ) ; ;
rank: 491
score: 98.84329986572266
patch: public String out ( $STRING$ ) ;
rank: 491
score: 98.83589172363281
patch: void out ( int ch ) ;
rank: 491
score: 98.68282063802083
patch: public out . close ( ) { public
rank: 491
score: 97.19744110107422
patch: log > Index
rank: 491
score: 96.48329467773438
patch: > Number >
rank: 491
score: 96.41412353515625
patch: out State Error
rank: 491
score: 94.89187622070312
patch: XML >
rank: 492
score: 98.96968217329545
patch: public synchronized out . write ( long $STRING$ ) ;
rank: 492
score: 98.9382657137784
patch: out . write ( String $STRING$ ) throws $STRING$ ;
rank: 492
score: 98.84157986111111
patch: public abstract out . write ( char ;
rank: 492
score: 98.8355224609375
patch: void out . write ( ) ; null ;
rank: 492
score: 97.19596099853516
patch: document > ]
rank: 492
score: 96.48297119140625
patch: > length case
rank: 492
score: 96.41404724121094
patch: private err State
rank: 492
score: 95.88839721679688
patch: abstract <UNK>
rank: 493
score: 98.96917169744319
patch: protected int out ( ) throws IO CaMeL Exception ;
rank: 493
score: 98.93767755681819
patch: @ Override out . write ( $STRING$ ) ; ;
rank: 493
score: 98.68187798394098
patch: public out . write ( ) $STRING$ ;
rank: 493
score: 96.41378021240234
patch: public $STRING$ Runtime
rank: 493
score: 95.88724772135417
patch: public sz
rank: 493
score: 94.88616943359375
patch: map
rank: 494
score: 98.9682861328125
patch: out . write ( $STRING$ * / ) {
rank: 494
score: 98.83508978949652
patch: public void write ( String 1 ) {
rank: 494
score: 98.68163384331598
patch: private out . write ( ) { ;
rank: 494
score: 97.1936264038086
patch: insert > ]
rank: 494
score: 96.41192626953125
patch: public Exception private
rank: 494
score: 95.88706461588542
patch: throw
rank: 495
score: 98.96786499023438
patch: out . write ( $STRING$ + key ) ;
rank: 495
score: 98.93679809570312
patch: out . write ( $STRING$ + long ) ;
rank: 495
score: 98.84002075195312
patch: public void out ( $STRING$ $STRING$ $STRING$ ) ;
rank: 495
score: 98.68155924479167
patch: out . write ( Float out ) ;
rank: 495
score: 97.19192504882812
patch: can > arraycopy
rank: 495
score: 95.8790283203125
patch: if
rank: 495
score: 94.88285319010417
patch: clone >
rank: 496
score: 98.96775309244792
patch: out . write . ( ) throws IO CaMeL Exception {
rank: 496
score: 98.93632368607955
patch: public Object out ( ) throws IO CaMeL Exception {
rank: 496
score: 98.83978881835938
patch: public static void out ( String out ) ;
rank: 496
score: 98.8328857421875
patch: protected int write ( String $STRING$ ) ;
rank: 496
score: 98.68126678466797
patch: public out . write ( out )
rank: 496
score: 97.19143676757812
patch: refresh > Index
rank: 496
score: 96.4266586303711
patch: != i
rank: 496
score: 96.40855916341145
patch: void Stack
rank: 496
score: 94.88043212890625
patch: My >
rank: 497
score: 98.96742942116477
patch: protected void write ( ) throws IO CaMeL Exception {
rank: 497
score: 98.83978271484375
patch: public out . write ( String Integer ) ;
rank: 497
score: 98.8328369140625
patch: void out . write ( System . ) ;
rank: 497
score: 98.68099636501736
patch: out . write ( out out ) ;
rank: 497
score: 97.19094848632812
patch: document >
rank: 497
score: 96.42192077636719
patch: = public
rank: 497
score: 96.40603637695312
patch: public Override Exception
rank: 497
score: 95.87841796875
patch: length >
rank: 498
score: 98.93591986762152
patch: out . write ( int ( ) ;
rank: 498
score: 98.83931732177734
patch: public static void write ( ) ;
rank: 498
score: 98.83277587890625
patch: public out . write ( String ( ) ;
rank: 498
score: 98.68079291449652
patch: write ( ] $STRING$ ) throws ) ;
rank: 498
score: 97.18855794270833
patch: main >
rank: 498
score: 96.40583038330078
patch: private Exception Internal
rank: 498
score: 94.87459309895833
patch: protected if
rank: 499
score: 98.96727905273437
patch: out . write ( chars [ ] ) ;
rank: 499
score: 98.83875122070313
patch: public void out ( ) { / ; }
rank: 499
score: 98.68024359809027
patch: write . write ( $STRING$ ) ; .
rank: 499
score: 97.18756103515625
patch: clone > Index
rank: 499
score: 96.40499877929688
patch: public default Exception
rank: 499
score: 95.87396240234375
patch: public concat
rank: 499
score: 94.87396240234375
patch: public swap
rank: 500
score: 98.9666748046875
patch: . . . * / out . write ( $STRING$ )
rank: 500
score: 98.9349698153409
patch: out . write ( $STRING$ + out ) ; ;
rank: 500
score: 98.83722795758929
patch: public out ( ) { }
rank: 500
score: 97.1871109008789
patch: logger > ]
rank: 500
score: 96.41312408447266
patch: > 0
rank: 500
score: 96.40481567382812
patch: public err Null
rank: 500
score: 95.8714090983073
patch: message >
rank: 501
score: 98.96595255533855
patch: public final int out ( ) throws IO CaMeL Exception ;
rank: 501
score: 98.93444213867187
patch: public out . write ( out . write )
rank: 501
score: 98.83719211154514
patch: private void out ( $STRING$ $STRING$ ) ;
rank: 501
score: 98.83162434895833
patch: private void out ( int 1 ) ;
rank: 501
score: 98.67807006835938
patch: protected out . write ( ) {
rank: 501
score: 97.18595886230469
patch: flush > Index
rank: 501
score: 96.40159606933594
patch: public Runnable Illegal
rank: 501
score: 96.39488983154297
patch: > exit
rank: 501
score: 95.87129720052083
patch: Next else
rank: 501
score: 94.86037190755208
patch: Mock >
rank: 502
score: 98.96513671875
patch: public abstract write . write ( $STRING$ ) ;
rank: 502
score: 98.83681030273438
patch: public void out ( $STRING$ ) { return ;
rank: 502
score: 98.83145141601562
patch: int write ( ) ;
rank: 502
score: 98.67795138888889
patch: write ( ] byte != null ) ;
rank: 502
score: 97.18516540527344
patch: parameters > ]
rank: 502
score: 96.40123494466145
patch: private null
rank: 502
score: 95.86812337239583
patch: synchronized <UNK>
rank: 503
score: 98.93379211425781
patch: public out . write ( String )
rank: 503
score: 98.83560943603516
patch: public static out ( $STRING$ ) {
rank: 503
score: 98.8311767578125
patch: void out ( String $STRING$ ) {
rank: 503
score: 98.67793104383681
patch: public out . close ( $STRING$ ) ;
rank: 503
score: 97.18417358398438
patch: exit > ]
rank: 503
score: 96.40054321289062
patch: protected Null Error
rank: 503
score: 96.38652801513672
patch: get > null
rank: 503
score: 95.86407470703125
patch: List >
rank: 503
score: 94.85772705078125
patch: I >
rank: 504
score: 98.93304998224431
patch: out . write ( $STRING$ + write ( ) ;
rank: 504
score: 98.83543090820312
patch: public abstract void out ( $STRING$ ? $STRING$ ;
rank: 504
score: 98.83064575195313
patch: private void out . write ( out ) ;
rank: 504
score: 98.67788357204861
patch: out . write ( $STRING$ ) ; /
rank: 504
score: 97.18374633789062
patch: can > i
rank: 504
score: 96.39937591552734
patch: protected Runtime null
rank: 504
score: 96.37450408935547
patch: > next
rank: 504
score: 95.8634541829427
patch: public resume
rank: 504
score: 94.85646565755208
patch: private long
rank: 505
score: 98.96257990056819
patch: public out . write ( chars [ ] ) {
rank: 505
score: 98.93217329545455
patch: public out . write ( byte [ ] value )
rank: 505
score: 98.83483123779297
patch: public abstract void out ( $STRING$ ;
rank: 505
score: 98.83036295572917
patch: protected static out . write ( ) ;
rank: 505
score: 98.67783610026042
patch: public out ( ) { $STRING$ ; }
rank: 505
score: 97.1837387084961
patch: notify > ]
rank: 505
score: 96.39833068847656
patch: out Error null
rank: 505
score: 95.86305745442708
patch: Value out
rank: 505
score: 94.85190836588542
patch: Logging >
rank: 506
score: 98.83466796875
patch: public String . [ ] out ( ) ;
rank: 506
score: 98.67745208740234
patch: write . out ( $STRING$ ) ;
rank: 506
score: 96.39832305908203
patch: public State print
rank: 506
score: 95.8609110514323
patch: Utilities set
rank: 506
score: 94.85122680664062
patch: public USER
rank: 507
score: 98.93150024414062
patch: synchronized . out . write ( $STRING$ ) ;
rank: 507
score: 98.83466254340277
patch: public String CaMeL Buffer out ( ) {
rank: 507
score: 98.83015441894531
patch: void out ( String 0 ) ;
rank: 507
score: 98.67707824707031
patch: out . write ( ) { ;
rank: 507
score: 97.18318176269531
patch: delete > ]
rank: 507
score: 96.39427185058594
patch: public Runnable Not
rank: 507
score: 95.85856119791667
patch: while print
rank: 508
score: 98.83425903320312
patch: public static void write ( $STRING$ ;
rank: 508
score: 98.82972547743056
patch: write . write . write ( ) ;
rank: 508
score: 98.67630343967014
patch: write . write . write $STRING$ ) ;
rank: 508
score: 97.18125915527344
patch: open > Index
rank: 508
score: 96.39404296875
patch: / State Not
rank: 508
score: 96.34214782714844
patch: public hash >
rank: 508
score: 94.8490702311198
patch: protected Null
rank: 509
score: 98.9606424967448
patch: out . write ( $STRING$ * write * / ) ;
rank: 509
score: 98.83394368489583
patch: public int out ( $STRING$ ) { ;
rank: 509
score: 98.82891845703125
patch: int out . write ( out ) ;
rank: 509
score: 98.67616271972656
patch: write ( $STRING$ + $STRING$ ) ;
rank: 509
score: 97.18032836914062
patch: private format >
rank: 509
score: 96.39366149902344
patch: final State Stack
rank: 509
score: 96.33818054199219
patch: > Out
rank: 509
score: 95.85382080078125
patch: abstract boolean
rank: 510
score: 98.96033732096355
patch: public out . write ( Char CaMeL Sequence $STRING$ ) {
rank: 510
score: 98.9305752840909
patch: out . write ( $STRING$ , $STRING$ ) ; ;
rank: 510
score: 98.83391655815973
patch: Object static . write ( $STRING$ ) ;
rank: 510
score: 98.82872314453125
patch: public out . write ( System . ) ;
rank: 510
score: 98.67613874162946
patch: public write . $STRING$ ) ;
rank: 510
score: 97.18002319335938
patch: Sorted >
rank: 510
score: 96.3934097290039
patch: java 0 State
rank: 510
score: 96.33361053466797
patch: if > i
rank: 510
score: 94.84451293945312
patch: private Illegal
rank: 511
score: 98.95987955729167
patch: public synchronized out . write ( $STRING$ , $STRING$ ) ;
rank: 511
score: 98.93030894886364
patch: public synchronized out . write ( String name ) ;
rank: 511
score: 98.83370361328124
patch: public final void out ( $STRING$ $STRING$ ) ;
rank: 511
score: 98.82800971137152
patch: int write . write ( $STRING$ ) ;
rank: 511
score: 98.67608642578125
patch: public out write ( ] 1 ) ;
rank: 511
score: 97.179931640625
patch: upload > ]
rank: 511
score: 96.39271545410156
patch: / Null Exception
rank: 511
score: 95.85190836588542
patch: List set
rank: 511
score: 94.8417460123698
patch: release >
rank: 512
score: 98.92934348366477
patch: private out . write ( byte [ ] ) ;
rank: 512
score: 98.83359985351562
patch: public out . write ( $STRING$ , ) ;
rank: 512
score: 98.82786051432292
patch: void out . write ( byte ) ;
rank: 512
score: 98.67545572916667
patch: public void out ( ) { out ;
rank: 512
score: 97.17940266927083
patch: Update >
rank: 512
score: 96.3922119140625
patch: public Null out
rank: 512
score: 95.85028076171875
patch: } public
rank: 512
score: 94.83592224121094
patch: SQL
rank: 513
score: 98.82733154296875
patch: public private out ( ) { }
rank: 513
score: 98.67286512586806
patch: public out ( $STRING$ ) { ) ;
rank: 513
score: 97.17827606201172
patch: property > ]
rank: 513
score: 96.39187622070312
patch: @ State null
rank: 513
score: 96.30349731445312
patch: for catch >
rank: 513
score: 95.8440450032552
patch: Debug print
rank: 514
score: 98.9283447265625
patch: public void out ( ) throws Runtime CaMeL Exception ;
rank: 514
score: 98.83321126302083
patch: String . $NUMBER$ write ( $STRING$ ) ;
rank: 514
score: 98.82716064453125
patch: void out ( out . write ( ) ;
rank: 514
score: 98.67229461669922
patch: public out ( ) { ) ;
rank: 514
score: 97.17257690429688
patch: get > substring
rank: 514
score: 96.38829803466797
patch: public Error finally
rank: 514
score: 95.84368896484375
patch: private equals
rank: 514
score: 94.82913208007812
patch: gly >
rank: 515
score: 98.83296508789063
patch: public out . write ( String . . ;
rank: 515
score: 98.82703314887152
patch: protected void out ( int i ) ;
rank: 515
score: 98.67139350043402
patch: public abstract out . write ( $STRING$ ;
rank: 515
score: 97.17228698730469
patch: ctx > ]
rank: 515
score: 96.3873062133789
patch: final null null
rank: 515
score: 94.82164001464844
patch: $STRING$
rank: 516
score: 98.95881791548295
patch: public abstract String out . write ( $STRING$ ) ;
rank: 516
score: 98.927783203125
patch: void out . write ( $STRING$ ) ; ;
rank: 516
score: 98.83222791883681
patch: public void out ( $STRING$ ? ) {
rank: 516
score: 98.82701110839844
patch: void . write ( out ) ;
rank: 516
score: 98.67110443115234
patch: public out . $STRING$ $STRING$ ) ;
rank: 516
score: 96.38681030273438
patch: public Exception current
rank: 516
score: 95.84218343098958
patch: private check
rank: 517
score: 98.92467041015625
patch: out . write ( out , $STRING$ ) ;
rank: 517
score: 98.83209228515625
patch: public out . delete ( $STRING$ ) ;
rank: 517
score: 98.82545166015625
patch: void out . write ( byte $NUMBER$ ) ;
rank: 517
score: 98.6698226928711
patch: $STRING$ . write ( out ) ;
rank: 517
score: 97.171875
patch: Exec > catch
rank: 517
score: 96.38665008544922
patch: out State ch
rank: 517
score: 95.83950805664062
patch: private if
rank: 517
score: 94.819580078125
patch: public decrement
rank: 518
score: 98.92445068359375
patch: out . write ( String $STRING$ ) ; ;
rank: 518
score: 98.824560546875
patch: public abstract out . write ( final ) ;
rank: 518
score: 98.6694564819336
patch: public out write ( out ) ;
rank: 518
score: 97.17051696777344
patch: add > while
rank: 518
score: 96.386474609375
patch: public Exception -
rank: 518
score: 96.28099060058594
patch: > while
rank: 518
score: 95.8385721842448
patch: static get
rank: 518
score: 94.81210327148438
patch: public switch
rank: 519
score: 98.92356178977273
patch: public final out . write ( String str ) ;
rank: 519
score: 98.83159637451172
patch: public synchronized void out ( ) ;
rank: 519
score: 98.82429504394531
patch: public String write ( out ) ;
rank: 519
score: 98.66834259033203
patch: write ( out . out ) ;
rank: 519
score: 97.1685562133789
patch: invoke > i
rank: 519
score: 96.38633728027344
patch: public Exception Hash
rank: 519
score: 96.2724609375
patch: > count
rank: 519
score: 95.8363037109375
patch: public yield
rank: 519
score: 94.8032735188802
patch: report >
rank: 520
score: 98.95758611505681
patch: public synchronized out . write ( $STRING$ ) { }
rank: 520
score: 98.83147515190973
patch: public abstract int out ( $STRING$ ) ;
rank: 520
score: 98.82311401367187
patch: public out . write ( String 0 ) {
rank: 520
score: 98.6678466796875
patch: public out ( Exception ) ;
rank: 520
score: 97.1673583984375
patch: protected write >
rank: 520
score: 96.38529205322266
patch: synchronized null Error
rank: 520
score: 95.8348897298177
patch: null i
rank: 521
score: 98.92158338758681
patch: void out . write ( String ) ;
rank: 521
score: 98.83027954101563
patch: public void out ( $STRING$ ? ? ? ;
rank: 521
score: 98.82303195529514
patch: public void out ( int 1 ) {
rank: 521
score: 98.66779242621527
patch: out . write ( ) { ; }
rank: 521
score: 97.16706848144531
patch: remove > arraycopy
rank: 521
score: 96.38298797607422
patch: public $STRING$ Null
rank: 521
score: 96.25930786132812
patch: > offset
rank: 521
score: 95.83324178059895
patch: synchronized set
rank: 522
score: 98.92046564275569
patch: public boolean out ( ) { return out ; }
rank: 522
score: 98.82993570963542
patch: public out . write ( char [ ;
rank: 522
score: 98.82300567626953
patch: synchronized void write ( $STRING$ ) ;
rank: 522
score: 98.66725667317708
patch: public out . flush ( ) { ;
rank: 522
score: 97.16669464111328
patch: protected private private
rank: 522
score: 96.3827896118164
patch: protected State out
rank: 522
score: 96.25862884521484
patch: != Index
rank: 522
score: 95.83304850260417
patch: get print
rank: 522
score: 94.79628499348958
patch: token >
rank: 523
score: 98.9555419921875
patch: out . write ( $STRING$ [ ] ) ;
rank: 523
score: 98.92034912109375
patch: out . write ( char ;
rank: 523
score: 98.82969835069444
patch: out . write ( $STRING$ ) / ;
rank: 523
score: 98.82213134765625
patch: out . write ( byte * ] ) ;
rank: 523
score: 98.66696506076389
patch: public try . write ( $STRING$ ) ;
rank: 523
score: 97.166015625
patch: alloc > ]
rank: 523
score: 96.38143157958984
patch: public State run
rank: 523
score: 95.82977294921875
patch: private double
rank: 523
score: 94.79595947265625
patch: public constant
rank: 524
score: 98.95536665482955
patch: private void write ( ) throws IO CaMeL Exception ;
rank: 524
score: 98.82913547092014
patch: public void out ( write $STRING$ ) ;
rank: 524
score: 98.82210083007813
patch: public out . write ( Integer 1 ) {
rank: 524
score: 98.66654205322266
patch: public out . write ( ) )
rank: 524
score: 97.16489664713542
patch: properties >
rank: 524
score: 96.37975311279297
patch: public Override null
rank: 524
score: 96.2470703125
patch: > starts
rank: 524
score: 95.82669067382812
patch: public exec
rank: 524
score: 94.79371134440105
patch: protected String
rank: 525
score: 98.82897186279297
patch: public static out ( ) { }
rank: 525
score: 98.82198660714286
patch: synchronized void out ( ) ;
rank: 525
score: 98.66534423828125
patch: out . write out ( ) ;
rank: 525
score: 97.16407775878906
patch: conf > ]
rank: 525
score: 96.37866973876953
patch: @ Runnable Exception
rank: 525
score: 96.21853637695312
patch: clear > length
rank: 525
score: 95.82523600260417
patch: Class set
rank: 525
score: 94.7918701171875
patch: ruby >
rank: 526
score: 98.91927490234374
patch: public void out ( $STRING$ ) { ; ;
rank: 526
score: 98.82872314453125
patch: public final void out ( $STRING$ ) { ;
rank: 526
score: 98.82183159722223
patch: private void out ( int i ) {
rank: 526
score: 97.16331481933594
patch: activate > Index
rank: 526
score: 96.3779296875
patch: synchronized Error null
rank: 526
score: 95.82493082682292
patch: length :
rank: 526
score: 94.79061889648438
patch: protected Object
rank: 527
score: 98.954833984375
patch: public abstract boolean write . write ( $STRING$ ) ;
rank: 527
score: 98.91902299360795
patch: private out . write ( $STRING$ ) { ; }
rank: 527
score: 98.82850952148438
patch: out . write ( $STRING$ ) ) / ;
rank: 527
score: 98.82139078776042
patch: public void write ( final String ) ;
rank: 527
score: 98.66286795479911
patch: public write ( $STRING$ ) {
rank: 527
score: 97.16221618652344
patch: validate > ]
rank: 527
score: 96.3774185180664
patch: public PI Exception
rank: 527
score: 96.2115478515625
patch: initialize > i
rank: 527
score: 95.82419840494792
patch: Manager >
rank: 527
score: 94.78671264648438
patch: org
rank: 528
score: 98.91815863715277
patch: out . write ( Character $STRING$ ) ;
rank: 528
score: 98.82828097873264
patch: public int . write ( $STRING$ ) ;
rank: 528
score: 98.82124633789063
patch: public abstract abstract out . write ( ) ;
rank: 528
score: 98.66263580322266
patch: public out ( ] out ) {
rank: 528
score: 97.16060638427734
patch: protected do >
rank: 528
score: 96.37376403808594
patch: public null finally
rank: 528
score: 95.82307942708333
patch: public default
rank: 528
score: 94.78438313802083
patch: close >
rank: 529
score: 98.95453435724431
patch: public out . write ( $STRING$ * / ) {
rank: 529
score: 98.9177579012784
patch: @ Override public out . write ( String ) ;
rank: 529
score: 98.82110595703125
patch: private int write ( ) ;
rank: 529
score: 97.160400390625
patch: println > length
rank: 529
score: 96.37277221679688
patch: public Number null
rank: 529
score: 95.81959533691406
patch: Of
rank: 529
score: 94.78158569335938
patch: $STRING$ >
rank: 530
score: 98.95257013494319
patch: out . write ( $STRING$ ) { return ; }
rank: 530
score: 98.91750266335227
patch: public out . write ( $STRING$ + ) ; ;
rank: 530
score: 98.82747802734374
patch: public static out write ( String name ) ;
rank: 530
score: 98.82108561197917
patch: private void write ( int 1 ) ;
rank: 530
score: 97.1594467163086
patch: select > ]
rank: 530
score: 96.37234497070312
patch: public Error Type
rank: 530
score: 96.18809509277344
patch: set > catch
rank: 530
score: 95.81571960449219
patch: contains
rank: 531
score: 98.82732476128473
patch: public static out . write ( $STRING$ ;
rank: 531
score: 98.6541519165039
patch: $STRING$ out . write ( byte ;
rank: 531
score: 97.15631103515625
patch: end > ]
rank: 531
score: 96.37191772460938
patch: protected Exception Illegal
rank: 531
score: 96.17687225341797
patch: != else
rank: 531
score: 95.81461588541667
patch: method >
rank: 531
score: 94.7670186360677
patch: private Null
rank: 532
score: 98.9510986328125
patch: out . write ( $STRING$ , long ) ;
rank: 532
score: 98.82731119791667
patch: public void out ( $STRING$ ? out ;
rank: 532
score: 98.81966824001736
patch: int . . . write ( ) ;
rank: 532
score: 98.6514892578125
patch: public out . write ( ] ;
rank: 532
score: 96.37171936035156
patch: public Number Exception
rank: 532
score: 96.17416381835938
patch: > run
rank: 532
score: 95.8109130859375
patch: size ]
rank: 532
score: 94.76314290364583
patch: from >
rank: 533
score: 98.9164706143466
patch: public out . write ( byte ) { ; }
rank: 533
score: 98.65090942382812
patch: out . write ( $STRING$ $STRING$ ;
rank: 533
score: 97.15016174316406
patch: Later > catch
rank: 533
score: 96.37140655517578
patch: out null err
rank: 533
score: 96.17044067382812
patch: set > null
rank: 533
score: 95.810791015625
patch: null else
rank: 534
score: 98.91643608940973
patch: out . write ( String ( ) ;
rank: 534
score: 98.82692260742188
patch: public void out ( $STRING$ ) { / ;
rank: 534
score: 98.81943766276042
patch: private void write . write ( ) ;
rank: 534
score: 98.64986419677734
patch: out . write ( $NUMBER$ ; .
rank: 534
score: 97.149658203125
patch: push > i
rank: 534
score: 96.37024688720703
patch: void Exception Stack
rank: 534
score: 96.16431427001953
patch: instanceof public
rank: 534
score: 95.80985514322917
patch: Of <UNK>
rank: 535
score: 98.82680935329861
patch: public void out ( $STRING$ / / ;
rank: 535
score: 98.81858317057292
patch: void out ( int += $STRING$ ) ;
rank: 535
score: 98.64762878417969
patch: out . write ( $STRING$ ) )
rank: 535
score: 97.14868927001953
patch: namespace > ]
rank: 535
score: 96.36914825439453
patch: public State create
rank: 535
score: 95.80946858723958
patch: public sub
rank: 536
score: 98.9504150390625
patch: out . write ( char ch [ ] )
rank: 536
score: 98.91580810546876
patch: private out . write ( $STRING$ + ) ;
rank: 536
score: 98.64652252197266
patch: write . write . write ) ;
rank: 536
score: 97.14826965332031
patch: force > ]
rank: 536
score: 96.36837005615234
patch: public Null Out
rank: 537
score: 98.94988403320312
patch: public int out ( ) { return 0 ;
rank: 537
score: 98.91534978693181
patch: out . write ( byte ) throws IO CaMeL Exception
rank: 537
score: 98.82422637939453
patch: out . write ( length ) ;
rank: 537
score: 98.81728108723958
patch: final out . write ( $NUMBER$ ) ;
rank: 537
score: 96.36791229248047
patch: @ Exception Illegal
rank: 537
score: 95.80750528971355
patch: Utilities run
rank: 538
score: 98.94984019886364
patch: out . write ( $STRING$ , byte [ ) ;
rank: 538
score: 98.9152587890625
patch: public out . write ( int i ) ;
rank: 538
score: 98.81714477539063
patch: void out ( int char [ ] ) ;
rank: 538
score: 98.64122663225446
patch: public out ( out ) ;
rank: 538
score: 97.14752197265625
patch: acquire > ]
rank: 538
score: 96.36689758300781
patch: void State Runtime
rank: 538
score: 96.15746307373047
patch: > equals
rank: 538
score: 95.80631510416667
patch: get arraycopy
rank: 539
score: 98.949462890625
patch: public abstract out . write ( $STRING$ , ) ;
rank: 539
score: 98.91466064453125
patch: out . write ( $STRING$ + ) ; ;
rank: 539
score: 98.82303466796876
patch: public void out ( $STRING$ / ? ) ;
rank: 539
score: 98.817138671875
patch: long . write ( $STRING$ ) ;
rank: 539
score: 98.64093017578125
patch: . write ( $STRING$ ) ;
rank: 539
score: 97.14744059244792
patch: my >
rank: 539
score: 96.36679077148438
patch: public Exception Auto
rank: 539
score: 95.80450439453125
patch: Value next
rank: 540
score: 98.91375732421875
patch: protected out . write ( $STRING$ + ) ;
rank: 540
score: 98.8222412109375
patch: out . write ( $STRING$ ) != null ;
rank: 540
score: 98.81683349609375
patch: write . write . write ( out ) ;
rank: 540
score: 98.6408920288086
patch: public out ( ] 1 ) {
rank: 540
score: 97.14524841308594
patch: begin > ]
rank: 540
score: 96.36563110351562
patch: public Runnable run
rank: 540
score: 95.80154418945312
patch: Value else
rank: 540
score: 94.73367309570312
patch: * {
rank: 541
score: 98.913623046875
patch: int out ( ) throws IO CaMeL Exception ;
rank: 541
score: 98.8221923828125
patch: public void out ( $STRING$ / * out ;
rank: 541
score: 98.81639404296875
patch: public void out ( ? out } ) ;
rank: 541
score: 98.63951110839844
patch: public out ( ] $NUMBER$ ) {
rank: 541
score: 97.14261627197266
patch: drop > ]
rank: 541
score: 96.36474609375
patch: void Error State
rank: 541
score: 96.14400482177734
patch: > last
rank: 541
score: 95.7999267578125
patch: Util <UNK>
rank: 541
score: 94.73341878255208
patch: public case
rank: 542
score: 98.94713245738636
patch: out . write ( byte [ ] $STRING$ ) {
rank: 542
score: 98.91337890625
patch: final boolean out . write ( $STRING$ ) ;
rank: 542
score: 98.81625705295139
patch: write . write ( byte 1 ) ;
rank: 542
score: 98.6384506225586
patch: public void out ( out ) {
rank: 542
score: 97.1397476196289
patch: my > ]
rank: 542
score: 95.79925537109375
patch: private next
rank: 543
score: 98.91328260633681
patch: public out . write ( ) throws )
rank: 543
score: 98.82172393798828
patch: public final void out ( ) ;
rank: 543
score: 98.8162109375
patch: public out . write ( char 1 ) {
rank: 543
score: 98.63835144042969
patch: public void out ( Exception ) {
rank: 543
score: 97.13965861002605
patch: keys >
rank: 543
score: 96.36279296875
patch: public $STRING$ Not
rank: 543
score: 95.79815673828125
patch: Manager <UNK>
rank: 543
score: 94.72792561848958
patch: throws
rank: 544
score: 98.91278754340277
patch: out . write ( String ) ; ;
rank: 544
score: 98.821435546875
patch: public void out ( write ( out ) ;
rank: 544
score: 98.63767787388393
patch: out . write . ) ;
rank: 544
score: 97.1370849609375
patch: get > 0
rank: 544
score: 96.3611831665039
patch: private null IO
rank: 544
score: 95.79635620117188
patch: Error
rank: 544
score: 94.72705078125
patch: protected for
rank: 545
score: 98.94578968394886
patch: public synchronized out . write ( long $STRING$ ) {
rank: 545
score: 98.91222034801136
patch: protected out . write ( $STRING$ ) { ; }
rank: 545
score: 98.63684844970703
patch: public out ( ) { out ;
rank: 545
score: 97.13447570800781
patch: can > Index
rank: 545
score: 96.36038208007812
patch: * Error Exception
rank: 545
score: 96.12387084960938
patch: try > length
rank: 545
score: 95.7955830891927
patch: Value i
rank: 545
score: 94.7255147298177
patch: public not
rank: 546
score: 98.94524468315973
patch: public boolean out . write ( $STRING$ )
rank: 546
score: 98.81927490234375
patch: public out . write ( String out ) {
rank: 546
score: 98.81517333984375
patch: public int write ( out ; null ) {
rank: 546
score: 97.1341552734375
patch: async > Index
rank: 546
score: 96.35989379882812
patch: public Runtime out
rank: 546
score: 95.79494222005208
patch: private do
rank: 546
score: 94.72467041015625
patch: Dynamic >
rank: 547
score: 98.94515991210938
patch: out . write ( $STRING$ + ch ) ;
rank: 547
score: 98.91179063585069
patch: out . write ( byte key ) ;
rank: 547
score: 98.81912841796876
patch: public static void out ( $STRING$ out ) ;
rank: 547
score: 98.81485324435764
patch: public void out ( int length ) ;
rank: 547
score: 98.63655090332031
patch: out . out ( $STRING$ ) ;
rank: 547
score: 97.13143920898438
patch: wait > i
rank: 547
score: 96.35953521728516
patch: private Exception new
rank: 548
score: 98.94472434303977
patch: public final out . write ( $STRING$ ) { ;
rank: 548
score: 98.90966186523437
patch: void out . write ( ) throws ) ;
rank: 548
score: 98.81912231445312
patch: public void out ( $STRING$ / : ) ;
rank: 548
score: 98.81439819335938
patch: private void out . write ( $STRING$ ) {
rank: 548
score: 98.63604736328125
patch: public out ( ] out ) ;
rank: 548
score: 97.13133239746094
patch: join > ]
rank: 548
score: 96.35832214355469
patch: public Runtime Internal
rank: 548
score: 95.79293823242188
patch: public PI
rank: 549
score: 98.90965440538194
patch: out . write ( $STRING$ / ) ;
rank: 549
score: 98.81757463727679
patch: public void out ( String ;
rank: 549
score: 98.81390380859375
patch: my . write ( $STRING$ ) ;
rank: 549
score: 98.63600158691406
patch: public int out ( $STRING$ ) {
rank: 549
score: 97.12922668457031
patch: clock > ]
rank: 549
score: 96.35824584960938
patch: public public Runtime
rank: 549
score: 96.10948181152344
patch: = while
rank: 549
score: 94.71579996744792
patch: ps >
rank: 550
score: 98.94331498579545
patch: protected out . write ( $STRING$ * / ) ;
rank: 550
score: 98.90892333984375
patch: public Object out ( ) throws IO CaMeL Exception
rank: 550
score: 98.8172119140625
patch: out . write ( $STRING$ ) [ ] ;
rank: 550
score: 98.6351089477539
patch: public out write ( $STRING$ ) {
rank: 550
score: 97.12783813476562
patch: protected public for
rank: 550
score: 96.358154296875
patch: protected Exception Thread
rank: 550
score: 96.10880279541016
patch: get > case
rank: 550
score: 95.79203287760417
patch: public type
rank: 550
score: 94.71571858723958
patch: protected IO
rank: 551
score: 98.94312744140625
patch: @ Override out . write . $STRING$ ) ;
rank: 551
score: 98.90882568359375
patch: synchronized out . write ( $STRING$ ) ; ;
rank: 551
score: 98.81617431640625
patch: public void out ( $STRING$ ? * ) ;
rank: 551
score: 98.81187438964844
patch: public boolean out ( out ) ;
rank: 551
score: 98.63427734375
patch: out . write . out ;
rank: 551
score: 97.12750244140625
patch: contents > i
rank: 551
score: 96.35739135742188
patch: void null
rank: 551
score: 96.1080322265625
patch: stop > i
rank: 551
score: 95.79188028971355
patch: Util Writer
rank: 552
score: 98.81571960449219
patch: out . write ( key ) ;
rank: 552
score: 98.81184217664931
patch: private void out ( int $NUMBER$ ) ;
rank: 552
score: 98.63383483886719
patch: out out . write ( ) ;
rank: 552
score: 97.12713623046875
patch: Data > ]
rank: 552
score: 96.35733032226562
patch: private null Runnable
rank: 552
score: 96.10763549804688
patch: insert > i
rank: 552
score: 95.7914530436198
patch: Model >
rank: 552
score: 94.7085469563802
patch: cur >
rank: 553
score: 98.94242720170455
patch: public out . write ( Char CaMeL Sequence out )
rank: 553
score: 98.8156494140625
patch: public static void out ( String name ) ;
rank: 553
score: 98.81168619791667
patch: public void write ( double $STRING$ ) ;
rank: 553
score: 97.12438201904297
patch: private private protected
rank: 553
score: 96.3562240600586
patch: void ch State
rank: 553
score: 95.79054768880208
patch: err >
rank: 553
score: 94.70758056640625
patch: [
rank: 554
score: 98.94061889648438
patch: public long out . write ( $STRING$ ) ;
rank: 554
score: 98.90556640625
patch: public out . write ( ) { ; }
rank: 554
score: 98.81552734375
patch: public void out ( $STRING$ / / ) ;
rank: 554
score: 98.81147112165179
patch: int . write ( ) ;
rank: 554
score: 98.63268280029297
patch: out . write ( $STRING$ out ;
rank: 554
score: 96.35188802083333
patch: / State
rank: 554
score: 95.79019165039062
patch: public chars
rank: 554
score: 94.69840494791667
patch: Messaging >
rank: 555
score: 98.94037420099431
patch: out . write ( $STRING$ * * / ) ;
rank: 555
score: 98.81533813476562
patch: out . write ( $STRING$ ) ? ) ;
rank: 555
score: 98.8104248046875
patch: public void out ( int 0 ) ;
rank: 555
score: 98.63180541992188
patch: public out ( $STRING$ ) ) ;
rank: 555
score: 97.1224594116211
patch: handle > >
rank: 555
score: 96.34907531738281
patch: public Exception default
rank: 555
score: 96.1060562133789
patch: > finally
rank: 555
score: 95.79010772705078
patch: To
rank: 555
score: 94.68932088216145
patch: db >
rank: 556
score: 98.93987426757812
patch: out . write ( $STRING$ || $STRING$ ) ;
rank: 556
score: 98.90492757161458
patch: out . write ( $STRING$ ( ) ;
rank: 556
score: 98.81485324435764
patch: String out . write ( String ) ;
rank: 556
score: 98.80982971191406
patch: public int out ( out ) ;
rank: 556
score: 98.62980651855469
patch: public static out . $STRING$ ) ;
rank: 556
score: 97.12195587158203
patch: put > >
rank: 556
score: 96.3487548828125
patch: public Null run
rank: 556
score: 96.1037368774414
patch: public while >
rank: 557
score: 98.904833984375
patch: out . write ( $STRING$ ) ; * /
rank: 557
score: 98.81432427300348
patch: public out . write ( Short ) ;
rank: 557
score: 98.80963745117188
patch: abstract { out . write ( $STRING$ ) ;
rank: 557
score: 98.6275634765625
patch: out . write ( abstract ) ;
rank: 557
score: 97.11924743652344
patch: expand > ]
rank: 557
score: 95.7863260904948
patch: public Character
rank: 557
score: 94.67960611979167
patch: Empty >
rank: 558
score: 98.93967895507812
patch: out . write ( $STRING$ , float ) ;
rank: 558
score: 98.81390380859375
patch: private void out ( $STRING$ ) {
rank: 558
score: 98.80955810546875
patch: public out . write ( String Long ) ;
rank: 558
score: 98.62594604492188
patch: out . write ( ) out ;
rank: 558
score: 97.11868286132812
patch: activate > i
rank: 558
score: 96.34825134277344
patch: static null State
rank: 558
score: 96.10187530517578
patch: set > length
rank: 558
score: 95.78487141927083
patch: private Array
rank: 559
score: 98.81377495659723
patch: out . write ( String out ) ;
rank: 559
score: 98.80929565429688
patch: public int out ( ) { }
rank: 559
score: 98.62284851074219
patch: public out . write ( $NUMBER$ ;
rank: 559
score: 97.11647033691406
patch: private private private
rank: 559
score: 96.34759521484375
patch: public run Runtime
rank: 559
score: 96.09922790527344
patch: clear > catch
rank: 559
score: 94.66843668619792
patch: protected Array
rank: 560
score: 98.93913130326705
patch: protected out . write ( $STRING$ ) throws $STRING$ ;
rank: 560
score: 98.81338840060764
patch: public static out . write ( byte ;
rank: 560
score: 98.80862426757812
patch: public Object write ( $STRING$ ) ;
rank: 560
score: 98.62188720703125
patch: write ( out . write ) ;
rank: 560
score: 97.11576843261719
patch: protected next >
rank: 560
score: 96.34759521484375
patch: public arraycopy null
rank: 560
score: 95.78282165527344
patch: starts
rank: 560
score: 94.66545104980469
patch: result
rank: 561
score: 98.90294189453125
patch: out . write ( byte ) throws ) ;
rank: 561
score: 98.81334686279297
patch: String . write ( $STRING$ ) ;
rank: 561
score: 98.80857340494792
patch: private void write ( int $NUMBER$ ) ;
rank: 561
score: 97.11505126953125
patch: get > Stack
rank: 561
score: 96.34648132324219
patch: public Exception Verify
rank: 561
score: 95.78208414713542
patch: public Locale
rank: 561
score: 94.65998077392578
patch: Integer
rank: 562
score: 98.937353515625
patch: public out . write ( byte [ ) {
rank: 562
score: 98.90269165039062
patch: String out ( ) throws IO CaMeL Exception ;
rank: 562
score: 98.81173366970486
patch: public out . write ( Long ) ;
rank: 562
score: 98.80845642089844
patch: private void write ( out ) ;
rank: 562
score: 98.6192398071289
patch: public write ( $STRING$ ) throws )
rank: 562
score: 97.11355590820312
patch: reset > Index
rank: 562
score: 96.34568786621094
patch: abstract Error null
rank: 562
score: 96.09297943115234
patch: return >
rank: 562
score: 94.65667724609375
patch: public Iterable
rank: 563
score: 98.93674926757812
patch: out . write . write ( $STRING$ ) {
rank: 563
score: 98.902099609375
patch: void out . write ( $STRING$ $STRING$ ) ;
rank: 563
score: 98.81167941623264
patch: Object out ( $STRING$ + $STRING$ ) ;
rank: 563
score: 98.808251953125
patch: out . write ( new Integer ( ) ;
rank: 563
score: 97.11334991455078
patch: initialize > ]
rank: 563
score: 96.34482828776042
patch: out Exception
rank: 563
score: 95.78080240885417
patch: List add
rank: 563
score: 94.65443929036458
patch: output >
rank: 564
score: 98.93578491210937
patch: out . write ( $STRING$ + format ) ;
rank: 564
score: 98.81099853515624
patch: public out . write ( $STRING$ ) ? ;
rank: 564
score: 98.61897277832031
patch: . out . write ( ) ;
rank: 564
score: 96.34390258789062
patch: public Runtime IO
rank: 564
score: 96.08985900878906
patch: add > null
rank: 564
score: 95.77834065755208
patch: get next
rank: 564
score: 94.6470947265625
patch: public NULL
rank: 565
score: 98.93482208251953
patch: public abstract int out ( ) ;
rank: 565
score: 98.81071166992187
patch: out . write ( $STRING$ ) ? null ;
rank: 565
score: 98.61770629882812
patch: public int out ( ) { ;
rank: 565
score: 97.1113052368164
patch: private protected synchronized
rank: 565
score: 96.3438491821289
patch: private State get
rank: 565
score: 96.0889892578125
patch: if catch >
rank: 565
score: 95.77805582682292
patch: debug ]
rank: 565
score: 94.64607747395833
patch: SQL >
rank: 566
score: 98.9341064453125
patch: public out . write ( long value ) ;
rank: 566
score: 98.810498046875
patch: public void out ( $STRING$ ) return ) ;
rank: 566
score: 98.61681365966797
patch: public out . write $STRING$ $STRING$ ;
rank: 566
score: 97.10985565185547
patch: write > Index
rank: 566
score: 96.34227752685547
patch: public Exception Tree
rank: 566
score: 96.08103942871094
patch: = protected
rank: 566
score: 95.77492268880208
patch: public convert
rank: 566
score: 94.63855997721355
patch: encoding >
rank: 567
score: 98.90061645507812
patch: public out [ ] write ( $STRING$ ) ;
rank: 567
score: 98.80975341796875
patch: public void out ( $STRING$ / : / ;
rank: 567
score: 98.80620659722223
patch: private private out . write ( ) ;
rank: 567
score: 98.61541748046875
patch: out . write ( this ) ;
rank: 567
score: 97.10794830322266
patch: protected public get
rank: 567
score: 96.34196472167969
patch: protected State iterator
rank: 567
score: 95.77447509765625
patch: - else
rank: 568
score: 98.93161843039773
patch: @ Override public out . write ( $STRING$ ) {
rank: 568
score: 98.90057983398438
patch: . . . * write ( $STRING$ ) ;
rank: 568
score: 98.80890502929688
patch: public void out ( $STRING$ ) { ) ;
rank: 568
score: 98.61519622802734
patch: public void out . $STRING$ ) ;
rank: 568
score: 97.10625457763672
patch: read > i
rank: 568
score: 96.34185791015625
patch: < Exception Exception
rank: 568
score: 95.77444458007812
patch: public TRUE
rank: 568
score: 94.63226318359375
patch: url >
rank: 569
score: 98.93096923828125
patch: out out . write ( $STRING$ $STRING$ ) ;
rank: 569
score: 98.80881076388889
patch: public void out ( Object out ) ;
rank: 569
score: 98.80501302083333
patch: void out . write ( $NUMBER$ ) ;
rank: 569
score: 98.61457824707031
patch: write ( ] byte $NUMBER$ ) ;
rank: 569
score: 96.34184265136719
patch: To Exception State
rank: 569
score: 95.77236938476562
patch: Data
rank: 570
score: 98.899658203125
patch: public out . write ( int ch )
rank: 570
score: 98.80486382378473
patch: XML . Runtime . write ( ) ;
rank: 570
score: 98.61353302001953
patch: out . write ( Double ) ;
rank: 570
score: 96.34131622314453
patch: protected null err
rank: 570
score: 96.07453918457031
patch: instanceof Stack
rank: 570
score: 95.77231852213542
patch: Utilities add
rank: 570
score: 94.62705485026042
patch: Under >
rank: 571
score: 98.93020629882812
patch: public int out . write ( $STRING$ ) {
rank: 571
score: 98.89927978515625
patch: public out . write ( String chars ) ;
rank: 571
score: 98.80460357666016
patch: public void write ( String ) ;
rank: 571
score: 95.77215576171875
patch: public join
rank: 572
score: 98.93018687855114
patch: public out . out . write ( $STRING$ ) {
rank: 572
score: 98.8072265625
patch: public void out ( write ( Object ) ;
rank: 572
score: 97.10116577148438
patch: commit > ]
rank: 572
score: 96.33859252929688
patch: public Error :
rank: 572
score: 96.07304382324219
patch: hash > i
rank: 572
score: 95.77159627278645
patch: <UNK>
rank: 573
score: 98.93010864257812
patch: out . write . write ( byte ) ;
rank: 573
score: 98.80359649658203
patch: void out write ( $STRING$ ) ;
rank: 573
score: 97.10108947753906
patch: cache > ]
rank: 573
score: 96.33854675292969
patch: public ( Illegal
rank: 573
score: 96.07238006591797
patch: > current
rank: 573
score: 94.61912027994792
patch: public Lookup
rank: 574
score: 98.80718383789062
patch: public void out ( $STRING$ * out ) ;
rank: 574
score: 98.80276150173611
patch: synchronized out . write ( out ) ;
rank: 574
score: 98.60753631591797
patch: out . write ( ) $STRING$ ;
rank: 574
score: 97.10039520263672
patch: message > ]
rank: 574
score: 96.338134765625
patch: public Exception >
rank: 574
score: 95.76885986328125
patch: ? print
rank: 575
score: 98.89615478515626
patch: out . write ( Character ( $STRING$ ) ;
rank: 575
score: 98.80586751302083
patch: boolean . . out ( $STRING$ ) ;
rank: 575
score: 98.80193219866071
patch: public void write ( ) {
rank: 575
score: 98.60600280761719
patch: out . write ( final ) ;
rank: 575
score: 97.09964752197266
patch: parameter > ]
rank: 575
score: 96.33760833740234
patch: public null EMPTY
rank: 575
score: 96.06755065917969
patch: > start
rank: 575
score: 95.76841227213542
patch: System else
rank: 575
score: 94.61444091796875
patch: ends
rank: 576
score: 98.92924360795455
patch: public out . write ( byte ch [ ] )
rank: 576
score: 98.80516899956598
patch: public String CaMeL Buffer out ( ) ;
rank: 576
score: 98.80088588169643
patch: public private out ( ) {
rank: 576
score: 97.09850311279297
patch: assert > >
rank: 576
score: 96.33682250976562
patch: public Error (
rank: 577
score: 98.89451904296875
patch: void out . write ( ) throws $STRING$ ;
rank: 577
score: 98.80211639404297
patch: Iterator . write ( $STRING$ ) ;
rank: 577
score: 98.60499572753906
patch: public out ( ) { ; }
rank: 577
score: 97.09796142578125
patch: main > Index
rank: 577
score: 96.33612060546875
patch: private ( Exception
rank: 577
score: 94.60647583007812
patch: public Inheritable
rank: 578
score: 98.928955078125
patch: public synchronized out . write . write ( $STRING$ )
rank: 578
score: 98.89395904541016
patch: out . write ( ) ; ;
rank: 578
score: 98.80037434895833
patch: out . write ( 0 1 ) ;
rank: 578
score: 98.60411834716797
patch: write ( $STRING$ ) throws $STRING$ ;
rank: 578
score: 97.09786987304688
patch: priority > ]
rank: 578
score: 96.33607482910156
patch: static null Error
rank: 578
score: 95.76576741536458
patch: Not <UNK>
rank: 578
score: 94.60191853841145
patch: * throws
rank: 579
score: 98.92893288352273
patch: public synchronized out . write ( int $STRING$ ) {
rank: 579
score: 98.8939208984375
patch: out . write ( Writer out ) ;
rank: 579
score: 98.8016357421875
patch: public void void out ( $STRING$ ) ;
rank: 579
score: 98.79971652560764
patch: private void write ( String 1 ) ;
rank: 579
score: 97.09785461425781
patch: accept > ]
rank: 579
score: 96.33577728271484
patch: final Null State
rank: 579
score: 96.05402374267578
patch: load > i
rank: 579
score: 95.76172892252605
patch: Value finally
rank: 579
score: 94.59934997558594
patch: IO
rank: 580
score: 98.8930892944336
patch: public out . write ( byte )
rank: 580
score: 98.80159301757813
patch: out . write ( $STRING$ ) = out ;
rank: 580
score: 98.79941134982639
patch: void write ( out , $STRING$ ) ;
rank: 580
score: 98.60365295410156
patch: public out ( $STRING$ ) ) {
rank: 580
score: 97.09774017333984
patch: build > ]
rank: 580
score: 96.30035400390625
patch: protected null
rank: 580
score: 95.76129150390625
patch: public import
rank: 580
score: 94.59832763671875
patch: user >
rank: 581
score: 98.89169921875
patch: out . write ( char ch [ ) ;
rank: 581
score: 98.8013916015625
patch: private out . write ( char ) ;
rank: 581
score: 98.79866790771484
patch: private int out ( $STRING$ ) ;
rank: 581
score: 98.60350799560547
patch: out . write . out ) ;
rank: 581
score: 97.09677124023438
patch: execute > >
rank: 581
score: 94.59579467773438
patch: }
rank: 582
score: 98.8906982421875
patch: public out . write ( byte [ ] )
rank: 582
score: 98.80059136284723
patch: protected out . write ( String ) ;
rank: 582
score: 98.79788970947266
patch: f . write ( $STRING$ ) ;
rank: 582
score: 97.09638977050781
patch: process > Index
rank: 582
score: 96.04621887207031
patch: if > Index
rank: 582
score: 95.7589111328125
patch: close
rank: 582
score: 94.59562174479167
patch: sleep >
rank: 583
score: 98.89012451171875
patch: out . write ( $STRING$ ) ; ; ;
rank: 583
score: 98.800537109375
patch: public void out ( $STRING$ ? / ;
rank: 583
score: 98.79735717773437
patch: public void out ( ) out ( ) ;
rank: 583
score: 98.60234832763672
patch: public abstract void out ( ) {
rank: 583
score: 97.09616088867188
patch: port > i
rank: 583
score: 95.7585957845052
patch: public ++
rank: 583
score: 94.58888753255208
patch: Big >
rank: 584
score: 98.9264248934659
patch: protected out . write ( $STRING$ * / $STRING$ )
rank: 584
score: 98.88994140625
patch: public out . write . write ( $STRING$ )
rank: 584
score: 98.79730224609375
patch: out . write ( Short ) ;
rank: 584
score: 98.6019515991211
patch: out . write . $STRING$ $STRING$ ;
rank: 584
score: 97.09452819824219
patch: port > ]
rank: 584
score: 96.22311401367188
patch: private State
rank: 584
score: 96.04335021972656
patch: for > length
rank: 584
score: 95.75577799479167
patch: private Object
rank: 584
score: 94.58814493815105
patch: public No
rank: 585
score: 98.92567027698864
patch: public synchronized boolean out . write ( $STRING$ ) {
rank: 585
score: 98.7972900390625
patch: public void out ( ) != 0 ) ;
rank: 585
score: 98.60176849365234
patch: public out . out . out ;
rank: 585
score: 97.0936279296875
patch: bind > ]
rank: 585
score: 96.04153442382812
patch: has > Index
rank: 586
score: 98.92519309303977
patch: public double out ( ) throws IO CaMeL Exception ;
rank: 586
score: 98.88934936523438
patch: abstract void out . write ( $STRING$ ) ;
rank: 586
score: 98.7971435546875
patch: public out . write ( String ( ) {
rank: 586
score: 96.03852844238281
patch: Sorted catch >
rank: 586
score: 95.75084431966145
patch: protected starts
rank: 586
score: 94.58656819661458
patch: public *
rank: 587
score: 98.92406116832386
patch: private void write ( ) throws IO CaMeL Exception {
rank: 587
score: 98.888818359375
patch: public out . write ( $STRING$ + ; ;
rank: 587
score: 98.79892578125
patch: public synchronized void out ( $STRING$ ) { ;
rank: 587
score: 98.79678005642361
patch: public boolean write ( String 1 ) ;
rank: 587
score: 97.09208679199219
patch: on > Index
rank: 587
score: 95.74995930989583
patch: null Exception
rank: 587
score: 94.58229573567708
patch: ( >
rank: 588
score: 98.92393798828125
patch: out . write . write ( ch ) ;
rank: 588
score: 98.8875732421875
patch: final void out . write ( $STRING$ ) ;
rank: 588
score: 98.79883490668402
patch: out . write ( $STRING$ ? $STRING$ ;
rank: 588
score: 98.79644775390625
patch: write ( String $STRING$ ) ;
rank: 588
score: 98.59837123325893
patch: public out . $STRING$ out ;
rank: 588
score: 97.09049224853516
patch: can > next
rank: 588
score: 96.10392252604167
patch: void Exception
rank: 588
score: 96.03341674804688
patch: clear > null
rank: 588
score: 94.58049011230469
patch: m
rank: 589
score: 98.92339477539062
patch: out . write ( $STRING$ , ch ) ;
rank: 589
score: 98.88741048177083
patch: write . write ( $STRING$ ) ; ;
rank: 589
score: 98.79842800564236
patch: public void out ( write ( ) ;
rank: 589
score: 98.79627336774554
patch: public public out ( ) ;
rank: 589
score: 98.59806605747768
patch: public out ( out ) {
rank: 589
score: 97.09036254882812
patch: date > ]
rank: 589
score: 96.07865397135417
patch: out null
rank: 589
score: 96.03024291992188
patch: J catch >
rank: 589
score: 95.74808756510417
patch: private register
rank: 589
score: 94.57225545247395
patch: request >
rank: 590
score: 98.88604125976562
patch: out . write ( $STRING$ / * ) ;
rank: 590
score: 98.79831949869792
patch: public void out ( $STRING$ ) ? ;
rank: 590
score: 98.79608154296875
patch: public out . write ( byte * ) ;
rank: 590
score: 97.08856201171875
patch: update > arraycopy
rank: 590
score: 96.0743408203125
patch: final
rank: 590
score: 95.74796549479167
patch: public goto
rank: 590
score: 94.56105550130208
patch: public inherit
rank: 591
score: 98.92305908203124
patch: out . write ( byte [ ] out )
rank: 591
score: 98.885595703125
patch: out . write ( ( $STRING$ ) ; ;
rank: 591
score: 98.79524739583333
patch: protected synchronized out . write ( ) ;
rank: 591
score: 98.59661102294922
patch: write ( ] ] $STRING$ ) ;
rank: 591
score: 97.08637237548828
patch: location > ]
rank: 591
score: 96.02264404296875
patch: call > catch
rank: 591
score: 95.74727376302083
patch: private contains
rank: 591
score: 94.56035614013672
patch: builder
rank: 592
score: 98.92300415039062
patch: out . write ( $STRING$ * / $STRING$ )
rank: 592
score: 98.88529052734376
patch: out . write ( $STRING$ $STRING$ ) ; ;
rank: 592
score: 98.79689331054688
patch: public void out ( String out ) { ;
rank: 592
score: 98.7950439453125
patch: public void write ( out ; null ) {
rank: 592
score: 97.08515167236328
patch: sort > ]
rank: 592
score: 96.0223388671875
patch: : public
rank: 592
score: 95.74490356445312
patch: System <UNK>
rank: 592
score: 94.55994669596355
patch: public Entity
rank: 593
score: 98.92255859375
patch: out . set . write ( $STRING$ ) ;
rank: 593
score: 98.79644097222223
patch: protected void out ( $STRING$ ) { ;
rank: 593
score: 97.08416748046875
patch: insert >
rank: 593
score: 96.06736246744792
patch: protected State
rank: 593
score: 96.01500701904297
patch: > Null
rank: 593
score: 95.7439473470052
patch: public arraycopy
rank: 594
score: 98.79593658447266
patch: private void out ( $STRING$ / ;
rank: 594
score: 98.79432678222656
patch: public long write ( $STRING$ ) ;
rank: 594
score: 96.0537618001302
patch: synchronized null
rank: 594
score: 95.7439473470052
patch: synchronized run
rank: 594
score: 94.55204264322917
patch: call >
rank: 595
score: 98.79574584960938
patch: String out . write ( ) ;
rank: 595
score: 98.79371643066406
patch: out . write ( Long ) ;
rank: 595
score: 97.08177185058594
patch: on > i
rank: 595
score: 95.74302164713542
patch: protected remove
rank: 595
score: 94.54939778645833
patch: Error >
rank: 596
score: 98.88004150390626
patch: out . write ( $STRING$ write ( ) ;
rank: 596
score: 98.79515245225694
patch: public Object . write ( $STRING$ ) ;
rank: 596
score: 98.79314313616071
patch: public String write ( ) ;
rank: 596
score: 98.5931625366211
patch: out . write ( ] ; .
rank: 596
score: 97.08140563964844
patch: add > else
rank: 596
score: 96.04153442382812
patch: public :
rank: 596
score: 95.7425537109375
patch: get _
rank: 596
score: 94.54822794596355
patch: < Not
rank: 597
score: 98.79484558105469
patch: public void out ( $STRING$ $STRING$ ;
rank: 597
score: 98.79261610243056
patch: out . write ( String $STRING$ ) {
rank: 597
score: 98.59146118164062
patch: public out ( Exception ;
rank: 597
score: 97.08103942871094
patch: properties > >
rank: 597
score: 96.01674397786458
patch: out Error
rank: 597
score: 95.99596405029297
patch: <UNK> <UNK>
rank: 597
score: 95.74114990234375
patch: private values
rank: 598
score: 98.91984727647569
patch: public out . write ( int ) {
rank: 598
score: 98.87950303819444
patch: out . write ( ( char ) ;
rank: 598
score: 98.79468536376953
patch: public out . write ( Object ;
rank: 598
score: 98.79253278459821
patch: protected boolean out ( ) ;
rank: 598
score: 98.5908203125
patch: public public out ( ) {
rank: 598
score: 97.08006286621094
patch: search > ]
rank: 598
score: 96.01139322916667
patch: synchronized Error
rank: 598
score: 95.9893569946289
patch: drop > i
rank: 598
score: 95.71073150634766
patch: Operation
rank: 598
score: 94.54330444335938
patch: private IO
rank: 599
score: 98.87903442382813
patch: static Object out . write ( $STRING$ ) ;
rank: 599
score: 98.59000069754464
patch: write . write ( $STRING$ ;
rank: 599
score: 97.0799560546875
patch: protected private protected
rank: 599
score: 96.00216674804688
patch: out Runtime
rank: 599
score: 95.98578643798828
patch: call > null
rank: 599
score: 95.70281982421875
patch: Log
rank: 599
score: 94.53759765625
patch: public package
rank: 600
score: 98.7938232421875
patch: out . start ( ) ;
rank: 600
score: 98.79145643446181
patch: / ] out . write ( ) ;
rank: 600
score: 98.58868408203125
patch: public out ( Exception ) { ;
rank: 600
score: 97.07331848144531
patch: private public Null
rank: 600
score: 95.68242645263672
patch: Hash
rank: 600
score: 94.52115885416667
patch: public Verify
rank: 601
score: 98.9197110262784
patch: public out . write ( Char CaMeL Sequence $STRING$ )
rank: 601
score: 98.79326171875
patch: public static out ( String $STRING$ ) { ;
rank: 601
score: 98.79097202845982
patch: void . write ( ) ;
rank: 601
score: 97.07205200195312
patch: protected protected synchronized
rank: 601
score: 95.98104858398438
patch: != null
rank: 602
score: 98.91942681206598
patch: out $NUMBER$ . write ( $STRING$ ) ;
rank: 602
score: 98.79197184244792
patch: public Object [ ] out ( ) ;
rank: 602
score: 98.7896957397461
patch: super . write ( $STRING$ ) ;
rank: 602
score: 98.58797454833984
patch: public out ( ) { $STRING$ ;
rank: 602
score: 97.07079060872395
patch: on >
rank: 602
score: 95.9711405436198
patch: synchronized State
rank: 602
score: 94.51362609863281
patch: Hashtable
rank: 603
score: 98.91924370659723
patch: out . write ( $STRING$ ) * /
rank: 603
score: 98.87822265625
patch: public void out ( ) { ) ; }
rank: 603
score: 98.79110107421874
patch: public static void out ( ) { return ;
rank: 603
score: 98.78851318359375
patch: public void out ( ) != null ) {
rank: 603
score: 98.587890625
patch: public out ( ] ) {
rank: 603
score: 95.97022247314453
patch: > Char
rank: 603
score: 95.961669921875
patch: abstract Exception
rank: 603
score: 95.641357421875
patch: Debug
rank: 604
score: 98.878125
patch: Object out . write ( $STRING$ ) ; ;
rank: 604
score: 98.79102918836806
patch: String . $NUMBER$ out ( $STRING$ ) ;
rank: 604
score: 98.58610534667969
patch: public private void out ( ) {
rank: 604
score: 97.06594848632812
patch: async >
rank: 604
score: 95.96785736083984
patch: if > length
rank: 604
score: 95.63640594482422
patch: length
rank: 605
score: 98.91886393229167
patch: public out . write ( long ) {
rank: 605
score: 98.87782118055556
patch: out . write ( out . ) ;
rank: 605
score: 98.7881103515625
patch: protected out . write ( String 1 ) {
rank: 605
score: 98.58558654785156
patch: out . write ( ) ; .
rank: 605
score: 95.96760559082031
patch: add > case
rank: 605
score: 95.63584899902344
patch: Plugin
rank: 605
score: 94.48902384440105
patch: public UTF
rank: 606
score: 98.87635498046875
patch: void out ( ) throws Interrupted CaMeL Exception ;
rank: 606
score: 98.79019504123264
patch: public void out ( final $STRING$ ) {
rank: 606
score: 98.78748236762152
patch: public void out ( String 1 ) {
rank: 606
score: 98.58541870117188
patch: public public out . $STRING$ ) ;
rank: 606
score: 97.05826822916667
patch: Ignore >
rank: 606
score: 95.96656799316406
patch: = else
rank: 606
score: 95.92380777994792
patch: @ Error
rank: 606
score: 95.6248550415039
patch: Property
rank: 606
score: 94.48733520507812
patch: EMPTY
rank: 607
score: 98.91809692382813
patch: @ Override public out . write ( $STRING$ )
rank: 607
score: 98.87627563476562
patch: public out . write ( ( $STRING$ ) ;
rank: 607
score: 98.79010772705078
patch: String . out ( $STRING$ ) ;
rank: 607
score: 95.9636459350586
patch: try > catch
rank: 607
score: 95.62469482421875
patch: for
rank: 607
score: 94.47637176513672
patch: (
rank: 608
score: 98.91767578125
patch: out . write ( byte [ ] ) {
rank: 608
score: 98.8746826171875
patch: public out . write ( $STRING$ value ) ;
rank: 608
score: 98.7887954711914
patch: Thread . write ( $STRING$ ) ;
rank: 608
score: 98.78671700613839
patch: protected int write ( ) ;
rank: 608
score: 98.58275604248047
patch: public void out ( Exception ) ;
rank: 608
score: 97.05220540364583
patch: hash >
rank: 608
score: 95.8771464029948
patch: void Runtime
rank: 608
score: 95.59613037109375
patch: element
rank: 608
score: 94.47552490234375
patch: boolean <UNK>
rank: 609
score: 98.9175048828125
patch: private out . write ( $STRING$ ) { }
rank: 609
score: 98.87449340820312
patch: public out . write ( $STRING$ + $STRING$ )
rank: 609
score: 98.78643798828125
patch: public out . write ( byte 1 ) {
rank: 609
score: 98.58252716064453
patch: public out ( Exception ( ) {
rank: 609
score: 95.95667266845703
patch: has > length
rank: 609
score: 95.57373046875
patch: last
rank: 609
score: 94.47105916341145
patch: public >
rank: 610
score: 98.91683959960938
patch: public abstract out . write ( long ) ;
rank: 610
score: 98.87314453125
patch: out . write ( $STRING$ ^ $STRING$ ) ;
rank: 610
score: 98.78726806640626
patch: public out ( ) { out += $STRING$ ;
rank: 610
score: 98.78586154513889
patch: public int write ( String 1 ) ;
rank: 610
score: 98.58245849609375
patch: write . write ( write ) ;
rank: 610
score: 97.01206461588542
patch: can >
rank: 610
score: 94.47090657552083
patch: ( (
rank: 611
score: 98.91658935546874
patch: public out . out . write ( $STRING$ )
rank: 611
score: 98.78700086805556
patch: public Thread . write ( $STRING$ ) ;
rank: 611
score: 98.78530447823661
patch: boolean write ( $STRING$ ) ;
rank: 611
score: 98.58202362060547
patch: out . write ( TYPE ) ;
rank: 611
score: 97.01035563151042
patch: start >
rank: 611
score: 95.55399322509766
patch: Service
rank: 611
score: 94.47055053710938
patch: Object
rank: 612
score: 98.8724609375
patch: public void out . write ( String str )
rank: 612
score: 98.78566487630208
patch: String . . out ( $STRING$ ) ;
rank: 612
score: 98.78488159179688
patch: public out . write ( String * ) ;
rank: 612
score: 98.58179728190105
patch: public write ( ) {
rank: 612
score: 97.00880940755208
patch: Common >
rank: 612
score: 95.95564270019531
patch: / ;
rank: 612
score: 95.53434753417969
patch: Handler
rank: 612
score: 94.46929931640625
patch: post >
rank: 613
score: 98.91595458984375
patch: out . write ( $STRING$ << $STRING$ ) ;
rank: 613
score: 98.87040879991319
patch: out . write ( byte i ) ;
rank: 613
score: 98.58163452148438
patch: public out ( $STRING$ ) throws ;
rank: 613
score: 97.00829060872395
patch: Find >
rank: 613
score: 95.8009033203125
patch: @ null
rank: 613
score: 95.52806854248047
patch: Code
rank: 613
score: 94.466796875
patch: <
rank: 614
score: 98.91564331054687
patch: public abstract write . write . $STRING$ ) ;
rank: 614
score: 98.78531646728516
patch: private void out ( ) { ;
rank: 614
score: 98.78396170479911
patch: private int out ( ) {
rank: 614
score: 97.00453694661458
patch: Main >
rank: 614
score: 95.9549331665039
patch: has > null
rank: 614
score: 95.50621032714844
patch: Changed
rank: 615
score: 98.91536865234374
patch: public out . write ( long $STRING$ ) {
rank: 615
score: 98.78530544704861
patch: public static out ( $STRING$ $STRING$ ) ;
rank: 615
score: 98.7837905883789
patch: void write ( String 0 ) ;
rank: 615
score: 98.57960510253906
patch: write ( $STRING$ + $NUMBER$ ) ;
rank: 615
score: 97.00369262695312
patch: UI >
rank: 616
score: 98.91508345170455
patch: public synchronized out . write ( String $STRING$ ) {
rank: 616
score: 98.78462049696181
patch: private String . write ( $STRING$ ) ;
rank: 616
score: 98.78307495117187
patch: public void write ( final String 1 ) {
rank: 616
score: 98.57881469726563
patch: write ( ) ;
rank: 616
score: 96.99053955078125
patch: Add >
rank: 616
score: 95.94729614257812
patch: add > out
rank: 616
score: 95.50421142578125
patch: Type
rank: 616
score: 94.44802856445312
patch: org <UNK>
rank: 617
score: 98.868359375
patch: final int out . write ( $STRING$ ) ;
rank: 617
score: 98.78453911675348
patch: public void out ( $STRING$ ) ) ;
rank: 617
score: 98.7830581665039
patch: boolean . write ( $STRING$ ) ;
rank: 617
score: 98.57859802246094
patch: public write ( ] $STRING$ ) ;
rank: 617
score: 96.98910522460938
patch: Containment >
rank: 617
score: 94.44308471679688
patch: Illegal
rank: 618
score: 96.98683675130208
patch: push >
rank: 618
score: 95.94017791748047
patch: public for catch
rank: 618
score: 95.78616333007812
patch: static Error
rank: 618
score: 95.48558044433594
patch: Set
rank: 619
score: 98.78445773654514
patch: int static . write ( $STRING$ ) ;
rank: 619
score: 98.78282819475446
patch: protected void write ( ) ;
rank: 619
score: 98.57559204101562
patch: public int write ( $STRING$ ) {
rank: 619
score: 96.97684733072917
patch: Source >
rank: 619
score: 95.94001770019531
patch: > ++
rank: 619
score: 95.48184204101562
patch: Size
rank: 620
score: 98.8677490234375
patch: final Object out . write ( $STRING$ ) ;
rank: 620
score: 98.78187561035156
patch: public int . write ( ) ;
rank: 620
score: 98.57489776611328
patch: . . write ( out ) ;
rank: 620
score: 96.97275797526042
patch: template >
rank: 620
score: 95.93950653076172
patch: > Number
rank: 620
score: 95.7496846516927
patch: void Error
rank: 620
score: 95.47581481933594
patch: All
rank: 620
score: 94.44021606445312
patch: check
rank: 621
score: 98.91263427734376
patch: out . long . write ( $STRING$ ) ;
rank: 621
score: 98.86717529296875
patch: out . write ( String str , ) ;
rank: 621
score: 98.7840576171875
patch: public void out ( $STRING$ ] ) ;
rank: 621
score: 98.78167724609375
patch: public boolean write ( String $STRING$ ) {
rank: 621
score: 98.57301548549107
patch: public out ( ] ) ;
rank: 621
score: 96.96938069661458
patch: in >
rank: 621
score: 95.7474365234375
patch: protected Runnable
rank: 621
score: 95.47142791748047
patch: Status
rank: 622
score: 98.91225363991477
patch: private out . write ( $STRING$ * / ) ;
rank: 622
score: 98.78345404730902
patch: protected void out ( $STRING$ ) return ;
rank: 622
score: 98.78141784667969
patch: synchronized void out ( $STRING$ ) ;
rank: 622
score: 95.73854573567708
patch: final Error
rank: 622
score: 95.46954345703125
patch: Visible
rank: 622
score: 94.41647338867188
patch: Ruby
rank: 623
score: 98.91143243963069
patch: public int out ( ) throws Interrupted CaMeL Exception ;
rank: 623
score: 98.8670654296875
patch: public out . write ( int count ) ;
rank: 623
score: 98.78308715820313
patch: public out . write ( Object $STRING$ ) {
rank: 623
score: 98.78131866455078
patch: return . write ( $STRING$ ) ;
rank: 623
score: 98.5726318359375
patch: write ( ] byte $STRING$ ) ;
rank: 623
score: 95.93720245361328
patch: != catch
rank: 623
score: 95.73519897460938
patch: private Runtime
rank: 623
score: 95.45262908935547
patch: exists
rank: 623
score: 94.41554260253906
patch: token
rank: 624
score: 98.91141086154514
patch: public void out . write ( $STRING$ )
rank: 624
score: 98.78278266059027
patch: public abstract out write ( $STRING$ ) ;
rank: 624
score: 96.94908650716145
patch: All >
rank: 624
score: 95.93435668945312
patch: add > size
rank: 624
score: 95.42988586425781
patch: More
rank: 624
score: 94.40843709309895
patch: execute <UNK>
rank: 625
score: 98.91106499565973
patch: out . write ( $STRING$ ) { }
rank: 625
score: 98.86567993164063
patch: out . write ( byte ) { ; }
rank: 625
score: 98.78067779541016
patch: void out ( - 1 ) ;
rank: 625
score: 98.56912231445312
patch: write . write ( ) ) ;
rank: 625
score: 96.9481201171875
patch: f >
rank: 625
score: 95.9296875
patch: != Stack
rank: 625
score: 95.7115707397461
patch: try
rank: 625
score: 95.42697143554688
patch: Context
rank: 626
score: 98.90988159179688
patch: public abstract void write ( int ch ) ;
rank: 626
score: 98.86557006835938
patch: out . write ( Character ) ;
rank: 626
score: 98.78211127387152
patch: public void out ( $STRING$ ) out ;
rank: 626
score: 98.56742095947266
patch: public final void out ( ) {
rank: 626
score: 96.94596354166667
patch: Property >
rank: 626
score: 94.40289306640625
patch: public Virtual
rank: 627
score: 98.9094970703125
patch: protected out . write ( $STRING$ ) { ;
rank: 627
score: 98.86471896701389
patch: public void out ( $STRING$ + ) ;
rank: 627
score: 98.78136444091797
patch: private String out ( $STRING$ ) ;
rank: 627
score: 98.78018188476562
patch: final void write ( out ) ;
rank: 627
score: 98.56599426269531
patch: public write ( ] 1 ) ;
rank: 627
score: 96.93806966145833
patch: Current >
rank: 627
score: 95.9269027709961
patch: run > length
rank: 627
score: 95.68035888671875
patch: static null
rank: 627
score: 94.3954569498698
patch: protected abstract
rank: 628
score: 98.90904651988636
patch: public final out . write ( int $STRING$ ) {
rank: 628
score: 98.86438666449652
patch: out . write ( $STRING$ , ; ;
rank: 628
score: 98.7796630859375
patch: void out ( int substring ) ;
rank: 628
score: 98.565673828125
patch: out . write ( $NUMBER$ ) {
rank: 628
score: 96.9376220703125
patch: filters >
rank: 628
score: 95.9227294921875
patch: catch <
rank: 628
score: 95.671142578125
patch: / Stack
rank: 628
score: 94.39166259765625
patch: new >
rank: 629
score: 98.9078369140625
patch: public out . write ( $STRING$ ) { return ;
rank: 629
score: 98.86397705078124
patch: public out . write ( char value ) ;
rank: 629
score: 98.77816009521484
patch: private private void out ( ) ;
rank: 629
score: 98.56534576416016
patch: write . write ( $NUMBER$ ) ;
rank: 629
score: 96.93007405598958
patch: synchronized synchronized
rank: 629
score: 95.91668701171875
patch: initialize > Index
rank: 629
score: 95.40969848632812
patch: Key
rank: 629
score: 94.39007568359375
patch: Vector
rank: 630
score: 98.90781471946023
patch: public out . flush ( ) { return out ;
rank: 630
score: 98.77707926432292
patch: public static boolean out ( $STRING$ ) ;
rank: 630
score: 98.56338500976562
patch: out . out . $STRING$ ) ;
rank: 630
score: 96.92967732747395
patch: fire >
rank: 630
score: 95.91630554199219
patch: clear > arraycopy
rank: 630
score: 95.39889526367188
patch: Component
rank: 630
score: 94.38841756184895
patch: protected static
rank: 631
score: 98.9077880859375
patch: out . write ( $STRING$ , length ) ;
rank: 631
score: 98.77507866753473
patch: public void out ( $STRING$ ) { }
rank: 631
score: 98.56260681152344
patch: public out ( $STRING$ ) $STRING$ ;
rank: 631
score: 96.92938232421875
patch: reset >
rank: 631
score: 95.64607238769531
patch: static
rank: 631
score: 95.39806365966797
patch: Item
rank: 631
score: 94.38330078125
patch: private abstract
rank: 632
score: 98.9077392578125
patch: out . write . write ( chars ) ;
rank: 632
score: 98.86315307617187
patch: public out . write ( int write ) ;
rank: 632
score: 98.77596435546874
patch: void out ( ) ; null ; null ;
rank: 632
score: 98.77499050564236
patch: public out . write ( Object ) {
rank: 632
score: 98.56175231933594
patch: out . write ( Byte ) ;
rank: 632
score: 96.927978515625
patch: setup >
rank: 632
score: 95.91600036621094
patch: > contains
rank: 632
score: 95.64112345377605
patch: / Exception
rank: 632
score: 95.37107849121094
patch: Level
rank: 632
score: 94.37991333007812
patch: find
rank: 633
score: 98.86263427734374
patch: public void out ( ) { ; } ;
rank: 633
score: 98.77537841796875
patch: public out . write ( long ch ) {
rank: 633
score: 98.77471245659723
patch: protected abstract void out ( $STRING$ ) ;
rank: 633
score: 96.92702229817708
patch: Mail >
rank: 633
score: 95.63743082682292
patch: @ State
rank: 633
score: 95.36917114257812
patch: Boolean
rank: 633
score: 94.37930297851562
patch: delete
rank: 634
score: 98.90735473632813
patch: out . write . $STRING$ ( $STRING$ ) ;
rank: 634
score: 98.86244201660156
patch: public out . write ( char )
rank: 634
score: 98.77432590060764
patch: public void out ( Integer $STRING$ ) ;
rank: 634
score: 98.77223714192708
patch: public void out ( String 0 ) ;
rank: 634
score: 96.92435709635417
patch: By >
rank: 634
score: 95.36531066894531
patch: remove
rank: 634
score: 94.3779805501302
patch: object >
rank: 635
score: 98.9070712002841
patch: protected int out ( ) throws IO CaMeL Exception {
rank: 635
score: 98.8616455078125
patch: protected out . write ( String str ) ;
rank: 635
score: 98.77419026692708
patch: public abstract out . write ( String ;
rank: 635
score: 98.77203979492188
patch: public out . write ( String write ) {
rank: 635
score: 98.56070709228516
patch: public write ( ] $NUMBER$ ) ;
rank: 635
score: 95.89981079101562
patch: do > catch
rank: 635
score: 95.61897786458333
patch: out Null
rank: 635
score: 95.34698486328125
patch: put
rank: 635
score: 94.37074788411458
patch: logger >
rank: 636
score: 98.90687144886364
patch: public float out ( ) throws IO CaMeL Exception ;
rank: 636
score: 98.86084662543402
patch: public out . write ( char ch )
rank: 636
score: 98.77349175347223
patch: public void out ( $STRING$ / * ;
rank: 636
score: 98.771728515625
patch: void out ( String write ) ;
rank: 636
score: 98.55830383300781
patch: public out ( out ) { ;
rank: 636
score: 96.91988118489583
patch: script >
rank: 636
score: 95.89600372314453
patch: write > length
rank: 636
score: 95.6175028483073
patch: out out
rank: 636
score: 94.34725952148438
patch: replace
rank: 637
score: 98.55805969238281
patch: public out ( $STRING$ $STRING$ ) ;
rank: 637
score: 96.91945393880208
patch: ctx >
rank: 637
score: 95.88740539550781
patch: case <UNK>
rank: 637
score: 95.61390177408855
patch: final null
rank: 638
score: 98.90651633522727
patch: public long out ( ) throws IO CaMeL Exception {
rank: 638
score: 98.85986328125
patch: out . write ( Char CaMeL Sequence str )
rank: 638
score: 98.773193359375
patch: public static void out ( $STRING$ * ;
rank: 638
score: 98.77062225341797
patch: int void write ( $STRING$ ) ;
rank: 638
score: 98.5580062866211
patch: $STRING$ ) write ( $STRING$ ) ;
rank: 638
score: 96.91502888997395
patch: Async >
rank: 638
score: 95.886962890625
patch: instanceof catch >
rank: 638
score: 95.61099243164062
patch: void err
rank: 638
score: 95.33555603027344
patch: Queue
rank: 638
score: 94.33724975585938
patch: Managed >
rank: 639
score: 98.9062832919034
patch: public final boolean out . write ( $STRING$ ) {
rank: 639
score: 98.85953369140626
patch: void out . write ( String name ) ;
rank: 639
score: 98.55722045898438
patch: . out write ( $STRING$ ) ;
rank: 639
score: 95.88645935058594
patch: try > null
rank: 639
score: 95.60281372070312
patch: void out
rank: 639
score: 95.32893371582031
patch: err
rank: 639
score: 94.33590698242188
patch: abstract protected
rank: 640
score: 98.90535888671874
patch: out . write ( $STRING$ , write ) ;
rank: 640
score: 98.85918579101562
patch: abstract out . write ( $STRING$ ) ; ;
rank: 640
score: 98.76949055989583
patch: public void out ( $STRING$ $STRING$ ? ;
rank: 640
score: 98.5567626953125
patch: out . write ( Throwable ) ;
rank: 640
score: 96.90774536132812
patch: cache >
rank: 640
score: 95.60205078125
patch: protected Runtime
rank: 640
score: 95.32344055175781
patch: Access
rank: 641
score: 98.85873752170139
patch: public void out ( ) throws Exception ;
rank: 641
score: 98.77034759521484
patch: void out ( out out ) ;
rank: 641
score: 98.76838514539931
patch: public out . write ( double ) ;
rank: 641
score: 98.55635288783482
patch: $STRING$ out ( $STRING$ ) ;
rank: 641
score: 96.90350341796875
patch: manager >
rank: 641
score: 95.88479614257812
patch: case protected
rank: 641
score: 95.30870056152344
patch: trim
rank: 641
score: 94.33319091796875
patch: ruby
rank: 642
score: 98.85765991210937
patch: out . write ( byte [ ] chars )
rank: 642
score: 98.77020263671875
patch: try . write ( $STRING$ ) ;
rank: 642
score: 98.76791720920139
patch: out . write ( String $NUMBER$ ) ;
rank: 642
score: 98.55596923828125
patch: public out ( $STRING$ out ) ;
rank: 642
score: 96.89862060546875
patch: synchronized private
rank: 642
score: 95.8837890625
patch: set > out
rank: 642
score: 95.29562377929688
patch: entry
rank: 643
score: 98.76984405517578
patch: abstract out . write ( ) ;
rank: 643
score: 98.7677001953125
patch: public void out ( Object ;
rank: 643
score: 98.55529022216797
patch: public out ( ) out ) ;
rank: 643
score: 96.87467447916667
patch: Mutation >
rank: 643
score: 95.88348388671875
patch: set > case
rank: 643
score: 95.54437255859375
patch: All State
rank: 643
score: 94.32742309570312
patch: Session
rank: 644
score: 98.85603841145833
patch: out . write ( char ( ) ;
rank: 644
score: 98.76894802517361
patch: static void write ( String $STRING$ ) {
rank: 644
score: 98.76744249131944
patch: public void out ( String value ) ;
rank: 644
score: 98.55419921875
patch: public boolean out ( ) { public
rank: 644
score: 96.8681640625
patch: Send >
rank: 644
score: 95.88208770751953
patch: = static
rank: 644
score: 95.53726196289062
patch: public Override
rank: 644
score: 95.25608825683594
patch: Argument
rank: 644
score: 94.32047526041667
patch: public <
rank: 645
score: 98.85584174262152
patch: out . write ( char ; ) ;
rank: 645
score: 98.768359375
patch: public out . write ( String start ) {
rank: 645
score: 98.76689995659723
patch: protected void out ( $STRING$ $STRING$ ) ;
rank: 645
score: 98.55241394042969
patch: write ( $STRING$ , $NUMBER$ ) ;
rank: 645
score: 95.88043212890625
patch: for > null
rank: 645
score: 95.25293731689453
patch: parse
rank: 645
score: 94.31939697265625
patch: Result
rank: 646
score: 98.8536376953125
patch: out . write ( $STRING$ name ) ;
rank: 646
score: 98.7677993774414
patch: write . write ( byte ) ;
rank: 646
score: 98.5515365600586
patch: public public out ( ) { ;
rank: 646
score: 95.87287902832031
patch: ret > i
rank: 646
score: 95.23981475830078
patch: Found
rank: 647
score: 98.90259898792614
patch: protected out . write ( ) { return out ;
rank: 647
score: 98.76716831752232
patch: public boolean write ( ) {
rank: 647
score: 98.76529269748264
patch: Iterator static . write ( $STRING$ ) ;
rank: 647
score: 98.5506362915039
patch: out . write ( write ) {
rank: 647
score: 95.8719711303711
patch: call > case
rank: 647
score: 95.52310180664062
patch: void arraycopy
rank: 647
score: 95.2275390625
patch: compare
rank: 647
score: 94.3173116048177
patch: plugin >
rank: 648
score: 98.90257679332386
patch: public out . write ( $STRING$ * $STRING$ ) ;
rank: 648
score: 98.85330539279514
patch: public static out . write ( $STRING$ )
rank: 648
score: 98.76650390625
patch: public boolean write ( out ; null ) {
rank: 648
score: 98.76487223307292
patch: void out ( $STRING$ + out ) ;
rank: 648
score: 98.54927062988281
patch: private out . write ( $STRING$ ;
rank: 648
score: 95.22500610351562
patch: Case
rank: 649
score: 98.9024991122159
patch: public boolean out ( ) { return true ; }
rank: 649
score: 98.76517740885417
patch: boolean write ( ) ;
rank: 649
score: 98.76473659939236
patch: public final out write ( $STRING$ ) ;
rank: 649
score: 95.22151184082031
patch: Factory
rank: 649
score: 94.31402587890625
patch: abstract synchronized
rank: 650
score: 98.90233265269886
patch: public long write ( ) throws IO CaMeL Exception {
rank: 650
score: 98.85253295898437
patch: public out . write ( String name , ;
rank: 650
score: 98.76462227957589
patch: static void out ( ) ;
rank: 650
score: 98.76359049479167
patch: public void out ( $STRING$ / ? ;
rank: 650
score: 98.548828125
patch: out . write ( XML ) ;
rank: 650
score: 96.85057576497395
patch: m >
rank: 650
score: 95.86561584472656
patch: initialize > length
rank: 650
score: 95.48728434244792
patch: synchronized Runtime
rank: 651
score: 98.90185546875
patch: out . write . long CaMeL Value ( ) ;
rank: 651
score: 98.85252549913194
patch: out . write ( byte size ) ;
rank: 651
score: 98.7642593383789
patch: void write ( String out ) ;
rank: 651
score: 98.76224772135417
patch: private static void write ( $STRING$ ) ;
rank: 651
score: 98.54841613769531
patch: public protected out ( ) { ;
rank: 651
score: 95.48691813151042
patch: out arraycopy
rank: 651
score: 95.19749450683594
patch: At
rank: 652
score: 98.85187377929688
patch: public void out ( $STRING$ + ( ) ;
rank: 652
score: 98.76154327392578
patch: protected void out ( $STRING$ ) {
rank: 652
score: 98.54830932617188
patch: public write ( $STRING$ ) throws ;
rank: 652
score: 96.84694417317708
patch: shared >
rank: 652
score: 95.4814961751302
patch: synchronized Null
rank: 652
score: 95.19429016113281
patch: J
rank: 652
score: 94.3082046508789
patch: execute
rank: 653
score: 98.90076361762152
patch: out . write . write ( $STRING$ )
rank: 653
score: 98.76097276475694
patch: out . write ( 0 , ) ;
rank: 653
score: 98.54772186279297
patch: public out ( ) { ) .
rank: 653
score: 96.84480794270833
patch: invoke >
rank: 653
score: 95.8642807006836
patch: > MAX
rank: 653
score: 95.48105875651042
patch: synchronized Stack
rank: 653
score: 95.18034362792969
patch: Cache
rank: 653
score: 94.30401611328125
patch: private >
rank: 654
score: 98.76143798828124
patch: public out . write ( Integer $STRING$ ) {
rank: 654
score: 98.76051839192708
patch: out out ( $STRING$ + $STRING$ ) ;
rank: 654
score: 98.5476303100586
patch: public out ( $STRING$ $STRING$ ) {
rank: 654
score: 95.86276245117188
patch: > ch
rank: 654
score: 95.47817993164062
patch: } Exception
rank: 655
score: 98.85071818033855
patch: public void out ( )
rank: 655
score: 98.76063842773438
patch: public out . write ( ) ; null }
rank: 655
score: 98.54758998325893
patch: public protected out ( ) {
rank: 655
score: 95.16325378417969
patch: clone
rank: 655
score: 94.29001871744792
patch: private static
rank: 656
score: 98.899951171875
patch: out . write . long ( $STRING$ ) ;
rank: 656
score: 98.85040283203125
patch: private out . write ( $STRING$ ) ; ;
rank: 656
score: 98.76036071777344
patch: public String out ( ) { ;
rank: 656
score: 98.7596435546875
patch: public void write ( $STRING$ ) ; null ;
rank: 656
score: 98.54757254464286
patch: public void out ( Exception ;
rank: 656
score: 96.83754475911458
patch: Test >
rank: 656
score: 95.86168670654297
patch: my > public
rank: 656
score: 94.28645324707031
patch: TAG
rank: 657
score: 98.8987704190341
patch: public final out . write ( $STRING$ ) { }
rank: 657
score: 98.84974975585938
patch: public void out ( ) throws Exception { ;
rank: 657
score: 98.76006401909723
patch: public void out ( String $NUMBER$ ) ;
rank: 657
score: 98.75907897949219
patch: Configuration . write ( $STRING$ ) ;
rank: 657
score: 98.54750279017857
patch: public void out . ) ;
rank: 657
score: 96.83462524414062
patch: clock >
rank: 657
score: 95.4399922688802
patch: static State
rank: 657
score: 94.27842203776042
patch: session >
rank: 658
score: 98.8961181640625
patch: public String out ( ) { return $STRING$ ;
rank: 658
score: 98.84920247395833
patch: out . write ( String key ) ;
rank: 658
score: 98.76003689236111
patch: public static int out ( $STRING$ ) {
rank: 658
score: 98.75802612304688
patch: public static out . write ( String ) {
rank: 658
score: 98.54535675048828
patch: out ) write ( $STRING$ ) ;
rank: 658
score: 96.83355712890625
patch: References >
rank: 658
score: 95.4280497233073
patch: out err
rank: 658
score: 95.1479721069336
patch: values
rank: 659
score: 98.89365844726562
patch: public boolean out ( ) { return in ;
rank: 659
score: 98.84872775607639
patch: out . write ( $STRING$ value ) ;
rank: 659
score: 98.75996229383681
patch: public out . write ( Double ) ;
rank: 659
score: 98.75714721679688
patch: public void write ( String $STRING$ ) ; }
rank: 659
score: 98.5450668334961
patch: out . write ( byte ) {
rank: 659
score: 95.85327911376953
patch: has > catch
rank: 659
score: 95.42020670572917
patch: @ Null
rank: 659
score: 95.14213562011719
patch: Output
rank: 660
score: 98.89080255681819
patch: out . write ( Char CaMeL Sequence str ) {
rank: 660
score: 98.75987413194444
patch: public out . write ( byte [ ;
rank: 660
score: 98.75651041666667
patch: public boolean write . write ( ) ;
rank: 660
score: 95.85310363769531
patch: = run
rank: 660
score: 95.41986083984375
patch: void Type
rank: 660
score: 94.26427459716797
patch: *
rank: 661
score: 98.88961452907986
patch: out . write ( $STRING$ * / )
rank: 661
score: 98.84787326388889
patch: out . write ( write ( ) ;
rank: 661
score: 98.75986735026042
patch: String . [ ] write ( ) ;
rank: 661
score: 98.75529174804687
patch: public void out ( ) == 0 ) ;
rank: 661
score: 98.5435562133789
patch: write . write ( $STRING$ ) .
rank: 661
score: 96.82718912760417
patch: namespace >
rank: 661
score: 95.85162353515625
patch: = for
rank: 661
score: 95.13838195800781
patch: Utils
rank: 661
score: 94.2595926920573
patch: input >
rank: 662
score: 98.54303741455078
patch: public out ( $STRING$ out ) {
rank: 662
score: 96.82572428385417
patch: system >
rank: 662
score: 95.41433715820312
patch: final State
rank: 662
score: 94.2554219563802
patch: public Random
rank: 663
score: 98.75492640904018
patch: void out ( false ) ;
rank: 663
score: 95.84925842285156
patch: > }
rank: 663
score: 95.12614440917969
patch: Is
rank: 663
score: 94.24612426757812
patch: change
rank: 664
score: 98.88638305664062
patch: out . write ( $STRING$ , out . ;
rank: 664
score: 98.75865342881944
patch: public void out ( String str ) ;
rank: 664
score: 98.54168701171875
patch: public boolean out . $STRING$ ) ;
rank: 664
score: 96.82076009114583
patch: field >
rank: 664
score: 95.84255981445312
patch: = Stack
rank: 664
score: 95.1192398071289
patch: Element
rank: 665
score: 98.88631439208984
patch: public abstract boolean out ( ) ;
rank: 665
score: 98.84691704644098
patch: out . write ( char ) ; ;
rank: 665
score: 98.54166412353516
patch: public out ( $STRING$ ) throws )
rank: 665
score: 96.81643676757812
patch: pop >
rank: 665
score: 95.83999633789062
patch: public exit >
rank: 665
score: 95.11637878417969
patch: Count
rank: 665
score: 94.23026275634766
patch: the
rank: 666
score: 98.75842963324652
patch: public static String out ( $STRING$ ) ;
rank: 666
score: 98.75240325927734
patch: Object out . write ( ) ;
rank: 666
score: 98.53948211669922
patch: public void out ( $STRING$ ) throws
rank: 666
score: 96.81642659505208
patch: assert >
rank: 666
score: 95.40266927083333
patch: out Type
rank: 666
score: 95.10406494140625
patch: Number
rank: 666
score: 94.22643025716145
patch: abstract private
rank: 667
score: 98.88491821289062
patch: public int out ( ) throws IO CaMeL Exception
rank: 667
score: 98.75839572482639
patch: public void out ( $STRING$ ) / ;
rank: 667
score: 98.53843688964844
patch: public out ( ] 1 ) ;
rank: 667
score: 96.81583658854167
patch: final public
rank: 667
score: 95.83915710449219
patch: results > i
rank: 667
score: 95.40236409505208
patch: void Null
rank: 667
score: 95.10354614257812
patch: Info
rank: 667
score: 94.22532145182292
patch: static public
rank: 668
score: 98.7517578125
patch: public out . write ( int ch ) {
rank: 668
score: 98.53707122802734
patch: write ( ] ( $STRING$ ) ;
rank: 668
score: 96.81399536132812
patch: instance >
rank: 668
score: 95.83892822265625
patch: insert > length
rank: 668
score: 95.401611328125
patch: if Exception
rank: 668
score: 95.09637451171875
patch: Node
rank: 669
score: 98.84325299944196
patch: public out . write ( )
rank: 669
score: 98.75736236572266
patch: out . read ( $STRING$ ) ;
rank: 669
score: 98.7513427734375
patch: public T out ( ) ;
rank: 669
score: 98.53704833984375
patch: public ) write ( $STRING$ ) ;
rank: 669
score: 96.81329345703125
patch: Launch >
rank: 669
score: 95.83795166015625
patch: if > else
rank: 669
score: 95.4000956217448
patch: private Out
rank: 669
score: 95.08416748046875
patch: 0
rank: 669
score: 94.21842447916667
patch: new <UNK>
rank: 670
score: 98.75128173828125
patch: public double write ( $STRING$ ) ;
rank: 670
score: 95.83428955078125
patch: stop > Index
rank: 670
score: 95.39794921875
patch: synchronized Not
rank: 670
score: 94.21663665771484
patch: true
rank: 671
score: 98.88202582465277
patch: public out . write ( long $STRING$ )
rank: 671
score: 98.75701904296875
patch: / * ] out ( ) ;
rank: 671
score: 98.75103149414062
patch: public void out ( ) == null ) {
rank: 671
score: 96.80999755859375
patch: Static >
rank: 671
score: 95.83204650878906
patch: stop > length
rank: 671
score: 94.20429229736328
patch: process
rank: 672
score: 98.83948625837054
patch: out . write ( String ;
rank: 672
score: 98.7566146850586
patch: public synchronized out ( $STRING$ ) ;
rank: 672
score: 98.75063069661458
patch: void out ( $STRING$ ;
rank: 672
score: 98.53639221191406
patch: private out . write ( out ;
rank: 672
score: 96.80775960286458
patch: Java >
rank: 672
score: 95.83098602294922
patch: > Not
rank: 672
score: 95.052978515625
patch: Pointer
rank: 673
score: 98.88101196289062
patch: out . write ( Char CaMeL Sequence out )
rank: 673
score: 98.75637478298611
patch: public void out ( $STRING$ ) throws ;
rank: 673
score: 98.74966430664062
patch: public static void out ( ) ; null ;
rank: 673
score: 96.80653889973958
patch: force >
rank: 673
score: 95.04487609863281
patch: Simple
rank: 673
score: 94.19582112630208
patch: while <UNK>
rank: 674
score: 98.88070339626736
patch: out out . write . $STRING$ ) ;
rank: 674
score: 98.83883327907986
patch: out . write ( $STRING$ << ) ;
rank: 674
score: 98.75629425048828
patch: private out . write ( char ;
rank: 674
score: 98.74833679199219
patch: void write ( int byte ) ;
rank: 674
score: 98.5360336303711
patch: public write ( ] $NUMBER$ ) {
rank: 674
score: 96.80232747395833
patch: handle >
rank: 674
score: 95.34663899739583
patch: add State
rank: 674
score: 95.04316711425781
patch: Request
rank: 674
score: 94.19558715820312
patch: handle
rank: 675
score: 98.8383560180664
patch: public Object out ( $STRING$ ) ;
rank: 675
score: 98.756103515625
patch: out . write ( $STRING$ ) ) }
rank: 675
score: 98.74817572699652
patch: public void write ( String $NUMBER$ ) ;
rank: 675
score: 96.79932657877605
patch: site >
rank: 675
score: 95.82652282714844
patch: if > catch
rank: 675
score: 95.0394287109375
patch: Runnable
rank: 675
score: 94.19402313232422
patch: long
rank: 676
score: 98.87981567382812
patch: public static out . write . $STRING$ ) {
rank: 676
score: 98.83551788330078
patch: out . write ( short ) ;
rank: 676
score: 98.74816216362848
patch: public int write ( String $STRING$ ) {
rank: 676
score: 98.53365325927734
patch: public out ( ] $NUMBER$ ) ;
rank: 676
score: 95.3405253092448
patch: else Exception
rank: 676
score: 94.18263753255208
patch: abstract String
rank: 677
score: 98.87944946289062
patch: protected out . write ( $STRING$ ) { }
rank: 677
score: 98.75386555989583
patch: public static int write ( $STRING$ ) ;
rank: 677
score: 98.53273010253906
patch: write ( $STRING$ , $STRING$ ) ;
rank: 677
score: 96.79434204101562
patch: Change >
rank: 677
score: 95.3364969889323
patch: synchronized Runnable
rank: 677
score: 95.0298843383789
patch: Format
rank: 677
score: 94.17103576660156
patch: my
rank: 678
score: 98.75385877821181
patch: boolean out ( $STRING$ + $STRING$ ) ;
rank: 678
score: 98.74663543701172
patch: private boolean write ( $STRING$ ) ;
rank: 678
score: 98.53209686279297
patch: public void write ( $STRING$ ) {
rank: 678
score: 96.79203287760417
patch: context >
rank: 678
score: 95.82386779785156
patch: I catch >
rank: 678
score: 95.02862548828125
patch: Runtime
rank: 678
score: 94.16941833496094
patch: make
rank: 679
score: 98.87761840820312
patch: out . write ( Byte . value ) ;
rank: 679
score: 98.83261447482639
patch: out . write ( char str ) ;
rank: 679
score: 98.75379774305556
patch: public void out ( Object $STRING$ ) ;
rank: 679
score: 98.74601745605469
patch: public void out ( ? ) ;
rank: 679
score: 98.53165435791016
patch: public out . write ( ; _
rank: 679
score: 96.79177856445312
patch: Output >
rank: 679
score: 95.82230377197266
patch: close > length
rank: 679
score: 95.33005777994792
patch: private err
rank: 680
score: 98.87685546875
patch: public out . write ( long i ) ;
rank: 680
score: 98.74561309814453
patch: void out ( ) ; null ;
rank: 680
score: 98.531005859375
patch: write . write . $STRING$ ;
rank: 680
score: 96.7910664876302
patch: Meta >
rank: 680
score: 95.82164001464844
patch: General catch >
rank: 680
score: 95.3210957845052
patch: out Internal
rank: 680
score: 95.01493835449219
patch: Table
rank: 680
score: 94.1650899251302
patch: protected Unsupported
rank: 681
score: 98.87620326450893
patch: public abstract out ( ) ;
rank: 681
score: 98.83000352647569
patch: out . write ( char write ) ;
rank: 681
score: 98.75330268012152
patch: public Object [ ] out ( ) {
rank: 681
score: 98.52396065848214
patch: public out . out . ;
rank: 681
score: 96.7909444173177
patch: schedule >
rank: 681
score: 95.82049560546875
patch: > sleep
rank: 681
score: 95.3184305826823
patch: out catch
rank: 681
score: 95.00033569335938
patch: Text
rank: 681
score: 94.15701293945312
patch: DOUBLE
rank: 682
score: 98.87590196397569
patch: public abstract out . flush ( ) ;
rank: 682
score: 98.75323486328125
patch: public out . write ( Character ;
rank: 682
score: 98.74453125
patch: public void out ( $STRING$ ) ; null ;
rank: 682
score: 98.52367146809895
patch: public abstract out ) ;
rank: 682
score: 94.99658203125
patch: parent
rank: 682
score: 94.15662384033203
patch: Throwable
rank: 683
score: 98.75299072265625
patch: public static out write ( $STRING$ ) {
rank: 683
score: 98.74406433105469
patch: void out ( || ( ) ;
rank: 683
score: 98.52205113002232
patch: public out . . out ;
rank: 683
score: 96.78806559244792
patch: Save >
rank: 683
score: 95.81709289550781
patch: > add
rank: 683
score: 95.30869547526042
patch: @ Runnable
rank: 683
score: 94.99607849121094
patch: Line
rank: 684
score: 98.74361843532986
patch: public void out ( || ( ) ;
rank: 684
score: 98.52056884765625
patch: public out write ( ) ;
rank: 684
score: 96.7871602376302
patch: Of >
rank: 684
score: 95.29833984375
patch: @ Stack
rank: 684
score: 94.97191619873047
patch: Add
rank: 685
score: 98.74282836914062
patch: public private out ( $STRING$ ) ;
rank: 685
score: 98.51729910714286
patch: public out ( ) ) ;
rank: 685
score: 95.2926025390625
patch: private catch
rank: 685
score: 94.96562194824219
patch: old
rank: 685
score: 94.13455200195312
patch: release
rank: 686
score: 98.74275037977431
patch: public void write ( String 0 ) {
rank: 686
score: 98.51714215959821
patch: write ( ] byte ) ;
rank: 686
score: 96.7838846842448
patch: Search >
rank: 686
score: 95.28525797526042
patch: Ruby Exception
rank: 686
score: 94.9652099609375
patch: data
rank: 687
score: 98.87310791015625
patch: out out ( ) throws IO CaMeL Exception ;
rank: 687
score: 98.8265380859375
patch: out . write ( $STRING$ ; ;
rank: 687
score: 98.75236680772569
patch: void out . write ( char ) ;
rank: 687
score: 98.7415771484375
patch: public Object out ( ) ;
rank: 687
score: 96.78326416015625
patch: data >
rank: 687
score: 95.2829081217448
patch: @ Runtime
rank: 687
score: 94.95610046386719
patch: register
rank: 688
score: 98.82508680555556
patch: out . write ( $STRING$ Integer ) ;
rank: 688
score: 98.75233289930556
patch: public String out ( $STRING$ ) { ;
rank: 688
score: 98.73984375
patch: public out . write ( ) ; 0 ;
rank: 688
score: 96.78275553385417
patch: priority >
rank: 688
score: 95.279296875
patch: @ Not
rank: 688
score: 94.95582580566406
patch: Path
rank: 688
score: 94.12838745117188
patch: save <UNK>
rank: 689
score: 98.87164306640625
patch: public abstract void write ( String str ) ;
rank: 689
score: 98.75180053710938
patch: String . . . . ) ;
rank: 689
score: 98.73941040039062
patch: private boolean out ( $STRING$ ) ;
rank: 689
score: 98.51279122488839
patch: out . write ( ) )
rank: 689
score: 96.78090413411458
patch: handler >
rank: 689
score: 95.69036865234375
patch: ;
rank: 689
score: 95.27086385091145
patch: out Thread
rank: 689
score: 94.95046997070312
patch: child
rank: 689
score: 94.11997985839844
patch: Unique
rank: 690
score: 98.87150065104167
patch: public abstract boolean write ( $STRING$ ) ;
rank: 690
score: 98.82427300347223
patch: void out . write ( $STRING$ + ;
rank: 690
score: 98.51228550502232
patch: write ( ] $NUMBER$ ) {
rank: 690
score: 95.26708984375
patch: private (
rank: 690
score: 94.939208984375
patch: on
rank: 690
score: 94.11514282226562
patch: Abstract
rank: 691
score: 98.82381184895833
patch: public abstract boolean out ( $STRING$ ) ;
rank: 691
score: 98.75051540798611
patch: boolean out . write ( String ) ;
rank: 691
score: 98.50875854492188
patch: out . $STRING$ ) ;
rank: 691
score: 96.77670288085938
patch: NEW >
rank: 691
score: 94.93814086914062
patch: Root
rank: 691
score: 94.11112467447917
patch: key >
rank: 692
score: 98.75045437282986
patch: public void out ( $STRING$ $STRING$ ) {
rank: 692
score: 98.73841094970703
patch: protected void out ( ) { }
rank: 692
score: 98.50790841238839
patch: write ( ] ch ) ;
rank: 692
score: 96.7755635579427
patch: Cached >
rank: 692
score: 95.26472981770833
patch: java State
rank: 692
score: 94.93644714355469
patch: !
rank: 692
score: 94.109130859375
patch: Uninterruptible
rank: 693
score: 98.86566162109375
patch: out . write ( long ch ) ;
rank: 693
score: 98.73754010881696
patch: void out ( null ) ;
rank: 693
score: 98.50676618303571
patch: public out ( ) { .
rank: 693
score: 96.77313232421875
patch: build >
rank: 693
score: 95.25752766927083
patch: protected Out
rank: 693
score: 94.93179321289062
patch: Option
rank: 693
score: 94.10234069824219
patch: No
rank: 694
score: 98.86482543945313
patch: public final boolean out . write ( $STRING$ )
rank: 694
score: 98.74896240234375
patch: out . write ( $STRING$ ) false ;
rank: 694
score: 98.73617117745536
patch: public double out ( ) ;
rank: 694
score: 98.50259835379464
patch: public out out ( ) ;
rank: 694
score: 96.76959228515625
patch: constructor >
rank: 694
score: 95.25681559244792
patch: / Runtime
rank: 695
score: 98.86461724175348
patch: public out . write ( $STRING$ , ;
rank: 695
score: 98.81996663411458
patch: out . write ( Byte $STRING$ ) ;
rank: 695
score: 98.74798583984375
patch: public synchronized void out ( $STRING$ ) {
rank: 695
score: 98.73594156901042
patch: long out ( ) ;
rank: 695
score: 96.76824951171875
patch: Menu >
rank: 695
score: 95.2554219563802
patch: void catch
rank: 695
score: 94.91796875
patch: Pool
rank: 696
score: 98.73471069335938
patch: public T write ( $STRING$ ) ;
rank: 696
score: 98.49974568684895
patch: public write ( ) ;
rank: 696
score: 96.76531982421875
patch: Debug >
rank: 696
score: 94.91706848144531
patch: Page
rank: 696
score: 94.09041341145833
patch: public CASE
rank: 697
score: 98.81676483154297
patch: out . write ( String str )
rank: 697
score: 98.74713134765625
patch: public synchronized out . write ( char ;
rank: 697
score: 98.49313790457589
patch: public out . write out ;
rank: 697
score: 96.76524861653645
patch: Application >
rank: 697
score: 95.24500528971355
patch: static Not
rank: 697
score: 94.91706848144531
patch: By
rank: 697
score: 94.08848571777344
patch: Task
rank: 698
score: 98.8616943359375
patch: public abstract out . write ( $STRING$ , ;
rank: 698
score: 98.81654188368056
patch: out . write ( Byte ( ) ;
rank: 698
score: 98.74711100260417
patch: int out . write ( String ) ;
rank: 698
score: 98.73347473144531
patch: public write ( String $STRING$ ) ;
rank: 698
score: 98.49271937779018
patch: write . out ( ) ;
rank: 698
score: 96.76180013020833
patch: Content >
rank: 698
score: 95.23976135253906
patch: write
rank: 698
score: 94.08346557617188
patch: write <UNK>
rank: 699
score: 98.86017456054688
patch: public int out ( ) { return $STRING$ ;
rank: 699
score: 98.74624972873264
patch: public static void out ( $STRING$ ? ;
rank: 699
score: 98.73330688476562
patch: void write ( int String ) ;
rank: 699
score: 98.4915771484375
patch: out . write $STRING$ $STRING$ ;
rank: 699
score: 95.22739664713542
patch: out IO
rank: 699
score: 94.91574096679688
patch: Clone
rank: 699
score: 94.08132934570312
patch: Class
rank: 700
score: 98.74568939208984
patch: public out ( String $STRING$ ) ;
rank: 700
score: 98.73288302951389
patch: public void out ( int 0 ) {
rank: 700
score: 98.48897007533482
patch: write ( $STRING$ ) $STRING$ ;
rank: 700
score: 96.75937906901042
patch: Exec >
rank: 700
score: 95.22581990559895
patch: double State
rank: 700
score: 94.08070373535156
patch: Action
rank: 701
score: 98.81332736545139
patch: public out . write ( boolean ) ;
rank: 701
score: 98.74484592013889
patch: public out ( String $STRING$ ) { ;
rank: 701
score: 98.73259735107422
patch: command . write ( $STRING$ ) ;
rank: 701
score: 98.48872593470982
patch: protected out ( $STRING$ ) ;
rank: 701
score: 94.07989501953125
patch: protected >
rank: 702
score: 98.80997043185764
patch: out . write ( String ch ) ;
rank: 702
score: 98.74458821614583
patch: final . void out ( $STRING$ ) ;
rank: 702
score: 98.73204040527344
patch: void void write ( $STRING$ ) ;
rank: 702
score: 98.4844970703125
patch: write ( out ) ;
rank: 702
score: 96.75187174479167
patch: lock >
rank: 702
score: 94.90907287597656
patch: value
rank: 702
score: 94.07609049479167
patch: Nullable protected
rank: 703
score: 98.85748291015625
patch: out . write ( $STRING$ ) { ) ;
rank: 703
score: 98.74444580078125
patch: Event . write ( $STRING$ ) ;
rank: 703
score: 98.73149871826172
patch: boolean . . write ( ) ;
rank: 703
score: 98.48307582310268
patch: public write ( $STRING$ ) throws
rank: 703
score: 95.22220865885417
patch: clear State
rank: 703
score: 94.90792846679688
patch: push
rank: 704
score: 98.85706787109375
patch: public out . write ( int out ) ;
rank: 704
score: 98.743896484375
patch: String . . . . $STRING$ ) ;
rank: 704
score: 98.48305838448661
patch: public out ( ) { public
rank: 704
score: 96.74896240234375
patch: Privileged >
rank: 704
score: 95.21829223632812
patch: void Thread
rank: 704
score: 94.90187072753906
patch: can
rank: 704
score: 94.0758056640625
patch: NO
rank: 705
score: 98.85604248046874
patch: public out . write ( int i ) {
rank: 705
score: 98.73092215401786
patch: int void out ( ) ;
rank: 705
score: 98.48101196289062
patch: public $STRING$ ) ;
rank: 705
score: 96.7483622233073
patch: catalog >
rank: 705
score: 95.21555582682292
patch: private Unsupported
rank: 705
score: 94.88700866699219
patch: Settings
rank: 706
score: 98.80473497178819
patch: protected void out ( ) { ; }
rank: 706
score: 98.72976345486111
patch: private void out ( int 1 ) {
rank: 706
score: 98.4772237141927
patch: public write . $STRING$ ;
rank: 706
score: 95.20218912760417
patch: protected err
rank: 706
score: 94.88473510742188
patch: Trace
rank: 707
score: 98.85595092773437
patch: protected out . write ( String str ) {
rank: 707
score: 98.80286322699652
patch: public out . write ( String value )
rank: 707
score: 98.74326578776042
patch: public out . write ( String out ;
rank: 707
score: 98.72874145507812
patch: private out . write ( ) ; null ;
rank: 707
score: 94.88320922851562
patch: Unsupported
rank: 707
score: 94.06077575683594
patch: read
rank: 708
score: 98.74207305908203
patch: List . write ( $STRING$ ) ;
rank: 708
score: 98.72826276506696
patch: abstract . run ( ) ;
rank: 708
score: 98.47596435546875
patch: public abstract out ;
rank: 708
score: 96.73862711588542
patch: Selection >
rank: 708
score: 95.19369506835938
patch: private Internal
rank: 708
score: 94.87445068359375
patch: false
rank: 708
score: 94.0533955891927
patch: msg >
rank: 709
score: 98.79883490668402
patch: out . write ( ( int ) ;
rank: 709
score: 98.74155002170139
patch: public void out ( $STRING$ * ) ;
rank: 709
score: 98.47487095424107
patch: public write ( out ) ;
rank: 709
score: 94.8736572265625
patch: Impl
rank: 709
score: 94.04890950520833
patch: public /
rank: 710
score: 98.79829915364583
patch: out [ ] out ( $STRING$ ) ;
rank: 710
score: 98.47466169084821
patch: write ( ] 1 ) {
rank: 710
score: 95.319580078125
patch: instanceof
rank: 710
score: 95.18577067057292
patch: static Null
rank: 710
score: 94.87330627441406
patch: start
rank: 710
score: 94.04334259033203
patch: XML
rank: 711
score: 98.72659912109376
patch: public out . write ( String Character ) {
rank: 711
score: 98.47464425223214
patch: public write out ( ) ;
rank: 711
score: 96.73382568359375
patch: synchronized protected
rank: 711
score: 95.18098958333333
patch: synchronized IO
rank: 711
score: 94.86717224121094
patch: substring
rank: 711
score: 94.04239654541016
patch: object
rank: 712
score: 98.73969268798828
patch: out . Error ( $STRING$ ) ;
rank: 712
score: 98.72626953125
patch: public int . . write ( $STRING$ ) {
rank: 712
score: 96.73135375976562
patch: native >
rank: 712
score: 94.85691833496094
patch: Change
rank: 713
score: 98.73946804470486
patch: ? out . write ( $STRING$ ) ;
rank: 713
score: 98.72582244873047
patch: public abstract private out ( ) ;
rank: 713
score: 98.47093709309895
patch: write ( ] ) ;
rank: 713
score: 95.17466227213542
patch: final Not
rank: 713
score: 94.03446960449219
patch: Instance
rank: 714
score: 98.73872205946181
patch: private final void out ( $STRING$ ) ;
rank: 714
score: 98.72557237413194
patch: public void write ( int $STRING$ ) {
rank: 714
score: 98.46723937988281
patch: public $STRING$ ;
rank: 714
score: 96.73019409179688
patch: DOUBLE >
rank: 714
score: 95.16953531901042
patch: protected catch
rank: 714
score: 94.85556030273438
patch: Index
rank: 715
score: 98.84979248046875
patch: protected out . write ( $STRING$ * / )
rank: 715
score: 98.79415554470486
patch: out . write ( int str ) ;
rank: 715
score: 98.73853895399306
patch: out . write ( $STRING$ ) = ;
rank: 715
score: 98.7254867553711
patch: public static out ( out ) ;
rank: 715
score: 98.46586390904018
patch: write . write ( out ;
rank: 715
score: 96.72860717773438
patch: operation >
rank: 715
score: 95.16733805338542
patch: private :
rank: 715
score: 94.85452270507812
patch: key
rank: 715
score: 94.02456665039062
patch: Bundle
rank: 716
score: 98.84917602539062
patch: protected out ( ) throws IO CaMeL Exception {
rank: 716
score: 98.79326714409723
patch: out . write ( int i ) ;
rank: 716
score: 98.73834228515625
patch: public static out out ( $STRING$ ) ;
rank: 716
score: 98.46486118861607
patch: public out . $STRING$ $STRING$ ;
rank: 716
score: 96.72829182942708
patch: Sort >
rank: 716
score: 94.85356903076172
patch: Empty
rank: 717
score: 98.79220920138889
patch: out . write ( char char ) ;
rank: 717
score: 98.73665364583333
patch: public void out ( ) { / ;
rank: 717
score: 98.72419956752232
patch: boolean . write ( ) ;
rank: 717
score: 98.46407063802083
patch: public out ( $STRING$ ;
rank: 717
score: 96.7211405436198
patch: PDOM >
rank: 717
score: 95.16109212239583
patch: public FALSE
rank: 717
score: 94.85295104980469
patch: Wrapper
rank: 717
score: 94.02290344238281
patch: xsp
rank: 718
score: 98.72386474609375
patch: public void out ( String $NUMBER$ ] ) {
rank: 718
score: 98.46360560825893
patch: write . write ( ) {
rank: 718
score: 96.72062174479167
patch: activate >
rank: 718
score: 95.1594950358073
patch: VM State
rank: 718
score: 94.84426879882812
patch: Logger
rank: 719
score: 98.78937445746527
patch: out . write ( $STRING$ % ) ;
rank: 719
score: 98.72349243164062
patch: public String . . . . } ) {
rank: 719
score: 98.46352713448661
patch: public out . ) ) ;
rank: 719
score: 96.72024536132812
patch: attributes >
rank: 719
score: 95.15550740559895
patch: java Stack
rank: 720
score: 98.78929985894098
patch: public out . write ( float ) ;
rank: 720
score: 98.73299831814236
patch: public void out ( $STRING$ ) * ;
rank: 720
score: 98.72291782924107
patch: abstract void out ( ) ;
rank: 720
score: 98.46003069196429
patch: write ( $STRING$ ) out ;
rank: 720
score: 96.7174784342448
patch: Last >
rank: 720
score: 95.1502685546875
patch: out run
rank: 720
score: 94.01534016927083
patch: project >
rank: 721
score: 98.72279357910156
patch: protected boolean write ( $STRING$ ) ;
rank: 721
score: 95.15223185221355
patch: _
rank: 721
score: 95.15015665690105
patch: static Runnable
rank: 721
score: 94.825927734375
patch: Provider
rank: 721
score: 94.01516723632812
patch: /
rank: 722
score: 98.84627956814236
patch: protected final out . write ( $STRING$ )
rank: 722
score: 98.7879638671875
patch: private void out ( ) { ; }
rank: 722
score: 98.73284149169922
patch: public out . write ( Float ;
rank: 722
score: 98.72262912326389
patch: private void write ( String $STRING$ ) {
rank: 722
score: 98.45595005580357
patch: out . write ( $NUMBER$ ;
rank: 722
score: 96.71250406901042
patch: job >
rank: 722
score: 95.1453628540039
patch: connect
rank: 722
score: 94.81108093261719
patch: Lock
rank: 723
score: 98.84540473090277
patch: out . write ( $STRING$ } ) ;
rank: 723
score: 98.78733317057292
patch: out . write ( byte write ) ;
rank: 723
score: 98.73131561279297
patch: out . get ( $STRING$ ) ;
rank: 723
score: 98.72234344482422
patch: abstract void out ( $STRING$ ) ;
rank: 723
score: 98.45578438895089
patch: public out ( write ) {
rank: 723
score: 95.1314188639323
patch: protected Thread
rank: 723
score: 94.80538177490234
patch: Listeners
rank: 723
score: 94.01187896728516
patch: flush
rank: 724
score: 98.84536743164062
patch: public long out . write ( $STRING$ ) {
rank: 724
score: 98.78497992621527
patch: out . write ( String chars ) ;
rank: 724
score: 98.45560128348214
patch: out write ( $STRING$ ) ;
rank: 724
score: 96.70640055338542
patch: final synchronized
rank: 724
score: 95.12611897786458
patch: FreException
rank: 724
score: 94.8042221069336
patch: Id
rank: 724
score: 94.011474609375
patch: sleep <UNK>
rank: 725
score: 98.84281616210937
patch: private out . write ( $STRING$ , $STRING$ )
rank: 725
score: 98.72136688232422
patch: private boolean out ( out ) ;
rank: 725
score: 96.70371500651042
patch: Invocation >
rank: 725
score: 95.12021891276042
patch: static Runtime
rank: 725
score: 94.78854370117188
patch: Iterator
rank: 726
score: 98.84239366319444
patch: protected abstract void write ( $STRING$ ) ;
rank: 726
score: 98.72910563151042
patch: public void out ( out ) { ;
rank: 726
score: 98.72117396763393
patch: public long out ( ) ;
rank: 726
score: 98.45398821149554
patch: out . write ( write ;
rank: 726
score: 94.78515625
patch: Name
rank: 726
score: 94.00933074951172
patch: fire
rank: 727
score: 98.84229193793402
patch: public out . write . $STRING$ ) {
rank: 727
score: 98.7205810546875
patch: public void out ( int $STRING$ ) {
rank: 727
score: 98.45320638020833
patch: out ( out ) ;
rank: 727
score: 96.70127360026042
patch: refresh >
rank: 727
score: 95.11111450195312
patch: void Internal
rank: 727
score: 94.78467559814453
patch: Target
rank: 728
score: 98.72023010253906
patch: int write . write ( ) ;
rank: 728
score: 98.45199148995536
patch: out ( Exception $STRING$ ) ;
rank: 728
score: 95.1081034342448
patch: UException
rank: 728
score: 94.00704956054688
patch: Big
rank: 729
score: 98.84080200195312
patch: public boolean out ( ) { return true ;
rank: 729
score: 98.71900939941406
patch: static void out ( $STRING$ ) ;
rank: 729
score: 98.45133754185268
patch: out . write ( ) .
rank: 729
score: 96.69210815429688
patch: Console >
rank: 729
score: 94.78060150146484
patch: Tracker
rank: 729
score: 94.00508880615234
patch: list
rank: 730
score: 98.83973524305556
patch: out out . write ( str ) ;
rank: 730
score: 98.77754041883681
patch: out . write ( String write ) ;
rank: 730
score: 98.72276306152344
patch: public void out ( $STRING$ * ;
rank: 730
score: 98.71829833984376
patch: public void write ( final String 0 ) {
rank: 730
score: 98.44674246651786
patch: private out ( $STRING$ ) ;
rank: 730
score: 96.69174194335938
patch: Running >
rank: 730
score: 95.10520426432292
patch: / Type
rank: 730
score: 94.77813720703125
patch: fetch
rank: 731
score: 98.77621799045139
patch: public void out ( ) throws Throwable ;
rank: 731
score: 98.7190933227539
patch: out . write ( escape ) ;
rank: 731
score: 98.71826171875
patch: Object out ( ) ;
rank: 731
score: 94.77631378173828
patch: Event
rank: 731
score: 93.99481201171875
patch: public lower
rank: 732
score: 98.776123046875
patch: out . write ( String name , ;
rank: 732
score: 98.71823120117188
patch: protected void out . write ( $STRING$ ) {
rank: 732
score: 98.71614583333333
patch: public static out . write ( Object ;
rank: 732
score: 98.44227818080357
patch: public out . out ) ;
rank: 732
score: 96.6843770345052
patch: change >
rank: 732
score: 95.10005696614583
patch: VM Exception
rank: 732
score: 94.77178955078125
patch: count
rank: 733
score: 98.83833618164063
patch: out out ( ) throws IO CaMeL Exception {
rank: 733
score: 98.7179183959961
patch: Message . write ( $STRING$ ) ;
rank: 733
score: 98.7137680053711
patch: public out . write ( / ;
rank: 733
score: 98.44190673828125
patch: write ( ) {
rank: 733
score: 96.68419392903645
patch: servlet >
rank: 733
score: 95.09957885742188
patch: final Null
rank: 733
score: 94.751220703125
patch: Time
rank: 733
score: 93.9876708984375
patch: input
rank: 734
score: 98.77368842230902
patch: protected out . write ( $STRING$ + ;
rank: 734
score: 98.71758355034723
patch: private void out ( int $NUMBER$ ) {
rank: 734
score: 95.09928385416667
patch: void Index
rank: 734
score: 94.75068664550781
patch: Classes
rank: 734
score: 93.98468780517578
patch: Linked
rank: 735
score: 98.77288140190973
patch: public String out ( ) { ; }
rank: 735
score: 98.71703491210937
patch: public void write ( int String 1 ) {
rank: 735
score: 98.7073745727539
patch: public synchronized out write ( ) ;
rank: 735
score: 96.67926025390625
patch: perform >
rank: 735
score: 95.09202067057292
patch: protected (
rank: 735
score: 94.74759674072266
patch: end
rank: 736
score: 98.83568115234375
patch: private out . write ( int $STRING$ ) {
rank: 736
score: 98.77246771918402
patch: out . write ( int value ) ;
rank: 736
score: 98.71611022949219
patch: void out ( Exception $STRING$ ) ;
rank: 736
score: 98.70345306396484
patch: public void out ( Object ) ;
rank: 736
score: 98.43437848772321
patch: $STRING$ . write ( ) ;
rank: 736
score: 94.74172973632812
patch: In
rank: 736
score: 93.97434997558594
patch: open
rank: 737
score: 98.77231174045139
patch: out . write ( $STRING$ >> ) ;
rank: 737
score: 98.7158203125
patch: protected private void out ( ) ;
rank: 737
score: 98.70336151123047
patch: public out . write ( Integer ;
rank: 737
score: 98.43419538225446
patch: . . write ( ) ;
rank: 737
score: 93.97277069091797
patch: Tool
rank: 738
score: 98.8332763671875
patch: private out . write ( String str ) {
rank: 738
score: 98.71572536892361
patch: protected void write ( String $STRING$ ) {
rank: 738
score: 98.4327901204427
patch: public void out . ;
rank: 738
score: 95.08072916666667
patch: out exit
rank: 739
score: 98.83127848307292
patch: out . write ( $STRING$ float ) ;
rank: 739
score: 98.76971435546875
patch: public void out ( ) { ; ;
rank: 739
score: 98.71572265625
patch: public boolean write ( $STRING$ ) ; null ;
rank: 739
score: 98.70045471191406
patch: out . write ( start ) ;
rank: 739
score: 98.43169294084821
patch: write ( $STRING$ $STRING$ ) ;
rank: 739
score: 96.67697143554688
patch: Tasks >
rank: 739
score: 93.96319580078125
patch: assert
rank: 740
score: 98.83090549045139
patch: private final out . write ( $STRING$ )
rank: 740
score: 98.71383666992188
patch: final . write ( $STRING$ ) ;
rank: 740
score: 98.70042419433594
patch: public long out ( $STRING$ ) ;
rank: 740
score: 98.43120465959821
patch: public out . ( ) ;
rank: 740
score: 96.6759745279948
patch: Show >
rank: 740
score: 95.07211303710938
patch: final Runnable
rank: 740
score: 94.72789001464844
patch: Job
rank: 740
score: 93.95416259765625
patch: java
rank: 741
score: 98.71284993489583
patch: public int out ( ) { ; }
rank: 741
score: 98.70001220703125
patch: void out ( $STRING$ ? $STRING$ ;
rank: 741
score: 98.4298095703125
patch: public static out . $STRING$ ;
rank: 741
score: 96.6753438313802
patch: Swing >
rank: 741
score: 95.07106526692708
patch: protected Internal
rank: 741
score: 94.72554779052734
patch: create
rank: 741
score: 93.95298767089844
patch: Mock
rank: 742
score: 98.82811143663194
patch: out . write ( Character value ) ;
rank: 742
score: 98.76588948567708
patch: public abstract out . write ( $STRING$ )
rank: 742
score: 98.71212768554688
patch: cfw . write ( $STRING$ ) ;
rank: 742
score: 96.67235310872395
patch: parameters >
rank: 742
score: 95.06739298502605
patch: / arraycopy
rank: 742
score: 94.71629333496094
patch: it
rank: 742
score: 93.94642639160156
patch: request
rank: 743
score: 98.82769097222223
patch: out . write ( long value ) ;
rank: 743
score: 98.76563856336806
patch: out . write ( out , ) ;
rank: 743
score: 98.69927215576172
patch: public String [ ] . . ;
rank: 743
score: 98.42274693080357
patch: out ( $STRING$ ) ) ;
rank: 743
score: 95.05987548828125
patch: private arraycopy
rank: 743
score: 94.71588134765625
patch: empty
rank: 744
score: 98.82754177517361
patch: public out . write ( chars ) {
rank: 744
score: 98.71166229248047
patch: write ( int String $STRING$ ) ;
rank: 744
score: 98.42255510602679
patch: public public out . out ;
rank: 744
score: 95.05430094401042
patch: final Runtime
rank: 744
score: 94.9563700358073
patch: init
rank: 744
score: 94.70729064941406
patch: User
rank: 744
score: 93.93659973144531
patch: show
rank: 745
score: 98.82752821180556
patch: out . write . $STRING$ + $STRING$ ;
rank: 745
score: 98.76382785373264
patch: out . write ( short ch ) ;
rank: 745
score: 98.71137152777777
patch: public void out ( ) ; null ;
rank: 745
score: 98.69770050048828
patch: public String . . . . ;
rank: 745
score: 98.42119489397321
patch: public boolean out . out ;
rank: 745
score: 96.67112223307292
patch: First >
rank: 745
score: 95.05347696940105
patch: abstract null
rank: 745
score: 94.70700073242188
patch: search
rank: 746
score: 98.82722981770833
patch: public out . write ( $STRING$ * ;
rank: 746
score: 98.76305474175348
patch: out . write ( out . ; ;
rank: 746
score: 98.71086774553571
patch: private String out ( ) ;
rank: 746
score: 98.6976318359375
patch: out . put ( $STRING$ ) ;
rank: 746
score: 96.67061360677083
patch: contents >
rank: 746
score: 95.05152384440105
patch: out finally
rank: 746
score: 94.70459747314453
patch: Version
rank: 746
score: 93.92327880859375
patch: logger
rank: 747
score: 98.82583618164062
patch: public abstract String out ( ) ;
rank: 747
score: 98.76270294189453
patch: out . write ( boolean ) ;
rank: 747
score: 98.69703674316406
patch: . void out ( $STRING$ ) ;
rank: 747
score: 98.41966029575893
patch: public out ( $STRING$ ) throw
rank: 747
score: 96.67051188151042
patch: pdom >
rank: 747
score: 95.05133056640625
patch: * Exception
rank: 747
score: 94.914306640625
patch: =
rank: 747
score: 94.70015716552734
patch: info
rank: 747
score: 93.91612243652344
patch: expected
rank: 748
score: 98.76253255208333
patch: out . write ( char i ) ;
rank: 748
score: 98.69477844238281
patch: Node . write ( $STRING$ ) ;
rank: 748
score: 98.41966029575893
patch: public out write ( ) {
rank: 748
score: 96.66766357421875
patch: action >
rank: 748
score: 95.04867553710938
patch: protected :
rank: 748
score: 94.69882202148438
patch: Bounds
rank: 748
score: 93.91295623779297
patch: save
rank: 749
score: 98.82538519965277
patch: public abstract int write ( $STRING$ ) ;
rank: 749
score: 98.76203748914931
patch: write . write ( ) throws ) ;
rank: 749
score: 98.7088623046875
patch: void out ( int write ) ;
rank: 749
score: 98.69282531738281
patch: private static out ( $STRING$ ) ;
rank: 749
score: 96.66697184244792
patch: J >
rank: 749
score: 93.91009521484375
patch: call
rank: 750
score: 98.82398817274306
patch: public out . write ( char ) {
rank: 750
score: 98.708740234375
patch: public private out ( out ) ;
rank: 750
score: 98.69107055664062
patch: public static int out ( ) {
rank: 750
score: 98.41109212239583
patch: public out . ; _
rank: 750
score: 96.66281127929688
patch: Classes >
rank: 750
score: 95.044677734375
patch: void finally
rank: 750
score: 94.69102478027344
patch: OK
rank: 750
score: 93.90812683105469
patch: sort
rank: 751
score: 98.75935872395833
patch: out . write ( Writer $STRING$ ) ;
rank: 751
score: 98.70873260498047
patch: public void out ( ) { }
rank: 751
score: 98.69075775146484
patch: public out . write ( Throwable ;
rank: 751
score: 98.40932791573661
patch: public boolean out . ) ;
rank: 751
score: 94.897705078125
patch: public else
rank: 751
score: 94.68476867675781
patch: Date
rank: 752
score: 98.70817260742187
patch: public void write . write ( $STRING$ ) {
rank: 752
score: 98.68946838378906
patch: Field . write ( $STRING$ ) ;
rank: 752
score: 98.40699986049107
patch: public out out ( ) {
rank: 752
score: 96.6607666015625
patch: Configurable >
rank: 752
score: 95.04018147786458
patch: void Out
rank: 752
score: 94.89699300130208
patch: instanceof null
rank: 752
score: 94.68006896972656
patch: file
rank: 752
score: 93.90232849121094
patch: Process
rank: 753
score: 98.40402657645089
patch: write out ( $STRING$ ) ;
rank: 753
score: 95.0397237141927
patch: out Out
rank: 753
score: 94.89187622070312
patch: instanceof case
rank: 753
score: 94.67276763916016
patch: ret
rank: 753
score: 93.8983154296875
patch: Test
rank: 754
score: 98.398388671875
patch: public ( ) {
rank: 754
score: 96.65451049804688
patch: History >
rank: 754
score: 95.03926595052083
patch: / null
rank: 754
score: 94.6706314086914
patch: -
rank: 754
score: 93.89134979248047
patch: report
rank: 755
score: 98.75771077473958
patch: out . write ( char key ) ;
rank: 755
score: 98.70731353759766
patch: protected int out ( $STRING$ ) ;
rank: 755
score: 98.68458557128906
patch: protected boolean out ( $STRING$ ) ;
rank: 755
score: 98.39510672433036
patch: public abstract out . out ;
rank: 755
score: 96.65267944335938
patch: Work >
rank: 755
score: 95.03871663411458
patch: out Illegal
rank: 755
score: 93.88548278808594
patch: message
rank: 756
score: 98.75709533691406
patch: out [ write ( $STRING$ ) ;
rank: 756
score: 98.70500946044922
patch: public void out ( ) ) ;
rank: 756
score: 98.68456268310547
patch: out . format ( $STRING$ ) ;
rank: 756
score: 98.39156668526786
patch: @ write ( $STRING$ ) ;
rank: 756
score: 96.64955647786458
patch: Service >
rank: 756
score: 95.03565470377605
patch: / Error
rank: 756
score: 93.88455200195312
patch: non
rank: 757
score: 98.75681559244792
patch: out . write ( $STRING$ write ) ;
rank: 757
score: 98.70421142578125
patch: public void out ( final String $STRING$ ) {
rank: 757
score: 98.38672746930804
patch: write . close ( ) ;
rank: 757
score: 95.03040568033855
patch: / catch
rank: 757
score: 94.65737915039062
patch: End
rank: 757
score: 93.87876892089844
patch: a
rank: 758
score: 98.81679958767361
patch: out . write ( float $STRING$ ) ;
rank: 758
score: 98.70319366455078
patch: void write ( int out ) ;
rank: 758
score: 98.38636997767857
patch: public void out ( ] ;
rank: 758
score: 96.64473470052083
patch: Interpreter >
rank: 758
score: 95.02555338541667
patch: void exit
rank: 758
score: 94.64126586914062
patch: For
rank: 759
score: 98.81586371527777
patch: out ) . write ( $STRING$ ) ;
rank: 759
score: 98.75617133246527
patch: void out . write ( String str )
rank: 759
score: 98.70233917236328
patch: void out ( int Number ) ;
rank: 759
score: 98.38558523995536
patch: public out ( ) $STRING$ ;
rank: 759
score: 96.6439921061198
patch: server >
rank: 759
score: 94.63917541503906
patch: Tree
rank: 759
score: 93.87105560302734
patch: state
rank: 760
score: 98.75528971354167
patch: out . write ( short $STRING$ ) ;
rank: 760
score: 98.38347516741071
patch: out . write out ) ;
rank: 760
score: 96.64365641276042
patch: page >
rank: 760
score: 94.61944580078125
patch: Response
rank: 760
score: 93.86419677734375
patch: plugin
rank: 761
score: 98.81422254774306
patch: out out . write ( chars ) ;
rank: 761
score: 98.7552490234375
patch: out . write ( ) throws Throwable ;
rank: 761
score: 98.70189666748047
patch: long out . write ( ) ;
rank: 761
score: 98.38326590401786
patch: public out ( ) out ;
rank: 761
score: 96.64237467447917
patch: global >
rank: 761
score: 94.61801147460938
patch: f
rank: 761
score: 93.86174011230469
patch: double
rank: 762
score: 98.81400553385417
patch: final out . write ( $STRING$ ) {
rank: 762
score: 98.7013931274414
patch: void out ( - 0 ) ;
rank: 762
score: 96.64188639322917
patch: empty >
rank: 762
score: 94.83677164713542
patch: !=
rank: 762
score: 94.61675262451172
patch: same
rank: 762
score: 93.85372924804688
patch: Remote
rank: 763
score: 98.7537841796875
patch: Thread out . write ( $STRING$ ) ;
rank: 763
score: 98.67770385742188
patch: public abstract out ( $STRING$ ) ;
rank: 763
score: 98.38242885044643
patch: out . write ( ; _
rank: 763
score: 96.64146931966145
patch: accept >
rank: 764
score: 98.81277465820312
patch: out . write ( $STRING$
rank: 764
score: 98.7530288696289
patch: out . write ( char ; )
rank: 764
score: 98.67723846435547
patch: out . decode ( $STRING$ ) ;
rank: 765
score: 98.75297037760417
patch: out . write ( $STRING$ Float ) ;
rank: 765
score: 98.69918060302734
patch: void write ( String Integer ) ;
rank: 765
score: 98.67401123046875
patch: public final out ( ) { ;
rank: 765
score: 98.37977905273438
patch: public abstract $STRING$ ;
rank: 765
score: 96.63961791992188
patch: Resources >
rank: 765
score: 94.6099853515625
patch: Input
rank: 765
score: 93.84564208984375
patch: Active
rank: 766
score: 98.75269911024306
patch: public out . write ( byte $STRING$ )
rank: 766
score: 98.69801548549107
patch: public float out ( ) ;
rank: 766
score: 98.6739730834961
patch: Iterator void out ( $STRING$ ) ;
rank: 766
score: 98.37799072265625
patch: out . write ) ;
rank: 766
score: 96.63883463541667
patch: top >
rank: 766
score: 94.60964965820312
patch: Handle
rank: 766
score: 94.51526641845703
patch: invoke
rank: 766
score: 93.8456039428711
patch: True
rank: 767
score: 98.80849880642361
patch: out . write ( int $STRING$ ) {
rank: 767
score: 98.75136990017361
patch: out . write ( $STRING$ + ( ;
rank: 767
score: 98.69720458984375
patch: void void out ( $STRING$ ) ;
rank: 767
score: 98.67090606689453
patch: public static out write ( ) ;
rank: 767
score: 96.63840738932292
patch: Temporary >
rank: 767
score: 93.84219360351562
patch: matches
rank: 768
score: 98.74873352050781
patch: out . write ( String $STRING$ )
rank: 768
score: 98.69693332248264
patch: public void write ( int $NUMBER$ ) {
rank: 768
score: 96.63821411132812
patch: Site >
rank: 768
score: 94.60612487792969
patch: URL
rank: 768
score: 93.83775329589844
patch: unmodifiable
rank: 769
score: 98.80801052517361
patch: public synchronized void write ( $STRING$ ) {
rank: 769
score: 98.6966781616211
patch: void out ( write ( ) ;
rank: 769
score: 98.66925048828125
patch: public static int out ( ) ;
rank: 769
score: 98.369140625
patch: $STRING$ out ( ) ;
rank: 769
score: 93.83750915527344
patch: Entity
rank: 770
score: 98.80474853515625
patch: public out . write ( $STRING$
rank: 770
score: 98.69619750976562
patch: boolean write ( String $STRING$ ) ;
rank: 770
score: 98.66767120361328
patch: protected void out ( ) { ;
rank: 770
score: 93.8353271484375
patch: use
rank: 771
score: 98.80303276909723
patch: public out . write ( long ch )
rank: 771
score: 98.6956787109375
patch: private public void out ( ) ;
rank: 771
score: 98.6666030883789
patch: String . [ ] . . ;
rank: 771
score: 98.36907958984375
patch: write ( out . ) ;
rank: 771
score: 96.63285319010417
patch: factory >
rank: 771
score: 94.39404296875
patch: send
rank: 771
score: 93.83108520507812
patch: descriptor
rank: 772
score: 98.69542585100446
patch: protected int out ( ) {
rank: 772
score: 98.66565704345703
patch: protected out . write ( char ;
rank: 772
score: 98.36848667689732
patch: out ( ) out ) ;
rank: 772
score: 96.63219197591145
patch: Core >
rank: 772
score: 94.5819320678711
patch: local
rank: 772
score: 93.83071899414062
patch: ATTR
rank: 773
score: 98.80200873480902
patch: static out . write . $STRING$ ) ;
rank: 773
score: 98.73668670654297
patch: public void out ( $STRING$ + ;
rank: 773
score: 98.6951171875
patch: public int write ( final String $STRING$ ) {
rank: 773
score: 98.66516876220703
patch: protected void out ( $STRING$ / ;
rank: 773
score: 98.36798095703125
patch: out ( ) ) ;
rank: 773
score: 96.62977091471355
patch: Peer >
rank: 773
score: 94.29434204101562
patch: Updatable
rank: 774
score: 98.80154418945312
patch: out $NUMBER$ write ( $STRING$ ) ;
rank: 774
score: 98.7296371459961
patch: out . write ( float ) ;
rank: 774
score: 98.66419219970703
patch: public synchronized void out ( $STRING$ ;
rank: 774
score: 98.36638532366071
patch: public out . write . ;
rank: 774
score: 96.62928263346355
patch: pre >
rank: 774
score: 94.56754302978516
patch: Local
rank: 775
score: 98.69376373291016
patch: void out ( + $STRING$ ) ;
rank: 775
score: 98.3660888671875
patch: public boolean out . $STRING$ ;
rank: 775
score: 96.6289774576823
patch: Selected >
rank: 775
score: 94.56397247314453
patch: Dialog
rank: 775
score: 93.82075500488281
patch: Concrete
rank: 776
score: 98.69278717041016
patch: void out write ( out ) ;
rank: 776
score: 98.66159057617188
patch: public void out ( final ) ;
rank: 776
score: 98.3609619140625
patch: write . write $STRING$ ) ;
rank: 776
score: 96.62886555989583
patch: Declared >
rank: 776
score: 94.55894470214844
patch: Builder
rank: 776
score: 93.8155517578125
patch: Int
rank: 777
score: 98.79963514539931
patch: public long out . write ( $STRING$ )
rank: 777
score: 98.69241333007812
patch: void out ( ; null ) ;
rank: 777
score: 98.35996791294643
patch: public out ( write ) ;
rank: 777
score: 96.6265360514323
patch: MULTI >
rank: 777
score: 94.55702209472656
patch: Source
rank: 777
score: 93.79635620117188
patch: from
rank: 778
score: 98.69139099121094
patch: void out ( int out ) ;
rank: 778
score: 98.35519845145089
patch: write ( byte $STRING$ ) ;
rank: 778
score: 96.6253662109375
patch: stack >
rank: 778
score: 94.55351257324219
patch: ?
rank: 778
score: 94.23231506347656
patch: IRI
rank: 778
score: 93.7958984375
patch: Current
rank: 779
score: 98.69125366210938
patch: public void out ( null ) ;
rank: 779
score: 98.6596908569336
patch: Action . write ( $STRING$ ) ;
rank: 779
score: 94.55259704589844
patch: ac
rank: 779
score: 93.79362487792969
patch: v
rank: 780
score: 98.71614074707031
patch: out . write ( ) throws ;
rank: 780
score: 98.69055786132813
patch: protected out . write ( ) ; null ;
rank: 780
score: 98.65512084960938
patch: out . write ( command ) ;
rank: 780
score: 98.35339965820313
patch: public out ) ;
rank: 780
score: 94.55052185058594
patch: class
rank: 780
score: 93.79283142089844
patch: Enabled
rank: 781
score: 98.7156753540039
patch: void out ( ) throws Exception ;
rank: 781
score: 98.69042205810547
patch: out . write ( $STRING$ ) ||
rank: 781
score: 98.65460968017578
patch: String out ( String $STRING$ ) ;
rank: 781
score: 98.35159737723214
patch: public out ( ) ) {
rank: 781
score: 96.61924235026042
patch: Checked >
rank: 781
score: 94.54904174804688
patch: Listener
rank: 781
score: 94.1922836303711
patch: Print
rank: 781
score: 93.78699493408203
patch: user
rank: 782
score: 98.71411895751953
patch: void out . write ( $STRING$ ;
rank: 782
score: 98.69035508897569
patch: out . write ( char 1 ) {
rank: 782
score: 98.65458679199219
patch: void out . write ( char ;
rank: 782
score: 98.35157993861607
patch: write ( ] ? ) ;
rank: 782
score: 96.61588541666667
patch: original >
rank: 782
score: 94.54531860351562
patch: Later
rank: 782
score: 93.77813720703125
patch: filter
rank: 783
score: 98.79480658637152
patch: boolean write . write ( $STRING$ ) ;
rank: 783
score: 98.35126604352679
patch: public out ( $STRING$ ) return
rank: 783
score: 96.6151835123698
patch: Build >
rank: 783
score: 94.54418182373047
patch: e
rank: 783
score: 93.77668762207031
patch: Running
rank: 784
score: 98.79460313585069
patch: public out ( $STRING$ + $STRING$ ) ;
rank: 784
score: 98.65097045898438
patch: out . write ( Boolean ) ;
rank: 784
score: 98.34814453125
patch: write ( ] $STRING$ ) {
rank: 784
score: 96.61257934570312
patch: Byte >
rank: 784
score: 94.70871988932292
patch: for catch
rank: 784
score: 94.54109954833984
patch: src
rank: 785
score: 98.65094757080078
patch: protected String out ( $STRING$ ) ;
rank: 785
score: 98.3477783203125
patch: public abstract write ( ) ;
rank: 785
score: 96.61167399088542
patch: Original >
rank: 785
score: 94.53810119628906
patch: Filter
rank: 785
score: 93.76554107666016
patch: Category
rank: 786
score: 98.70449393136161
patch: out . write ( Character ;
rank: 786
score: 98.68918185763889
patch: private void out ( String $STRING$ ) {
rank: 786
score: 98.65066528320312
patch: public synchronized out ( ) { ;
rank: 786
score: 98.34578450520833
patch: private out ( ) {
rank: 786
score: 96.60963948567708
patch: Id >
rank: 786
score: 94.53623962402344
patch: Sorted
rank: 786
score: 93.76229095458984
patch: Declared
rank: 787
score: 98.79170989990234
patch: out . write ( $STRING$ * ;
rank: 787
score: 98.650634765625
patch: public void out ( ? > ;
rank: 787
score: 98.34513636997768
patch: public out . ; ) ;
rank: 787
score: 96.60595703125
patch: Get >
rank: 788
score: 98.79006618923611
patch: out . write ( byte [ ) {
rank: 788
score: 98.70140838623047
patch: public out . write ( int ;
rank: 788
score: 98.68853149414062
patch: public out . write ( String Long ) {
rank: 788
score: 98.65047454833984
patch: public static write ( $STRING$ ) ;
rank: 788
score: 98.3450927734375
patch: public $STRING$ out ( ) ;
rank: 788
score: 94.52911376953125
patch: ex
rank: 788
score: 94.01933288574219
patch: Psi
rank: 788
score: 93.74800109863281
patch: schedule
rank: 789
score: 98.78803168402777
patch: out . write . write ( ) {
rank: 789
score: 98.69786834716797
patch: out [ ] out ( ) ;
rank: 789
score: 98.68827819824219
patch: public protected out ( ) { }
rank: 789
score: 98.65028381347656
patch: out . sleep ( $STRING$ ) ;
rank: 789
score: 98.34413655598958
patch: protected out ( ) {
rank: 789
score: 96.60482788085938
patch: Message >
rank: 789
score: 94.52456665039062
patch: Supported
rank: 790
score: 98.69573974609375
patch: public out . write ( int )
rank: 790
score: 98.68806457519531
patch: public / ] out ( ) ;
rank: 790
score: 98.64945983886719
patch: Object . get ( $STRING$ ) ;
rank: 790
score: 98.34315708705357
patch: $STRING$ write ( $STRING$ ) ;
rank: 790
score: 96.60398356119792
patch: Complete >
rank: 790
score: 94.52381896972656
patch: Menu
rank: 791
score: 98.78622097439236
patch: out . write ( char ch ) {
rank: 791
score: 98.68764241536458
patch: out . write ( Integer ch ) {
rank: 791
score: 98.34262520926339
patch: write ( ] * ) ;
rank: 791
score: 93.965087890625
patch: as
rank: 792
score: 98.78518337673611
patch: out . write ( long $STRING$ ) {
rank: 792
score: 98.68743218315973
patch: public void write ( final $STRING$ ) {
rank: 792
score: 98.64662170410156
patch: boolean . out ( $STRING$ ) ;
rank: 792
score: 98.3419189453125
patch: public out ( Exception ) throws
rank: 792
score: 96.6007080078125
patch: Filtered >
rank: 792
score: 94.6651102701823
patch: Sorted catch
rank: 792
score: 94.5210189819336
patch: Frame
rank: 792
score: 93.73805236816406
patch: >>
rank: 793
score: 98.68731689453125
patch: public static void write ( String 1 ) {
rank: 793
score: 96.60061645507812
patch: Example >
rank: 793
score: 94.66448974609375
patch: exit
rank: 793
score: 94.52079772949219
patch: Repository
rank: 793
score: 93.73503112792969
patch: num
rank: 794
score: 98.68974304199219
patch: out . write ( Writer ) ;
rank: 794
score: 98.68696812220982
patch: private boolean write ( ) ;
rank: 794
score: 98.6450424194336
patch: out . write ( i ) ;
rank: 794
score: 96.5982157389323
patch: Init >
rank: 794
score: 94.51514434814453
patch: update
rank: 794
score: 93.73236083984375
patch: singleton
rank: 795
score: 98.68829345703125
patch: out . write ( byte )
rank: 795
score: 98.64287567138672
patch: out . do ( $STRING$ ) ;
rank: 795
score: 98.33740234375
patch: out . out ( ) ;
rank: 795
score: 96.597412109375
patch: peer >
rank: 795
score: 93.85208129882812
patch: select
rank: 796
score: 98.68392944335938
patch: public out . write ( byte * ) {
rank: 796
score: 98.64053344726562
patch: public final void out ( $STRING$ ;
rank: 796
score: 98.33735002790179
patch: out ( Exception out ) ;
rank: 796
score: 96.5966796875
patch: config >
rank: 796
score: 94.65819295247395
patch: Security
rank: 796
score: 94.51300811767578
patch: Wizard
rank: 796
score: 93.72073364257812
patch: remaining
rank: 797
score: 98.78073459201389
patch: public out . write ( int out )
rank: 797
score: 98.68388366699219
patch: public void out ( ) return ;
rank: 797
score: 98.67980194091797
patch: void out ( ) { ; }
rank: 797
score: 98.63867950439453
patch: private out . write ( String ;
rank: 797
score: 98.32957967122395
patch: public ( $STRING$ ) {
rank: 797
score: 96.5966288248698
patch: editor >
rank: 797
score: 94.51172637939453
patch: Closed
rank: 797
score: 93.84526824951172
patch: Copy
rank: 798
score: 98.77877807617188
patch: public abstract out . write ) ;
rank: 798
score: 98.68367513020833
patch: public private out ( ) { ; }
rank: 798
score: 98.30804443359375
patch: public abstract ) ;
rank: 798
score: 96.59588623046875
patch: statements >
rank: 799
score: 98.29796346028645
patch: public out ( ) .
rank: 799
score: 96.5953369140625
patch: Table >
rank: 799
score: 94.65277099609375
patch: public this
rank: 799
score: 94.50845336914062
patch: Logging
rank: 799
score: 93.71620178222656
patch: Check
rank: 800
score: 98.68198067801339
patch: void out ( true ) ;
rank: 800
score: 98.63694763183594
patch: public double out ( $STRING$ ) ;
rank: 800
score: 98.29152221679688
patch: out ( ) {
rank: 800
score: 96.59442138671875
patch: deleted >
rank: 800
score: 94.50528717041016
patch: Millis
rank: 801
score: 98.77674018012152
patch: private out . write ( int ) {
rank: 801
score: 98.68037109375
patch: public void write ( String $STRING$ ) { ;
rank: 801
score: 98.66564178466797
patch: out [ ] write ( ) ;
rank: 801
score: 98.63690948486328
patch: public out ( $STRING$ ) { }
rank: 801
score: 98.28920491536458
patch: write . $STRING$ ) ;
rank: 801
score: 94.63625081380208
patch: fill
rank: 801
score: 93.80723571777344
patch: byte
rank: 801
score: 93.70323181152344
patch: status
rank: 802
score: 98.77596028645833
patch: protected out . write . $STRING$ ) ;
rank: 802
score: 98.68001883370536
patch: static void write ( ) ;
rank: 802
score: 98.28737386067708
patch: write out ( ) ;
rank: 802
score: 94.49909210205078
patch: Signature
rank: 802
score: 93.70101928710938
patch: session
rank: 803
score: 98.67890167236328
patch: / ] void out ( ) ;
rank: 803
score: 98.66419219970703
patch: out . write ( String ; ;
rank: 803
score: 98.632568359375
patch: String out ( ) { ;
rank: 803
score: 98.28036499023438
patch: public write . out ;
rank: 803
score: 96.59217325846355
patch: Local >
rank: 803
score: 94.62723795572917
patch: filter >
rank: 803
score: 93.78485870361328
patch: extends
rank: 803
score: 93.69454193115234
patch: error
rank: 804
score: 98.77396647135417
patch: public out . write ( int i )
rank: 804
score: 98.66242980957031
patch: public synchronized void out ( ) {
rank: 804
score: 98.63197326660156
patch: public void out ( $STRING$ out ;
rank: 804
score: 98.27499389648438
patch: public out . ; .
rank: 804
score: 96.59165445963542
patch: marker >
rank: 804
score: 94.49482727050781
patch: Conf
rank: 804
score: 93.69232940673828
patch: reset
rank: 805
score: 98.77384440104167
patch: private synchronized out . write ( $STRING$ )
rank: 805
score: 98.67803955078125
patch: private out ( ) { }
rank: 805
score: 98.63156127929688
patch: File . write ( $STRING$ ) ;
rank: 805
score: 98.2677001953125
patch: public write . ) ;
rank: 805
score: 96.59054565429688
patch: Refresh >
rank: 805
score: 94.62310791015625
patch: @ catch
rank: 805
score: 94.4930419921875
patch: If
rank: 805
score: 93.68861389160156
patch: short
rank: 806
score: 98.77223714192708
patch: protected synchronized out . write ( $STRING$ )
rank: 806
score: 98.67788260323661
patch: void void out ( ) ;
rank: 806
score: 98.65730285644531
patch: public void out ( int ) ;
rank: 806
score: 98.63124302455357
patch: public final out ( ) ;
rank: 806
score: 98.26475016276042
patch: $STRING$ ( $STRING$ ) ;
rank: 806
score: 96.58870442708333
patch: Operation >
rank: 806
score: 94.49087524414062
patch: Descriptor
rank: 806
score: 93.76951599121094
patch: Sequence
rank: 807
score: 98.76949055989583
patch: protected out . write ( int $STRING$ )
rank: 807
score: 98.6298828125
patch: public out . write ( Byte ;
rank: 807
score: 98.26219685872395
patch: public out ( ] ;
rank: 807
score: 96.58837890625
patch: io >
rank: 807
score: 94.48893737792969
patch: minor
rank: 807
score: 93.68072509765625
patch: suffix
rank: 808
score: 98.76882595486111
patch: out . write . long ( ) ;
rank: 808
score: 98.62980651855469
patch: void out ( $STRING$ ? ) ;
rank: 808
score: 98.25872802734375
patch: write ( ) { public
rank: 808
score: 96.58677164713542
patch: Outline >
rank: 808
score: 94.60513305664062
patch: protected return
rank: 808
score: 94.48828125
patch: node
rank: 808
score: 93.67931365966797
patch: offset
rank: 809
score: 98.76848687065973
patch: private out . write ( int $STRING$ )
rank: 809
score: 98.65509033203125
patch: public void out ( ) throws )
rank: 809
score: 98.25338745117188
patch: public out ;
rank: 809
score: 96.58645629882812
patch: Validation >
rank: 809
score: 94.48133850097656
patch: Location
rank: 809
score: 93.67811584472656
patch: enabled
rank: 810
score: 98.65235900878906
patch: out . write ( Object ) ;
rank: 810
score: 98.62838745117188
patch: public final void write ( ) ;
rank: 810
score: 98.2482401529948
patch: write ( ? ) ;
rank: 810
score: 96.58538818359375
patch: mark >
rank: 810
score: 94.60255940755208
patch: ret >
rank: 810
score: 94.48041534423828
patch: Resources
rank: 811
score: 98.67481825086806
patch: void out . write ( System . ;
rank: 811
score: 98.65068817138672
patch: out . write ( String name )
rank: 811
score: 98.24806722005208
patch: write ( ) ) ;
rank: 811
score: 96.58530680338542
patch: waiting >
rank: 811
score: 93.67323303222656
patch: increment
rank: 812
score: 98.67449340820312
patch: public int write ( int String $STRING$ ) {
rank: 812
score: 98.64945765904018
patch: out . write ( Byte ;
rank: 812
score: 98.62751007080078
patch: Integer . write ( $STRING$ ) ;
rank: 812
score: 98.23973388671875
patch: out . out ;
rank: 812
score: 94.47782897949219
patch: Config
rank: 812
score: 93.67224884033203
patch: MAX
rank: 813
score: 98.76458740234375
patch: private int out . write ( $STRING$ )
rank: 813
score: 98.67170061383929
patch: boolean out ( out ) ;
rank: 813
score: 98.64862823486328
patch: out . write ( byte value )
rank: 813
score: 98.2390848795573
patch: out ( Exception ) ;
rank: 813
score: 96.58070882161458
patch: Read >
rank: 813
score: 94.59005737304688
patch: transform >
rank: 813
score: 94.47543334960938
patch: properties
rank: 813
score: 93.74417114257812
patch: and
rank: 814
score: 98.76374816894531
patch: out out . write ( $STRING$ )
rank: 814
score: 98.67057291666667
patch: protected void out ( int i ) {
rank: 814
score: 98.64712960379464
patch: public int out ( $STRING$ )
rank: 814
score: 98.62521798270089
patch: public Object out ( ) {
rank: 814
score: 98.2249755859375
patch: public out ( ) )
rank: 814
score: 96.5799051920573
patch: element >
rank: 814
score: 94.47463989257812
patch: Tasks
rank: 814
score: 93.73387908935547
patch: Cursor
rank: 815
score: 98.64373016357422
patch: void out ( ) throws $STRING$ ;
rank: 815
score: 98.62442016601562
patch: Iterator out . write ( ) ;
rank: 815
score: 98.21771240234375
patch: public public $STRING$ ) ;
rank: 815
score: 96.57789103190105
patch: attribute >
rank: 815
score: 94.58660888671875
patch: public Char
rank: 815
score: 93.67097473144531
patch: False
rank: 816
score: 98.76320393880208
patch: out . write ( byte $STRING$ ) {
rank: 816
score: 98.66932678222656
patch: public private out ( ) { ;
rank: 816
score: 98.64192962646484
patch: out . write ( byte ; ;
rank: 816
score: 98.62437438964844
patch: public void out ( String char ;
rank: 816
score: 98.21741943359375
patch: out . $STRING$ ;
rank: 816
score: 94.47386932373047
patch: Out
rank: 816
score: 93.71763610839844
patch: E
rank: 817
score: 98.76194254557292
patch: protected int out . write ( $STRING$ )
rank: 817
score: 98.66888427734375
patch: public Object write ( ) ;
rank: 817
score: 98.64141082763672
patch: out . write ( int ch )
rank: 817
score: 98.62409973144531
patch: protected static out ( $STRING$ ) ;
rank: 817
score: 98.2110087076823
patch: write ( ) { ;
rank: 817
score: 96.57593790690105
patch: bad >
rank: 818
score: 98.66836547851562
patch: private void out ( ) { }
rank: 818
score: 98.62366485595703
patch: public static void write ( char ;
rank: 818
score: 98.21018473307292
patch: write ( write ) ;
rank: 818
score: 96.5736796061198
patch: byte >
rank: 818
score: 94.56557210286458
patch: proxy >
rank: 818
score: 93.65428161621094
patch: ignore
rank: 819
score: 98.66740112304687
patch: / ] out . write ( $STRING$ ) {
rank: 819
score: 98.63885498046875
patch: public abstract void out ( )
rank: 819
score: 98.6226806640625
patch: public String out ( $STRING$ ) {
rank: 819
score: 98.20067342122395
patch: public out $STRING$ ) ;
rank: 819
score: 96.57281494140625
patch: Resolve >
rank: 819
score: 94.4696044921875
patch: Encoding
rank: 820
score: 98.62249755859375
patch: Entry . write ( $STRING$ ) ;
rank: 820
score: 98.19882202148438
patch: out . $STRING$ out ;
rank: 820
score: 96.57265218098958
patch: Children >
rank: 820
score: 94.55487060546875
patch: in
rank: 820
score: 94.46656036376953
patch: tmp
rank: 820
score: 93.64408874511719
patch: Comparator
rank: 821
score: 98.18972778320312
patch: public ) ;
rank: 821
score: 96.57204182942708
patch: target >
rank: 821
score: 94.46478271484375
patch: Command
rank: 821
score: 93.6685791015625
patch: Trigger
rank: 821
score: 93.6375503540039
patch: Invocation
rank: 822
score: 98.66661071777344
patch: void out ( String ( ) ;
rank: 822
score: 98.63479614257812
patch: void out ( ) throws Throwable ;
rank: 822
score: 98.62002563476562
patch: String out ( ) {
rank: 822
score: 98.18452962239583
patch: out ( write ) ;
rank: 822
score: 96.57137044270833
patch: For >
rank: 822
score: 94.552734375
patch: for =
rank: 822
score: 94.46172332763672
patch: copy
rank: 822
score: 93.66381072998047
patch: Remove
rank: 823
score: 98.1836649576823
patch: out . out ) ;
rank: 823
score: 96.5703125
patch: result >
rank: 823
score: 94.55240885416667
patch: load
rank: 823
score: 94.45964050292969
patch: Base
rank: 823
score: 93.65870666503906
patch: augs
rank: 823
score: 93.63286590576172
patch: Z
rank: 824
score: 98.75513373480902
patch: public double out . write ( $STRING$ )
rank: 824
score: 98.66318766276042
patch: public out . write ( String * ;
rank: 824
score: 98.61748504638672
patch: public out . write ( double ;
rank: 824
score: 98.17124430338542
patch: out . . out ;
rank: 824
score: 96.56827799479167
patch: Reset >
rank: 824
score: 94.45864868164062
patch: With
rank: 824
score: 93.62237548828125
patch: My
rank: 825
score: 98.66099717881944
patch: public void out ( String 0 ) {
rank: 825
score: 98.16514078776042
patch: public boolean out . ;
rank: 825
score: 96.56760660807292
patch: Sample >
rank: 825
score: 94.45399475097656
patch: Parameter
rank: 825
score: 93.6450424194336
patch: lock
rank: 825
score: 93.62187194824219
patch: msg
rank: 826
score: 98.75322129991319
patch: out out . write ( $STRING$ ) {
rank: 826
score: 98.66002197265625
patch: public boolean write ( final String $STRING$ ) {
rank: 826
score: 98.15859985351562
patch: out . write out ;
rank: 826
score: 96.56655883789062
patch: Is >
rank: 826
score: 94.45036315917969
patch: And
rank: 826
score: 93.63623046875
patch: block
rank: 826
score: 93.62077331542969
patch: Method
rank: 827
score: 98.75321451822917
patch: public out . write ( long value )
rank: 827
score: 98.65989685058594
patch: void out ( int i ) {
rank: 827
score: 98.15854899088542
patch: out out ( ) ;
rank: 827
score: 96.56409708658855
patch: super >
rank: 827
score: 93.62007141113281
patch: output
rank: 828
score: 98.62230573381696
patch: public void out ( out )
rank: 828
score: 98.15475463867188
patch: $STRING$ ) ;
rank: 828
score: 96.5626729329427
patch: BORDER >
rank: 828
score: 94.43962097167969
patch: commit
rank: 828
score: 93.63381958007812
patch: Long
rank: 828
score: 93.61076354980469
patch: peek
rank: 829
score: 98.65850151909723
patch: public void out ( || ( ) {
rank: 829
score: 98.62088448660714
patch: out . write ( String )
rank: 829
score: 98.15325927734375
patch: out . write $STRING$ ;
rank: 829
score: 96.56203206380208
patch: Collision >
rank: 829
score: 94.43704223632812
patch: LOG
rank: 829
score: 93.62168884277344
patch: Swing
rank: 830
score: 98.74816131591797
patch: out . write ( int $STRING$ )
rank: 830
score: 98.65816921657986
patch: private void out ( ) ; null ;
rank: 830
score: 98.6090316772461
patch: public out out ( ) { ;
rank: 830
score: 98.143798828125
patch: out ( ) { ;
rank: 830
score: 96.56072998046875
patch: Cache >
rank: 830
score: 94.43675994873047
patch: path
rank: 830
score: 93.61749267578125
patch: Block
rank: 830
score: 93.60755920410156
patch: Effect
rank: 831
score: 98.65694851345486
patch: protected void out ( String $STRING$ ) {
rank: 831
score: 98.14170328776042
patch: public void $STRING$ ) ;
rank: 831
score: 96.55902099609375
patch: running >
rank: 831
score: 94.43490600585938
patch: cur
rank: 832
score: 98.65670437282986
patch: public void out ( int length ) {
rank: 832
score: 98.1396993001302
patch: public out ( $STRING$ )
rank: 832
score: 96.554931640625
patch: Handle >
rank: 832
score: 94.4312744140625
patch: Editor
rank: 832
score: 93.59919738769531
patch: dispose
rank: 832
score: 93.59705352783203
patch: Enumeration
rank: 833
score: 98.65662493024554
patch: public String write ( ) {
rank: 833
score: 98.1375732421875
patch: public out . . ;
rank: 833
score: 96.55434163411458
patch: use >
rank: 833
score: 94.4287109375
patch: Killed
rank: 833
score: 93.5960693359375
patch: Pragma
rank: 833
score: 93.59557342529297
patch: Open
rank: 834
score: 98.65657261439732
patch: void out ( String ) ;
rank: 834
score: 98.61812591552734
patch: out . write ( char ch )
rank: 834
score: 98.59427315848214
patch: out . write ( Integer ;
rank: 834
score: 98.1302490234375
patch: public abstract $STRING$ ) ;
rank: 834
score: 96.55014038085938
patch: Root >
rank: 834
score: 94.42843627929688
patch: Host
rank: 834
score: 93.7948989868164
patch: initialize
rank: 834
score: 93.59331512451172
patch: no
rank: 835
score: 98.5919189453125
patch: String out ( ) { }
rank: 835
score: 98.12992350260417
patch: public int ( ) {
rank: 835
score: 94.42803192138672
patch: Image
rank: 835
score: 93.58123779296875
patch: T
rank: 836
score: 98.72694396972656
patch: out . write ( BYTES ) ;
rank: 836
score: 98.59160505022321
patch: String . . . . ;
rank: 836
score: 96.54388427734375
patch: exit >
rank: 836
score: 94.42252349853516
patch: id
rank: 836
score: 93.58821105957031
patch: Nil
rank: 836
score: 93.57261657714844
patch: Safe
rank: 837
score: 98.65423583984375
patch: protected boolean write ( ) ;
rank: 837
score: 98.5899658203125
patch: out . clear ( ) ;
rank: 837
score: 98.12661743164062
patch: public out . $STRING$ )
rank: 837
score: 96.54331461588542
patch: folder >
rank: 837
score: 94.41883087158203
patch: random
rank: 837
score: 93.58821105957031
patch: Pair
rank: 838
score: 98.65352783203124
patch: public void write ( String Integer 1 ) {
rank: 838
score: 98.61137390136719
patch: out . write ( ) throws )
rank: 838
score: 98.58590262276786
patch: public String . . . ;
rank: 838
score: 98.11752319335938
patch: write . out ) ;
rank: 838
score: 94.41629028320312
patch: lar
rank: 838
score: 93.56449127197266
patch: TRUE
rank: 839
score: 98.65127999441964
patch: protected out ( ) { }
rank: 839
score: 98.11709594726562
patch: public public $STRING$ ) {
rank: 839
score: 96.54080200195312
patch: Select >
rank: 839
score: 94.4097900390625
patch: Attribute
rank: 839
score: 93.57754516601562
patch: Permission
rank: 840
score: 98.65086669921875
patch: public out . write ( $STRING$ ) { public
rank: 840
score: 98.58391462053571
patch: out out ( $STRING$ ) ;
rank: 840
score: 98.11476643880208
patch: ( out ; ) {
rank: 840
score: 96.54012044270833
patch: iterate >
rank: 840
score: 94.40498352050781
patch: impl
rank: 840
score: 93.57554626464844
patch: validate
rank: 840
score: 93.40184020996094
patch: Java
rank: 841
score: 98.71578216552734
patch: public out . write ( long ;
rank: 841
score: 98.64942932128906
patch: void out ( int 1 ) {
rank: 841
score: 98.60992431640625
patch: public abstract Object out ( ) ;
rank: 841
score: 98.11326090494792
patch: public $STRING$ ) ) ;
rank: 841
score: 93.570556640625
patch: Invalid
rank: 842
score: 98.71499633789062
patch: public out . write ( chars )
rank: 842
score: 98.64933776855469
patch: protected int out ( ) { }
rank: 842
score: 98.60935974121094
patch: void out ( ) throws ) ;
rank: 842
score: 98.57081821986607
patch: Object . write ( ) ;
rank: 842
score: 98.11318969726562
patch: public $STRING$ ) {
rank: 842
score: 96.53887939453125
patch: get instanceof
rank: 842
score: 93.57022094726562
patch: Phase
rank: 843
score: 98.7140121459961
patch: void out . write ( $STRING$ )
rank: 843
score: 98.57052176339286
patch: private static out ( ) ;
rank: 843
score: 98.11201985677083
patch: public synchronized $STRING$ ) ;
rank: 843
score: 96.5367940266927
patch: Assert >
rank: 843
score: 94.40093994140625
patch: Pane
rank: 844
score: 98.56917898995536
patch: public void out ( char ;
rank: 844
score: 98.11031087239583
patch: write ( $STRING$ ) throws
rank: 844
score: 96.53615315755208
patch: items >
rank: 845
score: 98.56805419921875
patch: String . [ ) ;
rank: 845
score: 98.1083475748698
patch: write ( ] byte ;
rank: 845
score: 96.53572591145833
patch: Active >
rank: 845
score: 94.39926147460938
patch: From
rank: 845
score: 93.56500244140625
patch: Connection
rank: 845
score: 93.53013610839844
patch: Read
rank: 846
score: 98.70587158203125
patch: public out . write ( long )
rank: 846
score: 98.64105224609375
patch: public String out ( ) { }
rank: 846
score: 98.55901227678571
patch: out . lock ( ) ;
rank: 846
score: 98.10821533203125
patch: out ( ; ) ;
rank: 846
score: 96.53517659505208
patch: Inet >
rank: 846
score: 94.39662170410156
patch: As
rank: 847
score: 98.64066772460937
patch: public int write . write ( $STRING$ ) {
rank: 847
score: 98.60089111328125
patch: public synchronized out . write ( )
rank: 847
score: 98.55855015345982
patch: String . . . ) ;
rank: 847
score: 98.107666015625
patch: public public out . ;
rank: 847
score: 96.5351053873698
patch: Field >
rank: 847
score: 93.5562973022461
patch: ps
rank: 848
score: 98.63739885602679
patch: private private out ( ) ;
rank: 848
score: 98.55667550223214
patch: private void out ( $STRING$ ;
rank: 848
score: 98.10360717773438
patch: write . write ) ;
rank: 848
score: 96.53159586588542
patch: alloc >
rank: 848
score: 94.37872314453125
patch: View
rank: 848
score: 93.54949951171875
patch: Managed
rank: 848
score: 93.50804138183594
patch: Buffered
rank: 849
score: 98.63573540581598
patch: public String write ( String $STRING$ ) {
rank: 849
score: 98.55403355189732
patch: out . close ( ) {
rank: 849
score: 98.10184326171876
patch: write . out ;
rank: 849
score: 94.37413024902344
patch: Directory
rank: 849
score: 93.5484390258789
patch: Properties
rank: 849
score: 93.49736785888672
patch: notify
rank: 849
score: 93.29367065429688
patch: setup
rank: 850
score: 98.63371930803571
patch: void . out ( ) ;
rank: 850
score: 98.0907491048177
patch: public out out ) ;
rank: 850
score: 96.53148396809895
patch: P >
rank: 850
score: 93.5477294921875
patch: merge
rank: 850
score: 93.49201965332031
patch: Create
rank: 851
score: 98.63353620256696
patch: int void write ( ) ;
rank: 851
score: 98.55125209263393
patch: public void out ( byte ;
rank: 851
score: 98.08816528320312
patch: out . $STRING$ $STRING$ ;
rank: 851
score: 96.52978515625
patch: prop >
rank: 851
score: 93.54708862304688
patch: op
rank: 852
score: 98.69840240478516
patch: out . write ( flush ) ;
rank: 852
score: 98.54800851004464
patch: public synchronized out ( ) {
rank: 852
score: 98.08541870117188
patch: public protected $STRING$ ) ;
rank: 852
score: 96.52964274088542
patch: Top >
rank: 852
score: 94.358154296875
patch: internal
rank: 852
score: 93.54222106933594
patch: n
rank: 853
score: 98.69341278076172
patch: public synchronized int out ( ) {
rank: 853
score: 98.58040073939732
patch: public boolean out ( $STRING$ )
rank: 853
score: 98.5478006998698
patch: String . . . ;
rank: 853
score: 98.0770263671875
patch: public static $STRING$ ) ;
rank: 853
score: 96.52540079752605
patch: Render >
rank: 853
score: 93.53484344482422
patch: previous
rank: 854
score: 98.69261169433594
patch: public out . write ( Byte )
rank: 854
score: 98.62726702008929
patch: int out ( out ) ;
rank: 854
score: 98.54661342075893
patch: public void out ( write ;
rank: 854
score: 98.07537841796875
patch: out . out . ;
rank: 854
score: 94.3576431274414
patch: re
rank: 854
score: 93.4616470336914
patch: float
rank: 855
score: 98.57806396484375
patch: out . write ( ;
rank: 855
score: 98.54445103236607
patch: out . do ( ) ;
rank: 855
score: 98.06917317708333
patch: public out out . ;
rank: 855
score: 96.5236307779948
patch: EOF >
rank: 855
score: 94.35006713867188
patch: Options
rank: 855
score: 93.50807189941406
patch: obj
rank: 855
score: 93.46037292480469
patch: dispatch
rank: 856
score: 98.62505231584821
patch: void out out ( ) ;
rank: 856
score: 98.57595825195312
patch: out . write ( )
rank: 856
score: 98.06685384114583
patch: public boolean ( ) {
rank: 856
score: 96.52306111653645
patch: parameter >
rank: 856
score: 94.34689331054688
patch: method
rank: 857
score: 98.62329779730902
patch: private void out . write ( ) {
rank: 857
score: 98.52029854910714
patch: protected static out ( ) ;
rank: 857
score: 98.06128946940105
patch: . write ( ) ;
rank: 857
score: 96.52254231770833
patch: validate >
rank: 857
score: 93.49121856689453
patch: apply
rank: 858
score: 98.62255859375
patch: protected void out ( ) ; null ;
rank: 858
score: 98.55247279575893
patch: public Object out ( $STRING$ )
rank: 858
score: 98.51953125
patch: out . delete ( ) ;
rank: 858
score: 98.0609842936198
patch: write ( byte ) ;
rank: 858
score: 94.34597778320312
patch: Support
rank: 859
score: 98.622314453125
patch: void out ( ? ) ;
rank: 859
score: 98.50974818638393
patch: public void out ( ? ;
rank: 859
score: 98.057373046875
patch: public void . . ;
rank: 859
score: 96.51576741536458
patch: found >
rank: 860
score: 98.62027413504464
patch: void out ( ) ) ;
rank: 860
score: 98.51800537109375
patch: public int write ( $STRING$ )
rank: 860
score: 98.50919015066964
patch: out ( ) { ; }
rank: 860
score: 98.05702718098958
patch: write ( str ) ;
rank: 860
score: 96.51571655273438
patch: delegate >
rank: 860
score: 94.34169006347656
patch: Marker
rank: 861
score: 98.61710030691964
patch: protected String out ( ) ;
rank: 861
score: 98.50788225446429
patch: public String out ( $STRING$ )
rank: 861
score: 98.50722249348958
patch: boolean out ( ) {
rank: 861
score: 98.03889770507813
patch: write . $STRING$ ;
rank: 861
score: 96.51451619466145
patch: elements >
rank: 861
score: 94.33589172363281
patch: Entry
rank: 862
score: 98.682373046875
patch: out . write . ( ) ;
rank: 862
score: 98.61546325683594
patch: void out ( String 1 ) {
rank: 862
score: 98.028662109375
patch: public static ) ;
rank: 862
score: 96.5133056640625
patch: prev >
rank: 862
score: 94.33193969726562
patch: repaint
rank: 862
score: 93.46189880371094
patch: char
rank: 862
score: 93.42728424072266
patch: wait
rank: 863
score: 98.60810198102679
patch: final . run ( ) ;
rank: 863
score: 98.00830688476563
patch: $STRING$ . out ;
rank: 863
score: 94.32998657226562
patch: Selected
rank: 863
score: 93.46062469482422
patch: Color
rank: 863
score: 93.42587280273438
patch: CaMeL
rank: 863
score: 93.09345245361328
patch: insert
rank: 864
score: 98.60599190848214
patch: this . write ( ) ;
rank: 864
score: 98.50341796875
patch: out . flush ( ) {
rank: 864
score: 98.00700073242187
patch: . . out ;
rank: 864
score: 96.51216634114583
patch: container >
rank: 864
score: 94.32989501953125
patch: Server
rank: 864
score: 93.45999145507812
patch: connection
rank: 864
score: 93.08038330078125
patch: Native
rank: 865
score: 98.67158508300781
patch: out . write ( chars ) {
rank: 865
score: 98.60382080078125
patch: private public out ( ) ;
rank: 865
score: 98.49928501674107
patch: long out ( $STRING$ ) ;
rank: 865
score: 97.995556640625
patch: public public $STRING$ ;
rank: 865
score: 96.51181030273438
patch: Key >
rank: 865
score: 94.3291015625
patch: Range
rank: 866
score: 98.6694107055664
patch: out . write ( long ) {
rank: 866
score: 98.60062953404018
patch: public long write ( ) ;
rank: 866
score: 97.9926528930664
patch: . out ;
rank: 866
score: 94.32768249511719
patch: Interrupted
rank: 866
score: 93.45358276367188
patch: DEBUG
rank: 866
score: 93.41838073730469
patch: stop
rank: 867
score: 98.59868512834821
patch: private int write ( ) {
rank: 867
score: 97.96954345703125
patch: public $STRING$ $STRING$ ;
rank: 867
score: 93.45101928710938
patch: c
rank: 867
score: 93.41136932373047
patch: writer
rank: 868
score: 98.66551862444196
patch: out . write ( Byte )
rank: 868
score: 98.59427315848214
patch: write ( int $STRING$ ) ;
rank: 868
score: 98.49448939732143
patch: String . [ ] . ;
rank: 868
score: 98.48353794642857
patch: public out . write ( ;
rank: 868
score: 97.95791625976562
patch: $STRING$ ( ) ;
rank: 868
score: 96.50916544596355
patch: Secure >
rank: 868
score: 94.32562255859375
patch: Space
rank: 868
score: 93.41127014160156
patch: Dimension
rank: 869
score: 98.66277313232422
patch: final out . write ( $STRING$ )
rank: 869
score: 98.48621477399554
patch: out . write ( name ;
rank: 869
score: 98.47408621651786
patch: out . write ( Object ;
rank: 869
score: 97.95734252929688
patch: public out $STRING$ ;
rank: 869
score: 96.50843302408855
patch: Qt >
rank: 869
score: 94.32555389404297
patch: Obj
rank: 869
score: 93.44160461425781
patch: line
rank: 869
score: 93.40673065185547
patch: Store
rank: 869
score: 93.02727508544922
patch: hash
rank: 870
score: 98.6612777709961
patch: out . write ( long $STRING$ )
rank: 870
score: 98.59066336495536
patch: protected private out ( ) ;
rank: 870
score: 98.48417445591518
patch: private boolean out ( ) {
rank: 870
score: 97.94645385742187
patch: public out ( )
rank: 870
score: 94.32518005371094
patch: dir
rank: 870
score: 93.4411849975586
patch: Configuration
rank: 871
score: 98.58882359095982
patch: boolean write ( out ) ;
rank: 871
score: 98.48398263113839
patch: private String out ( ) {
rank: 871
score: 98.46762520926339
patch: public void write ( $STRING$ )
rank: 871
score: 97.923779296875
patch: $STRING$ out . ;
rank: 871
score: 96.50738525390625
patch: service >
rank: 871
score: 94.31946563720703
patch: Formatter
rank: 871
score: 93.43995666503906
patch: NULL
rank: 872
score: 98.46419852120536
patch: out . write ( char )
rank: 872
score: 97.9139892578125
patch: write . ) ;
rank: 872
score: 96.50685628255208
patch: Analysis >
rank: 872
score: 92.98857116699219
patch: force
rank: 873
score: 98.58808244977679
patch: public T out ( ) {
rank: 873
score: 97.91337890625
patch: public protected $STRING$ ;
rank: 873
score: 96.50679524739583
patch: unregister >
rank: 874
score: 98.58416748046875
patch: abstract . write ( ) ;
rank: 874
score: 98.47672816685268
patch: void out ( write ) ;
rank: 874
score: 98.44852120535714
patch: write . write ( $STRING$ )
rank: 874
score: 97.91133422851563
patch: public static $STRING$ ;
rank: 874
score: 96.50522867838542
patch: location >
rank: 874
score: 94.316650390625
patch: Expression
rank: 875
score: 98.6528549194336
patch: out . write . write ( )
rank: 875
score: 98.58402797154018
patch: protected public out ( ) ;
rank: 875
score: 98.47487967354911
patch: protected void out ( $STRING$ ;
rank: 875
score: 97.8923095703125
patch: public ( ) ;
rank: 875
score: 96.50355021158855
patch: file >
rank: 875
score: 93.42689514160156
patch: Returns
rank: 876
score: 98.44331577845982
patch: public String write ( $STRING$ )
rank: 876
score: 97.88566589355469
patch: out . ;
rank: 876
score: 94.30767822265625
patch: Design
rank: 876
score: 92.91552734375
patch: Loaded
rank: 877
score: 98.65019226074219
patch: write . write ( $STRING$ ) {
rank: 877
score: 98.57687813895089
patch: public double write ( ) ;
rank: 877
score: 98.46213204520089
patch: String out ( out ) ;
rank: 877
score: 98.43084716796875
patch: long write ( $STRING$ ) ;
rank: 877
score: 97.86797485351562
patch: out . ) ;
rank: 877
score: 96.50001017252605
patch: IDE >
rank: 877
score: 93.37411499023438
patch: stream
rank: 878
score: 98.64981842041016
patch: public abstract boolean write ( ) ;
rank: 878
score: 98.4232686360677
patch: public Object out ( )
rank: 878
score: 97.83968505859374
patch: public out ) {
rank: 878
score: 96.49934895833333
patch: source >
rank: 878
score: 94.30564880371094
patch: text
rank: 878
score: 92.88656616210938
patch: Q
rank: 879
score: 98.5736083984375
patch: abstract void write ( ) ;
rank: 879
score: 98.45710100446429
patch: public long out ( ) {
rank: 879
score: 97.82996215820313
patch: public $STRING$ out ;
rank: 879
score: 96.4991455078125
patch: virtual >
rank: 879
score: 93.42071533203125
patch: Virtual
rank: 879
score: 93.37016296386719
patch: perform
rank: 880
score: 98.57312883649554
patch: private void write ( ) {
rank: 880
score: 97.80364379882812
patch: $STRING$ ) ) ;
rank: 880
score: 96.49629720052083
patch: Browser >
rank: 880
score: 94.30322265625
patch: include
rank: 881
score: 97.80128173828125
patch: public . out ;
rank: 881
score: 96.49591064453125
patch: warn >
rank: 881
score: 94.3002700805664
patch: code
rank: 881
score: 93.41828918457031
patch: handler
rank: 882
score: 98.56877790178571
patch: public Boolean out ( ) ;
rank: 882
score: 97.78425903320313
patch: $STRING$ ( ) {
rank: 882
score: 96.49546305338542
patch: pbuffer >
rank: 882
score: 94.30026245117188
patch: Only
rank: 882
score: 93.41278839111328
patch: model
rank: 882
score: 93.35044860839844
patch: Get
rank: 883
score: 98.6455307006836
patch: out . write ( str ) {
rank: 883
score: 98.45171247209821
patch: public void out ( Integer ;
rank: 883
score: 98.41477748325893
patch: public void write ( $STRING$ ;
rank: 883
score: 97.78128662109376
patch: public void . ;
rank: 883
score: 96.49503580729167
patch: notify >
rank: 883
score: 94.29930114746094
patch: Bit
rank: 883
score: 93.4107666015625
patch: Num
rank: 884
score: 98.64506022135417
patch: public int out ( )
rank: 884
score: 98.56664167131696
patch: void out ( ( ) ;
rank: 884
score: 98.45085797991071
patch: protected String out ( ) {
rank: 884
score: 97.7785888671875
patch: out ( Exception ;
rank: 884
score: 96.4945780436198
patch: Names >
rank: 884
score: 93.40908813476562
patch: gly
rank: 884
score: 92.84959411621094
patch: Xml
rank: 885
score: 98.64445277622768
patch: public abstract out . write ;
rank: 885
score: 97.77321166992188
patch: public final $STRING$ ;
rank: 885
score: 96.49407958984375
patch: resource >
rank: 885
score: 94.2947998046875
patch: build
rank: 886
score: 98.64368438720703
patch: public abstract void write ( ) {
rank: 886
score: 98.44796316964286
patch: ? out : $STRING$ ) ;
rank: 886
score: 97.76859741210937
patch: ( $STRING$ ) ;
rank: 886
score: 96.4934590657552
patch: Mapping >
rank: 886
score: 94.29208374023438
patch: Field
rank: 886
score: 93.40605163574219
patch: Module
rank: 887
score: 98.64276885986328
patch: boolean out . write ( $STRING$ )
rank: 887
score: 98.5638427734375
patch: void out write ( ) ;
rank: 887
score: 98.4478251139323
patch: out ( ) { }
rank: 887
score: 97.75811157226562
patch: . . $STRING$ ;
rank: 887
score: 96.49343872070312
patch: sb >
rank: 887
score: 93.32939147949219
patch: <=
rank: 887
score: 92.82234191894531
patch: Vcs
rank: 888
score: 98.56273542131696
patch: protected int write ( ) {
rank: 888
score: 98.44711739676339
patch: protected boolean out ( ) {
rank: 888
score: 98.38947405133929
patch: Object write ( $STRING$ ) ;
rank: 888
score: 97.7529541015625
patch: public public ) {
rank: 888
score: 96.49102783203125
patch: Binding >
rank: 888
score: 94.2818603515625
patch: Parser
rank: 888
score: 92.82159423828125
patch: drop
rank: 889
score: 98.5616455078125
patch: boolean void out ( ) ;
rank: 889
score: 98.4461669921875
patch: String . . ;
rank: 889
score: 97.7326904296875
patch: $STRING$ out ) ;
rank: 889
score: 96.49045817057292
patch: connection >
rank: 889
score: 93.40038299560547
patch: Problem
rank: 889
score: 93.31849670410156
patch: SAX
rank: 889
score: 92.8155517578125
patch: convert
rank: 890
score: 98.63329315185547
patch: public write . write ( $STRING$ )
rank: 890
score: 98.54781668526786
patch: XML . write ( ) ;
rank: 890
score: 98.44553920200893
patch: final out ( $STRING$ ) ;
rank: 890
score: 97.722314453125
patch: public int . ;
rank: 890
score: 96.49041748046875
patch: sync >
rank: 890
score: 94.27638244628906
patch: all
rank: 890
score: 93.39686584472656
patch: Messaging
rank: 890
score: 92.80901336669922
patch: Domain
rank: 891
score: 98.54745919363839
patch: write ( String 1 ) ;
rank: 891
score: 97.71924438476563
patch: public protected ) {
rank: 891
score: 96.48946126302083
patch: test >
rank: 891
score: 93.31493377685547
patch: Position
rank: 892
score: 98.54630824497768
patch: public Boolean write ( ) ;
rank: 892
score: 98.44314139229911
patch: out . stop ( ) ;
rank: 892
score: 97.7150634765625
patch: ( out ) ;
rank: 892
score: 96.48890177408855
patch: api >
rank: 892
score: 94.2734375
patch: y
rank: 892
score: 93.3031005859375
patch: Equals
rank: 893
score: 98.54010009765625
patch: public float write ( ) ;
rank: 893
score: 97.70880737304688
patch: public out out ;
rank: 893
score: 96.48799641927083
patch: Lock >
rank: 893
score: 94.27031707763672
patch: prop
rank: 893
score: 93.39190673828125
patch: Prop
rank: 894
score: 98.43756103515625
patch: String . $NUMBER$ $STRING$ ) ;
rank: 894
score: 98.36712646484375
patch: public boolean out ( )
rank: 894
score: 97.70380859375
patch: $STRING$ . $STRING$ ;
rank: 894
score: 96.48775227864583
patch: Max >
rank: 894
score: 94.27008819580078
patch: Reference
rank: 894
score: 93.38734436035156
patch: property
rank: 894
score: 93.27774810791016
patch: Disposer
rank: 895
score: 98.43732561383929
patch: out . next ( ) ;
rank: 895
score: 98.35903930664062
patch: public void out ( $STRING$
rank: 895
score: 97.69725036621094
patch: public $STRING$ )
rank: 895
score: 96.48775227864583
patch: projects >
rank: 895
score: 94.26715087890625
patch: Stream
rank: 895
score: 93.38579559326172
patch: fail
rank: 895
score: 92.71015167236328
patch: Search
rank: 896
score: 98.53886195591518
patch: m . write ( ) ;
rank: 896
score: 98.43230329241071
patch: void out ( $STRING$ / ;
rank: 896
score: 98.32113647460938
patch: public String out ( )
rank: 896
score: 97.690869140625
patch: private $STRING$ ) ;
rank: 896
score: 96.48722330729167
patch: Editor >
rank: 896
score: 94.26295471191406
patch: FS
rank: 896
score: 93.38304138183594
patch: Failure
rank: 897
score: 97.6880615234375
patch: private ( ) {
rank: 897
score: 96.48583984375
patch: Supported >
rank: 897
score: 94.26091003417969
patch: Gen
rank: 897
score: 93.38117980957031
patch: Driver
rank: 897
score: 92.68077087402344
patch: HTML
rank: 898
score: 98.53490339006696
patch: synchronized void write ( ) ;
rank: 898
score: 98.43000139508929
patch: public void out ( out ;
rank: 898
score: 98.27039591471355
patch: ( ) { ; }
rank: 898
score: 97.6865234375
patch: public / ;
rank: 898
score: 96.48423258463542
patch: Collection >
rank: 899
score: 98.53236607142857
patch: int . run ( ) ;
rank: 899
score: 97.68614501953125
patch: public out . )
rank: 899
score: 96.4842020670573
patch: Defined >
rank: 899
score: 93.36223602294922
patch: Dataflow
rank: 900
score: 98.42752511160714
patch: out . read ( ) ;
rank: 900
score: 97.6734130859375
patch: public ) ) ;
rank: 900
score: 96.48368326822917
patch: valid >
rank: 900
score: 93.36085510253906
patch: project
rank: 901
score: 97.67230224609375
patch: public ) . ;
rank: 901
score: 93.36003112792969
patch: event
rank: 902
score: 98.17837524414062
patch: void out ( $STRING$ )
rank: 902
score: 97.6715576171875
patch: public public ) ;
rank: 902
score: 96.48067220052083
patch: Target >
rank: 902
score: 94.2498779296875
patch: Description
rank: 902
score: 92.64925384521484
patch: Application
rank: 903
score: 98.52655029296875
patch: int . out ( ) ;
rank: 903
score: 98.41661580403645
patch: public String . . ;
rank: 903
score: 98.15885416666667
patch: public String ( ) {
rank: 903
score: 97.66192626953125
patch: $STRING$ ;
rank: 903
score: 96.47853597005208
patch: dispose >
rank: 903
score: 93.35357666015625
patch: Elem
rank: 903
score: 93.26325988769531
patch: Bucket
rank: 903
score: 92.61979675292969
patch: service
rank: 904
score: 98.55759102957589
patch: out . write ( chars )
rank: 904
score: 98.5263671875
patch: public int ( ) ;
rank: 904
score: 98.39609781901042
patch: public out [ ] ;
rank: 904
score: 97.66049194335938
patch: out ) ;
rank: 904
score: 93.35325622558594
patch: Fatal
rank: 904
score: 93.258544921875
patch: scanpos
rank: 904
score: 92.61726379394531
patch: post
rank: 905
score: 98.51991489955357
patch: void write ( String ) ;
rank: 905
score: 98.38695271809895
patch: Object out ( ) {
rank: 905
score: 97.645166015625
patch: public synchronized ) ;
rank: 905
score: 96.47691853841145
patch: Z >
rank: 905
score: 94.22563171386719
patch: Resource
rank: 905
score: 93.25440979003906
patch: reader
rank: 906
score: 98.51947021484375
patch: String write ( $STRING$ ) ;
rank: 906
score: 97.64480590820312
patch: protected $STRING$ ) ;
rank: 906
score: 96.47383626302083
patch: bind >
rank: 906
score: 93.24754333496094
patch: reload
rank: 907
score: 98.51859828404018
patch: public void out ( ) &&
rank: 907
score: 98.31783040364583
patch: ? out : $STRING$ ;
rank: 907
score: 98.0689188639323
patch: out . write ( out
rank: 907
score: 97.64200439453126
patch: protected ( ) {
rank: 907
score: 96.47373453776042
patch: dim >
rank: 907
score: 94.21736145019531
patch: refresh
rank: 907
score: 93.24607849121094
patch: NS
rank: 907
score: 92.58242797851562
patch: Top
rank: 908
score: 98.51763044084821
patch: public T write ( ) ;
rank: 908
score: 98.05137125651042
patch: Collection out ( ) ;
rank: 908
score: 97.640625
patch: public . $STRING$ ;
rank: 908
score: 96.47088623046875
patch: Setup >
rank: 908
score: 93.24380493164062
patch: before
rank: 908
score: 92.57825469970703
patch: Already
rank: 909
score: 98.54566301618304
patch: private out . write ( )
rank: 909
score: 98.5174051920573
patch: double out ( ) ;
rank: 909
score: 98.0511474609375
patch: Iterator out ( ) ;
rank: 909
score: 97.64022216796874
patch: public private $STRING$ ;
rank: 909
score: 96.46974690755208
patch: Reference >
rank: 909
score: 92.57817077636719
patch: populate
rank: 910
score: 98.51559884207589
patch: private abstract out ( ) ;
rank: 910
score: 98.04791259765625
patch: protected void out ( )
rank: 910
score: 97.63350219726563
patch: . out ) ;
rank: 910
score: 96.46732584635417
patch: Prepared >
rank: 910
score: 94.2109375
patch: Cause
rank: 910
score: 92.57771301269531
patch: External
rank: 911
score: 98.54053606305804
patch: private out . write ( $STRING$
rank: 911
score: 98.04442138671875
patch: void out ( )
rank: 911
score: 97.6198486328125
patch: public ) out ;
rank: 911
score: 96.46682739257812
patch: Workbench >
rank: 911
score: 94.20943450927734
patch: field
rank: 911
score: 93.22917175292969
patch: Socket
rank: 911
score: 92.55793762207031
patch: Async
rank: 912
score: 98.53673444475446
patch: protected out . write ( $STRING$
rank: 912
score: 98.51380266462054
patch: private protected out ( ) ;
rank: 912
score: 98.27128092447917
patch: public static out ) ;
rank: 912
score: 98.03121948242188
patch: public out [ ) ;
rank: 912
score: 97.61148071289062
patch: public static ) {
rank: 912
score: 96.46484375
patch: Named >
rank: 912
score: 94.20748901367188
patch: native
rank: 913
score: 98.51363699776786
patch: protected abstract out ( ) ;
rank: 913
score: 98.02345784505208
patch: private void out ( )
rank: 913
score: 97.55006408691406
patch: private $STRING$ ;
rank: 913
score: 96.46307373046875
patch: Execution >
rank: 913
score: 94.20697784423828
patch: break
rank: 913
score: 93.32030487060547
patch: Internal
rank: 913
score: 92.55645751953125
patch: Parsed
rank: 914
score: 98.51312255859375
patch: final . write ( ) ;
rank: 914
score: 98.25083414713542
patch: public static ) { ;
rank: 914
score: 98.02245076497395
patch: public void out ( ;
rank: 914
score: 97.5434341430664
patch: public ) .
rank: 914
score: 96.46181233723958
patch: Extended >
rank: 914
score: 94.20011901855469
patch: iter
rank: 914
score: 92.55097961425781
patch: General
rank: 915
score: 98.51254708426339
patch: long . write ( ) ;
rank: 915
score: 98.24322509765625
patch: int out ( ) {
rank: 915
score: 98.02054850260417
patch: public String ( ) ;
rank: 915
score: 97.52001953125
patch: . . ;
rank: 915
score: 96.45923868815105
patch: end >
rank: 916
score: 98.51879010881696
patch: protected out . write ( )
rank: 916
score: 98.22864786783855
patch: ? out : out ;
rank: 916
score: 97.48329162597656
patch: $STRING$ out ;
rank: 916
score: 94.1888427734375
patch: first
rank: 916
score: 93.30892944335938
patch: Var
rank: 916
score: 92.54049682617188
patch: ensure
rank: 917
score: 98.51028006417411
patch: private out ( out ) ;
rank: 917
score: 98.0167948404948
patch: public void write ( $STRING$
rank: 917
score: 97.46194458007812
patch: protected $STRING$ ;
rank: 917
score: 96.45839436848958
patch: Navigator >
rank: 917
score: 93.30409240722656
patch: Notification
rank: 918
score: 98.50998360770089
patch: int write ( out ) ;
rank: 918
score: 98.22421264648438
patch: public synchronized out ) ;
rank: 918
score: 97.99446614583333
patch: out [ ( ) ;
rank: 918
score: 97.461181640625
patch: $STRING$ . ;
rank: 918
score: 96.4580790201823
patch: Domain >
rank: 918
score: 94.18669891357422
patch: cache
rank: 918
score: 93.30343627929688
patch: verify
rank: 918
score: 93.18704223632812
patch: loop
rank: 918
score: 92.51699829101562
patch: accept
rank: 919
score: 98.50778198242188
patch: String write ( ) ;
rank: 919
score: 98.2219746907552
patch: String . $NUMBER$ ) ;
rank: 919
score: 97.43529256184895
patch: ) ;
rank: 919
score: 96.45775349934895
patch: Post >
rank: 919
score: 94.18180847167969
patch: Run
rank: 919
score: 92.51437377929688
patch: complete
rank: 920
score: 98.49147251674107
patch: out . write ( out )
rank: 920
score: 97.42393493652344
patch: ( ) ;
rank: 920
score: 94.17926025390625
patch: Non
rank: 921
score: 98.50252859933036
patch: public double out ( ) {
rank: 921
score: 98.17862955729167
patch: public out ( / ;
rank: 921
score: 97.98118082682292
patch: public < T ) ;
rank: 921
score: 97.41997528076172
patch: private ) ;
rank: 921
score: 94.17901611328125
patch: Document
rank: 921
score: 93.289306640625
patch: Database
rank: 921
score: 93.18487548828125
patch: statement
rank: 922
score: 98.500732421875
patch: public float out ( ) {
rank: 922
score: 97.97921752929688
patch: public void write ( )
rank: 922
score: 97.41434478759766
patch: protected ) ;
rank: 922
score: 94.17527770996094
patch: Reporter
rank: 923
score: 98.4967041015625
patch: public int write ( out ;
rank: 923
score: 98.16922607421876
patch: String . [ ;
rank: 923
score: 97.97708129882812
patch: public long out ( )
rank: 923
score: 97.40807342529297
patch: public ) {
rank: 923
score: 93.17820739746094
patch: Main
rank: 924
score: 98.16538492838542
patch: String . . ) ;
rank: 924
score: 97.38314056396484
patch: $STRING$ $STRING$ ;
rank: 924
score: 94.1677017211914
patch: Helper
rank: 925
score: 98.1630859375
patch: int . [ ) ;
rank: 925
score: 97.9726318359375
patch: Object out ( )
rank: 925
score: 97.3440933227539
patch: public . ;
rank: 925
score: 94.16703796386719
patch: test
rank: 925
score: 93.27555847167969
patch: context
rank: 925
score: 92.48048400878906
patch: Verify
rank: 926
score: 97.9482177734375
patch: public void ) ;
rank: 926
score: 97.32809448242188
patch: ( ) {
rank: 927
score: 98.48134068080357
patch: out . write ( str )
rank: 927
score: 98.44307861328124
patch: void out ( ||
rank: 927
score: 97.90767211914063
patch: out [ ) ;
rank: 927
score: 97.31306457519531
patch: public abstract ;
rank: 927
score: 94.16412353515625
patch: Mgr
rank: 927
score: 93.27130126953125
patch: prev
rank: 928
score: 98.47923932756696
patch: public static out . write ;
rank: 928
score: 98.4131368001302
patch: float out ( ) ;
rank: 928
score: 97.90264892578125
patch: public String ) ;
rank: 928
score: 97.31024169921875
patch: . $STRING$ ;
rank: 928
score: 94.16305541992188
patch: exception
rank: 928
score: 93.26931762695312
patch: calculate
rank: 928
score: 93.16813659667969
patch: Statement
rank: 929
score: 98.4016621907552
patch: void $STRING$ ( ) ;
rank: 929
score: 98.11572265625
patch: String . [ ] ;
rank: 929
score: 97.30671691894531
patch: public void ;
rank: 929
score: 92.46546173095703
patch: define
rank: 930
score: 97.84072875976562
patch: public int ) ;
rank: 930
score: 97.3035888671875
patch: out ( )
rank: 930
score: 94.1557846069336
patch: Msg
rank: 930
score: 92.4623031616211
patch: Cached
rank: 931
score: 98.39243570963542
patch: public void out ( ?
rank: 931
score: 98.106201171875
patch: String static ( ) ;
rank: 931
score: 97.2520751953125
patch: public * ;
rank: 931
score: 94.1545639038086
patch: encoding
rank: 932
score: 98.38853963216145
patch: public T ( ) ;
rank: 932
score: 97.23023223876953
patch: public int ;
rank: 932
score: 94.1490707397461
patch: Address
rank: 932
score: 93.25650024414062
patch: match
rank: 933
score: 98.0629150390625
patch: public static out ;
rank: 933
score: 97.20696258544922
patch: private out ;
rank: 933
score: 95.5060806274414
patch: super
rank: 933
score: 93.25344848632812
patch: rs
rank: 933
score: 93.154052734375
patch: acquire
rank: 933
score: 92.4490966796875
patch: Normal
rank: 934
score: 98.46562848772321
patch: public abstract void write ( )
rank: 934
score: 98.38245646158855
patch: public T ( ) {
rank: 934
score: 97.78228149414062
patch: ( ) { }
rank: 934
score: 97.20603434244792
patch: out ;
rank: 934
score: 93.25001525878906
patch: parameter
rank: 935
score: 97.9519287109375
patch: / * ] ;
rank: 935
score: 97.16802215576172
patch: write . ;
rank: 935
score: 95.4962158203125
patch: Gui
rank: 935
score: 94.14514923095703
patch: Panel
rank: 935
score: 92.43638610839844
patch: move
rank: 936
score: 98.37782592773438
patch: int ( ) ;
rank: 936
score: 97.937158203125
patch: String . ) ;
rank: 936
score: 97.114013671875
patch: public / )
rank: 936
score: 94.14328002929688
patch: lookup
rank: 936
score: 92.43302917480469
patch: ATT
rank: 937
score: 98.36661783854167
patch: long write ( ) ;
rank: 937
score: 97.92989501953124
patch: public synchronized out ;
rank: 937
score: 97.70894165039063
patch: . . . ;
rank: 937
score: 97.10121154785156
patch: ) ) ;
rank: 937
score: 94.14228820800781
patch: address
rank: 938
score: 98.3634033203125
patch: Object write ( ) ;
rank: 938
score: 97.89910888671875
patch: public String . ;
rank: 938
score: 97.10115051269531
patch: . ) ;
rank: 938
score: 94.14044189453125
patch: table
rank: 938
score: 92.42530822753906
patch: configure
rank: 939
score: 98.35563151041667
patch: void ( out ) ;
rank: 939
score: 97.88322143554687
patch: / * out ;
rank: 939
score: 97.0941162109375
patch: protected out ;
rank: 939
score: 94.13900756835938
patch: clazz
rank: 939
score: 93.23017883300781
patch: Single
rank: 939
score: 93.12733459472656
patch: Sys
rank: 940
score: 98.37157592773437
patch: out . write ;
rank: 940
score: 98.34983520507812
patch: void ( ) ;
rank: 940
score: 97.08689880371094
patch: / out ;
rank: 940
score: 94.13874816894531
patch: Report
rank: 940
score: 93.2284927368164
patch: position
rank: 941
score: 97.07881164550781
patch: abstract out ;
rank: 941
score: 94.135498046875
patch: Tag
rank: 942
score: 97.85123291015626
patch: out [ ] ;
rank: 942
score: 97.61217651367187
patch: public byte ) ;
rank: 942
score: 97.05851745605469
patch: out out ;
rank: 942
score: 95.40644836425781
patch: UI
rank: 942
score: 94.13481140136719
patch: Renderer
rank: 942
score: 93.11683654785156
patch: Augmentations
rank: 942
score: 92.38409423828125
patch: switch
rank: 943
score: 98.29934692382812
patch: void out ( out ;
rank: 943
score: 97.84615478515624
patch: String . $NUMBER$ ;
rank: 943
score: 97.04536437988281
patch: public static ;
rank: 943
score: 94.13381958007812
patch: Loader
rank: 943
score: 92.38363647460938
patch: mark
rank: 944
score: 98.2975362141927
patch: protected void out ( ?
rank: 944
score: 97.0424575805664
patch: out $STRING$ ;
rank: 944
score: 93.21511840820312
patch: an
rank: 944
score: 93.10897827148438
patch: Call
rank: 944
score: 92.38272094726562
patch: begin
rank: 945
score: 98.29458618164062
patch: public out ; null ;
rank: 945
score: 97.57843017578125
patch: public long ) ;
rank: 945
score: 97.03248596191406
patch: public ; .
rank: 945
score: 94.13124084472656
patch: root
rank: 945
score: 93.2118911743164
patch: Axis
rank: 945
score: 92.38148498535156
patch: activate
rank: 946
score: 98.291015625
patch: void write ( ) {
rank: 946
score: 97.573681640625
patch: boolean out ( )
rank: 946
score: 97.00069427490234
patch: public ( )
rank: 946
score: 93.21068572998047
patch: sb
rank: 946
score: 92.37080383300781
patch: AS
rank: 947
score: 98.27943929036458
patch: / ; ( ) ;
rank: 947
score: 98.26598103841145
patch: out out ( ) {
rank: 947
score: 97.77830200195312
patch: / * $STRING$ ;
rank: 947
score: 97.57078247070312
patch: public < ) ;
rank: 947
score: 96.99642181396484
patch: public ) _
rank: 947
score: 94.12828063964844
patch: password
rank: 947
score: 93.20304870605469
patch: at
rank: 947
score: 93.107421875
patch: Scheduler
rank: 947
score: 92.36845397949219
patch: operation
rank: 948
score: 97.77819213867187
patch: / * ) ;
rank: 948
score: 96.98886108398438
patch: ) out ;
rank: 948
score: 94.12818908691406
patch: thread
rank: 948
score: 93.19554138183594
patch: IC
rank: 948
score: 93.1015625
patch: Connected
rank: 949
score: 98.27869873046875
patch: void out ( ;
rank: 949
score: 98.25537109375
patch: public boolean write ( )
rank: 949
score: 97.7577896118164
patch: String . ;
rank: 949
score: 97.56163330078125
patch: public double ) ;
rank: 949
score: 96.98257446289062
patch: write ) ;
rank: 949
score: 93.08126068115234
patch: Mime
rank: 950
score: 98.27794392903645
patch: write ( Object ) ;
rank: 950
score: 97.7478515625
patch: boolean . . ;
rank: 950
score: 97.56136474609374
patch: ( int ) ;
rank: 950
score: 96.95687866210938
patch: public char ;
rank: 950
score: 94.12754821777344
patch: Messages
rank: 950
score: 93.18672180175781
patch: unregister
rank: 950
score: 93.07412719726562
patch: Client
rank: 951
score: 98.27187093098958
patch: final out ( ) ;
rank: 951
score: 98.24979654947917
patch: out $NUMBER$ ( ) ;
rank: 951
score: 97.74476318359375
patch: String static ) ;
rank: 951
score: 97.53798217773438
patch: public Long ) ;
rank: 951
score: 94.123779296875
patch: Byte
rank: 951
score: 92.34562683105469
patch: Basic
rank: 952
score: 98.26951090494792
patch: public ( out ) ;
rank: 952
score: 97.73812866210938
patch: public static / ;
rank: 952
score: 97.5379638671875
patch: String out ( )
rank: 952
score: 96.94175720214844
patch: public ) *
rank: 952
score: 94.12223815917969
patch: A
rank: 952
score: 93.17552185058594
patch: Bean
rank: 952
score: 93.06843566894531
patch: Bytes
rank: 952
score: 92.34559631347656
patch: Sealed
rank: 953
score: 98.26888020833333
patch: public void ( ) ;
rank: 953
score: 97.53118286132812
patch: public String ( )
rank: 953
score: 96.93450164794922
patch: ( ) void
rank: 953
score: 94.12151336669922
patch: resolve
rank: 954
score: 98.24202473958333
patch: out $NUMBER$ ( ) {
rank: 954
score: 98.23597717285156
patch: final ) ;
rank: 954
score: 97.52823486328126
patch: public boolean ) ;
rank: 954
score: 96.93048095703125
patch: public final ;
rank: 954
score: 94.11721801757812
patch: X
rank: 954
score: 93.17239379882812
patch: Warn
rank: 954
score: 93.06549072265625
patch: fold
rank: 955
score: 98.205078125
patch: void out ( &&
rank: 955
score: 97.71529541015624
patch: / * ? ;
rank: 955
score: 96.92849731445312
patch: public byte ;
rank: 955
score: 94.11160278320312
patch: Selection
rank: 955
score: 93.17178344726562
patch: condition
rank: 955
score: 92.33268737792969
patch: store
rank: 956
score: 98.21858723958333
patch: public abstract ( ) ;
rank: 956
score: 97.71302490234375
patch: String static . ;
rank: 956
score: 97.51671752929687
patch: public Object ) ;
rank: 956
score: 96.91258239746094
patch: public boolean ;
rank: 956
score: 93.16435241699219
patch: view
rank: 956
score: 93.06201934814453
patch: Metadata
rank: 957
score: 98.20618693033855
patch: public out . write ;
rank: 957
score: 98.1690673828125
patch: abstract { ; }
rank: 957
score: 96.89917755126953
patch: / ) ;
rank: 957
score: 95.23212432861328
patch: document
rank: 957
score: 94.10820007324219
patch: Query
rank: 957
score: 93.06062316894531
patch: Build
rank: 958
score: 97.70716552734375
patch: private abstract out ;
rank: 958
score: 96.89639282226562
patch: public abstract .
rank: 958
score: 93.15137481689453
patch: Use
rank: 959
score: 98.10294189453126
patch: boolean ( ) ;
rank: 959
score: 97.70125732421874
patch: public final out ;
rank: 959
score: 97.47490234375
patch: int out ( )
rank: 959
score: 94.10171508789062
patch: Character
rank: 959
score: 93.15132141113281
patch: debug
rank: 959
score: 93.06001281738281
patch: Char
rank: 960
score: 98.07022705078126
patch: Object ( ) ;
rank: 960
score: 97.69593811035156
patch: ? out ;
rank: 960
score: 97.469091796875
patch: out . write (
rank: 960
score: 96.80110677083333
patch: public ;
rank: 960
score: 94.09986114501953
patch: Adapter
rank: 960
score: 93.15103149414062
patch: encode
rank: 960
score: 93.05781555175781
patch: Rectangle
rank: 961
score: 98.06702880859375
patch: int out ( ||
rank: 961
score: 97.43819580078124
patch: org . ) ;
rank: 961
score: 94.09929656982422
patch: Folder
rank: 962
score: 98.06561889648438
patch: private ( ) ;
rank: 962
score: 97.65831298828125
patch: String out ) ;
rank: 962
score: 97.42035522460938
patch: java . ) ;
rank: 962
score: 96.72594197591145
patch: public )
rank: 962
score: 93.14553833007812
patch: selected
rank: 962
score: 92.29890441894531
patch: AST
rank: 963
score: 97.65174560546875
patch: public abstract / ;
rank: 963
score: 96.6854960123698
patch: ( )
rank: 963
score: 94.0903091430664
patch: sql
rank: 963
score: 93.14265441894531
patch: priority
rank: 963
score: 93.055419921875
patch: XS
rank: 964
score: 98.02745361328125
patch: final { ; }
rank: 964
score: 97.65059204101563
patch: / out ) ;
rank: 964
score: 97.37567138671875
patch: abstract / ) ;
rank: 964
score: 96.65489705403645
patch: . ;
rank: 964
score: 94.08747863769531
patch: Sub
rank: 964
score: 92.29579162597656
patch: other
rank: 965
score: 98.01901245117188
patch: boolean out ( ||
rank: 965
score: 97.87543334960938
patch: protected out ( )
rank: 965
score: 94.08668518066406
patch: Box
rank: 965
score: 93.04597473144531
patch: Save
rank: 965
score: 92.2947998046875
patch: resize
rank: 966
score: 97.85469360351563
patch: out out ( )
rank: 966
score: 93.03469848632812
patch: visit
rank: 967
score: 98.0146728515625
patch: void out ) ;
rank: 967
score: 94.08281707763672
patch: Types
rank: 967
score: 93.13551330566406
patch: Write
rank: 967
score: 93.03257751464844
patch: Elements
rank: 967
score: 92.28948974609375
patch: edit
rank: 968
score: 97.84700927734374
patch: private out ( )
rank: 968
score: 97.0483169555664
patch: / * ;
rank: 968
score: 96.0526835123698
patch: final ;
rank: 968
score: 94.08242797851562
patch: Exec
rank: 968
score: 93.03030395507812
patch: Items
rank: 968
score: 92.28541564941406
patch: bind
rank: 969
score: 95.08964538574219
patch: Mail
rank: 969
score: 94.08236694335938
patch: Def
rank: 969
score: 93.13310241699219
patch: Execution
rank: 969
score: 92.28422546386719
patch: evaluate
rank: 970
score: 97.98513793945312
patch: protected ( ) ;
rank: 970
score: 96.98133087158203
patch: public Long ;
rank: 970
score: 94.08134460449219
patch: intern
rank: 970
score: 93.12893676757812
patch: Offset
rank: 970
score: 92.2809829711914
patch: invalidate
rank: 971
score: 96.97615051269531
patch: public String ;
rank: 971
score: 95.8826192220052
patch: / )
rank: 971
score: 94.07929229736328
patch: source
rank: 971
score: 93.12779235839844
patch: New
rank: 971
score: 93.01667022705078
patch: history
rank: 972
score: 97.97442626953125
patch: / ) / ;
rank: 972
score: 96.91971588134766
patch: public Float ;
rank: 972
score: 94.07852935791016
patch: Or
rank: 972
score: 93.01507568359375
patch: transform
rank: 973
score: 97.94349365234375
patch: String ( ) ;
rank: 973
score: 97.75147705078125
patch: public write ( )
rank: 973
score: 96.90009307861328
patch: ) ; ;
rank: 973
score: 95.79817708333333
patch: private ;
rank: 973
score: 94.07583618164062
patch: buffer
rank: 973
score: 93.11836242675781
patch: compile
rank: 973
score: 92.27406311035156
patch: Available
rank: 974
score: 97.93084716796875
patch: m ( ) ;
rank: 974
score: 96.85867309570312
patch: public Byte ;
rank: 974
score: 95.78682454427083
patch: protected ;
rank: 974
score: 93.11668395996094
patch: sub
rank: 974
score: 93.00911712646484
patch: global
rank: 975
score: 97.92341918945313
patch: long ( ) ;
rank: 975
score: 97.66517944335938
patch: protected abstract out ;
rank: 975
score: 97.28795623779297
patch: ) { }
rank: 975
score: 96.84468078613281
patch: ( $STRING$ )
rank: 975
score: 95.76622517903645
patch: abstract ;
rank: 975
score: 95.03673553466797
patch: Assert
rank: 975
score: 94.07295227050781
patch: Dir
rank: 975
score: 93.1136245727539
patch: url
rank: 976
score: 97.91429138183594
patch: abstract ) ;
rank: 976
score: 95.73124186197917
patch: $STRING$ .
rank: 976
score: 93.00816345214844
patch: running
rank: 977
score: 97.25792694091797
patch: final out ;
rank: 977
score: 95.71384684244792
patch: } ;
rank: 977
score: 93.11124420166016
patch: Role
rank: 978
score: 97.89521484375
patch: / ; ) ;
rank: 978
score: 95.70468139648438
patch: .
rank: 978
score: 94.9835205078125
patch: Meta
rank: 978
score: 93.10824584960938
patch: job
rank: 978
score: 92.24634552001953
patch: join
rank: 979
score: 97.89403076171875
patch: ; ( ) ;
rank: 979
score: 96.79876708984375
patch: out [ ;
rank: 979
score: 94.98176574707031
patch: format
rank: 979
score: 94.0612564086914
patch: tree
rank: 979
score: 93.10637664794922
patch: IAST
rank: 980
score: 97.88641967773438
patch: public * ) ;
rank: 980
score: 97.1994857788086
patch: ) { ;
rank: 980
score: 95.6511942545573
patch: . .
rank: 980
score: 94.06027221679688
patch: Resolver
rank: 981
score: 97.87432861328125
patch: void out ( ?
rank: 981
score: 94.05979919433594
patch: Localized
rank: 982
score: 97.8238525390625
patch: static ) ;
rank: 982
score: 96.77854919433594
patch: public Short ;
rank: 983
score: 97.36991882324219
patch: public out .
rank: 983
score: 94.05058288574219
patch: Peer
rank: 983
score: 93.09800720214844
patch: LS
rank: 983
score: 92.99361419677734
patch: Fixed
rank: 984
score: 97.0555648803711
patch: / $STRING$ ;
rank: 984
score: 96.67750549316406
patch: public Class ;
rank: 984
score: 94.0481185913086
patch: Popup
rank: 984
score: 92.98992919921875
patch: interrupt
rank: 985
score: 93.0941390991211
patch: LT
rank: 985
score: 92.98867797851562
patch: head
rank: 986
score: 96.6436767578125
patch: public < )
rank: 986
score: 94.04389190673828
patch: Privileged
rank: 987
score: 96.641845703125
patch: public Object ;
rank: 987
score: 94.04246520996094
patch: Symbol
rank: 987
score: 92.97804260253906
patch: Dom
rank: 987
score: 92.21929931640625
patch: Public
rank: 988
score: 97.51188659667969
patch: synchronized ) ;
rank: 988
score: 97.03974914550781
patch: / / ;
rank: 988
score: 96.63511657714844
patch: abstract . ;
rank: 988
score: 94.0373306274414
patch: Parent
rank: 988
score: 93.07981872558594
patch: Concurrent
rank: 988
score: 92.2104263305664
patch: Real
rank: 989
score: 96.63239288330078
patch: out ; ;
rank: 989
score: 93.07951354980469
patch: pc
rank: 989
score: 92.97247314453125
patch: Instruction
rank: 990
score: 97.0324478149414
patch: public static )
rank: 990
score: 96.61723327636719
patch: byte ) ;
rank: 990
score: 94.12251281738281
patch: )
rank: 990
score: 92.20269775390625
patch: center
rank: 991
score: 97.43494415283203
patch: int ) ;
rank: 991
score: 93.07711791992188
patch: trace
rank: 992
score: 96.98341369628906
patch: private static ;
rank: 992
score: 96.95452880859375
patch: public out )
rank: 992
score: 94.90194702148438
patch: DB
rank: 992
score: 92.19336700439453
patch: cmp
rank: 993
score: 96.9395523071289
patch: . . )
rank: 993
score: 94.03253173828125
patch: Console
rank: 993
score: 93.06514739990234
patch: OBJECT
rank: 993
score: 92.95332336425781
patch: Send
rank: 994
score: 96.93067932128906
patch: protected ( )
rank: 994
score: 94.86940002441406
patch: Extension
rank: 994
score: 94.03080749511719
patch: Callback
rank: 994
score: 93.064697265625
patch: mi
rank: 994
score: 92.95001983642578
patch: Grid
rank: 995
score: 97.30992126464844
patch: void ) ;
rank: 995
score: 96.58163452148438
patch: Utilities . ;
rank: 995
score: 94.02803802490234
patch: Core
rank: 996
score: 94.0274429321289
patch: Buf
rank: 996
score: 93.06202697753906
patch: Priority
rank: 997
score: 96.3998311360677
patch: ? ;
rank: 997
score: 93.05998229980469
patch: Account
rank: 997
score: 92.94050598144531
patch: time
rank: 997
score: 92.18183135986328
patch: by
rank: 998
score: 95.29931640625
patch: ; ;
rank: 998
score: 94.84136199951172
patch: Record
rank: 998
score: 93.0596923828125
patch: not
rank: 998
score: 92.93994140625
patch: --
rank: 998
score: 92.61951446533203
patch: {
rank: 999
score: 96.18892415364583
patch: static ;
rank: 999
score: 93.05924224853516
patch: Composite
rank: 999
score: 92.93824768066406
patch: Contents
rank: 1000
score: 96.16698201497395
patch: synchronized ;
rank: 1000
score: 94.83894348144531
patch: Analysis
rank: 1000
score: 94.01698303222656
patch: real
rank: 1000
score: 92.51420593261719
patch: Fre@@
