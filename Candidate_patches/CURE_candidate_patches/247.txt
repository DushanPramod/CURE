rank: 1
score: 99.92060990767045
patch: for ( Var s : def . depends ) {
rank: 1
score: 99.7044921875
patch: for ( Var s : def . get CaMeL In ( ) ) {
rank: 2
score: 99.71721649169922
patch: for ( Var s : def . depends CaMeL On ( def ) ) {
rank: 2
score: 99.70374348958333
patch: for ( Var s : def . depends CaMeL On ( ) ) {
rank: 2
score: 99.64743970788044
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 2
score: 99.50250651041667
patch: for ( Var s : def . depends && def . depends ) {
rank: 2
score: 99.49221365792411
patch: Var s : for ( Var s : def . depends ) {
rank: 2
score: 99.4392559344952
patch: for ( Var [ ] def : def . depends ) {
rank: 3
score: 99.7188232421875
patch: for ( Var s : def . get CaMeL Annotation ( ) ) {
rank: 3
score: 99.6888427734375
patch: for ( Var s : def . depends CaMeL On ( ) )
rank: 3
score: 99.68596801757812
patch: for ( Var s : def . depends )
rank: 3
score: 99.68199744591347
patch: for ( Var s : def . depends CaMeL On ) {
rank: 3
score: 99.5976921530331
patch: for ( Var s : def . get CaMeL In ( ) . depends ) {
rank: 3
score: 99.59299879807692
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 3
score: 99.47548828125
patch: for ( Var s : def . depends , def . depends ) {
rank: 3
score: 99.42371715198864
patch: for ( String s : def . depends ) {
rank: 3
score: 99.37566266741071
patch: for ( Set < Var > def : def . depends ) {
rank: 4
score: 99.70638834635416
patch: for ( Var s : def . get CaMeL Def ( ) ) {
rank: 4
score: 99.60714285714286
patch: for ( Var s : def . get CaMeL In ( ) )
rank: 4
score: 99.60696176382211
patch: for ( Var s : def . depends ( ) ) {
rank: 4
score: 99.59588068181819
patch: for ( Var def : def . depends ) {
rank: 4
score: 99.44163004557292
patch: for ( Var s ] : def . depends ) {
rank: 4
score: 99.41797892252605
patch: for ( final Var s : def . depends ) {
rank: 5
score: 99.66534978693181
patch: for ( Var s : n . depends ) {
rank: 5
score: 99.591015625
patch: for ( Var s : def . depends CaMeL On ( def ) )
rank: 5
score: 99.58742453835227
patch: for ( Var s : state . depends ) {
rank: 5
score: 99.58084542410714
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( ) ) {
rank: 5
score: 99.55978260869566
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 5
score: 99.42176402698864
patch: for ( Var s : null . depends ) {
rank: 5
score: 99.41722523082386
patch: for ( Var s : node . depends ) {
rank: 5
score: 99.371826171875
patch: for ( Node s : def . depends ) {
rank: 6
score: 99.58939361572266
patch: for ( Var s : def . depends CaMeL On ( s ) ) {
rank: 6
score: 99.57564968532986
patch: for ( Var s : def . get CaMeL Node ( use CaMeL Node ) ) {
rank: 6
score: 99.54091389973958
patch: result = def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 6
score: 99.53069104646382
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ) {
rank: 6
score: 99.41209827769886
patch: for ( Var s : 0 . depends ) {
rank: 6
score: 99.36146763392857
patch: for ( Node < Var > s : def . depends ) {
rank: 7
score: 99.65044202302632
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 7
score: 99.62799072265625
patch: for ( Var s : n . depends CaMeL On ( def ) ) {
rank: 7
score: 99.57677641369048
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) )
rank: 7
score: 99.56776012073864
patch: for ( Definition s : def . depends ) {
rank: 7
score: 99.530791015625
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 7
score: 99.35172213040866
patch: / * for ( Var s : def . depends ) {
rank: 8
score: 99.64930484169408
patch: for ( Var s : def . get CaMeL In ( ) . depends ( ) ) {
rank: 8
score: 99.56165132068452
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) ) )
rank: 8
score: 99.5258984375
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 8
score: 99.40615234375
patch: for ( Var s : def . depends , s . depends ) {
rank: 8
score: 99.36314978966347
patch: for ( Var s : def . depends . depends ) {
rank: 8
score: 99.35022989908855
patch: for ( Var s : def . depends ) { {
rank: 9
score: 99.62092670641448
patch: for ( Var s : def . reaching CaMeL Def . get ( name ) ) {
rank: 9
score: 99.560986328125
patch: for ( Var s : def . get CaMeL Scope ( ) ) {
rank: 9
score: 99.55967881944444
patch: for ( Var s : def . depends CaMeL On ( s . depends ) ) {
rank: 9
score: 99.52976771763393
patch: for ( Var s : def . get CaMeL Annotation ( ) )
rank: 9
score: 99.52524038461539
patch: return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 9
score: 99.51184844970703
patch: if ( def != null ) {
rank: 9
score: 99.3933438387784
patch: for ( Var s = def . depends ) {
rank: 9
score: 99.34930013020833
patch: for ( Var s : def . get CaMeL Next ( ) ) {
rank: 10
score: 99.58866060697116
patch: for ( Var s : n . depends CaMeL On ) {
rank: 10
score: 99.5286356608073
patch: for ( Var s : def . depends ( ) )
rank: 10
score: 99.51223520132211
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 10
score: 99.5045166015625
patch: for ( Var s > s : def . depends ) {
rank: 10
score: 99.34559541590073
patch: for ( Var s : def . get CaMeL Next ( ) . depends ) {
rank: 11
score: 99.5884033203125
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Def ( ) ) {
rank: 11
score: 99.57823079427084
patch: for ( Var s : n . depends CaMeL On ( ) ) {
rank: 11
score: 99.54881702769886
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) ) {
rank: 11
score: 99.54337804457721
patch: for ( Var s : def . get CaMeL Cfg ( ) . depends ) {
rank: 11
score: 99.51221764605978
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 11
score: 99.49652099609375
patch: for ( Var s : def . depends CaMeL On ( use CaMeL Node ) ) {
rank: 11
score: 99.3818026455966
patch: for ( Object s : def . depends ) {
rank: 12
score: 99.5461669921875
patch: for ( Var s : def . depends CaMeL On ( s ) )
rank: 12
score: 99.54235076904297
patch: for ( Var s : def . reaching CaMeL Def . depends ) {
rank: 12
score: 99.51190948486328
patch: for ( Var s : def . depends CaMeL On ( name ) ) {
rank: 12
score: 99.51141357421875
patch: return def . depends CaMeL On ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 12
score: 99.37971765854779
patch: for ( Var s : def . depends ) println ( def . depends ) ;
rank: 12
score: 99.3431063565341
patch: for ( Var s : def . get ) {
rank: 13
score: 99.57809287623355
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL In ( ) ;
rank: 13
score: 99.54883829752605
patch: for ( Var s : def . depends CaMeL On )
rank: 13
score: 99.54459635416667
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( ) ) )
rank: 13
score: 99.53993055555556
patch: for ( Flow CaMeL State < Must CaMeL Def > state : def . depends ) {
rank: 13
score: 99.51066450639205
patch: return def . depends CaMeL On . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 13
score: 99.50486845128677
patch: if ( state == js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 13
score: 99.49135335286458
patch: for ( Var s ++ : def . depends ) {
rank: 13
score: 99.36542217548077
patch: for ( Var s : def . depends , depends ) {
rank: 13
score: 99.3301250751202
patch: for ( Var s : def . size ( ) ) {
rank: 14
score: 99.57755737304687
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Annotation ( ) ) {
rank: 14
score: 99.5484978170956
patch: for ( Var s : def . depends CaMeL On ( def ) ) { {
rank: 14
score: 99.54070366753473
patch: for ( Var s : def . depends CaMeL On ( def . depends ) ) {
rank: 14
score: 99.5389763327206
patch: for ( Var s : state . get CaMeL In ( ) . depends ) {
rank: 14
score: 99.5092022235577
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 14
score: 99.49486432756696
patch: for ( Var s : def . get CaMeL Def ( ) )
rank: 14
score: 99.48951067243304
patch: for ( Must CaMeL Def > s : def . depends ) {
rank: 14
score: 99.364013671875
patch: for ( Var s : def . depends ( s . depends ) ) {
rank: 14
score: 99.338623046875
patch: for ( Var s : def . depends ) { def = def . depends ) ;
rank: 15
score: 99.5748291015625
patch: for ( Var s : def . get CaMeL Value ( ) ) {
rank: 15
score: 99.54003143310547
patch: for ( Var s : def . depends CaMeL On ( this ) ) {
rank: 15
score: 99.53251953125
patch: for ( Var s : n . get CaMeL Annotation ( ) ) {
rank: 15
score: 99.5090087890625
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 15
score: 99.49418131510417
patch: for ( Var s : def . is CaMeL In ( ) ) {
rank: 15
score: 99.47166224888393
patch: if ( state . get CaMeL In ( ) != null ) {
rank: 15
score: 99.36045735677084
patch: for ( Var s : def . depends && s . depends ) {
rank: 15
score: 99.33449300130208
patch: } for ( Var s : def . depends ) {
rank: 16
score: 99.56636962890624
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL In ( ) ) {
rank: 16
score: 99.54069249770221
patch: for ( Var s : def . depends CaMeL On ( def , def ) )
rank: 16
score: 99.53899676983173
patch: for ( Var s : def . depends CaMeL On ( {
rank: 16
score: 99.5272705078125
patch: for ( Var s : def . get CaMeL Vars ( ) ) {
rank: 16
score: 99.5051778157552
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 16
score: 99.49329331341912
patch: if ( state != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 16
score: 99.3598876953125
patch: for ( Var s : def . depends && def != null ) {
rank: 16
score: 99.33428083147321
patch: for ( Iterator < Var > 0 : def . depends ) {
rank: 16
score: 99.30652669270833
patch: for ( Var s : def . get CaMeL Var ( ) ) {
rank: 17
score: 99.55336100260416
patch: for ( Var s : state . get CaMeL In ( ) ) {
rank: 17
score: 99.50388502038044
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL String ( name ) ) ;
rank: 17
score: 99.3581875887784
patch: for ( Var depends : def . depends ) {
rank: 17
score: 99.33028157552083
patch: for ( Var s : def . get CaMeL Classes ( ) ) {
rank: 17
score: 99.30382361778847
patch: try { for ( Var s : def . depends ) {
rank: 18
score: 99.54476768092105
patch: for ( Var s : def . get CaMeL In ( ) . size ( ) ) {
rank: 18
score: 99.53297424316406
patch: for ( Var n : def . depends CaMeL On ( def ) ) {
rank: 18
score: 99.53088960193452
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( ) ) )
rank: 18
score: 99.52370198567708
patch: if ( s . scope != js CaMeL Scope ) {
rank: 18
score: 99.5027567545573
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) )
rank: 18
score: 99.46005249023438
patch: if ( def . equals ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 18
score: 99.3515625
patch: for ( Var s : def . depends , def ) {
rank: 18
score: 99.296142578125
patch: for ( Var s : def . depends ( s ) ) {
rank: 19
score: 99.52603352864584
patch: for ( Var s : n . depends CaMeL On ( def ) )
rank: 19
score: 99.51851160386029
patch: for ( Var s : def . get CaMeL Annotation ( ) . depends ) {
rank: 19
score: 99.49774491159539
patch: if ( s . scope != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 19
score: 99.48153686523438
patch: Definition def = state . get CaMeL In ( ) ;
rank: 19
score: 99.32984270368304
patch: if ( def != null ) { return def . depends ) ;
rank: 19
score: 99.29609026227679
patch: for ( Var s : def . depends ( def ) ) {
rank: 20
score: 99.53433837890626
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Scope ( ) ) {
rank: 20
score: 99.5128173828125
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( name ) ) )
rank: 20
score: 99.51127115885417
patch: for ( Var s : def . get CaMeL Annotation ( use CaMeL Node ) ) {
rank: 20
score: 99.49664015997024
patch: return reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 20
score: 99.47749837239583
patch: for ( Var s : def . depends CaMeL On ( name ) )
rank: 20
score: 99.34978841145833
patch: for ( Var s : def . is CaMeL Empty ( ) ) {
rank: 20
score: 99.3292744954427
patch: System . out . println ( $STRING$ + s . to CaMeL String ( ) . to CaMeL String ( ) ) ;
rank: 21
score: 99.52894993832237
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Def ( ) ;
rank: 21
score: 99.51219593394886
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( ) ) ) {
rank: 21
score: 99.5111312866211
patch: for ( Var s : def . depends CaMeL On ( ) ) { {
rank: 21
score: 99.5073974609375
patch: for ( Var s : n . get CaMeL In ( ) ) {
rank: 21
score: 99.47463989257812
patch: for ( Var s : def . get CaMeL Value ( name ) ) {
rank: 21
score: 99.45691596137152
patch: for ( Var s : def . depends CaMeL On ( js CaMeL Scope ) ) {
rank: 21
score: 99.34462890625
patch: for ( Var s : def . depends || def . depends ) {
rank: 21
score: 99.28743489583333
patch: for ( Var s : def ) {
rank: 22
score: 99.52151309742646
patch: for ( Var s : def . get CaMeL In ( ) . def ) {
rank: 22
score: 99.51017543247768
patch: for ( Var s : def . depends CaMeL On ) { {
rank: 22
score: 99.50285339355469
patch: for ( Var s : def . depends CaMeL On ( $STRING$ ) ) {
rank: 22
score: 99.46127115885416
patch: for ( Var s : def . get CaMeL Type ( ) ) {
rank: 22
score: 99.3394442471591
patch: for ( Var s : s . depends ) {
rank: 22
score: 99.32461368336396
patch: for ( Var s : def . get CaMeL Arg ( ) . depends ) {
rank: 22
score: 99.2846923828125
patch: for ( Var s : def . get CaMeL Depth ( ) ) {
rank: 23
score: 99.51994772518383
patch: for ( Var s : def . get CaMeL Def ( ) . depends ) {
rank: 23
score: 99.50249167049633
patch: if ( def != null && def . depends CaMeL On ( def ) ) {
rank: 23
score: 99.50032958984374
patch: if ( def != js CaMeL Scope ) {
rank: 23
score: 99.49993341619319
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) ) ) {
rank: 23
score: 99.49374186197916
patch: if ( s . scope != js CaMeL Scope ) { return true ;
rank: 23
score: 99.4580078125
patch: Flow CaMeL State < Must CaMeL Def > state = null ;
rank: 23
score: 99.33755154079861
patch: for ( Var s : null ) {
rank: 23
score: 99.3233642578125
patch: for ( Var s : def . get CaMeL Arg ( ) ) {
rank: 23
score: 99.2765643780048
patch: for ( for ( Var s : def . depends ) {
rank: 24
score: 99.5195556640625
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( name ) ;
rank: 24
score: 99.50201416015625
patch: for ( Var s : n . depends )
rank: 24
score: 99.49834846047794
patch: for ( Var s : n . get CaMeL Annotation ( ) . depends ) {
rank: 24
score: 99.49318529211956
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( name ) ) ) {
rank: 24
score: 99.49210298978366
patch: String js CaMeL Scope = s . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 24
score: 99.44780883789062
patch: Definition def = state . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 24
score: 99.33669809194711
patch: for ( Var s : def . depends != null ) {
rank: 24
score: 99.3216219815341
patch: for ( Function s : def . depends ) {
rank: 25
score: 99.4931411743164
patch: for ( Var s : def . depends CaMeL On ( target ) ) {
rank: 25
score: 99.49205322265625
patch: final Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 25
score: 99.44694010416667
patch: for ( Flow CaMeL State < Must CaMeL Def > state : state . depends ) {
rank: 25
score: 99.32058279854911
patch: for ( Node < Var > def : def . depends ) {
rank: 26
score: 99.51111518012152
patch: for ( Var s : def . get CaMeL In ( ) . ( ) ) {
rank: 26
score: 99.496240234375
patch: for ( Var s : def . get CaMeL Node ( ) ) {
rank: 26
score: 99.487548828125
patch: for ( Var s : n . depends ) { {
rank: 26
score: 99.48747907366071
patch: result = n . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 26
score: 99.44639677159927
patch: if ( js CaMeL Scope . get CaMeL Var ( name ) != null ) {
rank: 26
score: 99.320166015625
patch: final Var s : for ( Var s : def . depends ) {
rank: 27
score: 99.49586486816406
patch: for ( Var s : def . get CaMeL Var ( name ) ) {
rank: 27
score: 99.48915318080357
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Value ( ) ) )
rank: 27
score: 99.48753597861842
patch: for ( Var s : def . depends CaMeL On ( def , def . depends ) )
rank: 27
score: 99.44327121310764
patch: for ( Must CaMeL Def > s : state . get CaMeL In ( ) ) {
rank: 27
score: 99.33118438720703
patch: Var s = null ; for ( Var s : def . depends ) {
rank: 28
score: 99.50615491365132
patch: for ( Var s : def . reaching CaMeL Def . get ( value ) ) {
rank: 28
score: 99.49233829273896
patch: for ( Var s : n . get CaMeL In ( ) . depends ) {
rank: 28
score: 99.48814808238636
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( this ) ) )
rank: 28
score: 99.48060021033653
patch: return state . get CaMeL In ( ) . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 28
score: 99.44169786241319
patch: for ( Must CaMeL Def > s : def . depends CaMeL On ( ) ) {
rank: 28
score: 99.43885803222656
patch: if ( state != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 28
score: 99.32927911931819
patch: for ( Var [ : def . depends ) {
rank: 28
score: 99.317333984375
patch: if ( def != null ) { return def . depends ) ; }
rank: 29
score: 99.50272409539474
patch: for ( Var s : def . reaching CaMeL Def . get ( null ) ) {
rank: 29
score: 99.48792613636364
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def ) ) )
rank: 29
score: 99.48463657924107
patch: for ( Var s : n . depends CaMeL On ( ) )
rank: 29
score: 99.4779764811198
patch: return state . get CaMeL In ( ) . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 29
score: 99.43694196428571
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( ) ) {
rank: 29
score: 99.31635598575367
patch: for ( Var s : def . depends ) { return def . depends ) ;
rank: 29
score: 99.25397198016827
patch: for ( Var s : def . depends ) { ) {
rank: 30
score: 99.48923068576389
patch: for ( Var s : n . get CaMeL Node ( use CaMeL Node ) ) {
rank: 30
score: 99.48651413690476
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s ) )
rank: 30
score: 99.4835205078125
patch: for ( Var n : def . depends ) {
rank: 30
score: 99.477890625
patch: String s = def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 30
score: 99.43633422851562
patch: if ( s . equals ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 30
score: 99.42999267578125
patch: for ( Var s : def . get CaMeL In ( name ) ) {
rank: 30
score: 99.32515676398026
patch: for ( Var s : def . depends && def . depends , def . depends ) {
rank: 30
score: 99.31193033854167
patch: for ( Var s : def . depends ) { def = def . depends ) {
rank: 31
score: 99.4888671875
patch: for ( Var s : state . get CaMeL Annotation ( ) ) {
rank: 31
score: 99.4843417080966
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( name ) ) )
rank: 31
score: 99.48334099264706
patch: / * for ( Var s : def . depends CaMeL On ( def ) )
rank: 31
score: 99.4770038311298
patch: return def . scope != js CaMeL Scope . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 31
score: 99.43451397235577
patch: for ( Must CaMeL Def s : def . depends ) {
rank: 31
score: 99.42304338727679
patch: if ( state . get CaMeL Annotation ( ) != null ) {
rank: 31
score: 99.32041237571023
patch: for ( Var s : def . next ) {
rank: 32
score: 99.50020559210526
patch: for ( Var s : def . reaching CaMeL Def . get ( s ) ) {
rank: 32
score: 99.48741319444444
patch: for ( Var s : def . get CaMeL Vars ( use CaMeL Node ) ) {
rank: 32
score: 99.47884114583333
patch: for ( Var s : def . depends CaMeL On ( def , def ) ) {
rank: 32
score: 99.47609456380208
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 32
score: 99.41871553308823
patch: for ( Var s : def . get CaMeL In ( ) ) return true ;
rank: 32
score: 99.32015652126736
patch: for ( Var s : def . depends ( s . depends ) . depends ) {
rank: 32
score: 99.249072265625
patch: for ( Var s : def . get CaMeL Nodes ( ) ) {
rank: 33
score: 99.49778988486842
patch: for ( Var s : def . get CaMeL Def ( ) . depends ( ) ) {
rank: 33
score: 99.4759521484375
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 33
score: 99.42644653320312
patch: if ( state . equals ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 33
score: 99.41761690027573
patch: Definition def = state . get CaMeL In ( ) . get ( name ) ;
rank: 33
score: 99.31796061197916
patch: for ( Var s != null ? def : def . depends ) {
rank: 33
score: 99.30735778808594
patch: for ( Var s : def . depends ) return def . depends ) ;
rank: 34
score: 99.49615157277961
patch: for ( Var s : def . reaching CaMeL Def . get ( type ) ) {
rank: 34
score: 99.48355102539062
patch: for ( Var s : def . get CaMeL Annotation ( name ) ) {
rank: 34
score: 99.47532743566177
patch: if ( def == null || def . depends CaMeL On ( def ) ) {
rank: 34
score: 99.42610168457031
patch: for ( Flow CaMeL State < Node > s : def . depends ) {
rank: 34
score: 99.41140567555146
patch: for ( Var s : def . depends CaMeL On ( js CaMeL Scope ) )
rank: 34
score: 99.31716021369485
patch: for ( Var s : def . depends && def : def . depends ) {
rank: 34
score: 99.30715044806985
patch: for ( Var s : def . get CaMeL Var CaMeL Count ( ) ) {
rank: 34
score: 99.24258422851562
patch: Var s : try { for ( Var s : def . depends ) {
rank: 35
score: 99.4744540127841
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( $STRING$ ) ) )
rank: 35
score: 99.47300211588542
patch: for ( Var s : state . get CaMeL Node ( use CaMeL Node ) ) {
rank: 35
score: 99.47194536994485
patch: List < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 35
score: 99.4696533203125
patch: for ( Var n : def . depends CaMeL On ( ) ) {
rank: 35
score: 99.4257479580966
patch: for ( Branch s : def . depends ) {
rank: 35
score: 99.4106201171875
patch: for ( String s : def . get CaMeL In ( ) ) {
rank: 35
score: 99.24138997395833
patch: for ( ) { for ( Var s : def . depends ) {
rank: 36
score: 99.49188232421875
patch: for ( Var s : def . reaching CaMeL Def . get ( ) ) {
rank: 36
score: 99.47419539741848
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def ) ) ) {
rank: 36
score: 99.4723762063419
patch: for ( Var s : state . get CaMeL Annotation ( ) . depends ) {
rank: 36
score: 99.47181193033855
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ) ;
rank: 36
score: 99.46682559742646
patch: for ( Var s : n . depends CaMeL On ( def ) ) { {
rank: 36
score: 99.4150390625
patch: for ( Var s : def . reaching CaMeL Def . reaching CaMeL Def . depends ) {
rank: 36
score: 99.40921223958334
patch: Definition def = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 36
score: 99.24095807756696
patch: String s : for ( Var s : def . depends ) {
rank: 37
score: 99.49142020089286
patch: for ( Var s : def . depends ( name ) ) {
rank: 37
score: 99.47216796875
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( this ) ) ) {
rank: 37
score: 99.47189670138889
patch: for ( Var s : n . get CaMeL Annotation ( use CaMeL Node ) ) {
rank: 37
score: 99.41187744140625
patch: Definition def = def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 37
score: 99.40845540364583
patch: for ( Var s : def . get CaMeL Parent ( ) ) {
rank: 37
score: 99.31285807291667
patch: for ( Var s : def . depends && def == null ) {
rank: 37
score: 99.30328728170956
patch: for ( Var s : def . get CaMeL Var ( ) . depends ) {
rank: 37
score: 99.2376708984375
patch: Var depends : for ( Var s : def . depends ) {
rank: 38
score: 99.4720126065341
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( ) ) ) {
rank: 38
score: 99.4702880859375
patch: for ( Var s : def . get CaMeL Cfg ( ) ) {
rank: 38
score: 99.46390787760417
patch: return state . get CaMeL Annotation ( ) . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 38
score: 99.4635009765625
patch: for ( Var s : n . get ) {
rank: 38
score: 99.41171746504934
patch: if ( state . scope == js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 38
score: 99.40804290771484
patch: if ( js CaMeL Scope . get CaMeL Annotation ( ) != null ) {
rank: 38
score: 99.31212615966797
patch: for ( Var s : def . depends ( s ) . depends ) {
rank: 38
score: 99.30153111049107
patch: / * * for ( Var s : def . depends ) {
rank: 38
score: 99.23642578125
patch: for ( Var s : def . depends : def . depends ) {
rank: 39
score: 99.48578844572368
patch: for ( Var s : def . get CaMeL Annotation ( ) . size ( ) ) {
rank: 39
score: 99.47087296195652
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( $STRING$ ) ) ) {
rank: 39
score: 99.46329752604167
patch: for ( Var s : def . depends CaMeL On {
rank: 39
score: 99.46206430288461
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 39
score: 99.40665435791016
patch: if ( js CaMeL Scope . get CaMeL Var ( name ) != null )
rank: 39
score: 99.30928802490234
patch: for ( Var s ] : def . depends && def . depends ) {
rank: 39
score: 99.30083673650569
patch: for ( Var type : def . depends ) {
rank: 40
score: 99.46949404761905
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Type ( ) ) )
rank: 40
score: 99.463134765625
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( def ) ) {
rank: 40
score: 99.46250287224265
patch: for ( Var s : def . get CaMeL Scope ( ) . depends ) {
rank: 40
score: 99.4552510579427
patch: return def . get CaMeL Annotation ( ) . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 41
score: 99.46807391826923
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ) ) )
rank: 41
score: 99.45596078725961
patch: Var s = def . depends CaMeL On ( def ) ;
rank: 41
score: 99.4546407063802
patch: try { Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 41
score: 99.40571594238281
patch: for ( Var s : def . get CaMeL In ( ) . depends )
rank: 41
score: 99.30337960379464
patch: for ( { for ( Var s : def . depends ) {
rank: 41
score: 99.29435221354167
patch: System . out . println ( $STRING$ + def . get CaMeL Var ( ) . to CaMeL String ( ) ) ;
rank: 42
score: 99.48265380859375
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Vars ( ) ) {
rank: 42
score: 99.45733283547794
patch: for ( Var s : state . get CaMeL Cfg ( ) . depends ) {
rank: 42
score: 99.45467122395833
patch: for ( Var s : n . depends CaMeL On )
rank: 42
score: 99.45444623161765
patch: String js CaMeL Scope = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 42
score: 99.40763854980469
patch: if ( def == null ) {
rank: 42
score: 99.40389251708984
patch: if ( state == js CaMeL Scope . get CaMeL Var ( name ) )
rank: 42
score: 99.30181477864583
patch: for ( Var s : def . depends && def . get ) {
rank: 42
score: 99.2941162109375
patch: for ( Var s : def . get CaMeL Declarations ( ) ) {
rank: 42
score: 99.22858537946429
patch: Var s ; for ( Var s : def . depends ) {
rank: 43
score: 99.4514404296875
patch: for ( Var def : def . get CaMeL In ( ) ) {
rank: 43
score: 99.44997934194711
patch: for ( Var n : def . depends CaMeL On ) {
rank: 43
score: 99.40488106863839
patch: if ( state . get CaMeL In ( ) == null ) {
rank: 43
score: 99.29978434244792
patch: for ( Var s : def . depends $NUMBER$ ) {
rank: 43
score: 99.2928466796875
patch: for ( Iterator < Var > def : def . depends ) {
rank: 43
score: 99.22803497314453
patch: for ( Var s : def . get CaMeL Var ( s ) ) {
rank: 44
score: 99.47898763020834
patch: for ( Var s : def . get CaMeL Name ( ) ) {
rank: 44
score: 99.45962727864584
patch: for ( Var s : def . depends CaMeL On ( this ) )
rank: 44
score: 99.45173645019531
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope ) {
rank: 44
score: 99.44939507378473
patch: for ( Var s : state . get CaMeL Annotation ( use CaMeL Node ) ) {
rank: 44
score: 99.44556427001953
patch: for ( Var s : n . depends CaMeL On ( name ) ) {
rank: 44
score: 99.29863424862133
patch: for ( Var s : def . depends , def . depends . depends ) {
rank: 44
score: 99.28992417279412
patch: if ( def != null ) for ( Var s : def . depends ) {
rank: 44
score: 99.22517395019531
patch: for ( Var s : def . depends ( def . depends ) ) {
rank: 45
score: 99.4595059481534
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( name ) ) )
rank: 45
score: 99.45140584309895
patch: return def . get CaMeL In ( ) . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 45
score: 99.44913736979167
patch: for ( Var s : state . get CaMeL Vars ( ) ) {
rank: 45
score: 99.40322875976562
patch: if ( js CaMeL Scope . get CaMeL In ( ) != null ) {
rank: 45
score: 99.39939528245192
patch: for ( Var s > def : def . depends ) {
rank: 45
score: 99.29806315104166
patch: for ( Var s : 0 . depends , def . depends ) {
rank: 45
score: 99.22435651506696
patch: Var s : for ( String s : def . depends ) {
rank: 46
score: 99.4764404296875
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Type ( ) ) {
rank: 46
score: 99.45769391741071
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Name ( ) ) )
rank: 46
score: 99.44869995117188
patch: return def . get CaMeL Def ( ) . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 46
score: 99.4472900390625
patch: for ( Var s : n . get CaMeL Scope ( ) ) {
rank: 46
score: 99.44170783547794
patch: for ( Var s : def . depends CaMeL On ( def , false ) )
rank: 46
score: 99.4029296875
patch: for ( Var s : def . get CaMeL Value ( name ) )
rank: 46
score: 99.39825760690789
patch: Flow CaMeL State < Must CaMeL Def > state = state . get CaMeL Annotation ( ) ;
rank: 46
score: 99.297119140625
patch: for ( Var s : def . depends && def . depends ( ) ) {
rank: 46
score: 99.28793816817434
patch: Var s = def . depends ) ; for ( Var s : def . depends ) {
rank: 46
score: 99.22289321001838
patch: for ( Var s : def . depends ) Var s : def . depends )
rank: 47
score: 99.47573370682566
patch: for ( Var s : def . reaching CaMeL Def . get ( index ) ) {
rank: 47
score: 99.45343889508929
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( def ) )
rank: 47
score: 99.44663899739584
patch: for ( Var s : get CaMeL Cfg ( ) . depends ) {
rank: 47
score: 99.4452412923177
patch: return js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 47
score: 99.44023786272321
patch: / * for ( Var s : def . depends ) * /
rank: 47
score: 99.4028679342831
patch: if ( def == js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 47
score: 99.39725167410714
patch: for ( Var s : def . depends != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 47
score: 99.29492905560662
patch: for ( Var s : def . depends $NUMBER$ ( s . depends ) ) {
rank: 47
score: 99.28718784877232
patch: for ( Set < Var > s : def . depends ) {
rank: 47
score: 99.22221156529018
patch: for ( Var < Var > s : def . depends ) {
rank: 48
score: 99.47550455729167
patch: for ( Var s : def . get CaMeL State ( ) ) {
rank: 48
score: 99.44427490234375
patch: return def . depends ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 48
score: 99.40186309814453
patch: for ( Var s : def . is CaMeL In ( name ) ) {
rank: 48
score: 99.28590223524306
patch: for ( Var s : def . depends ) { if ( def . depends ) {
rank: 48
score: 99.21905110677083
patch: for ( Var s : def . is CaMeL Var ( ) ) {
rank: 49
score: 99.4731689453125
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Value ( ) ) {
rank: 49
score: 99.45286976207386
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s ) ) )
rank: 49
score: 99.444189453125
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( use CaMeL Node ) ) ;
rank: 49
score: 99.44371840533088
patch: for ( Var s : def . get CaMeL Node ( ) . depends ) {
rank: 49
score: 99.43873596191406
patch: for ( Var s : def . depends CaMeL On ( n ) ) {
rank: 49
score: 99.40139770507812
patch: for ( Var s : def . depends ( js CaMeL Scope ) ) {
rank: 49
score: 99.39679827008929
patch: Flow CaMeL State < Must CaMeL Def > state = js CaMeL Scope . get CaMeL Annotation ( ) ;
rank: 49
score: 99.29257381663604
patch: for ( Var s : def . depends , def : def . depends ) {
rank: 49
score: 99.28555733816964
patch: for ( Iterator < Var > s : def . depends ) {
rank: 50
score: 99.45220656622024
patch: for ( Var s : def . depends CaMeL On ( s . to CaMeL String ( ) ) )
rank: 50
score: 99.4427719116211
patch: if ( s . scope != js CaMeL Scope ) { return true ; }
rank: 50
score: 99.44166395399306
patch: if ( def != js CaMeL Scope && s . scope != js CaMeL Scope ) {
rank: 50
score: 99.40077311197916
patch: for ( Var s : def . is CaMeL Annotation ( ) ) {
rank: 50
score: 99.39579503676471
patch: for ( Var s > s : def . depends CaMeL On ( ) ) {
rank: 50
score: 99.29227701822917
patch: for ( Var s : def . depends ? def . depends ) {
rank: 51
score: 99.46938069661458
patch: Definition def = state . get CaMeL In ( ) . get CaMeL In ( ) ;
rank: 51
score: 99.4517238451087
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( name ) ) ) {
rank: 51
score: 99.4423046875
patch: result = js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 51
score: 99.43952493106617
patch: for ( Var s : n . get CaMeL Cfg ( ) . depends ) {
rank: 51
score: 99.43697916666666
patch: for ( Var s : n . get CaMeL Vars ( ) ) {
rank: 51
score: 99.40000813802084
patch: for ( Definition s : def . get CaMeL In ( ) ) {
rank: 51
score: 99.39401424632354
patch: for ( Var s > s : def . get CaMeL In ( ) ) {
rank: 51
score: 99.292236328125
patch: for ( Var s : def . depends ( def ) . depends ) {
rank: 51
score: 99.2844989483173
patch: if ( def != null ) return def . depends ) ;
rank: 51
score: 99.21434529622395
patch: for ( Var s : def . depends . depends )
rank: 52
score: 99.4511951264881
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Type ( ) ) )
rank: 52
score: 99.442080078125
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 52
score: 99.4365593405331
patch: for ( Var s : n . depends CaMeL On ( def , def ) )
rank: 52
score: 99.39048365542763
patch: Flow CaMeL State < Must CaMeL Def > state = state . get CaMeL In ( ) ;
rank: 52
score: 99.28692267922794
patch: for ( Var s : def . depends && def , def . depends ) {
rank: 52
score: 99.28292846679688
patch: System . err . println ( $STRING$ + def . get CaMeL Var ( ) . to CaMeL String ( ) ) ;
rank: 53
score: 99.441064453125
patch: return def . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 53
score: 99.43535299862133
patch: if ( def != null ) return def . depends CaMeL On ( def ) ;
rank: 53
score: 99.3960712139423
patch: for ( Var s : def . iterator ( ) ) {
rank: 53
score: 99.28572591145833
patch: for ( Var s : def . depends ( ) . depends ) {
rank: 53
score: 99.28269556949013
patch: for ( Var s : def . depends ) { Var s = def . depends ) ;
rank: 53
score: 99.21259765625
patch: for ( Var s : def . get CaMeL Length ( ) ) {
rank: 54
score: 99.46600663034539
patch: for ( Var s : def . reaching CaMeL Def . get ( this ) ) {
rank: 54
score: 99.44052734375
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . scope ;
rank: 54
score: 99.43385074013158
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( {
rank: 54
score: 99.43368326822916
patch: for ( Var def : n . get CaMeL Annotation ( ) ) {
rank: 54
score: 99.39560116038604
patch: if ( js CaMeL Scope . get CaMeL Var ( name ) == null ) {
rank: 54
score: 99.39020647321429
patch: Definition def = state . get CaMeL In ( ) != null ? state . get CaMeL In ( )
rank: 54
score: 99.28328450520833
patch: for ( String s : def . depends && def . depends ) {
rank: 54
score: 99.21124267578125
patch: for ( String s : def . depends CaMeL On ( s ) ) {
rank: 55
score: 99.44936988467262
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Arg ( ) ) )
rank: 55
score: 99.43992262620192
patch: return def . get CaMeL In ( ) . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 55
score: 99.43330383300781
patch: for ( Var s : n . depends CaMeL On ( ) ) { {
rank: 55
score: 99.43299018012152
patch: for ( Flow CaMeL State < Must CaMeL Def > state : n . depends ) {
rank: 55
score: 99.3948505108173
patch: if ( state . get CaMeL In ( ) != null )
rank: 55
score: 99.38829985119048
patch: for ( Var s : def . depends ) if ( s . scope != js CaMeL Scope ) {
rank: 55
score: 99.27757771809895
patch: for ( Var s : def . depends s ) {
rank: 56
score: 99.44847523082386
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s ) ) )
rank: 56
score: 99.4383316040039
patch: if ( def != null && def . scope != js CaMeL Scope ) {
rank: 56
score: 99.43187040441177
patch: for ( Var def : def . get CaMeL In ( ) . depends ) {
rank: 56
score: 99.43043348524306
patch: for ( Var s : def . depends ) { Var s = s . depends )
rank: 56
score: 99.38767653245192
patch: for ( Var s + 1 : def . depends ) {
rank: 56
score: 99.27756076388889
patch: for ( Var s : def . depends ) { if ( s . depends ) {
rank: 56
score: 99.2097396850586
patch: for ( Var s : def . depends ) { s . depends ) {
rank: 57
score: 99.44534737723214
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Parent ( ) ) )
rank: 57
score: 99.43800951086956
patch: result = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 57
score: 99.43018296185662
patch: for ( Var def : state . get CaMeL In ( ) . depends ) {
rank: 57
score: 99.4295654296875
patch: for ( Var n : n . depends CaMeL On ( def ) ) {
rank: 57
score: 99.27804361979166
patch: for ( Var s : def . depends || def != null ) {
rank: 57
score: 99.277099609375
patch: for ( ? < Var > s : def . depends ) {
rank: 57
score: 99.2078125
patch: for ( Var s : def . is CaMeL Local ( ) ) {
rank: 58
score: 99.46197831003289
patch: for ( Var s : def . reaching CaMeL Def . get ( key ) ) {
rank: 58
score: 99.4444580078125
patch: for ( Var s : def . depends CaMeL On ( s . to CaMeL String ( ) ) ) {
rank: 58
score: 99.42923177083334
patch: for ( Var s : n . get CaMeL Declarations ( ) ) {
rank: 58
score: 99.426416015625
patch: for ( Var s : state . get CaMeL Scope ( ) ) {
rank: 58
score: 99.38918631417411
patch: for ( Var s : def . get CaMeL Scope ( ) )
rank: 58
score: 99.38726485402961
patch: if ( state . scope != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 58
score: 99.27637436810662
patch: for ( Var s : def . depends != null Var s . depends ) {
rank: 58
score: 99.2716064453125
patch: for ( Var s : def . get CaMeL Style ( ) . depends ) {
rank: 58
score: 99.20642807904412
patch: for ( final Var s : def . depends CaMeL On ( s ) ) {
rank: 59
score: 99.44419642857143
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Var ( ) ) ) )
rank: 59
score: 99.43607330322266
patch: if ( def != null && s . scope != js CaMeL Scope ) {
rank: 59
score: 99.42903900146484
patch: / * for ( Var s : def . depends CaMeL On ( ) )
rank: 59
score: 99.42506510416666
patch: for ( Var s : n . get CaMeL Node ( ) ) {
rank: 59
score: 99.38784790039062
patch: for ( Var s : def . get CaMeL In ( ) ) { {
rank: 59
score: 99.38580322265625
patch: for ( Must CaMeL Def > s : state . depends ) {
rank: 59
score: 99.27055140904018
patch: for ( Var < ? > s : def . depends ) {
rank: 59
score: 99.20325578962054
patch: Var s : for ( Object s : def . depends ) {
rank: 60
score: 99.44394938151042
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends ) ) )
rank: 60
score: 99.43575345552884
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope != js CaMeL Scope ) ;
rank: 60
score: 99.42888327205883
patch: for ( Var s : def . depends CaMeL On ( name , def ) )
rank: 60
score: 99.42261681189903
patch: for ( Var s : def . def . depends ) {
rank: 60
score: 99.38673753004808
patch: Flow CaMeL State < Must CaMeL Def > state = false ;
rank: 60
score: 99.38544921875
patch: for ( Definition s : def . depends CaMeL On ( ) ) {
rank: 60
score: 99.275830078125
patch: for ( Var s : null . depends && def . depends ) {
rank: 60
score: 99.26924351283482
patch: for ( Iterator < Var > n : def . depends ) {
rank: 61
score: 99.43498011997768
patch: if ( def != state . get CaMeL In ( ) ) {
rank: 61
score: 99.42827292049633
patch: for ( Var s : def . depends CaMeL On ( def , true ) )
rank: 61
score: 99.38649204799107
patch: for ( Var s : def . is CaMeL In ( ) )
rank: 61
score: 99.38536312705592
patch: for ( Var s : def . depends CaMeL On . get CaMeL In ( ) ) {
rank: 61
score: 99.27554086538461
patch: for ( Var s : def . depends && def ) {
rank: 61
score: 99.26893833705357
patch: System . out . println ( $STRING$ + def . depends ) ;
rank: 62
score: 99.45858604029605
patch: for ( Var s : def . reaching CaMeL Def . get ( $STRING$ ) ) {
rank: 62
score: 99.42677525111607
patch: for ( Var s : n . depends CaMeL On ) { {
rank: 62
score: 99.38507401315789
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( ) ;
rank: 62
score: 99.38314383370536
patch: for ( Var s : def . get CaMeL Value ( ) )
rank: 62
score: 99.27529727711396
patch: for ( Var s : def . depends ) println ( def . depends ) {
rank: 62
score: 99.26892903645833
patch: / * * / for ( Var s : def . depends ) {
rank: 62
score: 99.2025375366211
patch: for ( Var s : def . depends != null ? def . depends )
rank: 63
score: 99.45734719669117
patch: for ( Var s : def . get CaMeL In ( ) . scope ) {
rank: 63
score: 99.44202241443452
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Name ( ) ) )
rank: 63
score: 99.43470348011364
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 63
score: 99.4210205078125
patch: for ( Var n : def . depends CaMeL On ( def ) )
rank: 63
score: 99.4173583984375
patch: for ( Must CaMeL Def : def . depends ) {
rank: 63
score: 99.38505626860119
patch: for ( Definition s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( ) ) {
rank: 63
score: 99.38309420072116
patch: Flow CaMeL State < Must CaMeL Def > state = true ;
rank: 63
score: 99.27516526442308
patch: for ( Var s , def : def . depends ) {
rank: 63
score: 99.26717122395833
patch: System . out . println ( $STRING$ + s . to CaMeL String ( ) ) ;
rank: 64
score: 99.45714047080592
patch: for ( Var s : def . get CaMeL In ( ) . next ( ) ) {
rank: 64
score: 99.4419833096591
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( target ) ) )
rank: 64
score: 99.43252563476562
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 64
score: 99.41802300347223
patch: for ( Var s : n ) {
rank: 64
score: 99.38456645764802
patch: if ( def . scope == js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 64
score: 99.38157435825893
patch: if ( def != null )
rank: 64
score: 99.27431077223558
patch: for ( Var s : def . depends == null ) {
rank: 64
score: 99.26716883042279
patch: for ( Var s : def . depends ) { return def . depends ) {
rank: 64
score: 99.2003885904948
patch: for ( Var s : def . depends ) continue ;
rank: 65
score: 99.4415625
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends ) ) ) {
rank: 65
score: 99.43161349826389
patch: return def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 65
score: 99.41666666666667
patch: for ( Var s : def . get CaMeL Methods ( ) ) {
rank: 65
score: 99.38430946751645
patch: if ( s . scope == js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 65
score: 99.3735860188802
patch: Definition def = state . get CaMeL Annotation ( ) ;
rank: 65
score: 99.27242337740384
patch: for ( Var s : def . depends $NUMBER$ null ) {
rank: 65
score: 99.26671006944444
patch: synchronized ( def . depends ) { for ( Var s : def . depends ) {
rank: 65
score: 99.20011080228366
patch: for ( Var s : def . depends ) return null ;
rank: 66
score: 99.45499674479167
patch: for ( Var s : def . reaching CaMeL Def . size ( ) ) {
rank: 66
score: 99.4404933763587
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( name ) ) ) {
rank: 66
score: 99.43060913085938
patch: final Must CaMeL Def < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 66
score: 99.41338433159723
patch: for ( Var s : depends ) {
rank: 66
score: 99.41233995225694
patch: for ( Var s : def . depends CaMeL On ( def ) . depends ) {
rank: 66
score: 99.37313842773438
patch: for ( Var s : def . equals ( js CaMeL Scope ) ) {
rank: 66
score: 99.26923076923077
patch: def : for ( Var s : def . depends ) {
rank: 66
score: 99.26454162597656
patch: synchronized ( def ) { for ( Var s : def . depends ) {
rank: 66
score: 99.19998168945312
patch: for ( Var s : def . depends ) { def . depends ) ;
rank: 67
score: 99.454296875
patch: for ( Var s : def . get CaMeL In ( ) . depends ( name ) ) {
rank: 67
score: 99.43987678079044
patch: for ( Node < Var > s : def . depends CaMeL On ( ) )
rank: 67
score: 99.4296630859375
patch: if ( js CaMeL Scope . get CaMeL In ( ) . scope != js CaMeL Scope ) {
rank: 67
score: 99.41333821614583
patch: for ( Var s : state . get CaMeL Node ( ) ) {
rank: 67
score: 99.41124549278847
patch: for ( Var s : n . depends ( ) ) {
rank: 67
score: 99.38339572482639
patch: for ( Graph CaMeL Node < Node , Branch > n : def . depends ) {
rank: 67
score: 99.37283325195312
patch: if ( state != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 67
score: 99.26878446691177
patch: for ( Var s : def . depends ) println ( s . depends ) ;
rank: 67
score: 99.19825032552083
patch: for ( Var s : def . get CaMeL Annotations ( ) ) {
rank: 68
score: 99.45379638671875
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL State ( ) ) {
rank: 68
score: 99.43934215198864
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s ) ) {
rank: 68
score: 99.42937622070312
patch: return s . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 68
score: 99.3826192220052
patch: for ( Var s 1 : def . depends ) {
rank: 68
score: 99.37193196614584
patch: for ( Var s : def . get CaMeL Definition ( ) ) {
rank: 68
score: 99.26400596217105
patch: for ( Var s : def . depends ) { Var s = def . depends ) {
rank: 68
score: 99.19635772705078
patch: for ( Var s : def . depends ) { s . depends ) ;
rank: 69
score: 99.45320852179276
patch: for ( Var s : state . get CaMeL In ( ) . depends ( ) ) {
rank: 69
score: 99.43873596191406
patch: for ( Var s : def . depends CaMeL On ( type ) ) {
rank: 69
score: 99.4287997159091
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope ) != js CaMeL Scope ) {
rank: 69
score: 99.40950520833333
patch: for ( Var def : state . get CaMeL In ( ) ) {
rank: 69
score: 99.40804290771484
patch: if ( def == null || def . depends CaMeL On ( ) ) {
rank: 69
score: 99.38160400390625
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( name ) ;
rank: 69
score: 99.37167593149039
patch: if ( state . get CaMeL Annotation ( ) != null )
rank: 69
score: 99.267236328125
patch: for ( String s : def . depends , def . depends ) {
rank: 69
score: 99.26363431490384
patch: for ( Var s : def . get CaMeL Var ) {
rank: 69
score: 99.19541422526042
patch: { for ( Var s : def . depends ) {
rank: 70
score: 99.4530517578125
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Var ( ) ) {
rank: 70
score: 99.42749633789063
patch: return n . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 70
score: 99.40757242838542
patch: if ( state . get CaMeL In ( ) . scope != js CaMeL Scope ) {
rank: 70
score: 99.40514322916667
patch: for ( Var s : n . get CaMeL Classes ( ) ) {
rank: 70
score: 99.26690266927083
patch: for ( Var s : null . depends , def . depends ) {
rank: 70
score: 99.26326497395833
patch: if ( def != null && def != null ) {
rank: 71
score: 99.4368896484375
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Value ( ) ) ) {
rank: 71
score: 99.42615763346355
patch: Node def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 71
score: 99.40647379557292
patch: for ( Must CaMeL Def : state . depends ) {
rank: 71
score: 99.405029296875
patch: for ( Var s : def . depends CaMeL On . depends CaMeL On ( def ) )
rank: 71
score: 99.38146294487848
patch: for ( Must CaMeL Def > s : def . get CaMeL In ( ) ) {
rank: 71
score: 99.37047621783088
patch: for ( Var s : def . get CaMeL In ( ) ) return false ;
rank: 71
score: 99.26200648716518
patch: / * / for ( Var s : def . depends ) {
rank: 71
score: 99.1953857421875
patch: Var s : for ( final Var s : def . depends ) {
rank: 72
score: 99.44815866570724
patch: for ( Var s : def . get CaMeL Annotation ( ) . depends ( ) ) {
rank: 72
score: 99.4248798076923
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get CaMeL Var ( name ) ;
rank: 72
score: 99.40560913085938
patch: for ( Var s : n . get CaMeL Annotation ( name ) ) {
rank: 72
score: 99.40139535757211
patch: for ( Var s : n . depends CaMeL On ( {
rank: 72
score: 99.36797018612133
patch: if ( js CaMeL Scope . get CaMeL Value ( name ) != null ) {
rank: 72
score: 99.19390462239583
patch: for ( Var s : def . get CaMeL Modifiers ( ) ) {
rank: 73
score: 99.42441193953805
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 73
score: 99.40409088134766
patch: if ( state . get CaMeL In ( ) != js CaMeL Scope ) {
rank: 73
score: 99.40130936472039
patch: for ( Var s : def . depends CaMeL On ( Var . class , def ) )
rank: 73
score: 99.37900797526042
patch: for ( Must CaMeL Def > s : state . get CaMeL Annotation ( ) ) {
rank: 73
score: 99.36790771484375
patch: if ( state != js CaMeL Scope ) {
rank: 73
score: 99.2638801125919
patch: for ( Var s : def . depends && def != null . depends ) {
rank: 73
score: 99.25712367466518
patch: for ( Iterator < Var > n = def . depends ) {
rank: 73
score: 99.19364929199219
patch: for ( Var s : def . depends ) { def . depends ) {
rank: 74
score: 99.43327530570652
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s ) ) ) {
rank: 74
score: 99.42064490685097
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 74
score: 99.40177095853366
patch: for ( Var s : def != js CaMeL Scope ) {
rank: 74
score: 99.4010368795956
patch: for ( Var s : def . depends CaMeL On ( def . depends ) )
rank: 74
score: 99.37785993303571
patch: for ( Var s : def . depends != js CaMeL Scope . get CaMeL Annotation ( ) ) {
rank: 74
score: 99.257080078125
patch: for ( Var s : def . get CaMeL Depth ( ) . to CaMeL Array ( ) ) {
rank: 74
score: 99.1912841796875
patch: for ( Var s : def . depends ) def = def . depends ) {
rank: 75
score: 99.44490774054276
patch: for ( Var s : def . get CaMeL In ( ) . def ( ) ) {
rank: 75
score: 99.43287941261575
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ) ) ) {
rank: 75
score: 99.4191032858456
patch: Node < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 75
score: 99.40042877197266
patch: for ( Var s : n . get CaMeL Var ( name ) ) {
rank: 75
score: 99.3998794555664
patch: if ( def != null && def . depends CaMeL On ( ) ) {
rank: 75
score: 99.37650792738971
patch: for ( Must CaMeL Def s : def . depends CaMeL On ( ) ) {
rank: 75
score: 99.36781939338235
patch: Flow CaMeL State < Node > def = state . get CaMeL In ( ) ;
rank: 75
score: 99.26283174402573
patch: for ( Var s : def . depends ( ) . depends ( ) ) {
rank: 76
score: 99.44485634251645
patch: for ( Var s : def . get CaMeL In ( ) . iterator ( ) ) {
rank: 76
score: 99.43223353794643
patch: for ( Node < Node > def : def . depends ) {
rank: 76
score: 99.41800362723214
patch: / * Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 76
score: 99.40018039279514
patch: if ( def != js CaMeL Scope && def . scope != js CaMeL Scope ) {
rank: 76
score: 99.39929877387152
patch: for ( Var s : def . depends ) { Var s = def . depends )
rank: 76
score: 99.36720275878906
patch: for ( Var s : def . get CaMeL In ( ) ) { }
rank: 76
score: 99.18734537760416
patch: for ( Var s : def . get CaMeL Root ( ) ) {
rank: 77
score: 99.44312959558823
patch: for ( ( Var s : def . get CaMeL In ( ) ) ) {
rank: 77
score: 99.43215110085227
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( $STRING$ ) ) )
rank: 77
score: 99.41779033954327
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( name ) ;
rank: 77
score: 99.39912109375
patch: for ( Var s : n . get CaMeL Methods ( ) ) {
rank: 77
score: 99.39761013454861
patch: for ( Var def : def . get CaMeL Node ( use CaMeL Node ) ) {
rank: 77
score: 99.37565343520221
patch: for ( Var s > s : state . get CaMeL In ( ) ) {
rank: 77
score: 99.36494715073529
patch: Flow CaMeL State < Node > def = state . get CaMeL Annotation ( ) ;
rank: 77
score: 99.2602871981534
patch: for ( Var s : def . type ) {
rank: 77
score: 99.25682157628677
patch: for ( Var s : def . get CaMeL Parent ( ) . depends ) {
rank: 78
score: 99.44285753038194
patch: for ( Var s : def . depends CaMeL On . get ( name ) ) {
rank: 78
score: 99.41689828725961
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 78
score: 99.39838324652777
patch: for ( Var s : n . depends ) { Var s = s . depends )
rank: 78
score: 99.36380208333334
patch: for ( Var s : def . get CaMeL In ( name ) )
rank: 78
score: 99.2559814453125
patch: for ( Var < ? > def : def . depends ) {
rank: 79
score: 99.44202880859375
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Node ( ) ) {
rank: 79
score: 99.43189538043478
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s ) ) ) {
rank: 79
score: 99.41538935122283
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Method ( name ) ) ;
rank: 79
score: 99.39796549479166
patch: for ( Var s : def . depends CaMeL On ( def ) {
rank: 79
score: 99.39662272135416
patch: for ( Var def : state . get CaMeL Annotation ( ) ) {
rank: 79
score: 99.37439643012152
patch: Definition def = state . get CaMeL In ( ) . get CaMeL Annotation ( ) ;
rank: 79
score: 99.3619384765625
patch: if ( state != null ) {
rank: 79
score: 99.25690460205078
patch: for ( Var s : def . equals ( def . depends ) ) {
rank: 79
score: 99.25551060267857
patch: for ( Var s : def . depends ( depends ) ) {
rank: 79
score: 99.18290441176471
patch: for ( Var s : def . depends ) s . depends ( s ) ;
rank: 80
score: 99.43929893092105
patch: for ( Var s : def . get CaMeL In ( ) . trim ( ) ) {
rank: 80
score: 99.43161939538044
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( target ) ) ) {
rank: 80
score: 99.41497802734375
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( get CaMeL Cfg ( ) ) ;
rank: 80
score: 99.39662679036458
patch: for ( Var s : def . depends CaMeL On ( def , false ) ) {
rank: 80
score: 99.39623345269098
patch: if ( s . get CaMeL In ( ) . scope != js CaMeL Scope ) {
rank: 80
score: 99.25657653808594
patch: for ( Var ) { for ( Var s : def . depends ) {
rank: 80
score: 99.25410679408482
patch: for ( ? < Var > def : def . depends ) {
rank: 80
score: 99.18221341646634
patch: Var s : for ( Var s : def . depends )
rank: 81
score: 99.43084309895833
patch: for ( Var s : def . depends CaMeL On ( $STRING$ ) )
rank: 81
score: 99.41285118689903
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 81
score: 99.3947818153783
patch: for ( Var s : def . depends CaMeL On ( def , def . get ) )
rank: 81
score: 99.39429389105902
patch: for ( Var s : state . get CaMeL Vars ( use CaMeL Node ) ) {
rank: 81
score: 99.37119140625
patch: for ( Var s : def . reaching CaMeL Def . depends CaMeL On ( ) ) {
rank: 81
score: 99.36048799402573
patch: for ( Var s : def . depends ) { if ( s . get CaMeL
rank: 81
score: 99.18214634486607
patch: for ( Var s : def . depends ( null ) ) {
rank: 82
score: 99.4269382642663
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( $STRING$ ) ) ) {
rank: 82
score: 99.39410807291667
patch: for ( Var s : def . get CaMeL Instance ( ) ) {
rank: 82
score: 99.37115478515625
patch: if ( state . get CaMeL In ( ) . get CaMeL Annotation ( ) != null ) {
rank: 82
score: 99.35955403645833
patch: for ( Var s : def . depends ( js CaMeL Scope ) )
rank: 82
score: 99.1815897623698
patch: for ( Var s : def . depends ) break ;
rank: 83
score: 99.42670754825367
patch: for ( Var s : def . depends CaMeL On ( s . depends ) )
rank: 83
score: 99.41261888586956
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL String ( name ) ) ;
rank: 83
score: 99.39084041819854
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( ) ) {
rank: 83
score: 99.37112862723214
patch: for ( Must CaMeL Def > state : def . depends ) {
rank: 83
score: 99.25465303308823
patch: for ( Var s : def . depends || def : def . depends ) {
rank: 83
score: 99.1802978515625
patch: for ( Var < Var > def : def . depends ) {
rank: 84
score: 99.43683268229167
patch: for ( Var s : def . get CaMeL Code ( ) ) {
rank: 84
score: 99.42511950041118
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( {
rank: 84
score: 99.41184400475544
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) )
rank: 84
score: 99.3937759399414
patch: if ( s . get CaMeL In ( ) != js CaMeL Scope ) {
rank: 84
score: 99.3903564453125
patch: for ( Var s : def . depends CaMeL On ( def , {
rank: 84
score: 99.35745442708334
patch: if ( js CaMeL Scope . get CaMeL Annotation ( ) != null )
rank: 84
score: 99.25438774956598
patch: for ( Var s : def . equals ( def . depends ) . depends ) {
rank: 84
score: 99.18023322610294
patch: for ( Var s : def . depends CaMeL On ( ) . depends ) {
rank: 85
score: 99.43410773026316
patch: for ( Var s : def . reaching CaMeL Def . get ( id ) ) {
rank: 85
score: 99.42414202008929
patch: for ( Var s : n . get CaMeL In ( ) )
rank: 85
score: 99.41123046875
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 85
score: 99.38823699951172
patch: for ( Node < Var > s : def . depends CaMeL On ) {
rank: 85
score: 99.35664585658482
patch: if ( state . get CaMeL Annotation ( ) == null ) {
rank: 85
score: 99.25157973345588
patch: for ( Var s : def . depends $NUMBER$ ( def . depends ) ) {
rank: 85
score: 99.24713134765625
patch: if ( def != null ) { return def . depends ) {
rank: 85
score: 99.17937873391544
patch: for ( Var s : def . get CaMeL Graph ( ) . depends ) {
rank: 86
score: 99.43365478515625
patch: for ( Var s : def . js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 86
score: 99.42160866477273
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( name ) ) )
rank: 86
score: 99.41053263346355
patch: final def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 86
score: 99.39260629507211
patch: for ( Var s : def . depends ) return true ;
rank: 86
score: 99.38689507378473
patch: for ( Var s : n . depends CaMeL On ( def , def ) ) {
rank: 86
score: 99.37021213107639
patch: for ( Must CaMeL Def > state : state . get CaMeL In ( ) ) {
rank: 86
score: 99.35482025146484
patch: for ( Var s ++ : def . get CaMeL In ( ) ) {
rank: 86
score: 99.25111219618056
patch: for ( Var s : def . depends ( def . depends ) . depends ) {
rank: 86
score: 99.17931410845588
patch: for ( Var s : def . depends CaMeL On ( s ) s ) {
rank: 87
score: 99.43158318014706
patch: for ( Var s : def . get CaMeL In ( ) . state ) {
rank: 87
score: 99.41017747961956
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 87
score: 99.38675265842014
patch: for ( Var s : def . depends CaMeL On ( def , true ) ) {
rank: 87
score: 99.3542709350586
patch: if ( state == js CaMeL Scope . get CaMeL In ( ) ) {
rank: 87
score: 99.24993489583333
patch: if ( def : for ( Var s : def . depends ) {
rank: 87
score: 99.24608018663194
patch: for ( Var s : def . depends ( def . depends ( ) ) ) {
rank: 87
score: 99.17893353630515
patch: for ( Var s : def . depends ) def . depends ( s ) ;
rank: 88
score: 99.4215087890625
patch: for ( Node < Node > def : def . depends CaMeL On ( ) )
rank: 88
score: 99.40989087975544
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 88
score: 99.39237976074219
patch: for ( Var s : state . get CaMeL Annotation ( name ) ) {
rank: 88
score: 99.38656412760416
patch: for ( Var n : n . depends CaMeL On ( ) ) {
rank: 88
score: 99.36971435546874
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars 1 ) {
rank: 88
score: 99.2495361328125
patch: for ( Var s != null ? s : def . depends ) {
rank: 88
score: 99.24512436810662
patch: for ( Var s : def . get CaMeL Reference CaMeL List ( ) ) {
rank: 88
score: 99.17818777901786
patch: for ( Var < Node > s : def . depends ) {
rank: 89
score: 99.42961040296052
patch: for ( Var s : def . get CaMeL In ( ) . values ( ) ) {
rank: 89
score: 99.42110770089286
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( ) ) {
rank: 89
score: 99.40986851283482
patch: if ( def == state . get CaMeL In ( ) ) {
rank: 89
score: 99.39147135416667
patch: for ( Var def : def . get CaMeL Annotation ( ) ) {
rank: 89
score: 99.38569910386029
patch: for ( Var s : def . depends CaMeL On ( name ) ) { {
rank: 89
score: 99.369384765625
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( def ) ;
rank: 89
score: 99.34755859375
patch: if ( js CaMeL Scope . get CaMeL In ( ) != null )
rank: 89
score: 99.24855143229166
patch: for ( Object s : def . depends && def . depends ) {
rank: 89
score: 99.17783425071023
patch: for ( Type s : def . depends ) {
rank: 90
score: 99.4292221069336
patch: for ( final Var s : def . get CaMeL In ( ) ) {
rank: 90
score: 99.41946847098214
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( ) ) ) )
rank: 90
score: 99.40982216282895
patch: return def . scope != null + js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 90
score: 99.38274383544922
patch: for ( Node s : def . depends CaMeL On ( def ) ) {
rank: 90
score: 99.36897358141448
patch: for ( Var s : def . depends CaMeL On . depends CaMeL On ( ) ) {
rank: 90
score: 99.24615009014423
patch: for ( Var s : def . depends && depends ) {
rank: 90
score: 99.2400261374081
patch: for ( Var s : def . get CaMeL Next ( ) . get ) {
rank: 90
score: 99.17774155560662
patch: for ( Var s : def . depends && null != s . depends ) {
rank: 91
score: 99.42750651041666
patch: for ( Var s : def . get CaMeL Declaration ( ) ) {
rank: 91
score: 99.40885786576705
patch: return def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 91
score: 99.39045715332031
patch: for ( Var s : state . reaching CaMeL Def . depends ) {
rank: 91
score: 99.38112386067708
patch: for ( Var s : def . depends CaMeL On ( def ) ) return true ;
rank: 91
score: 99.34634399414062
patch: for ( Var s : def . get CaMeL Type ( name ) ) {
rank: 91
score: 99.24437713623047
patch: for ( Var s : def . depends , def s . depends ) {
rank: 91
score: 99.23773484002976
patch: for ( Var s : def . get CaMeL Arg ( ) . to CaMeL Array ( ) ) {
rank: 91
score: 99.17285874310662
patch: for ( Var s : def . get CaMeL Root ( ) . depends ) {
rank: 92
score: 99.42471313476562
patch: for ( Var s : def . get CaMeL Def ( name ) ) {
rank: 92
score: 99.41804722377232
patch: for ( Node < Node > s : def . depends ) {
rank: 92
score: 99.4073016826923
patch: return state . get CaMeL In ( ) . reaching CaMeL Def ( js CaMeL Scope . get CaMeL In ( ) ) ;
rank: 92
score: 99.39039442274306
patch: for ( Var s : n . get CaMeL Vars ( use CaMeL Node ) ) {
rank: 92
score: 99.34599304199219
patch: for ( Var s : def . get CaMeL Def ( ) . depends )
rank: 92
score: 99.24401041666667
patch: for ( Var s : 0 . depends && def . depends ) {
rank: 92
score: 99.23708089192708
patch: if ( def != null ) { for ( Var s : def . depends ) {
rank: 92
score: 99.17200425091912
patch: Var s : Var s : for ( Var s : def . depends ) {
rank: 93
score: 99.40658804086539
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope == js CaMeL Scope ) ;
rank: 93
score: 99.38039679276316
patch: for ( Var s : def . depends CaMeL On ( name , def . depends ) )
rank: 93
score: 99.36623128255208
patch: for ( Var s : def . reaching CaMeL Def . depends ( ) ) {
rank: 93
score: 99.34594008501838
patch: for ( Var s : def . depends CaMeL On ( use CaMeL Node ) )
rank: 93
score: 99.24321831597223
patch: for ( Var s : def . is CaMeL Var ( s . depends ) ) {
rank: 93
score: 99.23532339242789
patch: for ( Var s : def . depends ) depends ) {
rank: 93
score: 99.16919663373162
patch: for ( Var s : def . depends ) if ( s . depends ) {
rank: 94
score: 99.42320149739584
patch: for ( Var s : state . get CaMeL Def ( ) ) {
rank: 94
score: 99.41756184895833
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Value ( ) ) )
rank: 94
score: 99.4061279296875
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL In ( ) . js CaMeL Scope ;
rank: 94
score: 99.38029479980469
patch: if ( def != null && def . depends CaMeL On ( def ) )
rank: 94
score: 99.36558024088542
patch: for ( Must CaMeL Def > def : state . get CaMeL In ( ) ) {
rank: 94
score: 99.34519958496094
patch: for ( Var s : def . get CaMeL In ( ) ) { ;
rank: 94
score: 99.24186437270221
patch: for ( Var s : def . depends , s . depends . depends ) {
rank: 95
score: 99.42299194335938
patch: final Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL In ( ) ;
rank: 95
score: 99.41754705255681
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Type ( ) ) ) {
rank: 95
score: 99.405986328125
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) != null ;
rank: 95
score: 99.38014729817708
patch: for ( Var CaMeL Definition s : n . depends CaMeL On ( def ) ) {
rank: 95
score: 99.23897552490234
patch: for ( Var s : def . depends && def . depends == ) {
rank: 95
score: 99.23275052584134
patch: for ( Var [ ] s : def . depends ) {
rank: 96
score: 99.41753859747024
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) {
rank: 96
score: 99.40427809495192
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL In ( ) . js CaMeL Scope ;
rank: 96
score: 99.388671875
patch: for ( Var def : n . get CaMeL In ( ) ) {
rank: 96
score: 99.37664325420673
patch: for ( Var CaMeL Definition s : def . depends ) {
rank: 96
score: 99.34358723958333
patch: for ( Var s : def . set CaMeL In ( ) ) {
rank: 96
score: 99.23110782398896
patch: if ( def != null && ! def . is CaMeL Empty ( ) ) {
rank: 96
score: 99.16594381893383
patch: for ( Var s : def . depends && null != def . depends ) {
rank: 97
score: 99.40377004523026
patch: return js CaMeL Scope != null + js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 97
score: 99.38865751378677
patch: for ( Var def : n . get CaMeL In ( ) . depends ) {
rank: 97
score: 99.37627096737133
patch: for ( Var s : def . depends CaMeL On ( Var . class ) )
rank: 97
score: 99.36374080882354
patch: if ( state . get CaMeL In ( ) . equals ( null ) ) {
rank: 97
score: 99.34353201729911
patch: for ( Var s : def . get CaMeL Vars ( ) )
rank: 97
score: 99.23682454427083
patch: for ( Var s : 0 . depends , s . depends ) {
rank: 97
score: 99.23107328869048
patch: for ( Var s : def . depends ) { for ( Var s : def . depends ) {
rank: 97
score: 99.16533868963069
patch: for ( Var s : out . depends ) {
rank: 98
score: 99.42064819335937
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Name ( ) ) {
rank: 98
score: 99.41650390625
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Parent ( ) ) )
rank: 98
score: 99.4036328125
patch: final Var def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 98
score: 99.38700103759766
patch: for ( Var s : def . get CaMeL Node ( name ) ) {
rank: 98
score: 99.37395881204044
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( def ) )
rank: 98
score: 99.36349326685855
patch: for ( Var s : def . depends CaMeL On . get CaMeL Annotation ( ) ) {
rank: 98
score: 99.3429183959961
patch: if ( js CaMeL Scope . get CaMeL Var ( name ) == null )
rank: 98
score: 99.23577880859375
patch: for ( Var s : def . is CaMeL Local ( s . depends ) ) {
rank: 98
score: 99.23047746930804
patch: System . err . println ( $STRING$ + def . depends ) ;
rank: 98
score: 99.1646728515625
patch: else { for ( Var s : def . depends ) {
rank: 99
score: 99.41899671052632
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Scope ( ) ;
rank: 99
score: 99.41639293323864
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( def ) ) {
rank: 99
score: 99.40343707540761
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 99
score: 99.38612874348958
patch: if ( s . scope != js CaMeL Scope && def != js CaMeL Scope ) {
rank: 99
score: 99.37371826171875
patch: / * for ( Var s : n . depends ) * /
rank: 99
score: 99.34278971354166
patch: for ( Var s : def . get CaMeL Result ( ) ) {
rank: 99
score: 99.2356201171875
patch: for ( Var s : def . is CaMeL Function ( ) ) {
rank: 100
score: 99.41879754317434
patch: for ( Var s : def . get CaMeL In ( ) . js CaMeL Scope ) {
rank: 100
score: 99.41461859809027
patch: for ( Var s : def . depends CaMeL On ( s . get ) ) {
rank: 100
score: 99.40288837139423
patch: final Var def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 100
score: 99.38570149739583
patch: if ( s != js CaMeL Scope && s . scope != js CaMeL Scope ) {
rank: 100
score: 99.37266540527344
patch: / * for ( Var s : def . depends CaMeL On ) * /
rank: 100
score: 99.360595703125
patch: for ( Var s : def . get CaMeL Def ( ) . depends CaMeL On ( ) ) {
rank: 100
score: 99.34020233154297
patch: if ( js CaMeL Scope . get CaMeL Annotation ( ) == null ) {
rank: 100
score: 99.22941509046052
patch: for ( Var s : def . depends ) { Var s : def . depends ) {
rank: 100
score: 99.16101837158203
patch: Var s : for ( Var s : def . depends . depends ) {
rank: 101
score: 99.40202893708882
patch: String js CaMeL Scope = def . js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 101
score: 99.38419342041016
patch: for ( Var s : def . get CaMeL Vars ( name ) ) {
rank: 101
score: 99.37258731617646
patch: for ( Var s : def . depends CaMeL On ( def , ) ) {
rank: 101
score: 99.34014020647321
patch: for ( Var s : def . get CaMeL Type ( ) )
rank: 101
score: 99.23390549879808
patch: for ( Var s : def . depends , s ) {
rank: 101
score: 99.22797393798828
patch: for ( Var s : def . depends ) return def . depends ) {
rank: 101
score: 99.16066672585227
patch: for ( Property s : def . depends ) {
rank: 102
score: 99.41395479090073
patch: for ( Var s : def . get . depends CaMeL On ( ) ) {
rank: 102
score: 99.4014030905331
patch: Set < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 102
score: 99.38406192555146
patch: for ( Var s : def . depends && s != js CaMeL Scope ) {
rank: 102
score: 99.3725830078125
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ) {
rank: 102
score: 99.35779825846355
patch: for ( Var 1 s : def . depends ) {
rank: 102
score: 99.23360443115234
patch: for ( Var s : def . depends $NUMBER$ ( ) . depends ) {
rank: 102
score: 99.22685546875
patch: List = null ; for ( Var s : def . depends ) {
rank: 102
score: 99.16058756510417
patch: for ( Var s : def . depends && node . depends ) {
rank: 103
score: 99.41376287286931
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Name ( ) ) ) {
rank: 103
score: 99.40048217773438
patch: String scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 103
score: 99.38381958007812
patch: for ( Var s : state . get CaMeL Var ( name ) ) {
rank: 103
score: 99.37217203776042
patch: for ( Var s : def . get . depends CaMeL On ( def ) ) {
rank: 103
score: 99.35767886513158
patch: if ( def . scope != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 103
score: 99.23339080810547
patch: for ( final Var s : def . depends && def . depends ) {
rank: 103
score: 99.1600341796875
patch: / * for ( Var s : def . depends )
rank: 104
score: 99.41356259300595
patch: for ( Var s : n . depends CaMeL On ( s . get CaMeL Var ( ) ) )
rank: 104
score: 99.39998372395833
patch: result = def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL String ( name ) ) ;
rank: 104
score: 99.38291237571023
patch: for ( Var def : state . depends ) {
rank: 104
score: 99.2328742532169
patch: for ( Var s : def . depends 1 ( s . depends ) ) {
rank: 104
score: 99.22613525390625
patch: for ( Var s : def . get CaMeL Var s ) {
rank: 104
score: 99.15974695542279
patch: for ( Var s : def . depends != get CaMeL Var ( ) ) {
rank: 105
score: 99.41318969726562
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( { }
rank: 105
score: 99.4126708984375
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( $STRING$ ) ;
rank: 105
score: 99.39890700120192
patch: try { def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 105
score: 99.38281860351563
patch: if ( s != js CaMeL Scope ) {
rank: 105
score: 99.37108656939338
patch: / * for ( Var s : n . depends CaMeL On ( def ) )
rank: 105
score: 99.35685424804687
patch: for ( Var s : def . depends CaMeL On . reaching CaMeL Def . depends ) {
rank: 105
score: 99.23247213924633
patch: for ( Var s : def . depends == null Var s . depends ) {
rank: 105
score: 99.2257080078125
patch: for ( Var < String > s : def . depends ) {
rank: 105
score: 99.1594571200284
patch: for ( Integer s : def . depends ) {
rank: 106
score: 99.39839680989583
patch: if ( js CaMeL Scope != null && s . scope != js CaMeL Scope ) {
rank: 106
score: 99.38236860795455
patch: for ( Var s : scope . depends ) {
rank: 106
score: 99.36985868566177
patch: for ( Var n : def . depends CaMeL On ( def ) ) { {
rank: 106
score: 99.3369369506836
patch: for ( Var s : def . contains ( js CaMeL Scope ) ) {
rank: 106
score: 99.23181870404412
patch: for ( Var s : def . is CaMeL Empty ( ) . depends ) {
rank: 106
score: 99.22554016113281
patch: for ( Set < Var > def > def : def . depends ) {
rank: 106
score: 99.15818277994792
patch: else for ( Var s : def . depends ) {
rank: 107
score: 99.4119011374081
patch: for ( Var s : def . get CaMeL In ( ) . n ) {
rank: 107
score: 99.397861328125
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var (
rank: 107
score: 99.38164728338069
patch: for ( Var s : def . scope ) {
rank: 107
score: 99.3694709329044
patch: for ( Var s : def . depends ) { def = s . depends )
rank: 107
score: 99.35368129185268
patch: if ( def . get CaMeL In ( ) != null ) {
rank: 107
score: 99.33653349034927
patch: Flow CaMeL State < Node > state = n . get CaMeL Annotation ( ) ;
rank: 107
score: 99.23046875
patch: for ( Var s : def . depends || s . depends ) {
rank: 107
score: 99.22392054966518
patch: for ( Var < String > def : def . depends ) {
rank: 107
score: 99.15817696707589
patch: Var s : for ( Node s : def . depends ) {
rank: 108
score: 99.411875
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( {
rank: 108
score: 99.39749145507812
patch: Object def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 108
score: 99.38075764973958
patch: for ( Var s : def . get CaMeL Cfg ( use CaMeL Node ) ) {
rank: 108
score: 99.36747911241319
patch: for ( Var s : n . depends CaMeL On ( def . depends ) ) {
rank: 108
score: 99.33597005208334
patch: for ( Node s : def . get CaMeL In ( ) ) {
rank: 108
score: 99.22389322916666
patch: for ( Var s : def . get CaMeL Options ( ) ) {
rank: 108
score: 99.15766906738281
patch: for ( Var s : def . get CaMeL Var ( def ) ) {
rank: 109
score: 99.41104929070724
patch: for ( Var s : def . reaching CaMeL Def . get ( 0 ) ) {
rank: 109
score: 99.4109765625
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends CaMeL On ( {
rank: 109
score: 99.39710693359375
patch: if ( s . scope != js CaMeL Scope && def . scope != js CaMeL Scope ) {
rank: 109
score: 99.36734008789062
patch: for ( Var s : n . depends CaMeL On ( this ) ) {
rank: 109
score: 99.35334014892578
patch: for ( Must CaMeL Def > s : def . depends ( ) ) {
rank: 109
score: 99.33592936197917
patch: for ( Var s : def . get CaMeL Count ( ) ) {
rank: 109
score: 99.23012473366477
patch: for ( int s : def . depends ) {
rank: 109
score: 99.22151453354779
patch: if ( def != null && ! def . is CaMeL Var ( ) ) {
rank: 110
score: 99.41090087890625
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ) ) {
rank: 110
score: 99.41037884880515
patch: for ( Var s : def . get CaMeL In ( ) . matches ) {
rank: 110
score: 99.395078125
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL String ( name ) ) ) {
rank: 110
score: 99.3788703469669
patch: for ( Node s : def . get CaMeL In ( ) . depends ) {
rank: 110
score: 99.36665424547698
patch: for ( Var s : def . depends CaMeL On ( def , use CaMeL Node ) )
rank: 110
score: 99.35300021701389
patch: for ( Must CaMeL Def > s : def . get CaMeL Annotation ( ) ) {
rank: 110
score: 99.33554077148438
patch: if ( state != js CaMeL Scope . get CaMeL Type ( ) ) {
rank: 110
score: 99.22979181463069
patch: for ( Var s : def . depends && {
rank: 110
score: 99.22124565972223
patch: List = def . depends ) ; for ( Var s : def . depends ) {
rank: 111
score: 99.40998391544117
patch: for ( Node < Var > def : def . depends CaMeL On ( ) )
rank: 111
score: 99.39464801290761
patch: final Var def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 111
score: 99.37865447998047
patch: for ( Must CaMeL Def : n . get CaMeL Annotation ( ) ) {
rank: 111
score: 99.36659869025735
patch: if ( def == null || def . depends CaMeL On ( this ) ) {
rank: 111
score: 99.33511555989584
patch: for ( Var s : def . get CaMeL Var ( name ) )
rank: 111
score: 99.22928292410714
patch: Var [ : for ( Var s : def . depends ) {
rank: 111
score: 99.15579659598214
patch: Object s : for ( Var s : def . depends ) {
rank: 112
score: 99.4100830078125
patch: for ( Var s : def . get CaMeL Id ( ) ) {
rank: 112
score: 99.40997103987068
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Var ( ) ) ) ) {
rank: 112
score: 99.3937744140625
patch: if ( js CaMeL Scope != null ) {
rank: 112
score: 99.37845865885417
patch: for ( Must CaMeL Def : state . get CaMeL In ( ) . depends ) {
rank: 112
score: 99.36512586805556
patch: for ( Var s : def . depends CaMeL On ( name , def ) ) {
rank: 112
score: 99.35188802083333
patch: for ( Flow CaMeL State < Must CaMeL Def > s : def . depends ) {
rank: 112
score: 99.22831508091518
patch: for ( Var s ] > def : def . depends ) {
rank: 112
score: 99.21994018554688
patch: if ( def != null ) { Var s = def . depends ) ;
rank: 112
score: 99.15521647135417
patch: for ( Var s : def . get CaMeL References ( ) ) {
rank: 113
score: 99.3932373046875
patch: String s = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 113
score: 99.3648173014323
patch: for ( Var s : def . get ) { {
rank: 113
score: 99.35137580422794
patch: for ( Must CaMeL Def s : state . get CaMeL In ( ) ) {
rank: 113
score: 99.33352481617646
patch: for ( Var s : def . depends ) { if ( s . get )
rank: 113
score: 99.2280029296875
patch: for ( Var s : def . depends && s . get ) {
rank: 113
score: 99.21942138671875
patch: for ( Var s : def . get CaMeL Var ( 0 ) . depends ) {
rank: 113
score: 99.15440784801136
patch: for ( Var s : current . depends ) {
rank: 114
score: 99.40866570723684
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL State ( ) ;
rank: 114
score: 99.4085360440341
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( $STRING$ ) ) )
rank: 114
score: 99.39320439877717
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 114
score: 99.3771743774414
patch: if ( def != js CaMeL Scope && def != js CaMeL Scope ) {
rank: 114
score: 99.36312705592105
patch: for ( Var s : def . depends CaMeL On ( def , depends CaMeL On ) )
rank: 114
score: 99.35125054253473
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL In ( )
rank: 114
score: 99.22627258300781
patch: Var s = null { for ( Var s : def . depends ) {
rank: 114
score: 99.21884765625
patch: for ( Var s : def . get CaMeL Units ( ) ) {
rank: 114
score: 99.15415852864584
patch: for ( Var s : def . depends ) def . depends ) {
rank: 115
score: 99.40828664679276
patch: for ( Var s : def . reaching CaMeL Def . get ( state ) ) {
rank: 115
score: 99.3927001953125
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 115
score: 99.37651824951172
patch: for ( Var s : n . reaching CaMeL Def . depends ) {
rank: 115
score: 99.36175858347039
patch: for ( Var s : n . depends CaMeL On ( def , def . depends ) )
rank: 115
score: 99.3323974609375
patch: if ( state == js CaMeL Scope . get CaMeL Type ( ) ) {
rank: 115
score: 99.2260498046875
patch: for ( Var s : def . depends $NUMBER$ ( s ) ) {
rank: 115
score: 99.2171630859375
patch: for ( Var s : def != null ? def . depends ) {
rank: 116
score: 99.4080078125
patch: for ( Var s : def . get CaMeL In ( ) . depends ( $STRING$ ) ) {
rank: 116
score: 99.40755004882813
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( {
rank: 116
score: 99.392607421875
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 116
score: 99.37629530164931
patch: for ( Var s : def . get CaMeL Var ( use CaMeL Node ) ) {
rank: 116
score: 99.36174460018383
patch: for ( Var s : n . depends CaMeL On ( def , false ) )
rank: 116
score: 99.35101639597039
patch: for ( Var s : def . depends && state . get CaMeL In ( ) ) {
rank: 116
score: 99.33238118489584
patch: for ( Var s : def . equals ( js CaMeL Scope ) )
rank: 116
score: 99.22596842447916
patch: for ( Var s : def . depends && def instanceof Var ) {
rank: 116
score: 99.21591668379934
patch: Var s = def . depends ) { for ( Var s : def . depends ) {
rank: 116
score: 99.15289306640625
patch: for ( Var s : def . depends == null ? def . depends )
rank: 117
score: 99.40688069661458
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( Var . class ) ) )
rank: 117
score: 99.37457634420956
patch: for ( Definition s : def . get CaMeL In ( ) . depends ) {
rank: 117
score: 99.36130099826389
patch: for ( Var s : n . depends ) { Var s = def . depends )
rank: 117
score: 99.35079193115234
patch: for ( Var s : def . depends CaMeL On ( state ) ) {
rank: 117
score: 99.33210754394531
patch: for ( Var s -- : def . get CaMeL In ( ) ) {
rank: 117
score: 99.21511008522727
patch: for ( Var s : type . depends ) {
rank: 118
score: 99.3918987771739
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Property ( name ) ) ;
rank: 118
score: 99.37456198299633
patch: for ( Var s : state . get CaMeL Scope ( ) . depends ) {
rank: 118
score: 99.36109076605902
patch: for ( Var s : def . depends CaMeL On ( Var . class ) ) {
rank: 118
score: 99.35040961371527
patch: for ( Must CaMeL Def > state : def . depends CaMeL On ( ) ) {
rank: 118
score: 99.22489790482955
patch: for ( Var s : ref . depends ) {
rank: 118
score: 99.2150017233456
patch: for ( Var s : def . depends ) { return s . depends ) ;
rank: 118
score: 99.15005313648896
patch: for ( Var s : def . depends != null ? def . depends ) {
rank: 119
score: 99.40378289473684
patch: for ( Var s : def . reaching CaMeL Def . get ( start ) ) {
rank: 119
score: 99.39147418478261
patch: try { def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 119
score: 99.37342936197916
patch: for ( Var s : def . depends CaMeL On . depends ) {
rank: 119
score: 99.35951926491477
patch: for ( Var n : n . depends ) {
rank: 119
score: 99.3502948467548
patch: for ( Must CaMeL Def def : def . depends ) {
rank: 119
score: 99.33121984145221
patch: if ( state == js CaMeL Scope . get CaMeL Value ( name ) ) {
rank: 119
score: 99.22466362847223
patch: for ( Var s : def . is CaMeL Empty ( s . depends ) ) {
rank: 119
score: 99.21470336914062
patch: for ( Var s : def . depends ) { s . add ( def . depends ) ;
rank: 120
score: 99.4042736235119
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( def ) )
rank: 120
score: 99.37310028076172
patch: for ( Var s : def . get CaMeL Definition ( name ) ) {
rank: 120
score: 99.35762293198529
patch: for ( Var n : def . depends CaMeL On ( def , def ) )
rank: 120
score: 99.347802734375
patch: if ( js CaMeL Scope instanceof Must CaMeL Def > state . get CaMeL In ( ) ) {
rank: 120
score: 99.33071719898896
patch: Flow CaMeL State < Must CaMeL Def > state = get CaMeL Annotation ( ) ;
rank: 120
score: 99.22418212890625
patch: for ( Var s : def . depends , def def . depends ) {
rank: 120
score: 99.14865944602273
patch: for ( final Var s : def . depends )
rank: 121
score: 99.40327671595982
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . get CaMeL Var ( ) ) ) )
rank: 121
score: 99.35637350643383
patch: for ( Var s : def . depends CaMeL On ( def , null ) )
rank: 121
score: 99.33037923177083
patch: for ( Var s : def . is CaMeL In ( name ) )
rank: 121
score: 99.22378879123264
patch: for ( Var s : def . equals ( s . depends ) . depends ) {
rank: 121
score: 99.2144266764323
patch: if ( def != null && def . depends ) {
rank: 121
score: 99.14801025390625
patch: Node s : for ( Var s : def . depends ) {
rank: 122
score: 99.40308779761905
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( name ) )
rank: 122
score: 99.40260074013158
patch: for ( Var s : def . get CaMeL Type ( ) . depends ( ) ) {
rank: 122
score: 99.38995768229167
patch: if ( def != null && s . scope != js CaMeL Scope )
rank: 122
score: 99.37147352430556
patch: for ( Var def : n . get CaMeL Annotation ( use CaMeL Node ) ) {
rank: 122
score: 99.34772406684027
patch: for ( Must CaMeL Def > s : n . get CaMeL In ( ) ) {
rank: 122
score: 99.32968319163604
patch: if ( state != js CaMeL Scope . get CaMeL Value ( name ) ) {
rank: 122
score: 99.22317165798611
patch: for ( Var s : def . get CaMeL Var ( s . depends ) ) {
rank: 122
score: 99.21430896577381
patch: for ( Var s : def . get CaMeL Var ( ) . to CaMeL Array ( ) ) {
rank: 122
score: 99.14747203480114
patch: for ( Var name : def . depends ) {
rank: 123
score: 99.403076171875
patch: for ( Var s : def . depends CaMeL On ( id ) ) {
rank: 123
score: 99.40208129882812
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Code ( ) ) {
rank: 123
score: 99.38929578993056
patch: if ( s . scope != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 123
score: 99.37139214409723
patch: for ( Var def : n . get CaMeL Node ( use CaMeL Node ) ) {
rank: 123
score: 99.35468493009868
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ) )
rank: 123
score: 99.32948931525735
patch: for ( Var s : def . depends CaMeL On ( name + name ) )
rank: 123
score: 99.21414888822116
patch: for ( Iterator < Var s : def . depends ) {
rank: 123
score: 99.14704132080078
patch: try { Var s : for ( Var s : def . depends ) {
rank: 124
score: 99.40298897879464
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . to CaMeL String ( ) ) ) )
rank: 124
score: 99.38894653320312
patch: int def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 124
score: 99.37077501085069
patch: for ( Var s : def . get CaMeL Scope ( use CaMeL Node ) ) {
rank: 124
score: 99.35441589355469
patch: for ( Var n : def . depends CaMeL On ( name ) ) {
rank: 124
score: 99.22153607536765
patch: for ( Var s : def . depends ? null : def . depends ) {
rank: 124
score: 99.14681302584134
patch: / * for ( String s : def . depends ) {
rank: 125
score: 99.40212833180146
patch: for ( Node < Node > s : def . depends CaMeL On ( ) )
rank: 125
score: 99.40069901315789
patch: for ( Var s : def . reaching CaMeL Def . get ( node ) ) {
rank: 125
score: 99.38866170247395
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; else
rank: 125
score: 99.36856079101562
patch: for ( Must CaMeL Def : state . get CaMeL In ( ) ) {
rank: 125
score: 99.35411658653847
patch: for ( Var n : n . depends CaMeL On ) {
rank: 125
score: 99.34645385742188
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( state ) ;
rank: 125
score: 99.21912434895833
patch: for ( Var s : def . depends , depends . depends ) {
rank: 125
score: 99.21311442057292
patch: System . out . println ( $STRING$ + def . get CaMeL Parent ( ) . get CaMeL Name ( ) ) ;
rank: 125
score: 99.1467041015625
patch: for ( Var s : def . to CaMeL String ( ) ) {
rank: 126
score: 99.401123046875
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Type ( ) ) ) {
rank: 126
score: 99.40056409333882
patch: for ( Var s : def . get CaMeL In ( ) . state ( ) ) {
rank: 126
score: 99.38817342122395
patch: String s = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 126
score: 99.36768934461806
patch: for ( Must CaMeL Def > state : n . get CaMeL Annotation ( ) ) {
rank: 126
score: 99.35394694010417
patch: Var s = def . depends CaMeL On ( def , def ) ;
rank: 126
score: 99.32852608816964
patch: for ( Var s : def . is CaMeL Annotation ( ) )
rank: 126
score: 99.21865012428977
patch: for ( void s : def . depends ) {
rank: 126
score: 99.21300159801136
patch: Var s = def . depends ( def . depends ( s . to CaMeL String ( ) ) ) ;
rank: 126
score: 99.1466952237216
patch: for ( Character s : def . depends ) {
rank: 127
score: 99.40092329545455
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( type ) ) )
rank: 127
score: 99.40007934570312
patch: for ( Var s : def . depends ( state . get CaMeL In ( ) ) ) {
rank: 127
score: 99.38806640625
patch: for ( Var s : def . depends CaMeL On ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 127
score: 99.35367257254464
patch: for ( Var n : def . depends CaMeL On ( ) )
rank: 127
score: 99.34546661376953
patch: for ( Flow CaMeL State < Node > state : def . depends ) {
rank: 127
score: 99.32845052083333
patch: Definition def = state . get CaMeL Value ( ) ;
rank: 127
score: 99.21819661458333
patch: for ( Var s : def . depends & def . depends ) {
rank: 127
score: 99.21248372395833
patch: System . err . println ( $STRING$ + def . get CaMeL Parent ( ) . get CaMeL Name ( ) ) ;
rank: 127
score: 99.14654134114583
patch: for ( Var s : def . get CaMeL Prototype ( ) ) {
rank: 128
score: 99.40025745738636
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Name ( ) ) ) {
rank: 128
score: 99.38798014322917
patch: Resolver def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 128
score: 99.35362413194444
patch: for ( Var s : def . depends CaMeL On ( for CaMeL Var ) ) {
rank: 128
score: 99.32843376608456
patch: for ( Var s : def . depends ) { if ( s . depends )
rank: 128
score: 99.21769714355469
patch: for ( Var s ] : def . depends , def . depends ) {
rank: 128
score: 99.2121826171875
patch: for ( Var s : def . get CaMeL Errors ( ) ) {
rank: 128
score: 99.1456527709961
patch: for ( Var s : node . depends CaMeL On ( s ) ) {
rank: 129
score: 99.39955357142857
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( ) )
rank: 129
score: 99.38787841796875
patch: if ( js CaMeL Scope != js CaMeL Scope ) {
rank: 129
score: 99.36582318474265
patch: for ( Var s : n . get CaMeL Scope ( ) . depends ) {
rank: 129
score: 99.35356987847223
patch: for ( Var s : def . depends ) { Var s = s . depends ;
rank: 129
score: 99.32793782552083
patch: for ( Object s : def . get CaMeL In ( ) ) {
rank: 129
score: 99.21764119466145
patch: if ( s != null && def != null ) {
rank: 129
score: 99.21148681640625
patch: if ( def != null || def != null ) {
rank: 130
score: 99.39952503551136
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Parent ( ) ) ) {
rank: 130
score: 99.39761513157895
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Type ( ) ;
rank: 130
score: 99.38782552083333
patch: if ( def != null && def . scope != js CaMeL Scope )
rank: 130
score: 99.36561584472656
patch: for ( Var s : def . depends ) : def . depends ) {
rank: 130
score: 99.35343663832721
patch: while ( def != null && def . depends CaMeL On ( def ) ) {
rank: 130
score: 99.34453735351562
patch: for ( Var s : def . depends CaMeL On . depends CaMeL On ( s ) ) {
rank: 130
score: 99.32790902944711
patch: for ( Var s : def . length ( ) ) {
rank: 130
score: 99.216845703125
patch: for ( Var s == null ? null : def . depends ) {
rank: 130
score: 99.21140543619792
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Value ( ) ) . depends ) {
rank: 130
score: 99.14459635416667
patch: for ( Var s : def . get CaMeL Functions ( ) ) {
rank: 131
score: 99.39876883370536
patch: for ( Var s : def . get CaMeL Arg ( ) )
rank: 131
score: 99.38747336647727
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL In ( ) ) ;
rank: 131
score: 99.36544095552884
patch: for ( Var s : use CaMeL Node . depends ) {
rank: 131
score: 99.35206514246323
patch: for ( Var s : def . depends CaMeL On ( ) ) { { {
rank: 131
score: 99.32726332720588
patch: Flow CaMeL State < Node > def = n . get CaMeL Annotation ( ) ;
rank: 131
score: 99.20832625679348
patch: for ( Var s : def . get CaMeL Next ( ) . get CaMeL Var CaMeL Count ( ) ) {
rank: 131
score: 99.14399270450367
patch: if ( s != null ) for ( Var s : def . depends ) {
rank: 132
score: 99.39857421875
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . def ) ) ) {
rank: 132
score: 99.39662080652573
patch: Definition < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 132
score: 99.3869120279948
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( js CaMeL Scope ) ) {
rank: 132
score: 99.36347791883681
patch: for ( Var s : def . add CaMeL Node ( use CaMeL Node ) ) {
rank: 132
score: 99.35201865748355
patch: Var s = def . depends CaMeL On ( def , def . depends CaMeL On ) ;
rank: 132
score: 99.32713407628677
patch: if ( js CaMeL Scope . get CaMeL Value ( name ) == null ) {
rank: 132
score: 99.216552734375
patch: for ( Var s : def . depends $NUMBER$ ( ) ) {
rank: 133
score: 99.3984707919034
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Arg ( ) ) ) {
rank: 133
score: 99.39582262541118
patch: for ( Var s : def . get CaMeL Def ( ) . size ( ) ) {
rank: 133
score: 99.38689507378473
patch: if ( js CaMeL Scope != null && def . scope != js CaMeL Scope ) {
rank: 133
score: 99.35091727120536
patch: for ( Var s : def . depends ) { if ( {
rank: 133
score: 99.34365665211396
patch: if ( def != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 133
score: 99.32666733685662
patch: if ( state != js CaMeL Scope . get CaMeL Name ( name ) ) {
rank: 133
score: 99.20665564903847
patch: for ( Iterator < Var > : def . depends ) {
rank: 133
score: 99.14349920099431
patch: for ( Var s : def . depends ) }
rank: 134
score: 99.39814685639881
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Scope ( ) ) )
rank: 134
score: 99.39576551649306
patch: Definition def = state . get CaMeL In ( ) . depends CaMeL On ( ) ;
rank: 134
score: 99.3866943359375
patch: if ( s . scope != js CaMeL Scope && s . scope != js CaMeL Scope ) {
rank: 134
score: 99.36270480685764
patch: if ( def == js CaMeL Scope && s . scope != js CaMeL Scope ) {
rank: 134
score: 99.35023408777573
patch: for ( Var s : def . depends CaMeL On ( def ) . depends )
rank: 134
score: 99.3433329264323
patch: for ( Var s -- : def . depends ) {
rank: 134
score: 99.32521685431985
patch: if ( state == js CaMeL Scope . get CaMeL Name ( name ) ) {
rank: 134
score: 99.21414005055146
patch: for ( Var s : def . depends && depends , def . depends ) {
rank: 135
score: 99.38643215013587
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( name ) ;
rank: 135
score: 99.36258951822917
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars )
rank: 135
score: 99.3502197265625
patch: for ( Var s : n . depends CaMeL On ( def , true ) )
rank: 135
score: 99.34266764322916
patch: for ( Var s > s : def . depends ( ) ) {
rank: 135
score: 99.32479422433036
patch: for ( Var s : def . depends ( false ) ) {
rank: 135
score: 99.21292317708334
patch: for ( Var s : def . is CaMeL None ( ) ) {
rank: 135
score: 99.20572916666667
patch: for ( Var s : def . get CaMeL Actions ( ) ) {
rank: 135
score: 99.14262838924633
patch: if ( def != null { for ( Var s : def . depends ) {
rank: 136
score: 99.39778999660327
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( name ) ) ) {
rank: 136
score: 99.38636271158855
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope .
rank: 136
score: 99.36109116498162
patch: for ( Var s : def . depends && def != js CaMeL Scope ) {
rank: 136
score: 99.34939735814145
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( {
rank: 136
score: 99.3423828125
patch: for ( Var s ++ : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ) {
rank: 136
score: 99.21249389648438
patch: Var depends = null ; for ( Var s : def . depends ) {
rank: 136
score: 99.14089786305146
patch: for ( Var s : def . depends && new Var s . depends ) {
rank: 137
score: 99.39748313210227
patch: for ( Var s : def . depends CaMeL On ( s ) . depends CaMeL On ( s ) )
rank: 137
score: 99.39347116570724
patch: for ( Var s : def . reaching CaMeL Def . get ( size ) ) {
rank: 137
score: 99.34918212890625
patch: for ( Node < Node > s : def . depends CaMeL On ) {
rank: 137
score: 99.32405598958333
patch: for ( Var s : def . get CaMeL Default ( ) ) {
rank: 137
score: 99.21235926011029
patch: for ( Var s : def . depends ? def : def . depends ) {
rank: 137
score: 99.20242130055146
patch: for ( Var s : def . depends ) { def = def . depends )
rank: 137
score: 99.14068244485294
patch: for ( Var s : def . depends == get CaMeL Var ( ) ) {
rank: 138
score: 99.39714965820312
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( ) )
rank: 138
score: 99.3934685202206
patch: for ( Var s : def . get CaMeL Type ( ) . depends ) {
rank: 138
score: 99.38569779829545
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 138
score: 99.36081112132354
patch: for ( Var s : n . get CaMeL Def ( ) . depends ) {
rank: 138
score: 99.34888413373162
patch: for ( Var s : def . depends CaMeL On ( def ) ) break ;
rank: 138
score: 99.32398897058823
patch: for ( Var s : def . depends ) { if ( s != null )
rank: 138
score: 99.21192345252403
patch: for ( Var s : def . depends ) println ) {
rank: 139
score: 99.3603759765625
patch: if ( def == js CaMeL Scope ) {
rank: 139
score: 99.34878058182566
patch: for ( Var s : def . depends CaMeL On ) { def = def . depends )
rank: 139
score: 99.34149932861328
patch: for ( Var s ++ : def . depends CaMeL On ( ) ) {
rank: 139
score: 99.32281853170956
patch: for ( Var s : def . depends CaMeL On . get ( name ) )
rank: 139
score: 99.21152565696023
patch: for ( Var s : def . value ) {
rank: 139
score: 99.20133463541667
patch: if ( def == null ) { return null ; }
rank: 139
score: 99.1396817294034
patch: for ( Var s : parent . depends ) {
rank: 140
score: 99.39615885416667
patch: for ( Var s : def . depends CaMeL On ( { def . depends CaMeL On ( ) )
rank: 140
score: 99.385
patch: return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( js CaMeL Scope . get CaMeL In ( ) ) ;
rank: 140
score: 99.36018880208333
patch: Definition def = state . get CaMeL Annotation ( use CaMeL Node ) ;
rank: 140
score: 99.34829532398896
patch: for ( Var s : def . depends CaMeL On ( this , def ) )
rank: 140
score: 99.34088456003289
patch: Flow CaMeL State < Must CaMeL Def > state = def . get CaMeL Annotation ( ) ;
rank: 140
score: 99.32270364200367
patch: Flow CaMeL State < Node > state = state . get CaMeL Annotation ( ) ;
rank: 140
score: 99.20956081814236
patch: for ( Var s : def . get CaMeL Var ( def ) . depends ) {
rank: 140
score: 99.20093645368304
patch: for ( Iterator < Var > next : def . depends ) {
rank: 140
score: 99.13949381510416
patch: Var s : { for ( Var s : def . depends ) {
rank: 141
score: 99.39484273976294
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( ) ) ) ) {
rank: 141
score: 99.392578125
patch: for ( Var s : def . depends ( ) . get CaMeL Def ( ) ) {
rank: 141
score: 99.38484330610795
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 141
score: 99.3594482421875
patch: for ( Var def : def . get CaMeL Scope ( ) ) {
rank: 141
score: 99.347802734375
patch: for ( Var s : n . get CaMeL Arg ( ) ) {
rank: 141
score: 99.32259368896484
patch: if ( js CaMeL Scope . get CaMeL Value ( name ) != null )
rank: 141
score: 99.20873260498047
patch: for ( Var s : ( Var s . depends ) . depends ) {
rank: 141
score: 99.138916015625
patch: for ( Var s : def . depends == new Var s . depends ) {
rank: 142
score: 99.39457872178819
patch: for ( Var s : def . depends CaMeL On ( s , false ) ) {
rank: 142
score: 99.39226888020833
patch: for ( Var s : def . get CaMeL Key ( ) ) {
rank: 142
score: 99.38395552201705
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( name ) ;
rank: 142
score: 99.34740492876838
patch: { for ( Var s : def . depends CaMeL On ( def ) ) {
rank: 142
score: 99.34044692095588
patch: for ( Must CaMeL Def def : state . get CaMeL In ( ) ) {
rank: 142
score: 99.322216796875
patch: for ( Var s : def . depends ) { if ( true )
rank: 142
score: 99.20736694335938
patch: for ( Var s ] : def . depends || def . depends ) {
rank: 142
score: 99.19997336647727
patch: for ( Var s : def . depends ) { s . depends . add ( def . depends ) ;
rank: 142
score: 99.1386359719669
patch: for ( Var s : def . get CaMeL Root CaMeL Var ( ) ) {
rank: 143
score: 99.39432198660714
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( ) ) {
rank: 143
score: 99.39216051603618
patch: for ( Var s : def . reaching CaMeL Def . get ( def ) ) {
rank: 143
score: 99.38325832201087
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 143
score: 99.3580322265625
patch: if ( def == js CaMeL Scope . get CaMeL In ( ) ) {
rank: 143
score: 99.33936309814453
patch: for ( Var s : def . depends CaMeL On ( false ) ) {
rank: 143
score: 99.32158346737133
patch: if ( def != null && state . get CaMeL Annotation ( ) != null )
rank: 143
score: 99.20730251736111
patch: for ( Var s : def . depends ) { def = def . depends ) }
rank: 143
score: 99.13826810396634
patch: ) { for ( Var s : def . depends ) {
rank: 144
score: 99.39418247767857
patch: for ( Var s : def . get CaMeL Var ( ) )
rank: 144
score: 99.39202521829044
patch: for ( Must CaMeL Def def : def . get CaMeL In ( ) ) {
rank: 144
score: 99.38272094726562
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . get ( ) ;
rank: 144
score: 99.34658633961396
patch: Var s = def . depends CaMeL On ( def , def . depends ) ;
rank: 144
score: 99.33921508789062
patch: for ( Var s : def . depends ) { if ( s . scope != null ) {
rank: 144
score: 99.32144927978516
patch: for ( Var s : def . depends ( use CaMeL Node ) ) {
rank: 144
score: 99.19717261904762
patch: for ( Var s : def . get CaMeL Classes ( ) . to CaMeL Array ( ) ) {
rank: 144
score: 99.13716634114583
patch: for ( ? Var s : def . depends ) {
rank: 145
score: 99.39370582217262
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( ) ) )
rank: 145
score: 99.39104260896382
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get (
rank: 145
score: 99.38268461681548
patch: else def = state . get CaMeL In ( ) . get CaMeL Def ( use CaMeL Node ) ;
rank: 145
score: 99.35494995117188
patch: for ( Must CaMeL Def : state . get CaMeL Annotation ( ) ) {
rank: 145
score: 99.34575737847223
patch: / * for ( Var s : def . depends CaMeL On ( ) ) * /
rank: 145
score: 99.32080950055804
patch: if ( state . get CaMeL Value ( ) != null ) {
rank: 145
score: 99.1954012784091
patch: for ( Var s : def . depends ) { def . depends . add ( def . depends ) ;
rank: 145
score: 99.13690185546875
patch: Var s : for ( Var def : def . depends ) {
rank: 146
score: 99.39044596354167
patch: Definition def = state . get CaMeL In ( ) . depends ) ;
rank: 146
score: 99.38241975203805
patch: } return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 146
score: 99.3548916903409
patch: for ( Definition def : def . depends ) {
rank: 146
score: 99.34556820518092
patch: Var s = def . depends CaMeL On ( def . depends CaMeL On ( ) ) ;
rank: 146
score: 99.33781602647569
patch: if ( def != null && state . get CaMeL In ( ) != null ) {
rank: 146
score: 99.20702406939338
patch: for ( Var s : 0 . depends , def : def . depends ) {
rank: 146
score: 99.19533081054688
patch: synchronized ( def . depends ) { for ( Var s : def . depends . depends ) {
rank: 146
score: 99.13683363970588
patch: for ( Var s : def . depends != new Var s . depends ) {
rank: 147
score: 99.3914211107337
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( $STRING$ ) ) ) {
rank: 147
score: 99.39031661184211
patch: for ( Var s : n . get CaMeL In ( ) . depends ( ) ) {
rank: 147
score: 99.38127305772569
patch: if ( s . scope != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 147
score: 99.3542709350586
patch: for ( Var s : state . get CaMeL In ( ) . depends )
rank: 147
score: 99.34553608141448
patch: for ( Var s : def . depends CaMeL On ) { def = s . depends )
rank: 147
score: 99.32013346354167
patch: for ( Var s : def . get CaMeL Class ( ) ) {
rank: 147
score: 99.2061767578125
patch: for ( Var s : null . depends , s . depends ) {
rank: 147
score: 99.19523111979167
patch: Var s = def . depends ) ;
rank: 147
score: 99.13672688802083
patch: for ( Var s : def . get CaMeL Fields ( ) ) {
rank: 148
score: 99.391220703125
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ) {
rank: 148
score: 99.39011744449013
patch: for ( Var s : def . reaching CaMeL Def . get ( true ) ) {
rank: 148
score: 99.38069661458333
patch: if ( js CaMeL Scope != js CaMeL Scope ) { return true ;
rank: 148
score: 99.35373263888889
patch: for ( Var s : def . get CaMeL Definition ( use CaMeL Node ) ) {
rank: 148
score: 99.33744089226974
patch: for ( Var s : def . js CaMeL Scope . get CaMeL In ( ) ) {
rank: 148
score: 99.31927131204044
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ;
rank: 148
score: 99.20564539292279
patch: for ( Var s : def . depends || def , def . depends ) {
rank: 148
score: 99.13551958869485
patch: for ( Var s : def . depends ) s . depends ( def ) ;
rank: 149
score: 99.39119466145833
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Arg ( ) ) )
rank: 149
score: 99.38067626953125
patch: if ( def != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 149
score: 99.35369514016544
patch: for ( Var s : n . get CaMeL Node ( ) . depends ) {
rank: 149
score: 99.34398735894098
patch: for ( Var s : def . depends CaMeL On ( depends CaMeL On ) ) {
rank: 149
score: 99.33568050986842
patch: for ( Var s : def . depends && s . scope != js CaMeL Scope ) {
rank: 149
score: 99.31831868489583
patch: if ( state . scope != js CaMeL Scope ) {
rank: 149
score: 99.2052889737216
patch: for ( Var s : def . matches ) {
rank: 149
score: 99.19468470982143
patch: for ( Node < String > s : def . depends ) {
rank: 149
score: 99.13511029411765
patch: if ( def != null ) { System . out . println ( $STRING$ ) ;
rank: 150
score: 99.39095703125
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends ) ) ) {
rank: 150
score: 99.38924367804276
patch: for ( Var s : def . reaching CaMeL Def . get ( false ) ) {
rank: 150
score: 99.38003540039062
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def ( js CaMeL Scope ) ;
rank: 150
score: 99.35350884331598
patch: for ( Var def : state . get CaMeL Node ( use CaMeL Node ) ) {
rank: 150
score: 99.33530560661765
patch: for ( Var s : def . depends ) { if ( s . scope !=
rank: 150
score: 99.31819152832031
patch: if ( js CaMeL Scope . get CaMeL In ( ) == null ) {
rank: 150
score: 99.20520737591912
patch: for ( Var s : def . depends $NUMBER$ ( s ) . depends ) {
rank: 150
score: 99.19375610351562
patch: System . out . println ( $STRING$ + def . get CaMeL Parent ( ) . get CaMeL Value ( ) ) ;
rank: 150
score: 99.13485717773438
patch: for ( for ( Var s : def . depends )
rank: 151
score: 99.3898693266369
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( this ) {
rank: 151
score: 99.38911707261029
patch: for ( Must CaMeL Def s : def . get CaMeL In ( ) ) {
rank: 151
score: 99.3798828125
patch: String name = state . get CaMeL In ( ) . reaching CaMeL Def . get CaMeL Var ( name ) ;
rank: 151
score: 99.35291963465073
patch: for ( Var s : state . get CaMeL Node ( ) . depends ) {
rank: 151
score: 99.34193420410156
patch: for ( Var exp : def . depends CaMeL On ( def ) ) {
rank: 151
score: 99.33509585731908
patch: for ( Var s : def . depends CaMeL On . get CaMeL Scope ( ) ) {
rank: 151
score: 99.317919921875
patch: for ( Var s : def . get CaMeL Method ( ) ) {
rank: 151
score: 99.20506376378677
patch: for ( Var s : def . is CaMeL Local ( ) . depends ) {
rank: 151
score: 99.19374778053977
patch: for ( Var value : def . depends ) {
rank: 151
score: 99.13453892299107
patch: for ( Var s : def . depends && def != null {
rank: 152
score: 99.37909490411931
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Name ( ) ) ;
rank: 152
score: 99.341552734375
patch: for ( Var s : s . depends CaMeL On ( def ) ) {
rank: 152
score: 99.20462036132812
patch: for ( Var s : def . equals ( s . depends ) ) {
rank: 153
score: 99.38944498697917
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . def ) ) )
rank: 153
score: 99.38822856702302
patch: for ( Var s : def . get CaMeL Scope ( ) . depends ( ) ) {
rank: 153
score: 99.378935546875
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) + true ;
rank: 153
score: 99.34931497012867
patch: for ( Var def : def . get CaMeL Cfg ( ) . depends ) {
rank: 153
score: 99.34127987132354
patch: for ( Var s : def . depends CaMeL On ( def , def ) {
rank: 153
score: 99.33417426215277
patch: if ( def instanceof Must CaMeL Def > state . get CaMeL In ( ) ) {
rank: 153
score: 99.31765311104911
patch: for ( Var s : state . get CaMeL In ( ) )
rank: 153
score: 99.204248046875
patch: for ( Var s : def . depends && def , depends ) {
rank: 153
score: 99.19309997558594
patch: for ( Iterator < Var > 0 > 0 : def . depends ) {
rank: 153
score: 99.13350183823529
patch: for ( final Var s : def . depends CaMeL On ( def ) ) {
rank: 154
score: 99.378349609375
patch: try { def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 154
score: 99.34928894042969
patch: for ( Var s : def . equals ( use CaMeL Node ) ) {
rank: 154
score: 99.34110753676471
patch: for ( Var s : def . depends CaMeL On ( ) ) return true ;
rank: 154
score: 99.33390538832721
patch: for ( Var s : def . depends CaMeL On . iterator ( ) ) {
rank: 154
score: 99.31756591796875
patch: for ( Var s : def . get CaMeL In ( ) ) break ;
rank: 154
score: 99.2031609030331
patch: for ( Var s : def . depends $NUMBER$ ( def ) . depends ) {
rank: 154
score: 99.19259643554688
patch: if ( def == null ) { return false ; }
rank: 154
score: 99.1334228515625
patch: } else { for ( Var s : def . depends ) {
rank: 155
score: 99.38909357244319
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( def ) )
rank: 155
score: 99.377412109375
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; break ;
rank: 155
score: 99.34912923177083
patch: for ( Var def : def . depends CaMeL On ( ) ) {
rank: 155
score: 99.34021809895833
patch: return def != null && def . depends CaMeL On ( def ) ;
rank: 155
score: 99.33255807976974
patch: for ( Var s : def . js CaMeL Scope . get CaMeL Annotation ( ) ) {
rank: 155
score: 99.31653550091912
patch: for ( Flow CaMeL State < Must CaMeL Def > state : def . depends )
rank: 155
score: 99.19123391544117
patch: if ( def != null && ! s . is CaMeL Empty ( ) ) {
rank: 156
score: 99.3883544921875
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( { }
rank: 156
score: 99.38740234375
patch: for ( Var s : n . get CaMeL Def ( ) ) {
rank: 156
score: 99.37735648777173
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 156
score: 99.33997866981908
patch: for ( Var s : n . depends CaMeL On . depends CaMeL On ( def ) )
rank: 156
score: 99.33142700195313
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( {
rank: 156
score: 99.31588541666666
patch: for ( Branch s : def . get CaMeL In ( ) ) {
rank: 156
score: 99.20253092447916
patch: for ( Var s : def . depends || def == null ) {
rank: 156
score: 99.190380859375
patch: for ( Var s : def . depends ) { def = def . depends . depends ) ;
rank: 157
score: 99.38812934027777
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Var ( ) ) )
rank: 157
score: 99.38740234375
patch: for ( Var s : def . get CaMeL In ( ) . reaching CaMeL Def ) {
rank: 157
score: 99.37661345108695
patch: return def . get CaMeL Node ( ) . scope != js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 157
score: 99.34808349609375
patch: if ( s != js CaMeL Scope && def != js CaMeL Scope ) {
rank: 157
score: 99.33863022748162
patch: if ( def != null && def . depends CaMeL On ( this ) ) {
rank: 157
score: 99.3309814453125
patch: for ( Var s : def . depends CaMeL On > 1 ) {
rank: 157
score: 99.31555989583333
patch: for ( Var s : def . reaching CaMeL Def . depends )
rank: 157
score: 99.18995425575658
patch: for ( Var s : def . depends ) { def = def . depends ) ; }
rank: 157
score: 99.13201904296875
patch: for ( Var s : def . depends != null ? s . depends )
rank: 158
score: 99.3879925271739
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( type ) ) ) {
rank: 158
score: 99.37558381453805
patch: list = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 158
score: 99.34787884880515
patch: for ( Var def : n . get CaMeL Annotation ( ) . depends ) {
rank: 158
score: 99.20098876953125
patch: if ( def != null && s != null ) {
rank: 158
score: 99.18991088867188
patch: for ( Var s : def . depends ) return s . depends ) ;
rank: 158
score: 99.13152669270833
patch: for ( Var s : def . depends - def . depends ) {
rank: 159
score: 99.38714958639706
patch: for ( Var s : def . get CaMeL Annotation ( ) ) return true ;
rank: 159
score: 99.33842198988971
patch: for ( Var s : def . depends CaMeL On ( def , def , {
rank: 159
score: 99.20053998161765
patch: for ( Var s : null . depends , def : def . depends ) {
rank: 159
score: 99.1894287109375
patch: for ( Var s : def . to CaMeL Array ( ) ) {
rank: 160
score: 99.38651529947917
patch: for ( Var 1 : def . get CaMeL In ( ) ) {
rank: 160
score: 99.38626302083334
patch: for ( Var s : def . depends CaMeL On ( target ) )
rank: 160
score: 99.37413969494048
patch: if ( s . scope != js CaMeL Scope . get CaMeL Var ( use CaMeL Node ) ) {
rank: 160
score: 99.34640299479166
patch: for ( Var s : state . get CaMeL Cfg ( ) ) {
rank: 160
score: 99.33821186266448
patch: for ( Var s : def . depends CaMeL On ( def , for CaMeL Var ) )
rank: 160
score: 99.31450653076172
patch: if ( state . get CaMeL In ( ) == js CaMeL Scope ) {
rank: 160
score: 99.20027982271634
patch: for ( Var s : new Object s . depends ) {
rank: 160
score: 99.18883338341347
patch: for ( Var s : def . values ( ) ) {
rank: 161
score: 99.37378991168478
patch: return def . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 161
score: 99.34629911534927
patch: for ( Var s : def . get CaMeL Instance ( ) . depends ) {
rank: 161
score: 99.33780670166016
patch: Set < Var > s = def . depends CaMeL On ( def ) ;
rank: 161
score: 99.33009440104166
patch: for ( Branch s : def . depends CaMeL On ( ) ) {
rank: 161
score: 99.31324055989583
patch: Definition def = js CaMeL Scope . get CaMeL In ( name ) ;
rank: 161
score: 99.198974609375
patch: for ( Var s : def . depends ) throws
rank: 161
score: 99.1883036295573
patch: if ( def == null && def != null ) {
rank: 161
score: 99.13071114676339
patch: System . out . println ( $STRING$ + s . depends ) ;
rank: 162
score: 99.38599243164063
patch: for ( Var s : def . depends ( state . get CaMeL Var ( ) ) ) {
rank: 162
score: 99.38554551866319
patch: for ( Node < Node > def : def . depends CaMeL On ( ) ) {
rank: 162
score: 99.37274724786931
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Id ( ) ) ;
rank: 162
score: 99.34558868408203
patch: for ( Var def : def . reaching CaMeL Def . depends ) {
rank: 162
score: 99.32958984375
patch: for ( Var s : def . reaching CaMeL Def ) {
rank: 162
score: 99.19875919117646
patch: for ( Var s : def . depends ? s : def . depends ) {
rank: 162
score: 99.188232421875
patch: System . err . println ( $STRING$ + def . get CaMeL Parent ( ) . get CaMeL Value ( ) ) ;
rank: 163
score: 99.38584681919643
patch: for ( Var s : def . depends ( $STRING$ ) ) {
rank: 163
score: 99.38533238002232
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Name ( ) ) ) )
rank: 163
score: 99.3722256747159
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . get CaMeL Annotation ( ) ;
rank: 163
score: 99.34540153952206
patch: if ( s != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 163
score: 99.33593071831598
patch: for ( Var CaMeL Definition n : def . depends CaMeL On ( def ) ) {
rank: 163
score: 99.329541015625
patch: for ( Flow CaMeL State < Node > s : state . get CaMeL In ( ) ) {
rank: 163
score: 99.19865866268383
patch: for ( Var s : def . depends , def Var s . depends ) {
rank: 163
score: 99.18741607666016
patch: for ( Var s : def . depends ) def = def . depends )
rank: 163
score: 99.1297607421875
patch: for ( Attribute s : def . depends ) {
rank: 164
score: 99.38524034288194
patch: for ( Var s : def . depends CaMeL On ( s ) . depends ) {
rank: 164
score: 99.38511256167763
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Value ( ) ;
rank: 164
score: 99.37209065755208
patch: Annotation def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 164
score: 99.33510454963235
patch: for ( Var s : def . depends ) { if ( def . depends )
rank: 164
score: 99.32893676757813
patch: if ( state . get CaMeL In ( ) . get CaMeL Annotation ( ) == null ) {
rank: 164
score: 99.19835707720588
patch: for ( Var s : def . depends && def . depends . depends ) {
rank: 164
score: 99.1864483173077
patch: if ( def != null ) return def . depends ) {
rank: 164
score: 99.12953186035156
patch: for ( Object s : def . depends CaMeL On ( s ) ) {
rank: 165
score: 99.385009765625
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Scope ( ) ) )
rank: 165
score: 99.37188720703125
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get CaMeL Var ( name ) ;
rank: 165
score: 99.34397977941177
patch: for ( Var s : def . depends || s != js CaMeL Scope ) {
rank: 165
score: 99.3343276977539
patch: for ( Var s : n . depends CaMeL On ( s ) ) {
rank: 165
score: 99.32843695746527
patch: for ( Must CaMeL Def > s : n . get CaMeL Annotation ( ) ) {
rank: 165
score: 99.18564860026042
patch: for ( Var s : def . get CaMeL Var ( def . get CaMeL Parent ( ) ) . depends ) {
rank: 165
score: 99.1294677734375
patch: for ( Var s : def . get CaMeL Stats ( ) ) {
rank: 166
score: 99.38499813988095
patch: for ( Var s : n . get CaMeL In ( ) . depends CaMeL On ( def ) )
rank: 166
score: 99.37147013346355
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ) ;
rank: 166
score: 99.33412080652573
patch: for ( Var > s : def . depends CaMeL On ( def ) ) {
rank: 166
score: 99.32839626736111
patch: for ( Var s > s : def . reaching CaMeL Def . depends ) {
rank: 166
score: 99.310791015625
patch: Flow CaMeL State < Node > state = state . get CaMeL In ( ) ;
rank: 166
score: 99.1981560202206
patch: for ( Var s : def . depends && def , s . depends ) {
rank: 166
score: 99.18561197916667
patch: Var s = def . depends ( def . depends ( ) ) ;
rank: 166
score: 99.12879136029412
patch: for ( Var s : def . depends ) && null != s . depends )
rank: 167
score: 99.38424343532986
patch: Definition def = state . get CaMeL In ( ) . get CaMeL Def ( ) ;
rank: 167
score: 99.38408813476562
patch: for ( Var s : def . depends CaMeL On ( def , def . depends ) ) {
rank: 167
score: 99.371083984375
patch: if ( = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ) {
rank: 167
score: 99.33404541015625
patch: for ( Node < Var > n : def . depends CaMeL On ) {
rank: 167
score: 99.30978573069854
patch: if ( type != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 167
score: 99.1976318359375
patch: for ( Var s : def . get CaMeL Var ( s ) . depends ) {
rank: 167
score: 99.185009765625
patch: for ( Var s : def . depends ) { s . depends = def . depends ) ;
rank: 167
score: 99.12874603271484
patch: for ( Var s : def . get CaMeL Var s ( ) ) {
rank: 168
score: 99.38407679966518
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . get CaMeL Var ( ) ) ) )
rank: 168
score: 99.38399047851563
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Result ( ) ) {
rank: 168
score: 99.3709208170573
patch: Symbol def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 168
score: 99.342236328125
patch: for ( Var s : def != null : def . depends ) {
rank: 168
score: 99.32815115792411
patch: for ( Must CaMeL Def > def : def . depends ) {
rank: 168
score: 99.309326171875
patch: if ( state != js CaMeL Scope . get CaMeL In ( ) )
rank: 168
score: 99.19761029411765
patch: for ( Var s : def . depends , def . def . depends ) {
rank: 168
score: 99.18497721354167
patch: for ( Var s : def . depends ) { def = s . depends ) ;
rank: 168
score: 99.12870025634766
patch: if ( def != null ) for ( Var s : def . depends )
rank: 169
score: 99.38362630208333
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( s ) )
rank: 169
score: 99.3333270733173
patch: for ( Var s : def . depends ) { { {
rank: 169
score: 99.19748360770089
patch: if ( def != null . depends && def . depends ) {
rank: 170
score: 99.38357883029514
patch: for ( Must CaMeL Def > state : def . get CaMeL In ( ) ) {
rank: 170
score: 99.38351004464286
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends CaMeL On ( ) ) ) )
rank: 170
score: 99.33301459418402
patch: for ( Var s : n . depends CaMeL On ( def ) . depends ) {
rank: 170
score: 99.30803366268383
patch: if ( def != null && state . get CaMeL In ( ) != null )
rank: 170
score: 99.19688505284927
patch: for ( String s : def . depends ) println ( def . depends ) ;
rank: 170
score: 99.1842041015625
patch: for ( Node < ? > s : def . depends ) {
rank: 170
score: 99.12737482244319
patch: Var s : if ( def != null ) {
rank: 171
score: 99.38353207236842
patch: for ( Var s : def . get CaMeL In ( ) . close ( ) ) {
rank: 171
score: 99.36932694284539
patch: if ( js CaMeL Scope . get CaMeL Var ( name ) != js CaMeL Scope ) {
rank: 171
score: 99.32652869591347
patch: for ( Must CaMeL Def s : state . depends ) {
rank: 171
score: 99.30736586626838
patch: Definition def = state . get CaMeL Annotation ( ) . get ( name ) ;
rank: 171
score: 99.19652602251838
patch: for ( Var s : def . depends && def . depends == null ) {
rank: 171
score: 99.1834487915039
patch: if ( def != null && def . is CaMeL Var ( ) ) {
rank: 172
score: 99.3831722861842
patch: for ( Var s : def . depends ( ) . get CaMeL Annotation ( ) ) {
rank: 172
score: 99.38196331521739
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Function CaMeL Name ( ) ) )
rank: 172
score: 99.36873726222827
patch: expr = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 172
score: 99.33993530273438
patch: for ( Flow CaMeL State < Must CaMeL Def > state : depends ) {
rank: 172
score: 99.33129164751838
patch: / * for ( Var s : def . depends CaMeL On ( ) ) {
rank: 172
score: 99.30713704427083
patch: Definition def = js CaMeL Scope . get CaMeL Def ( name ) ;
rank: 172
score: 99.18324788411458
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Parent ( ) ) . depends ) {
rank: 173
score: 99.38200298108552
patch: for ( Var s : def . get CaMeL Annotation ( ) . iterator ( ) ) {
rank: 173
score: 99.3818996263587
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Function CaMeL Name ( ) ) )
rank: 173
score: 99.33906555175781
patch: if ( state . get CaMeL Annotation ( ) != js CaMeL Scope ) {
rank: 173
score: 99.33111572265625
patch: for ( Var n : def . depends CaMeL On ( n ) ) {
rank: 173
score: 99.19576009114583
patch: if ( def != null && def == null ) {
rank: 173
score: 99.18210177951389
patch: for ( Var s : def . depends ) { def = node . depends ) ;
rank: 174
score: 99.38140462239583
patch: for ( String s : def . get CaMeL Annotation ( ) ) {
rank: 174
score: 99.36839599609375
patch: for ( Var : def . depends ) {
rank: 174
score: 99.33821375229779
patch: for ( Definition s : state . get CaMeL In ( ) . depends ) {
rank: 174
score: 99.33082490808823
patch: return def == null ? null : def . depends CaMeL On ( def ) ;
rank: 174
score: 99.3258768717448
patch: for ( ? > s : def . depends ) {
rank: 174
score: 99.18191731770834
patch: if ( def != null ) { if ( def . depends ) {
rank: 174
score: 99.12535903033088
patch: for ( Var s : def . depends ( s ) s . depends ) {
rank: 175
score: 99.38005264945652
patch: for ( Var s : def . depends CaMeL On ( def , def . depends CaMeL On ( ) ) )
rank: 175
score: 99.36837768554688
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( get CaMeL In ( ) ) ;
rank: 175
score: 99.33692220052083
patch: for ( Var s : n . get CaMeL Cfg ( ) ) {
rank: 175
score: 99.33026482077206
patch: if ( def != null || def . depends CaMeL On ( def ) ) {
rank: 175
score: 99.32489568536931
patch: for ( Number s : def . depends ) {
rank: 175
score: 99.304443359375
patch: for ( Var s : def . depends ( state ) ) {
rank: 175
score: 99.19452981387867
patch: for ( Var s : def . depends && s . depends ( ) ) {
rank: 175
score: 99.12421526227679
patch: / * { for ( Var s : def . depends ) {
rank: 176
score: 99.38069458007813
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( false ) ;
rank: 176
score: 99.36812160326087
patch: if ( reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 176
score: 99.33653913225446
patch: for ( Var ! s . scope != js CaMeL Scope ) {
rank: 176
score: 99.3302001953125
patch: for ( Var s : def . values ) {
rank: 176
score: 99.32486724853516
patch: for ( Var s ++ : state . get CaMeL In ( ) ) {
rank: 176
score: 99.30300668569711
patch: for ( Var s : def . depends ) { try {
rank: 176
score: 99.19451545266544
patch: for ( Var s : def . is CaMeL Function ( ) . depends ) {
rank: 176
score: 99.18186732700893
patch: for ( Iterator < Var > s = def . depends ) {
rank: 176
score: 99.12415364583333
patch: for ( Var s : def . depends . depends . depends ) {
rank: 177
score: 99.38041178385417
patch: for ( Var s : js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 177
score: 99.37960052490234
patch: for ( Var s : def . get . depends CaMeL On ( ) )
rank: 177
score: 99.32942962646484
patch: if ( def == null || def . depends CaMeL On ( def ) )
rank: 177
score: 99.30258358226104
patch: Var def = state . get CaMeL In ( ) . get ( name ) ;
rank: 177
score: 99.19426812065973
patch: for ( Var s : def . depends ( s . depends ( ) ) ) {
rank: 177
score: 99.1817267922794
patch: for ( Var s : def . get CaMeL Var ( ) . get ) {
rank: 177
score: 99.12265450613839
patch: Var s : for ( Var s : node . depends ) {
rank: 178
score: 99.38030684621711
patch: for ( Var s : def . get CaMeL In ( ) . depends > 0 ) {
rank: 178
score: 99.37959216889881
patch: for ( Var s : def . depends CaMeL On ( def ) . get CaMeL Var ( ) )
rank: 178
score: 99.36793009440105
patch: return reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 178
score: 99.33561437270221
patch: for ( Node s : state . get CaMeL In ( ) . depends ) {
rank: 178
score: 99.32930715460526
patch: for ( Var s : n . depends CaMeL On ( Var . class , def ) )
rank: 178
score: 99.32421875
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def != null
rank: 178
score: 99.30226353236607
patch: Definition def = js CaMeL Scope . get CaMeL In ( ) ;
rank: 178
score: 99.19403435202206
patch: for ( Var s : def . is CaMeL Var ( ) . depends ) {
rank: 178
score: 99.18171522352431
patch: for ( Var s : def . get CaMeL Var ( name ) . depends ) {
rank: 178
score: 99.12234317555146
patch: for ( Var s : def . depends ) def . depends ( def ) ;
rank: 179
score: 99.37959558823529
patch: for ( Var s : def . get CaMeL Annotation ( ) ) return false ;
rank: 179
score: 99.37933640252976
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( this ) ,
rank: 179
score: 99.367724609375
patch: Node def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 179
score: 99.33544921875
patch: for ( Var s : def == js CaMeL Scope ) {
rank: 179
score: 99.32899475097656
patch: for ( Node < Node > def : def . depends CaMeL On ) {
rank: 179
score: 99.30205221737133
patch: for ( Graph CaMeL Node < Node , Branch > n : def . depends )
rank: 179
score: 99.18155924479167
patch: synchronized ( def . depends ) { for ( Var s : def . depends . depends . ) {
rank: 179
score: 99.12176920572917
patch: for ( Var s : def . depends , node . depends ) {
rank: 180
score: 99.37902221679687
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Parent ( ) ) {
rank: 180
score: 99.36747409986413
patch: String js CaMeL Scope = js CaMeL Scope . get CaMeL Var ( name ) . get CaMeL Name ( ) ;
rank: 180
score: 99.3287353515625
patch: for ( Var s : def )
rank: 180
score: 99.32321006373355
patch: Flow CaMeL State < Must CaMeL Def > state = new Must CaMeL Def > ( ) ;
rank: 180
score: 99.301025390625
patch: for ( Flow CaMeL State < Must CaMeL Def > state : state . depends )
rank: 180
score: 99.19304342830883
patch: for ( Var s : def . depends && $NUMBER$ : def . depends ) {
rank: 180
score: 99.18118722098214
patch: Var s = def . depends ) ; for ( Var s : def . depends . depends ) {
rank: 180
score: 99.12143841911765
patch: for ( Var s : def . depends CaMeL On ( s ) def ) {
rank: 181
score: 99.37846105238971
patch: for ( Var s : def . get CaMeL In ( ) . s ) {
rank: 181
score: 99.37842584425404
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( s . depends ) ) ) )
rank: 181
score: 99.3671875
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 181
score: 99.33519568810097
patch: for ( Var s : def . depends ) return false ;
rank: 181
score: 99.32869226792279
patch: for ( Var s : def . depends ) { if ( s . ) {
rank: 181
score: 99.19264322916666
patch: for ( Var s : def . depends , def . get ) {
rank: 181
score: 99.18092176649306
patch: for ( Var s : def . depends ) { def = value . depends ) ;
rank: 181
score: 99.120849609375
patch: for ( for ( Var s : def . depends ) def . depends ) {
rank: 182
score: 99.37833984375
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( Var . class ) ) ) {
rank: 182
score: 99.3668721516927
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( name ) ;
rank: 182
score: 99.32830403645833
patch: for ( Var s : def . depends CaMeL On ) { { {
rank: 182
score: 99.3221371299342
patch: for ( Must CaMeL Def > s : def . depends CaMeL On ( s ) ) {
rank: 182
score: 99.19247233072916
patch: for ( Var s : def . depends $NUMBER$ ( def ) ) {
rank: 182
score: 99.12057291666666
patch: Var ( ) . for ( Var s : def . depends ) {
rank: 183
score: 99.37744140625
patch: for ( final Var s : def . get CaMeL In ( ) . depends ) {
rank: 183
score: 99.36620076497395
patch: int depends = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 183
score: 99.3334732055664
patch: for ( Must CaMeL Def : n . get CaMeL In ( ) ) {
rank: 183
score: 99.32814127604166
patch: for ( Var s : def . depends CaMeL On ( n ) )
rank: 183
score: 99.32204861111111
patch: if ( state instanceof Must CaMeL Def > state . get CaMeL In ( ) ) {
rank: 183
score: 99.29955240885417
patch: Var def = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 183
score: 99.19224638097427
patch: for ( Var s : for ( Var s . depends ) . depends ) {
rank: 183
score: 99.18012346540179
patch: Var s = ( Var [ ] ) def . depends ) ;
rank: 184
score: 99.3323974609375
patch: for ( Var def : def . get CaMeL Vars ( ) ) {
rank: 184
score: 99.3266960592831
patch: for ( Var s : def . depends CaMeL On ( s ) ) { {
rank: 184
score: 99.32201470269098
patch: for ( Must CaMeL Def > state : state . get CaMeL Annotation ( ) ) {
rank: 184
score: 99.2994384765625
patch: for ( Var s : def . get CaMeL In ( ) ) continue ;
rank: 184
score: 99.17945053998162
patch: for ( Var s : def . get CaMeL Map ( ) . depends ) {
rank: 185
score: 99.37798517400569
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( ) ) ) {
rank: 185
score: 99.36590897409539
patch: if ( s . scope != js CaMeL Scope && def . scope != js CaMeL Scope )
rank: 185
score: 99.33228257123162
patch: if ( s == js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 185
score: 99.32630679481908
patch: for ( Var s : def . depends CaMeL On ) { Var s = s . {
rank: 185
score: 99.32174682617188
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ; }
rank: 185
score: 99.29936667049633
patch: Flow CaMeL State < Must CaMeL Def > state = n . get ( ) ;
rank: 185
score: 99.1919921875
patch: for ( Var s : def . depends | def . depends ) {
rank: 185
score: 99.11958451704545
patch: Var s : if ( s != null ) {
rank: 186
score: 99.3774181547619
patch: for ( Var s : n . depends CaMeL On ( def . get CaMeL Var ( ) ) )
rank: 186
score: 99.37678797104779
patch: for ( Var s : def . get CaMeL Def ( ) ) return true ;
rank: 186
score: 99.36572265625
patch: for ( Var s : def . depends ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 186
score: 99.32532610212054
patch: for ( Node < Var > n : def . depends ) {
rank: 186
score: 99.32149011948529
patch: for ( Var s > s : def . get CaMeL Annotation ( ) ) {
rank: 186
score: 99.29930922564338
patch: for ( Var s : def . depends . get CaMeL Def ( ) ) {
rank: 186
score: 99.19149780273438
patch: for ( Var s : 0 . depends ( s . depends ) ) {
rank: 187
score: 99.37666625976563
patch: for ( Var s : def . get CaMeL In ( ) . < use CaMeL Node ) {
rank: 187
score: 99.36513884171195
patch: parent = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 187
score: 99.3301140280331
patch: if ( s . get CaMeL Var ( name ) != js CaMeL Scope ) {
rank: 187
score: 99.32442474365234
patch: for ( Type s : def . depends CaMeL On ( def ) ) {
rank: 187
score: 99.32142052283653
patch: for ( Must CaMeL Def def : state . depends ) {
rank: 187
score: 99.1912841796875
patch: for ( Var s : def . depends , n . depends ) {
rank: 187
score: 99.17633056640625
patch: for ( Var < Object > s : def . depends ) {
rank: 188
score: 99.3764584189967
patch: for ( Var s : def . reaching CaMeL Def . get ( parent ) ) {
rank: 188
score: 99.37589518229167
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends ) ) )
rank: 188
score: 99.36495971679688
patch: Attribute def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 188
score: 99.32952521829044
patch: for ( Var def : state . get CaMeL Cfg ( ) . depends ) {
rank: 188
score: 99.32391357421875
patch: for ( Var s : n . depends CaMeL On ( def , false ) ) {
rank: 188
score: 99.32083932976974
patch: Definition def = state . get CaMeL In ( ) ; if ( def != null ) {
rank: 188
score: 99.1906379250919
patch: for ( Var s : def . depends && def . depends $NUMBER$ null ) {
rank: 188
score: 99.11869812011719
patch: for ( final Var s : def . depends , def . depends ) {
rank: 189
score: 99.37643229166666
patch: for ( Var s : def . get CaMeL Properties ( ) ) {
rank: 189
score: 99.37567693536931
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( this ) ) )
rank: 189
score: 99.32073419744319
patch: for ( T s : def . depends ) {
rank: 189
score: 99.29842936197916
patch: for ( Integer s : def . get CaMeL In ( ) ) {
rank: 189
score: 99.19037224264706
patch: for ( Var s : def . depends && ( def . depends ) ) {
rank: 189
score: 99.11805635340073
patch: for ( Var s : def . depends ) && null != def . depends )
rank: 190
score: 99.37625732421876
patch: for ( Var s : def . get CaMeL In ( ) . depends ( null ) ) {
rank: 190
score: 99.37537730823864
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( name ) ) {
rank: 190
score: 99.36452318274456
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Node ( name ) ) ;
rank: 190
score: 99.32741292317708
patch: while ( s . scope != js CaMeL Scope ) {
rank: 190
score: 99.32240295410156
patch: for ( Var s : def . get CaMeL Vars ( ) ) { {
rank: 190
score: 99.32062530517578
patch: for ( Flow CaMeL State < Node > s : state . depends ) {
rank: 190
score: 99.29801119290866
patch: if ( state . get CaMeL Annotation ( ) == null )
rank: 190
score: 99.18943568638393
patch: for ( int < Var > s : def . depends ) {
rank: 191
score: 99.37601511101974
patch: for ( Var s : def . reaching CaMeL Def . get ( prefix ) ) {
rank: 191
score: 99.37525255926724
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . to CaMeL String ( ) ) ) ) {
rank: 191
score: 99.36362711588542
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL String ( name ) ) )
rank: 191
score: 99.32722024356617
patch: for ( Var s : state . get CaMeL Def ( ) . depends ) {
rank: 191
score: 99.3223876953125
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( def ) ) { {
rank: 191
score: 99.29707845052083
patch: for ( Var s ++ : def . get CaMeL In ( ) )
rank: 191
score: 99.18940286075367
patch: for ( Var s = def . depends ) println ( def . depends ) ;
rank: 191
score: 99.1749267578125
patch: if ( def == null ) for ( Var s : def . depends ) {
rank: 191
score: 99.11624348958334
patch: for ( Var s : def . get CaMeL Symbol ( ) ) {
rank: 192
score: 99.375244140625
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( $STRING$ ) )
rank: 192
score: 99.36355590820312
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 192
score: 99.3219970703125
patch: for ( Var s : n . get CaMeL Fields ( ) ) {
rank: 192
score: 99.31975241268383
patch: for ( Var s > def : def . get CaMeL In ( ) ) {
rank: 192
score: 99.29644775390625
patch: if ( s != null ) {
rank: 192
score: 99.17481407752403
patch: for ( Var [ ] n : def . depends ) {
rank: 193
score: 99.37530876608456
patch: for ( Var s : def . get CaMeL In ( ) . < ) {
rank: 193
score: 99.3747787475586
patch: for ( Var s : def . depends CaMeL On ( value ) ) {
rank: 193
score: 99.36354573567708
patch: Node depends = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 193
score: 99.32187069163604
patch: for ( Var s : def . depends ) { Var s = s . {
rank: 193
score: 99.29622105189732
patch: for ( Var s : def . get CaMeL Cfg ( ) )
rank: 193
score: 99.18892415364583
patch: for ( Var s : def . has CaMeL Children ( ) ) {
rank: 193
score: 99.11402239118304
patch: int s : for ( Var s : def . depends ) {
rank: 194
score: 99.37456311677632
patch: for ( Var s : def . get CaMeL Annotation ( ) . trim ( ) ) {
rank: 194
score: 99.37406841077302
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( {
rank: 194
score: 99.36323377821181
patch: if ( js CaMeL Scope . get CaMeL Annotation ( ) != js CaMeL Scope ) {
rank: 194
score: 99.32147216796875
patch: for ( Node < Var > def : def . depends CaMeL On ) {
rank: 194
score: 99.31932721819196
patch: if ( def . get CaMeL Annotation ( ) != null ) {
rank: 194
score: 99.29613385881696
patch: for ( Var s : def . get CaMeL Definition ( ) )
rank: 194
score: 99.18821364182692
patch: for ( Iterator ( Var s : def . depends ) {
rank: 194
score: 99.17443169487848
patch: for ( Var s : def . depends ) { def = s . depends ) {
rank: 194
score: 99.1136474609375
patch: for ( Var s : def . depends && ! def . depends ) {
rank: 195
score: 99.37419690583882
patch: for ( Var s : def . get CaMeL In ( ) . length ( ) ) {
rank: 195
score: 99.37376403808594
patch: for ( Var s : def . depends CaMeL On ( line ) ) {
rank: 195
score: 99.3252814797794
patch: for ( Var s : def . depends || def != js CaMeL Scope ) {
rank: 195
score: 99.3192138671875
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def [ 0 ] ;
rank: 195
score: 99.18811848958333
patch: for ( Var s : def . is CaMeL Global ( ) ) {
rank: 195
score: 99.11318533761161
patch: Var s : for ( Var name : def . depends ) {
rank: 196
score: 99.37353515625
patch: for ( Var s : def . depends CaMeL On ( s . def ) ) {
rank: 196
score: 99.36229451497395
patch: String s = state . get CaMeL In ( ) . reaching CaMeL Def . get CaMeL Var ( name ) ;
rank: 196
score: 99.32058536305146
patch: for ( Var s : n . depends CaMeL On ( Var . class ) )
rank: 196
score: 99.29473470052083
patch: for ( Var s : def . get CaMeL Annotation ( name ) )
rank: 196
score: 99.17417689732143
patch: for ( Var < Object > def : def . depends ) {
rank: 196
score: 99.11094563802084
patch: Var s : for ( Var s : def . depends . depends )
rank: 197
score: 99.37370300292969
patch: for ( final Var s : def . get CaMeL Annotation ( ) ) {
rank: 197
score: 99.37350331182066
patch: for ( Var s : def . get . depends CaMeL On ( s . get CaMeL Var ( ) ) )
rank: 197
score: 99.36207116168478
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope ) . get ( js CaMeL Scope ) ;
rank: 197
score: 99.3244857788086
patch: for ( Var s : def . get CaMeL Cfg ( name ) ) {
rank: 197
score: 99.32046669407895
patch: for ( Var s : def . depends CaMeL On ( def , def , def ) )
rank: 197
score: 99.3186767578125
patch: for ( Var s : def . depends CaMeL
rank: 197
score: 99.29409790039062
patch: if ( state != js CaMeL Scope . get CaMeL Annotation ( ) ) {
rank: 197
score: 99.18644205729167
patch: for ( Var s : def . is CaMeL Empty ( ) s . depends ) {
rank: 197
score: 99.17387172154018
patch: for ( Iterator < Var > iterator = def . depends ) {
rank: 197
score: 99.10901641845703
patch: Var s : for ( Var s : def . depends ( ) ) {
rank: 198
score: 99.37315673828125
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ) ) {
rank: 198
score: 99.36195882161458
patch: org . < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 198
score: 99.32371610753677
patch: for ( Var def : state . get CaMeL Annotation ( ) . depends ) {
rank: 198
score: 99.31997501148896
patch: for ( Var s : def . depends CaMeL On ( def ) ) continue ;
rank: 198
score: 99.31846788194444
patch: for ( Must CaMeL Def > def : def . depends CaMeL On ( ) ) {
rank: 198
score: 99.29338836669922
patch: for ( Var s : def . get CaMeL Line ( name ) ) {
rank: 198
score: 99.17301722935268
patch: for ( Set < Var > n : def . depends ) {
rank: 198
score: 99.10879952566964
patch: try { { for ( Var s : def . depends ) {
rank: 199
score: 99.37308502197266
patch: Definition def = state . get CaMeL In ( ) . depends ( ) ;
rank: 199
score: 99.37285299862133
patch: for ( Var s : def . depends CaMeL On ( s , false ) )
rank: 199
score: 99.3618672688802
patch: int state = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 199
score: 99.3235196200284
patch: for ( Var scope : def . depends ) {
rank: 199
score: 99.31871032714844
patch: for ( Node s : n . depends CaMeL On ( def ) ) {
rank: 199
score: 99.29137244591347
patch: for ( Var s : def . depends ( name ) )
rank: 199
score: 99.18541666666667
patch: for ( Var s : 0 . depends && def != null ) {
rank: 199
score: 99.108251953125
patch: } Var s : for ( Var s : def . depends ) {
rank: 200
score: 99.37298905222039
patch: for ( Var s : def . get CaMeL Annotation ( ) . next ( ) ) {
rank: 200
score: 99.37272135416667
patch: for ( Var s : def . depends CaMeL On ( def . get ) ) {
rank: 200
score: 99.36134765625
patch: final Definition def = def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 200
score: 99.31870930989584
patch: for ( Var s : n . get CaMeL Results ( ) ) {
rank: 200
score: 99.31789926382211
patch: for ( Must CaMeL Def state : def . depends ) {
rank: 200
score: 99.29131317138672
patch: for ( Var s : def . get CaMeL Property ( name ) ) {
rank: 200
score: 99.18517252604167
patch: for ( Var s : def . depends - s . depends ) {
rank: 200
score: 99.172119140625
patch: if ( def == null ) { return null ; } else {
rank: 201
score: 99.37248149671052
patch: for ( Var s : def . get CaMeL Node ( ) . depends ( ) ) {
rank: 201
score: 99.37211470170455
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Parent ( ) ) ) {
rank: 201
score: 99.36119588216145
patch: Node n = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 201
score: 99.32269287109375
patch: for ( Var ! def . scope != js CaMeL Scope ) {
rank: 201
score: 99.31856282552083
patch: if ( def != null && def . depends CaMeL On ( ) )
rank: 201
score: 99.3174560546875
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( null ) ;
rank: 201
score: 99.18507603236607
patch: for ( Var s ] > s : def . depends ) {
rank: 201
score: 99.17189025878906
patch: if ( def != null && def . is CaMeL Empty ( ) ) {
rank: 202
score: 99.37189850983796
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . to CaMeL String ( ) ) )
rank: 202
score: 99.37177734375
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Var ( name ) ;
rank: 202
score: 99.36077880859375
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ;
rank: 202
score: 99.32241641773896
patch: for ( Flow CaMeL State s : n . get CaMeL Annotation ( ) ) {
rank: 202
score: 99.3185526529948
patch: for ( Var s : n . get ) { {
rank: 202
score: 99.31618780838816
patch: Flow CaMeL State < Must CaMeL Def > def = n . get CaMeL Annotation ( ) ;
rank: 202
score: 99.29080636160714
patch: for ( Definition s : def . get CaMeL In ( ) )
rank: 202
score: 99.18503824869792
patch: for ( Var s : def . depends 1 ) {
rank: 202
score: 99.17167663574219
patch: for ( Var s : def . get CaMeL Next ( ) . depends )
rank: 202
score: 99.10678536551339
patch: for ( Var s : def . depends ( node ) ) {
rank: 203
score: 99.37170831088362
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . get CaMeL Var ( ) ) ) ) {
rank: 203
score: 99.37164306640625
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Key ( ) ) {
rank: 203
score: 99.36070185122283
patch: String js CaMeL Scope = state . get CaMeL In ( ) . get CaMeL Node ( use CaMeL Node ) ;
rank: 203
score: 99.31849670410156
patch: / * for ( Var s : n . depends CaMeL On ( ) )
rank: 203
score: 99.31610717773438
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( s ) ;
rank: 203
score: 99.18500832950367
patch: for ( Var s : def . depends && def . depends != null ) {
rank: 203
score: 99.17136452414773
patch: for ( Node def : def . depends ) {
rank: 203
score: 99.10587935014205
patch: for ( Symbol s : def . depends ) {
rank: 204
score: 99.37163696289062
patch: for ( Var s : def . depends ( state . get CaMeL Annotation ( ) ) ) {
rank: 204
score: 99.371337890625
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Type ( ) ) ) )
rank: 204
score: 99.360146484375
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) + null ;
rank: 204
score: 99.31840006510417
patch: for ( Var n : def . get CaMeL Vars ( ) ) {
rank: 204
score: 99.2899169921875
patch: if ( js CaMeL Scope . get CaMeL Annotation ( ) == null )
rank: 204
score: 99.18498229980469
patch: if ( def != null . depends && def != null . depends ) {
rank: 204
score: 99.1047134399414
patch: Var s : def ; for ( Var s : def . depends ) {
rank: 205
score: 99.3711170014881
patch: for ( Var s : def . depends CaMeL On ( { s . get CaMeL Var ( ) )
rank: 205
score: 99.37108090049342
patch: for ( Var s : def . get CaMeL In ( ) . count ( ) ) {
rank: 205
score: 99.35938110351563
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( def ) ;
rank: 205
score: 99.320703125
patch: for ( Var s : def . has CaMeL Scope ( ) ) {
rank: 205
score: 99.31819152832031
patch: for ( Var n : def . depends CaMeL On ( ) ) { {
rank: 205
score: 99.28941761363636
patch: for ( Var s : def . add ) {
rank: 205
score: 99.18375651041667
patch: for ( Var s != ( Var s : def . depends ) . depends ) {
rank: 205
score: 99.10430501302083
patch: for ( Var s : def . is CaMeL Active ( ) ) {
rank: 206
score: 99.37075966282895
patch: Flow CaMeL State < Must CaMeL Def > state = def . get CaMeL In ( ) ;
rank: 206
score: 99.35934682992789
patch: if ( def != js CaMeL Scope ) { return true ;
rank: 206
score: 99.319580078125
patch: if ( s != null && s . scope != js CaMeL Scope ) {
rank: 206
score: 99.31525336371527
patch: if ( def != null && state . get CaMeL Annotation ( ) != null ) {
rank: 206
score: 99.28922765395221
patch: for ( Var s : def . depends ) { if ( s == null )
rank: 206
score: 99.18369362571023
patch: for ( Var s : $STRING$ . depends ) {
rank: 206
score: 99.1697265625
patch: final Var s = def . depends ) ;
rank: 206
score: 99.10429164341518
patch: Var s : for ( Var s : s . depends ) {
rank: 207
score: 99.37092420789931
patch: for ( Var s : def . depends CaMeL On ( def , this ) ) {
rank: 207
score: 99.37066971628289
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Vars ( ) ;
rank: 207
score: 99.35886452414773
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL In ( ) ;
rank: 207
score: 99.31953125
patch: for ( Var def : state . get CaMeL Vars ( ) ) {
rank: 207
score: 99.31807454427083
patch: for ( Var s : def . depends ) { )
rank: 207
score: 99.31450805664062
patch: for ( Flow CaMeL State < Node > s : n . get CaMeL Annotation ( ) ) {
rank: 207
score: 99.28838034237133
patch: try { for ( Var s : def . get CaMeL In ( ) ) {
rank: 207
score: 99.18342859604779
patch: for ( Var s : def . depends && def == null . depends ) {
rank: 207
score: 99.10387073863636
patch: for ( Var parent : def . depends ) {
rank: 208
score: 99.37068445542279
patch: for ( Var s : def . depends CaMeL On ( def , this ) )
rank: 208
score: 99.3705322265625
patch: for ( Var s : s . get CaMeL In ( ) ) {
rank: 208
score: 99.35882209329044
patch: if ( js CaMeL Scope != null && s . scope != js CaMeL Scope )
rank: 208
score: 99.31761067708334
patch: for ( Var def : def . get CaMeL Node ( ) ) {
rank: 208
score: 99.3144760131836
patch: for ( Var s : def . reaching CaMeL Def ( ) ) {
rank: 208
score: 99.28830392020089
patch: for ( Var s : def . depends ) { return true ;
rank: 208
score: 99.18332088694854
patch: for ( Var s : def . depends && 0 : def . depends ) {
rank: 208
score: 99.16936848958333
patch: for ( Var s : def . get CaMeL Packages ( ) ) {
rank: 209
score: 99.37062766335227
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( s ) )
rank: 209
score: 99.36985377261513
patch: for ( Var s : def . reaching CaMeL Def . get ( n ) ) {
rank: 209
score: 99.35811183763587
patch: ref = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 209
score: 99.31755913628473
patch: for ( Var CaMeL Definition def : def . depends CaMeL On ( def ) ) {
rank: 209
score: 99.31653550091912
patch: for ( Var def : def . get CaMeL Annotation ( ) . depends ) {
rank: 209
score: 99.31425924862133
patch: for ( Var s > def : def . depends CaMeL On ( ) ) {
rank: 209
score: 99.28769938151042
patch: for ( Var s : def . depends ) { }
rank: 209
score: 99.18187040441177
patch: for ( Var s : def . depends && def . depends , depends ) {
rank: 209
score: 99.10311453683036
patch: for ( Var ( Var s : def . depends ) ) {
rank: 210
score: 99.3697021484375
patch: for ( Var s : def . get CaMeL Map ( ) ) {
rank: 210
score: 99.36966281467014
patch: for ( Var s : def . depends CaMeL On ( name , false ) ) {
rank: 210
score: 99.35807291666667
patch: Member def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 210
score: 99.31727818080357
patch: for ( Var s : def . depends ) { if ( )
rank: 210
score: 99.3157097311581
patch: for ( Var scope : def . get CaMeL In ( ) . depends ) {
rank: 210
score: 99.28767613002232
patch: for ( Var s : def . get CaMeL Next ( ) )
rank: 210
score: 99.16704245174633
patch: for ( Var s : def . get CaMeL Classes ( ) . depends ) {
rank: 210
score: 99.10294886997768
patch: int [ : for ( Var s : def . depends ) {
rank: 211
score: 99.36960671164773
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Value ( ) ) ) {
rank: 211
score: 99.36948113692434
patch: for ( Var s : def . get CaMeL In ( ) . ( name ) ) {
rank: 211
score: 99.31663004557292
patch: for ( Var s : def . depends . depends CaMeL On ( def ) ) {
rank: 211
score: 99.31260052849265
patch: for ( Var s + 1 : def . get CaMeL In ( ) ) {
rank: 211
score: 99.28724772135416
patch: for ( Var s : def . get CaMeL In ( ) ) ;
rank: 211
score: 99.18158428485577
patch: for ( Var s : 0 . depends , def ) {
rank: 211
score: 99.16550118582589
patch: for ( Iterator < Var > 1 : def . depends ) {
rank: 211
score: 99.10283954326923
patch: for ( Var s : get CaMeL Vars ( ) ) {
rank: 212
score: 99.36904009650735
patch: for ( Var s : def . get CaMeL Def ( ) ) return false ;
rank: 212
score: 99.35792032877605
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Name ( ) ) ) {
rank: 212
score: 99.31646728515625
patch: for ( Var s : n . depends CaMeL On ( def , true ) ) {
rank: 212
score: 99.312353515625
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars $NUMBER$ ) {
rank: 212
score: 99.18155924479167
patch: for ( Var s : def . depends && def . next ) {
rank: 212
score: 99.10219504616477
patch: for ( Var s : 1 . depends ) {
rank: 213
score: 99.3692157451923
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends CaMeL On ) ) )
rank: 213
score: 99.36876763237848
patch: for ( Var s : def . get CaMeL In ( ) . < def ) {
rank: 213
score: 99.357919921875
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars . get CaMeL Annotation ( ) ) {
rank: 213
score: 99.31640625
patch: for ( Var s : n . depends CaMeL On ( name , def ) )
rank: 213
score: 99.31471162683823
patch: for ( Var s : def . depends CaMeL On . depends CaMeL On ) {
rank: 213
score: 99.31214141845703
patch: for ( Flow CaMeL State < Var > s : def . depends ) {
rank: 213
score: 99.28640950520834
patch: for ( Var s : def . depends ) { if ( false )
rank: 213
score: 99.10157063802083
patch: for ( Var s : def . get CaMeL Cause ( ) ) {
rank: 214
score: 99.36905246310764
patch: for ( Var s : def . depends CaMeL On ( s , def ) ) {
rank: 214
score: 99.31576538085938
patch: for ( Number s : def . depends CaMeL On ( def ) ) {
rank: 214
score: 99.3141730813419
patch: for ( Var s : def . depends && state != js CaMeL Scope ) {
rank: 214
score: 99.3121109008789
patch: Definition def = null ; for ( Var s : def . depends ) {
rank: 214
score: 99.28640950520834
patch: for ( Var s : def . get CaMeL Def ( name ) )
rank: 214
score: 99.10033307756696
patch: for ( Var < Node > def : def . depends ) {
rank: 215
score: 99.3686190518466
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( ) ) {
rank: 215
score: 99.35712280273438
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( ) )
rank: 215
score: 99.31526014539931
patch: for ( Var s : def . depends CaMeL On ( ) ) { if ( {
rank: 215
score: 99.28636932373047
patch: if ( state == js CaMeL Scope . get CaMeL Name ( ) ) {
rank: 215
score: 99.17931410845588
patch: for ( Var s : def . depends && null , def . depends ) {
rank: 215
score: 99.10013020833334
patch: for ( Var s : new ? s : def . depends ) {
rank: 216
score: 99.3677619485294
patch: for ( Must CaMeL Def state : def . get CaMeL In ( ) ) {
rank: 216
score: 99.3569003018466
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL In ( ) ;
rank: 216
score: 99.314990234375
patch: for ( Var s : n . get CaMeL Var ( ) ) {
rank: 216
score: 99.31277465820312
patch: if ( def . scope != js CaMeL Scope ) {
rank: 216
score: 99.31163736979167
patch: if ( def instanceof Flow CaMeL State < Must CaMeL Def > ) {
rank: 216
score: 99.28605143229167
patch: for ( Type s : def . get CaMeL In ( ) ) {
rank: 216
score: 99.17887056790866
patch: for ( Var s : def . trim ( ) ) {
rank: 216
score: 99.16383990119485
patch: if ( def != null . depends ) { return def . depends ) ; }
rank: 216
score: 99.09969889322916
patch: for ( Var s : def . depends CaMeL On ( s ) {
rank: 217
score: 99.36815296519886
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( def ) ) {
rank: 217
score: 99.36735704210069
patch: for ( Must CaMeL Def > state : n . get CaMeL In ( ) ) {
rank: 217
score: 99.35650313527961
patch: if ( s . scope != js CaMeL Scope && s . scope != js CaMeL Scope )
rank: 217
score: 99.31489643297698
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( def , def ) )
rank: 217
score: 99.28591918945312
patch: if ( def == js CaMeL Scope . get CaMeL Var ( name ) )
rank: 217
score: 99.17879231770833
patch: for ( Var s : def . depends , type . depends ) {
rank: 217
score: 99.16373937270221
patch: for ( Var s : def . get CaMeL Constructor ( ) . depends ) {
rank: 217
score: 99.09958718039773
patch: for ( Var s : value . depends ) {
rank: 218
score: 99.367919921875
patch: for ( Node < Var > def : def . depends CaMeL On ( ) ) {
rank: 218
score: 99.3673159950658
patch: for ( Var s : def . get CaMeL Var ( ) . depends ( ) ) {
rank: 218
score: 99.3562520345052
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 218
score: 99.31452772352431
patch: for ( Var s : def . depends CaMeL On ( def ) ) { { {
rank: 218
score: 99.31122185202206
patch: for ( Var s + 1 : def . depends CaMeL On ( ) ) {
rank: 218
score: 99.28563639322917
patch: for ( T s : def . get CaMeL In ( ) ) {
rank: 218
score: 99.17878274356617
patch: for ( Var s : null . depends && def != null . depends ) {
rank: 218
score: 99.16358947753906
patch: synchronized ( this ) { for ( Var s : def . depends ) {
rank: 218
score: 99.0994873046875
patch: Var s : for ( Var s : def . depends ) }
rank: 219
score: 99.36753627232143
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Value ( ) ) ) )
rank: 219
score: 99.35552571614583
patch: if ( def . scope != js CaMeL Scope ) { return true ;
rank: 219
score: 99.31437413832721
patch: for ( Var s : n . depends CaMeL On ( def . depends ) )
rank: 219
score: 99.3109375
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ; {
rank: 219
score: 99.31073467548077
patch: for ( Var s : state . def . depends ) {
rank: 219
score: 99.28556605747768
patch: for ( Var s : def . set CaMeL In ( ) )
rank: 219
score: 99.17868381076389
patch: for ( Var s : def . contains CaMeL Value ( s . depends ) ) {
rank: 219
score: 99.16354031032986
patch: for ( Var s : def . depends ) { return ( def . depends ) ;
rank: 219
score: 99.09922572544643
patch: System . { for ( Var s : def . depends ) {
rank: 220
score: 99.36692301432292
patch: for ( Node < Var > s : def . depends CaMeL On ( ) ) {
rank: 220
score: 99.3555196126302
patch: result = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 220
score: 99.31418971011513
patch: for ( Var s : def . depends CaMeL On ( this , def . depends ) )
rank: 220
score: 99.31065016526442
patch: for ( Var s > s : state . depends ) {
rank: 220
score: 99.3106201171875
patch: for ( Var def : n . get CaMeL Scope ( ) ) {
rank: 220
score: 99.09873046875
patch: for ( Var s : def . depends ) s . depends ) {
rank: 221
score: 99.36683872767857
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL In ( ) ) )
rank: 221
score: 99.36570434570312
patch: for ( Var s : def . reaching CaMeL Def . get ( - 1 ) ) {
rank: 221
score: 99.35542297363281
patch: if ( js CaMeL Scope != js CaMeL Scope ) { return true ; }
rank: 221
score: 99.31379968979779
patch: / ) for ( Var s : def . depends CaMeL On ( def ) )
rank: 221
score: 99.31063842773438
patch: for ( Var s : def . depends CaMeL On > ( ) ) {
rank: 221
score: 99.28519694010417
patch: for ( Definition s : def . get CaMeL Annotation ( ) ) {
rank: 221
score: 99.17709530101104
patch: for ( Var s : def . depends , def , def . depends ) {
rank: 221
score: 99.1631591796875
patch: for ( Var s : def . depends ) { def . add ( def . depends ) ;
rank: 221
score: 99.0976895419034
patch: for ( Location s : def . depends ) {
rank: 222
score: 99.36583455403645
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Function CaMeL Name ( ) ) ) {
rank: 222
score: 99.365478515625
patch: for ( final Var s : def . reaching CaMeL Def . get ( name ) ) {
rank: 222
score: 99.355224609375
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 222
score: 99.31351725260417
patch: for ( Var s : n . depends CaMeL On {
rank: 222
score: 99.31023810891544
patch: for ( Var s > def : state . get CaMeL In ( ) ) {
rank: 222
score: 99.30908966064453
patch: if ( s . get CaMeL Node ( ) != js CaMeL Scope ) {
rank: 222
score: 99.284423828125
patch: for ( Var 1 Var s : def . get CaMeL In ( ) ) {
rank: 222
score: 99.17646340762867
patch: for ( Var s : def . depends && def . depends , def ) {
rank: 222
score: 99.16295276988636
patch: if ( def != null ) { System . out . println ( $STRING$ + def . depends ) ; }
rank: 222
score: 99.09700833834134
patch: / { for ( Var s : def . depends ) {
rank: 223
score: 99.36578078497024
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def ) {
rank: 223
score: 99.36519582648026
patch: for ( Var s : def . reaching CaMeL Def . get ( count ) ) {
rank: 223
score: 99.31312962582237
patch: for ( Var n : def . depends CaMeL On ( def , def . depends ) )
rank: 223
score: 99.30995686848958
patch: for ( Must CaMeL Def > def : state . get CaMeL Annotation ( ) ) {
rank: 223
score: 99.3086270419034
patch: for ( Branch def : def . depends ) {
rank: 223
score: 99.2842041015625
patch: for ( Node s : def . get CaMeL Annotation ( ) ) {
rank: 223
score: 99.1741943359375
patch: for ( Var s : null . depends && s . depends ) {
rank: 223
score: 99.16229248046875
patch: System . out . println ( $STRING$ + def . get CaMeL Parent ( ) . get CaMeL Id ( ) ) ;
rank: 224
score: 99.36548569623162
patch: for ( Var s : def . depends CaMeL On ( s , def ) )
rank: 224
score: 99.36468146829044
patch: for ( Var s : def . depends ( ) . size ( ) ) {
rank: 224
score: 99.35496610753677
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope ) ;
rank: 224
score: 99.309716796875
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( false ) ;
rank: 224
score: 99.30747357536765
patch: for ( Flow CaMeL State def : n . get CaMeL Annotation ( ) ) {
rank: 224
score: 99.16189093338816
patch: int value = def . depends ) ; for ( Var s : def . depends ) {
rank: 224
score: 99.0968017578125
patch: Tree s : for ( Var s : def . depends ) {
rank: 225
score: 99.36536225818452
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Declaration ( ) ) )
rank: 225
score: 99.3544413248698
patch: Reduction def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 225
score: 99.3121273643092
patch: for ( Var s : def . depends CaMeL On ) { def : def . depends )
rank: 225
score: 99.30930582682292
patch: for ( Flow CaMeL State < Must CaMeL Def > s : state . depends ) {
rank: 225
score: 99.2832763671875
patch: if ( state . get CaMeL Var ( name ) != null ) {
rank: 225
score: 99.16185087316177
patch: for ( Node s : def . get CaMeL Next ( ) . depends ) {
rank: 226
score: 99.365283203125
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . depends CaMeL On ( {
rank: 226
score: 99.35439453125
patch: return js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 226
score: 99.3118896484375
patch: for ( Var name : def . depends CaMeL On ( def ) ) {
rank: 226
score: 99.30908203125
patch: for ( Var s : def . depends CaMeL On . size ( ) ) {
rank: 226
score: 99.30693054199219
patch: if ( def . get CaMeL In ( ) != js CaMeL Scope ) {
rank: 226
score: 99.17350260416667
patch: if ( def { for ( Var s : def . depends ) {
rank: 226
score: 99.16087757457386
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Value ( ) ) ) {
rank: 227
score: 99.36527683423913
patch: for ( Var s : def . depends CaMeL On ( s ) . depends CaMeL On ( s ) ) {
rank: 227
score: 99.35423743206522
patch: body = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 227
score: 99.31145477294922
patch: for ( Var s : def . depends CaMeL On ( def ) ) )
rank: 227
score: 99.30894470214844
patch: for ( Flow CaMeL State < Node > n : def . depends ) {
rank: 227
score: 99.28260091145833
patch: if ( state . get CaMeL In ( ) != js CaMeL Scope )
rank: 227
score: 99.173388671875
patch: for ( Var s : def . depends , ref . depends ) {
rank: 227
score: 99.09669494628906
patch: if ( def . depends && def . depends && def . depends ) {
rank: 228
score: 99.3639892578125
patch: Flow CaMeL State < Must CaMeL Def > state ( n . get CaMeL Annotation ( ) ) ;
rank: 228
score: 99.35397206182066
patch: return def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 228
score: 99.3114013671875
patch: for ( Var s : def . depends ( ) ) { {
rank: 228
score: 99.30847846137152
patch: Flow CaMeL State < Must CaMeL Def > state = state . get CaMeL In ( )
rank: 228
score: 99.30666216681985
patch: for ( Definition def : state . get CaMeL In ( ) . depends ) {
rank: 228
score: 99.16022087545956
patch: for ( Var s : def . get CaMeL Vars ( ) . depends ) {
rank: 228
score: 99.09626988002232
patch: for ( Var < Integer > s : def . depends ) {
rank: 229
score: 99.36503092447917
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Function CaMeL Name ( ) ) ) {
rank: 229
score: 99.36387232730263
patch: for ( Var s : def . reaching CaMeL Def . depends ( name ) ) {
rank: 229
score: 99.30809936523437
patch: for ( Flow CaMeL State < Node > s : def . get CaMeL In ( ) ) {
rank: 229
score: 99.30607335707721
patch: for ( Var def : n . get CaMeL Cfg ( ) . depends ) {
rank: 229
score: 99.1732647235577
patch: for ( Var s : def . depends && false ) {
rank: 229
score: 99.09574751420455
patch: for ( Var s : function . depends ) {
rank: 230
score: 99.353701171875
patch: final Definition s = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 230
score: 99.31088595920139
patch: for ( Var s : n . get . depends CaMeL On ( def ) ) {
rank: 230
score: 99.30809733072917
patch: for ( Var s : def . depends . size ( ) ) {
rank: 230
score: 99.30533854166667
patch: for ( Var s : def == null : def . depends ) {
rank: 230
score: 99.2820183249081
patch: if ( state != null && state . get CaMeL Annotation ( ) != null )
rank: 230
score: 99.1730712890625
patch: for ( Var s : def . depends && ref . depends ) {
rank: 230
score: 99.15984235491071
patch: for ( Var s : def . depends ) { s . add ( def . depends ) ; }
rank: 230
score: 99.09447428385417
patch: for ( Var s : def . is CaMeL Initialized ( ) ) {
rank: 231
score: 99.36375517003677
patch: for ( Var s : js CaMeL Scope . get CaMeL In ( ) ) {
rank: 231
score: 99.35367431640626
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get (
rank: 231
score: 99.3103889016544
patch: / for ( Var s : def . depends CaMeL On ( def ) ) {
rank: 231
score: 99.30752081620066
patch: for ( Definition s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ) {
rank: 231
score: 99.30474446614583
patch: for ( Var s : new Node ( use CaMeL Node ) ) {
rank: 231
score: 99.28180290670956
patch: if ( def != null && def . get CaMeL Annotation ( ) != null )
rank: 231
score: 99.17300235523896
patch: for ( Var s : def . depends 1 ( def . depends ) ) {
rank: 231
score: 99.15953572591145
patch: System . err . println ( $STRING$ + def . get CaMeL Parent ( ) . get CaMeL Id ( ) ) ;
rank: 231
score: 99.09394182477679
patch: for ( Var s : def . depends || def != null {
rank: 232
score: 99.36421421595982
patch: for ( Var s : n . get CaMeL Var ( ) )
rank: 232
score: 99.36369885896382
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ) {
rank: 232
score: 99.3531827059659
patch: Node def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 232
score: 99.30681694878473
patch: if ( state . get CaMeL In ( ) instanceof Must CaMeL Def > false ) {
rank: 232
score: 99.30472564697266
patch: if ( def != js CaMeL Scope || def != js CaMeL Scope ) {
rank: 232
score: 99.28172084263393
patch: if ( s . get CaMeL In ( ) != null ) {
rank: 232
score: 99.17118835449219
patch: for ( Var s : def . equals ( def ) . depends ) {
rank: 232
score: 99.09382629394531
patch: for ( final Var s : def . depends CaMeL On ( ) ) {
rank: 233
score: 99.36402180989583
patch: for ( Var s : def . depends CaMeL On ( type ) )
rank: 233
score: 99.3634097450658
patch: for ( Definition s : def . get CaMeL In ( ) . depends ( ) ) {
rank: 233
score: 99.30662952769886
patch: for ( Var 1 : def . depends ) {
rank: 233
score: 99.30450798483456
patch: for ( Var s : def . get CaMeL Node ( use CaMeL Node ) )
rank: 233
score: 99.281591796875
patch: for ( Var s : def . depends CaMeL On ( state ) )
rank: 233
score: 99.09375939002403
patch: for ( Var s : def . depends ) return null {
rank: 234
score: 99.36390445106908
patch: for ( Var s : def . depends CaMeL On ( ) . values ( ) ) {
rank: 234
score: 99.36304995888158
patch: for ( Var s : def . get CaMeL In ( ) . n ( ) ) {
rank: 234
score: 99.3523661295573
patch: String depends = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 234
score: 99.3096923828125
patch: for ( Var n : def . depends CaMeL On ( def , def ) ) {
rank: 234
score: 99.30632990056819
patch: for ( Var s < def . depends ) {
rank: 234
score: 99.28136488970588
patch: Flow CaMeL State < Must CaMeL Def > state = n . depends ( ) ;
rank: 234
score: 99.17026930588942
patch: for ( int [ ] def : def . depends ) {
rank: 234
score: 99.1588070518092
patch: for ( Var s : def . depends ) { Var depends = def . depends ) ;
rank: 235
score: 99.36351521809895
patch: for ( Var s : def . depends CaMeL On ( name , def . depends CaMeL On ( name ) ) )
rank: 235
score: 99.36297607421875
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( null ) ;
rank: 235
score: 99.352255859375
patch: final Var s = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 235
score: 99.30965847439236
patch: for ( Node < Var > s : def . depends CaMeL On ( def ) )
rank: 235
score: 99.30629272460938
patch: for ( Flow CaMeL State < Node > s : n . get CaMeL In ( ) ) {
rank: 235
score: 99.30359604779412
patch: for ( Node def : state . get CaMeL In ( ) . depends ) {
rank: 235
score: 99.16947428385417
patch: for ( Var s : def . is CaMeL Array ( ) ) {
rank: 235
score: 99.0928955078125
patch: for ( Var s : def . depends ) { def = null ;
rank: 236
score: 99.36273871527777
patch: for ( Var s : def . get CaMeL By CaMeL Name ( name ) ) {
rank: 236
score: 99.35181884765625
patch: String js CaMeL Scope = def . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 236
score: 99.30951690673828
patch: for ( Var s : def . depends CaMeL On ( ) ) { )
rank: 236
score: 99.30305750229779
patch: for ( Node s : def . get CaMeL Cfg ( ) . depends ) {
rank: 236
score: 99.28091634114584
patch: for ( Var s : def . get CaMeL Types ( ) ) {
rank: 236
score: 99.16842447916666
patch: for ( Var s = null ; s : def . depends ) {
rank: 236
score: 99.15776510799633
patch: for ( Var s : def . depends ( def . depends ( ) ) )
rank: 236
score: 99.09173177083333
patch: for ( Var s : def . is CaMeL Constant ( ) ) {
rank: 237
score: 99.3635021391369
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Method ( ) ) )
rank: 237
score: 99.36265162417763
patch: for ( Var s : def . get CaMeL In ( ) . matches ( ) ) {
rank: 237
score: 99.35167926290761
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 237
score: 99.305908203125
patch: if ( state . get CaMeL Annotation ( ) instanceof Must CaMeL Def > ) {
rank: 237
score: 99.2807258157169
patch: if ( def != null && s . get CaMeL Annotation ( ) != null )
rank: 237
score: 99.16791178385417
patch: for ( Object s : def . depends , def . depends ) {
rank: 237
score: 99.15756564670139
patch: for ( Var s : def . depends ) Var s : def . depends ) {
rank: 237
score: 99.09158325195312
patch: for ( Var s : def . depends == ) {
rank: 238
score: 99.36341616981908
patch: for ( Var s : def . depends CaMeL On ( s . depends ) ) { {
rank: 238
score: 99.36190975413604
patch: for ( Var s : js CaMeL Scope . get CaMeL Annotation ( ) ) {
rank: 238
score: 99.3515625
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name + ) ) ;
rank: 238
score: 99.30255126953125
patch: if ( s . scope == js CaMeL Scope ) {
rank: 238
score: 99.28068033854167
patch: for ( Var s : def . is CaMeL All ( ) ) {
rank: 238
score: 99.16621668198529
patch: for ( Var s : def . depends ) if ( def . depends ) {
rank: 238
score: 99.1573486328125
patch: for ( Result s : def . depends ) {
rank: 239
score: 99.36331309442934
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( this ) ) ) {
rank: 239
score: 99.36172645970395
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Node ( ) ;
rank: 239
score: 99.35130399816177
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope ) ;
rank: 239
score: 99.3091064453125
patch: / * for ( Var s : def . depends CaMeL On ( {
rank: 239
score: 99.30545847039474
patch: for ( Var s : def . depends ) if ( s . scope != null ) {
rank: 239
score: 99.28067016601562
patch: if ( state != js CaMeL Scope . get CaMeL Scope ( ) ) {
rank: 239
score: 99.16600126378677
patch: for ( Var s : 0 . depends && def != null . depends ) {
rank: 239
score: 99.15726725260417
patch: for ( Iterator < Var > - 0 : def . depends ) {
rank: 239
score: 99.09077671595982
patch: for ( Var s : def . depends ( type ) ) {
rank: 240
score: 99.350830078125
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ) ;
rank: 240
score: 99.30882045200893
patch: for ( Var s : n . get CaMeL Vars ( ) )
rank: 240
score: 99.30460397820724
patch: if ( state . get CaMeL In ( ) . equals ( js CaMeL Scope ) ) {
rank: 240
score: 99.30238252527573
patch: for ( Var s : def . depends ) if ( s . scope ) {
rank: 240
score: 99.2804314108456
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def .
rank: 240
score: 99.16579026442308
patch: for ( Var s : 0 . depends != null ) {
rank: 241
score: 99.36320277622768
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . get CaMeL Name ( ) ) ) )
rank: 241
score: 99.35001627604167
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) != null ;
rank: 241
score: 99.30804122121711
patch: for ( Node < Var > s : def . depends CaMeL On ( def ) ) {
rank: 241
score: 99.3023322610294
patch: for ( Node s : n . get CaMeL In ( ) . depends ) {
rank: 241
score: 99.2803446451823
patch: Var def = state . get CaMeL In ( ) ;
rank: 241
score: 99.16555989583334
patch: for ( Var s : def . depends && def != get ) {
rank: 241
score: 99.15670615748355
patch: for ( Var s : def . get CaMeL Next ( ) . depends ( ) ) {
rank: 241
score: 99.08998801491477
patch: for ( Task s : def . depends ) {
rank: 242
score: 99.3496875
patch: Object def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 242
score: 99.30791558159723
patch: for ( Var s : def . depends CaMeL On ( def , null ) ) {
rank: 242
score: 99.30410330636161
patch: for ( Must CaMeL Def > state : state . depends ) {
rank: 242
score: 99.16553548177083
patch: for ( String s : def . depends , s . depends ) {
rank: 242
score: 99.08995768229167
patch: Var s : for ( Var s : def . depends ) { {
rank: 243
score: 99.36289399245689
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends CaMeL On ( ) ) ) ) {
rank: 243
score: 99.35995965254934
patch: if ( state != js CaMeL Scope . get CaMeL Var ( name ) ) return false ;
rank: 243
score: 99.3488260904948
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Id ( ) ) ) {
rank: 243
score: 99.30751037597656
patch: for ( Var s : def . depends CaMeL On ( exp ) ) {
rank: 243
score: 99.30388327205883
patch: for ( Must CaMeL Def def : def . depends CaMeL On ( ) ) {
rank: 243
score: 99.30052992876838
patch: for ( Definition s : n . get CaMeL In ( ) . depends ) {
rank: 243
score: 99.27996063232422
patch: if ( state != js CaMeL Scope . get CaMeL Def ( ) ) {
rank: 243
score: 99.1654296875
patch: for ( Var [ : def . depends && def . depends ) {
rank: 243
score: 99.15568033854167
patch: if ( def != null ) { System . out . println ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 244
score: 99.36207116168478
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( def ) ) {
rank: 244
score: 99.34880264945652
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( this ) ;
rank: 244
score: 99.30745656866776
patch: for ( Var s : def . depends CaMeL On ) { if ( def . depends )
rank: 244
score: 99.30327606201172
patch: for ( Flow CaMeL State < Node > def : def . depends ) {
rank: 244
score: 99.3000259399414
patch: if ( s . get CaMeL In ( ) == js CaMeL Scope ) {
rank: 244
score: 99.16481119791666
patch: for ( Var s : null , def : def . depends ) {
rank: 244
score: 99.1554931640625
patch: for ( Node s : def . get CaMeL Next ( ) ) {
rank: 245
score: 99.36203835227273
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( null ) ) )
rank: 245
score: 99.35942925347223
patch: for ( Var s : def . reaching CaMeL Def . iterator ( ) ) {
rank: 245
score: 99.34859375
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . scope ;
rank: 245
score: 99.30706108940973
patch: for ( Var s : def . depends CaMeL On ( ) ) { def . {
rank: 245
score: 99.30318603515624
patch: for ( Var s : def . depends CaMeL On ( get CaMeL Scope ( ) ) ) {
rank: 245
score: 99.27982584635417
patch: Definition def = def . get CaMeL In ( ) ;
rank: 245
score: 99.1643425436581
patch: for ( Var s : 0 . depends != null Var s . depends ) {
rank: 245
score: 99.15407017299107
patch: for ( Var s : def . depends ) { depends ) {
rank: 246
score: 99.3590087890625
patch: for ( Var s : def . get CaMeL Def . get CaMeL In ( ) ) {
rank: 246
score: 99.34837757457386
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 246
score: 99.30670844184027
patch: for ( Var s : n . depends CaMeL On ( Var . class ) ) {
rank: 246
score: 99.30236138237848
patch: if ( s instanceof Must CaMeL Def > state . get CaMeL In ( ) ) {
rank: 246
score: 99.27982330322266
patch: for ( Var s : def . get CaMeL Annotation ( ) . depends )
rank: 246
score: 99.1536865234375
patch: for ( Var s : def . depends ) { def = node . depends ) {
rank: 246
score: 99.08670479910714
patch: for ( Var s : def . depends ( parent ) ) {
rank: 247
score: 99.36117553710938
patch: for ( Var s : def . depends CaMeL On ( group ) ) {
rank: 247
score: 99.34792073567708
patch: for ( Var s : def . depends CaMeL On ( js CaMeL Scope . get CaMeL Var ( name ) ) )
rank: 247
score: 99.30638212316177
patch: for ( Var s : def . depends CaMeL On ( def ) ) { )
rank: 247
score: 99.29821059283088
patch: for ( Var s : def . depends && s == js CaMeL Scope ) {
rank: 247
score: 99.27896118164062
patch: if ( js CaMeL Scope . get CaMeL Value ( ) != null ) {
rank: 247
score: 99.1628776999081
patch: for ( Var s : def . depends ) println ( s . depends ) {
rank: 247
score: 99.15355160361842
patch: Var s = def . get ) ; for ( Var s : def . depends ) {
rank: 247
score: 99.08643391927083
patch: for ( Var s : def . depends . depends != null ) {
rank: 248
score: 99.3603515625
patch: for ( Var s : def . depends CaMeL On ( name . to CaMeL String ( ) ) ) {
rank: 248
score: 99.34765625
patch: if ( s . get CaMeL Annotation ( ) != null ) {
rank: 248
score: 99.30601399739584
patch: / * * for ( Var s : def . depends ) * /
rank: 248
score: 99.30194091796875
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ++ ;
rank: 248
score: 99.29818522135416
patch: for ( Var def : n . get CaMeL Vars ( ) ) {
rank: 248
score: 99.152880859375
patch: for ( Var s : def . depends ) { depends . add ( def . depends ) ;
rank: 248
score: 99.08571555397727
patch: for ( Var s : in . depends ) {
rank: 249
score: 99.36023530505952
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( name ) {
rank: 249
score: 99.35810403262867
patch: while ( state != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 249
score: 99.34750366210938
patch: return def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 249
score: 99.30572916666667
patch: for ( Node s : def . depends CaMeL On ( ) ) {
rank: 249
score: 99.30115685096153
patch: for ( Definition s : def . depends ( ) ) {
rank: 249
score: 99.29759928385417
patch: for ( Var def : state . get CaMeL Scope ( ) ) {
rank: 249
score: 99.16255018446181
patch: for ( Var s == ( Var s : def . depends ) . depends ) {
rank: 249
score: 99.15264533547794
patch: for ( Var s : def . depends ) { return s . depends ) {
rank: 249
score: 99.08548736572266
patch: for ( Var s : def . is CaMeL Var ( s ) ) {
rank: 250
score: 99.36020042782738
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Class ( ) ) )
rank: 250
score: 99.3470458984375
patch: return def != null + js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 250
score: 99.30565049913194
patch: / * for ( Var s : def . depends CaMeL On ( def ) ) {
rank: 250
score: 99.30078125
patch: for ( Must CaMeL Def > s : state . depends CaMeL On ( ) ) {
rank: 250
score: 99.29684627757354
patch: for ( Var scope : state . get CaMeL In ( ) . depends ) {
rank: 250
score: 99.16197967529297
patch: for ( Var s : def . depends 1 ( ) . depends ) {
rank: 250
score: 99.1521708170573
patch: if ( def == null ) { System . out . println ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 251
score: 99.36014988111413
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( null ) ) ) {
rank: 251
score: 99.35656020220588
patch: for ( Var s : def . get CaMeL In ( ) . next ) {
rank: 251
score: 99.34689670138889
patch: if ( js CaMeL Scope . get CaMeL In ( ) != js CaMeL Scope ) {
rank: 251
score: 99.30561908922698
patch: for ( Var s : def . depends CaMeL On ( name , use CaMeL Node ) )
rank: 251
score: 99.299853515625
patch: for ( Flow CaMeL State < Node > s : def . get CaMeL Annotation ( ) ) {
rank: 251
score: 99.29684244791666
patch: for ( Var def : state . get CaMeL Node ( ) ) {
rank: 251
score: 99.27784016927083
patch: for ( Reference s : def . get CaMeL In ( ) ) {
rank: 251
score: 99.16185709635417
patch: for ( Var s : def . depends + def . depends ) {
rank: 251
score: 99.15169583834134
patch: for ( Var [ ] def : n . depends ) {
rank: 251
score: 99.08451334635417
patch: for ( Var s : def . is CaMeL True ( ) ) {
rank: 252
score: 99.35991876775569
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( value ) ) )
rank: 252
score: 99.35654810855263
patch: if ( state != js CaMeL Scope . get CaMeL Var ( use CaMeL Node ) ) {
rank: 252
score: 99.34676963404605
patch: return def . depends CaMeL On ( js CaMeL Scope . get CaMeL In ( ) ) ;
rank: 252
score: 99.30525970458984
patch: Var s = ( Var ) def . depends CaMeL On ( def ) ;
rank: 252
score: 99.29951307508681
patch: if ( state . get CaMeL In ( ) . size ( ) != 0 ) {
rank: 252
score: 99.29651641845703
patch: for ( Var def : def . get CaMeL Var ( name ) ) {
rank: 252
score: 99.27743094308036
patch: for ( Var s : def . equals ( s ) ) {
rank: 252
score: 99.16160481770834
patch: for ( Var s != null ? null : def . depends ) {
rank: 252
score: 99.1512515419408
patch: for ( Var s : def . get CaMeL Reference CaMeL List ( ) . depends ) {
rank: 253
score: 99.35988071986607
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Var ( name ) ) )
rank: 253
score: 99.35650956003289
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Definition ( ) ;
rank: 253
score: 99.34654476768092
patch: final Definition def = state . get CaMeL In ( ) . get CaMeL Def ( ) ;
rank: 253
score: 99.30467122395834
patch: if ( def == null || def . depends CaMeL On ( ) )
rank: 253
score: 99.29608561197917
patch: for ( Var def : n . get CaMeL Node ( ) ) {
rank: 253
score: 99.1503547219669
patch: for ( Var s : def . depends ) Var s = def . depends )
rank: 253
score: 99.08267211914062
patch: if ( def != null && def . depends && def . depends ) {
rank: 254
score: 99.359619140625
patch: for ( Var s : def . depends CaMeL On ( key ) ) {
rank: 254
score: 99.35648839613971
patch: for ( Must CaMeL Def s : def . get CaMeL Annotation ( ) ) {
rank: 254
score: 99.3465217141544
patch: Vector < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 254
score: 99.2957763671875
patch: for ( Var def : def . get CaMeL Cfg ( ) ) {
rank: 254
score: 99.27699279785156
patch: for ( Var s : def . get CaMeL Key ( name ) ) {
rank: 254
score: 99.1614239032452
patch: for ( Var s = def : def . depends ) {
rank: 254
score: 99.14995465959821
patch: for ( Node < String > def : def . depends ) {
rank: 254
score: 99.08266977163461
patch: / * for ( Object s : def . depends ) {
rank: 255
score: 99.35933061079545
patch: for ( Var s : n . depends CaMeL On ( s . get CaMeL Var ( ) ) ) {
rank: 255
score: 99.35641479492188
patch: for ( final Var s : def . get CaMeL Def ( ) ) {
rank: 255
score: 99.34543775475544
patch: head = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 255
score: 99.3039909811581
patch: for ( Var s : n . depends CaMeL On ( name ) ) { {
rank: 255
score: 99.29873996310764
patch: for ( Graph CaMeL Node < Must CaMeL Def > state : def . depends ) {
rank: 255
score: 99.1613436612216
patch: for ( Var s : this . depends ) {
rank: 255
score: 99.0824462890625
patch: for ( ? for ( Var s : def . depends ) ) {
rank: 256
score: 99.35931687127976
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Modifiers ( ) ) )
rank: 256
score: 99.34528914741848
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( js CaMeL Scope ) )
rank: 256
score: 99.30392456054688
patch: for ( Node < Node > n : def . depends CaMeL On ) {
rank: 256
score: 99.29868678042763
patch: Definition def = def . get CaMeL In ( ) . reaching CaMeL Def ( ) ;
rank: 256
score: 99.1612548828125
patch: for ( Var s : def . depends && def . depends != ) {
rank: 256
score: 99.14911965762867
patch: for ( Var s : def . get CaMeL Options ( ) . depends ) {
rank: 256
score: 99.0822245279948
patch: Var s : for ( Var s : def ) {
rank: 257
score: 99.35882098858173
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . depends CaMeL On ) ) )
rank: 257
score: 99.355029296875
patch: for ( String s : def . get CaMeL Scope ( ) ) {
rank: 257
score: 99.34491521661931
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . scope ;
rank: 257
score: 99.30375671386719
patch: for ( Var s : n . get CaMeL Var ( def ) ) {
rank: 257
score: 99.2981818704044
patch: for ( Var s + 1 : state . get CaMeL In ( ) ) {
rank: 257
score: 99.29447798295455
patch: for ( Reference s : def . depends ) {
rank: 257
score: 99.16051136363636
patch: for ( Var s : def . TRUE ) {
rank: 258
score: 99.35867874710648
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( ) . depends CaMeL On ( ) ) )
rank: 258
score: 99.35489908854167
patch: for ( Var s : s . get CaMeL Annotation ( ) ) {
rank: 258
score: 99.3447902513587
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . get CaMeL Var ( name ) ;
rank: 258
score: 99.296728515625
patch: for ( Var s : state . depends CaMeL On ( ) ) {
rank: 258
score: 99.29412482766544
patch: for ( Var s : state . get CaMeL In ( ) . def ) {
rank: 258
score: 99.2749267578125
patch: for ( Var s : def . depends ( use CaMeL Node ) )
rank: 258
score: 99.160400390625
patch: for ( Var s : def . depends && def , def ) {
rank: 258
score: 99.1486587524414
patch: for ( Iterator < Var > 0 > 0 = def . depends ) {
rank: 258
score: 99.0813980102539
patch: if ( def . depends != null && def . depends != null ) {
rank: 259
score: 99.35855441623264
patch: for ( Var s : def . depends CaMeL On ( name , this ) ) {
rank: 259
score: 99.35372764185855
patch: for ( Var s : def . get CaMeL Def . get CaMeL Annotation ( ) ) {
rank: 259
score: 99.303271484375
patch: for ( Var s : def . depends ) { if ( ) {
rank: 259
score: 99.2966796875
patch: for ( Flow CaMeL State < Node > s : state . get CaMeL Annotation ( ) ) {
rank: 259
score: 99.2939224243164
patch: for ( Var s : ! def . get CaMeL In ( ) ) {
rank: 259
score: 99.27447150735294
patch: for ( Var s + s : def . get CaMeL In ( ) ) {
rank: 259
score: 99.14862351190476
patch: if ( def != null ) { System . out . println ( $STRING$ + def . depends ) ;
rank: 260
score: 99.35826918658088
patch: for ( Var s : def . depends CaMeL On ( name , this ) )
rank: 260
score: 99.34452311197917
patch: String name = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 260
score: 99.30303596047794
patch: for ( Var s : def . depends ) { if ( def . ) {
rank: 260
score: 99.29596910978618
patch: Graph CaMeL Node < Node , Branch > n = n . get CaMeL Annotation ( ) ;
rank: 260
score: 99.29363250732422
patch: if ( s != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 260
score: 99.27435661764706
patch: if ( state != null && s . get CaMeL Annotation ( ) != null )
rank: 260
score: 99.16016981336806
patch: for ( Var s : $STRING$ ) {
rank: 260
score: 99.14742431640624
patch: for ( Var s : def . depends ) return def . depends ( def . depends ) ;
rank: 261
score: 99.358154296875
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Value ( ) ) )
rank: 261
score: 99.35279134114583
patch: for ( Var s : def . get CaMeL Style ( ) ) {
rank: 261
score: 99.34411090353261
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( type ) ;
rank: 261
score: 99.2929328469669
patch: for ( Var s : def != null . get CaMeL In ( ) ) {
rank: 261
score: 99.2740119485294
patch: if ( def != null && def . get CaMeL In ( ) != null )
rank: 261
score: 99.15977567784927
patch: for ( Var s : def . depends || def != null . depends ) {
rank: 261
score: 99.14701511548913
patch: synchronized ( def . depends ) { for ( Var s : def . depends . depends . depends . ) {
rank: 261
score: 99.08080240885417
patch: for ( Var s : def . get CaMeL Superclass ( ) ) {
rank: 262
score: 99.35814267113095
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( this ) )
rank: 262
score: 99.34385770909927
patch: if ( js CaMeL Scope != null && def . scope != js CaMeL Scope )
rank: 262
score: 99.29551696777344
patch: for ( Must CaMeL Def < Node > state : def . depends ) {
rank: 262
score: 99.29227447509766
patch: for ( Definition s : def . reaching CaMeL Def . depends ) {
rank: 262
score: 99.27334798177084
patch: for ( Var s : def . get CaMeL Source ( ) ) {
rank: 262
score: 99.146875
patch: for ( Iterator < Var > - 1 : def . depends ) {
rank: 262
score: 99.080322265625
patch: for ( Var s : def . depends != def . depends ) {
rank: 263
score: 99.34318741508152
patch: if ( def != state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 263
score: 99.3026123046875
patch: Node < Var > def = def . depends CaMeL On ( def ) ;
rank: 263
score: 99.29532623291016
patch: for ( Flow CaMeL State < Must CaMeL Def > state : def ) {
rank: 263
score: 99.2914680032169
patch: for ( Node s : n . get CaMeL Annotation ( ) . depends ) {
rank: 263
score: 99.27262878417969
patch: for ( Var s ++ : def . get CaMeL Def ( ) ) {
rank: 263
score: 99.15928649902344
patch: for ( Var s : null . depends ( s . depends ) ) {
rank: 263
score: 99.14684186662946
patch: if ( def instanceof Var ) { return def . depends ) ;
rank: 264
score: 99.35723586309524
patch: for ( Var s : def . depends CaMeL On ( { s . depends CaMeL On ( ) )
rank: 264
score: 99.34245499320652
patch: return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( js CaMeL Scope , js CaMeL Scope ) ;
rank: 264
score: 99.30245971679688
patch: for ( Var s : def . depends CaMeL On ( def , ) )
rank: 264
score: 99.29098690257354
patch: for ( Branch s : def . get CaMeL In ( ) . depends ) {
rank: 264
score: 99.27247619628906
patch: if ( state != js CaMeL Scope . get CaMeL Value ( name ) )
rank: 264
score: 99.15904017857143
patch: Var ) ; for ( Var s : def . depends ) {
rank: 264
score: 99.14624895368304
patch: for ( Iterator < Var > index : def . depends ) {
rank: 265
score: 99.35707493832237
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ) )
rank: 265
score: 99.34226296164773
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope ) == js CaMeL Scope ) {
rank: 265
score: 99.30240028782895
patch: Var s = def . get CaMeL Var ( def . get CaMeL Var ( ) ) ;
rank: 265
score: 99.29470486111111
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ) ;
rank: 265
score: 99.2907355813419
patch: for ( Node s : def . get CaMeL Annotation ( ) . depends ) {
rank: 265
score: 99.27232360839844
patch: if ( js CaMeL Scope . get CaMeL Scope ( ) != null ) {
rank: 265
score: 99.15872955322266
patch: for ( Var s : def . depends , Var s . depends ) {
rank: 265
score: 99.14620208740234
patch: if ( def != null . depends ) { return def . depends ) ;
rank: 265
score: 99.07823689778645
patch: for ( Var s : def . depends ) continue {
rank: 266
score: 99.35695884967673
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Name ( ) ) ) ) {
rank: 266
score: 99.34971859580592
patch: for ( Var s : def . depends ( ) . get CaMeL In ( ) ) {
rank: 266
score: 99.34166717529297
patch: if ( def != null || def . scope != js CaMeL Scope ) {
rank: 266
score: 99.30152652138158
patch: for ( Var s : def . depends CaMeL On ( def , def , true ) )
rank: 266
score: 99.27217610677083
patch: for ( Var s : def . depends ( ) ) return true ;
rank: 266
score: 99.1586685180664
patch: for ( Var s : def . depends , s def . depends ) {
rank: 266
score: 99.07816256009616
patch: for ( String s : def . size ( ) ) {
rank: 267
score: 99.35681733630952
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Name ( ) ) )
rank: 267
score: 99.34120686848958
patch: if ( = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) )
rank: 267
score: 99.29370835248162
patch: for ( Must CaMeL Def s : state . get CaMeL Annotation ( ) ) {
rank: 267
score: 99.29016831341912
patch: for ( Node def : def . get CaMeL In ( ) . depends ) {
rank: 267
score: 99.27120535714286
patch: for ( Var s : state . get CaMeL Annotation ( ) )
rank: 267
score: 99.15840418198529
patch: for ( Var s : def . depends , depends , def . depends ) {
rank: 267
score: 99.14517647879464
patch: if ( def != null ) { return s . depends ) ;
rank: 268
score: 99.35670776367188
patch: for ( Var s : def . depends CaMeL On ( name , def . depends ) ) {
rank: 268
score: 99.30113220214844
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( ) )
rank: 268
score: 99.27070617675781
patch: if ( state . get CaMeL Scope ( ) != js CaMeL Scope ) {
rank: 268
score: 99.15796837439903
patch: for ( Var s : null . depends , def ) {
rank: 268
score: 99.14470880681819
patch: for ( Var s : def . def ) {
rank: 268
score: 99.07781427556819
patch: for ( Var s : list . depends ) {
rank: 269
score: 99.35660807291667
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Declaration ( ) ) )
rank: 269
score: 99.34060489430146
patch: return def . scope != js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 269
score: 99.30083465576172
patch: for ( Var def : def . depends CaMeL On ( def ) ) {
rank: 269
score: 99.28898351332721
patch: for ( Var s : scope . get CaMeL In ( ) . depends ) {
rank: 269
score: 99.27046712239583
patch: for ( Var s : def . get CaMeL Type ( name ) )
rank: 269
score: 99.15753643329327
patch: for ( Var s : def . depends , null ) {
rank: 269
score: 99.14466349283855
patch: for ( Var s : def . depends ( def . depends ( ) . to CaMeL String ( ) ) ) {
rank: 269
score: 99.07755903764205
patch: for ( Var s : nodes . depends ) {
rank: 270
score: 99.3562744140625
patch: for ( Var s : def . depends CaMeL On ( s , def . depends ) ) {
rank: 270
score: 99.3403087797619
patch: result = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 270
score: 99.30071258544922
patch: for ( Var target : def . depends CaMeL On ( def ) ) {
rank: 270
score: 99.15746131310097
patch: for ( Var s : def . depends && true ) {
rank: 270
score: 99.14446343315973
patch: if ( def == null ) { System . out . println ( $STRING$ ) ; }
rank: 270
score: 99.0771484375
patch: for ( String s : def . depends . depends ) {
rank: 271
score: 99.35602678571429
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . to CaMeL String ( ) ) ) {
rank: 271
score: 99.34862603081598
patch: for ( Must CaMeL Def > state : def . get CaMeL Annotation ( ) ) {
rank: 271
score: 99.34030018682066
patch: return state . get CaMeL In ( ) . get CaMeL Scope ( ) . get CaMeL Var ( name ) ;
rank: 271
score: 99.30045358758224
patch: for ( Var s : def . depends CaMeL On ) { def . set ) ; }
rank: 271
score: 99.15744253305289
patch: for ( Var s : def . is CaMeL Local ) {
rank: 271
score: 99.1443603515625
patch: return def != null ? def == null : def . depends ) ;
rank: 271
score: 99.07713317871094
patch: for ( String s : def . get CaMeL Var ( s ) ) {
rank: 272
score: 99.35559844970703
patch: for ( Var s : n . depends CaMeL On ( target ) ) {
rank: 272
score: 99.34770651424633
patch: for ( Var s : def . get CaMeL Def ( ) . get ) {
rank: 272
score: 99.33920288085938
patch: return def . depends CaMeL On ( js CaMeL Scope . get CaMeL Var ( name ) , js CaMeL Scope ) ;
rank: 272
score: 99.30040785845588
patch: for ( Var CaMeL Definition s : n . depends CaMeL On ( ) ) {
rank: 272
score: 99.29238455636161
patch: Definition def ; for ( Var s : def . depends ) {
rank: 272
score: 99.28811645507812
patch: if ( def != null || s . scope != js CaMeL Scope ) {
rank: 272
score: 99.15723470052083
patch: for ( Var s : $STRING$ . depends , def . depends ) {
rank: 272
score: 99.14425320095486
patch: System . out . println ( $STRING$ + def . get CaMeL Var ( ) ) ;
rank: 272
score: 99.07672991071429
patch: if ( def != null && s . depends != null ) {
rank: 273
score: 99.33919270833333
patch: if ( def != null ) { return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ;
rank: 273
score: 99.30006810238487
patch: / * for ( Var s : def . depends CaMeL On ( def ) ) * /
rank: 273
score: 99.28802490234375
patch: for ( Var < Must CaMeL Def > s : def . depends ) {
rank: 273
score: 99.26948547363281
patch: for ( Var s : def . is CaMeL In ( s ) ) {
rank: 273
score: 99.15718587239583
patch: for ( Var s : new ? def : def . depends ) {
rank: 273
score: 99.07660784040179
patch: Var s : for ( Var s : def . get ) {
rank: 274
score: 99.35547637939453
patch: for ( Var s : def . depends CaMeL On ( $NUMBER$ ) ) {
rank: 274
score: 99.33903702445652
patch: return def . depends CaMeL On . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 274
score: 99.29972570082721
patch: for ( Var s : def . depends CaMeL On ) { Var s = {
rank: 274
score: 99.29205322265625
patch: for ( Graph CaMeL Node < Node , Must CaMeL Def > state : def . depends ) {
rank: 274
score: 99.2880126953125
patch: for ( Var [ ( Var s : def . depends ) ) {
rank: 274
score: 99.26937161959134
patch: Definition def = state . get CaMeL In ( name ) ;
rank: 274
score: 99.14404975043402
patch: for ( Var s : def . depends ) { if ( n . depends ) {
rank: 275
score: 99.35529641544117
patch: for ( Var s : def . depends CaMeL On ( ) ) return false ;
rank: 275
score: 99.29943033854167
patch: for ( Var s : n . get CaMeL Out ( ) ) {
rank: 275
score: 99.29180586965461
patch: for ( Must CaMeL Def > s : def . reaching CaMeL Def . depends ) {
rank: 275
score: 99.2876708984375
patch: for ( Node s : n . get CaMeL Annotation ( ) ) {
rank: 275
score: 99.26934814453125
patch: if ( state . get CaMeL Scope ( ) != null ) {
rank: 275
score: 99.15654296875
patch: if ( def != null . depends ) {
rank: 275
score: 99.14340608016305
patch: for ( Var s : def . depends ) { s . depends . add ( def . depends ) ; }
rank: 275
score: 99.07625034877232
patch: for ( Var s : def . depends && def . depends )
rank: 276
score: 99.35498046875
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) . depends ) ) {
rank: 276
score: 99.33856201171875
patch: if ( def != null ) return def . reaching CaMeL Def . get ( js CaMeL Scope
rank: 276
score: 99.29938103170956
patch: for ( Var s : n . depends ) { Var s = s . {
rank: 276
score: 99.28753303079044
patch: for ( Var s : def . get CaMeL In ( ) . length ) {
rank: 276
score: 99.26920572916667
patch: Annotation def = state . get CaMeL Annotation ( ) ;
rank: 276
score: 99.15602805397727
patch: for ( Var s : def . lang ) {
rank: 276
score: 99.1429443359375
patch: for ( Var s : def . get CaMeL Parent ( ) . get ) {
rank: 277
score: 99.35489628232759
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . get CaMeL Var ( ) ) ) ) {
rank: 277
score: 99.34688313802083
patch: for ( Flow CaMeL State < Must CaMeL Def > state : js CaMeL Scope ) {
rank: 277
score: 99.33848063151042
patch: return def . get CaMeL In ( ) . reaching CaMeL Def . get ( get CaMeL Cfg ( ) ) ;
rank: 277
score: 99.29903157552083
patch: for ( Var n : n . depends CaMeL On ( def ) )
rank: 277
score: 99.29133436414931
patch: if ( state . get CaMeL In ( ) instanceof Must CaMeL Def > true ) {
rank: 277
score: 99.28670501708984
patch: for ( Var s : def . depends CaMeL On ( null ) ) {
rank: 277
score: 99.2690673828125
patch: for ( Var s -- : def . get CaMeL In ( ) )
rank: 277
score: 99.14274088541667
patch: for ( Var s : def . depends ) { return false ; }
rank: 278
score: 99.35465494791667
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Prototype ( ) ) )
rank: 278
score: 99.34670538651316
patch: for ( Var s : def . reaching CaMeL Def . get ( current ) ) {
rank: 278
score: 99.33815599524456
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( def ) ;
rank: 278
score: 99.29895737591912
patch: for ( Var s : n . depends ) { def = s . depends )
rank: 278
score: 99.29118077895221
patch: for ( Var s > s : def . get CaMeL Def ( ) ) {
rank: 278
score: 99.26879010881696
patch: for ( Var s : def . contains ( s ) ) {
rank: 278
score: 99.14196099175348
patch: for ( Var s : def . depends ) { Var s : def . depends )
rank: 278
score: 99.07440185546875
patch: for ( String s : def . depends CaMeL On ( def ) ) {
rank: 279
score: 99.35450328480114
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( name ) ) )
rank: 279
score: 99.34640984786184
patch: Definition def = state . get CaMeL In ( ) . depends CaMeL On ( state ) ;
rank: 279
score: 99.33793131510417
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL String ( name ) ) ; }
rank: 279
score: 99.29892449629934
patch: for ( Var s : def . depends CaMeL On ( def , def ) . depends )
rank: 279
score: 99.29074276194854
patch: for ( for ( Var s : def . get CaMeL In ( ) ) {
rank: 279
score: 99.28601888020833
patch: for ( Var s : get CaMeL Annotation ( ) . depends ) {
rank: 279
score: 99.26805877685547
patch: for ( Var s : def . get CaMeL Field ( name ) ) {
rank: 279
score: 99.15576171875
patch: for ( Var s : ( Var [ : def . depends ) . depends ) {
rank: 279
score: 99.14163340692934
patch: for ( Var s : def . depends ) { def . depends . add ( def . depends ) ; }
rank: 279
score: 99.07437337239584
patch: for ( Var s : def . depends == def . depends ) {
rank: 280
score: 99.35447095788044
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Variable CaMeL Name ( ) ) )
rank: 280
score: 99.34602436266448
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Var ( ) ;
rank: 280
score: 99.3377176920573
patch: return state . get CaMeL In ( ) . get ( js CaMeL Scope . get CaMeL String ( name ) ) ;
rank: 280
score: 99.29795435855263
patch: for ( Var s : def . depends CaMeL On ) { if ( s . ) {
rank: 280
score: 99.29073893229166
patch: for ( String s : def . depends CaMeL On ( ) ) {
rank: 280
score: 99.28543853759766
patch: for ( Var s : ! state . get CaMeL In ( ) ) {
rank: 280
score: 99.26789855957031
patch: if ( js CaMeL Scope . get CaMeL Type ( ) != null ) {
rank: 280
score: 99.1557388305664
patch: if ( def != null . depends && def == null . depends ) {
rank: 280
score: 99.14161900111607
patch: if ( def == null ) { return false ; } else {
rank: 281
score: 99.35405040922619
patch: for ( Var s : n . depends CaMeL On ( s . depends CaMeL On ( ) ) )
rank: 281
score: 99.34601907169117
patch: for ( Must CaMeL Def state : state . get CaMeL In ( ) ) {
rank: 281
score: 99.3373514811198
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope , def ) ;
rank: 281
score: 99.29686737060547
patch: Set < Var > def = def . depends CaMeL On ( def ) ;
rank: 281
score: 99.28539276123047
patch: while ( s . get CaMeL Annotation ( ) != js CaMeL Scope ) {
rank: 281
score: 99.26781463623047
patch: if ( js CaMeL Scope . get CaMeL Value ( name ) == null )
rank: 281
score: 99.15568712022569
patch: for ( Var s : def . contains CaMeL Type ( def . depends ) ) {
rank: 281
score: 99.14112437855114
patch: for ( Var s : def . depends ) { s . add CaMeL All ( def . depends ) ;
rank: 281
score: 99.073974609375
patch: while ( def != null ) { s = def . depends ) ;
rank: 282
score: 99.35361615349265
patch: for ( Node < Node > s : def . get CaMeL In ( ) )
rank: 282
score: 99.33724975585938
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL In ( ) . depends ) ;
rank: 282
score: 99.29637858072917
patch: / * for ( Var s : def . depends ( ) ) {
rank: 282
score: 99.2895736694336
patch: for ( Var s : def . depends CaMeL On ( 0 ) ) {
rank: 282
score: 99.28449563419117
patch: for ( Var s : def == null . get CaMeL In ( ) ) {
rank: 282
score: 99.26744791666667
patch: if ( state . get CaMeL Annotation ( ) != js CaMeL Scope )
rank: 282
score: 99.15521709735577
patch: for ( Var s : def . is CaMeL Var ) {
rank: 282
score: 99.1410903930664
patch: for ( Var s : def . depends ) { def = null ; }
rank: 283
score: 99.35323660714286
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( $STRING$ ) {
rank: 283
score: 99.34589301215277
patch: for ( Var s : def . reaching CaMeL Def . next ( ) ) {
rank: 283
score: 99.2963155110677
patch: for ( Var s : n . depends ( ) )
rank: 283
score: 99.28859576056985
patch: for ( Must CaMeL Def def : state . get CaMeL Annotation ( ) ) {
rank: 283
score: 99.28422546386719
patch: for ( Var s : def . depends CaMeL On ( true ) ) {
rank: 283
score: 99.26661028180804
patch: for ( Var s : def . get CaMeL Parent ( ) )
rank: 283
score: 99.15474446614583
patch: for ( Var s : 0 . depends && s . depends ) {
rank: 283
score: 99.14095633370536
patch: for ( Iterator < Var > value : def . depends ) {
rank: 283
score: 99.07355143229167
patch: for ( Var s : for ( Var s . depends ) ) {
rank: 284
score: 99.35300118582589
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . depends CaMeL On ( ) ) ) )
rank: 284
score: 99.345703125
patch: Definition def = state . get CaMeL In ( ) . depends CaMeL On ( def ) ;
rank: 284
score: 99.33645450367646
patch: Collection < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 284
score: 99.29606119791667
patch: for ( Var s : n . depends CaMeL On ( def ) ) return true ;
rank: 284
score: 99.288525390625
patch: for ( Var s : s . depends CaMeL On ( ) ) {
rank: 284
score: 99.28390502929688
patch: for ( Var s : n . get CaMeL Node ( name ) ) {
rank: 284
score: 99.15452745225694
patch: for ( Var s : def . depends ) { def = s . depends ) }
rank: 284
score: 99.07324981689453
patch: Var s : for ( for ( Var s : def . depends ) {
rank: 285
score: 99.35296075994319
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( def ) ) )
rank: 285
score: 99.34543185763889
patch: for ( Var s : def . get CaMeL In ( use CaMeL Node ) ) {
rank: 285
score: 99.33620198567708
patch: return def . depends CaMeL On ( js CaMeL Scope . get CaMeL Var ( name ) , use CaMeL Node ) ;
rank: 285
score: 99.29605441623264
patch: try { for ( Var s : def . depends CaMeL On ( def ) ) {
rank: 285
score: 99.28365384615384
patch: for ( Flow CaMeL State s : def . depends ) {
rank: 285
score: 99.26634870256696
patch: if ( state . get CaMeL Var ( ) != null ) {
rank: 285
score: 99.15363018329327
patch: for ( Var s : def . is CaMeL Empty ) {
rank: 285
score: 99.13991088867188
patch: for ( Var s : def . depends ) for ( Var s : def . depends ) {
rank: 286
score: 99.33577104048295
patch: if ( reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) )
rank: 286
score: 99.28831481933594
patch: for ( Must CaMeL Def < Node > s : def . depends ) {
rank: 286
score: 99.15343560112848
patch: for ( Var s : def . depends ) println ( def . depends ) ; }
rank: 286
score: 99.13934326171875
patch: if ( def != null ) { System . err . println ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 286
score: 99.07232666015625
patch: System . out . println ( $STRING$ + s + $STRING$ + s ) ;
rank: 287
score: 99.35271344866071
patch: for ( Var s : def . depends CaMeL On ( ) . get CaMeL Var ( name ) )
rank: 287
score: 99.34518914473684
patch: for ( Var s : def . reaching CaMeL Def . get ( length ) ) {
rank: 287
score: 99.29534912109375
patch: for ( Var s : def . depends CaMeL On ( ) ) break ;
rank: 287
score: 99.28313739483173
patch: for ( Var s : this . def . depends ) {
rank: 287
score: 99.26534830729166
patch: String name = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 287
score: 99.15322641225961
patch: for ( Var s : 0 : def . depends ) {
rank: 287
score: 99.1393155184659
patch: for ( Object def : def . depends ) {
rank: 287
score: 99.07032121930804
patch: if ( def != null && def . depends != null ) {
rank: 288
score: 99.35215316280242
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( {
rank: 288
score: 99.33530883789062
patch: if ( s . reaching CaMeL Def . scope != js CaMeL Scope ) { return true ;
rank: 288
score: 99.28751918247768
patch: for ( Var s : def . depends $NUMBER$ > 1 ) {
rank: 288
score: 99.28094482421875
patch: for ( Var def : n . get CaMeL Annotation ( name ) ) {
rank: 288
score: 99.13898315429688
patch: Var s = def . depends ( def . depends ( def . depends ( ) ) ) ;
rank: 289
score: 99.3509188565341
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( $STRING$ ) ) {
rank: 289
score: 99.3449642783717
patch: if ( state != js CaMeL Scope . get CaMeL Var ( name ) ) return true ;
rank: 289
score: 99.3352762858073
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( use CaMeL Node ) ) {
rank: 289
score: 99.29441923253677
patch: for ( Var s : def . depends CaMeL On ( this ) ) { {
rank: 289
score: 99.28008270263672
patch: for ( Must CaMeL Def : state . get CaMeL Vars ( ) ) {
rank: 289
score: 99.26460774739583
patch: for ( Var s : def . get CaMeL Reference ( ) ) {
rank: 289
score: 99.13877958409927
patch: for ( Var s : def . get CaMeL Prototype ( ) . depends ) {
rank: 289
score: 99.06991811899039
patch: for ( Var s : def . depends ) continue ) {
rank: 290
score: 99.35075239701705
patch: for ( Var s : def . depends CaMeL On ( this ) . depends CaMeL On ( this ) )
rank: 290
score: 99.34478438527961
patch: Definition def = state . get CaMeL In ( ) . depends CaMeL On ( s ) ;
rank: 290
score: 99.33497155230978
patch: if ( def != null ) return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL
rank: 290
score: 99.29336368336396
patch: for ( Var s : def . depends CaMeL On ( for CaMeL Var ) )
rank: 290
score: 99.27969180836396
patch: for ( Type s : def . get CaMeL In ( ) . depends ) {
rank: 290
score: 99.15249294704861
patch: for ( Var s : def . depends ) { return def . depends ) ; }
rank: 290
score: 99.13846435546876
patch: for ( Var s : def . depends ) { def . depends ( def . depends ) ;
rank: 291
score: 99.35055106026786
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . to CaMeL String ( ) ) ) )
rank: 291
score: 99.34452739514802
patch: for ( Var s : def . reaching CaMeL Def . get 1 ( ) ) {
rank: 291
score: 99.33449485085227
patch: Object def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 291
score: 99.29329057173295
patch: for ( Var n : def . get ) {
rank: 291
score: 99.28642134232955
patch: if ( def instanceof Must CaMeL Def > ) {
rank: 291
score: 99.27919634650735
patch: for ( Flow CaMeL State state : n . get CaMeL Annotation ( ) ) {
rank: 291
score: 99.26413198617789
patch: for ( Var s : def . depends ) { break ;
rank: 291
score: 99.15244954427084
patch: for ( Var s : $STRING$ . is CaMeL Empty ( ) ) {
rank: 291
score: 99.06971958705357
patch: Token s : for ( Var s : def . depends ) {
rank: 292
score: 99.34326171875
patch: for ( Var s : def . depends ( 1 ) ) {
rank: 292
score: 99.33442826704545
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( type ) ;
rank: 292
score: 99.29200090680804
patch: for ( Var n : def . depends CaMeL On ) { {
rank: 292
score: 99.28641086154514
patch: for ( Graph CaMeL Node . Must CaMeL Def > state : def . depends ) {
rank: 292
score: 99.27897426060268
patch: if ( def == js CaMeL Scope ) { return true ; }
rank: 292
score: 99.2639629657452
patch: for ( Integer s : def . depends ( ) ) {
rank: 292
score: 99.13736724853516
patch: if ( def != null ) { Var s = def . depends ) {
rank: 292
score: 99.06936645507812
patch: for ( Var s : def . depends . depends . depends != null {
rank: 293
score: 99.3500744047619
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Symbol ( ) ) )
rank: 293
score: 99.34260559082031
patch: for ( Var s : def . reaching CaMeL Def . get ) {
rank: 293
score: 99.33392333984375
patch: return state . get CaMeL Annotation ( ) . get ( js CaMeL Scope . get CaMeL String ( name ) ) ;
rank: 293
score: 99.29165469898896
patch: for ( Var s : def . depends CaMeL On ( n ) ) { {
rank: 293
score: 99.28613959418402
patch: for ( Must CaMeL Def < Must CaMeL Def > state : state . depends ) {
rank: 293
score: 99.26387532552083
patch: Definition def = js CaMeL Scope . get CaMeL Annotation ( name ) ;
rank: 293
score: 99.1512810202206
patch: for ( Var s : def . depends , def . depends ( ) ) {
rank: 294
score: 99.3500088778409
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( parent ) ) )
rank: 294
score: 99.34239366319444
patch: for ( Var s : def . is CaMeL In ( js CaMeL Scope ) ) {
rank: 294
score: 99.33344959077381
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 294
score: 99.29150390625
patch: for ( Var s : def . depends CaMeL On ) { if ( {
rank: 294
score: 99.28593139648437
patch: for ( Flow CaMeL State < Node > s : def . depends CaMeL On ( ) ) {
rank: 294
score: 99.27854919433594
patch: for ( Var s : def . get CaMeL Cfg ( ) . depends )
rank: 294
score: 99.26375034877232
patch: if ( state != null )
rank: 294
score: 99.13701837713069
patch: for ( Var s : def . get CaMeL Classes ( ) . to CaMeL Array ( null ) ) {
rank: 294
score: 99.069091796875
patch: for ( Var s : def . depends && def . depends ) { {
rank: 295
score: 99.34986461292614
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( { this ) )
rank: 295
score: 99.33329634232955
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( this ) ;
rank: 295
score: 99.29092227711396
patch: try { for ( Var s : def . depends CaMeL On ( ) ) {
rank: 295
score: 99.2779900045956
patch: if ( s . get CaMeL Annotation ( name ) != js CaMeL Scope ) {
rank: 295
score: 99.13634144176136
patch: for ( Var s : def . get CaMeL Var ( def . get CaMeL Parent ( ) ) ) {
rank: 296
score: 99.34981863839286
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Var ( ) ) )
rank: 296
score: 99.33311767578125
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( name ) ;
rank: 296
score: 99.29063197544643
patch: for ( Var s : def . depends CaMeL On ( { {
rank: 296
score: 99.2779181985294
patch: for ( Definition s : def . get CaMeL Cfg ( ) . depends ) {
rank: 296
score: 99.26260579427084
patch: for ( Var s : def . contains ( js CaMeL Scope ) )
rank: 296
score: 99.15065220424107
patch: for ( Var s : def . depends && . depends ) {
rank: 296
score: 99.13613059303977
patch: for ( Var s : def . list ) {
rank: 296
score: 99.06871795654297
patch: for ( Var s : def . depends ) def . depends ( ) ;
rank: 297
score: 99.34145220588235
patch: for ( ( Var s : def . get CaMeL Annotation ( ) ) ) {
rank: 297
score: 99.29019165039062
patch: Node < Var > s = def . depends CaMeL On ( def ) ;
rank: 297
score: 99.2625961303711
patch: if ( state != js CaMeL Scope . get CaMeL Name ( ) ) {
rank: 297
score: 99.15035807291666
patch: for ( Var s : def . depends && n . depends ) {
rank: 297
score: 99.13557514391448
patch: for ( Var s : def . depends ) { Var s ( def . depends ) ;
rank: 297
score: 99.067626953125
patch: for ( Var s : list ) {
rank: 298
score: 99.34926147460938
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( ) )
rank: 298
score: 99.28990263097427
patch: for ( Var s : def . depends CaMeL On ( n , def ) )
rank: 298
score: 99.28569030761719
patch: for ( Set < Must CaMeL Def > state : def . depends ) {
rank: 298
score: 99.27744140625
patch: for ( Var s : n . get CaMeL Type ( ) ) {
rank: 298
score: 99.26251627604167
patch: for ( Var s : def . is CaMeL On ( ) ) {
rank: 298
score: 99.1500603170956
patch: for ( Var s : def . depends ; s : def . depends ) {
rank: 298
score: 99.13546752929688
patch: if ( def != null ) { def . add CaMeL All ( def . depends ) ; }
rank: 298
score: 99.06755828857422
patch: for ( Var s : def . depends ) { Var s = null ;
rank: 299
score: 99.34922485351562
patch: for ( Var s : def . depends CaMeL On ( def , depends CaMeL On ) ) {
rank: 299
score: 99.33262875205592
patch: for ( Var s : def . js CaMeL Scope . get CaMeL Var ( name ) )
rank: 299
score: 99.2893425436581
patch: for ( Var s : def . depends CaMeL On ( depends CaMeL On ) )
rank: 299
score: 99.28561636117789
patch: for ( Var 1 Var s : def . depends ) {
rank: 299
score: 99.27742222377232
patch: if ( def != js CaMeL Scope ) { return true ; }
rank: 299
score: 99.15004319411058
patch: for ( Var s : def . depends $NUMBER$ def ) {
rank: 299
score: 99.1353530883789
patch: if ( false ) { for ( Var s : def . depends ) {
rank: 300
score: 99.3488238790761
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var CaMeL Count ( ) ) )
rank: 300
score: 99.33961317274306
patch: for ( Var s : def . get CaMeL Def ( use CaMeL Node ) ) {
rank: 300
score: 99.33222045898438
patch: if ( js CaMeL Scope != js CaMeL Scope && def . scope != js CaMeL Scope ) {
rank: 300
score: 99.28919474283855
patch: for ( Var n : def . depends ) { {
rank: 300
score: 99.26202392578125
patch: if ( state == js CaMeL Scope . get CaMeL Annotation ( ) ) {
rank: 300
score: 99.14997694227431
patch: for ( Var s : def . depends , def s . depends . depends ) {
rank: 300
score: 99.13530622209821
patch: for ( Iterator < Var > count = def . depends ) {
rank: 300
score: 99.067333984375
patch: for ( Var s : get CaMeL Var ( ) . depends ) {
rank: 301
score: 99.34873383620689
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Type ( ) ) ) ) {
rank: 301
score: 99.33877902560764
patch: for ( Var s : def . reaching CaMeL Def . trim ( ) ) {
rank: 301
score: 99.33165973165761
patch: final Var s = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 301
score: 99.28913225446429
patch: / * for ( Var s : def . depends CaMeL On )
rank: 301
score: 99.26160481770833
patch: for ( String name : def . get CaMeL In ( ) ) {
rank: 301
score: 99.14985926011029
patch: for ( Var s : 0 . depends $NUMBER$ ( s . depends ) ) {
rank: 301
score: 99.1351651278409
patch: for ( Var s : def . depends ) { def . add CaMeL All ( def . depends ) ;
rank: 301
score: 99.06666782924107
patch: for ( Var s : def . depends , def . depends )
rank: 302
score: 99.34832208806819
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( s ) ) {
rank: 302
score: 99.33868049172794
patch: for ( Var s : def . depends CaMeL On . get ( ) ) {
rank: 302
score: 99.33165394176136
patch: return js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 302
score: 99.28896484375
patch: for ( Var CaMeL Definition s : n . depends CaMeL On ) {
rank: 302
score: 99.2767693014706
patch: for ( Definition def : def . get CaMeL In ( ) . depends ) {
rank: 302
score: 99.26119995117188
patch: if ( def != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 302
score: 99.1495361328125
patch: for ( Var s : target . depends ) {
rank: 302
score: 99.13507690429688
patch: for ( Var s : def . depends ) { s . add ( def . depends ) {
rank: 302
score: 99.06659807477679
patch: for ( String < Var > s : def . depends ) {
rank: 303
score: 99.33139436141305
patch: final Definition def = def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 303
score: 99.28504356971153
patch: for ( Var s >> s : def . depends ) {
rank: 303
score: 99.14910210503473
patch: for ( Var s : def . depends ) { s = def . depends ) ;
rank: 303
score: 99.13496398925781
patch: for ( Var s : def . get CaMeL Var ( 0 ) ) {
rank: 303
score: 99.06583949497768
patch: for ( final Var s : def . depends ( ) ) {
rank: 304
score: 99.3480557528409
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( name ) )
rank: 304
score: 99.33134321732955
patch: int def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 304
score: 99.28846028645833
patch: for ( Var s : def . get CaMeL Results ( ) ) {
rank: 304
score: 99.28494698660714
patch: if ( def . get CaMeL In ( ) == null ) {
rank: 304
score: 99.2759521484375
patch: for ( Var s : n . get CaMeL Instance ( ) ) {
rank: 304
score: 99.2611572265625
patch: for ( Var s : def . get CaMeL Out ( ) ) {
rank: 304
score: 99.06492513020834
patch: for ( Iterator < Var < Var > : def . depends ) {
rank: 305
score: 99.34805297851562
patch: for ( Var s : def . depends CaMeL On ( def , use CaMeL Node ) ) {
rank: 305
score: 99.33676326976104
patch: for ( Must CaMeL Def state : def . get CaMeL Annotation ( ) ) {
rank: 305
score: 99.28830392020089
patch: for ( Var s : def . depends CaMeL On ) { )
rank: 305
score: 99.28459087171052
patch: Flow CaMeL State < Must CaMeL Def > state = s . get CaMeL Annotation ( ) ;
rank: 305
score: 99.2756576538086
patch: Definition def = state . get CaMeL In ( ) != js CaMeL Scope ;
rank: 305
score: 99.2610595703125
patch: Definition def = js CaMeL Scope . get CaMeL Value ( name ) ;
rank: 305
score: 99.14808067908653
patch: for ( Var 1 ] def : def . depends ) {
rank: 305
score: 99.13425118582589
patch: / * for ( Var s : def . depends ) break ;
rank: 305
score: 99.06482611762152
patch: for ( Var s : children ) {
rank: 306
score: 99.34796697443181
patch: for ( Var s : def . depends CaMeL On ( { def . depends CaMeL On ( s ) )
rank: 306
score: 99.33625344669117
patch: for ( Must CaMeL Def def : def . get CaMeL Annotation ( ) ) {
rank: 306
score: 99.28809271918402
patch: for ( Var s : def . depends CaMeL On ( this , def ) ) {
rank: 306
score: 99.2836669921875
patch: for ( Must CaMeL Def s : def . depends ( ) ) {
rank: 306
score: 99.2609393780048
patch: if ( def . get CaMeL In ( ) != null )
rank: 306
score: 99.14800666360294
patch: for ( Var s : def . depends && def . matches ( ) ) {
rank: 306
score: 99.06332833426339
patch: for ( Var s : def . depends ( current ) ) {
rank: 307
score: 99.34774667245371
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) . depends CaMeL On ( ) ) )
rank: 307
score: 99.32906087239583
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) !=
rank: 307
score: 99.27525419347427
patch: for ( Var s : def . depends ) depends CaMeL On ( s ) ;
rank: 307
score: 99.26006610576923
patch: if ( state . get CaMeL Value ( ) != null )
rank: 307
score: 99.14800618489583
patch: for ( Var s : def . depends 1 ( s ) ) {
rank: 307
score: 99.06331380208333
patch: Var s : def . depends ) {
rank: 308
score: 99.34773763020833
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( Var . class ) ) )
rank: 308
score: 99.33394368489583
patch: for ( Var s : def . get CaMeL In ( ) . < null ) {
rank: 308
score: 99.32875689338235
patch: List < Must CaMeL Def > state = state . get CaMeL Annotation ( ) ;
rank: 308
score: 99.28800695082721
patch: for ( Var s : def . depends CaMeL On ( def . ) ) {
rank: 308
score: 99.28257123161765
patch: Definition def = state . get CaMeL In ( ) . get CaMeL In ( )
rank: 308
score: 99.275244140625
patch: for ( Node s : state . get CaMeL In ( ) ) {
rank: 308
score: 99.25900704520089
patch: if ( state . get CaMeL Value ( ) == null ) {
rank: 308
score: 99.14789373224431
patch: for ( Var s : def . equals ) {
rank: 308
score: 99.06321498325893
patch: Symbol s : for ( Var s : def . depends ) {
rank: 309
score: 99.3477274576823
patch: for ( Var s : def . depends CaMeL On ( def , def . depends CaMeL On ( ) ) ) {
rank: 309
score: 99.33339329769737
patch: Definition def = state . get CaMeL In ( ) . get CaMeL Annotation ( name ) ;
rank: 309
score: 99.3286663552989
patch: return s . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 309
score: 99.28746202256944
patch: for ( Var s : def . depends CaMeL On ( ) ) { if ( )
rank: 309
score: 99.28223528180804
patch: for ( Var s : def . depends 1 > 1 ) {
rank: 309
score: 99.27510288783482
patch: if ( s . scope != js CaMeL Scope ) return true ;
rank: 309
score: 99.25838216145833
patch: if ( state . depends CaMeL On ( js CaMeL Scope ) ) {
rank: 309
score: 99.147705078125
patch: for ( Var s : 0 . is CaMeL Empty ( ) ) {
rank: 309
score: 99.13309151785714
patch: for ( Object < Var > s : def . depends ) {
rank: 309
score: 99.0629638671875
patch: for ( final Var s : def . depends ( s ) ) {
rank: 310
score: 99.34757856889205
patch: for ( Var s : n . get CaMeL In ( ) . depends CaMeL On ( def ) ) {
rank: 310
score: 99.32834298270089
patch: / * if ( s . scope != js CaMeL Scope ) {
rank: 310
score: 99.28741455078125
patch: / * for ( Var s : def . depends ( ) )
rank: 310
score: 99.282177734375
patch: for ( Var s : def . depends != js CaMeL Scope ) {
rank: 310
score: 99.27503967285156
patch: for ( Var s : Node . reaching CaMeL Def . depends ) {
rank: 310
score: 99.2578633626302
patch: Annotation def = state . get CaMeL In ( ) ;
rank: 310
score: 99.13293987771739
patch: for ( Var s : def . depends ) { s . add CaMeL All ( def . depends ) ; }
rank: 311
score: 99.33327229817708
patch: Definition def = state . get CaMeL In ( ) . get CaMeL Scope ( ) ;
rank: 311
score: 99.32774251302084
patch: String scope = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 311
score: 99.28738223805146
patch: for ( Var >= 0 : def . depends CaMeL On ( def ) ) {
rank: 311
score: 99.28207833426339
patch: for ( Must CaMeL Def > def : state . depends ) {
rank: 311
score: 99.14674479166666
patch: for ( Var s : s . depends && def . depends ) {
rank: 311
score: 99.13252185639881
patch: for ( Var s : def . get CaMeL Next ( ) . get CaMeL Var ( ) ) {
rank: 312
score: 99.34740048363095
patch: for ( Var s : def . depends CaMeL On ( { def . get CaMeL Var ( ) )
rank: 312
score: 99.32742130055146
patch: if ( def != null ) return def . scope != js CaMeL Scope ) ;
rank: 312
score: 99.2873779296875
patch: for ( Var s : n . depends CaMeL On ( def ) {
rank: 312
score: 99.28206140854779
patch: for ( Must CaMeL Def state : def . depends CaMeL On ( ) ) {
rank: 312
score: 99.27395450367646
patch: for ( Var s < Must CaMeL Def > s : def . depends ) {
rank: 312
score: 99.25769856770833
patch: for ( Object s : def . get CaMeL Annotation ( ) ) {
rank: 312
score: 99.14659881591797
patch: for ( Var s : $STRING$ . equals ( s . depends ) ) {
rank: 312
score: 99.13243950737848
patch: for ( Var s : def . depends ) { def = value . depends ) {
rank: 312
score: 99.06193542480469
patch: for ( Var s : def . depends && ! s . depends ) {
rank: 313
score: 99.34738991477273
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Var ( name ) ) )
rank: 313
score: 99.33285701976104
patch: Definition < Must CaMeL Def > state = n . get CaMeL In ( ) ;
rank: 313
score: 99.32736545138889
patch: if ( js CaMeL Scope != js CaMeL Scope . get CaMeL In ( ) ) {
rank: 313
score: 99.2869011374081
patch: for ( Var s : n . depends CaMeL On ( def , null ) )
rank: 313
score: 99.28180401141827
patch: for ( Must CaMeL Def n : def . depends ) {
rank: 313
score: 99.25763702392578
patch: for ( Var s -- : def . get CaMeL Def ( ) ) {
rank: 313
score: 99.14561360677084
patch: for ( void s : def . depends && def . depends ) {
rank: 313
score: 99.13220977783203
patch: for ( Set < Var > def > s : def . depends ) {
rank: 313
score: 99.06188151041667
patch: Var s : for ( for ( Var s : def . depends )
rank: 314
score: 99.34738498263889
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) . get CaMeL Value ( ) ) )
rank: 314
score: 99.33277803308823
patch: for ( Var s : def . get CaMeL In ( ) . value ) {
rank: 314
score: 99.32680876358695
patch: result = js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 314
score: 99.28657531738281
patch: for ( Var s : n . get CaMeL Vars ( ) ) { {
rank: 314
score: 99.2811767578125
patch: for ( Graph CaMeL Node < Node , Must CaMeL Def > state : state . depends ) {
rank: 314
score: 99.27342936197917
patch: for ( Node s : def . get CaMeL Vars ( ) ) {
rank: 314
score: 99.25674438476562
patch: if ( state == js CaMeL Scope . get CaMeL Def ( ) ) {
rank: 314
score: 99.14560546875
patch: for ( Var s : def . depends , s . get ) {
rank: 315
score: 99.33107396175987
patch: for ( Var s : def . get CaMeL In ( ) . depends > 1 ) {
rank: 315
score: 99.2861328125
patch: { for ( Var s : def . depends CaMeL On ( ) ) {
rank: 315
score: 99.27307891845703
patch: for ( Var s : state . get CaMeL Vars ( name ) ) {
rank: 315
score: 99.14532829733456
patch: for ( Var s : def . depends 1 ( s ) . depends ) {
rank: 315
score: 99.13137335526316
patch: for ( Var s : def . depends ) { Var def = def . depends ) ;
rank: 316
score: 99.33100328947368
patch: for ( Var s : def . reaching CaMeL Def . get ( next ) ) {
rank: 316
score: 99.32629925271739
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL In ( ) ) ;
rank: 316
score: 99.28537884880515
patch: / * * for ( Var s : def . depends CaMeL On ( ) )
rank: 316
score: 99.28020562065973
patch: for ( Must CaMeL Def < Must CaMeL Def > state : def . depends ) {
rank: 316
score: 99.27239583333333
patch: for ( Node def : n . get CaMeL Annotation ( ) ) {
rank: 316
score: 99.25611461292614
patch: if ( state . scope != js CaMeL Scope )
rank: 316
score: 99.14532063802083
patch: for ( Var s : def . is CaMeL Interface ( ) ) {
rank: 316
score: 99.13121541341145
patch: for ( Var s : def . get CaMeL Var ( def . get CaMeL Var ( ) ) . depends ) {
rank: 316
score: 99.06138509114584
patch: for ( final Var s : def . depends ( null ) ) {
rank: 317
score: 99.34670091711956
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( parent ) ) ) {
rank: 317
score: 99.32607199928977
patch: String s = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 317
score: 99.27991333007813
patch: Definition def = js CaMeL Scope . get CaMeL In ( ) . get CaMeL Annotation ( ) ;
rank: 317
score: 99.27237701416016
patch: if ( s != js CaMeL Scope || def != js CaMeL Scope ) {
rank: 317
score: 99.25598907470703
patch: if ( state == js CaMeL Scope . get CaMeL Scope ( ) ) {
rank: 317
score: 99.14506979549633
patch: for ( Var s : 0 . depends , def . depends . depends ) {
rank: 317
score: 99.13107638888889
patch: for ( Var s : def . depends ) { if ( node . depends ) {
rank: 318
score: 99.34657796223958
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . depends ) ) )
rank: 318
score: 99.3306396484375
patch: for ( Var s : def . get CaMeL Constructor ( ) ) {
rank: 318
score: 99.32606724330357
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope ) != js CaMeL Scope )
rank: 318
score: 99.28437356387867
patch: for ( Var s : n . depends CaMeL On ( ) ) { { {
rank: 318
score: 99.27208362926136
patch: for ( Var s : depends . depends ) {
rank: 318
score: 99.25586700439453
patch: if ( state . get CaMeL In ( ) . scope != null ) {
rank: 318
score: 99.14496256510417
patch: for ( String s : def . depends || def . depends ) {
rank: 318
score: 99.13065831801471
patch: for ( Var s : def . depends ) return def . depends ( ) ;
rank: 318
score: 99.06070709228516
patch: for ( Var s : def . depends ) { System . out . {
rank: 319
score: 99.3464587983631
patch: for ( Var s : def . depends CaMeL On ( target . depends CaMeL On ( ) ) )
rank: 319
score: 99.33054070723684
patch: for ( Var s : def . reaching CaMeL Def . get ( source ) ) {
rank: 319
score: 99.32591552734375
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 319
score: 99.27190755208333
patch: for ( Var s : state . get CaMeL Instance ( ) ) {
rank: 319
score: 99.25578308105469
patch: for ( Var s : def . set CaMeL In ( name ) ) {
rank: 319
score: 99.13053031589673
patch: for ( Var s : def . get CaMeL Next ( ) . get CaMeL Var ( ) . depends ) {
rank: 320
score: 99.34626007080078
patch: for ( Var s : n . depends CaMeL On ( $STRING$ ) ) {
rank: 320
score: 99.32569644325658
patch: String js CaMeL Scope = get CaMeL Cfg ( ) . get CaMeL Var ( name ) ;
rank: 320
score: 99.27936150045956
patch: for ( Var s : def . depends && js CaMeL Scope . depends ) {
rank: 320
score: 99.27166748046875
patch: for ( Var def : def . get CaMeL Annotation ( name ) ) {
rank: 320
score: 99.2556396484375
patch: for ( Var s : state . get CaMeL Value ( ) ) {
rank: 320
score: 99.14413452148438
patch: if ( s != null . depends && def != null . depends ) {
rank: 320
score: 99.1302490234375
patch: for ( Var s : def . depends ) { Var ) {
rank: 320
score: 99.060400390625
patch: while ( def != null ) { def = def . depends ) ;
rank: 321
score: 99.34619140625
patch: for ( Var s : def . depends CaMeL On ( def . to CaMeL String ( ) ) )
rank: 321
score: 99.32371215820312
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope ) != null ) {
rank: 321
score: 99.27139102711396
patch: for ( Definition s : def . get CaMeL Annotation ( ) . depends ) {
rank: 321
score: 99.25550944010416
patch: if ( state . get CaMeL In ( ) == js CaMeL Scope )
rank: 321
score: 99.06021822415866
patch: else * for ( Var s : def . depends ) {
rank: 322
score: 99.34601907169117
patch: for ( Var s : def . depends CaMeL On ( name , false ) )
rank: 322
score: 99.28308977399554
patch: for ( Var s : n . depends ) { if ( {
rank: 322
score: 99.27889675564236
patch: if ( def != null && state . get CaMeL In ( ) == null ) {
rank: 322
score: 99.27122497558594
patch: if ( def == js CaMeL Scope && def != js CaMeL Scope ) {
rank: 322
score: 99.25493621826172
patch: if ( state . get CaMeL Var ( ) != js CaMeL Scope ) {
rank: 322
score: 99.14375813802083
patch: for ( Var s : def . depends ( s ) . depends ( ) ) {
rank: 322
score: 99.12983049665179
patch: for ( Node < ? > def : def . depends ) {
rank: 322
score: 99.06008911132812
patch: Var s = null ; for ( String s : def . depends ) {
rank: 323
score: 99.34592982700893
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . get CaMeL Name ( ) ) ) )
rank: 323
score: 99.3232421875
patch: for ( Flow CaMeL State < Must CaMeL Def > state : n . get CaMeL Annotation ( ) ) {
rank: 323
score: 99.28301642922794
patch: if ( def != null && def . depends CaMeL On ( name ) ) {
rank: 323
score: 99.27120208740234
patch: for ( Var s : state . get CaMeL Cfg ( ) . depends )
rank: 323
score: 99.2548076923077
patch: Definition def = state . get CaMeL Value ( name ) ;
rank: 323
score: 99.14322916666667
patch: for ( int s : def . depends && def . depends ) {
rank: 323
score: 99.06004231770834
patch: if ( def != null ) { s = def . depends ) ;
rank: 324
score: 99.34567599826389
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) . get CaMeL Name ( ) ) )
rank: 324
score: 99.32960269325658
patch: for ( Var s : def . get CaMeL In ( ) . validate ( ) ) {
rank: 324
score: 99.2822624655331
patch: for ( Var s : n . depends CaMeL On ( def , ) ) {
rank: 324
score: 99.27815077039931
patch: if ( def != null && def . get CaMeL Annotation ( ) != null ) {
rank: 324
score: 99.25413411458334
patch: for ( Var s : type . get CaMeL In ( ) ) {
rank: 324
score: 99.14310709635417
patch: for ( Var s : def . depends && def instanceof Var s . depends ) {
rank: 324
score: 99.12937418619792
patch: if ( def != null && def . depends ) { return def . depends ) ;
rank: 324
score: 99.0599365234375
patch: for ( Var s : def . depends , def != null ) {
rank: 325
score: 99.3455810546875
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Scope ( ) ) ) {
rank: 325
score: 99.32945963541667
patch: for ( Var s : def . get CaMeL Charset ( ) ) {
rank: 325
score: 99.32278575067934
patch: String js CaMeL Scope = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL
rank: 325
score: 99.27769639756944
patch: if ( def != null && def . get CaMeL In ( ) != null ) {
rank: 325
score: 99.26959228515625
patch: if ( s == js CaMeL Scope . get CaMeL In ( ) ) {
rank: 325
score: 99.25394694010417
patch: for ( Class s : def . get CaMeL In ( ) ) {
rank: 325
score: 99.12896259014423
patch: for ( Node [ ] def : def . depends ) {
rank: 325
score: 99.05985260009766
patch: Var s : for ( Var s : def . size ( ) ) {
rank: 326
score: 99.34501720610119
patch: for ( Var s : def . depends CaMeL On ( name . to CaMeL String ( ) ) )
rank: 326
score: 99.32818282277961
patch: for ( Var s : def . reaching CaMeL Def . get ( target ) ) {
rank: 326
score: 99.32242838541667
patch: try { Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 326
score: 99.277587890625
patch: for ( Flow CaMeL State < Node > state : state . get CaMeL In ( ) ) {
rank: 326
score: 99.26950970818015
patch: for ( Definition def : n . get CaMeL In ( ) . depends ) {
rank: 326
score: 99.25335223858173
patch: if ( state . get CaMeL In ( ) == null )
rank: 326
score: 99.14248996310764
patch: for ( Var s : def . depends ( s . get ) . depends ) {
rank: 326
score: 99.12874348958333
patch: if ( def != null && def . get CaMeL Parent ( ) != null ) {
rank: 326
score: 99.05909075055804
patch: Integer s : for ( Var s : def . depends ) {
rank: 327
score: 99.34480365953948
patch: for ( Var s : def . depends CaMeL On ( def . depends ) ) { {
rank: 327
score: 99.28195190429688
patch: for ( Var s : def . depends ) { if ( s . {
rank: 327
score: 99.27752685546875
patch: for ( Flow CaMeL State < Node > state : state . depends ) {
rank: 327
score: 99.14246323529412
patch: for ( String s : def . depends , def . depends . depends ) {
rank: 327
score: 99.12857055664062
patch: Iterator < Var > s = def . depends ) {
rank: 327
score: 99.05895124162946
patch: Element s : for ( Var s : def . depends ) {
rank: 328
score: 99.34419250488281
patch: for ( Node < Node > def : def . depends CaMeL On ( {
rank: 328
score: 99.32234330610795
patch: if ( def != null ) { return true ;
rank: 328
score: 99.28175982306985
patch: for ( Var s : def . depends CaMeL On ( def , n ) )
rank: 328
score: 99.27716742621527
patch: for ( Flow CaMeL State < Must CaMeL Def > def : state . depends ) {
rank: 328
score: 99.26919759114584
patch: for ( Definition s : def . get CaMeL Scope ( ) ) {
rank: 328
score: 99.14236653645834
patch: for ( Var s : def . depends && def . contains ) {
rank: 328
score: 99.1280453330592
patch: for ( Var s : def . depends ) { Var s = s . depends ) ;
rank: 328
score: 99.05885532924107
patch: Var s : for ( Property s : def . depends ) {
rank: 329
score: 99.3440472146739
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( name ) ) ) {
rank: 329
score: 99.2815185546875
patch: / * for ( Var s : def . depends CaMeL On ) {
rank: 329
score: 99.26909993489583
patch: for ( Node s : n . get CaMeL In ( ) ) {
rank: 329
score: 99.25248209635417
patch: for ( Var s : def . depends ) { ;
rank: 329
score: 99.14234508167614
patch: for ( int [ : def . depends ) {
rank: 329
score: 99.12771739130434
patch: for ( Var s : def . depends ) { def . add CaMeL All ( def . depends ) ; }
rank: 329
score: 99.05862862723214
patch: Var s : for ( Task s : def . depends ) {
rank: 330
score: 99.34403659986413
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends ) {
rank: 330
score: 99.32706705729167
patch: for ( Var s : def . depends CaMeL On > 0 ) {
rank: 330
score: 99.32178795855978
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( null ) ;
rank: 330
score: 99.28134155273438
patch: for ( Var s : def . depends CaMeL On ( ) ) continue ;
rank: 330
score: 99.27675267269737
patch: Definition def = state . get CaMeL In ( ) ; if ( def == null ) {
rank: 330
score: 99.26888020833333
patch: for ( else if ( s . scope != js CaMeL Scope ) {
rank: 330
score: 99.25215970552884
patch: for ( Var s : def . depends ( false ) )
rank: 330
score: 99.14211138556985
patch: for ( Var s : def . depends && def . contains ( ) ) {
rank: 330
score: 99.12761094835069
patch: if ( def != null ) { System . out . println ( $STRING$ ) ; }
rank: 331
score: 99.34400523792614
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( name ) ) {
rank: 331
score: 99.32688502261513
patch: Definition def = state . get CaMeL In ( ) . depends CaMeL On ( name ) ;
rank: 331
score: 99.32171075994319
patch: for ( Var s : def . depends ( js CaMeL Scope . get CaMeL Var ( name ) ) )
rank: 331
score: 99.281103515625
patch: for ( Var s : n . depends CaMeL On ( def , {
rank: 331
score: 99.27665710449219
patch: for ( Set < Must CaMeL Def > state : state . depends ) {
rank: 331
score: 99.2688720703125
patch: for ( Var s : n . get CaMeL Parent ( ) ) {
rank: 331
score: 99.12748579545455
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Parent ( ) ) ) {
rank: 332
score: 99.34343610491071
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Type ( ) ) )
rank: 332
score: 99.32655736019737
patch: for ( Var s : def . reaching CaMeL Def . get ( end ) ) {
rank: 332
score: 99.32140531994048
patch: return def . depends CaMeL On ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 332
score: 99.28077189127605
patch: for ( Var n : def . depends CaMeL On )
rank: 332
score: 99.2763671875
patch: if ( state . get CaMeL In ( ) instanceof Must CaMeL Def > ) {
rank: 332
score: 99.26881408691406
patch: if ( s . get CaMeL Annotation ( ) == js CaMeL Scope ) {
rank: 332
score: 99.14147231158088
patch: for ( Var s : def . depends 1 ( def ) . depends ) {
rank: 332
score: 99.12744140625
patch: for ( Var [ ] depends : def . depends ) {
rank: 332
score: 99.0570068359375
patch: for ( ) { Var s : def . depends ) {
rank: 333
score: 99.34342041015626
patch: for ( Var s : def . depends CaMeL On ( ) . get CaMeL Var ( ) )
rank: 333
score: 99.32603624131944
patch: Definition def = n . get CaMeL In ( ) . get CaMeL In ( ) ;
rank: 333
score: 99.32102369225544
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ; }
rank: 333
score: 99.28075408935547
patch: for ( Var exp : n . depends CaMeL On ( def ) ) {
rank: 333
score: 99.27632904052734
patch: for ( Var s ++ : def . get CaMeL Annotation ( ) ) {
rank: 333
score: 99.26869111902573
patch: for ( Node def : n . get CaMeL In ( ) . depends ) {
rank: 333
score: 99.25000610351563
patch: if ( state . scope != null ) {
rank: 333
score: 99.14142252604167
patch: for ( String s : def . is CaMeL Empty ( ) ) {
rank: 333
score: 99.12682088216145
patch: if ( def != null ) { return false ; }
rank: 333
score: 99.05684988839286
patch: for ( Var s : def . depends ) s . depends )
rank: 334
score: 99.34341543692129
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends CaMeL On ) ) ) {
rank: 334
score: 99.32516659007354
patch: for ( Var s : def . get CaMeL In ( ) . close ) {
rank: 334
score: 99.32097833806819
patch: for ( Var s : def . depends ) ;
rank: 334
score: 99.28070537860577
patch: if ( def . depends CaMeL On ( def ) ) {
rank: 334
score: 99.27623075597427
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ,
rank: 334
score: 99.14141845703125
patch: for ( Var s : def . depends , ) {
rank: 334
score: 99.05675506591797
patch: for ( Var s : def . depends , ! def . depends ) {
rank: 335
score: 99.34327076099537
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) . to CaMeL String ( ) ) )
rank: 335
score: 99.32488606770833
patch: for ( Var s : def . get CaMeL In ( ) ) }
rank: 335
score: 99.3201320482337
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . reaching CaMeL Def . get (
rank: 335
score: 99.27588608685662
patch: for ( Var s : def . depends && s . scope != null ) {
rank: 335
score: 99.26834309895834
patch: for ( Definition s : state . get CaMeL In ( ) ) {
rank: 335
score: 99.2490463256836
patch: Flow CaMeL State < Must CaMeL Def > state = n . get ) ;
rank: 335
score: 99.1414043719952
patch: for ( Var s : def . depends , false ) {
rank: 335
score: 99.12674386160714
patch: for ( Node < Object > s : def . depends ) {
rank: 335
score: 99.05548502604167
patch: Var s = null ; for ( Var s : def . depends )
rank: 336
score: 99.3429538892663
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( value ) ) ) {
rank: 336
score: 99.27999674479166
patch: for ( Var s : n . get CaMeL Annotations ( ) ) {
rank: 336
score: 99.2757568359375
patch: if ( def != null && def . scope == js CaMeL Scope ) {
rank: 336
score: 99.26825358072917
patch: for ( Node def : def . get CaMeL In ( ) ) {
rank: 336
score: 99.14060872395834
patch: for ( Var s : def . get , s . depends ) {
rank: 336
score: 99.054443359375
patch: for ( Var s : def . s ) {
rank: 337
score: 99.34267356178977
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( line ) ) )
rank: 337
score: 99.32449106069711
patch: for ( Var s : def . js CaMeL Scope ) {
rank: 337
score: 99.31974991508152
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( id ) ;
rank: 337
score: 99.27948869977679
patch: final Var s = def . depends CaMeL On ( def ) ;
rank: 337
score: 99.27571614583333
patch: for ( T s : def . depends CaMeL On ( ) ) {
rank: 337
score: 99.1396240234375
patch: for ( Var s : def . depends || def . get ) {
rank: 337
score: 99.12513799252717
patch: System . out . println ( $STRING$ + s . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 337
score: 99.05420793805804
patch: for ( Var s : def . depends ( this ) ) {
rank: 338
score: 99.34213654891305
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Parent CaMeL Node ( ) ) )
rank: 338
score: 99.32443033854166
patch: for ( Var s : def . depends ( ) ) return false ;
rank: 338
score: 99.27945149739584
patch: for ( Var n : def . get CaMeL Declarations ( ) ) {
rank: 338
score: 99.26793619791667
patch: for ( Node s : def . get CaMeL Scope ( ) ) {
rank: 338
score: 99.24868774414062
patch: for ( Var s : def . depends ) { if ( true ) {
rank: 338
score: 99.13938395182292
patch: for ( Var s : def . is CaMeL Var ( def ) . depends ) {
rank: 338
score: 99.12488731971153
patch: if ( ! def . is CaMeL Empty ( ) ) {
rank: 338
score: 99.05394694010417
patch: for ( Iterator < Var < Node > : def . depends ) {
rank: 339
score: 99.34206321022727
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Arg ( ) ) ) {
rank: 339
score: 99.3243408203125
patch: for ( Var s : def . get CaMeL In ( ) . get ( ) ) {
rank: 339
score: 99.31926618303571
patch: for ( Var s : def . reaching CaMeL Def . get ( js CaMeL Scope ) ) {
rank: 339
score: 99.27933756510417
patch: for ( Node s : def . depends CaMeL On ( def ) )
rank: 339
score: 99.27542114257812
patch: for ( Var s : def . depends CaMeL On ( get CaMeL Cfg ( ) ) ) {
rank: 339
score: 99.2678973858173
patch: else if ( s . scope != js CaMeL Scope ) {
rank: 339
score: 99.24864095052084
patch: for ( Var s ++ : def . get CaMeL Def ( ) )
rank: 339
score: 99.13935546875
patch: for ( Var s : def . is CaMeL Primitive ( ) ) {
rank: 339
score: 99.12462797619048
patch: Var s = def . depends ) { for ( Var s : def . depends . depends ) {
rank: 340
score: 99.34202575683594
patch: for ( Var s : def . depends CaMeL On ( scope ) ) {
rank: 340
score: 99.3190387228261
patch: return n . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 340
score: 99.26747131347656
patch: for ( Var def : state . reaching CaMeL Def . depends ) {
rank: 340
score: 99.2479019165039
patch: for ( Var s : def . get CaMeL Scope ( ) . depends )
rank: 340
score: 99.13916733685662
patch: for ( Var s : null . depends $NUMBER$ ( s . depends ) ) {
rank: 340
score: 99.12456954152961
patch: for ( Var s : def . depends ) { Var s = def . depends ) }
rank: 340
score: 99.05340576171875
patch: if ( def . depends || def . depends && def . depends ) {
rank: 341
score: 99.3417256673177
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . ) ) ) {
rank: 341
score: 99.3188143643466
patch: return reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 341
score: 99.27823079427084
patch: for ( Node < Var > s : def . depends CaMeL On )
rank: 341
score: 99.27509622012867
patch: for ( for ( Var s : def . depends CaMeL On ( ) ) {
rank: 341
score: 99.24732317243304
patch: if ( s != null )
rank: 341
score: 99.124560546875
patch: for ( Var s : def . depends ) { def = true ;
rank: 341
score: 99.05314497514205
patch: for ( Var s : $NUMBER$ . depends ) {
rank: 342
score: 99.3416160300926
patch: for ( Var s : def . depends CaMeL On ( s . to CaMeL String ( ) . to CaMeL String ( ) ) )
rank: 342
score: 99.3234504250919
patch: for ( Var s : def . get CaMeL In ( ) . TRUE ) {
rank: 342
score: 99.31873668323864
patch: final def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 342
score: 99.278076171875
patch: for ( Var s : n . depends CaMeL On ( n ) ) {
rank: 342
score: 99.27354431152344
patch: for ( ? > s : def . depends CaMeL On ( ) ) {
rank: 342
score: 99.26734924316406
patch: for ( Var s : def . get CaMeL String ( name ) ) {
rank: 342
score: 99.24690755208333
patch: Flow CaMeL State < Must CaMeL Def > state = js CaMeL Scope ;
rank: 342
score: 99.13893755744485
patch: for ( Var s = def . depends ) if ( def . depends ) {
rank: 342
score: 99.12422511888587
patch: for ( Var s : def . depends ) { def = def . depends . depends . depends . ) ;
rank: 342
score: 99.05256652832031
patch: for ( Var s : ( ( Var ) def ) . depends ) {
rank: 343
score: 99.34160698784723
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( ) . get CaMeL Value ( ) ) )
rank: 343
score: 99.32322064568015
patch: for ( Var s : def . state . get CaMeL In ( ) ) {
rank: 343
score: 99.31868286132813
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 343
score: 99.2777569110577
patch: for ( Var n : def . depends CaMeL On ( {
rank: 343
score: 99.24661690848214
patch: if ( n . get CaMeL Annotation ( ) != null ) {
rank: 343
score: 99.12419782366071
patch: for ( Iterator < Var > 0 = def . depends ) {
rank: 343
score: 99.05229187011719
patch: if ( s != null ) for ( Var s : def . depends )
rank: 344
score: 99.34158761160714
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . get CaMeL Type ( ) ) ) )
rank: 344
score: 99.3224235983456
patch: Definition def = state . get CaMeL In ( ) . depends ( def ) ;
rank: 344
score: 99.27751608455883
patch: for ( Var s : def . depends CaMeL On ( def , type ) )
rank: 344
score: 99.26686724494485
patch: for ( Var s : s . get CaMeL In ( ) . depends ) {
rank: 344
score: 99.24590192522321
patch: for ( Var s : def . get CaMeL Node ( ) )
rank: 344
score: 99.12417941623264
patch: for ( Var s : def . get CaMeL Next ( ) . depends s ) {
rank: 344
score: 99.05219268798828
patch: for ( final Var s : def . get CaMeL Var ( ) ) {
rank: 345
score: 99.34157492897727
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( id ) ) )
rank: 345
score: 99.27738683363971
patch: for ( Var CaMeL Definition s : n . depends CaMeL On ( def ) )
rank: 345
score: 99.27240668402777
patch: for ( Graph CaMeL Node < Must CaMeL Def > s : def . depends ) {
rank: 345
score: 99.26665182674633
patch: if ( def . get CaMeL Var ( name ) != js CaMeL Scope ) {
rank: 345
score: 99.245849609375
patch: for ( Integer s : def . depends CaMeL On ( ) ) {
rank: 345
score: 99.1387051669034
patch: for ( Var s : def , depends ) {
rank: 345
score: 99.12411934988839
patch: for ( Set < Var > 0 : def . depends ) {
rank: 345
score: 99.05208042689732
patch: for ( Var < Integer > def : def . depends ) {
rank: 346
score: 99.34123091264205
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( target ) ) )
rank: 346
score: 99.27669270833333
patch: for ( Var s : n . depends CaMeL On ( name ) )
rank: 346
score: 99.2710430438702
patch: for ( Var s + s : def . depends ) {
rank: 346
score: 99.2664794921875
patch: for ( Definition s : state . depends ) {
rank: 346
score: 99.13868001302083
patch: for ( Var [ : def . depends , def . depends ) {
rank: 346
score: 99.12410481770833
patch: / * for ( Var s : def . depends ) return def . depends ) ;
rank: 346
score: 99.05184232271634
patch: try { for ( String s : def . depends ) {
rank: 347
score: 99.34098985460069
patch: for ( Var s : def . depends CaMeL On ( s . name ) ) {
rank: 347
score: 99.32179170496323
patch: for ( String s : def . get CaMeL In ( ) . depends ) {
rank: 347
score: 99.31798206676136
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) != null ;
rank: 347
score: 99.27666473388672
patch: if ( def != null ) return def . depends CaMeL On ( ) ;
rank: 347
score: 99.27009412977431
patch: for ( Graph CaMeL Node < Node , Branch > n : state . depends ) {
rank: 347
score: 99.138671875
patch: for ( Var s : 0 . depends ? def . depends ) {
rank: 347
score: 99.12404378255208
patch: System . err . println ( $STRING$ + def . get CaMeL Var ( ) ) ;
rank: 347
score: 99.05177408854166
patch: for ( Var s : node . get CaMeL Var ( ) ) {
rank: 348
score: 99.34095764160156
patch: for ( Var s : def . depends CaMeL On ( level ) ) {
rank: 348
score: 99.32171989889706
patch: for ( ( Var s : def . get CaMeL Def ( ) ) ) {
rank: 348
score: 99.31761977251838
patch: if ( s . reaching CaMeL Def . scope != js CaMeL Scope ) {
rank: 348
score: 99.24519653320313
patch: for ( Var s : def . get CaMeL
rank: 348
score: 99.13829040527344
patch: Var s = ) ; for ( Var s : def . depends ) {
rank: 348
score: 99.12383161272321
patch: for ( Iterator < Node > 0 : def . depends ) {
rank: 348
score: 99.051513671875
patch: for ( Var s : def . depends && parent . depends ) {
rank: 349
score: 99.34079811789773
patch: for ( Var s : def . depends CaMeL On ( def . to CaMeL String ( ) ) ) {
rank: 349
score: 99.26945226332721
patch: for ( Var s : def . reaching CaMeL Def . depends 1 ) {
rank: 349
score: 99.26605583639706
patch: for ( Var s : n . get CaMeL Instance ( ) . depends ) {
rank: 349
score: 99.13820975167411
patch: for ( Var s : def . depends $NUMBER$ . depends ) {
rank: 349
score: 99.12375710227273
patch: for ( Var id : def . depends ) {
rank: 349
score: 99.05117563100961
patch: for ( Var s : node . depends . depends ) {
rank: 350
score: 99.34032298900463
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( ) . to CaMeL String ( ) ) )
rank: 350
score: 99.32109917534723
patch: for ( Var s : def . reaching CaMeL Def . js CaMeL Scope ) {
rank: 350
score: 99.27602969898896
patch: for ( Var n : n . depends CaMeL On ( def ) ) { {
rank: 350
score: 99.26923370361328
patch: for ( Var s 1 : def . depends CaMeL On ( ) ) {
rank: 350
score: 99.26600138346355
patch: for ( Var s : ! def . depends ) {
rank: 350
score: 99.2440185546875
patch: Definition def = state . get CaMeL Next ( ) ;
rank: 350
score: 99.12372295673077
patch: for ( Var [ ] type : def . depends ) {
rank: 350
score: 99.05112130301339
patch: for ( for ( Var s : def . depends ) ) {
rank: 351
score: 99.32097516741071
patch: for ( Var s : def . depends ( 0 ) ) {
rank: 351
score: 99.31712757457386
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 351
score: 99.27589326746323
patch: for ( Var s : def . get . depends CaMeL On ( def ) )
rank: 351
score: 99.26844787597656
patch: for ( Var s : def . depends CaMeL On ( 1 ) ) {
rank: 351
score: 99.26594682173295
patch: for ( Var def : n . depends ) {
rank: 351
score: 99.24396221454327
patch: Graph CaMeL Node < Node , Branch > n = null ;
rank: 351
score: 99.13626861572266
patch: for ( Var ( Var s : def . depends ) . depends ) {
rank: 351
score: 99.050537109375
patch: System . out . println ( $STRING$ + def . depends ) {
rank: 352
score: 99.34002054148706
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . get CaMeL Name ( ) ) ) ) {
rank: 352
score: 99.32041529605263
patch: Definition def = state . get CaMeL In ( ) . depends ( js CaMeL Scope ) ;
rank: 352
score: 99.31678466796875
patch: if ( def != null ) return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ;
rank: 352
score: 99.27562120225694
patch: for ( Var s : n . depends ) { Var s = s . depends ;
rank: 352
score: 99.26832411024306
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Annotation ( )
rank: 352
score: 99.2657470703125
patch: for ( Var def : n . get CaMeL Var ( name ) ) {
rank: 352
score: 99.24270395132211
patch: Definition def = state . get CaMeL Var ( name ) ;
rank: 352
score: 99.1362060546875
patch: for ( Var s : def . depends , def for null ) {
rank: 352
score: 99.04993785511364
patch: for ( Float s : def . depends ) {
rank: 353
score: 99.33974609375
patch: for ( Var s : def . get CaMeL Interfaces ( ) ) {
rank: 353
score: 99.31986730238971
patch: for ( Var s : def . n . get CaMeL In ( ) ) {
rank: 353
score: 99.31661987304688
patch: if ( def . scope != js CaMeL Scope ) { return true ; }
rank: 353
score: 99.27554141773896
patch: for ( Var s : def . depends CaMeL On ( ) ) { ) {
rank: 353
score: 99.26573944091797
patch: if ( def != js CaMeL Scope && def == js CaMeL Scope ) {
rank: 353
score: 99.24268341064453
patch: Flow CaMeL State < Must CaMeL Def > state = state . get ) ;
rank: 353
score: 99.13616536458333
patch: for ( Var s : 0 , def : def . depends ) {
rank: 353
score: 99.12186472039474
patch: if ( def != null ) return def . depends ( def . depends ( ) ) ;
rank: 353
score: 99.04935396634616
patch: for ( Var s : def . depends , node ) {
rank: 354
score: 99.3397216796875
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Variable CaMeL Name ( ) ) ) {
rank: 354
score: 99.27544806985294
patch: for ( Var s : def . depends ( ) . depends ( def ) )
rank: 354
score: 99.24186197916667
patch: for ( Var s : def . get CaMeL Exception ( ) ) {
rank: 354
score: 99.13605143229167
patch: for ( Var s : null . depends && def != null ) {
rank: 354
score: 99.12162511488971
patch: if ( ! def . is CaMeL Empty ( ) ) { return false ; }
rank: 354
score: 99.04893493652344
patch: for ( Var s : def . depends , ! s . depends ) {
rank: 355
score: 99.31623979048295
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) )
rank: 355
score: 99.27522108289931
patch: for ( Var s : def . depends CaMeL On ) { def . set ) ;
rank: 355
score: 99.2655029296875
patch: for ( Var s : n . get CaMeL Vars ( name ) ) {
rank: 355
score: 99.13592529296875
patch: if ( def != null . depends && s != null . depends ) {
rank: 355
score: 99.12160237630208
patch: for ( Var s : def . depends ) { def = parent . depends ) ;
rank: 355
score: 99.04854038783482
patch: if ( s != null && def . depends != null ) {
rank: 356
score: 99.33915201822917
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var CaMeL Count ( ) ) ) {
rank: 356
score: 99.3187255859375
patch: for ( Var s : def . get CaMeL In ( ) ) { ) {
rank: 356
score: 99.31620065789474
patch: if ( js CaMeL Scope . get CaMeL In ( ) . scope != js CaMeL Scope )
rank: 356
score: 99.27498685396634
patch: for ( Var CaMeL Definition s : n . depends ) {
rank: 356
score: 99.24160970052084
patch: for ( Var s : def . depends ) { return true ; }
rank: 356
score: 99.13590181790866
patch: for ( Var s : null . depends != null ) {
rank: 356
score: 99.1214932528409
patch: for ( Var source : def . depends ) {
rank: 357
score: 99.3389383951823
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . name ) ) )
rank: 357
score: 99.3187255859375
patch: for ( Var s : def . get CaMeL Annotation ( ) . matches ) {
rank: 357
score: 99.3161865234375
patch: if ( js CaMeL Scope != js CaMeL Scope && s . scope != js CaMeL Scope ) {
rank: 357
score: 99.27497863769531
patch: for ( Node < Var > s : def . depends CaMeL On ( {
rank: 357
score: 99.13588053385416
patch: for ( Var s : def . is CaMeL Declared ( ) ) {
rank: 357
score: 99.12069702148438
patch: for ( Var s : def . depends ) Var s : def . depends . depends ) {
rank: 357
score: 99.0480624112216
patch: for ( Var s : def . depends ) true
rank: 358
score: 99.33889431423611
patch: for ( Var s : def . depends CaMeL On ( s , true ) ) {
rank: 358
score: 99.31611965013587
patch: if ( def == state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 358
score: 99.27493286132812
patch: for ( Var ( Var s : def . depends CaMeL On ) ) {
rank: 358
score: 99.26666937934027
patch: for ( Flow CaMeL State < Must CaMeL Def > def : def . depends ) {
rank: 358
score: 99.26387532552083
patch: for ( Var s : state . get CaMeL Next ( ) ) {
rank: 358
score: 99.24117838541666
patch: if ( js CaMeL Scope . get CaMeL In ( ) == null )
rank: 358
score: 99.13573346819196
patch: for ( for ( Var s ] : def . depends ) {
rank: 358
score: 99.12056477864583
patch: for ( Var s : def . depends ) Var s = def . depends ) {
rank: 358
score: 99.0474365234375
patch: for ( final Var s : def . depends ( def ) ) {
rank: 359
score: 99.33883327907986
patch: for ( Node < Node > s : def . depends CaMeL On ( ) ) {
rank: 359
score: 99.31568492542614
patch: if ( def != null ) return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( ) ;
rank: 359
score: 99.26666618795956
patch: for ( Var s ++ : def . depends CaMeL On ( s ) ) {
rank: 359
score: 99.26377360026042
patch: for ( Var s $NUMBER$ : def . depends ) {
rank: 359
score: 99.13566080729167
patch: for ( Var s : def . is CaMeL Null ( ) ) {
rank: 359
score: 99.12003950639205
patch: for ( Var s : def . depends ) { s . depends . add ( this . depends ) ;
rank: 359
score: 99.04722243088942
patch: for ( int ( Var s : def . depends ) {
rank: 360
score: 99.33874932650862
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Value ( ) ) ) ) {
rank: 360
score: 99.31793619791667
patch: for ( String s : def . get CaMeL Def ( ) ) {
rank: 360
score: 99.31564198369566
patch: if ( js CaMeL Scope . get CaMeL In ( ) . scope != js CaMeL Scope ) { return true ;
rank: 360
score: 99.27400716145833
patch: if ( def != null ) return def . depends CaMeL On ( {
rank: 360
score: 99.26653374565973
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def == null
rank: 360
score: 99.263134765625
patch: for ( Definition s : def . get CaMeL Vars ( ) ) {
rank: 360
score: 99.24114990234375
patch: for ( Var s : def . get CaMeL In ( ) . def )
rank: 360
score: 99.1354736328125
patch: for ( Var s : 0 . depends && def instanceof Var ) {
rank: 361
score: 99.33866373697917
patch: for ( Var s : n . get CaMeL Length ( ) ) {
rank: 361
score: 99.31545188210227
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( name ) ;
rank: 361
score: 99.27397604549633
patch: for ( Var n : def . depends CaMeL On ( def , false ) )
rank: 361
score: 99.26649576822916
patch: if ( s instanceof Flow CaMeL State < Must CaMeL Def > ) {
rank: 361
score: 99.26299493963069
patch: for ( Var s : name . depends ) {
rank: 361
score: 99.13526108685662
patch: for ( Var s : def . depends && def . get CaMeL Var ) {
rank: 361
score: 99.0467529296875
patch: Var s : for ( Var s : def . depends ) continue ;
rank: 362
score: 99.33848353794643
patch: for ( Var s : n . get CaMeL In ( ) . depends CaMeL On ( s ) )
rank: 362
score: 99.27391639122597
patch: for ( Var s : n . depends ) { { {
rank: 362
score: 99.26641845703125
patch: Flow CaMeL State < Must CaMeL Def > state = new Must CaMeL Def ( ) ;
rank: 362
score: 99.24105834960938
patch: if ( type != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 362
score: 99.13508823939732
patch: if ( def != null && def != null . depends ) {
rank: 362
score: 99.11821746826172
patch: if ( def ) { for ( Var s : def . depends ) {
rank: 363
score: 99.31524103338069
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( def . depends ) ;
rank: 363
score: 99.2731689453125
patch: for ( Var s : def . depends ) { Var s = {
rank: 363
score: 99.26630401611328
patch: if ( def != null && state . scope != js CaMeL Scope ) {
rank: 363
score: 99.26100068933823
patch: for ( Type s : state . get CaMeL In ( ) . depends ) {
rank: 363
score: 99.24104527064732
patch: for ( Var s : def . equals ( state ) ) {
rank: 363
score: 99.13496907552083
patch: for ( Var s : def . depends != ) {
rank: 363
score: 99.11818625710227
patch: if ( def != null ) { System . err . println ( $STRING$ + def . depends ) ; }
rank: 363
score: 99.04657451923077
patch: for ( Var s : new Var s . depends ) {
rank: 364
score: 99.33770461309524
patch: for ( Node s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) )
rank: 364
score: 99.31575281479779
patch: for ( Var s : def . get CaMeL Annotation ( ) . next ) {
rank: 364
score: 99.31441066576087
patch: if ( def != null ) state . get CaMeL In ( ) . reaching CaMeL Def . return true ;
rank: 364
score: 99.27290344238281
patch: for ( Var s : n . get CaMeL Declarations ( ) ) { {
rank: 364
score: 99.26627604166667
patch: if ( def != null && state . get CaMeL Annotation ( ) == null ) {
rank: 364
score: 99.24099934895834
patch: if ( state . get CaMeL Scope ( ) != js CaMeL Scope )
rank: 364
score: 99.11815185546875
patch: for ( Var s : def . depends ) { def = def . depends . depends ) {
rank: 364
score: 99.04652913411458
patch: for ( Var s : def . depends ) break {
rank: 365
score: 99.337646484375
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( target ) {
rank: 365
score: 99.31437544389205
patch: final Definition def = state . get CaMeL In ( ) . get CaMeL Def ( use CaMeL Node ) ;
rank: 365
score: 99.27284458705357
patch: for ( Var s : def . get CaMeL Declarations ( ) )
rank: 365
score: 99.26034725413604
patch: for ( Var def : def . get CaMeL Scope ( ) . depends ) {
rank: 365
score: 99.24080984933036
patch: for ( String s : def . get CaMeL In ( ) )
rank: 365
score: 99.13447709517045
patch: for ( Var s : def . depends , {
rank: 365
score: 99.11742054332386
patch: Var s = def . depends ( def . depends ( s . to CaMeL String ( ) ) ) {
rank: 365
score: 99.04638671875
patch: for ( Var s : children . depends ) {
rank: 366
score: 99.31425548735119
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) != js CaMeL Scope ) ;
rank: 366
score: 99.25992584228516
patch: for ( Node s : def . reaching CaMeL Def . depends ) {
rank: 366
score: 99.24073282877605
patch: if ( state . scope == js CaMeL Scope ) {
rank: 366
score: 99.13443196614584
patch: for ( Var s : def . depends && def . resolve ) {
rank: 366
score: 99.11738024259868
patch: for ( Var s : def . depends ( def . depends ( type ) ) ) {
rank: 366
score: 99.0461181640625
patch: for ( Var s : def . depends && s != null ) {
rank: 367
score: 99.33727496603261
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( s ) ) {
rank: 367
score: 99.3132080078125
patch: for ( Var s : def . get CaMeL Bytes ( ) ) {
rank: 367
score: 99.27247450086806
patch: if ( def != null ) def = def . depends CaMeL On ( def ) ;
rank: 367
score: 99.25981794084821
patch: for ( Var s : reaching CaMeL Def . depends ) {
rank: 367
score: 99.13383932674633
patch: for ( Var s : def . depends ) { def . depends ) ; }
rank: 367
score: 99.11716134207589
patch: Var s = ( Var [ ] ) def . depends ) {
rank: 367
score: 99.04606628417969
patch: for ( Var s : def . depends , def . depends ) { {
rank: 368
score: 99.33725992838542
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( ) . depends ) ) {
rank: 368
score: 99.3138760653409
patch: return reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ) ;
rank: 368
score: 99.31299546185662
patch: for ( Var s : def . get CaMeL In ( ) . has ) {
rank: 368
score: 99.264599609375
patch: for ( Var s > s > s : def . depends ) {
rank: 368
score: 99.25891985212054
patch: try { if ( s . scope != js CaMeL Scope ) {
rank: 368
score: 99.13375651041666
patch: for ( Var s : 0 . depends && def == null ) {
rank: 368
score: 99.11712937127976
patch: for ( Var s : def . depends ) { Var s = def . depends . depends ) ;
rank: 368
score: 99.04601236979167
patch: for ( Var s : def . get CaMeL Region ( ) ) {
rank: 369
score: 99.3371814546131
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Parent ( ) ) )
rank: 369
score: 99.27137169471153
patch: for ( Var s : def . depends CaMeL On { {
rank: 369
score: 99.25818684895833
patch: for ( Var s : state . is CaMeL In ( ) ) {
rank: 369
score: 99.04532296316964
patch: for ( final Var s : def . depends . depends ) {
rank: 370
score: 99.33684430803571
patch: for ( Var s : def . depends CaMeL On ( s . to CaMeL String ( ) . to CaMeL String ( ) ) ) {
rank: 370
score: 99.3135402513587
patch: for ( Var s : def . equals ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 370
score: 99.27059936523438
patch: Var s = ( Var ) n . depends CaMeL On ( def ) ;
rank: 370
score: 99.26361083984375
patch: for ( Must CaMeL Def > s : n . depends ) {
rank: 370
score: 99.25795084635416
patch: for ( Var s : state . get CaMeL Parent ( ) ) {
rank: 370
score: 99.23805236816406
patch: if ( state != js CaMeL Scope . get CaMeL Name ( name ) )
rank: 370
score: 99.11621965680804
patch: for ( Iterator < Var > count : def . depends ) {
rank: 370
score: 99.0452392578125
patch: Var s : System . out . println ( $STRING$ + s ) ;
rank: 371
score: 99.33649236505681
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Scope ( ) ) ) {
rank: 371
score: 99.25719401041667
patch: for ( Var s : scope . get CaMeL In ( ) ) {
rank: 371
score: 99.23745291573661
patch: if ( state . get CaMeL Definition ( ) != null ) {
rank: 371
score: 99.13251139322917
patch: for ( Var s : null . depends || def . depends ) {
rank: 371
score: 99.11574485085227
patch: for ( Var node : def . depends ) {
rank: 371
score: 99.04501139322916
patch: for ( Var s : def . get CaMeL Graph ( ) ) {
rank: 372
score: 99.33629653033088
patch: for ( Node < Var > s : def . get CaMeL In ( ) )
rank: 372
score: 99.31318996263587
patch: final Definition s = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 372
score: 99.31251627604166
patch: for ( Var s : def . depends ( - 1 ) ) {
rank: 372
score: 99.27010672433036
patch: if ( def != null && def . depends CaMeL On ( {
rank: 372
score: 99.26294884314903
patch: for ( Var s + 0 : def . depends ) {
rank: 372
score: 99.11551339285714
patch: for ( Var s : def . depends ) { return false ;
rank: 372
score: 99.04476928710938
patch: for ( Var s : def . depends . depends . depends != ) {
rank: 373
score: 99.33595872961956
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( id ) ) ) {
rank: 373
score: 99.26998138427734
patch: Node < Node > def = def . depends CaMeL On ( def ) ;
rank: 373
score: 99.25533854166666
patch: for ( Var s : get CaMeL In ( ) . depends ) {
rank: 373
score: 99.2359619140625
patch: for ( Var s : def . depends . get CaMeL Def ( ) )
rank: 373
score: 99.13210880055146
patch: for ( Var s = def . depends ) println ( def . depends ) {
rank: 373
score: 99.11473253038194
patch: if ( def != null && def . get CaMeL Depth ( ) > 0 ) {
rank: 373
score: 99.04457785866477
patch: for ( Var s : def . depends ) )
rank: 374
score: 99.33592878069196
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Var ( ) ) ) {
rank: 374
score: 99.26995086669922
patch: for ( Var s : def . depends CaMeL On ( def ) ) ;
rank: 374
score: 99.26153564453125
patch: for ( Graph CaMeL Node < Node , Branch > def : def . depends ) {
rank: 374
score: 99.23595377604167
patch: for ( String s : def . get CaMeL Value ( ) ) {
rank: 374
score: 99.13170708550348
patch: for ( Var s : 0 . depends ( s . depends ) . depends ) {
rank: 374
score: 99.11452907986111
patch: for ( Var s : def . depends ( ) . depends ( def ) ) {
rank: 374
score: 99.04439603365384
patch: def . for ( Var s : def . depends ) {
rank: 375
score: 99.31174926757812
patch: if ( s . scope != js CaMeL Scope && def . state != js CaMeL Scope ) {
rank: 375
score: 99.26924351283482
patch: for ( Var s : n . get CaMeL Classes ( ) )
rank: 375
score: 99.23565204326923
patch: if ( s . get CaMeL Annotation ( ) != null )
rank: 375
score: 99.11441379123264
patch: if ( def == null ) { for ( Var s : def . depends ) {
rank: 376
score: 99.33564897017045
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Modifiers ( ) ) ) {
rank: 376
score: 99.31168989701705
patch: int depends = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 376
score: 99.30907389322917
patch: for ( Var s : def . get CaMeL Boolean ( ) ) {
rank: 376
score: 99.26894705636161
patch: for ( Var s : n . get CaMeL Declarations ( ) )
rank: 376
score: 99.26075090680804
patch: for ( Var s ++ : def . depends ( ) ) {
rank: 376
score: 99.2531494140625
patch: for ( Var def : state . get CaMeL Cfg ( ) ) {
rank: 376
score: 99.23546424278847
patch: if ( s . get CaMeL In ( ) != null )
rank: 376
score: 99.11406860351562
patch: for ( Var s : def . get CaMeL Next ( ) . depends ( def ) ) {
rank: 376
score: 99.04296003069196
patch: for ( String s : def . depends ( s ) ) {
rank: 377
score: 99.33531358506944
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Method ( ) . get CaMeL Name ( ) ) )
rank: 377
score: 99.31156589673913
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( false ) ;
rank: 377
score: 99.30884728064903
patch: for ( ( Var s : def . depends ) ) {
rank: 377
score: 99.26884460449219
patch: for ( Var case : def . depends CaMeL On ( def ) ) {
rank: 377
score: 99.26021999782986
patch: for ( Graph CaMeL Node < Must CaMeL Def > n : def . depends ) {
rank: 377
score: 99.25305938720703
patch: if ( s . scope == js CaMeL Scope ) { return true ; }
rank: 377
score: 99.1307144165039
patch: for ( Var s { for ( Var s : def . depends ) {
rank: 377
score: 99.1133700284091
patch: synchronized ( def . depends ) { for ( Var s : def . depends . depends . depends ) {
rank: 378
score: 99.33478104440789
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( {
rank: 378
score: 99.3114013671875
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 378
score: 99.26871490478516
patch: / * for ( Var s : n . depends CaMeL On ) * /
rank: 378
score: 99.25998263888889
patch: for ( Flow CaMeL State < Must CaMeL Def > n : def . depends ) {
rank: 378
score: 99.23538411458334
patch: for ( Var def : def . get CaMeL Def ( ) ) {
rank: 378
score: 99.11315046037946
patch: for ( Iterator < Var > type : def . depends ) {
rank: 379
score: 99.31110945991848
patch: return s . reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 379
score: 99.3084716796875
patch: for ( Var 1 : def . get CaMeL Def ( ) ) {
rank: 379
score: 99.26858859592014
patch: for ( Var s : def . depends ) { def = s . depends ; }
rank: 379
score: 99.25992838541667
patch: for ( Graph CaMeL Node < Node , Branch > s : def . depends ) {
rank: 379
score: 99.25259219898896
patch: for ( Var s : state . get CaMeL Instance ( ) . depends ) {
rank: 379
score: 99.13022867838542
patch: for ( Var s : def . depends , def . depends . depends . ) {
rank: 379
score: 99.11314174107143
patch: for ( Iterator < Var > index = def . depends ) {
rank: 379
score: 99.04222523082386
patch: for ( Var s : command . depends ) {
rank: 380
score: 99.33469935825893
patch: for ( Var s : def . get CaMeL Methods ( ) )
rank: 380
score: 99.31102405894886
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( null ) ;
rank: 380
score: 99.30836995442708
patch: Definition def = def . get CaMeL In ( ) . get CaMeL In ( ) ;
rank: 380
score: 99.25952962239583
patch: for ( Var s : def . depends CaMeL On > $NUMBER$ ) {
rank: 380
score: 99.25247395833334
patch: for ( Var s : state . get CaMeL Type ( ) ) {
rank: 380
score: 99.2346435546875
patch: for ( Definition s : def . get CaMeL Def ( ) ) {
rank: 380
score: 99.13003305288461
patch: for ( Var s = def = def . depends ) {
rank: 380
score: 99.11293723366477
patch: if ( def != null ) { break ; }
rank: 381
score: 99.3339611235119
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( name ) )
rank: 381
score: 99.3081413717831
patch: for ( Var s : def . get CaMeL In ( ) . lang ) {
rank: 381
score: 99.26834106445312
patch: for ( Var s : n . get CaMeL Classes ( ) ) { {
rank: 381
score: 99.25947570800781
patch: for ( Var s : def . depends CaMeL On . ( ) ) {
rank: 381
score: 99.13002366286058
patch: Var s = null ; if ( def != null ) {
rank: 381
score: 99.11290283203125
patch: if ( def != null ) { System . out . println ( def . depends ) ; }
rank: 381
score: 99.04190826416016
patch: if ( def . depends && def . depends && s != null ) {
rank: 382
score: 99.308642578125
patch: String depends = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 382
score: 99.25932760799633
patch: for ( Var s ++ : def . reaching CaMeL Def . depends ) {
rank: 382
score: 99.2522964477539
patch: for ( Var s : def . get CaMeL Symbol ( name ) ) {
rank: 382
score: 99.23416748046876
patch: if ( state == js CaMeL Scope ) {
rank: 382
score: 99.12998610276442
patch: for ( Var s : def . depends > null ) {
rank: 382
score: 99.11282009548611
patch: if ( def != null && def . get CaMeL Var ( ) != null ) {
rank: 382
score: 99.04170365767045
patch: for ( Var s : def . size ) {
rank: 383
score: 99.33334350585938
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . name ) ) )
rank: 383
score: 99.30711454503677
patch: for ( Must CaMeL Def s : def . get CaMeL Def ( ) ) {
rank: 383
score: 99.26800537109375
patch: for ( Node < Node > n : def . depends ) {
rank: 383
score: 99.25914809283088
patch: for ( Var s : def . depends CaMeL On > ( s ) ) {
rank: 383
score: 99.252197265625
patch: for ( Var s : state . get CaMeL Definition ( ) ) {
rank: 383
score: 99.23383440290179
patch: for ( Var s : def . equals ( name ) ) {
rank: 383
score: 99.1297607421875
patch: for ( Var s : def . has ) {
rank: 383
score: 99.11277770996094
patch: for ( Var s : def . get CaMeL Arg ( ) . depends )
rank: 383
score: 99.04168231670673
patch: for ( Var s : def . depends , type ) {
rank: 384
score: 99.30832837975544
patch: final Var s = def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 384
score: 99.26767403738839
patch: for ( Node < Var > s : n . depends ) {
rank: 384
score: 99.1296157836914
patch: for ( Var s ] != null ? def : def . depends ) {
rank: 384
score: 99.11234907670455
patch: for ( Var s : def . depends ) { s . depends . add ( def . depends ) {
rank: 384
score: 99.04084995814732
patch: String s : for ( String s : def . depends ) {
rank: 385
score: 99.33297596807066
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . ) ) )
rank: 385
score: 99.30762780230978
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL In ( ) ) ;
rank: 385
score: 99.26721954345703
patch: for ( Var > s : def . depends CaMeL On ( ) ) {
rank: 385
score: 99.25850677490234
patch: if ( def != null || def . depends CaMeL On ( ) ) {
rank: 385
score: 99.2316650390625
patch: if ( state != js CaMeL Scope . get CaMeL Type ( ) )
rank: 385
score: 99.11195591517857
patch: for ( Var [ ] def : def . depends ) { {
rank: 385
score: 99.04064127604167
patch: for ( Var s : def . depends != new Var s ) {
rank: 386
score: 99.33282260237068
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . depends CaMeL On ( ) ) ) ) {
rank: 386
score: 99.30747919497283
patch: return reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . scope ;
rank: 386
score: 99.30686848958334
patch: for ( Var 1 : def . get CaMeL Annotation ( ) ) {
rank: 386
score: 99.26713731553819
patch: for ( Var s : def . depends CaMeL On ( def ) ) return false ;
rank: 386
score: 99.25824846540179
patch: if ( def . get CaMeL Annotation ( ) == null ) {
rank: 386
score: 99.24982158954327
patch: for ( Var s : get CaMeL Cfg ( ) ) {
rank: 386
score: 99.23150634765625
patch: for ( Var s : def . get CaMeL Name ( ) )
rank: 386
score: 99.11119588216145
patch: / for ( Var s : def . depends ) {
rank: 386
score: 99.04044015066964
patch: for ( final for ( Var s : def . depends ) {
rank: 387
score: 99.33267066592262
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) ) {
rank: 387
score: 99.30719604492188
patch: if ( def . scope != js CaMeL Scope && def . state != js CaMeL Scope ) {
rank: 387
score: 99.25786946614583
patch: if ( state instanceof Flow CaMeL State < Must CaMeL Def > ) {
rank: 387
score: 99.2495361328125
patch: for ( Var s : def == null : s . depends ) {
rank: 387
score: 99.23145470252403
patch: for ( Var s : def . depends ( state ) )
rank: 387
score: 99.1103515625
patch: if ( def != null || def == null ) {
rank: 387
score: 99.04042405348558
patch: / * for ( Var s : def . depends ) }
rank: 388
score: 99.33263346354167
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( def ) ) ) ) {
rank: 388
score: 99.30717540922619
patch: if ( s . reaching CaMeL Def . scope != js CaMeL Scope ) { return true ; }
rank: 388
score: 99.26668548583984
patch: while ( def != null && def . depends CaMeL On ( def ) )
rank: 388
score: 99.25758361816406
patch: if ( def != null && def . is CaMeL In ( ) ) {
rank: 388
score: 99.24908040364583
patch: for ( Var s : n . get CaMeL Next ( ) ) {
rank: 388
score: 99.12851969401042
patch: if ( s != null && def == null ) {
rank: 388
score: 99.1098965731534
patch: for ( Var s : def . get CaMeL Next ( ) . get CaMeL Var ( name ) ) {
rank: 388
score: 99.04012044270833
patch: for ( Var s : node . depends && def . depends ) {
rank: 389
score: 99.33258611505681
patch: for ( Var s : n . depends CaMeL On ( s . get CaMeL Var ( name ) ) )
rank: 389
score: 99.30716075067934
patch: return def . get CaMeL Scope ( ) . get CaMeL In ( ) . scope != js CaMeL Scope ) ;
rank: 389
score: 99.30595128676471
patch: for ( for ( Var s : def . get CaMeL Annotation ( ) ) {
rank: 389
score: 99.25706380208334
patch: for ( Var s : def . depends && state . depends ) {
rank: 389
score: 99.24876403808594
patch: if ( s != js CaMeL Scope && def == js CaMeL Scope ) {
rank: 389
score: 99.12851849724265
patch: for ( Var s : def . depends && def . depends , s ) {
rank: 389
score: 99.1098388671875
patch: for ( Var s : def . depends ) { s . depends = def . depends ) {
rank: 390
score: 99.33224051339286
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( this ) )
rank: 390
score: 99.30546300551471
patch: for ( Var s : def . get CaMeL In ( ) . name ) {
rank: 390
score: 99.266357421875
patch: for ( Var n : def . depends CaMeL On ( this ) ) {
rank: 390
score: 99.25656127929688
patch: for ( Must CaMeL Def < Var > s : def . depends ) {
rank: 390
score: 99.23017229352679
patch: for ( Var s : def . depends ) { System . else
rank: 390
score: 99.10970865885416
patch: if ( def != null ) Var s = def . depends ) {
rank: 390
score: 99.03946126302084
patch: Var s : for ( Var s : def . depends ) break ;
rank: 391
score: 99.30593039772727
patch: if ( s . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ) {
rank: 391
score: 99.30524040670956
patch: Definition def = state . get CaMeL In ( ) . depends ( name ) ;
rank: 391
score: 99.266015625
patch: for ( Var exp : def . depends CaMeL On ( ) ) {
rank: 391
score: 99.22981770833333
patch: for ( Var s : def . depends CaMeL On ( false ) )
rank: 391
score: 99.12845187717014
patch: for ( Var s : def . depends ( def ) . depends ( ) ) {
rank: 391
score: 99.10967339409723
patch: for ( Var s : def . depends ) def = def . depends ) break ;
rank: 391
score: 99.03919566761364
patch: for ( Class s : def . depends ) {
rank: 392
score: 99.33185686383929
patch: for ( Var s : def . depends CaMeL On ( s ) . depends CaMeL On ( ) )
rank: 392
score: 99.30583052201705
patch: return s . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 392
score: 99.30504653033088
patch: for ( Var s : def . get CaMeL In ( ) . set ) {
rank: 392
score: 99.26556803385417
patch: for ( Var n : n . get CaMeL Vars ( ) ) {
rank: 392
score: 99.2483642578125
patch: for ( Var s : def . get CaMeL Def . depends ) {
rank: 392
score: 99.22952880859376
patch: for ( Definition s : def . depends )
rank: 392
score: 99.12820199819711
patch: for ( Var s : def . get , depends ) {
rank: 392
score: 99.1094970703125
patch: for ( Var s : def . depends ) { def = s . depends . depends ) ;
rank: 392
score: 99.03892299107143
patch: for ( Var s : def . depends CaMeL On null ) {
rank: 393
score: 99.26552327473958
patch: for ( Node < Node > s : def . depends CaMeL On ( def ) )
rank: 393
score: 99.24801432291666
patch: for ( Var s : n . is CaMeL In ( ) ) {
rank: 393
score: 99.22952473958334
patch: for ( Var s -- : def . get CaMeL Def ( ) )
rank: 393
score: 99.1279525756836
patch: for ( Var s ] : def . depends && s . depends ) {
rank: 393
score: 99.10920854048295
patch: for ( Var s : def . depends ) { def . depends . add ( def . depends ) {
rank: 393
score: 99.03856549944196
patch: for ( Var s : def . depends ) def != null {
rank: 394
score: 99.33158735795455
patch: for ( Var s : def . depends CaMeL On ( target . depends CaMeL On ( ) ) ) {
rank: 394
score: 99.30567515980114
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Annotation ( ) . depends ) {
rank: 394
score: 99.30483829273896
patch: for ( Var s : def . get CaMeL Property CaMeL Scope ( ) ) {
rank: 394
score: 99.26455078125
patch: for ( Var s : def . depends CaMeL On ) { ) {
rank: 394
score: 99.25465393066406
patch: for ( Flow CaMeL State < Node > def : state . depends ) {
rank: 394
score: 99.12783633961396
patch: for ( Var s : def . depends && s . depends , def ) {
rank: 394
score: 99.10832868303571
patch: for ( Var s : def . depends ) return depends ) ;
rank: 395
score: 99.33155314127605
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def . depends CaMeL On (
rank: 395
score: 99.30545176630434
patch: return def . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope ) ) ;
rank: 395
score: 99.3047736672794
patch: for ( Var s : def . get CaMeL In ( ) . EMPTY ) {
rank: 395
score: 99.26416015625
patch: Node < Var > n = def . depends CaMeL On ( def ) ;
rank: 395
score: 99.25447082519531
patch: Definition def = true ; for ( Var s : def . depends ) {
rank: 395
score: 99.24737141927083
patch: for ( Node def : state . get CaMeL In ( ) ) {
rank: 395
score: 99.22938755580357
patch: for ( Definition s : def . get CaMeL Annotation ( ) )
rank: 395
score: 99.12774188701923
patch: for ( Var s : def . depends || def ) {
rank: 395
score: 99.10804966517857
patch: / / * for ( Var s : def . depends ) {
rank: 396
score: 99.33119032118056
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . depends CaMeL On ) ) ) {
rank: 396
score: 99.30473776424633
patch: if ( n != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 396
score: 99.26377650669643
patch: for ( Var s : def . depends CaMeL On ( def {
rank: 396
score: 99.25403645833333
patch: for ( Var s + 1 : def . depends ( ) ) {
rank: 396
score: 99.22881610576923
patch: for ( Var s : def . intern ( ) ) {
rank: 396
score: 99.12767118566177
patch: for ( Var s ] : def . depends ( def . depends ) ) {
rank: 396
score: 99.03753107244319
patch: for ( String s : node . depends ) {
rank: 397
score: 99.33112928602431
patch: for ( Var s : def . depends CaMeL On ( this . def ) ) {
rank: 397
score: 99.30467313878677
patch: for ( Node . Var s : def . get CaMeL Annotation ( ) ) {
rank: 397
score: 99.26375325520833
patch: for ( Var s : n . depends CaMeL On ( name , def ) ) {
rank: 397
score: 99.2537841796875
patch: for ( Number s : def . depends CaMeL On ( ) ) {
rank: 397
score: 99.22864641462054
patch: for ( Var s : n . get CaMeL Annotation ( ) )
rank: 397
score: 99.12752591646634
patch: for ( Var s : def . depends || depends ) {
rank: 397
score: 99.10772705078125
patch: if ( def == null ) { return true ; }
rank: 397
score: 99.03719075520833
patch: for ( Var s : def . depends , options . depends ) {
rank: 398
score: 99.33108181423611
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Name ( ) ) )
rank: 398
score: 99.30518740699405
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope . get CaMeL In ( ) )
rank: 398
score: 99.26358736478366
patch: for ( Node < Var > s : def . depends )
rank: 398
score: 99.25355631510416
patch: for ( Var s > s > def : def . depends ) {
rank: 398
score: 99.2471435546875
patch: for ( Definition s : n . get CaMeL Annotation ( ) ) {
rank: 398
score: 99.22825520833334
patch: if ( state == js CaMeL Scope . get CaMeL In ( ) )
rank: 398
score: 99.12739701704545
patch: for ( Var s : def . contains ) {
rank: 398
score: 99.10763389185855
patch: for ( Var s : def . depends ) { Var s = s . depends ) {
rank: 398
score: 99.03716634114583
patch: for ( Var s : def . depends ) s . depends ) }
rank: 399
score: 99.33097700639205
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( value ) ) )
rank: 399
score: 99.26356608072916
patch: for ( Var s : def . depends CaMeL On ) return true ;
rank: 399
score: 99.2535400390625
patch: Definition def = false ; for ( Var s : def . depends ) {
rank: 399
score: 99.24671936035156
patch: for ( Var s : state . get CaMeL Node ( name ) ) {
rank: 399
score: 99.22762625558036
patch: for ( Var s : def . contains ( state ) ) {
rank: 400
score: 99.3049675436581
patch: Enumeration < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 400
score: 99.30294596354166
patch: for ( Var s : def . get CaMeL Long ( ) ) {
rank: 400
score: 99.25347900390625
patch: for ( Must CaMeL Def > s : def ) {
rank: 400
score: 99.22714029947916
patch: for ( Object s : def . depends CaMeL On ( ) ) {
rank: 400
score: 99.1267822265625
patch: for ( Var s = null ; def : def . depends ) {
rank: 400
score: 99.10730511209239
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Value ( ) ) . depends )
rank: 400
score: 99.03697204589844
patch: for ( Var s : def . depends && def . depends != null {
rank: 401
score: 99.33087789601294
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . depends CaMeL On ( def ) ) ) )
rank: 401
score: 99.30425061677632
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope ) { return true ;
rank: 401
score: 99.3016716452206
patch: for ( Var s : def . n . get CaMeL Annotation ( ) ) {
rank: 401
score: 99.26339721679688
patch: for ( Var s : def . get CaMeL Declarations ( ) ) { {
rank: 401
score: 99.22698974609375
patch: if ( s == null ) {
rank: 401
score: 99.1263427734375
patch: for ( Var s : def . depends && def == get ) {
rank: 401
score: 99.10726224459134
patch: if ( def != null ) return s . depends ) ;
rank: 401
score: 99.03675426136364
patch: for ( Var s : def . trim ) {
rank: 402
score: 99.330810546875
patch: for ( Var s : n . get CaMeL Arg ( ) )
rank: 402
score: 99.26329040527344
patch: / for ( Var s : def . depends CaMeL On ( def ) )
rank: 402
score: 99.25267615685097
patch: for ( Var s : def . depends . length ) {
rank: 402
score: 99.22674560546875
patch: for ( Var s : def . get ( name ) ) {
rank: 402
score: 99.12607828776042
patch: for ( Var s : def . depends && def . depends ( s ) ) {
rank: 402
score: 99.1071544828869
patch: for ( Var s : def . depends ) { Var s : def . depends . depends . {
rank: 402
score: 99.03624378551136
patch: for ( Var s : options . depends ) {
rank: 403
score: 99.33075506036931
patch: for ( Var s : n . depends CaMeL On ( s . depends CaMeL On ( ) ) ) {
rank: 403
score: 99.30326915922619
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope != js CaMeL Scope ) ;
rank: 403
score: 99.26315104166666
patch: try { for ( Var s : def . depends CaMeL On ) {
rank: 403
score: 99.22642822265625
patch: if ( js CaMeL Scope == null ) {
rank: 403
score: 99.12566266741071
patch: for ( Var s : def . depends 1 ( ) ) {
rank: 403
score: 99.10707310267857
patch: for ( Node < Var > 0 : def . depends ) {
rank: 403
score: 99.0352783203125
patch: for ( Var s : def . depends && s != null {
rank: 404
score: 99.33062744140625
patch: for ( Node < Node > s = def . depends ) {
rank: 404
score: 99.30307839133523
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . get CaMeL Node ( ) ;
rank: 404
score: 99.26303439670139
patch: for ( Var s : def . depends CaMeL On ( ) ) { def . )
rank: 404
score: 99.25197531960227
patch: for ( Var next : def . depends ) {
rank: 404
score: 99.244384765625
patch: for ( Var s : get CaMeL Scope ( ) . depends ) {
rank: 404
score: 99.22632649739583
patch: if ( s . get CaMeL Var ( name ) != null ) {
rank: 404
score: 99.12540690104167
patch: for ( Var s : def . depends $NUMBER$ def ( ) ) {
rank: 404
score: 99.10574501439145
patch: if ( def != null ) { def . add CaMeL All ( def . depends ) ;
rank: 405
score: 99.3301418138587
patch: for ( Var s : def . depends CaMeL On ( name , def . depends CaMeL On ( ) ) )
rank: 405
score: 99.3025235262784
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL Node ( ) ;
rank: 405
score: 99.25177680121527
patch: if ( state != null && state . get CaMeL In ( ) != null ) {
rank: 405
score: 99.24396514892578
patch: for ( Var s : def . get CaMeL Method ( name ) ) {
rank: 405
score: 99.12523475060097
patch: for ( Var s : 0 . depends == null ) {
rank: 405
score: 99.03484235491071
patch: for ( Var s : get CaMeL Var s . depends ) {
rank: 406
score: 99.32996057581019
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) . get CaMeL Var ( ) ) )
rank: 406
score: 99.30156915838069
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL
rank: 406
score: 99.29947102864584
patch: for ( Var s : def . get CaMeL Field ( ) ) {
rank: 406
score: 99.26238250732422
patch: for ( Var s : def . depends CaMeL On ) { Var s )
rank: 406
score: 99.25169372558594
patch: for ( Flow CaMeL State < Must CaMeL Def > state : state ) {
rank: 406
score: 99.24358723958333
patch: for ( Var def : n . get CaMeL Cfg ( ) ) {
rank: 406
score: 99.22542724609374
patch: for ( Var s : state . depends )
rank: 406
score: 99.12425740559895
patch: if ( def != null && s == null ) {
rank: 406
score: 99.03456809303977
patch: for ( boolean s : def . depends ) {
rank: 407
score: 99.3298870584239
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) . depends ) )
rank: 407
score: 99.3013980263158
patch: if ( s . scope != js CaMeL Scope . js CaMeL Scope ) { return true ;
rank: 407
score: 99.25145721435547
patch: for ( Must CaMeL Def > s > s : def . depends ) {
rank: 407
score: 99.2435791015625
patch: if ( s == js CaMeL Scope ) {
rank: 407
score: 99.12415422712054
patch: for ( Var s : def . depends && def != ) {
rank: 407
score: 99.10553656684027
patch: for ( Var s : def . depends ) for ( Var s . depends ) {
rank: 407
score: 99.03377278645833
patch: final for ( Var s : def . depends ) {
rank: 408
score: 99.32954545454545
patch: for ( Var s : def . depends CaMeL On ( name ) . depends CaMeL On ( name ) )
rank: 408
score: 99.29840446920956
patch: for ( Must CaMeL Def state : n . get CaMeL Annotation ( ) ) {
rank: 408
score: 99.26111602783203
patch: for ( Var s : def . depends CaMeL On ) { def . )
rank: 408
score: 99.25143432617188
patch: for ( Flow CaMeL State < Object > s : def . depends ) {
rank: 408
score: 99.24322916666667
patch: for ( Definition s : n . get CaMeL In ( ) ) {
rank: 408
score: 99.10539027622768
patch: for ( Iterator < Var > $NUMBER$ : def . depends ) {
rank: 408
score: 99.03282581676136
patch: for ( ? s : def . depends ) {
rank: 409
score: 99.3292820142663
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( name ) ) {
rank: 409
score: 99.30080344460227
patch: Annotation def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 409
score: 99.26099310980902
patch: for ( Var s : def . depends CaMeL On . depends CaMeL On ( ) )
rank: 409
score: 99.24319893973214
patch: for ( if ( s . scope != js CaMeL Scope ) {
rank: 409
score: 99.12371356670673
patch: for ( Var s : def . get ( ) ) {
rank: 409
score: 99.10537109375
patch: for ( Var s : def . depends ) { return depends ) ;
rank: 409
score: 99.03270670572917
patch: while ( def != null ) { s = def . depends ) {
rank: 410
score: 99.32847016433189
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) , def . depends CaMeL On ( ) ) )
rank: 410
score: 99.26094055175781
patch: for ( Var default : def . depends CaMeL On ( def ) ) {
rank: 410
score: 99.24261005108173
patch: for ( Var s : def . depends ) { else {
rank: 410
score: 99.22369854266827
patch: if ( def . get CaMeL Annotation ( ) != null )
rank: 410
score: 99.1233642578125
patch: for ( Var s != null ? 1 : def . depends ) {
rank: 410
score: 99.1052754720052
patch: final Var s : if ( def != null ) {
rank: 411
score: 99.32846901633523
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def ) ) )
rank: 411
score: 99.3004150390625
patch: Symbol def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 411
score: 99.24192457932692
patch: for ( Var s : def : def . depends ) {
rank: 411
score: 99.12262321920956
patch: for ( Var s : def . depends && def . get == null ) {
rank: 411
score: 99.10516764322917
patch: return def != null ? def == null : def . depends ) {
rank: 412
score: 99.32846901633523
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( this ) ) {
rank: 412
score: 99.29946067116477
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( name ) ) {
rank: 412
score: 99.26036834716797
patch: for ( Var s : def . depends CaMeL On ( prefix ) ) {
rank: 412
score: 99.25025227864583
patch: for ( Var s > s + 1 : def . depends ) {
rank: 412
score: 99.24180603027344
patch: for ( Var def : state . get CaMeL Annotation ( name ) ) {
rank: 412
score: 99.22344098772321
patch: if ( state . get CaMeL Var ( name ) != null )
rank: 412
score: 99.12252807617188
patch: for ( Var s ] : def . depends ? def . depends ) {
rank: 412
score: 99.10478515625
patch: for ( Var s : def . depends ) { def = def . depends ) break ; }
rank: 413
score: 99.29918148643092
patch: else def = state . get CaMeL In ( ) . get CaMeL Def ( name ) ;
rank: 413
score: 99.29587689568015
patch: for ( Var s : def . get CaMeL State ( ) . depends ) {
rank: 413
score: 99.26028878348214
patch: for ( Var n : n . depends CaMeL On ( ) )
rank: 413
score: 99.25016276041667
patch: for ( Var s ++ : state . depends ) {
rank: 413
score: 99.1224724264706
patch: for ( Var s : def . depends , depends . depends . depends ) {
rank: 414
score: 99.32822487571023
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( target ) ) )
rank: 414
score: 99.29849097842262
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope != js CaMeL Scope ) ;
rank: 414
score: 99.2958122702206
patch: for ( Var s : def . get CaMeL Annotation ( ) . get ) {
rank: 414
score: 99.26014811197916
patch: for ( Var s : n . depends CaMeL On ) { { {
rank: 414
score: 99.24984537760416
patch: for ( Var s : def . depends CaMeL On > s ) {
rank: 414
score: 99.22303989955357
patch: for ( Node s : def . get CaMeL Annotation ( ) )
rank: 414
score: 99.1224594116211
patch: for ( Var s : def . depends ( ) def . depends ) {
rank: 414
score: 99.10446999289773
patch: for ( Var index : def . depends ) {
rank: 414
score: 99.03135681152344
patch: for ( Var s : def . depends . depends . depends . ) {
rank: 415
score: 99.3279696377841
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( this ) )
rank: 415
score: 99.29778731496711
patch: if ( s . equals ( js CaMeL Scope . get CaMeL Var ( name ) ) )
rank: 415
score: 99.25989532470703
patch: for ( Var < Var > s : def . depends CaMeL On ) {
rank: 415
score: 99.24940842848558
patch: for ( Var s : s . depends ( ) ) {
rank: 415
score: 99.24121856689453
patch: for ( Must CaMeL Def : state . get CaMeL Cfg ( ) ) {
rank: 415
score: 99.22276814778645
patch: if ( state instanceof Must CaMeL Def > null ) {
rank: 415
score: 99.12220865885416
patch: for ( Var s : 0 . depends || def . depends ) {
rank: 415
score: 99.10396999782986
patch: if ( def != null && def . get CaMeL Method ( ) != null ) {
rank: 415
score: 99.03081720525569
patch: for ( Var s : def . init ) {
rank: 416
score: 99.29758522727273
patch: if ( def != null ) state . get CaMeL In ( ) . reaching CaMeL Def . get (
rank: 416
score: 99.29436896829044
patch: for ( Var s : def . get CaMeL In ( ) . false ) {
rank: 416
score: 99.25966389973958
patch: for ( Node < Var > n : def . depends CaMeL On ( ) ) {
rank: 416
score: 99.24879455566406
patch: for ( Graph CaMeL Node < Node > s : def . depends ) {
rank: 416
score: 99.24114990234375
patch: if ( state . get CaMeL Annotation ( ) == js CaMeL Scope ) {
rank: 416
score: 99.22216796875
patch: if ( js CaMeL Scope . get CaMeL Scope ( ) != null )
rank: 416
score: 99.1221036044034
patch: for ( Var s : def . compile ) {
rank: 416
score: 99.10295758928571
patch: if ( def != null ) { System . err . println ( $STRING$ + def . depends ) ;
rank: 416
score: 99.03006417410714
patch: Var s : for ( Type s : def . depends ) {
rank: 417
score: 99.3279141512784
patch: for ( Var s : n . depends CaMeL On ( s . depends CaMeL On ( def ) ) )
rank: 417
score: 99.25919596354167
patch: Var s = ( Var ) n . get CaMeL Value ( ) ;
rank: 417
score: 99.2477557842548
patch: Definition def = state . get CaMeL In ( ) != null
rank: 417
score: 99.22154017857143
patch: for ( Var s : def . contains ( def ) ) {
rank: 417
score: 99.10271857766544
patch: if ( ! s . is CaMeL Empty ( ) ) { return false ; }
rank: 417
score: 99.03005545479911
patch: for ( Var s : def . depends ( true ) ) {
rank: 418
score: 99.32783564814815
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Type ( ) ) )
rank: 418
score: 99.29718572443181
patch: for ( Var s : def . js CaMeL Scope . get CaMeL Node ( use CaMeL Node ) ) {
rank: 418
score: 99.25912136501736
patch: if ( def ) { for ( Var s : def . depends CaMeL On ) {
rank: 418
score: 99.24756673177083
patch: for ( Var s : def . depends $NUMBER$ State ( ) ) {
rank: 418
score: 99.22113909040179
patch: for ( Definition s : def . depends CaMeL On ( ) )
rank: 418
score: 99.121875
patch: for ( Var s : def . depends , def . def ) {
rank: 418
score: 99.10269165039062
patch: for ( Var s : def . depends ) def = def . depends ) def . depends )
rank: 418
score: 99.02906383167614
patch: for CaMeL Var s : def . depends ) {
rank: 419
score: 99.32764689127605
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) . depends ) {
rank: 419
score: 99.29319852941177
patch: for ( Must CaMeL Def def : n . get CaMeL Annotation ( ) ) {
rank: 419
score: 99.24711100260417
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL Scope ( )
rank: 419
score: 99.23953951322116
patch: if ( def == js CaMeL Scope ) { return true ;
rank: 419
score: 99.220458984375
patch: if ( state . get CaMeL Next ( ) != null ) {
rank: 419
score: 99.1217529296875
patch: for ( Var s : ( def . depends ) . depends ) {
rank: 419
score: 99.10251752068015
patch: for ( Var s : def . depends ) def = def . depends ) }
rank: 419
score: 99.02897505326705
patch: for ( Var s : def . validate ) {
rank: 420
score: 99.32745916193181
patch: for ( Var s : n . depends CaMeL On ( def . get CaMeL Var ( ) ) ) {
rank: 420
score: 99.29643110795455
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ;
rank: 420
score: 99.25870513916016
patch: for ( Var s : n . get CaMeL Arg ( def ) ) {
rank: 420
score: 99.23918151855469
patch: for ( Must CaMeL Def : state . get CaMeL Scope ( ) ) {
rank: 420
score: 99.21985735212054
patch: for ( Var s : def . get CaMeL Root ( ) )
rank: 420
score: 99.1209716796875
patch: for ( Var s : def . depends ) println ( def ) ;
rank: 420
score: 99.1025146484375
patch: if ( def != null ) { return def . get ) ; }
rank: 421
score: 99.32710266113281
patch: for ( Var s : def . depends CaMeL On ( current ) ) {
rank: 421
score: 99.29583185369319
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope . get CaMeL Annotation ( ) ) {
rank: 421
score: 99.29309800091912
patch: for ( Must CaMeL Def def : n . get CaMeL In ( ) ) {
rank: 421
score: 99.2586898803711
patch: for ( Visitor < Var > s : def . depends CaMeL On ) {
rank: 421
score: 99.24687194824219
patch: for ( Var 1 s : def . depends CaMeL On ( ) ) {
rank: 421
score: 99.2389404296875
patch: for ( Definition def : def . get CaMeL In ( ) ) {
rank: 421
score: 99.12071814903847
patch: for ( Var s : def . depends , target ) {
rank: 421
score: 99.10247247869319
patch: if ( def == null ) { break ; }
rank: 421
score: 99.0289306640625
patch: for ( Var s : def . depends ) { return null ;
rank: 422
score: 99.32701416015625
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) ,
rank: 422
score: 99.29571242559524
patch: return state . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ) ;
rank: 422
score: 99.29253073299633
patch: for ( Node . Var s : def . get CaMeL In ( ) ) {
rank: 422
score: 99.25843912760416
patch: for ( Var name : def . depends CaMeL On ( ) ) {
rank: 422
score: 99.21829927884616
patch: for ( Var s : def . equals ( s ) )
rank: 422
score: 99.10232204861111
patch: Var s = def . depends ) {
rank: 422
score: 99.02703387920673
patch: for CaMeL Var ( Var s : def . depends ) {
rank: 423
score: 99.32638888888889
patch: for ( Node < Node > s : def . get CaMeL In ( ) ) {
rank: 423
score: 99.29561121323529
patch: if ( state . get CaMeL In ( ) . scope != js CaMeL Scope )
rank: 423
score: 99.25837537977431
patch: for ( Var s : def . depends CaMeL On ) { if ( s . {
rank: 423
score: 99.23882293701172
patch: for ( Must CaMeL Def : n . get CaMeL Scope ( ) ) {
rank: 423
score: 99.21829659598214
patch: for ( Var s : def . depends ( n ) ) {
rank: 423
score: 99.11967198988971
patch: for ( Var s = def . depends ) println ( s . depends ) ;
rank: 423
score: 99.02699497767857
patch: for ( Var s : def . depends ( value ) ) {
rank: 424
score: 99.32625679347827
patch: for ( Var s : def . depends CaMeL On ( def , def . get CaMeL Var ( ) ) )
rank: 424
score: 99.29245892693015
patch: for ( Must CaMeL Def def : def . get CaMeL Def ( ) ) {
rank: 424
score: 99.257568359375
patch: for ( Var n : n . get CaMeL Declarations ( ) ) {
rank: 424
score: 99.24564615885417
patch: for ( Graph CaMeL Node < Node , Branch > state : def . depends ) {
rank: 424
score: 99.23878479003906
patch: for ( Var s : def . depends ) : def . scope ) {
rank: 424
score: 99.21826171875
patch: for ( Var s : def . set CaMeL In ( name ) )
rank: 424
score: 99.11941731770834
patch: for ( Var s : def . get , def . depends ) {
rank: 424
score: 99.02586012620192
patch: for ( ? { Var s : def . depends ) {
rank: 425
score: 99.32602875808189
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . to CaMeL String ( ) ) ) ) {
rank: 425
score: 99.29214816623264
patch: for ( Var s : def . get CaMeL In ( ) ) return false ; }
rank: 425
score: 99.25733235677083
patch: for ( Type s : def . depends CaMeL On ( ) ) {
rank: 425
score: 99.245361328125
patch: for ( Node < Must CaMeL Def > s : def . depends ) {
rank: 425
score: 99.2386962890625
patch: for ( Var scope : def . get CaMeL In ( ) ) {
rank: 425
score: 99.21811930338542
patch: Definition def = state . get CaMeL Parent ( ) ;
rank: 425
score: 99.11934407552083
patch: for ( Var s : $STRING$ . depends && def . depends ) {
rank: 425
score: 99.02578299386161
patch: for ( Var s : node . depends ( def ) ) {
rank: 426
score: 99.32593834918478
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Var ( name ) ) ) {
rank: 426
score: 99.29498845880681
patch: return def . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) . scope ;
rank: 426
score: 99.29210611979167
patch: for ( Var s : def . get CaMeL Chars ( ) ) {
rank: 426
score: 99.25645616319444
patch: if ( def != null && def . get CaMeL Var ( name ) != null )
rank: 426
score: 99.24522399902344
patch: for ( Must CaMeL Def ( Var s : def . depends ) ) {
rank: 426
score: 99.2177978515625
patch: if ( state . get CaMeL Var ( ) != js CaMeL Scope )
rank: 426
score: 99.10182189941406
patch: Var s = def . depends ) { if ( def . depends ) {
rank: 426
score: 99.02577427455357
patch: for ( Var s : def . depends && node != null {
rank: 427
score: 99.3257080078125
patch: for ( Var s : def . depends CaMeL On ( id ) )
rank: 427
score: 99.29479399181548
patch: if ( s . scope != js CaMeL Scope . get CaMeL Var ( name ) ) return true ;
rank: 427
score: 99.25555419921875
patch: for ( Attribute s : def . depends CaMeL On ( def ) ) {
rank: 427
score: 99.24494086371527
patch: if ( def != null || state . get CaMeL Annotation ( ) != null ) {
rank: 427
score: 99.23799896240234
patch: for ( Must CaMeL Def : def . get CaMeL In ( ) ) {
rank: 427
score: 99.21676974826389
patch: if ( state != js CaMeL Scope )
rank: 427
score: 99.11921522352431
patch: for ( Var s : def . depends && def . depends ( def ) ) {
rank: 427
score: 99.02568708147321
patch: for ( ? for ( Var s : def . depends ) {
rank: 428
score: 99.32537841796875
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . type ) ) )
rank: 428
score: 99.29460797991071
patch: / * Must CaMeL Def < Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 428
score: 99.25537981305804
patch: for ( Var s : n . get CaMeL Methods ( ) )
rank: 428
score: 99.23665364583333
patch: for ( Var s : def . depends ) : {
rank: 428
score: 99.119140625
patch: for ( Var s : def . length ) {
rank: 428
score: 99.10159301757812
patch: for ( Var s : def . depends ) return s . depends ) {
rank: 428
score: 99.02548828125
patch: if ( def != null && def . depends ( s ) ) {
rank: 429
score: 99.32533957741477
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( default ) ) )
rank: 429
score: 99.29454456676136
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def ( js CaMeL Scope ) ;
rank: 429
score: 99.28981018066406
patch: for ( Var s : def . get CaMeL In 1 ( ) ) {
rank: 429
score: 99.25453016493056
patch: for ( Var s : n . depends CaMeL On ( ) ) { if ( {
rank: 429
score: 99.2422626201923
patch: for ( Must CaMeL Def state : state . depends ) {
rank: 429
score: 99.21585518973214
patch: for ( Var def : def . get CaMeL In ( ) )
rank: 429
score: 99.11893717447917
patch: if ( def == null && def == null ) {
rank: 429
score: 99.10130673363095
patch: for ( Var s : def . depends ) { def = def . depends . depends . ) ;
rank: 429
score: 99.02548828125
patch: for ( Var s : def . depends ) { def != null {
rank: 430
score: 99.32510375976562
patch: for ( Var s : def . depends CaMeL On ( name , use CaMeL Node ) ) {
rank: 430
score: 99.24201202392578
patch: for ( Must CaMeL Def > s : def . depends CaMeL On ) {
rank: 430
score: 99.23538208007812
patch: for ( Var s : def . get CaMeL Annotation ( ) ) { {
rank: 430
score: 99.21573311941964
patch: for ( Var s : def . get CaMeL Result ( ) )
rank: 430
score: 99.1189208984375
patch: for ( Var s : def . depends != null . depends ) {
rank: 430
score: 99.10125177556819
patch: for ( Var s : def . depends ) { def . depends . add ( this . depends ) ;
rank: 430
score: 99.02490234375
patch: if ( def != null || def . depends != null ) {
rank: 431
score: 99.3246433423913
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( target ) ) ) {
rank: 431
score: 99.29363458806819
patch: for ( Var s : def . depends ) + js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 431
score: 99.25432671440973
patch: if ( def == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 431
score: 99.24162462022569
patch: if ( def != null || state . get CaMeL In ( ) != null ) {
rank: 431
score: 99.2352294921875
patch: if ( def != js CaMeL Scope ) return true ;
rank: 431
score: 99.21531459263393
patch: if ( js CaMeL Scope . scope != js CaMeL Scope ) {
rank: 431
score: 99.11890462239583
patch: for ( Var s : def . depends || def instanceof Var ) {
rank: 431
score: 99.10061306423611
patch: if ( def == null ) { System . err . println ( $STRING$ ) ; }
rank: 431
score: 99.02456868489584
patch: for ( Var s : def != null || def . depends ) {
rank: 432
score: 99.32435191761364
patch: for ( Var s : def . depends CaMeL On ( target . get CaMeL Name ( ) ) ) {
rank: 432
score: 99.28921329273896
patch: for ( Var s : def . get CaMeL In ( ) . get ) {
rank: 432
score: 99.25387369791666
patch: / * for ( Var s : def . depends ) * / {
rank: 432
score: 99.11886596679688
patch: for ( Var s : def . depends && def . depends , ) {
rank: 432
score: 99.10008704144022
patch: if ( def != null ) { System . out . println ( $STRING$ . to CaMeL String ( ) ) ;
rank: 432
score: 99.02436828613281
patch: Var s : for ( Var s : def . depends ) { ) {
rank: 433
score: 99.32424094460227
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL In ( ) ) ) {
rank: 433
score: 99.29348415798611
patch: if ( js CaMeL Scope != null || s . scope != js CaMeL Scope ) {
rank: 433
score: 99.28876091452206
patch: Definition def = state . get CaMeL In ( ) . depends ( null ) ;
rank: 433
score: 99.25359344482422
patch: for ( Node < Var > s : n . depends CaMeL On ) {
rank: 433
score: 99.24142690805289
patch: for ( Var 1 > s : def . depends ) {
rank: 433
score: 99.23465670072116
patch: for ( Var s : def . scope . depends ) {
rank: 433
score: 99.21402681790866
patch: if ( state . get CaMeL Scope ( ) != null )
rank: 433
score: 99.11885579427083
patch: for ( Var s : def . depends ( ) . depends ( s ) ) {
rank: 433
score: 99.02393517127403
patch: for ( String s : def . depends ( ) ) {
rank: 434
score: 99.32408040364584
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( s . get CaMeL Variable CaMeL Name ( ) ) ) )
rank: 434
score: 99.29347922585227
patch: Attribute def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 434
score: 99.2874755859375
patch: for ( Var s : def . get CaMeL Long ( name ) ) {
rank: 434
score: 99.25299835205078
patch: for ( Visitor < Var > def : def . depends CaMeL On ) {
rank: 434
score: 99.24061414930556
patch: for ( Flow CaMeL State < Node > s : def . depends ( ) ) {
rank: 434
score: 99.23426106770833
patch: for ( Definition def : state . get CaMeL In ( ) ) {
rank: 434
score: 99.21360473632812
patch: if ( s . scope != null ) {
rank: 434
score: 99.11811828613281
patch: for ( Var s != ( Var s : def . depends ) ) {
rank: 434
score: 99.0994403545673
patch: for ( Var [ ] def : def . get ) {
rank: 434
score: 99.02389090401786
patch: System . out . println ( $STRING$ + s . depends ) {
rank: 435
score: 99.3239215353261
patch: for ( Var s : n . depends CaMeL On ( s . depends CaMeL On ( def ) ) ) {
rank: 435
score: 99.29347922585227
patch: String depends = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 435
score: 99.24025315504808
patch: for ( Var s > def : state . depends ) {
rank: 435
score: 99.23379516601562
patch: for ( Var def : state . get CaMeL In ( ) . depends )
rank: 435
score: 99.21344866071429
patch: if ( def == null )
rank: 435
score: 99.11787109375
patch: for ( Var s : def . depends || def , depends ) {
rank: 435
score: 99.09933471679688
patch: for ( Iterator < Var > 1 > 0 : def . depends ) {
rank: 435
score: 99.02322823660714
patch: for ( Var s : def . depends ( $NUMBER$ ) ) {
rank: 436
score: 99.32372205010776
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def . get CaMeL Type ( ) ) ) ) {
rank: 436
score: 99.25272369384766
patch: for ( Var > s : def . depends CaMeL On ( def ) )
rank: 436
score: 99.23372395833333
patch: for ( Definition def : n . get CaMeL Annotation ( ) ) {
rank: 436
score: 99.21306501116071
patch: if ( n . get CaMeL In ( ) != null ) {
rank: 436
score: 99.11781663161058
patch: for ( Var depends : def . depends . depends ) {
rank: 436
score: 99.09930826822917
patch: if ( def != null ) { return s . depends ) ; }
rank: 437
score: 99.32356063179348
patch: for ( Var s : def . depends CaMeL On ( this ) . depends CaMeL On ( this ) ) {
rank: 437
score: 99.29334605823864
patch: if ( s . scope != js CaMeL Scope )
rank: 437
score: 99.25254991319444
patch: for ( Var s : def . depends CaMeL On ( ( Var ) ) ) {
rank: 437
score: 99.23336791992188
patch: for ( Must CaMeL Def : n . depends ) {
rank: 437
score: 99.21272786458333
patch: if ( state . depends CaMeL On ( ) ) {
rank: 437
score: 99.11767578125
patch: for ( Var s : 0 . depends ) { def = def . depends ) ;
rank: 437
score: 99.09917853860294
patch: for ( Var s : def . depends ) { def = def . depends ;
rank: 437
score: 99.02298409598214
patch: for ( Var s : node . depends ( s ) ) {
rank: 438
score: 99.29261067708333
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope )
rank: 438
score: 99.23971792367789
patch: for ( Branch s : def . depends ( ) ) {
rank: 438
score: 99.0990680197011
patch: for ( Var s : def . depends ( ) . depends ( ) . to CaMeL String ( ) ) {
rank: 438
score: 99.02281901041667
patch: for ( Var s : def . depends ) def . depends ) }
rank: 439
score: 99.29255814985795
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL Type ( ) ;
rank: 439
score: 99.25234646267361
patch: for ( Var s : def . depends ) { def . depends CaMeL On ) ;
rank: 439
score: 99.23103841145833
patch: for ( Node s : state . get CaMeL Vars ( ) ) {
rank: 439
score: 99.21030099051339
patch: Definition def = js CaMeL Scope . get CaMeL Annotation ( ) ;
rank: 439
score: 99.11749267578125
patch: for ( Var s : def . depends && def . depends $NUMBER$ ) {
rank: 439
score: 99.09855651855469
patch: for ( Var s : def . get CaMeL Var ( ) . depends )
rank: 439
score: 99.02278645833333
patch: System . out . println ( $STRING$ + s ) ;
rank: 440
score: 99.29237767269737
patch: for ( Var s : def . js CaMeL Scope . get CaMeL Node ( ) ) {
rank: 440
score: 99.28556060791016
patch: for ( Flow CaMeL State < Must CaMeL Def > state . depends ) {
rank: 440
score: 99.25220489501953
patch: for ( Var n : n . depends CaMeL On ( ) ) { {
rank: 440
score: 99.23867797851562
patch: for ( Flow CaMeL State < Node > n : state . depends ) {
rank: 440
score: 99.2306137084961
patch: for ( Var s : def . get CaMeL Scope ( ) ) { {
rank: 440
score: 99.2100830078125
patch: for ( Var s : def . get CaMeL Default ( ) )
rank: 440
score: 99.11726209852431
patch: for ( Var s : null . depends ) { def = def . depends ) ;
rank: 440
score: 99.02197265625
patch: for ( Var s : def . depends ) { . depends ) {
rank: 441
score: 99.29204915364583
patch: if ( def != null || def . scope != js CaMeL Scope )
rank: 441
score: 99.2855224609375
patch: for ( T s : def . get CaMeL Annotation ( ) ) {
rank: 441
score: 99.20974295479911
patch: Definition [ ] def = state . get CaMeL In ( ) ;
rank: 441
score: 99.11721622242646
patch: / * for ( Var s : def . depends && def . depends ) {
rank: 441
score: 99.021484375
patch: for ( Var s : def . depends null ) {
rank: 442
score: 99.32238348599138
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s . get CaMeL Var ( name ) ) ) {
rank: 442
score: 99.29167175292969
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope ;
rank: 442
score: 99.25211588541667
patch: for ( Var s : def . depends CaMeL On ( name , {
rank: 442
score: 99.23760516826923
patch: for ( Var s : def . depends > 1 ) {
rank: 442
score: 99.22996419270834
patch: for ( Node s : state . get CaMeL Annotation ( ) ) {
rank: 442
score: 99.2077407836914
patch: if ( state == null ) {
rank: 442
score: 99.11712646484375
patch: for ( Var s : def . depends && ) {
rank: 442
score: 99.02110706676136
patch: Var s : def = def . depends ) ;
rank: 443
score: 99.3219881924716
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( def ) ) {
rank: 443
score: 99.29165167557566
patch: if ( js CaMeL Scope != js CaMeL Scope && def . scope != js CaMeL Scope )
rank: 443
score: 99.25185546875
patch: for ( Var target : def . depends CaMeL On ( ) ) {
rank: 443
score: 99.20683149857955
patch: for ( Var s -- : def . depends )
rank: 443
score: 99.11682807074652
patch: Var s : for ( Var s : def . depends && def . depends ) {
rank: 443
score: 99.0205829326923
patch: for ( Var s : def . depends ) for null {
rank: 444
score: 99.32179953835227
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( scope ) ) )
rank: 444
score: 99.29112659801136
patch: if ( = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 444
score: 99.25179850260416
patch: for ( Var s : def . depends CaMeL On ( ) ) )
rank: 444
score: 99.236767578125
patch: for ( Var 1 : def . depends CaMeL On ( ) ) {
rank: 444
score: 99.2296875
patch: Var def = state . get CaMeL Annotation ( use CaMeL Node ) ;
rank: 444
score: 99.20634321732955
patch: for ( Var s ++ : def . depends )
rank: 444
score: 99.1167743389423
patch: for ( Var s : def . depends , true ) {
rank: 444
score: 99.09722493489583
patch: if ( def != null ) { return ( def . depends ) ;
rank: 444
score: 99.02051653180804
patch: if ( def != null || s . depends != null ) {
rank: 445
score: 99.32169342041016
patch: for ( Var s : def . depends CaMeL On ( filter ) ) {
rank: 445
score: 99.29108629728618
patch: return def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( js CaMeL Scope ) ;
rank: 445
score: 99.28314615885417
patch: for ( Var s : n . get CaMeL Value ( ) ) {
rank: 445
score: 99.25151062011719
patch: List < Var > s = def . depends CaMeL On ( def ) ;
rank: 445
score: 99.22962188720703
patch: for ( State < Must CaMeL Def > state : def . depends ) {
rank: 445
score: 99.20514787946429
patch: if ( state . get CaMeL Scope ( ) == null ) {
rank: 445
score: 99.11616654829545
patch: for ( Var s : false . depends ) {
rank: 445
score: 99.09708658854167
patch: Var s = def . depends ( def . depends ( def . depends ( s ) ) ) ;
rank: 445
score: 99.02041391225961
patch: for ( Map . Var s : def . depends ) {
rank: 446
score: 99.32139078776042
patch: for ( Var s : n . depends CaMeL On ( s . depends ) ) {
rank: 446
score: 99.2902599516369
patch: return def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) . depends ) ;
rank: 446
score: 99.25119018554688
patch: for ( Var name : n . depends CaMeL On ( def ) ) {
rank: 446
score: 99.23600006103516
patch: for ( Flow CaMeL State < Node > s : n . depends ) {
rank: 446
score: 99.205078125
patch: if ( state != n . get CaMeL In ( ) ) {
rank: 446
score: 99.11603190104167
patch: for ( Var s : def . depends ? s . depends ) {
rank: 446
score: 99.0968017578125
patch: for ( Var s : def . depends ) { def = parent . depends ) {
rank: 446
score: 99.02025428185097
patch: for ( Var s ? def : def . depends ) {
rank: 447
score: 99.32121007582721
patch: for ( Var s : def . depends CaMeL On ( s , true ) )
rank: 447
score: 99.28202311197917
patch: for ( Var s : def . get CaMeL In ( ) ) return true ; }
rank: 447
score: 99.23553466796875
patch: for ( Flow CaMeL State < ? > s : def . depends ) {
rank: 447
score: 99.20368303571429
patch: for ( Var s : def . contains ( name ) ) {
rank: 447
score: 99.11572265625
patch: for ( Var s : def != null ) {
rank: 447
score: 99.09658377511161
patch: if ( def != null ) def = def . depends ) {
rank: 448
score: 99.32106119791666
patch: for ( int s = 0 ; s < def . depends ) {
rank: 448
score: 99.28968394886364
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope . get CaMeL Annotation ( ) ;
rank: 448
score: 99.25102887834821
patch: for ( Visitor < Var > s : def . depends ) {
rank: 448
score: 99.11549886067708
patch: for ( Var s : null . depends ( s . depends ) . depends ) {
rank: 448
score: 99.09647623697917
patch: Var s = def . depends ) ; for ( Var s : def . depends )
rank: 448
score: 99.01831926618304
patch: for ( String s : def . depends ( def ) ) {
rank: 449
score: 99.32020635190217
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) . depends )
rank: 449
score: 99.2888516512784
patch: return js CaMeL Scope != null ? js CaMeL Scope . get CaMeL In ( ) : js CaMeL Scope ;
rank: 449
score: 99.22784016927083
patch: for ( Node def : n . get CaMeL In ( ) ) {
rank: 449
score: 99.20282854352679
patch: for ( Node s : def . get CaMeL In ( ) )
rank: 449
score: 99.11527193509616
patch: for ( Var s : 0 . depends , depends ) {
rank: 449
score: 99.09625922309027
patch: if ( def != null && def . get CaMeL Value ( ) != null ) {
rank: 449
score: 99.018310546875
patch: for ( Var s : get CaMeL Var ( ) ) {
rank: 450
score: 99.27997504340277
patch: Definition def = state . get CaMeL Annotation ( ) . get CaMeL In ( ) ;
rank: 450
score: 99.25070190429688
patch: for ( Var >= 0 : def . depends CaMeL On ( ) ) {
rank: 450
score: 99.23444959852431
patch: Definition def = def . get CaMeL In ( ) . get CaMeL Annotation ( ) ;
rank: 450
score: 99.22683919270834
patch: for ( Var def : n . get CaMeL Def ( ) ) {
rank: 450
score: 99.2015380859375
patch: if ( state . get CaMeL Node ( ) != null ) {
rank: 450
score: 99.11516256893383
patch: for ( Var s : def == null ? null : def . depends ) {
rank: 450
score: 99.09617978050595
patch: Var s = def . depends ) ; for ( Var s : def . depends . depends . )
rank: 450
score: 99.01810709635417
patch: if ( def == null ) { def = def . depends ) ;
rank: 451
score: 99.31981580010776
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( s . get CaMeL Name ( ) ) ) ) {
rank: 451
score: 99.28871372767857
patch: if ( state . get CaMeL In ( ) . scope != js CaMeL Scope ) { return true ;
rank: 451
score: 99.25067816840277
patch: / * * for ( Var s : def . depends CaMeL On ( def ) )
rank: 451
score: 99.20140584309895
patch: Definition def = state . get CaMeL Type ( ) ;
rank: 451
score: 99.09610595703126
patch: for ( Var s : def . depends ) { def = this . def . depends ) ;
rank: 451
score: 99.0177471454327
patch: for ( Object s : def . depends . depends ) {
rank: 452
score: 99.31971807065217
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( ) ) . depends )
rank: 452
score: 99.2885509672619
patch: result = state . get CaMeL In ( ) . reaching CaMeL Def . get ( $STRING$ ) ;
rank: 452
score: 99.27969699435764
patch: for ( Var s : def . depends ( get CaMeL Cfg ( ) ) ) {
rank: 452
score: 99.2503662109375
patch: for ( Var s : def . get depends CaMeL On ( ) ) {
rank: 452
score: 99.232177734375
patch: for ( Var 1 def : def . depends ) {
rank: 452
score: 99.2261474609375
patch: for ( Var s : def . get CaMeL Annotation . depends ) {
rank: 452
score: 99.20139567057292
patch: Definition def = s . get CaMeL In ( ) ;
rank: 452
score: 99.114794921875
patch: for ( Var s : def . depends , def , depends ) {
rank: 452
score: 99.09559733072916
patch: if ( s != null ) { return def . depends ) ; }
rank: 452
score: 99.01702411358173
patch: / * for ( Var s : def . depends ) true
rank: 453
score: 99.28848876953126
patch: List < Must CaMeL Def > state = n . get CaMeL Annotation ( ) . depends ) ;
rank: 453
score: 99.2796875
patch: for ( Var s : def . get CaMeL String ( ) ) {
rank: 453
score: 99.25033804086539
patch: for ( Node s : def . depends CaMeL On ) {
rank: 453
score: 99.23190743582589
patch: for ( Var s > s ++ : def . depends ) {
rank: 453
score: 99.22582194010417
patch: for ( Node def : state . get CaMeL Annotation ( ) ) {
rank: 453
score: 99.20118204752605
patch: Definition def = state . get CaMeL Scope ( ) ;
rank: 453
score: 99.09544020432692
patch: for ( Var s : def . get CaMeL Method ) {
rank: 453
score: 99.01693021334134
patch: for ( Var s : def . depends , parent ) {
rank: 454
score: 99.31948020241477
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( type ) ) )
rank: 454
score: 99.28813825334821
patch: if ( def != state . get CaMeL Annotation ( ) ) {
rank: 454
score: 99.2498779296875
patch: for ( Var s : n . get CaMeL Methods ( ) ) { {
rank: 454
score: 99.23168182373047
patch: for ( Node < Must CaMeL Def > state : def . depends ) {
rank: 454
score: 99.22475760323661
patch: Definition def = state . get CaMeL In ( ) . scope ;
rank: 454
score: 99.2008768717448
patch: for ( Var s : def . length ( ) )
rank: 454
score: 99.11393229166667
patch: for ( Var s : def . depends , def Var s ) {
rank: 454
score: 99.09532099184783
patch: for ( Var s : def . depends ) { System . out . println ( def . depends ) ; }
rank: 454
score: 99.01632254464286
patch: for ( Var s : def . depends ) { Var s ;
rank: 455
score: 99.31913425611413
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( def ) ) ) {
rank: 455
score: 99.27769368489584
patch: for ( Type s : def . get CaMeL Annotation ( ) ) {
rank: 455
score: 99.24951850043402
patch: for ( Var s : def . depends ) { Var s = def . depends ;
rank: 455
score: 99.11387532552084
patch: for ( Var s : 0 . depends != def . depends ) {
rank: 455
score: 99.09530436197916
patch: while ( def != null ) { def = def . depends ) {
rank: 455
score: 99.01612345377605
patch: for ( Var s : def . depends ) ) {
rank: 456
score: 99.31910241168478
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( line ) ) ) {
rank: 456
score: 99.28786399147727
patch: for ( Var s : def . reaching CaMeL Def . get CaMeL Node ( ) . depends ) {
rank: 456
score: 99.27707143930289
patch: for ( Var s : def . get CaMeL Def ) {
rank: 456
score: 99.24947916666666
patch: for ( Var s : def . get CaMeL Refs ( ) ) {
rank: 456
score: 99.23061697823661
patch: for ( Var s : def . depends $NUMBER$ > 0 ) {
rank: 456
score: 99.2244384765625
patch: for ( Var s : n . get CaMeL Definition ( ) ) {
rank: 456
score: 99.1136474609375
patch: if ( def != ) { for ( Var s : def . depends ) {
rank: 456
score: 99.09482828776042
patch: if ( def != null ) { System . err . println ( $STRING$ ) ; }
rank: 456
score: 99.01577524038461
patch: Var s : def . depends CaMeL On ( s ) ;
rank: 457
score: 99.24918365478516
patch: for ( Var s : def . depends CaMeL On ) { if ( )
rank: 457
score: 99.22416178385417
patch: for ( Var s : new Var ( use CaMeL Node ) ) {
rank: 457
score: 99.19964130108173
patch: if ( state . get CaMeL Var ( ) != null )
rank: 457
score: 99.1133282001202
patch: for ( Var s : def . depends && for ) {
rank: 457
score: 99.09481811523438
patch: for ( Var s : def . depends ) { if ( depends ) {
rank: 457
score: 99.0156021118164
patch: for ( Var s : def . depends ) && def . depends ) {
rank: 458
score: 99.31892225477431
patch: for ( Node < Node > def : def . get CaMeL In ( ) ) {
rank: 458
score: 99.28771391369048
patch: for ( Var s : def . reaching CaMeL Def . depends ( js CaMeL Scope ) ) {
rank: 458
score: 99.22369939630681
patch: for ( Token s : def . depends ) {
rank: 458
score: 99.198486328125
patch: for ( Var s : def . depends ( null ) )
rank: 458
score: 99.11296251085069
patch: for ( Var s : def . depends ( s . depends ) . get ) {
rank: 458
score: 99.09469839242789
patch: return def == null ? null : def . depends ) ;
rank: 458
score: 99.01524135044643
patch: for ( Var s : def . depends . depends . depends )
rank: 459
score: 99.31843705610795
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( this ) ) {
rank: 459
score: 99.2864990234375
patch: if ( def != js CaMeL Scope && def . scope != js CaMeL Scope )
rank: 459
score: 99.27619086371527
patch: for ( for ( Var s : def . get CaMeL In ( ) ) ) {
rank: 459
score: 99.24885389539931
patch: for ( Var s : def . get ) { Var s = s . depends )
rank: 459
score: 99.23005894252232
patch: if ( def != null && def . scope != null ) {
rank: 459
score: 99.22314453125
patch: for ( Var s : ( Var s . depends ) ) {
rank: 459
score: 99.1129619891827
patch: / else for ( Var s : def . depends ) {
rank: 459
score: 99.0946044921875
patch: for ( Var s : def . depends ) { return ( def . depends ) {
rank: 459
score: 99.01509232954545
patch: for ( E s : def . depends ) {
rank: 460
score: 99.31838650173611
patch: for ( Var s : def . depends CaMeL On ( s . type ) ) {
rank: 460
score: 99.28642134232955
patch: String def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 460
score: 99.19797926682692
patch: Definition def = state . get CaMeL In ( ) ) ;
rank: 460
score: 99.0939190204327
patch: for ( Var [ ] list : def . depends ) {
rank: 460
score: 99.01461356026786
patch: for ( Var s : def . depends != ( ) ) {
rank: 461
score: 99.3183260830966
patch: for ( Var s : def . depends CaMeL On ( s ) . depends CaMeL On ( def ) )
rank: 461
score: 99.24862331814236
patch: for ( Var s : def . depends CaMeL On ( ( Var ) s ) )
rank: 461
score: 99.22927856445312
patch: for ( Must CaMeL Def < Node > def : def . depends ) {
rank: 461
score: 99.09366548978366
patch: for ( Var s : def . get CaMeL Arg ) {
rank: 461
score: 99.0145596590909
patch: for ( Double s : def . depends ) {
rank: 462
score: 99.28611924913194
patch: for ( Var s : def . depends && s . scope != js CaMeL Scope )
rank: 462
score: 99.24842071533203
patch: for ( Var s : def . get CaMeL Methods ( ) ) { {
rank: 462
score: 99.22917175292969
patch: for ( Flow CaMeL State < Var > s : state . depends ) {
rank: 462
score: 99.11267903645833
patch: for ( Var s : def . depends && def . matches ) {
rank: 462
score: 99.09365234375
patch: if ( def instanceof Var ) { return def . depends ) ; }
rank: 462
score: 99.0143798828125
patch: for ( Var s : def . depends . depends . depends . {
rank: 463
score: 99.31807084517045
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Method ( ) ) ) {
rank: 463
score: 99.24834442138672
patch: for ( Var s : def . depends CaMeL On ( def ) { {
rank: 463
score: 99.22823333740234
patch: for ( Graph CaMeL Node < Node > n : def . depends ) {
rank: 463
score: 99.22112274169922
patch: for ( Var s : n . get CaMeL In ( ) . depends )
rank: 463
score: 99.19752720424107
patch: for ( Var s : def . equals ( null ) ) {
rank: 463
score: 99.1122314453125
patch: for ( Var s : def . depends 1 ( def ) ) {
rank: 463
score: 99.01398577008929
patch: for ( Var s : def . depends , def != null {
rank: 464
score: 99.31795828683036
patch: for ( Var s : def . get CaMeL Depth ( ) )
rank: 464
score: 99.2479248046875
patch: for ( Var s : n . get ) { Var s = s . depends )
rank: 464
score: 99.22103678385416
patch: if ( s . scope == js CaMeL Scope ) { return true ;
rank: 464
score: 99.19742257254464
patch: if ( s . get CaMeL Annotation ( ) == null ) {
rank: 464
score: 99.11117553710938
patch: Var s = def . depends ) ; if ( def != null ) {
rank: 464
score: 99.09279913651316
patch: for ( Var s : def . depends ) { def = def . depends ) break {
rank: 464
score: 99.01395357572116
patch: for ( Var s : new : def . depends ) {
rank: 465
score: 99.31790161132812
patch: for ( Node < Var > def : def . depends CaMeL On ( {
rank: 465
score: 99.28496759588069
patch: Resolver def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 465
score: 99.274560546875
patch: for ( Var s : s . get CaMeL Scope ( ) ) {
rank: 465
score: 99.1111309344952
patch: for ( Var s : null != def . depends ) {
rank: 465
score: 99.09258711965461
patch: for ( Var s : def . depends ) { Var s : def . depends . {
rank: 465
score: 99.0135028545673
patch: Var s : if ( def . depends != null ) {
rank: 466
score: 99.31776012073864
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( value ) ) )
rank: 466
score: 99.27430013020833
patch: for ( Branch s : def . get CaMeL Annotation ( ) ) {
rank: 466
score: 99.19590541294643
patch: if ( state . get CaMeL Parent ( ) != null ) {
rank: 466
score: 99.1109130859375
patch: for ( Var s : def . depends && this . depends ) {
rank: 467
score: 99.3173297384511
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( def ) ) ) {
rank: 467
score: 99.2839587983631
patch: for ( Var s : def . js CaMeL Scope . get CaMeL Annotation ( ) . depends ) {
rank: 467
score: 99.27400970458984
patch: Definition def = state . get CaMeL In ( ) . get ( ) ;
rank: 467
score: 99.22679985894098
patch: if ( def != null && def . get CaMeL Annotation ( ) == null ) {
rank: 467
score: 99.21924641927083
patch: for ( Branch def : def . get CaMeL In ( ) ) {
rank: 467
score: 99.19564208984374
patch: for ( Var s : def . add )
rank: 467
score: 99.11048719618056
patch: for ( Var s = def . depends ) { if ( def . depends ) {
rank: 467
score: 99.01303536551339
patch: Var s : for ( Var [ : def . depends ) {
rank: 468
score: 99.31699440696023
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( this ) ) )
rank: 468
score: 99.28383567116477
patch: String name = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 468
score: 99.24659729003906
patch: for ( Definition s : def . depends CaMeL On ( def ) ) {
rank: 468
score: 99.21879069010417
patch: for ( Var s : parent . get CaMeL In ( ) ) {
rank: 468
score: 99.19557407924107
patch: for ( Var s : def . equals ( def ) ) {
rank: 468
score: 99.01222330729166
patch: / * for ( Var s : def . depends ) return null ;
rank: 469
score: 99.24654541015624
patch: if ( def == null ) return false ;
rank: 469
score: 99.22635650634766
patch: if ( state . get CaMeL In ( ) . scope == null ) {
rank: 469
score: 99.19537353515625
patch: if ( def != null . get CaMeL In ( ) ) {
rank: 469
score: 99.10976993336396
patch: for ( Var s : def . depends ) return ( def . depends ) ;
rank: 469
score: 99.09208540482955
patch: for ( Var s : def . depends ) { def = def . depends . depends . depends . {
rank: 469
score: 99.01041085379464
patch: for ( Var s : def . depends ) def = null ;
rank: 470
score: 99.31640625
patch: for ( Var s : def . depends CaMeL On ( name ) . depends CaMeL On ( name ) ) {
rank: 470
score: 99.24651692708333
patch: for ( Var s : n . depends CaMeL On ( this ) )
rank: 470
score: 99.21857158954327
patch: for ( Var def : def . depends CaMeL On ) {
rank: 470
score: 99.10941569010417
patch: for ( Var s != null ? n : def . depends ) {
rank: 470
score: 99.09207356770834
patch: for ( Var s : def . depends ( def . depends ) )
rank: 470
score: 99.0103290264423
patch: for ( for ( String s : def . depends ) {
rank: 471
score: 99.27181570870536
patch: for ( Var s : def . depends ) return false ; }
rank: 471
score: 99.22482096354166
patch: for ( Var s : def . depends CaMeL On . length ) {
rank: 471
score: 99.218017578125
patch: for ( Node s : def . get CaMeL Node ( ) ) {
rank: 471
score: 99.19453648158482
patch: for ( Var s : def . get CaMeL Length ( ) )
rank: 471
score: 99.10928683810764
patch: for ( Var s : 0 ) {
rank: 471
score: 99.09181043836806
patch: for ( Var s : def . depends ) return def . depends ( depends ) ;
rank: 471
score: 99.01018608940973
patch: for ( Var s : values ) {
rank: 472
score: 99.28219168526786
patch: try { Definition def = state . get CaMeL In ( ) . reaching CaMeL Def . get (
rank: 472
score: 99.27093505859375
patch: Definition def = state . get CaMeL In ( ) . def ( ) ;
rank: 472
score: 99.2461929321289
patch: for ( Var s : def . depends CaMeL On ) { def . {
rank: 472
score: 99.22465684678819
patch: if ( state != null && state . get CaMeL Annotation ( ) != null ) {
rank: 472
score: 99.10906982421875
patch: for ( Var s ] : def . depends && def . get ) {
rank: 472
score: 99.09156212439903
patch: for ( Var s : def . get CaMeL Next ) {
rank: 472
score: 99.00975452769886
patch: for ( Var s : def . resolve ) {
rank: 473
score: 99.31578826904297
patch: for ( Var s : def . depends CaMeL On ( parent ) ) {
rank: 473
score: 99.2820068359375
patch: if ( s . get CaMeL Annotation ( ) != state . get CaMeL In ( ) ) {
rank: 473
score: 99.27086639404297
patch: for ( Var 1 s : def . get CaMeL In ( ) ) {
rank: 473
score: 99.24613952636719
patch: for ( Visitor s : def . depends CaMeL On ( def ) ) {
rank: 473
score: 99.1082534790039
patch: for ( Var s : def . depends ( depends ) . depends ) {
rank: 474
score: 99.31575775146484
patch: for ( Node < Node > s : def . depends CaMeL On ( {
rank: 474
score: 99.2813784950658
patch: for ( Var s : state . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ) {
rank: 474
score: 99.27049967447917
patch: for ( Var s : def . get CaMeL Desc ( ) ) {
rank: 474
score: 99.2461181640625
patch: Var s = def . depends CaMeL On ( def , false ) ;
rank: 474
score: 99.22350202287946
patch: for ( Var s : def . depends 1 > 0 ) {
rank: 474
score: 99.21703338623047
patch: for ( Var s : state . get CaMeL Annotation ( ) . depends )
rank: 474
score: 99.19366455078125
patch: for ( Var s : def . get CaMeL Id ( ) )
rank: 474
score: 99.10794771634616
patch: for ( Var s : 0 . depends $NUMBER$ null ) {
rank: 474
score: 99.09021935096153
patch: if ( ! s . is CaMeL Empty ( ) ) {
rank: 474
score: 99.009130859375
patch: if ( def . depends != null ) {
rank: 475
score: 99.31556803385416
patch: for ( Var s : n . depends CaMeL On ( s ) )
rank: 475
score: 99.28096277573529
patch: if ( js CaMeL Scope . scope != js CaMeL Scope ) { return true ;
rank: 475
score: 99.27020263671875
patch: Definition for ( Var s : def . get CaMeL In ( ) ) {
rank: 475
score: 99.24607747395834
patch: for ( Var n : def . get CaMeL Methods ( ) ) {
rank: 475
score: 99.22333840762867
patch: Definition def = state . get CaMeL In ( ) ; Definition def = null ;
rank: 475
score: 99.216796875
patch: if ( def == js CaMeL Scope ) { return false ; }
rank: 475
score: 99.19356863839286
patch: for ( Var s : state . get CaMeL Def ( ) )
rank: 475
score: 99.10782623291016
patch: for ( Var s : def . depends && s . depends == ) {
rank: 475
score: 99.09019068667763
patch: for ( Var s : def . depends ( def . depends ( s ) ) ) {
rank: 475
score: 99.00884246826172
patch: for ( Var s : def . depends == null ? s . depends )
rank: 476
score: 99.31550399116848
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( scope ) ) ) {
rank: 476
score: 99.24433898925781
patch: for ( Var s : def . depends CaMeL On ( Var ) ) {
rank: 476
score: 99.21622408353366
patch: for ( Var s : ( def . depends ) ) {
rank: 476
score: 99.19287981305804
patch: if ( s . get CaMeL In ( ) == null ) {
rank: 476
score: 99.09003092447917
patch: if ( def != null ) Var s = def . depends ) ;
rank: 476
score: 99.00863882211539
patch: finally { for ( Var s : def . depends ) {
rank: 477
score: 99.3153963955966
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Declaration ( ) ) ) {
rank: 477
score: 99.28089488636364
patch: for ( Var s : def . depends + js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 477
score: 99.27003580729166
patch: for ( Var s : node . get CaMeL In ( ) ) {
rank: 477
score: 99.24388020833334
patch: / * * for ( Var s : n . depends ) * /
rank: 477
score: 99.19286170372597
patch: for ( Var s : state . depends ( ) ) {
rank: 477
score: 99.10703938802084
patch: for ( Var s : def . depends != null Var depends ) {
rank: 477
score: 99.08978740985577
patch: if ( def == null ) { break ; } else {
rank: 477
score: 99.00801304408482
patch: for ( Var s : def . depends ) def . depends )
rank: 478
score: 99.31525213068181
patch: for ( Node s : def . depends CaMeL On ( def . depends CaMeL On ( ) ) ) {
rank: 478
score: 99.28075009300595
patch: / * if ( s . scope != js CaMeL Scope . get CaMeL Var ( name ) ) {
rank: 478
score: 99.0896060341283
patch: for ( Var s : def . depends ) { Var s = node . depends ) ;
rank: 478
score: 99.00703430175781
patch: for ( Var s : ( ( Var ) s . depends ) ) {
rank: 479
score: 99.3152386209239
patch: for ( Var s : def . depends CaMeL On ( s . get CaMeL Var ( target ) ) ) {
rank: 479
score: 99.28072509765624
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( this ) ;
rank: 479
score: 99.24313354492188
patch: for ( Var target : n . depends CaMeL On ( def ) ) {
rank: 479
score: 99.22122531467014
patch: Definition def = state != null ? state . get CaMeL In ( ) : null ;
rank: 479
score: 99.21349283854167
patch: for ( Definition s : state . get CaMeL Annotation ( ) ) {
rank: 479
score: 99.19142368861607
patch: for ( Var s : def . get CaMeL Types ( ) )
rank: 479
score: 99.106787109375
patch: for ( Var s : def . depends && depends . depends ) {
rank: 480
score: 99.31517444957386
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL On ( this ) ) {
rank: 480
score: 99.2806729403409
patch: Member def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 480
score: 99.26925320095486
patch: for ( Var s : def . depends ( get CaMeL Annotation ( ) ) ) {
rank: 480
score: 99.2425308227539
patch: for ( Var def : n . depends CaMeL On ( def ) ) {
rank: 480
score: 99.22063849954044
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL Def (
rank: 480
score: 99.19137807992789
patch: for ( Object s : def . depends ( ) ) {
rank: 480
score: 99.10649278428819
patch: for ( Var s : def . depends ) { while ( def . depends ) {
rank: 480
score: 99.00670276988636
patch: for ( Var s : id . depends ) {
rank: 481
score: 99.31502632472827
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( value ) ) ) {
rank: 481
score: 99.28040313720703
patch: return state . get CaMeL In ( ) . get CaMeL Annotation ( ) ;
rank: 481
score: 99.24228341238839
patch: for ( Var s : n . depends ( ) ) { {
rank: 481
score: 99.22059122721355
patch: if ( def . depends CaMeL On ( ) ) {
rank: 481
score: 99.21277727399554
patch: for ( Must CaMeL Def > state : n . depends ) {
rank: 481
score: 99.19071742466518
patch: for ( Var s : def . depends ( ) ) { }
rank: 481
score: 99.1064453125
patch: for ( Var s : def . depends , def def ) {
rank: 481
score: 99.08934326171875
patch: for ( Var s : def . depends ) return def . depends ( def . depends ) {
rank: 482
score: 99.31500922309027
patch: for ( Var s : def . depends CaMeL On ( s , this ) ) {
rank: 482
score: 99.2802734375
patch: if ( s . scope != js CaMeL Scope . js CaMeL Scope ) {
rank: 482
score: 99.26822916666667
patch: Definition def = n . get CaMeL In ( ) ;
rank: 482
score: 99.2422103881836
patch: for ( Var s : def . depends CaMeL On ) { def = )
rank: 482
score: 99.21213003305289
patch: for ( Var s : state . depends CaMeL On ) {
rank: 482
score: 99.19024658203125
patch: for ( Var s : def . get CaMeL Declaration ( ) )
rank: 483
score: 99.28013916015625
patch: for ( Var s : def . reaching CaMeL Def . get ( js CaMeL Scope ) )
rank: 483
score: 99.24201049804688
patch: for ( Var s : def . get )
rank: 483
score: 99.2200927734375
patch: for ( Reference s : def . depends CaMeL On ( ) ) {
rank: 483
score: 99.10472196691177
patch: for ( Var s : def . depends ) println ( def . depends ) .
rank: 483
score: 99.08877724095395
patch: for ( Var s : def . depends ) { Var n = def . depends ) ;
rank: 484
score: 99.31488591974431
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( init ) ) )
rank: 484
score: 99.2800537109375
patch: if ( state . scope != js CaMeL Scope ) { return true ;
rank: 484
score: 99.26787109375
patch: for ( String s : def . get CaMeL Vars ( ) ) {
rank: 484
score: 99.24127604166667
patch: if ( def . depends CaMeL On ( def ) ) return true ;
rank: 484
score: 99.21101888020833
patch: for ( Type s : state . get CaMeL In ( ) ) {
rank: 484
score: 99.08869086371527
patch: for ( Var s : def . depends ) { if ( def != null ) {
rank: 484
score: 99.00574840198864
patch: for ( float s : def . depends ) {
rank: 485
score: 99.31456801470588
patch: for ( Node < Node > def : def . get CaMeL In ( ) )
rank: 485
score: 99.27979800575658
patch: return js CaMeL Scope . get CaMeL In ( ) . scope != js CaMeL Scope ) ;
rank: 485
score: 99.24124348958334
patch: for ( Node s : n . depends CaMeL On ( ) ) {
rank: 485
score: 99.2105712890625
patch: for ( Var s : n . get CaMeL Annotation ( ) . depends )
rank: 485
score: 99.18963623046875
patch: Definition def = state . get CaMeL Definition ( ) ;
rank: 485
score: 99.10468401227679
patch: for ( Var s ] : def . depends . depends ) {
rank: 485
score: 99.08830430772569
patch: for ( Var s : def . depends ) { def = type . depends ) ;
rank: 485
score: 99.005712890625
patch: Var s : try { for ( Var s : def . depends )
rank: 486
score: 99.27962646484374
patch: return js CaMeL Scope != null ? js CaMeL Scope . get CaMeL In ( ) : null ;
rank: 486
score: 99.24121965680804
patch: for ( Var CaMeL Definition s : def . depends CaMeL On )
rank: 486
score: 99.21992631392045
patch: if ( state instanceof Must CaMeL Def > ) {
rank: 486
score: 99.10445404052734
patch: for ( Var s : def . depends ( s . get ) ) {
rank: 486
score: 99.0879794034091
patch: if ( def == null ) { System . out . println ( $STRING$ + def . depends ) ; }
rank: 486
score: 99.00569152832031
patch: Var s : for ( Var s : def . depends ) return null ;
rank: 487
score: 99.27960759943181
patch: if ( js CaMeL Scope != null ) return js CaMeL Scope . get CaMeL In ( ) . scope ;
rank: 487
score: 99.26665182674633
patch: for ( Var s : def . get CaMeL Scope ( ) ) return true ;
rank: 487
score: 99.21913364955357
patch: for ( Var s : def . depends CaMeL On 1 ) {
rank: 487
score: 99.18882533482143
patch: if ( state != n . get CaMeL Annotation ( ) ) {
rank: 487
score: 99.10444779829545
patch: for ( Var s : def . set ) {
rank: 487
score: 99.08796830610795
patch: for ( Var key : def . depends ) {
rank: 487
score: 99.00558471679688
patch: Var s : Var s : for ( Var s : def . depends )
rank: 488
score: 99.31266276041667
patch: for ( Var s : def . get s . depends CaMeL On ( ) ) {
rank: 488
score: 99.24090983072917
patch: for ( Var s : n . get CaMeL Depth ( ) ) {
rank: 488
score: 99.18882533482143
patch: if ( js CaMeL Scope . size ( ) != 0 ) {
rank: 488
score: 99.10420057508681
patch: for ( String s : def . depends ) { def = def . depends ) ;
rank: 489
score: 99.27951049804688
patch: return state . get CaMeL In ( ) . reaching CaMeL Def ( js CaMeL Scope ) ;
rank: 489
score: 99.2662124633789
patch: for ( Var s : def . get CaMeL Def ( $STRING$ ) ) {
rank: 489
score: 99.240673828125
patch: for ( Var [ ] def : def . depends CaMeL On ) {
rank: 489
score: 99.20848795572917
patch: for ( Var s : def [ false : def . depends ) {
rank: 489
score: 99.18860735212054
patch: while ( state . get CaMeL Annotation ( ) != null ) {
rank: 489
score: 99.10318697415866
patch: for ( Var s , null : def . depends ) {
rank: 489
score: 99.08749825613839
patch: if ( s != null ) { return def . depends ) ;
rank: 489
score: 99.00501360212054
patch: if ( s != null && s . depends != null ) {
rank: 490
score: 99.31253390842014
patch: for ( Var s : def . depends CaMeL On ( line CaMeL Number ) ) {
rank: 490
score: 99.2793856534091
patch: Node depends = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 490
score: 99.24048790564903
patch: Var s = def . get CaMeL Var ( name ) ;
rank: 490
score: 99.21665954589844
patch: if ( def != null && state . get CaMeL In ( ) ) {
rank: 490
score: 99.20747514204545
patch: for ( Var s : def . depends ) *
rank: 490
score: 99.18804931640625
patch: for ( Var s : def . get CaMeL Code ( ) )
rank: 490
score: 99.1030742938702
patch: for ( Var s : def . depends 1 null ) {
rank: 490
score: 99.08699544270833
patch: for ( Var s : def . depends ) { def = current . depends ) ;
rank: 491
score: 99.23993326822917
patch: for ( Var CaMeL Definition s : def . depends CaMeL On ( {
rank: 491
score: 99.2159423828125
patch: for ( Var s , Var s : def . depends ) {
rank: 491
score: 99.10305989583334
patch: Var s = null ; while ( s : def . depends ) {
rank: 491
score: 99.08641899956598
patch: for ( Var s : def . depends ) { def = s . get ) ;
rank: 491
score: 99.00483842329545
patch: for ( Var s : key . depends ) {
rank: 492
score: 99.31232653166118
patch: for ( Var s : def . depends CaMeL On ( s , def . depends ) )
rank: 492
score: 99.26565987723214
patch: for ( Var s : def . depends ) return true ; }
rank: 492
score: 99.23924037388393
patch: for ( Var s : n . depends ) { if ( )
rank: 492
score: 99.2156473795573
patch: if ( def . scope == js CaMeL Scope ) {
rank: 492
score: 99.2066650390625
patch: for ( Var def : get CaMeL Cfg ( ) . depends ) {
rank: 492
score: 99.18693403764205
patch: if ( reaching CaMeL Def != null ) {
rank: 492
score: 99.10247802734375
patch: for ( Var s : false ) {
rank: 492
score: 99.08634086277173
patch: for ( Var s : def . depends ) { s . depends . add ( this . depends ) ; }
rank: 493
score: 99.31169976128473
patch: for ( Var s : def . depends CaMeL On ( this ) . depends ) {
rank: 493
score: 99.27830810546875
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope ) { return true ; }
rank: 493
score: 99.23771362304687
patch: for ( Var n : def . depends )
rank: 493
score: 99.2066162109375
patch: for ( Var s : get CaMeL Node ( ) . depends ) {
rank: 493
score: 99.0042724609375
patch: for ( Var s : def . depends ) { System . {
rank: 494
score: 99.3115234375
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( this ) ) ) {
rank: 494
score: 99.27806507457386
patch: if ( def != null ) { state . get CaMeL In ( ) . reaching CaMeL Def . {
rank: 494
score: 99.26503092447916
patch: for ( Var s : def . get CaMeL Property ( ) ) {
rank: 494
score: 99.23540852864583
patch: for ( Var s : n . depends ) { Var s = {
rank: 494
score: 99.213916015625
patch: for ( Var s : def . depends CaMeL On ( ) ) ;
rank: 494
score: 99.18625313895089
patch: Definition def = js CaMeL Scope . get CaMeL Def ( ) ;
rank: 494
score: 99.1020263671875
patch: if ( def != null ) { def = def . depends ) ;
rank: 494
score: 99.08481852213542
patch: for ( Var def : def . depends ) { if ( def . depends ) {
rank: 494
score: 99.00409807477679
patch: for ( Var s : get CaMeL Var ( def ) ) {
rank: 495
score: 99.27774047851562
patch: final Must CaMeL Def > state = n . get CaMeL Annotation ( ) ;
rank: 495
score: 99.2649658203125
patch: for ( Var s : def . depends CaMeL On > null ) {
rank: 495
score: 99.235107421875
patch: for ( Node < Var > s : def . depends ) { {
rank: 495
score: 99.18613688151042
patch: Object def = state . get CaMeL In ( ) ;
rank: 495
score: 99.08469645182292
patch: for ( Var s : def . depends ) { if ( s . get ) {
rank: 495
score: 99.00376674107143
patch: for ( final Var s : def . depends != null ) {
rank: 496
score: 99.2777099609375
patch: for ( Var $NUMBER$ s def : def . depends ) {
rank: 496
score: 99.26487901475694
patch: for ( Var s : def . get CaMeL In ( ) . depends ) { }
rank: 496
score: 99.23436390269886
patch: if ( def != null && def != null )
rank: 496
score: 99.18584333147321
patch: for ( Var s : def . depends ( ) ) { ;
rank: 496
score: 99.10057654747597
patch: for ( Var s : def . equals ( ) ) {
rank: 496
score: 99.00310724431819
patch: for ( State s : def . depends ) {
rank: 497
score: 99.31064240828805
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( ) . depends ) )
rank: 497
score: 99.27763227982955
patch: Reduction def = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 497
score: 99.26474609375
patch: for ( Branch s : def . get CaMeL Def ( ) ) {
rank: 497
score: 99.21241173377403
patch: for ( Var s + 1 : state . depends ) {
rank: 497
score: 99.204296875
patch: for ( Definition def : n . get CaMeL In ( ) ) {
rank: 497
score: 99.18549053485577
patch: Flow CaMeL State < Must CaMeL Def >> state = null ;
rank: 497
score: 99.0839779502467
patch: if ( def != null ) { System . out . println ( def . depends ) ;
rank: 497
score: 99.00296456473214
patch: for ( Var s : def . depends && def == null {
rank: 498
score: 99.31025526258681
patch: for ( Var s : def . get . depends CaMeL On ( this ) ) {
rank: 498
score: 99.27742513020833
patch: if ( def != null || s . scope != js CaMeL Scope )
rank: 498
score: 99.26434733072917
patch: for ( Var s : s . get CaMeL Def ( ) ) {
rank: 498
score: 99.23341471354166
patch: if ( def != null && ! def . equals ( def ) )
rank: 498
score: 99.18483323317308
patch: if ( n . get CaMeL Annotation ( ) != null )
rank: 498
score: 99.10003662109375
patch: for ( Var s : def . depends != null Var ) {
rank: 498
score: 99.08379364013672
patch: if ( def == null ) { def = def . depends ) ; }
rank: 498
score: 99.0023526278409
patch: for ( ? def : def . depends ) {
rank: 499
score: 99.27725558810764
patch: if ( js CaMeL Scope != null || def . scope != js CaMeL Scope ) {
rank: 499
score: 99.26315104166666
patch: for ( Var s : def . get CaMeL Parts ( ) ) {
rank: 499
score: 99.23311941964286
patch: for ( Var s : def . get CaMeL Classes ( ) )
rank: 499
score: 99.21137029474431
patch: for ( Var 0 : def . depends ) {
rank: 499
score: 99.20263671875
patch: if ( s . scope ( ) != js CaMeL Scope ) {
rank: 499
score: 99.18404447115384
patch: if ( state . get CaMeL Definition ( ) != null )
rank: 499
score: 99.09982096354166
patch: for ( Var s : def . depends && depends != null ) {
rank: 499
score: 99.0836245888158
patch: for ( Var s : def . depends ) { Var type = def . depends ) ;
rank: 499
score: 99.00218709309895
patch: if ( def != null || s != null ) {
rank: 500
score: 99.30990780101104
patch: for ( Var s : def . depends ) { def = s . depends ;
rank: 500
score: 99.27725074404762
patch: result = state . get CaMeL In ( ) . reaching CaMeL Def . get ( scope ) ;
rank: 500
score: 99.2629903157552
patch: Definition def = n . get CaMeL Annotation ( ) ;
rank: 500
score: 99.18399752103366
patch: if ( s . equals ( js CaMeL Scope ) ) {
rank: 500
score: 99.09962681361607
patch: for ( Var s : def . depends ) println ( ) ;
rank: 500
score: 99.0832852450284
patch: for ( Var target : def . depends ) {
rank: 500
score: 99.00208391462054
patch: for ( Var s : def . depends ( id ) ) {
rank: 501
score: 99.30988875679348
patch: for ( Var s : def . depends CaMeL On ( s , def . depends CaMeL On ( ) ) )
rank: 501
score: 99.27718680245536
patch: if ( def == state . get CaMeL Annotation ( ) ) {
rank: 501
score: 99.2626220703125
patch: for ( Var s : def . get CaMeL Entry ( ) ) {
rank: 501
score: 99.23228102463942
patch: do { for ( Var s : def . depends ) {
rank: 501
score: 99.20895620492789
patch: for ( Must CaMeL Def n : state . depends ) {
rank: 501
score: 99.18178013392857
patch: if ( state != null && s . scope != null ) {
rank: 501
score: 99.09908621651786
patch: for ( Var s : def . depends == null Var ) {
rank: 501
score: 99.08326721191406
patch: for ( Var s : def . depends ) { def . depends ) }
rank: 501
score: 99.00171770368304
patch: for ( Var s : def . depends . depends . ) {
rank: 502
score: 99.3097412109375
patch: Var s = def . depends CaMeL On ( def . depends CaMeL On ( name ) ) ;
rank: 502
score: 99.27718098958333
patch: if ( js CaMeL Scope == js CaMeL Scope ) { return true ;
rank: 502
score: 99.23187662760417
patch: for ( Var n : n . get CaMeL Classes ( ) ) {
rank: 502
score: 99.18141526442308
patch: Flow CaMeL State < Must CaMeL Def > state = 0 ;
rank: 502
score: 99.09888805042614
patch: for ( Var s : def . filter ) {
rank: 502
score: 99.0831631747159
patch: for ( Var s : def . depends ) { System . out . println ( def . depends ) ;
rank: 502
score: 99.00120960582386
patch: Var s : if ( s == null ) {
rank: 503
score: 99.27717729048295
patch: for ( Var s : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( def ) ) {
rank: 503
score: 99.26221466064453
patch: for ( Var s : def . reaching CaMeL Def > 0 ) {
rank: 503
score: 99.20057091346153
patch: for ( Var s : get CaMeL Annotation ( ) ) {
rank: 503
score: 99.18140665690105
patch: for ( Var s : def . size ( ) )
rank: 503
score: 99.0984219637784
patch: for ( Var s = s . depends ) {
rank: 503
score: 99.0830965909091
patch: for ( Node type : def . depends ) {
rank: 504
score: 99.30928371263587
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( type ) ) ) {
rank: 504
score: 99.27705688476563
patch: final Flow CaMeL State < Must CaMeL Def > state = state . get CaMeL Annotation ( ) ;
rank: 504
score: 99.26217447916666
patch: for ( Var $NUMBER$ : def . get CaMeL In ( ) ) {
rank: 504
score: 99.20743815104167
patch: for ( Must CaMeL Def > s ++ : def . depends ) {
rank: 504
score: 99.19967651367188
patch: for ( Var Definition s : def . depends ) {
rank: 504
score: 99.18137770432692
patch: Graph CaMeL Node < Must CaMeL Def > state = null ;
rank: 504
score: 99.0830322265625
patch: for ( Var s : def . depends ) { def = this . def . depends ) {
rank: 504
score: 99.00074986049107
patch: System . out . println ( $STRING$ + s + $STRING$ ) ;
rank: 505
score: 99.30927590762867
patch: for ( Var s : def . depends CaMeL On ( s , this ) )
rank: 505
score: 99.27703302556819
patch: if ( s . scope != js CaMeL Scope . get CaMeL Var ( name ) ) { return true ;
rank: 505
score: 99.26189778645833
patch: for ( Var s : def . get CaMeL Module ( ) ) {
rank: 505
score: 99.1988055889423
patch: for ( Var s : js CaMeL Scope . depends ) {
rank: 505
score: 99.18071637834821
patch: Flow CaMeL State < Must CaMeL Def > state = - 1 ;
rank: 505
score: 99.09815392127403
patch: for ( Var s : 0 != def . depends ) {
rank: 505
score: 99.082958984375
patch: for ( Var s : def . depends ) { def = this . depends . depends ) ;
rank: 505
score: 99.00062913161058
patch: Disposer . for ( Var s : def . depends ) {
rank: 506
score: 99.30897923519737
patch: for ( Var s : n . get CaMeL In ( ) . depends CaMeL On ( {
rank: 506
score: 99.27687377929688
patch: return state . get CaMeL In ( ) . scope != js CaMeL Scope . js CaMeL Scope ;
rank: 506
score: 99.2618408203125
patch: for ( Var s : def . get CaMeL Value ( ) ) return true ;
rank: 506
score: 99.23033854166667
patch: for ( Var s : n . get CaMeL Interfaces ( ) ) {
rank: 506
score: 99.20714460100446
patch: if ( def != n . get CaMeL In ( ) ) {
rank: 506
score: 99.18055216471355
patch: for ( Var s > s : def . depends )
rank: 506
score: 99.09815216064453
patch: for ( Var s : def . depends && def != null Var ) {
rank: 506
score: 99.08280123197116
patch: / * * for ( Var s : def . depends )
rank: 507
score: 99.30842391304348
patch: for ( Var s : n . depends CaMeL On ( s . get CaMeL Var ( name ) ) ) {
rank: 507
score: 99.2768490439967
patch: if ( js CaMeL Scope != js CaMeL Scope && s . scope != js CaMeL Scope )
rank: 507
score: 99.22958984375
patch: for ( Var s : s . depends CaMeL On ( def ) )
rank: 507
score: 99.2068340594952
patch: for ( Var s > 1 : def . depends ) {
rank: 507
score: 99.19769756610577
patch: for ( Var s : def , def . depends ) {
rank: 507
score: 99.18010602678571
patch: if ( n . get CaMeL Annotation ( ) == null ) {
rank: 507
score: 99.0981201171875
patch: for ( Var s : null . depends ? def . depends ) {
rank: 507
score: 99.08275495256696
patch: if ( def instanceof Var ) { return def . depends ) {
rank: 508
score: 99.30751103940217
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( init ) ) ) {
rank: 508
score: 99.27637481689453
patch: if ( n . get CaMeL Annotation ( ) != js CaMeL Scope ) {
rank: 508
score: 99.2291971842448
patch: for ( Var s : n . depends ) { )
rank: 508
score: 99.1976806640625
patch: for ( Var s : n . get CaMeL Def . depends ) {
rank: 508
score: 99.08243233816964
patch: for ( Var s : def . depends ) { Var depends :
rank: 509
score: 99.30735181725544
patch: for ( Var s : n . depends CaMeL On ( def . depends CaMeL On ( $STRING$ ) ) ) {
rank: 509
score: 99.27606201171875
patch: if ( s . scope != js CaMeL Scope . get CaMeL Var ( use CaMeL Node ) )
rank: 509
score: 99.20498422475961
patch: for ( Object [ ] def : def . depends ) {
rank: 509
score: 99.19707782451923
patch: for ( Flow CaMeL State def : def . depends ) {
rank: 509
score: 99.17955525716145
patch: Definition def = state . get CaMeL Def ( ) ;
rank: 509
score: 99.08229417067308
patch: for ( Var $NUMBER$ Var def : def . depends ) {
rank: 509
score: 98.99871063232422
patch: while ( def != null ) {
rank: 510
score: 99.30685424804688
patch: for ( Var s : def . depends CaMeL On ( annotation ) ) {
rank: 510
score: 99.2608642578125
patch: for ( Var s : def . depends ( get CaMeL Scope ( ) ) ) {
rank: 510
score: 99.19679361979166
patch: for ( Var s : def . depends ) : ( Var ) {
rank: 510
score: 99.17935616629464
patch: if ( state . get CaMeL Definition ( ) == null ) {
rank: 510
score: 99.09744601779514
patch: for ( Var s : get ) {
rank: 510
score: 99.08214750744048
patch: for ( Var s : def . depends ) { def . add ( def . depends ) ; }
rank: 510
score: 98.9983797940341
patch: for ( Long s : def . depends ) {
rank: 511
score: 99.30632218070652
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( default ) ) ) {
rank: 511
score: 99.2756411903783
patch: for ( Var def : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ) {
rank: 511
score: 99.22803548177083
patch: for ( Var CaMeL Definition def : def . depends CaMeL On ) {
rank: 511
score: 99.2037353515625
patch: for ( Var s : def . js CaMeL Scope . depends ) {
rank: 511
score: 99.1957256610577
patch: Definition def = state . get CaMeL Annotation ( name ) ;
rank: 511
score: 99.17890276227679
patch: if ( js CaMeL Scope . size ( ) == 0 ) {
rank: 511
score: 99.0973788174716
patch: for ( Var s : def . parse ) {
rank: 511
score: 99.0820376747533
patch: for ( Var s : def . depends ) { def = def . depends ) break ;
rank: 511
score: 98.99833540482955
patch: for ( Var s : events . depends ) {
rank: 512
score: 99.3060791015625
patch: Var s = def . depends CaMeL On ( def . depends CaMeL On ( this ) ) ;
rank: 512
score: 99.27522277832031
patch: return def . get CaMeL In ( ) . get CaMeL Annotation ( ) ;
rank: 512
score: 99.20370047433036
patch: for ( Var s : def . depends [ null ] ) {
rank: 512
score: 99.1952792080966
patch: for ( Var s : def . depends ) ?
rank: 512
score: 99.17869349888393
patch: for ( Object s : def . get CaMeL Annotation ( ) )
rank: 512
score: 99.09669712611607
patch: if ( s != null && def != null . depends ) {
rank: 512
score: 99.08202185997597
patch: for ( Var s : def . get CaMeL Depth ) {
rank: 512
score: 98.99831717354911
patch: for ( Var s : def . depends && s . depends )
rank: 513
score: 99.27408447265626
patch: if ( s . scope != js CaMeL Scope . js CaMeL Scope ) { return true ; }
rank: 513
score: 99.2267333984375
patch: for ( Var s : def . depends CaMeL On ) { def )
rank: 513
score: 99.1950439453125
patch: for ( Var s : def . use CaMeL Node . depends ) {
rank: 513
score: 99.178466796875
patch: for ( Definition s : def . depends ( ) )
rank: 513
score: 99.0960693359375
patch: Var s = null ; for ( Var s = def . depends ) {
rank: 513
score: 99.08162434895833
patch: for ( Var s : - 1 . depends ) {
rank: 513
score: 98.9982577237216
patch: Var s : def = def . depends ) {
rank: 514
score: 99.30595128676471
patch: for ( Var s : n . get . depends CaMeL On ( ) ) {
rank: 514
score: 99.27383277529762
patch: for ( Var def : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ( ) ) {
rank: 514
score: 99.26002502441406
patch: for ( String s : def . get CaMeL Var ( name ) ) {
rank: 514
score: 99.2264404296875
patch: for ( Var s : n . get CaMeL Units ( ) ) {
rank: 514
score: 99.19940592447917
patch: for ( Must CaMeL Def s > s : def . depends ) {
rank: 514
score: 99.17802211216518
patch: if ( s . get CaMeL Value ( ) != null ) {
rank: 514
score: 99.0957364169034
patch: for ( Var s : def . min ) {
rank: 514
score: 99.08146837022569
patch: / * for ( Var s : def . depends ) return def . depends ) {
rank: 514
score: 98.99794699928977
patch: for ( Var s : exp . depends ) {
rank: 515
score: 99.30534561820652
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( s ) . depends )
rank: 515
score: 99.27273995535714
patch: final Definition def = state . get CaMeL In ( ) . reaching CaMeL Def ( js CaMeL Scope
rank: 515
score: 99.2251708984375
patch: for ( Node < Node > s : def . depends CaMeL On )
rank: 515
score: 99.1992431640625
patch: Definition def = state . get CaMeL In ( ) . reaching CaMeL
rank: 515
score: 99.1934481534091
patch: for ( Var s : js CaMeL Scope ) {
rank: 515
score: 99.177978515625
patch: if ( s . get CaMeL Var ( name ) != null )
rank: 515
score: 99.09465680803571
patch: for ( Var s ] : def . depends == null ) {
rank: 516
score: 99.30503778872283
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( this ) ) {
rank: 516
score: 99.27260044642857
patch: if ( s . get CaMeL In ( ) . scope != js CaMeL Scope ) { return true ;
rank: 516
score: 99.25945281982422
patch: for ( final Var s : def . get CaMeL Scope ( ) ) {
rank: 516
score: 99.22496686662946
patch: for ( Node < Var > s : def . get ) {
rank: 516
score: 99.17789713541667
patch: if ( js CaMeL Scope != null )
rank: 516
score: 99.09461388221153
patch: for ( Var s : def . depends && def { {
rank: 516
score: 99.08116803850446
patch: if ( def != null ) return def . depends ) break ;
rank: 516
score: 98.99762517755681
patch: for ( String name : def . depends ) {
rank: 517
score: 99.30491041100544
patch: for ( Var s : def . depends CaMeL On ( ) . depends CaMeL On ( def ) . depends )
rank: 517
score: 99.2724545127467
patch: if ( s . scope != js CaMeL Scope && def . state != js CaMeL Scope )
rank: 517
score: 99.25911218979779
patch: for ( Var s : def . get CaMeL Scope ( ) ) return false ;
rank: 517
score: 99.224560546875
patch: for ( Var n : def . get CaMeL Classes ( ) ) {
rank: 517
score: 99.17764718191964
patch: if ( def != null && s . scope != null ) {
rank: 517
score: 99.09449351917614
patch: for ( Var s : def . replace ) {
rank: 517
score: 99.0808337983631
patch: if ( def != null ) { System . out . println ( $STRING$ + def . depends ) {
rank: 517
score: 98.99726213727679
patch: Var s : for ( Var s = def . depends ) {
rank: 518
score: 99.30482549252717
patch: for ( Var s : def . depends CaMeL On ( def , def . get CaMeL Type ( ) ) )
rank: 518
score: 99.27194695723684
patch: for ( Var s : js CaMeL Scope . get CaMeL Annotation ( ) . depends ) {
rank: 518
score: 99.25853729248047
patch: else for ( Var s : def . get CaMeL In ( ) ) {
rank: 518
score: 99.22416178385417
patch: for ( Var n : n . get CaMeL Methods ( ) ) {
rank: 518
score: 99.19773646763393
patch: for ( Must CaMeL Def > s : s . depends ) {
rank: 518
score: 99.09447370256696
patch: if ( def != null && s != null . depends ) {
rank: 518
score: 99.08074188232422
patch: int value = 0 ; for ( Var s : def . depends ) {
rank: 519
score: 99.30470581054688
patch: for ( Var s : n . get CaMeL In ( ) . depends CaMeL On ( ) )
rank: 519
score: 99.27179633246527
patch: if ( js CaMeL Scope . get CaMeL In ( ) . scope != null ) {
rank: 519
score: 99.25817057291667
patch: for ( Var s : def . reaching CaMeL Def . get (
rank: 519
score: 99.22410231370192
patch: for ( Var n : def . depends ( ) ) {
rank: 519
score: 99.093505859375
patch: Var ) { for ( Var s : def . depends ) {
rank: 519
score: 99.08059512867646
patch: if ( def != null ) { def . add ( def . depends ) ;
rank: 519
score: 98.99693714488636
patch: for ( Var s : stream . depends ) {
rank: 520
score: 99.22211565290179
patch: { for ( Var s : def . depends CaMeL On ) {
rank: 520
score: 99.17753383091518
patch: for ( Var s : def . is CaMeL All ( ) )
rank: 520
score: 99.09340994698661
patch: if ( def != null . depends || def . depends ) {
rank: 520
score: 99.0804443359375
patch: for ( Var s : def . depends ) { def . add ( def . depends ) {
rank: 520
score: 98.99681745256696
patch: Var s : for ( Character s : def . depends ) {
rank: 521
score: 99.271240234375
patch: if ( s . get CaMeL In ( ) . scope != js CaMeL Scope )
rank: 521
score: 99.19676106770834
patch: for ( final Must CaMeL Def > s : def . depends ) {
rank: 521
score: 99.17717633928571
patch: if ( state . get CaMeL Var ( ) == null ) {
rank: 521
score: 99.093017578125
patch: if ( s == null && def != null ) {
rank: 521
score: 99.08023681640626
patch: if ( def != null ) { try {
rank: 521
score: 98.99639892578125
patch: for ( for ( Var s : def . depends ) s . depends )
rank: 522
score: 99.30391261888587
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( n ) ) ) {
rank: 522
score: 99.27069091796875
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) . js CaMeL Scope ;
rank: 522
score: 99.25729549632354
patch: for ( Var s : def . get CaMeL Value ( ) ) return false ;
rank: 522
score: 99.2217305501302
patch: / * for ( Var s : n . depends )
rank: 522
score: 99.1967041015625
patch: for ( extends Must CaMeL Def > state : def . depends ) {
rank: 522
score: 99.19140625
patch: for ( Var s : def . state . depends ) {
rank: 522
score: 99.17686244419643
patch: for ( Var s : def . depends ( ) ) break ;
rank: 522
score: 99.09236363002232
patch: for ( Var s : def . depends , . depends ) {
rank: 522
score: 99.08008530560662
patch: if ( def != null ) { return def . get CaMeL Var ( ) ;
rank: 522
score: 98.99590192522321
patch: if ( s != null || def . depends != null ) {
rank: 523
score: 99.22146371694711
patch: for ( Var s : s . depends CaMeL On ) {
rank: 523
score: 99.19601004464286
patch: for ( final Must CaMeL Def s : def . depends ) {
rank: 523
score: 99.19075833834134
patch: for ( Definition s : def . depends CaMeL On ) {
rank: 523
score: 99.17629568917411
patch: for ( Branch s : def . get CaMeL In ( ) )
rank: 523
score: 99.09234619140625
patch: for ( Var s : def . depends && def . depends ) { }
rank: 523
score: 99.07987670898437
patch: for ( Var s : def . depends ) { s . depends ( def . depends ) ;
rank: 523
score: 98.9958163174716
patch: Var s : if ( def == null ) {
rank: 524
score: 99.3030941611842
patch: for ( Var s : def . depends CaMeL On ( get CaMeL Var ( ) ) )
rank: 524
score: 99.22132975260416
patch: do { for ( Var s : def . depends CaMeL On ) {
rank: 524
score: 99.19054303850446
patch: for ( Var ! state . scope != js CaMeL Scope ) {
rank: 524
score: 99.07977294921875
patch: for ( Var s : def . depends ) { if ( s . is CaMeL Var ) {
rank: 524
score: 98.99526742788461
patch: for ( Var < Var > s : def . depends )
rank: 525
score: 99.30260699728261
patch: for ( Var s : def . depends CaMeL On ( { def . depends CaMeL On ( s ) ) {
rank: 525
score: 99.26997302827381
patch: if ( s . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) )
rank: 525
score: 99.25623276654412
patch: Flow CaMeL State < Must CaMeL Def > state = get CaMeL In ( ) ;
rank: 525
score: 99.22130475725446
patch: for ( Var s : def . depends ) { def = )
rank: 525
score: 99.19430977957589
patch: if ( def != null || def . scope != null ) {
rank: 525
score: 99.18914388020833
patch: for ( Var s : n . get CaMeL Method ( ) ) {
rank: 525
score: 99.17595966045673
patch: for ( Var s : def . depends ( $STRING$ ) )
rank: 525
score: 98.9951416015625
patch: for ( String s : def . depends )
rank: 526
score: 99.26957775297619
patch: return def . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 526
score: 99.25618743896484
patch: for ( Var s : def . get CaMeL Def 1 ( ) ) {
rank: 526
score: 99.18836388221153
patch: for ( Var s : def . n . depends ) {
rank: 526
score: 99.1748046875
patch: Flow CaMeL State < Must CaMeL Def > state = n ;
rank: 526
score: 99.07954915364583
patch: Iterator < Var > def = def . depends ) {
rank: 526
score: 98.99460671164773
patch: for ( Boolean s : def . depends ) {
rank: 527
score: 99.30235290527344
patch: for ( Var s : def . depends CaMeL On ( code ) ) {
rank: 527
score: 99.2690197172619
patch: try { state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 527
score: 99.21966145833333
patch: if ( def != null ) return def . depends CaMeL On ) ;
rank: 527
score: 99.19212036132812
patch: if ( def . scope != null ) {
rank: 527
score: 99.18752817007211
patch: for ( Var s : get CaMeL In ( ) ) {
rank: 527
score: 99.17473493303571
patch: if ( state instanceof Must CaMeL Def > js CaMeL Scope ) {
rank: 527
score: 99.09124200994319
patch: for ( Var s : def . stop ) {
rank: 527
score: 99.07941228693181
patch: for ( Var s : def . get CaMeL Var ( def . get CaMeL Var ( ) ) ) {
rank: 528
score: 99.30214029947916
patch: for ( Var s : def . depends CaMeL On ( line ) )
rank: 528
score: 99.25599772135416
patch: for ( Var s : def . get CaMeL Annotation ( ) ) }
rank: 528
score: 99.21962076822916
patch: for ( Type s : def . depends CaMeL On ( def ) )
rank: 528
score: 99.17467389787946
patch: for ( Var s : def . get CaMeL Instance ( ) )
rank: 528
score: 99.09102376302083
patch: for ( Var s = def . depends ) { def = def . depends ) ;
rank: 528
score: 99.079345703125
patch: for ( Var s : def . depends ) { Var s = this . def . depends ) {
rank: 528
score: 98.99405924479167
patch: while ( def != null && s != null ) {
rank: 529
score: 99.2687479654948
patch: if ( def != null ) { return true ; }
rank: 529
score: 99.25588989257812
patch: for ( Var s : def . get CaMeL In ( ) . ) {
rank: 529
score: 99.21888020833333
patch: for ( Var s : n . depends ) { if ( ) {
rank: 529
score: 99.17463030133929
patch: if ( s != null && s . scope != null ) {
rank: 529
score: 99.0906982421875
patch: for ( Var s : def . max ) {
rank: 529
score: 99.07896205357143
patch: for ( Set < Var > def : def . get ) {
rank: 529
score: 98.99378967285156
patch: Var s : for ( Var s : def . depends , def ) {
rank: 530
score: 99.30130137567934
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( { this ) ) {
rank: 530
score: 99.26819428943452
patch: if ( reaching CaMeL Def . get ( js CaMeL Scope . get CaMeL Var ( name ) )
rank: 530
score: 99.21875
patch: for ( Var CaMeL Definition n : def . depends CaMeL On ) {
rank: 530
score: 99.19160970052083
patch: for ( extends Must CaMeL Def > s : def . depends ) {
rank: 530
score: 99.18551870492789
patch: for ( Var s : def . get CaMeL Annotation ) {
rank: 530
score: 99.08992826021634
patch: for ( String s : def . depends , depends ) {
rank: 530
score: 99.07820991847827
patch: if ( def == null ) { System . out . println ( $STRING$ . to CaMeL String ( ) ) ;
rank: 530
score: 98.9934794108073
patch: if ( s != null || def != null ) {
rank: 531
score: 99.30127766927083
patch: for ( Var s : def . depends CaMeL On ( value ) )
rank: 531
score: 99.2669448852539
patch: if ( def == null && s . scope != js CaMeL Scope ) {
rank: 531
score: 99.18288352272727
patch: for ( Var s : Var . depends ) {
rank: 531
score: 99.07820268110795
patch: for ( Var s : def . depends ) { def = def . depends . depends . depends ) ;
rank: 532
score: 99.29994710286458
patch: for ( Node < Var > s : def . get CaMeL In ( ) ) {
rank: 532
score: 99.26681357935855
patch: if ( def != null ) return def . depends CaMeL On ( use CaMeL Node ) ;
rank: 532
score: 99.2548828125
patch: for ( Var s : def . get CaMeL Line ( ) ) {
rank: 532
score: 99.21844889322917
patch: for ( Var [ ] s : def . depends CaMeL On ) {
rank: 532
score: 99.17289515904018
patch: for ( Var s : n . get CaMeL Def ( ) )
rank: 532
score: 99.08902316623264
patch: for ( Var s : def . depends $NUMBER$ def ( s . depends ) ) {
rank: 532
score: 99.07818134014423
patch: if ( def == null ) { continue ; } else {
rank: 532
score: 98.99276297433036
patch: Var s : for ( Var s : def . depends ) )
rank: 533
score: 99.29987444196429
patch: for ( Node s : def . depends CaMeL On ( ) )
rank: 533
score: 99.26582416735198
patch: if ( def . scope != js CaMeL Scope && def . state != js CaMeL Scope )
rank: 533
score: 99.2183837890625
patch: for ( Var > s : def . depends CaMeL On ) {
rank: 533
score: 99.19036395733173
patch: if ( js CaMeL Scope instanceof Must CaMeL Def > ) {
rank: 533
score: 99.1813631924716
patch: for ( Definition def : state . depends ) {
rank: 533
score: 99.17265101841518
patch: for ( Var s : def . get CaMeL Style ( ) )
rank: 533
score: 99.08853488498264
patch: for ( Var s : def . depends , s . depends . depends . ) {
rank: 533
score: 99.07792154947917
patch: for ( Var s : def . depends ) { Var s ) {
rank: 533
score: 98.99222005208334
patch: for ( Var s : def . depends ) { . depends ) ;
rank: 534
score: 99.2991943359375
patch: for ( Var s : n . get CaMeL Var CaMeL Count ( ) ) {
rank: 534
score: 99.21791294642857
patch: for ( Node < Node > s : n . depends ) {
rank: 534
score: 99.19026402064732
patch: for ( ? > s : def . depends ( ) ) {
rank: 534
score: 99.17237200055804
patch: while ( state . get CaMeL In ( ) != null ) {
rank: 534
score: 99.0882568359375
patch: for ( Var s ] : s . depends ) {
rank: 534
score: 99.07786800986842
patch: for ( Node s : def . depends ) { Var s = def . depends ) ;
rank: 535
score: 99.26554048978366
patch: if ( js CaMeL Scope != null ) { return true ;
rank: 535
score: 99.25403594970703
patch: for ( Var s : def . get CaMeL Def ( ) ) { }
rank: 535
score: 99.17226736886161
patch: if ( s . get CaMeL Var ( ) != null ) {
rank: 535
score: 99.088134765625
patch: for ( String s ] : def . depends ) {
rank: 535
score: 99.0775390625
patch: for ( Var s : def . depends ) { if ( def . is CaMeL Var ) {
rank: 535
score: 98.99175153459821
patch: for ( Var s : def . depends ) { Var s :
rank: 536
score: 99.2987644361413
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( node ) ) ) {
rank: 536
score: 99.26551920572916
patch: if ( def != null ) state . get CaMeL Annotation ( ) ;
rank: 536
score: 99.216943359375
patch: Var s = def . depends CaMeL On ( def , true ) ;
rank: 536
score: 99.17216273716518
patch: for ( Var s : def . get CaMeL Count ( ) )
rank: 536
score: 99.088134765625
patch: Var s = def . depends ) ; if ( s != null ) {
rank: 536
score: 99.07729867788461
patch: if ( def != null && def instanceof Var s ) {
rank: 536
score: 98.99168395996094
patch: if ( s != null ) { Var s = def . depends ) ;
rank: 537
score: 99.29845473345588
patch: for ( Var s : def . depends CaMeL On ( s . depends ) {
rank: 537
score: 99.26546223958333
patch: for ( Var s : def . reaching CaMeL Def . depends ( def . depends ) ) {
rank: 537
score: 99.25176447088069
patch: for ( Var s : def . n ) {
rank: 537
score: 99.21663120814732
patch: for ( Visitor < Var > def : def . depends ) {
rank: 537
score: 99.17831655649039
patch: if ( ! def . scope != js CaMeL Scope ) {
rank: 537
score: 99.17208251953124
patch: for ( Integer s : def . depends )
rank: 537
score: 99.08756801060268
patch: for ( Var s : def . depends ? def . depends )
rank: 537
score: 98.99098205566406
patch: for ( Var s : def != null ? s : def . depends )
rank: 538
score: 99.29842376708984
patch: for ( Var s : def . depends CaMeL On ( node ) ) {
rank: 538
score: 99.21622721354167
patch: for ( Var s : def . depends ) { if ( def )
rank: 538
score: 99.1894198330966
patch: Definition def = state . get CaMeL In ( )
rank: 538
score: 99.17804509943181
patch: for ( Var state : def . depends ) {
rank: 538
score: 99.08635919744319
patch: for ( Var s : 0 . get ) {
rank: 538
score: 99.07705849095395
patch: for ( Var s : def . depends ) { Var name = def . depends ) ;
rank: 538
score: 98.99050071022727
patch: for ( Var s : parameters . depends ) {
rank: 539
score: 99.29828559027777
patch: for ( Var s : def . depends CaMeL On ( target , def ) ) {
rank: 539
score: 99.26499720982143
patch: if ( def != null ) state . get CaMeL In ( ) . reaching CaMeL Def . {
rank: 539
score: 99.250390625
patch: for ( Var s : def . get CaMeL Fn ( ) ) {
rank: 539
score: 99.17776925223214
patch: for ( Var s : ( Var def . depends ) ) {
rank: 539
score: 99.17074584960938
patch: Definition def = def . get CaMeL Annotation ( ) ;
rank: 539
score: 99.08571213942308
patch: for ( Var s : def . get != null ) {
rank: 539
score: 99.07689319957386
patch: Var s = def . depends ) ; for ( Var s : def . depends . depends . ) {
rank: 540
score: 99.29827202690973
patch: for ( Var s : def . depends CaMeL On ( double . class ) ) {
rank: 540
score: 99.26483154296875
patch: if ( js CaMeL Scope == js CaMeL Scope ) { return true ; }
rank: 540
score: 99.249267578125
patch: for ( Var s : def . get CaMeL Annotation ( ) ) { }
rank: 540
score: 99.2152608235677
patch: Var s = def . depends CaMeL On ( ) ;
rank: 540
score: 99.18850708007812
patch: if ( def . is CaMeL In ( ) ) {
rank: 540
score: 99.17775315504808
patch: for ( Var s : def . get CaMeL Vars ) {
rank: 540
score: 99.17062612680289
patch: if ( state . depends CaMeL On ( name ) ) {
rank: 540
score: 99.0767886513158
patch: for ( Var s : def . depends ) { Var def = def . depends ) {
rank: 540
score: 98.9902676669034
patch: for ( Var s : input . depends ) {
rank: 541
score: 99.29822308084239
patch: for ( Var s : def . depends CaMeL On ( s . depends CaMeL On ( ) ) . depends )
rank: 541
score: 99.26473999023438
patch: if ( js CaMeL Scope == js CaMeL Scope ) {
rank: 541
score: 99.1884765625
patch: for ( Var s : def . depends CaMeL On $NUMBER$ ) {
rank: 541
score: 99.08475167410714
patch: for ( Var s : 0 . depends && def != null {
rank: 541
score: 98.98969060724431
patch: for ( Context s : def . depends ) {
rank: 542
score: 99.29786512586806
patch: for ( Var s : def . depends CaMeL On ( name , true ) ) {
rank: 542
score: 99.26458418996711
patch: for ( Var s : def . depends || s . scope != js CaMeL Scope ) {
rank: 542
score: 99.17691744290866
patch: for ( Var s > type : def . depends ) {
rank: 542
score: 99.16986638849431
patch: Flow CaMeL State < Must CaMeL Def > state =
rank: 542
score: 99.08469801682692
patch: for ( Var s : null . depends . depends ) {
rank: 542
score: 99.07622612847223
patch: for ( Var s : def . depends ) { def . depends ( def ) ;
rank: 542
score: 98.9891357421875
patch: for ( Var s : def . depends ) s . depends ) )
rank: 543
score: 99.26406715029762
patch: expr = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 543
score: 99.24737141927083
patch: for ( Var s : def . get CaMeL Def ( ) ) }
rank: 543
score: 99.21340942382812
patch: for ( Var CaMeL Definition s : def . depends )
rank: 543
score: 99.17610990084134
patch: for ( Var s . scope : def . depends ) {
rank: 543
score: 99.07621547154018
patch: if ( def != null ) return def . depends ( ) ;
rank: 543
score: 98.989013671875
patch: for ( Var s : def . get CaMeL Root ) {
rank: 544
score: 99.29750127377717
patch: for ( Var s : def . depends CaMeL On ( s ) . depends CaMeL On ( def ) ) {
rank: 544
score: 99.26350402832031
patch: return def . get CaMeL In ( ) . scope != js CaMeL Scope ;
rank: 544
score: 99.21321244673295
patch: for ( Var exp : def . depends ) {
rank: 544
score: 99.18746243990384
patch: for ( Var s [ ] : def . depends ) {
rank: 544
score: 99.17379056490384
patch: for ( Var def : def . def . depends ) {
rank: 544
score: 99.08404900045956
patch: for ( Var s : def . depends ) { s . add ) ; }
rank: 544
score: 99.07612690172698
patch: for ( Var s : def . depends ) { Var s ( def . depends ) {
rank: 544
score: 98.9887362393466
patch: for ( Var s : description . depends ) {
rank: 545
score: 99.26253933376736
patch: for ( Var : def . depends CaMeL On CaMeL Outer CaMeL Scope CaMeL Vars ) {
rank: 545
score: 99.212646484375
patch: Var s = def . depends CaMeL On ( def ) ) ;
rank: 545
score: 99.16907677283653
patch: for ( Var s : def . is CaMeL In ) {
rank: 545
score: 99.07604166666667
patch: if ( def == null ) { return def . depends ) ; }
rank: 545
score: 98.98858642578125
patch: for ( Var s : def . depends || def . depends )
rank: 546
score: 99.29645739103618
patch: for ( Var s : def . depends CaMeL On ( s , use CaMeL Node ) )
rank: 546
score: 99.245751953125
patch: for ( Var s : def . get CaMeL Warnings ( ) ) {
rank: 546
score: 99.21238490513393
patch: / * for ( Var s : def . depends ) * {
rank: 546
score: 99.18733723958333
patch: for ( Var s 1 : state . depends ) {
rank: 546
score: 99.16773399939903
patch: if ( s . get CaMeL Annotation ( ) == null )
rank: 546
score: 98.98755821814903
patch: Var s : if ( s . depends != null ) {
rank: 547
score: 99.2964504076087
patch: for ( Var s : def . depends CaMeL On ( def . get CaMeL Var ( $STRING$ ) ) ) {
rank: 547
score: 99.26175362723214
patch: ref = state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope
rank: 547
score: 99.21235874720982
patch: for ( Var CaMeL Definition s : def . depends ) { {
rank: 547
score: 99.18726695667614
patch: for ( Must CaMeL Def s : def ) {
rank: 547
score: 99.1724853515625
patch: if ( def == js CaMeL Scope ) { return false ;
rank: 547
score: 99.16748046875
patch: if ( js CaMeL Scope . scope != js CaMeL Scope )
rank: 547
score: 99.07581922743056
patch: if ( def != null && def . get CaMeL Next ( ) != null ) {
rank: 548
score: 99.29629118546195
patch: for ( Var s : def . depends CaMeL On ( def ) . depends CaMeL On ( target ) ) {
rank: 548
score: 99.24425330528847
patch: for ( Var s : def . get CaMeL In ) {
rank: 548
score: 99.21229771205357
patch: / * for ( Var s : def . get ) * /
rank: 548
score: 99.18708801269531
patch: if ( state . get CaMeL In ( ) == null ) return true ;
rank: 548
score: 99.1724853515625
patch: for ( Var s : new Flow CaMeL State ( ) ) {
rank: 548
score: 99.16720815805289
patch: for ( Var s : def . depends ( def ) )
rank: 548
score: 99.08153424944196
patch: for ( Var s ] : def . depends != null ) {
rank: 548
score: 99.07545230263158
patch: for ( Var s : def . depends ) { Var s : s . depends ) {
rank: 548
score: 98.9868408203125
patch: for ( Var s : def . depends ) { return null ; }
rank: 549
score: 99.29599397078805
patch: for ( Var s : def . depends CaMeL On ( def . depends CaMeL On ( group ) ) ) {
rank: 549
score: 99.24403381347656
patch: Definition def = n . get CaMeL In ( ) . depends ( ) ;
rank: 549
score: 99.2110595703125
patch: / * for ( Var s : def . depends CaMeL On {
rank: 549
score: 99.172119140625
patch: if ( scope != js CaMeL Scope ) {
rank: 549
score: 99.16673865685097
patch: for ( Var def : def . depends ( ) ) {
rank: 549
score: 99.07520592730978
patch: for ( Var s : def . get CaMeL Var ( def . get CaMeL Parent ( ) ) . depends )
rank: 550
score: 99.26055908203125
patch: return def . scope != js CaMeL Scope . get CaMeL In ( ) ;
rank: 550
score: 99.21058067908653
patch: for ( Var target : def . depends CaMeL On ) {
rank: 550
score: 99.16524564302884
patch: for ( Var s : def . clone ( ) ) {
rank: 550
score: 99.08130600873162
patch: for ( String s : def . depends ) println ( def . depends ) {
rank: 550
score: 98.98532104492188
patch: while ( def != null ) { Var s = def . depends ) ;
rank: 551
score: 99.29582663143383
patch: for ( Var s : def . depends CaMeL On ( target , def ) )
rank: 551
score: 99.25996326264881
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( js CaMeL Scope .
rank: 551
score: 99.2098388671875
patch: if ( { for ( Var s : def . depends ) {
rank: 551
score: 99.1860580444336
patch: if ( state . get CaMeL In ( ) == null ) return false ;
rank: 551
score: 99.1712137858073
patch: if ( s . is CaMeL In ( ) ) {
rank: 551
score: 99.08103590745192
patch: for ( Var s : def . depends , def { {
rank: 551
score: 99.0740966796875
patch: for ( Var s : def . depends ) { def . depends ( def . depends ) {
rank: 551
score: 98.98527018229167
patch: for ( Var s : def . depends ) { if ( ) ;
rank: 552
score: 99.2957534790039
patch: for ( Var s : def . depends CaMeL On ( out ) ) {
rank: 552
score: 99.25953311011905
patch: for ( Flow CaMeL State < Must CaMeL Def > state : n . get CaMeL Annotation ( ) )
rank: 552
score: 99.24259440104167
patch: for ( Var s : def . get CaMeL Input ( ) ) {
rank: 552
score: 99.20818219866071
patch: if ( def == null || def . depends CaMeL On ( {
rank: 552
score: 99.1694805438702
patch: for ( Var s extends Var : def . depends ) {
rank: 552
score: 99.1646728515625
patch: if ( state . get CaMeL Value ( ) == null )
rank: 552
score: 99.07398274739583
patch: / * * for ( Var s : def . depends ) break ;
rank: 553
score: 99.2420166015625
patch: for ( Var 1 : def . get CaMeL Scope ( ) ) {
rank: 553
score: 99.20540945870536
patch: for ( Var n : n . depends CaMeL On ) { {
rank: 553
score: 99.16443481445313
patch: if ( state instanceof Must CaMeL Def ) {
rank: 553
score: 99.08021647135416
patch: for ( Var s : def . depends && def != null { {
rank: 553
score: 98.9849853515625
patch: for ( Var s : def . depends , s . depends )
rank: 554
score: 99.25784067007211
patch: if ( s != js CaMeL Scope ) { return true ;
rank: 554
score: 99.20445905412946
patch: for ( Var s : def . depends ) { def . )
rank: 554
score: 99.18454214242789
patch: for ( Var s + name : def . depends ) {
rank: 554
score: 99.1642354329427
patch: Var def = state . get CaMeL Annotation ( ) ;
rank: 554
score: 99.08003452845982
patch: if ( def != null . depends && def != null ) {
rank: 554
score: 99.07373046875
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Parent ( ) ) . depends )
rank: 554
score: 98.98458862304688
patch: for ( Var s : < def . depends ) {
rank: 555
score: 99.29495059742646
patch: for ( Node < Var > s : def . get CaMeL Var ( ) )
rank: 555
score: 99.20377894810268
patch: for ( Var s : def . depends ) { def . {
rank: 555
score: 99.18404715401786
patch: for ( Var s > s 1 : def . depends ) {
rank: 555
score: 99.07896071213942
patch: for ( Var s : def . depends - null ) {
rank: 555
score: 99.07370476973684
patch: for ( Var def : def . depends ) { Var s = def . depends ) ;
rank: 555
score: 98.98432268415179
patch: Var s : for ( boolean s : def . depends ) {
rank: 556
score: 99.25736236572266
patch: if ( def != null && def . state != js CaMeL Scope ) {
rank: 556
score: 99.20330341045673
patch: for ( Var exp : def . depends CaMeL On ) {
rank: 556
score: 99.18381754557292
patch: for ( Var > s : def . depends ) {
rank: 556
score: 99.16832386363636
patch: for ( Node s : state . depends ) {
rank: 556
score: 99.07847290039062
patch: if ( def : def != null ) {
rank: 557
score: 99.29470486111111
patch: for ( Var s : def . depends CaMeL On ( s , null ) ) {
rank: 557
score: 99.25675048828126
patch: String js CaMeL Scope = state . get CaMeL In ( ) . get CaMeL Type ( ) ;
rank: 557
score: 99.18326241629464
patch: if ( def instanceof Must CaMeL Def > js CaMeL Scope ) {
rank: 557
score: 99.07829284667969
patch: for ( Var s == ( Var s : def . depends ) ) {
rank: 557
score: 99.07332710597827
patch: Var s = def . depends ) ; for ( Var s : def . depends . depends . depends ) {
rank: 558
score: 99.29425048828125
patch: for ( Var s : def . depends CaMeL On ( start ) ) {
rank: 558
score: 99.25655517578124
patch: return state . get CaMeL In ( ) . reaching CaMeL Def . get ( type ) ;
rank: 558
score: 99.20154680524554
patch: for ( Var ( Var s : n . depends ) ) {
rank: 558
score: 99.18128380408653
patch: Definition def = state . get CaMeL In ( ) == null
rank: 558
score: 99.1627666766827
patch: Flow CaMeL State < Node , Branch > state = null ;
rank: 558
score: 98.98333740234375
patch: / * for ( Var s : def . depends ) continue ;
rank: 559
score: 99.29414198133681
patch: for ( Node < Node > def : def . depends CaMeL On ( def ) )
rank: 559
score: 99.2564633018092
patch: else def = state . get CaMeL In ( ) . reaching CaMeL Def . get (
rank: 559
score: 99.23959585336539
patch: for ( Var 1 : def . depends ( ) ) {
rank: 559
score: 99.2015380859375
patch: Var s = def . get CaMeL Var ( ) ;
rank: 559
score: 99.18121337890625
patch: for ( Must CaMeL Def s ++ : def . depends ) {
rank: 559
score: 99.16261800130208
patch: if ( state != js CaMeL Scope ) return true ;
rank: 559
score: 99.07795061383929
patch: for ( Var s ] : def . depends ( ) ) {
rank: 559
score: 99.07291353665866
patch: / * for ( Var def : def . depends ) {
rank: 559
score: 98.98312813895089
patch: for ( Var s : def . depends . depends != ) {
rank: 560
score: 99.29410552978516
patch: for ( Var s : def . get CaMeL Var CaMeL Count ( ) )
rank: 560
score: 99.25629625822368
patch: final Definition def = state . get CaMeL In ( ) . get CaMeL In ( ) ;
rank: 560
score: 99.20147705078125
patch: for ( Var s : n . depends CaMeL On ) { )
rank: 560
score: 99.16236368815105
patch: if ( state instanceof Must CaMeL Def > 1 ) {
rank: 560
score: 99.07774939903847
patch: for ( Var [ ] 0 : def . depends ) {
rank: 560
score: 99.07241675967262
patch: if ( def != null ) { System . out . println ( $STRING$ + def . get ) ;
rank: 560
score: 98.98301478794643
patch: if ( def != null && s . depends == null ) {
rank: 561
score: 99.29391318873355
patch: for ( Var s : def . depends CaMeL On ( ) . get ( s ) )
rank: 561
score: 99.25577585320724
patch: final Var def = state . get CaMeL In ( ) . get CaMeL Def ( ) ;
rank: 561
score: 99.16228778545673
patch: for ( Var s : def . contains ( s ) )
rank: 561
score: 99.07769775390625
patch: for ( Var s : def . depends && def == ) {
rank: 561
score: 99.07239641462054
patch: for ( Var s : def . depends ) { return ) ;
rank: 561
score: 98.9829345703125
patch: for ( Var s : node . depends )
rank: 562
score: 99.29358588324652
patch: for ( Var s : def . get . depends CaMeL On ( s ) ) {
rank: 562
score: 99.25550537109375
patch: if ( s . get CaMeL Annotation ( js CaMeL Scope . get CaMeL Var ( name ) )
rank: 562
score: 99.19969764122597
patch: Var depends = def . depends CaMeL On ( def ) ;
rank: 562
score: 99.17979939778645
patch: if ( state . get CaMeL In ( ) ) {
rank: 562
score: 99.16657366071429
patch: for ( Must CaMeL Def > n : def . depends ) {
rank: 562
score: 99.07717895507812
patch: for ( Var s ] : def . depends && def != null ) {
rank: 562
score: 99.07204182942708
patch: if ( def != null ) { def . add ( def . depends ) ; }
rank: 563
score: 99.23639322916667
patch: for ( Var s : state . get CaMeL Var ( ) ) {
rank: 563
score: 99.17963115985577
patch: for ( Var s + $NUMBER$ : def . depends ) {
rank: 563
score: 98.98212224786931
patch: for ( Short s : def . depends ) {
rank: 564
score: 99.25468614366319
patch: if ( js CaMeL Scope . scope != js CaMeL Scope ) { return true ; }
rank: 564
score: 99.16532076322116
patch: for ( Var s : def < def . depends ) {
rank: 564
score: 99.1607196514423
patch: if ( state . equals ( js CaMeL Scope ) ) {
rank: 564
score: 99.07666954627403
patch: for ( Var s : 0 . depends . depends ) {
rank: 564
score: 99.07201131184895
patch: if ( def == null || def != null ) {
rank: 565
score: 99.29213460286458
patch: for ( Node < Node < Node > def : def . depends CaMeL On ) {
rank: 565
score: 99.23593139648438
patch: for ( ( Var s : def . get CaMeL Annotation ( ) ) {
rank: 565
score: 99.1602783203125
patch: for ( Var s : def . depends ) { else
rank: 565
score: 99.07639857700893
patch: for ( Var s : def . depends , def depends ) {
rank: 565
score: 99.07184307391827
patch: for ( Var s : def . depends ) { continue ;
rank: 566
score: 99.23477376302084
patch: for ( Object def : def . get CaMeL In ( ) ) {
rank: 566
score: 99.179443359375
patch: for ( Var s , Var def : def . depends ) {
rank: 566
score: 99.15999661959134
patch: for ( Var s : def . depends ( s ) )
rank: 566
score: 99.0763651529948
patch: for ( Var s : def . depends - ) {
rank: 566
score: 99.07150704520089
patch: if ( def != null && def . depends ( ) ) {
rank: 567
score: 99.23457845052083
patch: Definition def = n . get CaMeL In ( ) . depends ) ;
rank: 567
score: 99.19591267903645
patch: for ( Var n : n . depends ) { {
rank: 567
score: 99.179345703125
patch: Definition def = state != null ? state . get CaMeL In ( )
rank: 567
score: 99.07632211538461
patch: for ( Var s : null . depends , depends ) {
rank: 567
score: 99.07141985212054
patch: while ( def != null ) { return def . depends ) ;
rank: 567
score: 98.98103471235795
patch: for ( Var s : STATEMENT . depends ) {
rank: 568
score: 99.29179164341518
patch: for ( Var s : def . split ( $STRING$ ) ) {
rank: 568
score: 99.19451349431819
patch: for ( Var n : n . get ) {
rank: 568
score: 99.1773681640625
patch: for ( Var s >= 0 : def . depends ) {
rank: 568
score: 99.1639404296875
patch: for ( Var s : state . depends . depends ) {
rank: 568
score: 99.07626778738839
patch: for ( Var s ] : def . depends && def ) {
rank: 568
score: 99.07139756944444
patch: for ( Var s : def . depends ) { def . depends ) break ; }
rank: 568
score: 98.98092215401786
patch: for ( Var s : def . depends && type != null {
rank: 569
score: 99.25283578725961
patch: if ( def != null ) { def . depends ) {
rank: 569
score: 99.16388494318181
patch: for ( Var s : state . scope ) {
rank: 569
score: 99.07621765136719
patch: for ( Var s : def . depends , def . depends ) { }
rank: 569
score: 99.07119954427084
patch: for ( Set < Var > def : def . depends ) { {
rank: 570
score: 99.194091796875
patch: for ( Var name : def . depends CaMeL On ) {
rank: 570
score: 99.1636075106534
patch: for ( Var s : use CaMeL Node ) {
rank: 570
score: 99.07609049479167
patch: for ( Var s : 0 . depends $NUMBER$ ) {
rank: 570
score: 99.07098709909539
patch: System . out . println ( $STRING$ + s . to CaMeL String ( ) ) ; }
rank: 571
score: 99.25267836626838
patch: if ( js CaMeL Scope != null || s . scope != js CaMeL Scope )
rank: 571
score: 99.17695835658482
patch: for ( Var s : def . depends 1 > $NUMBER$ ) {
rank: 571
score: 99.16336059570312
patch: while ( def != js CaMeL Scope ) {
rank: 571
score: 99.07607014973958
patch: for ( Var s : def . depends ) { s = def . depends ) {
rank: 571
score: 99.07063802083333
patch: for ( Var s : def . depends ) { Var depends ) {
rank: 571
score: 98.97948455810547
patch: if ( def == null ) for ( Var s : def . depends )
rank: 572
score: 99.28951865748355
patch: for ( Node < Node > s : def . depends CaMeL On ( def ) ) {
rank: 572
score: 99.2520751953125
patch: for ( Var s : def . depends ) { / *
rank: 572
score: 99.2320785522461
patch: for ( Var s : def . get CaMeL In ( ) . depends CaMeL
rank: 572
score: 99.19349888392857
patch: for ( Node < Var > n : n . depends ) {
rank: 572
score: 99.17648550180289
patch: for ( Var s - 1 : def . depends ) {
rank: 572
score: 99.15885786576705
patch: for ( Var s : def . FALSE ) {
rank: 572
score: 99.07539876302083
patch: for ( Var s : def . depends ) { s = def . depends ) }
rank: 572
score: 99.07000732421875
patch: for ( Var s : def . get CaMeL Style ( ) . depends )
rank: 572
score: 98.97925821940105
patch: for ( final Var s : s . depends ) {
rank: 573
score: 99.28880964006696
patch: for ( Node < Node > def = def . depends ) {
rank: 573
score: 99.23203938802084
patch: for ( String s : def . get CaMeL Var ( ) ) {
rank: 573
score: 99.17643519810268
patch: for ( Var s : def . depends $NUMBER$ > $NUMBER$ ) {
rank: 573
score: 99.15775240384616
patch: for ( T s : def . depends ( ) ) {
rank: 573
score: 99.06993519176136
patch: for ( Scope s : def . depends ) {
rank: 573
score: 98.97907366071429
patch: for ( Var s : def . depends . depends != null {
rank: 574
score: 99.25188131893383
patch: if ( def != js CaMeL Scope && s . scope != js CaMeL Scope )
rank: 574
score: 99.19265311104911
patch: / * for ( Var s : n . depends ( ) )
rank: 574
score: 99.17635904947916
patch: Flow CaMeL State < Must CaMeL Def > state = n . get CaMeL
rank: 574
score: 99.15693969726563
patch: for ( Var def : def . depends )
rank: 574
score: 99.06982421875
patch: for ( Var s : def . depends ) { def . depends ) continue ; }
rank: 575
score: 99.25155639648438
patch: String js CaMeL Scope = state . get CaMeL In ( ) . scope ;
rank: 575
score: 99.23033854166667
patch: for ( T s : def . get CaMeL Def ( ) ) {
rank: 575
score: 99.1922098795573
patch: if ( def == null || def == null ) {
rank: 575
score: 99.17557779947917
patch: if ( state instanceof Must CaMeL Def > false ) {
rank: 575
score: 99.15504807692308
patch: for ( Var s : def . equals ( name ) )
rank: 575
score: 99.073486328125
patch: for ( Var current : def . depends ) {
rank: 575
score: 99.06978665865384
patch: return def == null ? null : def . depends ) {
rank: 575
score: 98.97874866832386
patch: for ( String s : s . depends ) {
rank: 576
score: 99.25144449869792
patch: if ( def . scope != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 576
score: 99.19204477163461
patch: for ( Var CaMeL Definition def : def . depends ) {
rank: 576
score: 99.17281400240384
patch: if ( state instanceof Must CaMeL Def > - 1 ) {
rank: 576
score: 99.15485174005681
patch: for ( Var s : def . EMPTY ) {
rank: 576
score: 99.06973930027173
patch: if ( def != null ) { System . err . println ( $STRING$ . to CaMeL String ( ) ) ;
rank: 577
score: 99.19170270647321
patch: for ( Var s : n . get CaMeL Results ( ) )
rank: 577
score: 99.17258707682292
patch: for ( Var s : def . depends . ) {
rank: 577
score: 99.1599590594952
patch: for ( Var s : n . size ( ) ) {
rank: 577
score: 99.1541748046875
patch: if ( s == null )
rank: 577
score: 99.06961192255434
patch: for ( Var s : def . depends ) { def . depends . add ( this . depends ) ; }
rank: 577
score: 98.97856794084821
patch: for ( Var s : def . depends ) { case $NUMBER$ :
rank: 578
score: 99.2876838235294
patch: for ( Var s : def . get s . depends CaMeL On ( ) )
rank: 578
score: 99.25104229266827
patch: if ( def != state . get CaMeL In ( ) )
rank: 578
score: 99.15337665264423
patch: Graph CaMeL Node < Node , Branch > n = false ;
rank: 578
score: 99.06955973307292
patch: for ( Var s : def . depends ) { def = type . depends ) {
rank: 578
score: 98.97836538461539
patch: for ( final Var s : def . depends ) { {
rank: 579
score: 99.18992262620192
patch: Var s = n . depends CaMeL On ( def ) ;
rank: 579
score: 99.15778057391827
patch: for ( Flow CaMeL State state : def . depends ) {
rank: 579
score: 99.06913829985119
patch: if ( def == null ) { System . out . println ( $STRING$ + def . depends ) ;
rank: 579
score: 98.97818697415866
patch: for ( Var s : node . depends ( ) ) {
rank: 580
score: 99.25022379557292
patch: if ( s . scope != null && def . scope != js CaMeL Scope ) {
rank: 580
score: 99.17226736886161
patch: for ( Must CaMeL Def > 1 : def . depends ) {
rank: 580
score: 99.15631103515625
patch: if ( s != js CaMeL Scope ) { return true ; }
rank: 580
score: 99.15137736002605
patch: for ( Var s + s : def . depends )
rank: 580
score: 99.07150503305289
patch: for ( Var s : null . depends == null ) {
rank: 580
score: 99.06891741071429
patch: for ( Var s : def . depends ) { depends . add ( def . depends ) ; }
rank: 580
score: 98.97792746803977
patch: for ( double s : def . depends ) {
rank: 581
score: 99.28618977864583
patch: for ( Var s : def . entry CaMeL Set ( ) ) {
rank: 581
score: 99.2490593405331
patch: if ( s . scope != js CaMeL Scope . get CaMeL In ( ) )
rank: 581
score: 99.189453125
patch: try { for ( Var s : n . depends ) {
rank: 581
score: 99.15578988882211
patch: for ( Graph CaMeL Node s : def . depends ) {
rank: 581
score: 99.15084838867188
patch: for ( Integer s : def . depends ( ) )
rank: 581
score: 99.0714340209961
patch: for ( Var s : def . depends ? def . depends ) break {
rank: 582
score: 99.24888392857143
patch: / * if ( def . scope != js CaMeL Scope ) {
rank: 582
score: 99.18941824776786
patch: / * for ( Var s : n . get ) * /
rank: 582
score: 99.17186482747395
patch: if ( def instanceof Must CaMeL Def > > ) {
rank: 582
score: 99.15418590198864
patch: for ( Definition s : n . depends ) {
rank: 582
score: 99.07142052283653
patch: for ( Var s : new String s . depends ) {
rank: 582
score: 98.97748209635417
patch: Var s : for ( Var s : def . depends ) continue {
rank: 583
score: 99.28609890407986
patch: for ( Var s : def . depends CaMeL On ( name , null ) ) {
rank: 583
score: 99.24858093261719
patch: if ( s . scope != js CaMeL Scope && def . depends ) {
rank: 583
score: 99.18882533482143
patch: for ( Var s : n . depends ( def ) ) {
rank: 583
score: 99.17177908761161
patch: if ( def . get CaMeL Var ( ) != null ) {
rank: 583
score: 99.15340482271634
patch: for ( Var s : def . depends ) def . {
rank: 583
score: 99.1491229717548
patch: if ( def . equals ( js CaMeL Scope ) ) {
rank: 583
score: 99.07140174278847
patch: for ( Var $NUMBER$ Var s : def . depends ) {
rank: 583
score: 99.06842041015625
patch: System . out . println ( $STRING$ + def . get ) ;
rank: 583
score: 98.97733851841518
patch: for ( Var s : def . depends ) { ) { {
rank: 584
score: 99.28594611672794
patch: for ( Var s : def . depends CaMeL On ( this , this ) )
rank: 584
score: 99.24847412109375
patch: if ( state . scope != js CaMeL Scope ) { return true ; }
rank: 584
score: 99.18746243990384
patch: for ( Node < Node > s : def . depends )
rank: 584
score: 99.1525545987216
patch: for ( Var s : def . name ) {
rank: 584
score: 99.1484844501202
patch: if ( def != null && s . scope != null )
rank: 584
score: 99.07137357271634
patch: for ( Var s + def : def . depends ) {
rank: 584
score: 99.06831629136029
patch: if ( def != null ) { final Var s = def . depends ) ;
rank: 584
score: 98.97713797433036
patch: if ( def == null && def . depends != null ) {
rank: 585
score: 99.2853142233456
patch: for ( Var s : def . depends CaMeL On ( ) ) { break ;
rank: 585
score: 99.22512817382812
patch: for ( Var s : def . get CaMeL Def ( ) ) { {
rank: 585
score: 99.18609064275569
patch: for ( Node s : n . depends ) {
rank: 585
score: 99.15247521033653
patch: for ( Var s : n . def . depends ) {
rank: 585
score: 99.07135416666667
patch: for ( Var s : def . depends ) { def = null {
rank: 585
score: 98.97679792131696
patch: / * for ( Var s : def . depends ) { {
rank: 586
score: 99.28516303168402
patch: for ( Var s : def . depends CaMeL On ( this , this ) ) {
rank: 586
score: 99.24811345880681
patch: if ( def == null ) { return false ;
rank: 586
score: 99.18568638392857
patch: for ( Var s : def . get ) { if ( {
rank: 586
score: 99.1524149576823
patch: for ( Var def : def . depends ) { {
rank: 586
score: 99.14719801682692
patch: for ( Node s : def . depends ( ) ) {
rank: 586
score: 99.06816173735119
patch: for ( Var s : def . depends ) { s . depends = def . depends ) ; }
rank: 586
score: 98.97601996527777
patch: for ( Var s : true ) {
rank: 587
score: 99.24794514973958
patch: else def = state . get CaMeL In ( ) . get CaMeL Def ( ) ;
rank: 587
score: 99.22494303385416
patch: for ( Var s : def . get CaMeL Ancestor ( ) ) {
rank: 587
score: 99.185546875
patch: for ( Var n : n . depends CaMeL On )
rank: 587
score: 99.16744995117188
patch: for ( Var - 1 : def . depends ) {
rank: 587
score: 99.14715106670673
patch: if ( state . get CaMeL Next ( ) != null )
rank: 587
score: 99.0711669921875
patch: for ( Var s : def . depends , def . depends . ) {
rank: 588
score: 99.22461751302083
patch: for ( Type s : def . get CaMeL Def ( ) ) {
rank: 588
score: 99.18549053485577
patch: for ( Var s : def . depends CaMeL On ) )
rank: 588
score: 99.16734900841347
patch: for ( Var s >= 1 : def . depends ) {
rank: 588
score: 99.1509121981534
patch: for ( Name s : def . depends ) {
rank: 588
score: 99.0677849264706
patch: if ( ! def . is CaMeL Empty ( ) ) { return null ; }
rank: 588
score: 98.97577776227679
patch: for ( Var s : def . depends ) { { ) {
rank: 589
score: 99.2467510516827
patch: if ( def != null ) { def . return true ;
rank: 589
score: 99.18499755859375
patch: for ( Var s : def . depends ) { Var s )
rank: 589
score: 99.1508037860577
patch: for ( Var s : get CaMeL Scope ( ) ) {
rank: 589
score: 99.14688110351562
patch: Object def = state . get CaMeL Annotation ( ) ;
rank: 589
score: 99.06774184283088
patch: for ( Var s : def . depends ) { def = def . depends {
rank: 589
score: 98.97545276988636
patch: for ( Var s : def . EQ ) {
rank: 590
score: 99.2834243774414
patch: for ( Var s : def . depends CaMeL On ( mode ) ) {
rank: 590
score: 99.22347819010416
patch: for ( Var s : state . get CaMeL Name ( ) ) {
rank: 590
score: 99.18440464564732
patch: for ( Var s : def . depends CaMeL On ( ) {
rank: 590
score: 99.16583251953125
patch: if ( state . is CaMeL In ( ) ) {
rank: 590
score: 99.15052141462054
patch: for ( ? ( Var s : def . depends ) ) {
rank: 590
score: 99.14559232271634
patch: if ( n . get CaMeL In ( ) != null )
rank: 590
score: 99.07027493990384
patch: for ( Var s : null == def . depends ) {
rank: 590
score: 99.06768243963069
patch: for ( Var s : def . get CaMeL Var ( s . get CaMeL Var ( ) ) ) {
rank: 590
score: 98.97512582632211
patch: / * for ( Var s : node . depends ) {
rank: 591
score: 99.28289794921875
patch: for ( Var s : def . depends CaMeL On ( in ) ) {
rank: 591
score: 99.1832275390625
patch: for ( Var CaMeL Definition n : def . depends ) {
rank: 591
score: 99.1655606356534
patch: for ( Definition 1 : def . depends ) {
rank: 591
score: 99.07017164963942
patch: for ( Var s : def . depends ) break ; }
rank: 591
score: 99.06732940673828
patch: for ( Var s : def . depends ) { def = true ; }
rank: 591
score: 98.97503192608173
patch: if ( def != null ) { def . depends ) ;
rank: 592
score: 99.24542595358456
patch: if ( def != state . get CaMeL In ( ) ) { return true ;
rank: 592
score: 99.14955357142857
patch: for ( Var s : def . depends ) : depends ) {
rank: 592
score: 99.14505709134616
patch: for ( Var s : def . equals ( state ) )
rank: 592
score: 99.06944056919643
patch: if ( def == null && def != null . depends ) {
rank: 592
score: 99.06732177734375
patch: for ( Var s : def . depends ) { def = this . depends ) {
rank: 592
score: 98.97459827769886
patch: for ( Var s : filter . depends ) {
rank: 593
score: 99.2815300436581
patch: for ( Var s : def . depends CaMeL On ( s . def ) )
rank: 593
score: 99.14910333806819
patch: for ( Var def : s . depends ) {
rank: 593
score: 99.142822265625
patch: if ( reaching CaMeL Def == null ) {
rank: 593
score: 99.067138671875
patch: for ( Var s : def . depends ) for ( Var s . depends . depends ) {
rank: 594
score: 99.18140520368304
patch: if ( def == null || def == null ) return false ;
rank: 594
score: 99.1490009014423
patch: for ( Var def : def . depends ) return true ;
rank: 594
score: 99.06697805304276
patch: if ( def == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 594
score: 98.97413219105114
patch: for ( Var s : size . depends ) {
rank: 595
score: 99.2194091796875
patch: for ( Var s : node . get CaMeL Annotation ( ) ) {
rank: 595
score: 99.18106783353366
patch: Var s = def . depends CaMeL On ( def ) {
rank: 595
score: 99.16404030539773
patch: for ( Var s > s : def ) {
rank: 595
score: 99.14081280048077
patch: if ( state != null && s . scope != null )
rank: 595
score: 99.06675502232143
patch: for ( Var s : def . depends ) { for ( Var def : def . depends ) {
rank: 595
score: 98.97327532087054
patch: while ( def != null && s . depends != null ) {
rank: 596
score: 99.21913248697916
patch: for ( Var s : def . get CaMeL Double ( ) ) {
rank: 596
score: 99.18105061848958
patch: for ( Var n : def . depends CaMeL On {
rank: 596
score: 99.1404559795673
patch: if ( def . get CaMeL Annotation ( ) == null )
rank: 596
score: 99.06887637867646
patch: for ( Var s = def . depends ) println ( s . depends ) {
rank: 596
score: 99.06643194901316
patch: for ( Var s : def . depends ) { if ( ! def . depends ) {
rank: 596
score: 98.97283380681819
patch: for ( Var s : def . create ) {
rank: 597
score: 99.27973090277777
patch: for ( Var s : def . get . depends CaMeL On ( name ) ) {
rank: 597
score: 99.1475078876202
patch: for ( Var s : state . size ( ) ) {
rank: 597
score: 99.06630859375
patch: for ( Var s : def . depends ) { depends . add ( def . depends ) {
rank: 597
score: 98.97216796875
patch: for ( Var s : def . depends || def == null {
rank: 598
score: 99.0684585571289
patch: for ( Var s : def . depends ) { if ( false ) {
rank: 598
score: 99.0660464638158
patch: for ( Var s : def . depends ) { Var depends = def . depends ) {
rank: 598
score: 98.97148132324219
patch: while ( def != null ) { Var s = def . depends ) {
rank: 599
score: 99.21902669270834
patch: for ( String s : def . get CaMeL Type ( ) ) {
rank: 599
score: 99.17938701923077
patch: Object s = def . depends CaMeL On ( def ) ;
rank: 599
score: 99.16168212890625
patch: for ( Flow CaMeL State < Node > s : def ) {
rank: 599
score: 99.14008037860577
patch: for ( Var s : def . depends ) return def ;
rank: 599
score: 99.06826782226562
patch: if ( def == null && s != null ) {
rank: 599
score: 99.06582802220395
patch: for ( Var s : def . depends ) { Var s = node . depends ) {
rank: 599
score: 98.97100275213069
patch: for ( Var s : vars . depends ) {
rank: 600
score: 99.24324340820313
patch: for ( Var s : def . reaching CaMeL Def . depends ( js CaMeL Scope ) )
rank: 600
score: 99.17854527064732
patch: for ( final Var s : def . depends CaMeL On ) {
rank: 600
score: 99.16163987379808
patch: for ( Var s > s : s . depends ) {
rank: 600
score: 99.14662522536058
patch: for ( Var def : state . def . depends ) {
rank: 600
score: 99.1398174579327
patch: for ( Var s : def . reaching CaMeL Def )
rank: 600
score: 99.06799994574652
patch: for ( Var s : def . depends && def . contains ( def ) ) {
rank: 600
score: 99.06577758789062
patch: for ( Var s : def . depends ) { def = node . depends . depends ) ;
rank: 600
score: 98.97090657552083
patch: for ( final String s : def . depends ) {
rank: 601
score: 99.2423095703125
patch: final Definition def = state . get CaMeL In ( ) . get ( js CaMeL Scope ) ;
rank: 601
score: 99.178466796875
patch: for ( Node < Var > n : def . get ) {
rank: 601
score: 99.14652506510417
patch: for ( Var s : state . depends ) { {
rank: 601
score: 99.13918832632211
patch: if ( s != null && s . scope != null )
rank: 601
score: 99.0679931640625
patch: for ( String def : def . depends ) {
rank: 601
score: 99.0656379250919
patch: for ( Var s : def . depends ) { def . depends ) continue ;
rank: 602
score: 99.27829877068015
patch: for ( Var s : def . depends CaMeL On ( name , true ) )
rank: 602
score: 99.24224446614583
patch: String type = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 602
score: 99.14586292613636
patch: for ( Var s : def . state ) {
rank: 602
score: 99.13881429036458
patch: if ( js CaMeL Scope . scope != null ) {
rank: 602
score: 99.06524367559524
patch: for ( Var s : def . depends ( def . depends ( def . depends ) ) ) {
rank: 603
score: 99.27827004825367
patch: for ( Var s : def . depends CaMeL On ( $STRING$ ) ) { {
rank: 603
score: 99.241943359375
patch: Iterator < Must CaMeL Def > state = n . get CaMeL Annotation ( ) . depends ) ;
rank: 603
score: 99.17715454101562
patch: for ( Var s : n . depends $NUMBER$ ) {
rank: 603
score: 99.14530123197116
patch: for ( Var s > false : def . depends ) {
rank: 603
score: 99.13697228064903
patch: for ( Var s : def . depends ( ) ) ;
rank: 603
score: 99.06762017144098
patch: for ( Var s : def . depends ) { if ( def . next ) {
rank: 603
score: 99.065185546875
patch: for ( Var s : def . get CaMeL Parent ) {
rank: 604
score: 99.27818388097427
patch: for ( Var CaMeL Definition def : def . depends CaMeL On ( ) ) {
rank: 604
score: 99.2416748046875
patch: List < Var > state = n . get CaMeL Annotation ( ) ;
rank: 604
score: 99.21536458333334
patch: for ( Var s : def . set CaMeL Annotation ( ) ) {
rank: 604
score: 99.17641775948661
patch: Set < Var > s = def . depends CaMeL On ) ;
rank: 604
score: 99.16054280598958
patch: for ( Must CaMeL Def > state : def ) {
rank: 604
score: 99.06742037259616
patch: for ( Var s , 0 : def . depends ) {
rank: 604
score: 99.06507025824652
patch: for ( Var s : def . depends ) { if ( state . depends ) {
rank: 604
score: 98.9702377319336
patch: for ( Var s : def . depends != null && def . depends )
rank: 605
score: 99.24071587456598
patch: if ( js CaMeL Scope . get CaMeL Var ( name ) != js CaMeL Scope )
rank: 605
score: 99.2153076171875
patch: for ( Var s : def . get CaMeL In ( ) ) throws
rank: 605
score: 99.17567661830357
patch: for ( Var >= 0 : def . depends CaMeL On ) {
rank: 605
score: 99.16016496930804
patch: for ( Var 1 s > s : def . depends ) {
rank: 605
score: 99.06471162683823
patch: if ( ! s . is CaMeL Empty ( ) ) { return null ; }
rank: 605
score: 98.96999887319711
patch: for ( Var s : def . depends ) { break {
rank: 606
score: 99.23988970588235
patch: for ( Var s : js CaMeL Scope . get CaMeL Node ( ) ) {
rank: 606
score: 99.21527506510417
patch: for ( String s : state . get CaMeL In ( ) ) {
rank: 606
score: 99.17564039963942
patch: for ( Type s : def . depends CaMeL On ) {
rank: 606
score: 99.15862567608173
patch: for ( Graph CaMeL Node < Node , Branch > ) {
rank: 606
score: 99.14410400390625
patch: while ( s . scope == js CaMeL Scope ) {
rank: 606
score: 99.13198852539062
patch: if ( state . scope == null ) {
rank: 606
score: 99.06731708233173
patch: for ( Var s : def . depends != null { {
rank: 606
score: 98.96807391826923
patch: Var s == null ? null : def . depends ) ;
rank: 607
score: 99.27630256204044
patch: for ( Var s : def . depends CaMeL On ( line CaMeL Number ) )
rank: 607
score: 99.15840970552884
patch: if ( def instanceof Must CaMeL Def > - 1 ) {
rank: 607
score: 99.06700642903645
patch: def for ( Var s : def . depends ) {
rank: 607
score: 98.96785191127232
patch: for ( Var s : def . depends CaMeL On ( s {
rank: 608
score: 99.2392911044034
patch: return def . scope != js CaMeL Scope ) ;
rank: 608
score: 99.21437174479166
patch: for ( Var s : null . get CaMeL Annotation ( ) ) {
rank: 608
score: 99.17333984375
patch: for ( Var s : n . depends CaMeL On ( { {
rank: 608
score: 99.13031475360577
patch: for ( Var s : def . equals ( def ) )
rank: 608
score: 99.06678185096153
patch: for ( int [ ] s : def . depends ) {
rank: 608
score: 99.06353759765625
patch: while ( def != null && def != null ) {
rank: 608
score: 98.96697998046875
patch: for ( Var s : def . depends , def )
rank: 609
score: 99.27576401654412
patch: for ( Var s : def . depends CaMeL On ( name , ) ) {
rank: 609
score: 99.21368815104167
patch: for ( Var s : def . get CaMeL Message ( ) ) {
rank: 609
score: 99.17328435724431
patch: if ( def == null || def == null )
rank: 609
score: 99.12898763020833
patch: if ( state != null && s != null ) {
rank: 609
score: 99.06674533420139
patch: for ( Var s : def . depends $NUMBER$ def ( s ) . depends ) {
rank: 609
score: 99.06353081597223
patch: for ( Node s : def . depends ) { if ( def . depends ) {
rank: 609
score: 98.96675248579545
patch: for ( Var s : build . depends ) {
rank: 610
score: 99.23885947779605
patch: return def . depends ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 610
score: 99.17325265066964
patch: for ( Var s : n . get CaMeL Fields ( ) )
rank: 610
score: 99.15784630408653
patch: for ( Var s != null : def . depends ) {
rank: 610
score: 99.14285982572116
patch: for ( Var s >= null : def . depends ) {
rank: 610
score: 99.12685546875
patch: for ( Var s : s . depends )
rank: 610
score: 99.06655447823661
patch: for ( def : def . depends && def . depends ) {
rank: 610
score: 98.96661376953125
patch: Var s : for ( final Var s : def . depends )
rank: 611
score: 99.2740478515625
patch: for ( Node < Node > s : def . get CaMeL Var ( ) )
rank: 611
score: 99.17279522235577
patch: for ( Var s : n . get CaMeL Var ) {
rank: 611
score: 99.14232459435097
patch: for ( Var s : def . depends ) { System .
rank: 611
score: 99.12657752403847
patch: final Definition def = state . get CaMeL In ( ) ;
rank: 611
score: 99.062255859375
patch: for ( Var s : def . depends ) Var s = def . depends ) }
rank: 612
score: 99.17254638671875
patch: return def != null && def . depends CaMeL On ( ) ;
rank: 612
score: 99.15697303185097
patch: for ( Var s >> 1 : def . depends ) {
rank: 612
score: 99.14210094105114
patch: for ( Var count : def . depends ) {
rank: 612
score: 99.06617320667614
patch: for ( int $NUMBER$ : def . depends ) {
rank: 612
score: 98.96558556189903
patch: for ( Var < ? > s : def . depends )
rank: 613
score: 99.27298990885417
patch: for ( Var s : def . depends CaMeL On ( level ) )
rank: 613
score: 99.23682925575658
patch: return def . get ( js CaMeL Scope . get CaMeL Var ( name ) ) ; }
rank: 613
score: 99.17222377232143
patch: for ( Var s : n . get CaMeL Out ( ) )
rank: 613
score: 99.15659005301339
patch: for ( Var s ++ > s : def . depends ) {
rank: 613
score: 99.14122596153847
patch: for ( Var s : name . size ( ) ) {
rank: 613
score: 99.12523475060097
patch: if ( s . get CaMeL Value ( ) != null )
rank: 613
score: 99.06604942908653
patch: for ( Var s : def . depends $NUMBER$ s ) {
rank: 613
score: 99.06205240885417
patch: for ( Var s : def . get ) { if ( s . depends ) {
rank: 613
score: 98.9647928873698
patch: } for ( String s : def . depends ) {
rank: 614
score: 99.27295639935662
patch: for ( Var s : def . depends CaMeL On ( s ) . depends )
rank: 614
score: 99.17163957868304
patch: if ( def != null && def . depends CaMeL On ) {
rank: 614
score: 99.14012732872597
patch: for ( Var def : def . size ( ) ) {
rank: 614
score: 99.06598369891827
patch: for ( Var s : def . depends && s ) {
rank: 614
score: 99.0618896484375
patch: for ( Var s : def . depends ) { def . depends ( depends ) ;
rank: 614
score: 98.9644442471591
patch: for ( Runtime s : def . depends ) {
rank: 615
score: 99.2726691750919
patch: for ( Var s : def . depends CaMeL On ( ) ) { continue ;
rank: 615
score: 99.23643493652344
patch: if ( def != state . get CaMeL In ( ) ) return true ;
rank: 615
score: 99.17136056082589
patch: try { for ( Var s : def . depends ) { {
rank: 615
score: 99.155517578125
patch: for ( Must CaMeL Def def : def ) {
rank: 615
score: 99.13991135817308
patch: for ( Var s extends s : def . depends ) {
rank: 615
score: 99.06592906605114
patch: for ( Var s : 0 . def ) {
rank: 616
score: 99.23556857638889
patch: for ( Must CaMeL Def < Must CaMeL Def > def : def . depends ) {
rank: 616
score: 99.17132568359375
patch: for ( Var s : n )
rank: 616
score: 99.1547139485677
patch: if ( state instanceof Must CaMeL Def > 0 ) {
rank: 616
score: 99.12303670247395
patch: Var def = state . get CaMeL Value ( ) ;
rank: 616
score: 99.06540151742789
patch: for ( Var s : null . depends $NUMBER$ null ) {
rank: 616
score: 98.96352317116477
patch: for ( Error s : def . depends ) {
rank: 617
score: 99.16907610212054
patch: if ( ! def . depends CaMeL On ( def ) ) {
rank: 617
score: 99.15326799665179
patch: for ( Var s + - 1 : def . depends ) {
rank: 617
score: 99.1390380859375
patch: if ( def != js CaMeL Scope && def . depends ) {
rank: 617
score: 99.12271118164062
patch: Definition def = state . get CaMeL Root ( ) ;
rank: 617
score: 99.06491323617789
patch: Var s : if ( def != null . depends ) {
rank: 617
score: 99.06138102213542
patch: for ( Var s : def . depends ) { return def . depends ( ) ;
rank: 617
score: 98.96321323939732
patch: for ( Var s : def . depends ) { case 0 :
rank: 618
score: 99.27204132080078
patch: for ( Var s : def . depends CaMeL On ( default ) ) {
rank: 618
score: 99.16856166294643
patch: if ( def == null || def . depends CaMeL On ) {
rank: 618
score: 99.15317007211539
patch: for ( Number s : def . depends ( ) ) {
rank: 618
score: 99.13883463541667
patch: for ( for CaMeL Var : def . depends ) {
rank: 618
score: 99.12192789713542
patch: Definition def = state . get CaMeL Instance ( ) ;
rank: 618
score: 99.06486680772569
patch: for ( Var s = def . depends ) println ( def . depends ) ; }
rank: 618
score: 98.96319110576923
patch: for ( for ( Node s : def . depends ) {
rank: 619
score: 99.27189127604167
patch: for ( Var s : def . depends CaMeL On ( $NUMBER$ ) )
rank: 619
score: 99.16843825120192
patch: String s = def . depends CaMeL On ( def ) ;
rank: 619
score: 99.13709435096153
patch: for ( Var s : def . get . depends ) {
rank: 619
score: 99.0647834329044
patch: for ( Var s : def . depends && def . depends ) { break {
rank: 619
score: 99.06110297309027
patch: if ( s != null ) { for ( Var s : def . depends ) {
rank: 619
score: 98.96295720880681
patch: for ( Var s : def . null ) {
rank: 620
score: 99.27137666590073
patch: for ( Var CaMeL Definition s : def . get CaMeL In ( ) ) {
rank: 620
score: 99.23414522058823
patch: if ( def != null ) { state . get CaMeL Annotation ( ) . {
rank: 620
score: 99.15137657752403
patch: for ( Node . Var s : def . depends ) {
rank: 620
score: 99.13697228064903
patch: for ( Var s == null : def . depends ) {
rank: 620
score: 99.06463153545673
patch: for ( Var [ ] null : def . depends ) {
rank: 620
score: 99.06109297902961
patch: for ( Var s : def . depends ) { Var s : node . depends ) {
rank: 621
score: 99.23362513950893
patch: if ( js CaMeL Scope != null ) { return true ; }
rank: 621
score: 99.16804722377232
patch: for ( Var < Var > s : n . depends ) {
rank: 621
score: 99.11825561523438
patch: Annotation def = state . get CaMeL Value ( ) ;
rank: 621
score: 99.06422932942708
patch: for ( Var s : def . depends ) println ( s . depends ) ; }
rank: 621
score: 99.06106085526316
patch: for ( Var s : def . depends ( def . depends ( def ) ) ) {
rank: 622
score: 99.27074477251838
patch: for ( Node < Node > def : def . get CaMeL Var ( ) )
rank: 622
score: 99.23350172776442
patch: if ( state != js CaMeL Scope ) { return true ;
rank: 622
score: 99.16781180245536
patch: if ( def != null ) def = def . depends ) ;
rank: 622
score: 99.15012904575893
patch: for ( Set < Var > state : def . depends ) {
rank: 622
score: 99.06366644965277
patch: for ( Var s : def . depends ( ) def . depends ( ) ) {
rank: 622
score: 98.95929424579327
patch: for ( Var s : new Integer s . depends ) {
rank: 623
score: 99.26986694335938
patch: for ( Var s : def . depends CaMeL On ( { def ) ;
rank: 623
score: 99.167724609375
patch: for ( Var s : def , depends CaMeL On ) {
rank: 623
score: 99.14937918526786
patch: if ( js CaMeL Scope instanceof Must CaMeL Def > state ) {
rank: 623
score: 99.06075032552083
patch: for ( Var s : def . depends ) return def . depends ( def ) ;
rank: 623
score: 98.95881870814732
patch: for ( Var s : def . depends ) def != null ;
rank: 624
score: 99.26981608072917
patch: for ( Node < Node > def : def . depends CaMeL On ( this ) )
rank: 624
score: 99.16719970703124
patch: for ( Var s : def ) { {
rank: 624
score: 99.13407076322116
patch: for ( Var s : def . matches ( ) ) {
rank: 624
score: 99.11395874023438
patch: for ( Var s : def . contains )
rank: 624
score: 99.06350473257211
patch: for ( String s : def . depends , def ) {
rank: 624
score: 99.06056722005208
patch: for ( Var s : def . depends ) { if ( current . depends ) {
rank: 624
score: 98.95838512073864
patch: for ( Throwable s : def . depends ) {
rank: 625
score: 99.23252563476562
patch: if ( def != null ) return true ;
rank: 625
score: 99.19332181490384
patch: for ( Var s : def . resolve ( ) ) {
rank: 625
score: 99.16449444110577
patch: for ( String s : def . depends CaMeL On ) {
rank: 625
score: 99.14906529017857
patch: Definition def = state . get CaMeL In ( ) : null ;
rank: 625
score: 99.06000719572368
patch: if ( def != null && def . depends ) { return def . depends ) ; }
rank: 626
score: 99.26868438720703
patch: for ( Var s : def . depends CaMeL On ( locale ) ) {
rank: 626
score: 99.19252232142857
patch: for ( Var s : def . depends ) return null ; }
rank: 626
score: 99.16449444110577
patch: for ( Var n : n . depends CaMeL On ( {
rank: 626
score: 99.146240234375
patch: for ( Var s ++ : s . depends ) {
rank: 626
score: 99.13377888997395
patch: for ( ( Var s : def . depends ) {
rank: 626
score: 99.1128641764323
patch: Definition def = state . get CaMeL Name ( ) ;
rank: 626
score: 99.06302897135417
patch: for ( Var s : def . depends ) { while ( s . depends ) {
rank: 626
score: 99.05998883928571
patch: if ( def == null ) { return true ; } else {
rank: 627
score: 99.26864624023438
patch: for ( Node < Node < Node > def : def . depends ) {
rank: 627
score: 99.232275390625
patch: if ( s != null && s . scope != js CaMeL Scope )
rank: 627
score: 99.16327373798077
patch: for ( Node s : n . depends CaMeL On ) {
rank: 627
score: 99.14563860212054
patch: for ( Object < Node > s : def . depends ) {
rank: 627
score: 99.13292347301136
patch: for ( Var s : column . depends ) {
rank: 627
score: 99.06267755681819
patch: for ( Var s , def . depends ) {
rank: 627
score: 99.05992635091145
patch: if ( def != null || def . depends ) {
rank: 627
score: 98.95664760044643
patch: for ( Var s : def . depends && parent != null {
rank: 628
score: 99.23214901194854
patch: if ( js CaMeL Scope != null || def . scope != js CaMeL Scope )
rank: 628
score: 99.16287935697116
patch: for ( Var CaMeL Definition s : def . get ) {
rank: 628
score: 99.14545147235577
patch: for ( Var s >> def : def . depends ) {
rank: 628
score: 99.05934544613487
patch: for ( Var s : def . depends ) { Var value = def . depends ) ;
rank: 629
score: 99.26779354319854
patch: for ( Node < Var > def : def . get CaMeL In ( ) )
rank: 629
score: 99.1617901141827
patch: / * for ( Var s : n . depends ) {
rank: 629
score: 99.13214111328125
patch: for ( Var s : def . ( ) ) {
rank: 629
score: 99.1094462076823
patch: Definition def = s . get CaMeL Annotation ( ) ;
rank: 629
score: 99.05910237630208
patch: if ( def != null && def . get CaMeL Depth ( ) == 0 ) {
rank: 630
score: 99.26741790771484
patch: for ( Var s : state . depends CaMeL On ( def ) ) {
rank: 630
score: 99.23064221833882
patch: if ( s . get CaMeL Annotation ( ) != state . get CaMeL In ( ) )
rank: 630
score: 99.16124549278847
patch: for ( Number s : def . depends CaMeL On ) {
rank: 630
score: 99.14391217912946
patch: for ( Var s : def . depends CaMeL On > ) {
rank: 630
score: 99.1316669170673
patch: for ( Var s : def . use CaMeL Node ) {
rank: 630
score: 99.06186349051339
patch: for ( Var s : def . depends && ( ) ) {
rank: 630
score: 99.05888928865132
patch: for ( Var s : def . depends ( s . depends ( def ) ) ) {
rank: 630
score: 98.95452325994319
patch: for ( Var s : group . depends ) {
rank: 631
score: 99.26739095052083
patch: for ( Var s : def . depends CaMeL On ( group ) )
rank: 631
score: 99.1088358561198
patch: if ( state != get CaMeL Scope ( ) ) {
rank: 631
score: 99.0617167154948
patch: if ( def != null && def instanceof Var ) {
rank: 631
score: 99.05872866981908
patch: if ( def == null ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 631
score: 98.95424397786458
patch: while ( s != null && def != null ) {
rank: 632
score: 99.26724582248264
patch: for ( Node < Var > s : def . depends CaMeL On ( this ) )
rank: 632
score: 99.2305908203125
patch: if ( def != null ) { state . get CaMeL In ( ) . get CaMeL
rank: 632
score: 99.14360700334821
patch: for ( Var s : def . depends CaMeL On ( ) ,
rank: 632
score: 99.1310323079427
patch: if ( s != js CaMeL Scope ) return true ;
rank: 632
score: 99.10824584960938
patch: Definition def = def . get CaMeL Value ( ) ;
rank: 632
score: 99.05854797363281
patch: for ( Var s : def . depends ) { for ( Var ) {
rank: 632
score: 98.9541015625
patch: Var s : Var s = def . depends ) ;
rank: 633
score: 99.26612854003906
patch: for ( Var s : def . depends CaMeL On ( column ) ) {
rank: 633
score: 99.18614783653847
patch: for ( Var s : def . depends ( ) ) }
rank: 633
score: 99.1307705965909
patch: for ( Var s : next . depends ) {
rank: 633
score: 98.9530029296875
patch: if ( def != null Var != null ) {
rank: 634
score: 99.1490009014423
patch: for ( Var s : def . get ) { { {
rank: 634
score: 99.13059645432692
patch: for ( Var s : is CaMeL In ( ) ) {
rank: 634
score: 99.06079973493304
patch: / * for ( Var s : def . depends ) break {
rank: 634
score: 99.05770263671874
patch: for ( Var s : def . depends ) { def . depends ( s . depends ) ;
rank: 635
score: 99.14841871995192
patch: for ( Var s : n . depends CaMeL On { {
rank: 635
score: 99.14178936298077
patch: for ( Definition s > s : def . depends ) {
rank: 635
score: 99.10716756184895
patch: Node def = state . get CaMeL In ( ) ;
rank: 635
score: 99.06078423394098
patch: for ( Var s : def . depends ) { Var s = def . depends CaMeL
rank: 635
score: 99.05757649739583
patch: for ( ? > def : def . depends ) {
rank: 635
score: 98.95155686598558
patch: for ( Var s : def . depends instanceof Var ) {
rank: 636
score: 99.26529693603516
patch: for ( Var s : n . get . depends CaMeL On ( ) )
rank: 636
score: 99.12828572591145
patch: for ( Var s : ! def . scope ) {
rank: 636
score: 99.10714721679688
patch: if ( state != null && def != null ) {
rank: 636
score: 99.05753366570724
patch: for ( Var s : def . depends ) { def = def . depends ) ; {
rank: 636
score: 98.94981971153847
patch: for ( final Var s : def . depends . depends )
rank: 637
score: 99.26470947265625
patch: for ( Node s : def . depends CaMeL On ( this ) ) {
rank: 637
score: 99.22952609592014
patch: if ( s . reaching CaMeL Def . get ( js CaMeL Scope ) ) {
rank: 637
score: 99.14578247070312
patch: for ( Var s : n . depends ) break ;
rank: 637
score: 99.14078463040866
patch: for ( Var s : def . depends - 1 ) {
rank: 637
score: 99.10701497395833
patch: Annotation def = def . get CaMeL Annotation ( ) ;
rank: 637
score: 99.05958775111607
patch: for ( Var s : def . depends , s def ) {
rank: 637
score: 99.05703938802084
patch: for ( Var s : def . depends ) { def = false ;
rank: 637
score: 98.94969831194196
patch: if ( def != null ) { def . depends ) ; }
rank: 638
score: 99.26386854383681
patch: for ( Node < Var > def : def . get CaMeL In ( ) ) {
rank: 638
score: 99.22908782958984
patch: return def . reaching CaMeL Def . get ( js CaMeL Scope ) ;
rank: 638
score: 99.14547025240384
patch: for ( Var s : n . depends ) { ) {
rank: 638
score: 99.14054361979167
patch: for ( Graph CaMeL Node < Node != null ) {
rank: 638
score: 99.12765842013889
patch: for ( Var s : scope ) {
rank: 638
score: 99.10623779296876
patch: for ( Object s : def . depends )
rank: 638
score: 99.05916654146634
patch: for ( Var s : null != s . depends ) {
rank: 638
score: 99.0566739169034
patch: for ( Var [ ] def : def ) {
rank: 639
score: 99.22892252604167
patch: if ( s . scope != js CaMeL Scope ) { return false ;
rank: 639
score: 99.14520733173077
patch: Block s = def . depends CaMeL On ( def ) ;
rank: 639
score: 99.05915832519531
patch: Var s = def . depends ) ; if ( def == null ) {
rank: 639
score: 99.0566650390625
patch: for ( Var s : def . depends ) { s . depends . add ( def ) ;
rank: 639
score: 98.94919259207589
patch: for ( Var s : new ? s : def . depends )
rank: 640
score: 99.26220703125
patch: for ( Var s : def . depends . values ( ) ) {
rank: 640
score: 99.22771139705883
patch: for ( Graph CaMeL Node < Must CaMeL Def > state : def . depends )
rank: 640
score: 99.14423076923077
patch: int n = def . depends CaMeL On ( def ) ;
rank: 640
score: 99.13960774739583
patch: for ( Must CaMeL Def > def : def ) {
rank: 640
score: 99.12605794270833
patch: for ( final Definition s : def . depends ) {
rank: 640
score: 99.1047607421875
patch: for ( Var s : def . depends (
rank: 640
score: 99.056640625
patch: System . out . println ( def . depends ) ;
rank: 640
score: 98.94902692522321
patch: for ( Var s : def . depends ) { case null :
rank: 641
score: 99.22721593520221
patch: if ( def != null ) { state . get CaMeL In ( ) . {
rank: 641
score: 99.14351196289063
patch: for ( Var s : n ) { {
rank: 641
score: 99.13950417258523
patch: for ( Var s <= def . depends ) {
rank: 641
score: 99.12342418323864
patch: for ( State def : def . depends ) {
rank: 641
score: 99.05837180397727
patch: for ( Var s : def . abs ) {
rank: 641
score: 99.05641526442308
patch: for ( Var s : [ 1 ] . depends ) {
rank: 641
score: 98.94816450639205
patch: for ( Object s : node . depends ) {
rank: 642
score: 99.14317908653847
patch: Var s = def . depends CaMeL On ( s ) ;
rank: 642
score: 99.1389872233073
patch: if ( def instanceof Must CaMeL Def > false ) {
rank: 642
score: 99.10435791015625
patch: for ( Var s : def . matches )
rank: 642
score: 99.05621016652961
patch: if ( def == null ) { throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 642
score: 98.94809194711539
patch: for ( final Var s : def . depends ) continue ;
rank: 643
score: 99.26107584635416
patch: for ( Var s : n . depends CaMeL On ( $STRING$ ) )
rank: 643
score: 99.22609991776316
patch: if ( def != null && s . reaching CaMeL Def . get ( js CaMeL Scope
rank: 643
score: 99.14281287560097
patch: for ( Visitor < Var > s : def . depends )
rank: 643
score: 99.12337239583333
patch: for ( if ( def != js CaMeL Scope ) {
rank: 643
score: 99.10366821289062
patch: for ( Var s : def . value )
rank: 643
score: 99.0579833984375
patch: for ( Var s : def . depends ) { return ) ; }
rank: 643
score: 98.94775390625
patch: for ( Style s : def . depends ) {
rank: 644
score: 99.26095920138889
patch: for ( Node < Var > def : def . depends CaMeL On ( def ) )
rank: 644
score: 99.22598970853366
patch: if ( def == state . get CaMeL In ( ) )
rank: 644
score: 99.1427471454327
patch: for ( Var ( Var s : def . depends ) )
rank: 644
score: 99.1385967548077
patch: for ( Var s > s : n . depends ) {
rank: 644
score: 99.1232022372159
patch: for ( Var s : original . depends ) {
rank: 644
score: 99.05777681790866
patch: for ( Var s : def . depends , 0 ) {
rank: 644
score: 99.05597245065789
patch: for ( Var s : def . depends ) def = ( Var s . depends ) {
rank: 644
score: 98.94739708533653
patch: for ( Var s : def . depends ) throw null ;
rank: 645
score: 99.14134724934895
patch: Set < Var > s = def . depends ) ;
rank: 645
score: 99.13836200420673
patch: for ( Var s ++ ++ : def . depends ) {
rank: 645
score: 99.12269944411058
patch: for ( Node use CaMeL Node : def . depends ) {
rank: 645
score: 99.101806640625
patch: Var def = def . get CaMeL In ( ) ;
rank: 645
score: 99.05711669921875
patch: for ( def : def . depends ) {
rank: 645
score: 99.05587607935855
patch: for ( Var s : def . depends ) { Var id = def . depends ) ;
rank: 645
score: 98.94724527994792
patch: for for ( Var s : def . depends ) {
rank: 646
score: 99.25932094029018
patch: for ( Node < Node > def : def . get ) {
rank: 646
score: 99.14090670072116
patch: Var n = def . depends CaMeL On ( def ) ;
rank: 646
score: 99.13742065429688
patch: for ( final Branch s : def . depends ) {
rank: 646
score: 99.12200372869319
patch: for ( Var column : def . depends ) {
rank: 646
score: 99.10162353515625
patch: if ( state instanceof Must CaMeL Def > $NUMBER$ ) {
rank: 646
score: 99.05533640008224
patch: for ( Var s : def . depends ( def . depends ( depends ) ) ) {
rank: 646
score: 98.94603135850694
patch: for ( Var s : parameters ) {
rank: 647
score: 99.25908551897321
patch: for ( Var s : def . get CaMeL Out ( ) )
rank: 647
score: 99.22469329833984
patch: if ( def == state . get CaMeL In ( ) ) return true ;
rank: 647
score: 99.17119806463069
patch: for ( Var $NUMBER$ : def . depends ) {
rank: 647
score: 99.13612717848558
patch: for ( Var s -- ++ : def . depends ) {
rank: 647
score: 99.12181678185097
patch: for ( Var s : def . depends ) : break ;
rank: 647
score: 99.10153198242188
patch: if ( state != js CaMeL Scope ) return false ;
rank: 647
score: 99.05656163832721
patch: for ( Var s : def . depends ) return def . depends ) ; }
rank: 647
score: 99.05528846153847
patch: if ( def != null ) { for ( Var ) {
rank: 648
score: 99.25906032986111
patch: for ( Var s : def . depends CaMeL On ( $STRING$ , this ) ) {
rank: 648
score: 99.2241455078125
patch: if ( n . scope != js CaMeL Scope ) { return true ;
rank: 648
score: 99.13597615559895
patch: if ( state instanceof Must CaMeL Def > true ) {
rank: 648
score: 99.12172444661458
patch: if ( def != get CaMeL Cfg ( ) ) {
rank: 648
score: 99.10146262428977
patch: if ( js CaMeL Scope != js CaMeL Scope )
rank: 648
score: 99.0550870028409
patch: for ( Var s : def . in ) {
rank: 648
score: 98.94544566761364
patch: for ( Var s : values . depends ) {
rank: 649
score: 99.25865936279297
patch: for ( Var s : state . depends CaMeL On ( s ) ) {
rank: 649
score: 99.22381950827206
patch: for ( Graph CaMeL Node < Must CaMeL Def > n : def . depends )
rank: 649
score: 99.13929161658653
patch: for ( Var n : n . depends ( ) ) {
rank: 649
score: 99.1215487393466
patch: for ( Branch def : state . depends ) {
rank: 649
score: 99.09983317057292
patch: Cfg def = state . get CaMeL In ( ) ;
rank: 649
score: 99.05623372395833
patch: for ( Var depends ] : def . depends ) {
rank: 649
score: 99.05469689002403
patch: / * for ( Var s : def . get ) {
rank: 649
score: 98.94537823016827
patch: Var s : def = def . depends ( s ) ;
rank: 650
score: 99.25861002604167
patch: for ( Var s : def . depends CaMeL On ( key ) )
rank: 650
score: 99.22296820746527
patch: for ( Graph CaMeL Node < Must CaMeL Def > def : def . depends ) {
rank: 650
score: 99.16586739676339
patch: Definition [ : for ( Var s : def . depends ) {
rank: 650
score: 99.05619673295455
patch: for ( String s : null . depends ) {
rank: 650
score: 99.05452880859374
patch: final Var s = def . depends ) {
rank: 650
score: 98.9452792080966
patch: for ( Var s : def . check ) {
rank: 651
score: 99.13900756835938
patch: def = def . depends CaMeL On ( def ) ;
rank: 651
score: 99.13408954326923
patch: for ( Var s . def : def . depends ) {
rank: 651
score: 99.12061564127605
patch: for ( Definition s : def . depends ) { {
rank: 651
score: 99.09849964488636
patch: if ( state . scope == js CaMeL Scope )
rank: 651
score: 99.05599772135416
patch: for ( Var s = ( Var s : def . depends ) {
rank: 652
score: 99.13668118990384
patch: Expr s = def . depends CaMeL On ( def ) ;
rank: 652
score: 99.1198974609375
patch: while ( s != js CaMeL Scope ) {
rank: 652
score: 99.09844360351562
patch: if ( reaching CaMeL Def != null )
rank: 652
score: 99.05597478693181
patch: for ( String s : def . next ) {
rank: 653
score: 99.25646294487848
patch: for ( Node < Node > s : def . depends CaMeL On ( this ) )
rank: 653
score: 99.22094048394098
patch: if ( def != null ) state . get CaMeL In ( ) . return true ;
rank: 653
score: 99.13663423978366
patch: Var s = def . depends CaMeL On ( this ) ;
rank: 653
score: 99.1327616373698
patch: for ( Var $NUMBER$ def : def . depends ) {
rank: 653
score: 99.09757486979167
patch: if ( def instanceof Must CaMeL Def > null ) {
rank: 653
score: 99.05315399169922
patch: if ( def != null && def != null && def . depends ) {
rank: 653
score: 98.94285231370192
patch: for ( Var s : def . depends ) return $NUMBER$ {
rank: 654
score: 99.22068956163194
patch: for ( Var s : def . reaching CaMeL Def . get ( js CaMeL Scope
rank: 654
score: 99.13588303786058
patch: for ( Var target : n . depends CaMeL On ) {
rank: 654
score: 99.1195068359375
patch: for ( Var s : def . false ) {
rank: 654
score: 99.097412109375
patch: for ( Var s : def . clear ) {
rank: 654
score: 99.05544809194711
patch: / / for ( Var s : def . depends ) {
rank: 654
score: 98.94265512319711
patch: / * for ( Var s : def . depends ) continue
rank: 655
score: 99.25613403320312
patch: for ( Var s : def . depends CaMeL On ( { s ) ;
rank: 655
score: 99.22039794921875
patch: for ( Var s : def . depends [ 0 ] . depends ) {
rank: 655
score: 99.15812465122768
patch: for ( Var s : def . parse ( name ) ) {
rank: 655
score: 99.13580322265625
patch: for ( Var s : def . values ) { {
rank: 655
score: 99.11904074928977
patch: for ( Var s : source . depends ) {
rank: 655
score: 99.09465026855469
patch: if ( n != null ) {
rank: 655
score: 99.05517578125
patch: for ( Var s : def . depends , def s ) {
rank: 655
score: 99.05133734809027
patch: for ( Var s : def . depends ) { def = depends . depends ) ;
rank: 655
score: 98.94264526367188
patch: for CaMeL Var : def . depends ) {
rank: 656
score: 99.22022356305804
patch: if ( js CaMeL Scope != null && def . depends ) {
rank: 656
score: 99.05487467447917
patch: for ( Var s : def . depends && def . depends ) throws
rank: 656
score: 99.05124383223684
patch: for ( Var s : def . depends ) { def = def . depends ) continue {
rank: 657
score: 99.15378824869792
patch: Definition state = state . get CaMeL In ( ) ;
rank: 657
score: 99.13441819411058
patch: for ( Var filter : def . depends CaMeL On ) {
rank: 657
score: 99.11832369290866
patch: for ( Var s : def . depends ) return s ;
rank: 657
score: 99.0929463704427
patch: for ( Var 1 Var s : def . depends )
rank: 657
score: 99.05480085100446
patch: for ( for ( Var s : def . depends ) break {
rank: 657
score: 99.05120849609375
patch: while ( def != null ) { for ( Var s : def . depends ) {
rank: 658
score: 99.22000885009766
patch: return def . scope != js CaMeL Scope . get CaMeL Annotation ( ) ;
rank: 658
score: 99.13411771334134
patch: for ( Node < Var > n : def . depends )
rank: 658
score: 99.11747602982955
patch: for ( Branch s : state . depends ) {
rank: 658
score: 99.09288533528645
patch: for ( Var s : def . iterator ( ) )
rank: 658
score: 99.05475408380681
patch: for ( Var s : null . type ) {
rank: 658
score: 98.9415283203125
patch: for ( Var s : node . depends ) { ) {
rank: 659
score: 99.13372333233173
patch: for ( Var value : def . depends CaMeL On ) {
rank: 659
score: 99.1174649325284
patch: for ( Var list : def . depends ) {
rank: 659
score: 99.09170532226562
patch: for ( Must CaMeL Def s : def . depends )
rank: 659
score: 99.05439897017045
patch: for ( Var s : 0 . type ) {
rank: 659
score: 99.05055638363487
patch: for ( Var s : def . depends ) { Var s : type . depends ) {
rank: 659
score: 98.94145063920455
patch: for ( Var s : end . depends ) {
rank: 660
score: 99.12883966619319
patch: if ( s instanceof Must CaMeL Def > ) {
rank: 660
score: 99.09166463216145
patch: for ( Var s : def . trim ( ) )
rank: 660
score: 99.05426494891827
patch: / } for ( Var s : def . depends ) {
rank: 660
score: 99.04990797776442
patch: for ( Var s : def . depends ( depends ) )
rank: 660
score: 98.94063626802884
patch: for ( String s : def . depends ) { ) {
rank: 661
score: 99.13344163161058
patch: for ( Node < Var > s : n . depends )
rank: 661
score: 99.12872869318181
patch: for ( Integer def : def . depends ) {
rank: 661
score: 99.05384318033855
patch: for ( Var s : def . depends ? def {
rank: 662
score: 99.2538833618164
patch: for ( Var s : def . depends CaMeL On ( ) . depends )
rank: 662
score: 99.21814643012152
patch: return def != null ? js CaMeL Scope . get CaMeL In ( ) : null ;
rank: 662
score: 99.13283128004808
patch: for ( Var s : n . depends ) return true ;
rank: 662
score: 99.08984375
patch: Flow CaMeL State < Must CaMeL Def > state ;
rank: 662
score: 99.05376434326172
patch: for ( Var s : def . depends ) { Var s = null {
rank: 662
score: 99.0482406616211
patch: for ( Var s : def . depends ) def = s . depends )
rank: 662
score: 98.93939763849431
patch: for ( Var s : mode . depends ) {
rank: 663
score: 99.25383758544922
patch: for ( Var s : def . depends CaMeL On ( source ) ) {
rank: 663
score: 99.21778779871323
patch: if ( js CaMeL Scope . get CaMeL Annotation ( ) != js CaMeL Scope )
rank: 663
score: 99.13162935697116
patch: Var def = def . depends CaMeL On ( def ) ;
rank: 663
score: 99.12750713641827
patch: for ( Object use CaMeL Node : def . depends ) {
rank: 663
score: 99.11612955729167
patch: for ( Var Var s : def . depends ) {
rank: 663
score: 99.0896504720052
patch: for ( Var s > def : def . depends )
rank: 663
score: 99.04799582741477
patch: for ( Var s : def . load ) {
rank: 663
score: 98.93696424696181
patch: for ( Var s : nodes ) {
rank: 664
score: 99.25289154052734
patch: for ( Var s : n . depends CaMeL On ( type ) ) {
rank: 664
score: 99.217041015625
patch: if ( def != js CaMeL Scope . get CaMeL In ( ) )
rank: 664
score: 99.1278545673077
patch: for ( Var s : n . get ) { { {
rank: 664
score: 99.05287522536058
patch: for ( Var s : 0 == def . depends ) {
rank: 664
score: 99.04799582741477
patch: for ( Var s : def . clone ) {
rank: 665
score: 99.2510757446289
patch: for ( Var s : def . depends CaMeL On ( module ) ) {
rank: 665
score: 99.0883076985677
patch: Definition def = state . get CaMeL Default ( ) ;
rank: 665
score: 99.05264047475961
patch: for ( Var s : 0 . depends ( ) ) {
rank: 665
score: 99.04794921875
patch: for ( Var s : def . depends ) { def . depends )
rank: 665
score: 98.93678977272727
patch: for ( Var s : def . Runtime ) {
rank: 666
score: 99.25078582763672
patch: for ( Var s : def . depends CaMeL On ( input ) ) {
rank: 666
score: 99.21595110212054
patch: name = js CaMeL Scope . get CaMeL Var ( name ) ;
rank: 666
score: 99.13254018930289
patch: for ( Var s : null . depends ( ) ) {
rank: 666
score: 99.1271084872159
patch: for ( short s : def . depends ) {
rank: 666
score: 99.12635387073864
patch: for ( Var s : def , def ) {
rank: 666
score: 99.11543579101563
patch: for ( ? : def . depends ) {
rank: 666
score: 99.08815511067708
patch: for ( Var s : def . values ( ) )
rank: 666
score: 99.05138050426136
patch: for ( Var s : get , depends ) {
rank: 666
score: 99.04772010216347
patch: if ( ! def . is CaMeL Var ( ) ) {
rank: 666
score: 98.93609064275569
patch: for ( long s : def . depends ) {
rank: 667
score: 99.25032043457031
patch: for ( Var s : def . depends CaMeL On ( ) ) { }
rank: 667
score: 99.13209025065105
patch: Definition state = n . get CaMeL Annotation ( ) ;
rank: 667
score: 99.12687174479167
patch: for ( Var s : def . depends CaMeL On CaMeL
rank: 667
score: 99.12587483723958
patch: for ( Node < Var > s : def ) {
rank: 667
score: 99.088134765625
patch: if ( state . is CaMeL Annotation ( ) ) {
rank: 668
score: 99.12584339488636
patch: for ( Var s : def . options ) {
rank: 668
score: 99.11407940204327
patch: for ( Var s : Flow CaMeL State . depends ) {
rank: 668
score: 99.08767700195312
patch: if ( s == null ) { return false ; }
rank: 668
score: 99.0509765625
patch: for ( Var s : def . depends ) println ( def ) {
rank: 668
score: 99.04465157645089
patch: if ( def != null ) { return def . get ) ;
rank: 668
score: 98.93593343098958
patch: if ( s != null && def . depends ) {
rank: 669
score: 99.24934387207031
patch: for ( Var s : def . depends CaMeL On ( values ) ) {
rank: 669
score: 99.21556745256696
patch: if ( def != null && s != js CaMeL Scope ) {
rank: 669
score: 99.1263897235577
patch: for ( Var [ ++ def : def . depends ) {
rank: 669
score: 99.125732421875
patch: Node s = def . depends CaMeL On ( def ) ;
rank: 669
score: 99.11342366536458
patch: for ( Var s >> : def . depends ) {
rank: 669
score: 99.05095880681819
patch: for ( Var s : def . class ) {
rank: 670
score: 99.13077799479167
patch: Definition for ( Var s : def . depends ) {
rank: 670
score: 99.12344125600961
patch: for ( Var s : n . get CaMeL Vars ) {
rank: 670
score: 99.11322576349431
patch: for ( Var scope : state . depends ) {
rank: 670
score: 99.0865478515625
patch: Definition def = state . get CaMeL Var ( ) ;
rank: 670
score: 99.05084906684027
patch: for ( String s : def . depends ) { if ( def . depends ) {
rank: 670
score: 98.93561260516827
patch: for ( for ( Var s : node . depends ) {
rank: 671
score: 99.13053385416667
patch: if ( s instanceof Must CaMeL Def > null ) {
rank: 671
score: 99.1258544921875
patch: Definition def = null ; if ( def != null ) {
rank: 671
score: 99.12330322265625
patch: for ( Var s : n . get )
rank: 671
score: 99.11241736778847
patch: if ( s . scope != js CaMeL Scope ) { {
rank: 671
score: 99.0858662923177
patch: Definition def = state . get CaMeL Node ( ) ;
rank: 671
score: 99.05083759014423
patch: for ( Var s : def . depends , values ) {
rank: 671
score: 99.04279436383929
patch: if ( def == null ) { return def . depends ) ;
rank: 671
score: 98.93489896334134
patch: Var s ; for ( Var s : def . depends )
rank: 672
score: 99.24797821044922
patch: for ( Var s : def . depends CaMeL On ( logger ) ) {
rank: 672
score: 99.21465705422794
patch: if ( def == state . get CaMeL In ( ) ) { return true ;
rank: 672
score: 99.12259615384616
patch: for ( Var s : n . get CaMeL Arg ) {
rank: 672
score: 99.05032113882211
patch: for ( String s : def . depends $NUMBER$ null ) {
rank: 672
score: 98.9335049715909
patch: for ( Compiler s : def . depends ) {
rank: 673
score: 99.12950721153847
patch: for ( Double s : def . depends ( ) ) {
rank: 673
score: 99.12215169270833
patch: if ( def != null && def != def ) {
rank: 673
score: 99.11098410866477
patch: for ( Var s : def . depends ) :
rank: 673
score: 99.04264831542969
patch: for ( Var s : def . depends ) { def = depends ) {
rank: 673
score: 98.93310546875
patch: for ( Var s : continue . depends ) {
rank: 674
score: 99.11065204326923
patch: for ( for ( Var s : state . depends ) {
rank: 674
score: 99.08494059244792
patch: for ( Var s : state . depends ( ) )
rank: 674
score: 99.0496074969952
patch: for ( for ( Var s : def . depends ) throws
rank: 674
score: 99.04256439208984
patch: for ( Var s : def . get CaMeL Parent ( ) . depends )
rank: 674
score: 98.93181903545673
patch: for ( Var s : def . depends ) throw null {
rank: 675
score: 99.2144024188702
patch: if ( def != null ) { state . return true ;
rank: 675
score: 99.12024864783653
patch: for ( Var default : def . depends CaMeL On ) {
rank: 675
score: 99.11025766225961
patch: for ( Var s >= false : def . depends ) {
rank: 675
score: 99.0837910970052
patch: for ( Must CaMeL Def state : def . depends )
rank: 675
score: 99.04917214133523
patch: for ( Var s : def . make ) {
rank: 675
score: 99.04178059895834
patch: if ( def != null ) { def = def . depends ) {
rank: 675
score: 98.93119673295455
patch: for ( Var s : count . depends ) {
rank: 676
score: 99.1199481670673
patch: for ( Var name : n . depends CaMeL On ) {
rank: 676
score: 99.11951622596153
patch: for ( Must CaMeL Def 1 : def . depends ) {
rank: 676
score: 99.08270818536931
patch: if ( state . depends CaMeL On ( ) )
rank: 676
score: 99.04903835720486
patch: for ( Var s : def . depends && def . contains ( s ) ) {
rank: 676
score: 99.0416592684659
patch: for ( Var s : def . current ) {
rank: 676
score: 98.93111843532986
patch: for ( Var s : names ) {
rank: 677
score: 99.24378967285156
patch: for ( Var s : def . depends CaMeL On ( init ) ) {
rank: 677
score: 99.21233452690973
patch: if ( def != state . get CaMeL In ( ) ) { return true ; }
rank: 677
score: 99.11952561598558
patch: do { for ( Var s : n . depends ) {
rank: 677
score: 99.1189434344952
patch: for ( Var s >> s : state . depends ) {
rank: 677
score: 99.08270818536931
patch: if ( def . scope != js CaMeL Scope )
rank: 677
score: 99.0414706143466
patch: for ( Var property : def . depends ) {
rank: 678
score: 99.21201171875
patch: if ( def == null && s . scope != js CaMeL Scope )
rank: 678
score: 99.11827596028645
patch: for ( Var n : def . get ) { {
rank: 678
score: 99.10863148082386
patch: for ( Type def : def . depends ) {
rank: 678
score: 99.0821024576823
patch: Annotation def = def . get CaMeL In ( ) ;
rank: 678
score: 99.04890272352431
patch: for ( Var s : def . depends && s . depends ( def ) ) {
rank: 678
score: 99.04070638020833
patch: for ( Var s : def . depends ) for ( Var s {
rank: 678
score: 98.93030894886364
patch: for ( Var s : def . reset ) {
rank: 679
score: 99.21187337239583
patch: if ( s . get CaMeL Annotation ( ) != js CaMeL Scope ) return true ;
rank: 679
score: 99.11806418678977
patch: for ( Var filter : def . depends ) {
rank: 679
score: 99.11766357421875
patch: if ( def instanceof Must CaMeL Def ) {
rank: 679
score: 99.08197021484375
patch: for ( Var s : def . state . depends )
rank: 679
score: 99.04866297104779
patch: for ( Var s = def . get CaMeL Var ( s . depends ) {
rank: 679
score: 98.9302645596591
patch: for ( Var s : super . depends ) {
rank: 680
score: 99.11802164713542
patch: / * for ( Var s : def ) * /
rank: 680
score: 99.08191935221355
patch: Definition def = state . get CaMeL Id ( ) ;
rank: 680
score: 98.9298428622159
patch: for ( int def : def . depends ) {
rank: 681
score: 99.24191720145089
patch: for ( Var s : n . get CaMeL Length ( ) )
rank: 681
score: 99.21142578125
patch: if ( js CaMeL Scope != null && def != js CaMeL Scope ) {
rank: 681
score: 99.1178729717548
patch: for ( Var exp : n . depends CaMeL On ) {
rank: 681
score: 99.11702473958333
patch: if ( def instanceof Must CaMeL Def > 1 ) {
rank: 681
score: 99.10819185697116
patch: for ( Var s : state . depends ) return true ;
rank: 681
score: 99.04005015980114
patch: for ( Node s : def . get ) {
rank: 681
score: 98.9298095703125
patch: for ( Var s : def . run ) {
rank: 682
score: 99.24127604166667
patch: for ( Var s : def . depends CaMeL On ( scope ) )
rank: 682
score: 99.21077728271484
patch: if ( def != null ) return def . get CaMeL Annotation ( ) ;
rank: 682
score: 99.11710298978366
patch: for ( Var ( Var s : n . depends ) )
rank: 682
score: 99.11572265625
patch: if ( def == null ) return true ;
rank: 682
score: 99.04814995659723
patch: for ( Var s : def . depends ) { if ( def . contains ) {
rank: 682
score: 99.03999837239583
patch: return def != null ? def != null : null ;
rank: 682
score: 98.92929909446023
patch: for ( Var s : def . depends ) false
rank: 683
score: 99.21050666360294
patch: if ( s != js CaMeL Scope && s . scope != js CaMeL Scope )
rank: 683
score: 99.11564127604167
patch: for ( Var 1 s : state . depends ) {
rank: 683
score: 98.9292461688702
patch: for ( Var s : def . depends ) return ) ;
rank: 684
score: 99.11681189903847
patch: int s = def . depends CaMeL On ( def ) ;
rank: 684
score: 99.11499962439903
patch: for ( Var $NUMBER$ s state : def . depends ) {
rank: 684
score: 99.10663519965277
patch: for ( Var def : depends ) {
rank: 684
score: 99.07811279296875
patch: for ( T s : def . depends )
rank: 684
score: 99.04799241286058
patch: for ( int [ ] 0 : def . depends ) {
rank: 685
score: 99.23981584821429
patch: for ( Type s : def . depends CaMeL On ( ) )
rank: 685
score: 99.11664287860577
patch: for ( Node s : def . depends CaMeL On ( {
rank: 685
score: 99.11412464488636
patch: for ( ? 1 : def . depends ) {
rank: 685
score: 99.10560099283855
patch: if ( def == js CaMeL Scope ) return true ;
rank: 685
score: 99.07729270241477
patch: if ( state instanceof Must CaMeL Def > null )
rank: 685
score: 99.04787375710227
patch: for ( Object s : null . depends ) {
rank: 685
score: 98.92844645182292
patch: while ( def != null || s != null ) {
rank: 686
score: 99.239501953125
patch: for ( Var s : def . get CaMeL Interfaces ( ) )
rank: 686
score: 99.11575082632211
patch: int def = def . depends CaMeL On ( def ) ;
rank: 686
score: 99.1137186686198
patch: if ( def != null && state != null ) {
rank: 686
score: 99.1035625751202
patch: for ( Var s > null : def . depends ) {
rank: 686
score: 99.07726033528645
patch: try { for ( Var s : def . depends )
rank: 686
score: 99.04774693080357
patch: if ( def != null . depends && s != null ) {
rank: 686
score: 98.9282977764423
patch: for ( Var s : def . depends ) case null :
rank: 687
score: 99.2393798828125
patch: for ( Var s : n . get CaMeL In ( ) ) { {
rank: 687
score: 99.1129483309659
patch: for ( boolean def : def . depends ) {
rank: 687
score: 98.92722778320312
patch: if ( s . depends != null ) {
rank: 688
score: 99.23914337158203
patch: for ( Var s : n . depends CaMeL On ( id ) ) {
rank: 688
score: 99.11463758680556
patch: for ( Var n : def ) {
rank: 688
score: 99.1126220703125
patch: for ( Var s ++ : def ) {
rank: 688
score: 99.102294921875
patch: for ( Branch s : def . depends CaMeL On ) {
rank: 688
score: 99.07602761008523
patch: if ( def != null && s != null )
rank: 688
score: 99.04676402698864
patch: for ( Object [ : def . depends ) {
rank: 688
score: 99.03709827769886
patch: for ( Var s : def . depends ) .
rank: 688
score: 98.92722574869792
patch: while ( s != null || def != null ) {
rank: 689
score: 99.23828125
patch: for ( Node < Node > s : def . get ) {
rank: 689
score: 99.20909966362848
patch: if ( def != null && js CaMeL Scope . get CaMeL In ( ) ) {
rank: 689
score: 99.11435171274039
patch: for ( Var def : n . depends CaMeL On ) {
rank: 689
score: 99.11192908653847
patch: Definition def = state . get CaMeL In ( ) ; }
rank: 689
score: 99.11099947415866
patch: for ( Var $NUMBER$ : def . depends ( ) ) {
rank: 689
score: 99.10100848858173
patch: for ( Var s : state . scope . depends ) {
rank: 689
score: 99.0467529296875
patch: for ( Var s : def . depends && def . depends , def . depends )
rank: 689
score: 99.0365219116211
patch: for ( Iterator < Var > n > next = def . depends ) {
rank: 689
score: 98.92684936523438
patch: if ( s != null && s . depends ) {
rank: 690
score: 99.20904181985294
patch: if ( def != null ) return s . scope != js CaMeL Scope ) ;
rank: 690
score: 99.1136983235677
patch: for ( Var s : def . depends ) * /
rank: 690
score: 99.1116055575284
patch: for ( Object n : def . depends ) {
rank: 690
score: 99.07557169596355
patch: for ( Var s : def . equals ( ) )
rank: 690
score: 98.92679850260417
patch: Var s : if ( def instanceof Var s ) {
rank: 691
score: 99.20891571044922
patch: if ( def != null ) return def . scope != js CaMeL Scope ;
rank: 691
score: 99.11330003004808
patch: for ( Var s : def . depends ) { def )
rank: 691
score: 99.10917154947917
patch: if ( def . is CaMeL Annotation ( ) ) {
rank: 691
score: 99.09952799479167
patch: for ( final Var s : state . depends ) {
rank: 691
score: 99.07540283203124
patch: for ( Branch s : def . depends )
rank: 691
score: 99.04644097222223
patch: for ( Var s : def . depends ) { if ( def . get ) {
rank: 692
score: 99.23717447916667
patch: for ( Var s : def . depends CaMeL On ( { break ;
rank: 692
score: 99.10793832632211
patch: for ( Must CaMeL Def > s : def . depends CaMeL
rank: 692
score: 99.09923377403847
patch: for ( Var s : def . depends ) throw false ;
rank: 692
score: 99.04619891826923
patch: for ( Var s : def . depends , parameters ) {
rank: 693
score: 99.20803833007812
patch: if ( js CaMeL Scope != null && s != js CaMeL Scope ) {
rank: 693
score: 99.10308283025569
patch: for ( Must CaMeL Def state : def ) {
rank: 693
score: 99.09865500710227
patch: for ( Var def : scope . depends ) {
rank: 693
score: 99.07387473366477
patch: if ( state . equals ( null ) ) {
rank: 693
score: 99.0457255045573
patch: if ( def != null . depends != null ) {
rank: 693
score: 99.03416090745192
patch: if ( def == null && def instanceof Var s ) {
rank: 693
score: 98.92559344951923
patch: for ( final Var s : def . depends ) break ;
rank: 694
score: 99.23636881510417
patch: for ( Var s : n . depends CaMeL On ( target ) )
rank: 694
score: 99.10623168945312
patch: for ( extends Var s : def . depends ) {
rank: 694
score: 99.0734354654948
patch: Definition def = state . get CaMeL Length ( ) ;
rank: 694
score: 99.04560852050781
patch: for ( Var s ] : def . depends || def != null ) {
rank: 694
score: 99.0337801846591
patch: if ( def == null ) { continue ; }
rank: 694
score: 98.9232510653409
patch: for ( Var s : changed . depends ) {
rank: 695
score: 99.11138446514423
patch: for ( Node < Var > def : def . depends )
rank: 695
score: 99.10623168945312
patch: for ( Var s -- : state . depends ) {
rank: 695
score: 99.07290649414062
patch: for ( String s : def . depends ( ) )
rank: 695
score: 99.03262329101562
patch: if ( node != null && def != null ) {
rank: 695
score: 98.92314009232955
patch: for ( Var s : code . depends ) {
rank: 696
score: 99.20760091145833
patch: for ( Var s : def . depends || s . scope != js CaMeL Scope )
rank: 696
score: 99.11133829752605
patch: { for ( Var s : n . depends ) {
rank: 696
score: 99.1061503092448
patch: for ( Iterator < Var : def . depends ) {
rank: 696
score: 99.0727030436198
patch: Annotation def = n . get CaMeL Annotation ( ) ;
rank: 696
score: 99.04553940716912
patch: for ( Var s : def != null ? def : def . depends ) {
rank: 696
score: 99.03225272042411
patch: / * for ( Var s : def . depends ) continue {
rank: 696
score: 98.92308460582386
patch: for ( Var s : props . depends ) {
rank: 697
score: 99.23471069335938
patch: for ( Var s : def . depends CaMeL On ( stream ) ) {
rank: 697
score: 99.07124837239583
patch: for ( Var s : s . depends ( ) )
rank: 697
score: 99.04534912109375
patch: for ( Var s : def . depends ? def . depends ) break ;
rank: 697
score: 98.92215670072116
patch: Var s : for CaMeL Var : def . depends ) {
rank: 698
score: 99.20655235877403
patch: if ( s . scope != null ) { return true ;
rank: 698
score: 99.11027221679687
patch: if ( def != null ) return false ;
rank: 698
score: 99.07094504616477
patch: for ( Var s : def . append ) {
rank: 698
score: 99.04505504261364
patch: for ( Var s : true . depends ) {
rank: 698
score: 99.03192138671875
patch: for ( Var s : def . . depends ) {
rank: 698
score: 98.922119140625
patch: for ( Var s : def . start ) {
rank: 699
score: 99.23169759114583
patch: for ( Var s : def . depends CaMeL On ( { def )
rank: 699
score: 99.20650482177734
patch: if ( s != null && def . scope != js CaMeL Scope ) {
rank: 699
score: 99.10943603515625
patch: if ( def == null || def == def ) {
rank: 699
score: 99.10105387369792
patch: synchronized ( n . get CaMeL Annotation ( ) ) {
rank: 699
score: 99.10035400390625
patch: if ( s . scope == null ) {
rank: 699
score: 99.07009887695312
patch: Definition def = state . get CaMeL Result ( ) ;
rank: 699
score: 99.04497736150569
patch: for ( Var s : 0 . next ) {
rank: 699
score: 99.0316162109375
patch: for ( Node n : def . depends ) {
rank: 700
score: 99.10854270241477
patch: for ( Var exp : n . depends ) {
rank: 700
score: 99.10015314275569
patch: for ( Var s : def . iterator ) {
rank: 700
score: 99.09761555989583
patch: for ( Var s : 1 ) {
rank: 700
score: 99.0928955078125
patch: for ( Var s : n . get CaMeL Def ) {
rank: 700
score: 99.06934703480114
patch: for ( Var s : def . put ) {
rank: 700
score: 99.04478102463942
patch: for ( Var s : def . depends - 0 ) {
rank: 701
score: 99.23135579427084
patch: for ( Node def : def . depends CaMeL On ( ) ) {
rank: 701
score: 99.20597570082721
patch: if ( js CaMeL Scope . get CaMeL In ( ) != js CaMeL Scope )
rank: 701
score: 99.09739176432292
patch: Definition def = n . get CaMeL Def ( ) ;
rank: 701
score: 99.06888834635417
patch: if ( def != js CaMeL Scope )
rank: 701
score: 99.0447246844952
patch: for ( Var s : $STRING$ == s . depends ) {
rank: 701
score: 99.02989612926136
patch: for ( Var parameter : def . depends ) {
rank: 701
score: 98.9202880859375
patch: for ( boolean depends : def . depends ) {
rank: 702
score: 99.23033040364584
patch: for ( Var s : def . depends CaMeL On ( null ) )
rank: 702
score: 99.10802001953125
patch: for ( Var n : n . depends )
rank: 702
score: 99.0444805438702
patch: for ( Var s : def . depends 1 def ) {
rank: 702
score: 99.02944946289062
patch: * for ( Var s : def . depends ) {
rank: 703
score: 99.23018973214286
patch: for ( int s = 0 ; s < def . depends )
rank: 703
score: 99.107421875
patch: for ( Var target : n . depends ) {
rank: 703
score: 99.09841918945312
patch: for ( Var ( : def . depends ) ) {
rank: 703
score: 99.09122408353366
patch: for ( Var s : get CaMeL Node ( ) ) {
rank: 703
score: 99.04424370659723
patch: for ( Var s = ( Var s : def . depends ) . depends ) {
rank: 703
score: 99.02930704752605
patch: Iterator < Var > n = def . depends ) {
rank: 703
score: 98.91867300180289
patch: for ( Var s : def . depends ) continue ; {
rank: 704
score: 99.228515625
patch: for ( Var s : def . get CaMeL Resources ( ) ) {
rank: 704
score: 99.20541561351104
patch: for ( Must CaMeL Def < Must CaMeL Def > state : def . depends )
rank: 704
score: 99.0910311612216
patch: for ( Var def : def . scope ) {
rank: 704
score: 99.06644897460937
patch: for ( Var s : def . length )
rank: 704
score: 99.044189453125
patch: for ( Var s : def . depends & def ) {
rank: 705
score: 99.10480291193181
patch: for ( Var s : def . Arguments ) {
rank: 705
score: 99.09703650841347
patch: Definition def = js CaMeL Scope . get CaMeL In ( )
rank: 705
score: 99.09473673502605
patch: if ( state . size ( ) != 0 ) {
rank: 705
score: 99.0658447265625
patch: if ( use CaMeL Node != null ) {
rank: 705
score: 99.0440340909091
patch: for ( Var s : null . get ) {
rank: 705
score: 98.9185282389323
patch: for ( public Var s : def . depends ) {
rank: 706
score: 99.2277099609375
patch: for ( int s = 0 ; s < n . depends ) {
rank: 706
score: 99.20490579044117
patch: if ( s . scope != null && def . scope != js CaMeL Scope )
rank: 706
score: 99.096435546875
patch: for ( char s : def . depends ) {
rank: 706
score: 99.09471546519886
patch: for ( Var s : def . close ) {
rank: 706
score: 99.08826700846355
patch: while ( def . scope != js CaMeL Scope ) {
rank: 706
score: 99.0438232421875
patch: for ( Object s : def . depends , depends ) {
rank: 706
score: 98.91847737630208
patch: for ( final Object s : def . depends ) {
rank: 707
score: 99.20414733886719
patch: for ( Var s : def . get CaMeL Node ( ) . depends )
rank: 707
score: 99.10362752278645
patch: for ( Var CaMeL Definition s : n . depends )
rank: 707
score: 99.04375751201923
patch: for ( Var s , s : def . depends ) {
rank: 708
score: 99.22559465680804
patch: for ( Var s : def . get CaMeL Prototype ( ) )
rank: 708
score: 99.20281219482422
patch: if ( def != null && n . scope != js CaMeL Scope ) {
rank: 708
score: 99.0959003155048
patch: for ( Var s = def . get CaMeL In ( )
rank: 708
score: 99.06109064275569
patch: if ( s . scope == js CaMeL Scope )
rank: 708
score: 99.04293823242188
patch: for ( Var s : def . depends 0 ) {
rank: 708
score: 99.02698863636364
patch: for ( Var s : def . exp ) {
rank: 709
score: 99.20193917410714
patch: if ( js CaMeL Scope != js CaMeL Scope ) return true ;
rank: 709
score: 99.08338419596355
patch: for ( Var s : def . depends ) else {
rank: 709
score: 99.0426913174716
patch: for ( Var s : def . pop ) {
rank: 709
score: 99.02669583834134
patch: if ( def != null || def instanceof Var s ) {
rank: 710
score: 99.22400774274554
patch: for ( Var s : def . depends [ 0 ] ) {
rank: 710
score: 99.20187813895089
patch: if ( state != js CaMeL Scope ) { return true ; }
rank: 710
score: 99.0999247233073
patch: for ( Var >= 0 : def . depends ) {
rank: 710
score: 99.08223100142045
patch: for ( Node state : def . depends ) {
rank: 710
score: 99.04193793402777
patch: for ( Var s : null . depends ) { def = def . depends ) {
rank: 710
score: 99.02660115559895
patch: final Var s : if ( def instanceof Var ) {
rank: 710
score: 98.91766826923077
patch: for ( Var s : def . depends ) { continue {
rank: 711
score: 99.20164579503677
patch: if ( def != null ) state . get CaMeL In ( ) . get CaMeL
rank: 711
score: 99.09772283380681
patch: for ( Var s : def . vars ) {
rank: 711
score: 99.09414672851562
patch: if ( def . js CaMeL Scope != null ) {
rank: 711
score: 99.08180930397727
patch: for ( Var s != js CaMeL Scope ) {
rank: 711
score: 99.06015846946023
patch: for ( Var s : def . end ) {
rank: 711
score: 99.04188889723558
patch: for ( Var s : def . depends , current ) {
rank: 711
score: 99.0264004794034
patch: for ( Var values : def . depends ) {
rank: 711
score: 98.91745229867789
patch: / * { for ( Var s : def . depends )
rank: 712
score: 99.20137786865234
patch: for ( Node < Must CaMeL Def > n : def . depends ) {
rank: 712
score: 99.09757856889205
patch: for ( Var s : def . split ) {
rank: 712
score: 99.04177024147727
patch: for ( Var s : def . insert ) {
rank: 712
score: 99.0263671875
patch: for ( Set < Var > def : depends ) {
rank: 713
score: 99.22195638020834
patch: for ( Var s : n . get CaMeL Nodes ( ) ) {
rank: 713
score: 99.09722900390625
patch: / ) for ( Var s : def . depends )
rank: 713
score: 99.08048872514205
patch: for ( Var group : def . depends ) {
rank: 713
score: 99.057861328125
patch: for ( Var s : def . format ) {
rank: 713
score: 99.04150390625
patch: for ( Var s : def . depends != null && def . depends == ) {
rank: 713
score: 98.91632634943181
patch: for ( Ref s : def . depends ) {
rank: 714
score: 99.21881975446429
patch: for ( Node < Var > def : def . get ) {
rank: 714
score: 99.0414530436198
patch: for ( { Var s : def . depends ) {
rank: 714
score: 99.02628580729167
patch: if ( def != null ) { return ) ; }
rank: 714
score: 98.9162930575284
patch: for ( Var s : init . depends ) {
rank: 715
score: 99.21847970145089
patch: for ( String s : def . depends CaMeL On ( ) )
rank: 715
score: 99.09527587890625
patch: for ( Node s : def . depends ) { {
rank: 715
score: 99.0916239420573
patch: for ( ? > s : state . depends ) {
rank: 715
score: 99.041259765625
patch: for ( Var s : $STRING$ != s . depends ) {
rank: 715
score: 99.02577718098958
patch: if ( def != null && def . get ) {
rank: 715
score: 98.91592407226562
patch: for ( Var s : def . depends ) continue )
rank: 716
score: 99.21815592447916
patch: for ( String s : def . depends CaMeL On ( s ) )
rank: 716
score: 99.07881673177083
patch: if ( def == js CaMeL Scope ) return false ;
rank: 716
score: 99.05437360491071
patch: if ( state == null )
rank: 716
score: 99.0233154296875
patch: if ( def != null ) { return depends ) ; }
rank: 716
score: 98.9158426920573
patch: for ( String s : def . depends ) { {
rank: 717
score: 99.19890594482422
patch: if ( s . scope != js CaMeL Scope ) { return false ; }
rank: 717
score: 99.0947265625
patch: for ( Visitor s : def . depends ) {
rank: 717
score: 99.0912616436298
patch: Definition def = null ; if ( def == null ) {
rank: 717
score: 99.04086483226104
patch: for ( Var s : def . depends ) { s = def . depends )
rank: 717
score: 99.02077229817708
patch: for ( Var [ ] def : def . depends )
rank: 717
score: 98.91495971679687
patch: if ( def . depends == null ) {
rank: 718
score: 99.21761648995536
patch: for ( Node < Var > s = def . depends ) {
rank: 718
score: 99.1981201171875
patch: if ( js CaMeL Scope . get CaMeL In ( ) ) {
rank: 718
score: 99.09457397460938
patch: for ( Node s : def . depends CaMeL On )
rank: 718
score: 99.09067946213942
patch: Definition def = null ; if ( state != null ) {
rank: 718
score: 99.0778475674716
patch: for ( Var s : state . def ) {
rank: 718
score: 99.05397727272727
patch: if ( s . equals ( s ) ) {
rank: 718
score: 99.04073079427083
patch: : for ( Var s : def . depends ) {
rank: 718
score: 98.91485595703125
patch: Var s : Var s = def . depends ) {
rank: 719
score: 99.09339488636364
patch: for ( Var s : depends CaMeL On ) {
rank: 719
score: 99.04059600830078
patch: for ( Var s : def . depends && def == null Var ) {
rank: 719
score: 99.0186298076923
patch: for ( Var ( s : def . depends ) ) {
rank: 720
score: 99.21673177083333
patch: for ( final Var s : def . depends CaMeL On ( ) )
rank: 720
score: 99.1976318359375
patch: if ( def != null ) { state . get CaMeL In ( )
rank: 720
score: 99.09229125976563
patch: if ( def != null ) return def ;
rank: 720
score: 99.04032076322116
patch: for ( Var s Set null : def . depends ) {
rank: 720
score: 99.01805530894886
patch: for ( Assignment s : def . depends ) {
rank: 720
score: 98.9137471516927
patch: System . out . println ( $STRING$ + def ) ;
rank: 721
score: 99.19667154947916
patch: for ( Must CaMeL Def [ ] def : def . depends ) {
rank: 721
score: 99.09105335582386
patch: for ( Var s : def . depends ( {
rank: 721
score: 99.0890604654948
patch: if ( state instanceof Must CaMeL Def > > ) {
rank: 721
score: 99.04710804332386
patch: for ( Var s : def . compare ) {
rank: 721
score: 99.04022575827206
patch: for ( Var s : def != null ? s : def . depends ) {
rank: 721
score: 99.01735617897727
patch: for ( Object type : def . depends ) {
rank: 721
score: 98.9137471516927
patch: if ( def != null || s == null ) {
rank: 722
score: 99.19594163161058
patch: return def . depends CaMeL On ( use CaMeL Node ) ;
rank: 722
score: 99.08780924479167
patch: for ( Var s : def . list ) { {
rank: 722
score: 99.07725016276042
patch: synchronized ( state . get CaMeL In ( ) ) {
rank: 722
score: 99.07521750710227
patch: for ( Var s : def . push ) {
rank: 722
score: 99.04539905894886
patch: if ( state != null && s != null )
rank: 722
score: 98.91372680664062
patch: if ( def . depends && def . depends ) {
rank: 723
score: 99.08766867897727
patch: for ( Var CaMeL Definition s : def ) {
rank: 723
score: 99.07713826497395
patch: for ( Var s : def . depends depends ) {
rank: 723
score: 99.07334391276042
patch: if ( state . size ( ) == 0 ) {
rank: 723
score: 99.0391512784091
patch: for ( { if ( def != null ) {
rank: 723
score: 99.01685791015625
patch: if ( def != null ) throw null ;
rank: 723
score: 98.91366811899039
patch: for ( Var ( Var s : def . depends ) {
rank: 724
score: 99.08727010091145
patch: if ( state instanceof Must CaMeL Def > state ) {
rank: 724
score: 99.08725807883523
patch: for ( Var name : n . depends ) {
rank: 724
score: 99.07697088068181
patch: for ( Var level : def . depends ) {
rank: 724
score: 99.0675760904948
patch: if ( s . length ( ) != 0 ) {
rank: 724
score: 99.04503784179687
patch: for ( Var s : def . size )
rank: 724
score: 99.03897857666016
patch: for ( Var s : ( Var [ : def . depends ) ) {
rank: 724
score: 98.91344275841347
patch: for ( Var s : def . depends ) break ) {
rank: 725
score: 99.21424153645833
patch: for ( Var s : def . depends CaMeL On ( true ) )
rank: 725
score: 99.08657004616477
patch: for ( Var n : def . values ) {
rank: 725
score: 99.07659912109375
patch: while ( state . scope != js CaMeL Scope ) {
rank: 725
score: 99.03889973958333
patch: for ( Var s : null . depends ) { if ( def . depends ) {
rank: 725
score: 99.01649827223558
patch: if ( def != null && ! def . depends ) {
rank: 726
score: 99.21365559895834
patch: for ( Var s : def . get CaMeL Dependencies ( ) ) {
rank: 726
score: 99.19490559895833
patch: return def . scope != js CaMeL Scope . get CaMeL In ( )
rank: 726
score: 99.04041205512152
patch: if ( s . scope != null )
rank: 726
score: 99.03873697916667
patch: for ( Object s ] : def . depends ) {
rank: 726
score: 98.91294508713942
patch: / * for ( Var s : def . depends ) false
rank: 727
score: 99.21346609933036
patch: for ( Node < Node > def : n . depends ) {
rank: 727
score: 99.19489397321429
patch: if ( def != null ) { def . return true ; }
rank: 727
score: 99.08551635742188
patch: for ( Var s : def . depends {
rank: 727
score: 99.07476251775569
patch: for ( Var s : def instanceof Branch ) {
rank: 727
score: 99.06561889648438
patch: if ( state == null ) return false ;
rank: 727
score: 99.04021661931819
patch: for ( Var s : def . match ) {
rank: 727
score: 98.91283069957386
patch: Var s : if ( def instanceof Var ) {
rank: 728
score: 99.21336146763393
patch: for ( Var s : s . depends CaMeL On ( ) )
rank: 728
score: 99.19363403320312
patch: if ( n . scope != js CaMeL Scope ) { return true ; }
rank: 728
score: 99.08526056463069
patch: for ( Var s : n . values ) {
rank: 728
score: 99.07460715553977
patch: for ( Reference def : def . depends ) {
rank: 728
score: 99.03812408447266
patch: for ( Var s : def . depends ? def . depends ) continue {
rank: 728
score: 99.01373291015625
patch: if ( type != null && def != null ) {
rank: 728
score: 98.9121426669034
patch: for ( Var s : def . out ) {
rank: 729
score: 99.21281215122768
patch: for ( Var s : n . get CaMeL Value ( ) )
rank: 729
score: 99.19302804129464
patch: if ( def != null && def != js CaMeL Scope ) {
rank: 729
score: 99.0850497159091
patch: Set < Var > s = def . depends )
rank: 729
score: 99.0744961825284
patch: for ( Definition def : n . depends ) {
rank: 729
score: 99.03953968394886
patch: if ( js CaMeL Scope . scope != null )
rank: 729
score: 99.03727722167969
patch: Var s = def . depends ) ; if ( s == null ) {
rank: 730
score: 99.192919921875
patch: if ( def == js CaMeL Scope . get CaMeL In ( ) )
rank: 730
score: 99.08460582386364
patch: for ( Var default : def . depends ) {
rank: 730
score: 99.08270263671875
patch: for ( Var s ++ : n . depends ) {
rank: 730
score: 99.07421875
patch: for ( Var prefix : def . depends ) {
rank: 730
score: 99.01361638849431
patch: if ( def != null ) { Var s :
rank: 730
score: 98.91200764973958
patch: if ( def != null && s . depends ) {
rank: 731
score: 99.08408610026042
patch: for ( Var s : def ) { if ( {
rank: 731
score: 99.08240855823864
patch: for ( Object name : def . depends ) {
rank: 731
score: 99.03708120492789
patch: Var s = null ; if ( s != null ) {
rank: 731
score: 99.03621049360795
patch: if ( state != js CaMeL Scope ) { {
rank: 732
score: 99.0610860188802
patch: for ( Flow CaMeL State < Must CaMeL Def > state
rank: 732
score: 99.03628305288461
patch: for ( Var s : def . get , def ) {
rank: 732
score: 99.0123291015625
patch: if ( n != null && def != null ) {
rank: 732
score: 98.91170247395833
patch: / * for ( String s : def . depends )
rank: 733
score: 99.21190592447917
patch: for ( Var s : def . depends CaMeL On ( annotation ) )
rank: 733
score: 99.1925048828125
patch: if ( def != null && def . state != js CaMeL Scope )
rank: 733
score: 99.08157348632812
patch: n = def . depends CaMeL On ( def ) ;
rank: 733
score: 99.07283158735795
patch: for ( Var s : n . scope ) {
rank: 733
score: 99.03622097439236
patch: for ( Var s : def . depends ) { if ( s . next ) {
rank: 733
score: 99.02948552911931
patch: for ( Var s >> : def . depends )
rank: 733
score: 99.0121737393466
patch: for ( Var s : def . children ) {
rank: 734
score: 99.08125813802083
patch: if ( def instanceof Must CaMeL Def > true ) {
rank: 734
score: 99.08033243815105
patch: if ( def . depends CaMeL On ( def ) )
rank: 734
score: 99.07081095377605
patch: for ( Var s Reference : def . depends ) {
rank: 734
score: 99.0361557006836
patch: for ( Var s : def . depends || def != null Var ) {
rank: 734
score: 99.01146782769098
patch: for ( Var [ ] def ) {
rank: 734
score: 98.91094501201923
patch: for ( for ( Var s : def . depends ) )
rank: 735
score: 99.21080671037946
patch: for ( Var s : def . get CaMeL Results ( ) )
rank: 735
score: 99.08118693033855
patch: if ( state . js CaMeL Scope != null ) {
rank: 735
score: 99.07876586914062
patch: for ( Var s : def . get ) { )
rank: 735
score: 99.07009887695312
patch: for ( n : def . depends ) {
rank: 735
score: 98.91041148792614
patch: for ( Var s : def . join ) {
rank: 736
score: 99.0806172688802
patch: for ( Definition s ++ : def . depends ) {
rank: 736
score: 99.07763671875
patch: s = def . depends CaMeL On ( def ) ;
rank: 736
score: 99.0681660970052
patch: for ( Must CaMeL Def : s . depends ) {
rank: 736
score: 99.03589976917614
patch: for ( Var s : null . def ) {
rank: 736
score: 98.91033935546875
patch: while ( def != null || def != null ) {
rank: 737
score: 99.20869140625
patch: for ( Var s : def . depends CaMeL On ( code ) )
rank: 737
score: 99.19149017333984
patch: if ( def != null && s . scope == js CaMeL Scope ) {
rank: 737
score: 99.07480875651042
patch: Node < Var > s = def . depends ) ;
rank: 737
score: 99.05621337890625
patch: if ( state != null ) return false ;
rank: 737
score: 99.03577677408855
patch: if ( s != null && def instanceof Var ) {
rank: 737
score: 99.00823364257812
patch: / * if ( def != null ) {
rank: 737
score: 98.90995649857955
patch: for ( Set s : def . depends ) {
rank: 738
score: 99.19134521484375
patch: / * if ( state . scope != js CaMeL Scope ) {
rank: 738
score: 99.0801289876302
patch: if ( state != null || def != null ) {
rank: 738
score: 99.053466796875
patch: Definition def = def . get CaMeL Def ( ) ;
rank: 738
score: 99.0353775024414
patch: for ( Var s : def . depends && def . depends == null {
rank: 738
score: 99.0273208618164
patch: if ( n == null ) {
rank: 739
score: 99.2082763671875
patch: for ( Var s : def . depends CaMeL On ( prefix ) )
rank: 739
score: 99.071533203125
patch: for ( Var n : def . depends ( ) )
rank: 739
score: 99.0653963955966
patch: for ( Var s : set . depends ) {
rank: 739
score: 99.05322265625
patch: if ( state == null && s != null ) {
rank: 740
score: 99.20816243489584
patch: for ( Var s : def . get . depends CaMeL On ( {
rank: 740
score: 99.19110107421875
patch: for ( Var s : s . reaching CaMeL Def . depends ) {
rank: 740
score: 99.07816938920455
patch: for ( ? $NUMBER$ : def . depends ) {
rank: 740
score: 99.07136674360795
patch: for ( Var ref : def . depends ) {
rank: 740
score: 99.03508966619319
patch: for ( Var s : def . ref ) {
rank: 740
score: 98.90951772836539
patch: Var s == null ? null : def . depends ) {
rank: 741
score: 99.20799967447917
patch: for ( Var s : def . depends CaMeL On ( node ) )
rank: 741
score: 99.19047546386719
patch: if ( js CaMeL Scope != null && s . scope != null ) {
rank: 741
score: 99.07808061079545
patch: for ( Object state : def . depends ) {
rank: 741
score: 99.06494140625
patch: for ( Type s : state . depends ) {
rank: 741
score: 99.03481038411458
patch: if ( def == null && def instanceof Var ) {
rank: 741
score: 99.02446153428819
patch: if ( state . scope != null )
rank: 742
score: 99.20694405691964
patch: for ( Var s : def . get CaMeL Fields ( ) )
rank: 742
score: 98.90889115767045
patch: Var s : while ( def != null ) {
rank: 743
score: 99.20685221354167
patch: for ( Var s : def . depends CaMeL On ( filter ) )
rank: 743
score: 99.18921770368304
patch: if ( s . scope != get CaMeL In ( ) ) {
rank: 743
score: 99.07759232954545
patch: for ( Var $STRING$ : def . depends ) {
rank: 743
score: 99.03358043323864
patch: for ( Var s : $STRING$ . get ) {
rank: 744
score: 99.20683070591518
patch: for ( Var s : def . depends CaMeL On s ) {
rank: 744
score: 99.07687377929688
patch: for ( Var s n : def . depends ) {
rank: 744
score: 99.06788126627605
patch: for ( Var s : def . depends ( ) {
rank: 744
score: 99.03339177911931
patch: for ( int n : def . depends ) {
rank: 744
score: 99.02159423828125
patch: for ( Var s : def . FALSE )
rank: 744
score: 99.0022305575284
patch: for ( Function def : def . depends ) {
rank: 744
score: 98.9084981282552
patch: while ( def != null && def . depends ) {
rank: 745
score: 99.2067138671875
patch: for ( Var s : def . depends CaMeL On ( name ) {
rank: 745
score: 99.18900299072266
patch: if ( s != js CaMeL Scope . get CaMeL Var ( name ) )
rank: 745
score: 99.06729736328126
patch: / * for ( Var s : def )
rank: 745
score: 99.06233723958333
patch: if ( s . type != js CaMeL Scope ) {
rank: 745
score: 99.03322056361607
patch: for ( Var s : null . depends && def != null {
rank: 745
score: 99.01998291015624
patch: for ( Var s : def . TRUE )
rank: 745
score: 98.90786743164062
patch: for ( Var s : def . depends == null {
rank: 746
score: 99.074951171875
patch: for ( Number def : def . depends ) {
rank: 746
score: 99.06133478338069
patch: for ( Var s : check . depends ) {
rank: 746
score: 99.04764811197917
patch: for ( Var STRING s : def . depends ) {
rank: 746
score: 99.03312544389205
patch: for ( Object s : 0 . depends ) {
rank: 746
score: 99.01915394176136
patch: if ( state instanceof Must CaMeL Def > 1 )
rank: 746
score: 99.00117631392045
patch: for ( Node depends : def . depends ) {
rank: 746
score: 98.90781813401442
patch: for ( Var < Node > s : def . depends )
rank: 747
score: 99.07444254557292
patch: for ( Branch s ++ : def . depends ) {
rank: 747
score: 99.01844482421875
patch: if ( s == null ) return false ;
rank: 748
score: 99.0736083984375
patch: if ( n . scope != js CaMeL Scope ) {
rank: 748
score: 99.06545188210227
patch: for ( Var s : n . depends ) )
rank: 748
score: 99.06041463216145
patch: for ( if ( s != js CaMeL Scope ) {
rank: 748
score: 99.0182217684659
patch: if ( s != null && def != null )
rank: 748
score: 99.0002108487216
patch: return def != null ? def . depends ) {
rank: 748
score: 98.90699259440105
patch: for ( Var s : node . depends ) { {
rank: 749
score: 99.205419921875
patch: for ( Var s : def . depends CaMeL On ( locale ) )
rank: 749
score: 99.18645477294922
patch: for ( / * if ( s . scope != js CaMeL Scope ) {
rank: 749
score: 99.0640869140625
patch: if ( def != null && def == def ) {
rank: 749
score: 99.04579671223958
patch: if ( s . length ( ) == 0 ) {
rank: 749
score: 99.03244018554688
patch: for ( Var s : null . depends $NUMBER$ ) {
rank: 749
score: 99.01631673177083
patch: if ( js CaMeL Scope == null )
rank: 749
score: 98.906494140625
patch: for ( final Var s : def . depends ) }
rank: 750
score: 99.18620300292969
patch: if ( s != null || s . scope != js CaMeL Scope ) {
rank: 750
score: 99.06172318892045
patch: for ( Var s : def . parameters ) {
rank: 750
score: 99.03231472439236
patch: for ( Var s : def . depends ) { if ( def == null ) {
rank: 750
score: 99.01564719460227
patch: for ( Var s : def . count ) {
rank: 750
score: 98.90611775716145
patch: for ( $STRING$ Var s : def . depends ) {
rank: 751
score: 99.20301310221355
patch: for ( Var s : def . get ( ) )
rank: 751
score: 99.18562316894531
patch: if ( js CaMeL Scope != null && def . scope != null ) {
rank: 751
score: 99.0610684481534
patch: / * for ( Var s : def ) {
rank: 751
score: 99.03209339488636
patch: for ( Var s : def . main ) {
rank: 751
score: 98.99943403764205
patch: if ( def != null ) { continue ; }
rank: 752
score: 99.0574239095052
patch: try { if ( def != js CaMeL Scope ) {
rank: 752
score: 99.04477945963542
patch: if ( state != js CaMeL Scope != null ) {
rank: 752
score: 99.03202681107955
patch: for ( Var s : def . references ) {
rank: 752
score: 99.01411743164063
patch: for ( Node s : def . depends )
rank: 752
score: 98.99876819957386
patch: for ( Loop s : def . depends ) {
rank: 752
score: 98.90546209161931
patch: for ( Var s : def . read ) {
rank: 753
score: 99.18486993963069
patch: for ( Var . : def . depends ) {
rank: 753
score: 99.06894938151042
patch: if ( def != null && state . depends ) {
rank: 753
score: 99.06090291341145
patch: for ( Var s : s . depends CaMeL On )
rank: 753
score: 99.0572509765625
patch: for ( Var s : max . depends ) {
rank: 754
score: 99.19760366586539
patch: for ( Var s : def . split ( $STRING$ ) )
rank: 754
score: 99.0562411221591
patch: for ( Var module : def . depends ) {
rank: 754
score: 99.03086344401042
patch: for ( Var s : def . depends ) { return s . depends ) ; }
rank: 754
score: 99.0114990234375
patch: for ( Var s : def . set )
rank: 754
score: 98.99702592329545
patch: if ( def == null ) { return null ;
rank: 755
score: 99.19748360770089
patch: for ( Node < Var > def : n . depends ) {
rank: 755
score: 99.06671697443181
patch: for ( Var s > def : def ) {
rank: 755
score: 99.05699573863636
patch: for ( Var s : def . merge ) {
rank: 755
score: 99.05548095703125
patch: if ( ( def != js CaMeL Scope ) ) {
rank: 755
score: 99.03047318892045
patch: for ( int 1 : def . depends ) {
rank: 755
score: 99.01143022017045
patch: for ( Var s : def . delete ) {
rank: 755
score: 98.90452991832386
patch: for ( Var s : directory . depends ) {
rank: 756
score: 99.1829364483173
patch: return state . get CaMeL Annotation ( def . depends ) ;
rank: 756
score: 99.03011067708333
patch: for ( Var s : 0 . depends ) { def = def . depends ) {
rank: 756
score: 99.01104181463069
patch: for ( Var 1 s : def . depends )
rank: 756
score: 98.99594116210938
patch: if ( def == null ) { return ) ; }
rank: 756
score: 98.90438842773438
patch: if ( s != null || def == null ) {
rank: 757
score: 99.19587053571429
patch: for ( Var s : def . entry CaMeL Set ( ) )
rank: 757
score: 99.05525346235795
patch: for ( Var function : def . depends ) {
rank: 757
score: 99.0545321377841
patch: for ( Var s : index . depends ) {
rank: 757
score: 99.01026500355114
patch: if ( def == null && s != null )
rank: 757
score: 98.9038330078125
patch: System . out . println ( $STRING$ ) ;
rank: 758
score: 99.06595865885417
patch: if ( def instanceof Must CaMeL Def > 0 ) {
rank: 758
score: 99.0550870028409
patch: Var s = def . depends CaMeL On ) ;
rank: 758
score: 99.03951009114583
patch: Definition state = state . get CaMeL Annotation ( ) ;
rank: 759
score: 99.05174671519886
patch: for ( Var s : iterator ( ) ) {
rank: 759
score: 99.03757731119792
patch: Definition state = n . get CaMeL In ( ) ;
rank: 760
score: 99.18048502604167
patch: if ( js CaMeL Scope != null ) { def . return true ;
rank: 760
score: 99.06529541015625
patch: if ( def . scope == null ) {
rank: 760
score: 99.05443318684895
patch: do { for ( Var s : def . depends )
rank: 760
score: 99.00609741210937
patch: for ( Var s = def . get CaMeL
rank: 760
score: 98.99486287434895
patch: if ( def != null || def instanceof Var ) {
rank: 760
score: 98.9029873934659
patch: for ( Node name : def . depends ) {
rank: 761
score: 99.17999267578125
patch: for ( Var : n . get CaMeL Annotation ( ) ) {
rank: 761
score: 99.0536397298177
patch: Set < Var > def = def . depends ) ;
rank: 761
score: 99.05068137428977
patch: for ( Var s : def instanceof Var ) {
rank: 761
score: 99.03507856889205
patch: for ( Var s : state . get ) {
rank: 761
score: 99.00418090820312
patch: for ( Var s : def . append )
rank: 761
score: 98.99283854166667
patch: } if ( def != null ) {
rank: 761
score: 98.90296519886364
patch: for ( Var s : parameter . depends ) {
rank: 762
score: 99.19304547991071
patch: for ( Var s : n . get CaMeL Depth ( ) )
rank: 762
score: 99.05343627929688
patch: for ( Var n : n . get ) { {
rank: 762
score: 99.02913992745536
patch: for ( for ( Var s : def . depends ) continue {
rank: 762
score: 99.0017822265625
patch: if ( use CaMeL Node == null ) {
rank: 762
score: 98.99224853515625
patch: if ( def == null ) return null ;
rank: 762
score: 98.90286254882812
patch: for ( final Var def : def . depends ) {
rank: 763
score: 99.19277518136161
patch: for ( Var s : def . depends CaMeL On ( name ,
rank: 763
score: 99.17779541015625
patch: try { if ( def . scope != js CaMeL Scope ) {
rank: 763
score: 99.06238902698864
patch: for ( Var s += def . depends ) {
rank: 763
score: 99.05308024088542
patch: List < Var > s = def . depends ) ;
rank: 763
score: 99.04871215820313
patch: for ( state : def . depends ) {
rank: 764
score: 99.17721993582589
patch: if ( def != null && js CaMeL Scope != null ) {
rank: 764
score: 99.06128946940105
patch: if ( def != null || state != null ) {
rank: 764
score: 99.04854736328124
patch: while ( state != js CaMeL Scope ) {
rank: 764
score: 99.03160603841145
patch: while ( state instanceof Must CaMeL Def > null ) {
rank: 764
score: 98.90030924479167
patch: for ( Var s : def . depends != null {
rank: 765
score: 99.03140258789062
patch: if ( state == null ) return true ;
rank: 765
score: 98.99809919084821
patch: if ( n != null )
rank: 765
score: 98.9001797762784
patch: for ( Var s : names . depends ) {
rank: 766
score: 99.17483956473214
patch: / * if ( js CaMeL Scope != js CaMeL Scope ) {
rank: 766
score: 99.0498046875
patch: for ( Node < Node > s : def ) {
rank: 766
score: 99.03129069010417
patch: if ( state != null || s != null ) {
rank: 766
score: 99.02665571732955
patch: for ( String [ : def . depends ) {
rank: 766
score: 98.89935857599431
patch: for ( ? name : def . depends ) {
rank: 767
score: 99.18910435267857
patch: for ( Var s : def . depends CaMeL On Var ) {
rank: 767
score: 99.17401123046875
patch: / * if ( js CaMeL Scope != null ) {
rank: 767
score: 99.05833851207386
patch: for ( Var s : def . depends == null
rank: 767
score: 99.04944864908855
patch: if ( def != null ) return for CaMeL Var ;
rank: 767
score: 98.99061279296875
patch: for ( Var s : def . equals )
rank: 767
score: 98.98840942382813
patch: try { if ( def != null ) {
rank: 767
score: 98.8992032137784
patch: for ( Var s : min . depends ) {
rank: 768
score: 99.17267400568181
patch: if ( def != null ) { return def ;
rank: 768
score: 99.04940795898438
patch: for ( Var n : def . depends ) { )
rank: 768
score: 99.04717462713069
patch: for ( Node def : state . depends ) {
rank: 768
score: 99.0308329264323
patch: if ( state != get CaMeL Annotation ( ) ) {
rank: 768
score: 99.02621799045139
patch: for ( Var s : def . depends ) { if ( def . has ) {
rank: 768
score: 98.89874822443181
patch: for ( String s : def . get ) {
rank: 769
score: 99.04935709635417
patch: for ( Var s : s . depends ) { {
rank: 769
score: 99.0464754971591
patch: for ( Var s : def instanceof Definition ) {
rank: 769
score: 98.98726029829545
patch: Var s = def . depends ( def ) ;
rank: 769
score: 98.98494262695313
patch: if ( ( def != null ) ) {
rank: 769
score: 98.8987149325284
patch: for ( Process s : def . depends ) {
rank: 770
score: 99.1707051595052
patch: int state = n . get CaMeL Annotation ( ) ;
rank: 770
score: 99.04924982244319
patch: return def . depends CaMeL On ( def ) ;
rank: 770
score: 99.04440307617188
patch: while ( def == js CaMeL Scope ) {
rank: 770
score: 99.0255126953125
patch: Var s = null ; if ( def instanceof Var ) {
rank: 770
score: 98.98701985677083
patch: Var s = ( Var ) def . depends ) ;
rank: 771
score: 99.04428932883523
patch: for ( Must CaMeL Def : def . depends )
rank: 771
score: 99.02440049913194
patch: for ( Var s : def . depends ) { def = def . depends ) throws
rank: 771
score: 98.98109741210938
patch: for ( Reference s : def . depends )
rank: 771
score: 98.89777166193181
patch: for ( Var s : def == null ) {
rank: 772
score: 99.02406663161058
patch: Var s = null ; if ( def == null ) {
rank: 772
score: 98.9863789876302
patch: System . err . println ( def . depends ) ;
rank: 772
score: 98.9765869140625
patch: for ( Var 1 : def . depends )
rank: 773
score: 99.17036655970982
patch: if ( def . scope != js CaMeL Scope ) return true ;
rank: 773
score: 99.04836203835227
patch: / for ( Var s : def . depends )
rank: 773
score: 99.02389865451389
patch: for ( Object s : def . depends ) { if ( def . depends ) {
rank: 773
score: 98.9752197265625
patch: for ( Var s = def . depends )
rank: 773
score: 98.89736938476562
patch: if ( def != null ) { return null ; }
rank: 774
score: 99.18197195870536
patch: for ( Var s : def . depends CaMeL On ( { }
rank: 774
score: 99.17008754185268
patch: while ( def != state . get CaMeL In ( ) ) {
rank: 774
score: 99.04823996803977
patch: if ( def != null && def != def )
rank: 774
score: 99.04107111150569
patch: for ( Definition s : s . depends ) {
rank: 774
score: 99.0242431640625
patch: if ( state != null ) return true ;
rank: 774
score: 99.02355278862848
patch: for ( Var [ : def . depends ) { if ( def . depends ) {
rank: 774
score: 98.97518310546874
patch: for ( Type s : def . depends )
rank: 774
score: 98.8973055752841
patch: Var s : while ( s != null ) {
rank: 775
score: 99.18135288783482
patch: for ( Node < Var > def = def . depends ) {
rank: 775
score: 99.04740397135417
patch: for ( Var : def . depends CaMeL On ) {
rank: 775
score: 99.02183024088542
patch: for ( Var s : def . depends [ ) {
rank: 775
score: 99.02018599076705
patch: for ( String 1 : def . depends ) {
rank: 775
score: 98.9853515625
patch: if ( def == null ) { throw null ; }
rank: 775
score: 98.97469482421874
patch: if ( state . depends ( ) ) {
rank: 776
score: 99.04723103841145
patch: for ( Var exp : def . depends ) { {
rank: 776
score: 99.0375643643466
patch: for ( Var children : def . depends ) {
rank: 776
score: 99.02016194661458
patch: for ( Var s : state ) {
rank: 776
score: 98.9850186434659
patch: for ( Hash s : def . depends ) {
rank: 776
score: 98.97374810112848
patch: if ( def != null ) { }
rank: 777
score: 99.17947152944711
patch: for ( Var s : def . depends $NUMBER$ ) { {
rank: 777
score: 99.04656982421875
patch: if ( def == def ) return false ;
rank: 777
score: 99.03633256392045
patch: for ( Var has : def . depends ) {
rank: 777
score: 99.01869895241477
patch: for ( Must CaMeL Def def : state ) {
rank: 777
score: 98.98452758789062
patch: } for ( Var s : def . get ) {
rank: 777
score: 98.97331237792969
patch: if ( state != false ) {
rank: 777
score: 98.89671741832386
patch: for ( Var s : callback . depends ) {
rank: 778
score: 99.16643415178571
patch: if ( def != null ) state . get CaMeL In ( )
rank: 778
score: 99.04984537760417
patch: for ( Var s : def . depends ( ) ,
rank: 778
score: 99.0449930826823
patch: if ( def == null ) { return def ; }
rank: 778
score: 99.03591086647727
patch: for ( Class def : def . depends ) {
rank: 778
score: 99.021240234375
patch: for ( Var s : $STRING$ . type ) {
rank: 778
score: 99.0177334872159
patch: for ( Var s : def . save ) {
rank: 778
score: 98.98435465494792
patch: for ( Iterator > n = def . depends ) {
rank: 778
score: 98.89654541015625
patch: for ( final Var [ : def . depends ) {
rank: 779
score: 99.17777797154018
patch: for ( Var s : def . get CaMeL Bytes ( ) )
rank: 779
score: 99.03586647727273
patch: for ( for s : def . depends ) {
rank: 779
score: 99.021240234375
patch: for ( Var s : def . depends ( s ) . depends ( s ) {
rank: 780
score: 99.16602579752605
patch: if ( s . get CaMeL Annotation ( ) ) {
rank: 780
score: 99.0467862215909
patch: for ( Pattern s : def . depends ) {
rank: 780
score: 99.04273570667614
patch: for ( Number s : n . depends ) {
rank: 780
score: 99.0353670987216
patch: for ( Var s : level . depends ) {
rank: 780
score: 99.02099609375
patch: for ( for ( Var s : def . depends && def . depends ) ) {
rank: 780
score: 98.98396809895833
patch: if ( parent != null && def != null ) {
rank: 780
score: 98.96975708007812
patch: if ( state instanceof Must CaMeL Def > )
rank: 780
score: 98.8962069424716
patch: Var s : if ( s instanceof Var ) {
rank: 781
score: 99.16557965959821
patch: String js CaMeL Scope = n . get CaMeL Annotation ( ) ;
rank: 781
score: 99.03480113636364
patch: for ( Definition scope : def . depends ) {
rank: 781
score: 98.96950073242188
patch: if ( type != js CaMeL Scope ) {
rank: 782
score: 99.16299874441964
patch: while ( def == state . get CaMeL In ( ) ) {
rank: 782
score: 99.0420430501302
patch: if ( def != null ) return def . depends )
rank: 782
score: 99.03437943892045
patch: for ( Var s : def > null ) {
rank: 782
score: 99.01365152994792
patch: for ( Graph CaMeL Node < Node , Branch > n
rank: 782
score: 98.98239968039773
patch: if ( def != null ) { depends ) {
rank: 782
score: 98.9690673828125
patch: if ( s == null ) return true ;
rank: 783
score: 99.17301119290866
patch: for ( Node < Node > def : def . depends )
rank: 783
score: 99.04286887428977
patch: for ( int 0 : def . depends ) {
rank: 783
score: 99.04085286458333
patch: for ( Var s : n ) { if ( {
rank: 783
score: 99.03420188210227
patch: for ( Var s : property . depends ) {
rank: 783
score: 98.98228963216145
patch: for ( Set < Var > def : def ) {
rank: 783
score: 98.96739501953125
patch: if ( state != use CaMeL Node ) {
rank: 784
score: 99.16089976917614
patch: if ( def == null ) { return true ;
rank: 784
score: 99.01970079210069
patch: for ( Var s : def . depends ) { if ( this . depends ) {
rank: 784
score: 99.01239013671875
patch: while ( state != null ) {
rank: 784
score: 98.96485595703125
patch: for ( Var s : - 1 ) {
rank: 784
score: 98.8938496907552
patch: for ( int ( Var s : def . depends )
rank: 785
score: 99.17253766741071
patch: for ( Var s : def . depends CaMeL On ( def ,
rank: 785
score: 99.16049429086539
patch: if ( s == js CaMeL Scope ) { return true ;
rank: 785
score: 99.03309215198864
patch: if ( def == js CaMeL Scope ) { {
rank: 785
score: 99.01934814453125
patch: if ( def != null && s instanceof Var ) {
rank: 785
score: 98.96461181640625
patch: for ( Var s : def . values )
rank: 786
score: 99.17147391183036
patch: for ( Var s : state . depends CaMeL On ( ) )
rank: 786
score: 99.15964918870192
patch: / * if ( s . scope != js CaMeL Scope )
rank: 786
score: 99.04042561848958
patch: for ( Node < Var > s : n ) {
rank: 786
score: 98.96451416015626
patch: if ( def == null , null ) {
rank: 786
score: 98.893212890625
patch: for ( final Var s : def ) {
rank: 787
score: 99.17013985770089
patch: for ( Var s : def . get CaMeL Warnings ( ) )
rank: 787
score: 99.15963979867789
patch: for ( Var s : def . depends ) { * /
rank: 787
score: 99.0400057705966
patch: if ( def != null || def != null )
rank: 787
score: 98.96322970920139
patch: if ( def == null ) { {
rank: 787
score: 98.89262251420455
patch: for ( Var s : replacement . depends ) {
rank: 788
score: 99.17000034877232
patch: for ( Var s : def . get CaMeL Annotations ( ) )
rank: 788
score: 99.15807233537946
patch: if ( s . scope != null ) { return true ; }
rank: 788
score: 99.03977457682292
patch: for ( Node s : def . depends CaMeL On {
rank: 788
score: 99.01911756727431
patch: for ( Var s : def . depends != null && def . depends != ) {
rank: 788
score: 98.96206665039062
patch: for ( Var s : def . match )
rank: 788
score: 98.892333984375
patch: for ( Var s : count ) {
rank: 789
score: 99.03823020241477
patch: for ( int s = def . depends ) {
rank: 789
score: 99.03129438920455
patch: for ( Var get : def . depends ) {
rank: 789
score: 99.01895141601562
patch: for ( Var s : def . depends $NUMBER$ def ( s ) ) {
rank: 789
score: 99.00911088423295
patch: for ( Var s : def . peek ) {
rank: 789
score: 98.96119384765625
patch: if ( n != js CaMeL Scope ) {
rank: 790
score: 99.16942487444196
patch: for ( Var s : def . get CaMeL References ( ) )
rank: 790
score: 99.15699986049107
patch: for ( reaching CaMeL Def s : def . depends ) {
rank: 790
score: 99.01847839355469
patch: for ( Var s = null {
rank: 790
score: 99.00892130533855
patch: Def def = state . get CaMeL In ( ) ;
rank: 790
score: 98.97789417613636
patch: for ( Object s : def . get ) {
rank: 790
score: 98.9572265625
patch: if ( state == Must CaMeL Def ) {
rank: 791
score: 99.16860525948661
patch: for ( Var s : def . get CaMeL Nodes ( ) )
rank: 791
score: 99.15611683238636
patch: result = n . get CaMeL Annotation ( ) ;
rank: 791
score: 99.03446821732955
patch: for ( Var size : def . depends ) {
rank: 791
score: 99.01835801866319
patch: for ( Var s : make ) {
rank: 791
score: 99.00528971354167
patch: Definition s = state . get CaMeL In ( ) ;
rank: 791
score: 98.97760564630681
patch: for ( Node value : def . depends ) {
rank: 791
score: 98.88859419389205
patch: if ( ! def . depends != null ) {
rank: 792
score: 99.03331409801136
patch: for ( Type s : n . depends ) {
rank: 792
score: 99.03031782670455
patch: for ( Var s : module . depends ) {
rank: 792
score: 99.00235324435764
patch: for ( Var s : $NUMBER$ ) {
rank: 792
score: 98.88718668619792
patch: for ( Var s : def . depends ) { :
rank: 793
score: 99.16722760881696
patch: for ( Var s : def . depends CaMeL On ( { )
rank: 793
score: 99.03202681107955
patch: for ( Var > s : def . depends )
rank: 793
score: 99.0302401455966
patch: for ( Var in : def . depends ) {
rank: 793
score: 98.97676225142045
patch: Var s = def . depends ( depends ) ;
rank: 793
score: 98.9551513671875
patch: for ( Var s : type . depends )
rank: 793
score: 98.88578657670455
patch: if ( s != null Var != null ) {
rank: 794
score: 99.16715785435268
patch: for ( Var s : def . get CaMeL Modifiers ( ) )
rank: 794
score: 99.02949662642045
patch: for ( Must CaMeL Def n : def ) {
rank: 794
score: 99.01593780517578
patch: for ( Var s : def . depends ) { if ( def ) {
rank: 794
score: 98.97595977783203
patch: if ( def instanceof Var ) {
rank: 794
score: 98.9522705078125
patch: if ( state . scope != this ) {
rank: 795
score: 99.15520770733173
patch: for ( Var s : def . reaching CaMeL Def .
rank: 795
score: 99.02956321022727
patch: for ( Var filter : n . depends ) {
rank: 795
score: 99.02878639914773
patch: for ( short def : def . depends ) {
rank: 795
score: 99.0158920288086
patch: for ( Var s : def . depends , def . depends . depends )
rank: 795
score: 98.9993387858073
patch: Definition state = def . get CaMeL In ( ) ;
rank: 795
score: 98.95095486111111
patch: if ( def != null ) { ;
rank: 795
score: 98.87855113636364
patch: for ( Var s : def ) { ) {
rank: 796
score: 99.02875310724431
patch: for ( Var s : def . module ) {
rank: 796
score: 99.02643377130681
patch: for ( Var s : is CaMeL Annotation ) {
rank: 796
score: 99.01569959852431
patch: for ( Var depends : def . depends ) { if ( def . depends ) {
rank: 796
score: 98.97487386067708
patch: if ( def != null && value != null ) {
rank: 796
score: 98.87538655598958
patch: for ( String s : def . depends ) continue ;
rank: 797
score: 99.1652499112216
patch: for ( Var s : def . names ) {
rank: 797
score: 99.15373883928571
patch: if ( s . get CaMeL Node ( ) != null ) {
rank: 797
score: 99.01539963942308
patch: for ( Var s : def . depends ) continue ; }
rank: 797
score: 98.97472034801136
patch: for ( Var locale : def . depends ) {
rank: 797
score: 98.9489013671875
patch: for ( Var s : def . scope )
rank: 797
score: 98.87270100911458
patch: for ( String s : def . depends ) break ;
rank: 798
score: 99.02698863636364
patch: for ( > 1 : def . depends ) {
rank: 798
score: 98.87056477864583
patch: if ( def == null || s != null ) {
rank: 799
score: 99.14874737079327
patch: if ( s . scope != js CaMeL Scope ) continue ;
rank: 799
score: 98.94754638671876
patch: if ( def != null - 1 ) {
rank: 800
score: 99.02392578125
patch: for ( Var s : def . get {
rank: 800
score: 99.01317249644886
patch: for ( void def : def . depends ) {
rank: 800
score: 98.97437540690105
patch: System . err . println ( $STRING$ + def ) ;
rank: 800
score: 98.9460205078125
patch: if ( s != null ) return true ;
rank: 800
score: 98.86867453835227
patch: Var s : if ( node != null ) {
rank: 801
score: 98.97377522786458
patch: final Var s : if ( def == null ) {
rank: 801
score: 98.94441528320313
patch: if ( s . equals ( s ) )
rank: 802
score: 99.023681640625
patch: for ( Must CaMeL Def : state . depends )
rank: 802
score: 99.0199862393466
patch: for ( Var value : n . depends ) {
rank: 802
score: 99.01248508029514
patch: for ( Var s : 0 . depends ) { if ( def . depends ) {
rank: 802
score: 98.9737040201823
patch: for ( Set < Var > def > depends ) {
rank: 802
score: 98.94293212890625
patch: for ( Var s : def . format )
rank: 802
score: 98.866455078125
patch: Var s : if ( s instanceof Var s ) {
rank: 803
score: 99.161376953125
patch: for ( Var s : def . get CaMeL Units ( ) )
rank: 803
score: 99.14713911576705
patch: } return n . get CaMeL Annotation ( ) ;
rank: 803
score: 99.02361505681819
patch: for ( Var s : Definition . depends ) {
rank: 803
score: 99.01993408203126
patch: if ( def == def ) return true ;
rank: 803
score: 99.01230690696023
patch: for ( Var s : def . round ) {
rank: 803
score: 98.8638916015625
patch: for ( Var s : node . depends . depends )
rank: 804
score: 99.0234707919034
patch: for ( Var s : def . Scope ) {
rank: 804
score: 99.0193758877841
patch: for ( Var length : def . depends ) {
rank: 804
score: 99.01875443892045
patch: for ( Node s : n . get ) {
rank: 804
score: 98.97349964488636
patch: for ( Var [ ] def . depends ) {
rank: 804
score: 98.93955078125
patch: for ( Var s : def . put )
rank: 804
score: 98.86297052556819
patch: Var s ; if ( def != null ) {
rank: 805
score: 99.1443340594952
patch: if ( def != null && def . scope != null )
rank: 805
score: 99.0210293856534
patch: for ( Object s : state . depends ) {
rank: 805
score: 99.0175537109375
patch: if ( def != def ) return false ;
rank: 805
score: 99.01190863715277
patch: for ( Var s : def . depends ) { Var s = s . depends CaMeL
rank: 805
score: 98.93915405273438
patch: if ( reaching CaMeL Def == null )
rank: 805
score: 98.86163884943181
patch: for ( ( Var s : def . depends )
rank: 806
score: 99.15809849330357
patch: for ( Var def : def . depends CaMeL On ( ) )
rank: 806
score: 99.1433817545573
patch: if ( js CaMeL Scope != null ) return true ;
rank: 806
score: 99.0170565518466
patch: for ( Var s : n . list ) {
rank: 806
score: 99.01169162326389
patch: for ( String s : def . depends ) { def = def . depends ) {
rank: 806
score: 98.93577880859375
patch: for ( Integer def : def . depends )
rank: 806
score: 98.8613789876302
patch: for ( Var s : node . depends ) continue ;
rank: 807
score: 98.9351806640625
patch: for ( Var s : def . state )
rank: 807
score: 98.8613525390625
patch: while ( def . depends != null ) {
rank: 808
score: 99.01935369318181
patch: for ( Branch s : n . depends ) {
rank: 808
score: 99.01659046519886
patch: for ( Var CaMeL Definition s : n ) {
rank: 808
score: 99.0162020596591
patch: Definition def = def . get CaMeL In ( )
rank: 808
score: 99.0115737915039
patch: if ( def != null ) { def = def . depends ) ; }
rank: 808
score: 98.93403930664063
patch: for ( Boolean s : def . depends )
rank: 809
score: 99.14175851004464
patch: for ( Var $NUMBER$ s s def : def . depends ) {
rank: 809
score: 99.01768188476562
patch: for ( Must CaMeL Def : depends ) {
rank: 809
score: 98.93355102539063
patch: for ( Var s <= def . depends )
rank: 809
score: 98.85896606445313
patch: final Var s : def . depends ) {
rank: 810
score: 99.01765580610795
patch: for ( Var case : def . depends ) {
rank: 810
score: 99.0159579190341
patch: for ( RETURN s : def . depends ) {
rank: 810
score: 98.9307861328125
patch: for ( Var s : null . depends )
rank: 810
score: 98.858642578125
patch: if ( s . depends == null ) {
rank: 811
score: 99.138916015625
patch: if ( s == js CaMeL Scope ) { return true ; }
rank: 811
score: 98.96926047585227
patch: for ( Var s : def . parent ) {
rank: 811
score: 98.93019409179688
patch: if ( def != null && true ) {
rank: 811
score: 98.85744222005208
patch: else * for ( Var s : def . depends )
rank: 812
score: 99.14353590745192
patch: for ( Var s : n . get ( ) ) {
rank: 812
score: 99.13861083984375
patch: for ( Var : def . get CaMeL Annotation ( ) ) {
rank: 812
score: 99.01543634588069
patch: for ( Var s == js CaMeL Scope ) {
rank: 812
score: 99.01011149088542
patch: for ( Var s = def . depends ) { def = def . depends ) {
rank: 812
score: 98.92979736328125
patch: for ( Long s : def . depends )
rank: 812
score: 98.85615370008681
patch: String s : def . depends ) {
rank: 813
score: 99.0152920809659
patch: for ( Definition s : scope . depends ) {
rank: 813
score: 99.0147372159091
patch: Definition def = state . get CaMeL Name ( )
rank: 813
score: 99.00994873046875
patch: for ( Var s : def . depends , def {
rank: 813
score: 98.92930297851562
patch: for ( Var s : def . next )
rank: 814
score: 99.1417236328125
patch: for ( Node < Node > s = def . depends )
rank: 814
score: 99.13674692007211
patch: if ( scope != js CaMeL Scope ) { return true ;
rank: 814
score: 99.01448197798295
patch: for ( Var builder : def . depends ) {
rank: 814
score: 99.01124403211806
patch: for ( Var n : n ) {
rank: 814
score: 98.96780395507812
patch: while ( def == null && def != null ) {
rank: 814
score: 98.85571967230902
patch: Var s : s . depends ) {
rank: 815
score: 99.13661702473958
patch: for ( Var >= def : def . depends ) {
rank: 815
score: 99.0151700106534
patch: if ( def != js CaMeL Scope ) { {
rank: 815
score: 99.0142489346591
patch: for ( Package s : def . depends ) {
rank: 815
score: 99.01060901988636
patch: for ( Var n : def . list ) {
rank: 815
score: 98.9671630859375
patch: for ( Var s : def . depends s )
rank: 815
score: 98.92287190755208
patch: Definition def = state . get ) ;
rank: 815
score: 98.85286458333333
patch: for ( Var s : size ) {
rank: 816
score: 99.00935502485795
patch: for ( if s : def . depends ) {
rank: 816
score: 98.97816051136364
patch: for ( Var s : def . process ) {
rank: 816
score: 98.96658325195312
patch: if ( children != null && def != null ) {
rank: 816
score: 98.91912163628473
patch: if ( state == js CaMeL Scope )
rank: 816
score: 98.8525057705966
patch: else for ( Var s : def . depends )
rank: 817
score: 99.0139668782552
patch: for ( Var s : def . def . depends )
rank: 817
score: 99.01019841974431
patch: for ( Var s : def . concat ) {
rank: 817
score: 98.91492571149554
patch: if ( state . depends )
rank: 817
score: 98.85060628255208
patch: System . out . println ( $STRING$ + s ) {
rank: 818
score: 99.1341552734375
patch: for ( Var s : def . get s ) {
rank: 818
score: 99.1311543782552
patch: if ( s . get CaMeL In ( ) ) {
rank: 818
score: 99.00959777832031
patch: for ( Var s : ) {
rank: 818
score: 98.96534312855114
patch: for ( Var def : def . get ) {
rank: 818
score: 98.91435241699219
patch: if ( state . depends ) {
rank: 818
score: 98.84940962357955
patch: for ( ? Var s : def . depends )
rank: 819
score: 99.12881469726562
patch: if ( s . is CaMeL Annotation ( ) ) {
rank: 819
score: 99.0126620205966
patch: for ( Var this : def . depends ) {
rank: 819
score: 99.00797526041667
patch: for ( Var s : 0 . depends 1 ) {
rank: 819
score: 98.91373697916667
patch: if ( state != null ) { }
rank: 819
score: 98.84883626302083
patch: for ( Var s : out ) {
rank: 820
score: 99.00862260298295
patch: { for ( Var s : def . depends )
rank: 820
score: 98.8998794555664
patch: if ( def != false ) {
rank: 820
score: 98.84762573242188
patch: / * for ( Object s : def . depends )
rank: 821
score: 99.00842895507813
patch: if ( def != def ) return true ;
rank: 821
score: 99.00757945667614
patch: for ( Var s : def . source ) {
rank: 821
score: 98.9729336825284
patch: for ( Must CaMeL Def state : state ) {
rank: 821
score: 98.96320134943181
patch: for ( Node s : 0 . depends ) {
rank: 821
score: 98.89596896701389
patch: if ( def != null ) { {
rank: 821
score: 98.84599304199219
patch: while ( s != null ) {
rank: 822
score: 99.12637329101562
patch: / * if ( def != js CaMeL Scope ) {
rank: 822
score: 99.01078657670455
patch: for ( Var s : get . depends ) {
rank: 822
score: 99.00834517045455
patch: for ( float def : def . depends ) {
rank: 822
score: 99.00754801432292
patch: for ( Var s : def . depends ? ) {
rank: 822
score: 99.00710227272727
patch: for ( Var exp : def . get ) {
rank: 822
score: 98.89401245117188
patch: if ( name != null ) {
rank: 822
score: 98.84501139322917
patch: for ( Var s : def . depends , s )
rank: 823
score: 99.1168212890625
patch: for ( Var s : def . depends [ 0 ] )
rank: 823
score: 99.00732421875
patch: for ( Var * : def . depends ) {
rank: 823
score: 99.0068692294034
patch: / * for ( Var s : n ) {
rank: 824
score: 99.01038208007813
patch: if ( scope == js CaMeL Scope ) {
rank: 824
score: 99.0070556640625
patch: if ( s != null . depends ) {
rank: 824
score: 99.00676935369319
patch: for ( Graph CaMeL Node < Node == null *
rank: 824
score: 98.9623690518466
patch: for ( Var s : def . this ) {
rank: 824
score: 98.88414849175348
patch: if ( s != null ) { }
rank: 824
score: 98.84335666232639
patch: for ( Var s : continue ) {
rank: 825
score: 99.1163330078125
patch: for ( Var s : def . props ) {
rank: 825
score: 99.0069580078125
patch: for ( Var s : def . depends && def {
rank: 825
score: 99.00634765625
patch: for ( Definition n : def . depends ) {
rank: 825
score: 98.99994574652777
patch: if ( def != null ) break ;
rank: 825
score: 98.88117133246527
patch: if ( def . scope != null )
rank: 825
score: 98.84092203776042
patch: for ( Var s : def . depends ) def ;
rank: 826
score: 99.009765625
patch: for ( Token def : def . depends ) {
rank: 826
score: 99.00612571022727
patch: for ( > s : def . depends ) {
rank: 826
score: 98.96168101917614
patch: for ( Comparable s : def . depends ) {
rank: 826
score: 98.87428792317708
patch: if ( state != null ) { ;
rank: 826
score: 98.83843439275569
patch: Var s : s = def . depends ) {
rank: 827
score: 99.00681374289773
patch: for ( Var [ : null . depends ) {
rank: 827
score: 99.00554865056819
patch: if ( def . equals ( null ) ) {
rank: 827
score: 98.99810236150569
patch: for ( Attribute s : n . depends ) {
rank: 827
score: 98.96147017045455
patch: for ( Var s : def . target ) {
rank: 828
score: 99.11553955078125
patch: if ( def != null ) def . depends ) {
rank: 828
score: 99.0081787109375
patch: for ( Var s : is CaMeL In ) {
rank: 828
score: 99.0059814453125
patch: for ( Var s : $STRING$ . next ) {
rank: 828
score: 98.9965576171875
patch: for ( int s = def . depends )
rank: 828
score: 98.85759819878473
patch: if ( state . scope != ) {
rank: 829
score: 99.0078457919034
patch: for ( Var vars : def . depends ) {
rank: 829
score: 99.0057373046875
patch: for ( Var s : null . matches ) {
rank: 829
score: 98.96323464133523
patch: if ( new Must CaMeL Def > null ) {
rank: 829
score: 98.85464477539062
patch: if ( type != null ) {
rank: 830
score: 99.00508256392045
patch: for ( Var s : null . next ) {
rank: 830
score: 99.0020751953125
patch: for ( Var 1 : state . depends ) {
rank: 830
score: 98.96024576822917
patch: List < Var > def = def . depends ) ;
rank: 830
score: 98.85248480902777
patch: Definition def = js CaMeL Scope ) ;
rank: 830
score: 98.83442826704545
patch: } for ( Var s : def . depends )
rank: 831
score: 99.0074795809659
patch: for ( Var s : lang . depends ) {
rank: 831
score: 98.98939098011364
patch: if ( def != null ) return def ) ;
rank: 831
score: 98.96022542317708
patch: while ( def == null ) { return false ; }
rank: 831
score: 98.84891764322917
patch: if ( s != js CaMeL Scope )
rank: 831
score: 98.8316650390625
patch: for ( String s : def . depends ) }
rank: 832
score: 99.00745738636364
patch: for ( Var s : def . key ) {
rank: 832
score: 98.96082652698864
patch: for ( Var s : def . success ) {
rank: 832
score: 98.84782191685268
patch: if ( state != false )
rank: 832
score: 98.82789195667614
patch: Var s : s = def . depends ) ;
rank: 833
score: 99.00370025634766
patch: for ( Var s : def . depends ) { s . add ) ;
rank: 833
score: 98.99708140980114
patch: for ( double def : def . depends ) {
rank: 833
score: 98.98882501775569
patch: if ( def == null || def != null )
rank: 833
score: 98.95756392045455
patch: if ( def != null ) { return def {
rank: 833
score: 98.84122467041016
patch: if ( state == false ) {
rank: 833
score: 98.82664659288194
patch: for ( Var s : static ) {
rank: 834
score: 99.11160278320312
patch: if ( js CaMeL Scope ) { return true ; }
rank: 834
score: 98.99489524147727
patch: for ( Graph CaMeL Node < Node != null *
rank: 834
score: 98.9865389737216
patch: while ( def != null && def != null )
rank: 834
score: 98.84022521972656
patch: if ( scope != null ) {
rank: 835
score: 99.09746844951923
patch: for ( Var s : def . split ( ) ) {
rank: 835
score: 99.00258382161458
patch: if ( def : null != def . depends ) {
rank: 835
score: 98.95707194010417
patch: if ( def != null && type != null ) {
rank: 835
score: 98.83812713623047
patch: if ( node != null ) {
rank: 835
score: 98.82635498046875
patch: Var ( s , def . depends ) ;
rank: 836
score: 99.0971171061198
patch: Var s = def . get CaMeL Value ( ) ;
rank: 836
score: 99.00225275213069
patch: for ( Var s : def . code ) {
rank: 836
score: 98.9927978515625
patch: for ( Integer name : def . depends ) {
rank: 836
score: 98.9858065518466
patch: for ( Visitor s : n . depends ) {
rank: 836
score: 98.83515760633681
patch: if ( s == null ) { {
rank: 836
score: 98.8240633877841
patch: Var s ; if ( s != null ) {
rank: 837
score: 99.09670785757211
patch: Var s = def . depends CaMeL On ( name ) ;
rank: 837
score: 99.00190873579545
patch: for ( Branch def : n . depends ) {
rank: 837
score: 98.9857510653409
patch: Var s = def . depends CaMeL On ( {
rank: 837
score: 98.95658365885417
patch: if ( def instanceof Var s ) {
rank: 837
score: 98.83395724826389
patch: if ( def == null ) break ;
rank: 837
score: 98.8228759765625
patch: for ( Var s : def . depends ) continue
rank: 838
score: 99.00132057883523
patch: for ( Var s : def . annotation ) {
rank: 838
score: 99.00063254616477
patch: for ( Var names : def . depends ) {
rank: 838
score: 98.95741965553977
patch: for ( Var s : def . build ) {
rank: 838
score: 98.95607503255208
patch: if ( def != null && node != null ) {
rank: 838
score: 98.831298828125
patch: if ( state != null ) { {
rank: 839
score: 98.98414195667614
patch: for ( Var name : def . get ) {
rank: 839
score: 98.83031463623047
patch: if ( value != null ) {
rank: 839
score: 98.8186922940341
patch: for ( Var s : < def . depends )
rank: 840
score: 98.99924538352273
patch: for ( Var [ : s . depends ) {
rank: 840
score: 98.98281028053977
patch: for ( Var target : def . get ) {
rank: 840
score: 98.9538241299716
patch: for ( Function depends : def . depends ) {
rank: 840
score: 98.82867431640625
patch: Definition def = null ;
rank: 840
score: 98.818603515625
patch: if ( def . depends ) {
rank: 841
score: 99.10596720377605
patch: if ( def != state != js CaMeL Scope ) {
rank: 841
score: 98.99924538352273
patch: for ( Var s : def . depends || {
rank: 841
score: 98.98679421164773
patch: if ( def [ 0 ] != null ) {
rank: 841
score: 98.98243297230114
patch: for ( Var s : s . get ) {
rank: 842
score: 98.99886648995536
patch: for ( Var s : def . depends ) println ( ) {
rank: 842
score: 98.9973477450284
patch: for ( Var s : match . depends ) {
rank: 842
score: 98.95346901633523
patch: for ( Var [ ] def : depends ) {
rank: 842
score: 98.82595389229911
patch: if ( n == null )
rank: 842
score: 98.81695556640625
patch: for ( Var s : - $NUMBER$ ) {
rank: 843
score: 99.07948811848958
patch: for ( Node < Node > def : def ) {
rank: 843
score: 98.99697043678977
patch: for ( Definition state : def . depends ) {
rank: 843
score: 98.9815673828125
patch: for ( Var s : n . depends ( {
rank: 843
score: 98.97446899414062
patch: for ( Graph CaMeL Node < Node != null
rank: 843
score: 98.95304731889205
patch: if ( s . equals ( null ) ) {
rank: 843
score: 98.82206726074219
patch: if ( s instanceof Var ) {
rank: 843
score: 98.8153963955966
patch: while ( def != null Var != null ) {
rank: 844
score: 99.078857421875
patch: String s = def . get CaMeL Name ( ) ;
rank: 844
score: 98.99682006835937
patch: while ( s == js CaMeL Scope ) {
rank: 844
score: 98.9955721768466
patch: for ( Var depends : null . depends ) {
rank: 844
score: 98.98154296875
patch: for ( Node s : n . depends )
rank: 844
score: 98.97116088867188
patch: for ( Graph CaMeL Node < Node == null
rank: 844
score: 98.82098388671875
patch: if ( state != this ) {
rank: 844
score: 98.81504991319444
patch: for ( Var s : reverse ) {
rank: 845
score: 98.99609375
patch: for ( Var s : report . depends ) {
rank: 845
score: 98.98140258789063
patch: return def != null && def != null ;
rank: 845
score: 98.81968180338542
patch: if ( use CaMeL Node != null )
rank: 846
score: 99.10231526692708
patch: final Definition def = state . get CaMeL In ( )
rank: 846
score: 98.99591619318181
patch: for ( Var description : def . depends ) {
rank: 846
score: 98.98105690696023
patch: if ( def != null && def == null )
rank: 846
score: 98.95072798295455
patch: for ( Var original : def . depends ) {
rank: 846
score: 98.81917317708333
patch: if ( s != null ) { ;
rank: 847
score: 99.1004971590909
patch: if ( def == null ) { return ; }
rank: 847
score: 98.98035278320313
patch: for ( Var name : def . depends )
rank: 847
score: 98.95069469105114
patch: if ( def != null ) return depends ) ;
rank: 847
score: 98.81906127929688
patch: if ( s instanceof Definition ) {
rank: 848
score: 99.1001485188802
patch: if ( def != null ) def . return true ;
rank: 848
score: 98.9797119140625
patch: if ( def != null ) return ) ;
rank: 848
score: 98.9504061612216
patch: for ( Object value : def . depends ) {
rank: 848
score: 98.80523681640625
patch: for ( Var depends : def . depends )
rank: 849
score: 99.0731201171875
patch: for ( Node s = def . depends ) {
rank: 849
score: 98.9942294034091
patch: for ( Definition s : def . scope ) {
rank: 849
score: 98.97902610085227
patch: for ( String s : n . depends ) {
rank: 849
score: 98.80403275923295
patch: for ( Var s : def . depends ) /
rank: 850
score: 98.81463623046875
patch: if ( parent != null ) {
rank: 851
score: 98.97844904119319
patch: for ( Type s : def . get ) {
rank: 851
score: 98.94844193892045
patch: for ( Var namespace : def . depends ) {
rank: 851
score: 98.93931884765625
patch: if ( def != null != def ) {
rank: 851
score: 98.81399972098214
patch: if ( state != ) {
rank: 851
score: 98.80098876953124
patch: while ( s . depends != null ) {
rank: 852
score: 99.06247965494792
patch: if ( ! def . is CaMeL Var ( ) )
rank: 852
score: 98.9481534090909
patch: for ( Enum s : def . depends ) {
rank: 852
score: 98.81254069010417
patch: if ( state != js CaMeL Scope ;
rank: 852
score: 98.797607421875
patch: for ( String s : def ) {
rank: 853
score: 99.0595194498698
patch: for ( Var s : n . get ( ) )
rank: 853
score: 98.97771661931819
patch: for ( Var default : n . depends ) {
rank: 853
score: 98.93314819335937
patch: for ( Var s ++ : s ) {
rank: 853
score: 98.81209564208984
patch: if ( name == null ) {
rank: 854
score: 99.09683227539062
patch: int state = state . get CaMeL Annotation ( ) ;
rank: 854
score: 98.99178059895833
patch: for ( Var s = depends ) {
rank: 854
score: 98.97730601917614
patch: for ( Number s : def . get ) {
rank: 854
score: 98.94699096679688
patch: for ( Set < Var > def ) {
rank: 854
score: 98.80921766493056
patch: if ( s . scope == null )
rank: 854
score: 98.79224310980902
patch: for ( Var s : declarations ) {
rank: 855
score: 99.094970703125
patch: if ( def != null ) { return def ; }
rank: 855
score: 99.0559794108073
patch: for ( Var s : def . depends CaMeL On (
rank: 855
score: 98.98992365056819
patch: for ( String scope : def . depends ) {
rank: 855
score: 98.94686889648438
patch: if ( def != null && depends ) {
rank: 855
score: 98.93992919921875
patch: if ( Flow CaMeL State != null ) {
rank: 856
score: 99.0924784342448
patch: for ( Var > def : def . depends ) {
rank: 856
score: 99.05377752130681
patch: for ( Var s : def . depends $NUMBER$ )
rank: 856
score: 98.9915059407552
patch: Var s = new Var ( s . depends ) ;
rank: 856
score: 98.93218994140625
patch: for ( Var s : def . ) {
rank: 856
score: 98.92520751953126
patch: if ( def != null . scope ) {
rank: 856
score: 98.80333794487848
patch: if ( def == null ) { }
rank: 856
score: 98.79054768880208
patch: for ( Var s : events ) {
rank: 857
score: 98.9910888671875
patch: if ( def != null s . depends ) {
rank: 857
score: 98.98957963423295
patch: for ( Boolean def : def . depends ) {
rank: 857
score: 98.973388671875
patch: for ( Var ref : n . depends ) {
rank: 857
score: 98.92567138671875
patch: if ( s != null ) return false ;
rank: 857
score: 98.9248046875
patch: if ( state . depends != null ) {
rank: 857
score: 98.80269368489583
patch: if ( state == null ) { {
rank: 857
score: 98.7900390625
patch: while ( def . depends == null ) {
rank: 858
score: 98.99017333984375
patch: for ( Var s ] : null . depends ) {
rank: 858
score: 98.989501953125
patch: for ( Var if : def . depends ) {
rank: 858
score: 98.97203480113636
patch: return def != null && def . depends ) ;
rank: 858
score: 98.9425936612216
patch: if ( def == null ) { return null {
rank: 858
score: 98.92373046875
patch: for ( Var s -- : def ) {
rank: 858
score: 98.79454040527344
patch: if ( null != def ) {
rank: 858
score: 98.78972710503473
patch: if ( ! def . depends ) {
rank: 859
score: 98.9887362393466
patch: for ( Var s : def . nodes ) {
rank: 859
score: 98.98738236860795
patch: for ( String type : def . depends ) {
rank: 859
score: 98.9423828125
patch: for ( Var end : def . depends ) {
rank: 859
score: 98.78956604003906
patch: while ( def == null ) {
rank: 860
score: 98.98850319602273
patch: for ( Var s : def . visit ) {
rank: 860
score: 98.94109552556819
patch: for ( Var start : def . depends ) {
rank: 860
score: 98.78453063964844
patch: if ( def == false ) {
rank: 861
score: 99.087646484375
patch: if ( def == state != js CaMeL Scope ) {
rank: 861
score: 98.986328125
patch: for ( Var def : state . scope ) {
rank: 861
score: 98.9159423828125
patch: if ( def != null == def ) {
rank: 861
score: 98.78426688058036
patch: if ( def != false )
rank: 861
score: 98.78362358940973
patch: int s = def . depends ) ;
rank: 862
score: 99.04144287109375
patch: Var s = def . get CaMeL Type ( ) ;
rank: 862
score: 98.7828369140625
patch: if ( def != null ) { ) {
rank: 862
score: 98.76580047607422
patch: if ( def != null ) ;
rank: 863
score: 99.08333333333333
patch: synchronized ( state . get CaMeL Annotation ( ) ) {
rank: 863
score: 99.04010009765625
patch: for ( Var s : def . clone ( ) )
rank: 863
score: 98.98719618055556
patch: for ( Var s = def ) {
rank: 863
score: 98.98451926491477
patch: for ( Arguments s : def . depends ) {
rank: 863
score: 98.910986328125
patch: if ( def == null - 1 ) {
rank: 863
score: 98.9061767578125
patch: for ( $STRING$ : def . depends ) {
rank: 863
score: 98.78023274739583
patch: for ( Var s : EMPTY ) {
rank: 863
score: 98.7656478881836
patch: if ( scope == null ) {
rank: 864
score: 99.08253987630208
patch: int depends = state . get CaMeL Annotation ( ) ;
rank: 864
score: 98.90974256727431
patch: if ( def == null false ) {
rank: 864
score: 98.90438232421874
patch: while ( js CaMeL Scope != null ) {
rank: 864
score: 98.77964952256944
patch: for ( Var s : break ) {
rank: 864
score: 98.75898742675781
patch: if ( node == null ) {
rank: 865
score: 98.9862393465909
patch: for ( Thread s : def . depends ) {
rank: 865
score: 98.98320978338069
patch: for ( Var nodes : def . depends ) {
rank: 865
score: 98.95183563232422
patch: Var s = def . depends )
rank: 865
score: 98.90779418945313
patch: if ( n . scope != null ) {
rank: 865
score: 98.77929009331598
patch: Var s : def . depends ) ;
rank: 865
score: 98.75697326660156
patch: if ( state != type ) {
rank: 866
score: 99.08088822798295
patch: if ( def != state ) { return true ;
rank: 866
score: 98.98560680042614
patch: for ( Var s = def . next ) {
rank: 866
score: 98.9499755859375
patch: return def != null ? def : null ;
rank: 866
score: 98.93466186523438
patch: if ( def == null ) { continue {
rank: 866
score: 98.90672607421875
patch: if ( def . depends ( ) ) {
rank: 866
score: 98.89496459960938
patch: Definition def = get CaMeL Annotation ( ) ;
rank: 866
score: 98.77727593315973
patch: for ( Var s : function ) {
rank: 866
score: 98.75582122802734
patch: if ( value == null ) {
rank: 867
score: 98.98293235085227
patch: for ( Var def : js CaMeL Scope ) {
rank: 867
score: 98.9484619140625
patch: if ( def == null ) return ) ;
rank: 867
score: 98.93422629616477
patch: for ( Var s : runtime . depends ) {
rank: 867
score: 98.77515869140625
patch: for ( Var s : ( ) ) {
rank: 867
score: 98.75514221191406
patch: if ( parent == null ) {
rank: 868
score: 99.0797119140625
patch: for ( Var : s . depends ) {
rank: 868
score: 98.98527388139205
patch: for ( Object s = def . depends ) {
rank: 868
score: 98.9467544555664
patch: if ( def != def ) {
rank: 868
score: 98.90403238932292
patch: for ( Definition s : def ) {
rank: 868
score: 98.89271240234375
patch: if ( state != null ) return null ;
rank: 868
score: 98.77379692925348
patch: Object s = def . depends ) ;
rank: 868
score: 98.7534408569336
patch: if ( type == null ) {
rank: 869
score: 99.07926432291667
patch: if ( js CaMeL Scope != null ) return def ;
rank: 869
score: 99.02828979492188
patch: Var s = n . get CaMeL Value ( ) ;
rank: 869
score: 98.94649047851563
patch: for ( Var exp : def . depends )
rank: 869
score: 98.90208129882812
patch: for ( Var : state . depends ) {
rank: 869
score: 98.77304416232639
patch: for ( Var s : build ) {
rank: 869
score: 98.75122833251953
patch: if ( null == def ) {
rank: 870
score: 98.94146728515625
patch: def . depends CaMeL On ( def ) ;
rank: 870
score: 98.77208794487848
patch: for ( Object s : def ) {
rank: 870
score: 98.75099182128906
patch: for ( Var s : 0 )
rank: 871
score: 99.0780029296875
patch: for ( Var s : def != js CaMeL Scope )
rank: 871
score: 98.9831787109375
patch: def : if ( def != null ) {
rank: 871
score: 98.94031524658203
patch: if ( def == def ) {
rank: 871
score: 98.9258544921875
patch: if ( def == null ) throw null ;
rank: 871
score: 98.89722900390625
patch: if ( state . depends == null ) {
rank: 871
score: 98.89108276367188
patch: Definition def = state . depends ( ) ;
rank: 871
score: 98.74717712402344
patch: if ( def instanceof Definition ) {
rank: 872
score: 99.02315266927083
patch: for ( Node < Var > def : def ) {
rank: 872
score: 98.93849690755208
patch: Var s = def . get ) ;
rank: 872
score: 98.92366333007813
patch: if ( def != null ) depends ) {
rank: 872
score: 98.74600982666016
patch: if ( state != state ) {
rank: 873
score: 98.98191324869792
patch: if ( def . is CaMeL Local ( ) ) {
rank: 873
score: 98.93723754882812
patch: for ( Var s : def . list )
rank: 873
score: 98.89579467773437
patch: for ( Definition s : def . depends CaMeL
rank: 873
score: 98.8834716796875
patch: if ( Must CaMeL Def != null ) {
rank: 873
score: 98.76805962456598
patch: for ( Var s : references ) {
rank: 873
score: 98.74396623883929
patch: if ( def != null ;
rank: 874
score: 99.07607199928977
patch: return state . get CaMeL Annotation ( def ) ;
rank: 874
score: 99.0212910970052
patch: Object s = n . get CaMeL Value ( ) ;
rank: 874
score: 98.98157755533855
patch: for ( String s : def . depends $NUMBER$ ) {
rank: 874
score: 98.936767578125
patch: for ( Var target : def . depends )
rank: 874
score: 98.89434204101562
patch: for ( Var s : def . depends $NUMBER$
rank: 874
score: 98.76742214626736
patch: for ( Var s : STATEMENT ) {
rank: 874
score: 98.74364471435547
patch: if ( state . get ) {
rank: 875
score: 98.93616943359375
patch: / * for ( Var s : n )
rank: 875
score: 98.89369032118056
patch: for ( Var s : s ) {
rank: 875
score: 98.74141693115234
patch: if ( def > null ) {
rank: 876
score: 99.07537163628473
patch: for ( Var : def . depends )
rank: 876
score: 98.97918146306819
patch: for ( String s : state . depends ) {
rank: 876
score: 98.92850341796876
patch: for ( Var CaMeL Definition s : def )
rank: 876
score: 98.91954956054687
patch: if ( def != def . depends ) {
rank: 876
score: 98.87619018554688
patch: if ( ( s != null ) ) {
rank: 876
score: 98.73569161551339
patch: if ( name != null )
rank: 877
score: 98.9796142578125
patch: for ( Var s : def . NONE ) {
rank: 877
score: 98.927880859375
patch: for ( Var filter : def . depends )
rank: 877
score: 98.73465401785714
patch: if ( state . get )
rank: 878
score: 98.97850884331598
patch: for ( Definition s : depends ) {
rank: 878
score: 98.92748413085937
patch: for ( Var s : n . depends {
rank: 878
score: 98.75645141601562
patch: while ( def != null ) { ) {
rank: 878
score: 98.72894287109375
patch: for ( Var s : 1 )
rank: 879
score: 98.9230224609375
patch: if ( def == null ) return def ;
rank: 879
score: 98.87142181396484
patch: while ( state == null ) {
rank: 879
score: 98.8543701171875
patch: if ( def != true ) {
rank: 879
score: 98.75324096679688
patch: System . err . println ( $STRING$ ) ;
rank: 880
score: 98.97784978693181
patch: Var [ ] def = def . depends ) ;
rank: 880
score: 98.9151944247159
patch: if ( def == null ) { break { }
rank: 880
score: 98.85369873046875
patch: for ( Var def : def ) {
rank: 880
score: 98.72411346435547
patch: if ( s . depends ) {
rank: 881
score: 98.97779430042614
patch: for ( Var s : 0 . matches ) {
rank: 881
score: 98.91531372070312
patch: for ( Visitor s : def . depends )
rank: 881
score: 98.91405140269886
patch: if ( def == null ) { return false {
rank: 881
score: 98.86807250976562
patch: if ( state instanceof Flow CaMeL State ) {
rank: 881
score: 98.72320556640625
patch: if ( s . depends )
rank: 882
score: 99.07003173828124
patch: for ( Var : n . depends ) {
rank: 882
score: 98.9774502840909
patch: for ( Object depends : def . depends ) {
rank: 882
score: 98.96100463867188
patch: if ( name != js CaMeL Scope ) {
rank: 882
score: 98.91510009765625
patch: if ( def != def ) return def ;
rank: 882
score: 98.91356312144886
patch: if ( def != null ) { return ) ;
rank: 882
score: 98.74937744140625
patch: if ( def == null ) { continue ;
rank: 882
score: 98.72174072265625
patch: if ( list != null ) {
rank: 883
score: 99.06772682883523
patch: return s . scope != js CaMeL Scope ) ;
rank: 883
score: 98.9608154296875
patch: for ( Var ! def . scope ) {
rank: 883
score: 98.91465454101562
patch: for ( Var s : n . get {
rank: 883
score: 98.74905056423611
patch: for ( Var s , def ) {
rank: 883
score: 98.72062683105469
patch: for ( Var s : null )
rank: 884
score: 98.96068657769098
patch: for ( Var s : iterator ) {
rank: 884
score: 98.91312866210937
patch: if ( def != null ) { continue {
rank: 884
score: 98.9115234375
patch: for ( Var s : def 1 ) {
rank: 884
score: 98.84031168619792
patch: if ( def != null false ) {
rank: 884
score: 98.74769422743056
patch: for ( Var s : end ) {
rank: 884
score: 98.72061157226562
patch: for ( Var s : false )
rank: 885
score: 98.97528631036931
patch: for ( Object s : s . depends ) {
rank: 885
score: 98.957861328125
patch: for ( Must CaMeL Def : state ) {
rank: 885
score: 98.9107177734375
patch: if ( def == for CaMeL Var ) {
rank: 885
score: 98.90997924804688
patch: Var s = def . depends ( ) ;
rank: 885
score: 98.85718383789063
patch: Definition def = get CaMeL Cfg ( ) ;
rank: 885
score: 98.83757188585069
patch: for ( Var s : def == null
rank: 885
score: 98.744384765625
patch: if ( def . get != null ) {
rank: 885
score: 98.71702575683594
patch: if ( def != state ) {
rank: 886
score: 99.05591930042614
patch: for ( Var s >= def . depends ) {
rank: 886
score: 98.9750747680664
patch: for ( Var s = def {
rank: 886
score: 98.910595703125
patch: if ( def != for CaMeL Var ) {
rank: 886
score: 98.854345703125
patch: if ( state == null ) return null ;
rank: 886
score: 98.7410888671875
patch: for ( Var s : start ) {
rank: 886
score: 98.71574401855469
patch: while ( n != null ) {
rank: 887
score: 98.97499778053977
patch: for ( Var s : def . depends ? {
rank: 887
score: 98.90700073242188
patch: for ( Var n : def . get )
rank: 887
score: 98.73895263671875
patch: while ( s . depends == null ) {
rank: 887
score: 98.71407318115234
patch: if ( state instanceof Definition ) {
rank: 888
score: 98.97406560724431
patch: Var [ : if ( def != null ) {
rank: 888
score: 98.9526123046875
patch: for ( Var ! def . depends ) {
rank: 888
score: 98.9056640625
patch: for ( Var s : def , def )
rank: 888
score: 98.8258056640625
patch: if ( state instanceof Must CaMeL Def >
rank: 888
score: 98.7381591796875
patch: Var s : synchronized ( def ) {
rank: 888
score: 98.71397181919643
patch: if ( state == false )
rank: 889
score: 98.90523681640624
patch: Var s = def . depends CaMeL On {
rank: 889
score: 98.89638671875
patch: if ( def != null ) { continue ;
rank: 889
score: 98.84000396728516
patch: synchronized ( js CaMeL Scope ) {
rank: 889
score: 98.73746066623264
patch: for ( Var s : in ) {
rank: 889
score: 98.71315002441406
patch: if ( s instanceof Node ) {
rank: 890
score: 98.9671297940341
patch: for ( Var s = def , depends ) {
rank: 890
score: 98.90408935546876
patch: for ( Var s : def ) break ;
rank: 890
score: 98.8936767578125
patch: Var depends = def . depends ) ;
rank: 890
score: 98.81689453125
patch: for ( Var s : def . depends
rank: 890
score: 98.7122573852539
patch: if ( def != null && {
rank: 891
score: 98.94801025390625
patch: for ( Var ! s . scope ) {
rank: 891
score: 98.89177856445312
patch: / * while ( def != null ) {
rank: 891
score: 98.82253689236111
patch: if ( def == null true ) {
rank: 891
score: 98.73242865668402
patch: for ( Var s : next ) {
rank: 892
score: 99.05106977982955
patch: } return state . get CaMeL Annotation ( ) ;
rank: 892
score: 98.89148627387152
patch: int value = def . depends ) ;
rank: 892
score: 98.82240804036458
patch: for ( Var s = def != null
rank: 892
score: 98.80451117621527
patch: for ( Var 1 : def ) {
rank: 892
score: 98.72999403211806
patch: for ( Var s : index ) {
rank: 892
score: 98.7045669555664
patch: Definition def = js CaMeL Scope ;
rank: 893
score: 98.93228149414062
patch: if ( s instanceof Must CaMeL Def ) {
rank: 893
score: 98.89129028320312
patch: return def != null ? def : def ;
rank: 893
score: 98.88919067382812
patch: if ( def != null ) { break {
rank: 893
score: 98.72862413194444
patch: String s = def . depends ) ;
rank: 893
score: 98.7027587890625
patch: if ( def >= null ) {
rank: 894
score: 98.92605590820312
patch: while ( s . scope != null ) {
rank: 894
score: 98.88182373046875
patch: if ( def == null ) { break {
rank: 894
score: 98.88043212890625
patch: if ( def == null ) { return {
rank: 894
score: 98.81617736816406
patch: if ( def != 0 ) {
rank: 894
score: 98.69995989118304
patch: if ( scope != null )
rank: 895
score: 98.88043212890625
patch: synchronized ( def . depends ) {
rank: 895
score: 98.8798599243164
patch: for ( Var n : def )
rank: 895
score: 98.81334771050348
patch: for ( Branch s : def ) {
rank: 895
score: 98.72690836588542
patch: for ( Var s : target ) {
rank: 895
score: 98.6976318359375
patch: if ( state != parent ) {
rank: 896
score: 98.95728895399306
patch: for ( Var s = null ; {
rank: 896
score: 98.72252197265625
patch: for ( Var s : out . depends )
rank: 896
score: 98.69643147786458
patch: Definition def = false ;
rank: 897
score: 98.95645141601562
patch: for ( Var s : 0 . depends ? def {
rank: 897
score: 98.92003038194444
patch: for ( : def . depends ) {
rank: 897
score: 98.69520568847656
patch: for ( Var s : true )
rank: 898
score: 99.0433682528409
patch: if ( js CaMeL Scope == js CaMeL Scope )
rank: 898
score: 98.9562100497159
patch: for ( String s = def . depends ) {
rank: 898
score: 98.72003173828125
patch: for ( boolean s : def . depends )
rank: 899
score: 99.04310191761364
patch: if ( def != null ) { def . {
rank: 899
score: 98.9560317993164
patch: for ( Var s = 0 {
rank: 899
score: 98.91505126953125
patch: for ( Var s : depends ) { {
rank: 899
score: 98.87340087890625
patch: for ( Attribute s : def . depends )
rank: 899
score: 98.80234781901042
patch: for ( Var s != null ) {
rank: 899
score: 98.71944851345486
patch: for ( Var s : value ) {
rank: 899
score: 98.6935043334961
patch: if ( def != this ) {
rank: 900
score: 98.95589870876736
patch: / if ( def != null ) {
rank: 900
score: 98.87315673828125
patch: for ( Var name : n . depends )
rank: 900
score: 98.76338704427083
patch: for ( Var s : name ) {
rank: 900
score: 98.718994140625
patch: for ( Var s : CHECK ) {
rank: 900
score: 98.69086456298828
patch: if ( def != type ) {
rank: 901
score: 99.03924005681819
patch: if ( s . get CaMeL Annotation ( ) ;
rank: 901
score: 98.94802517361111
patch: for ( Var s : current ) {
rank: 901
score: 98.87190551757813
patch: for ( Var value : def . depends )
rank: 901
score: 98.76192801339286
patch: for ( Var 1 ) {
rank: 901
score: 98.68792724609375
patch: if ( state != true ) {
rank: 902
score: 98.9064208984375
patch: while ( scope != js CaMeL Scope ) {
rank: 902
score: 98.78781467013889
patch: for ( Must CaMeL Def > ) {
rank: 902
score: 98.68453979492188
patch: Definition def = state . get CaMeL
rank: 903
score: 98.96555582682292
patch: for ( Var s : options ) {
rank: 903
score: 98.87098999023438
patch: for ( Var s : def . filter )
rank: 903
score: 98.86084594726563
patch: if ( def != null . def ) {
rank: 903
score: 98.78429412841797
patch: for ( Var s = ) {
rank: 903
score: 98.74652971540179
patch: if ( < null ) {
rank: 903
score: 98.71604410807292
patch: for ( Var s : command ) {
rank: 903
score: 98.68377685546875
patch: if ( state != null ;
rank: 904
score: 98.93747287326389
patch: for ( Var s , depends ) {
rank: 904
score: 98.899755859375
patch: for ( s : def . depends ) {
rank: 904
score: 98.86868896484376
patch: for ( Var s : n 1 ) {
rank: 904
score: 98.78180803571429
patch: for ( Var s != null
rank: 904
score: 98.74534098307292
patch: for ( String s : false ) {
rank: 904
score: 98.71083577473958
patch: for ( Var s : group ) {
rank: 905
score: 98.89384765625
patch: if ( parent != js CaMeL Scope ) {
rank: 905
score: 98.859521484375
patch: if ( def != null ) throw null {
rank: 905
score: 98.71082899305556
patch: for ( Var s : join ) {
rank: 905
score: 98.68067932128906
patch: if ( target != null ) {
rank: 906
score: 99.03300645616319
patch: if ( def != null ) continue ;
rank: 906
score: 98.932861328125
patch: for ( Var s = def { break ; }
rank: 906
score: 98.89307250976563
patch: for ( Var s : scope . depends )
rank: 906
score: 98.85599975585937
patch: } Var s = def . depends ) ;
rank: 906
score: 98.78062438964844
patch: if ( def < null ) {
rank: 906
score: 98.70977105034723
patch: for ( Var s : insert ) {
rank: 906
score: 98.67524937220982
patch: if ( state == ) {
rank: 907
score: 98.9559326171875
patch: for ( Node < Node > def : ) {
rank: 907
score: 98.93240017361111
patch: for ( Var s : class ) {
rank: 907
score: 98.8618408203125
patch: if ( def == def ) return def ;
rank: 907
score: 98.7786636352539
patch: for ( Graph CaMeL Node < Node
rank: 907
score: 98.70750596788194
patch: for ( Var s : NULL ) {
rank: 907
score: 98.67107282366071
patch: if ( def . depends )
rank: 908
score: 98.88934936523438
patch: for ( if ( def != null ) {
rank: 908
score: 98.86156616210937
patch: for ( Var s : depends CaMeL On )
rank: 908
score: 98.84750366210938
patch: for ( Iterator < Var > def ) {
rank: 908
score: 98.72950744628906
patch: while ( s == null ) {
rank: 908
score: 98.70745171440973
patch: for null : def . depends ) {
rank: 908
score: 98.66323416573661
patch: if ( s != null ;
rank: 909
score: 98.93052978515625
patch: if ( def : def == null ) {
rank: 909
score: 98.88767700195312
patch: for ( type : def . depends ) {
rank: 909
score: 98.86094970703125
patch: for ( Var s : def ) { )
rank: 909
score: 98.84625854492188
patch: if ( def == null . depends ) {
rank: 909
score: 98.7053451538086
patch: Var ( def . depends ) ;
rank: 909
score: 98.66299874441964
patch: if ( value != null )
rank: 910
score: 99.02997381036931
patch: if ( def == state ) { return true ;
rank: 910
score: 98.92693536931819
patch: for ( Var s : 0 . depends && {
rank: 910
score: 98.88670043945312
patch: for ( Var def : state . depends )
rank: 910
score: 98.859912109375
patch: for ( Var default : def . depends )
rank: 910
score: 98.65818568638393
patch: if ( state != this )
rank: 911
score: 98.92681329900569
patch: for ( Var s : def . depends ) return
rank: 911
score: 98.85964626736111
patch: if ( def != null ) return {
rank: 911
score: 98.84288330078125
patch: for ( Function s : def . depends )
rank: 911
score: 98.74085998535156
patch: if ( def == true ) {
rank: 911
score: 98.65598842075893
patch: if ( type != null )
rank: 912
score: 98.92591349283855
patch: for ( Var s = def . depends ) break {
rank: 912
score: 98.8411376953125
patch: if ( this . def != null ) {
rank: 912
score: 98.7386474609375
patch: for ( Var s >= 1
rank: 912
score: 98.70139770507812
patch: / * if ( s != null ) {
rank: 912
score: 98.65008544921875
patch: Definition def = true ;
rank: 913
score: 99.02684437144886
patch: if ( def != null && def . depends )
rank: 913
score: 98.86716715494792
patch: for ( Var s : def != null
rank: 913
score: 98.83412000868056
patch: if ( def != null ) break )
rank: 913
score: 98.73550415039062
patch: for ( Var s + ) {
rank: 913
score: 98.71811930338542
patch: Definition def = state . depends ) ;
rank: 913
score: 98.70028076171874
patch: if ( def != null ) { ) ;
rank: 913
score: 98.64735630580357
patch: if ( def == false )
rank: 914
score: 99.02498002485795
patch: if ( def != ) { return true ; }
rank: 914
score: 98.94159490411931
patch: for ( Var s : def . mappings ) {
rank: 914
score: 98.83685302734375
patch: Object s = def . depends ) {
rank: 914
score: 98.83397081163194
patch: for ( Node s : def ) {
rank: 914
score: 98.73400115966797
patch: for ( Var s >= ) {
rank: 914
score: 98.71607801649306
patch: for ( String s : s ) {
rank: 914
score: 98.69936794704861
patch: Object s : def . depends ) {
rank: 914
score: 98.64492361886161
patch: if ( null != def )
rank: 915
score: 98.93804376775569
patch: if ( ! def . equals ( def ) )
rank: 915
score: 98.90965440538194
patch: for ( Var s : - ) {
rank: 915
score: 98.86219787597656
patch: if ( def instanceof Branch ) {
rank: 915
score: 98.83065795898438
patch: if ( def != null . get ) {
rank: 915
score: 98.69862670898438
patch: for ( Property s : def . depends )
rank: 915
score: 98.63572184244792
patch: if ( true ) {
rank: 916
score: 98.85213894314236
patch: for ( Var s : check ) {
rank: 916
score: 98.83139377170139
patch: for ( Node s : n ) {
rank: 916
score: 98.83038330078125
patch: if ( def == null && depends ) {
rank: 916
score: 98.72810581752232
patch: for ( Var s == null
rank: 916
score: 98.69851345486111
patch: else def = def . depends ) ;
rank: 916
score: 98.62558419363839
patch: if ( def != ) {
rank: 917
score: 98.82442898220486
patch: if ( def == null ) continue ;
rank: 917
score: 98.62159946986607
patch: if ( parent != null )
rank: 918
score: 98.82548217773437
patch: if ( def != null ) { break ;
rank: 918
score: 98.82297770182292
patch: if ( def != def ) break ;
rank: 918
score: 98.72366333007812
patch: for ( Var s == null *
rank: 918
score: 98.69818115234375
patch: for ( ? s : def . depends )
rank: 918
score: 98.69175720214844
patch: if ( state < null ) {
rank: 918
score: 98.60247802734375
patch: if ( node != null )
rank: 919
score: 98.90281677246094
patch: def = def . depends ) ;
rank: 919
score: 98.84158325195312
patch: if ( s instanceof Branch ) {
rank: 919
score: 98.824072265625
patch: if ( def != null ) { return {
rank: 919
score: 98.82241482204861
patch: for ( Var s : def , {
rank: 919
score: 98.71916198730469
patch: if ( def != current ) {
rank: 919
score: 98.59764607747395
patch: if ( state != )
rank: 920
score: 98.91137084960937
patch: for ( Node s = def . depends )
rank: 920
score: 98.90103488498264
patch: Var s = s . depends ) ;
rank: 920
score: 98.83367241753473
patch: for ( Var def : scope ) {
rank: 920
score: 98.71029227120536
patch: for ( Var s >= 0
rank: 920
score: 98.69630126953125
patch: Var s : Var s : Var s :
rank: 920
score: 98.58909388950893
patch: if ( s instanceof Definition )
rank: 921
score: 99.00630493164063
patch: for ( Var [ : def . depends )
rank: 921
score: 98.89968039772727
patch: for ( Var s : null . depends && {
rank: 921
score: 98.8214111328125
patch: if ( def == null ) return null {
rank: 921
score: 98.70826721191406
patch: for ( Must CaMeL Def ) {
rank: 921
score: 98.69423828125
patch: for ( Character s : def . depends )
rank: 921
score: 98.68303680419922
patch: if ( Definition != null ) {
rank: 921
score: 98.58509172712054
patch: if ( def != state )
rank: 922
score: 98.8983154296875
patch: for ( Var s : def . depends | {
rank: 922
score: 98.83175320095486
patch: for ( Branch s : depends ) {
rank: 922
score: 98.80725708007813
patch: } else if ( def != null ) {
rank: 922
score: 98.79117838541667
patch: if ( def == ) return true ;
rank: 922
score: 98.69330512152777
patch: for ( Var s : annotation ) {
rank: 922
score: 98.58506556919643
patch: if ( state != state )
rank: 923
score: 99.00270385742188
patch: if ( js CaMeL Scope != false ) {
rank: 923
score: 98.89749755859376
patch: if ( def != null != null ) {
rank: 923
score: 98.78778754340277
patch: if ( def == ) return false ;
rank: 923
score: 98.69245741102431
patch: for ( Var s : capacity ) {
rank: 923
score: 98.58450753348214
patch: if ( state != type )
rank: 924
score: 98.89409044053819
patch: if ( def != null Var ) {
rank: 924
score: 98.82703993055556
patch: if ( def == js CaMeL Scope )
rank: 924
score: 98.77213541666667
patch: for ( Var target : def ) {
rank: 924
score: 98.6964111328125
patch: for ( Var s == null ?
rank: 924
score: 98.69207085503473
patch: for ( Var s : save ) {
rank: 924
score: 98.57716587611607
patch: if ( name == null )
rank: 925
score: 98.89284939236111
patch: for ( Object s : null ) {
rank: 925
score: 98.823486328125
patch: for ( Var s : set ) {
rank: 925
score: 98.79913330078125
patch: int index = def . depends ) ;
rank: 925
score: 98.77074323381696
patch: if ( def != def )
rank: 925
score: 98.68779839409723
patch: for ( Var s : input ) {
rank: 925
score: 98.65974426269531
patch: if ( state > null ) {
rank: 925
score: 98.57354736328125
patch: while ( def != null )
rank: 926
score: 98.87698974609376
patch: for ( node : def . depends ) {
rank: 926
score: 98.82097032335069
patch: for ( Definition def : depends ) {
rank: 926
score: 98.69100952148438
patch: if ( def > 0 ) {
rank: 926
score: 98.68699137369792
patch: for ( Var s : EQ ) {
rank: 926
score: 98.64785766601562
patch: if ( null != s ) {
rank: 926
score: 98.57344563802083
patch: synchronized ( state ) {
rank: 927
score: 98.99239501953124
patch: if ( js CaMeL Scope != $STRING$ ) {
rank: 927
score: 98.78803846571181
patch: int n = def . depends ) ;
rank: 927
score: 98.76959906684027
patch: for ( Var s : ) { {
rank: 927
score: 98.68597412109375
patch: for ( Var s : concat ) {
rank: 927
score: 98.64632415771484
patch: if ( null != state ) {
rank: 927
score: 98.56927490234375
patch: if ( def > null )
rank: 928
score: 98.97833251953125
patch: if ( def ) { return true ; }
rank: 928
score: 98.76941596137152
patch: for ( Var exp : def ) {
rank: 928
score: 98.68489074707031
patch: if ( s != false ) {
rank: 928
score: 98.55140032087054
patch: if ( n . depends )
rank: 929
score: 98.97443237304688
patch: if ( def == null ) { return ;
rank: 929
score: 98.88835991753473
patch: for ( String s : null ) {
rank: 929
score: 98.80967881944444
patch: for ( Var s : for ) {
rank: 929
score: 98.76776123046875
patch: if ( def != null && def )
rank: 929
score: 98.682861328125
patch: for ( Var s : node ) {
rank: 929
score: 98.54513113839286
patch: if ( Definition != null )
rank: 930
score: 98.88802490234374
patch: if ( s : def != null ) {
rank: 930
score: 98.68177795410156
patch: if ( def == 0 ) {
rank: 930
score: 98.6787109375
patch: while ( def . depends ) {
rank: 930
score: 98.53579275948661
patch: if ( scope == null )
rank: 931
score: 98.970849609375
patch: if ( s . scope != scope ) {
rank: 931
score: 98.85826416015625
patch: for ( int s = 0 ; ) {
rank: 931
score: 98.80672200520833
patch: for ( Var s : matches ) {
rank: 931
score: 98.76483154296875
patch: for ( Var exp : n ) {
rank: 931
score: 98.67475043402777
patch: if ( s != null ) { {
rank: 931
score: 98.53140694754464
patch: if ( def != type )
rank: 932
score: 98.87857055664062
patch: for ( Var s != ) {
rank: 932
score: 98.76931423611111
patch: for ( Var [ ] depends ) {
rank: 932
score: 98.67658233642578
patch: for ( Var s != null *
rank: 932
score: 98.67006429036458
patch: String s : def . depends ) ;
rank: 932
score: 98.52759660993304
patch: if ( s instanceof Var )
rank: 933
score: 98.76894802517361
patch: if ( def != null ) continue {
rank: 933
score: 98.75244140625
patch: Block s = def . depends ) ;
rank: 933
score: 98.52648053850446
patch: if ( null != state )
rank: 934
score: 98.96273803710938
patch: if ( s . scope != $STRING$ ) {
rank: 934
score: 98.86183471679688
patch: / * if ( def == null ) {
rank: 934
score: 98.79482014973958
patch: for ( Var def : state ) {
rank: 934
score: 98.75113254123264
patch: if ( def == null ) return {
rank: 934
score: 98.65867396763393
patch: Var s : Var s :
rank: 934
score: 98.61475372314453
patch: while ( n == null ) {
rank: 934
score: 98.52631487165179
patch: if ( state != true )
rank: 935
score: 98.7943115234375
patch: for ( Node s : depends ) {
rank: 935
score: 98.76729329427083
patch: } if ( def == null ) {
rank: 935
score: 98.74905734592014
patch: if ( def == null ) { )
rank: 936
score: 98.95037841796875
patch: if ( def == state ) {
rank: 936
score: 98.85906304253473
patch: for ( Var s = 0 ; {
rank: 936
score: 98.7919921875
patch: for ( Var scope : depends ) {
rank: 936
score: 98.76481797960069
patch: } if ( def instanceof Var ) {
rank: 936
score: 98.67138671875
patch: Definition def = state . scope ;
rank: 936
score: 98.52509416852679
patch: while ( def == null )
rank: 937
score: 98.85850016276042
patch: / if ( s != null ) {
rank: 937
score: 98.79159884982639
patch: for ( Var s : props ) {
rank: 937
score: 98.76276991102431
patch: if ( def != null ) break {
rank: 937
score: 98.74728054470486
patch: for ( Var target : n ) {
rank: 937
score: 98.62053680419922
patch: Var s : def = null ;
rank: 937
score: 98.52507672991071
patch: if ( def != this )
rank: 938
score: 98.93685913085938
patch: if ( def != state ) return true ;
rank: 938
score: 98.77777099609375
patch: for ( Var def : list ) {
rank: 938
score: 98.7362060546875
patch: if ( def != ) return true ;
rank: 938
score: 98.6617431640625
patch: for ( Var s ) {
rank: 938
score: 98.51109967912946
patch: if ( s != false )
rank: 939
score: 98.84082709418402
patch: / if ( def == null ) {
rank: 939
score: 98.81891547309027
patch: for ( Var s : level ) {
rank: 939
score: 98.77566867404514
patch: for ( Var s : lang ) {
rank: 939
score: 98.76219346788194
patch: int s = def . depends ) {
rank: 939
score: 98.60243225097656
patch: if ( null == s ) {
rank: 939
score: 98.51029750279018
patch: if ( def == ) {
rank: 940
score: 98.84006076388889
patch: for ( Var [ : null ) {
rank: 940
score: 98.56690216064453
patch: while ( s . depends ) {
rank: 940
score: 98.50889369419643
patch: if ( def != true )
rank: 941
score: 98.80841064453125
patch: for ( Iterator < Var > ) {
rank: 941
score: 98.65758514404297
patch: if ( state != 0 ) {
rank: 941
score: 98.56071472167969
patch: s = def . depends ) ;
rank: 941
score: 98.502685546875
patch: if ( index != null )
rank: 942
score: 98.83713785807292
patch: for ( String s : depends ) {
rank: 942
score: 98.70539202008929
patch: if ( def == def )
rank: 942
score: 98.64488983154297
patch: if ( state instanceof Var ) {
rank: 942
score: 98.5533447265625
patch: while ( def instanceof Var ) {
rank: 942
score: 98.50230916341145
patch: synchronized ( n ) {
rank: 943
score: 98.8365478515625
patch: for ( Var s != null ? def {
rank: 943
score: 98.79833984375
patch: for ( Var s : ] ) {
rank: 943
score: 98.7664794921875
patch: for ( Var s : max ) {
rank: 943
score: 98.5744857788086
patch: if ( state != null ) return
rank: 943
score: 98.54340362548828
patch: Var ( def . depends ) {
rank: 943
score: 98.5020751953125
patch: if ( js CaMeL Scope )
rank: 944
score: 98.83570692274306
patch: for ( Var s : main ) {
rank: 944
score: 98.76387023925781
patch: for ( Var s : depends )
rank: 944
score: 98.7544937133789
patch: Iterator = def . depends ) {
rank: 944
score: 98.68318939208984
patch: if ( def ) return true ;
rank: 944
score: 98.6355972290039
patch: for ( Node < Node == null
rank: 944
score: 98.57337188720703
patch: if ( state != $STRING$ ) {
rank: 944
score: 98.54215240478516
patch: Var s : def . depends )
rank: 944
score: 98.50112479073661
patch: if ( def < null )
rank: 945
score: 98.6762924194336
patch: if ( def ) return def ;
rank: 945
score: 98.50045340401786
patch: if ( def >= null )
rank: 946
score: 98.66595458984375
patch: while ( def != def ) {
rank: 946
score: 98.53315734863281
patch: Var ( s , def ) ;
rank: 946
score: 98.49940708705357
patch: if ( target != null )
rank: 947
score: 98.76210530598958
patch: for ( Node < Node > ) {
rank: 947
score: 98.73756239149306
patch: int value = def . depends ) {
rank: 947
score: 98.66531372070312
patch: for ( Var n : n )
rank: 947
score: 98.6304931640625
patch: for ( Var s ,
rank: 947
score: 98.50846644810268
patch: for ( Must CaMeL Def s
rank: 947
score: 98.497314453125
patch: if ( current != null ) {
rank: 947
score: 98.49686104910714
patch: if ( value == null )
rank: 948
score: 98.82529703776042
patch: int depends = def . depends ) ;
rank: 948
score: 98.74955240885417
patch: for ( Branch def : depends ) {
rank: 948
score: 98.73600938585069
patch: int values = def . depends ) ;
rank: 948
score: 98.64289855957031
patch: Var s = n . depends )
rank: 948
score: 98.4818827311198
patch: if ( state ) {
rank: 948
score: 98.46412876674107
patch: catch ( Var s ) {
rank: 949
score: 98.6369400024414
patch: Set < Var > def ) {
rank: 949
score: 98.49370465959821
patch: for ( Must CaMeL Def state
rank: 949
score: 98.47921316964286
patch: if ( parent == null )
rank: 949
score: 98.41910807291667
patch: Var s : try {
rank: 950
score: 98.73096381293402
patch: if ( ! def != null ) {
rank: 950
score: 98.63531494140625
patch: for ( Var s : {
rank: 950
score: 98.48924037388393
patch: for ( Var $NUMBER$ ) {
rank: 950
score: 98.47603352864583
patch: if ( false ) {
rank: 951
score: 98.8677749633789
patch: for ( Var s : def .
rank: 951
score: 98.73080783420139
patch: Iterator iterator = def . depends ) {
rank: 951
score: 98.62738800048828
patch: for ( int s = 0 )
rank: 951
score: 98.52016194661458
patch: for ( Var s ++
rank: 951
score: 98.48159354073661
patch: if ( < 0 ) {
rank: 951
score: 98.47509765625
patch: if ( list != null )
rank: 951
score: 98.38602701822917
patch: synchronized ( def ) {
rank: 952
score: 98.81983100043402
patch: for ( Var s instanceof Var ) {
rank: 952
score: 98.62599400111607
patch: for ( Var s : )
rank: 952
score: 98.51682535807292
patch: for ( Var ) {
rank: 952
score: 98.47150530133929
patch: if ( state != n )
rank: 952
score: 98.45973423549107
patch: if ( < false ) {
rank: 952
score: 98.31201171875
patch: Var s = null ;
rank: 953
score: 98.71980285644531
patch: List = def . depends ) ;
rank: 953
score: 98.61894989013672
patch: if ( def ) return false ;
rank: 953
score: 98.50475202287946
patch: for ( Var s + }
rank: 953
score: 98.298779296875
patch: Var s : {
rank: 954
score: 98.86260986328125
patch: / * if ( def != null )
rank: 954
score: 98.61868286132812
patch: for ( Node s : def )
rank: 954
score: 98.50173514229911
patch: Definition def = state != null
rank: 954
score: 98.44309488932292
patch: if ( return ) {
rank: 954
score: 98.28447265625
patch: for ( ) {
rank: 955
score: 98.81713189019098
patch: for ( Var s : load ) {
rank: 955
score: 98.61451721191406
patch: for ( Var n : ) {
rank: 955
score: 98.46422467912946
patch: for ( Must CaMeL Def {
rank: 955
score: 98.44127546037946
patch: for ( Must CaMeL Def def
rank: 955
score: 98.43387858072917
patch: for ( Var s =
rank: 956
score: 98.85107421875
patch: if ( def ) { return true ;
rank: 956
score: 98.61137390136719
patch: Object s = def . depends )
rank: 956
score: 98.46131243024554
patch: Definition def = def != null
rank: 956
score: 98.4336649576823
patch: Definition def = state ;
rank: 957
score: 98.80959743923611
patch: for ( Var s = get ) {
rank: 957
score: 98.67178344726562
patch: List = def . depends ) {
rank: 957
score: 98.60002790178571
patch: if ( def ) break ;
rank: 957
score: 98.45269775390625
patch: for ( Var s / *
rank: 957
score: 98.42921665736607
patch: for ( Var s : else
rank: 957
score: 98.39882202148438
patch: if ( true )
rank: 957
score: 98.26017252604167
patch: Var ( null ) ;
rank: 958
score: 98.80921766493056
patch: if ( ! s != null ) {
rank: 958
score: 98.59945678710938
patch: for ( Iterator < Var > )
rank: 958
score: 98.40503801618304
patch: if ( < true ) {
rank: 958
score: 98.39549763997395
patch: Var def = null ;
rank: 958
score: 98.26016235351562
patch: Var ( s ) ;
rank: 959
score: 98.821533203125
patch: if ( js CaMeL Scope != ) {
rank: 959
score: 98.39464460100446
patch: Definition def = - 1 ;
rank: 959
score: 98.39337158203125
patch: Annotation def = null ;
rank: 959
score: 98.22189331054688
patch: Var ( def ) ;
rank: 960
score: 98.82063123914931
patch: if ( def == null ) return ;
rank: 960
score: 98.80190022786458
patch: for ( Var s : null { {
rank: 960
score: 98.717529296875
patch: for ( Var s : exit ) {
rank: 960
score: 98.65792846679688
patch: List ( def . depends ) {
rank: 960
score: 98.58552551269531
patch: while ( def == def ) {
rank: 960
score: 98.39315795898438
patch: if ( def != )
rank: 960
score: 98.2032470703125
patch: final Var s :
rank: 961
score: 98.81920030381944
patch: if ( s == js CaMeL Scope )
rank: 961
score: 98.71743435329861
patch: for ( Node < Var > ) {
rank: 961
score: 98.65430450439453
patch: List < Var > def ) {
rank: 961
score: 98.57108851841518
patch: Var s = def ) ;
rank: 961
score: 98.43684895833333
patch: if ( def ) {
rank: 961
score: 98.39019775390625
patch: if ( state == )
rank: 961
score: 98.19795735677083
patch: while ( false ) {
rank: 962
score: 98.50462646484375
patch: if ( def )
rank: 962
score: 98.38829549153645
patch: for ( Var s :
rank: 962
score: 98.38271658761161
patch: Definition def ( state ) ;
rank: 962
score: 98.18509928385417
patch: add ( def ) ;
rank: 963
score: 98.77964952256944
patch: for ( Var s : create ) {
rank: 963
score: 98.64801788330078
patch: synchronized ( def != null ) {
rank: 963
score: 98.42796107700893
patch: for ( Var s >= null
rank: 963
score: 98.36568196614583
patch: if ( depends ) {
rank: 964
score: 98.79923248291016
patch: if ( def != null && def
rank: 964
score: 98.58869934082031
patch: if ( state instanceof Branch ) {
rank: 964
score: 98.3059794108073
patch: for ( Var s +
rank: 965
score: 98.70020887586806
patch: for ( Var s : vars ) {
rank: 965
score: 98.64557647705078
patch: result = def . depends ) ;
rank: 965
score: 98.58818817138672
patch: if ( def instanceof Node ) {
rank: 965
score: 98.42474365234375
patch: for ( Var s < s
rank: 965
score: 98.33990478515625
patch: Definition state = null ;
rank: 965
score: 98.27801513671875
patch: if ( s ) {
rank: 965
score: 98.17295328776042
patch: Var s : ) {
rank: 966
score: 98.77522786458333
patch: for ( Var s ] != ) {
rank: 966
score: 98.6989517211914
patch: for ( Var s : count )
rank: 966
score: 98.62724304199219
patch: if ( children != null ) {
rank: 966
score: 98.42715890066964
patch: while ( def != def )
rank: 966
score: 98.33724539620536
patch: if ( < 1 ) {
rank: 966
score: 98.26271565755208
patch: Var def = false ;
rank: 966
score: 98.15534210205078
patch: Var s :
rank: 967
score: 98.77388509114583
patch: for ( Var s : parent ) {
rank: 967
score: 98.41901506696429
patch: if ( def != null {
rank: 967
score: 98.39089965820312
patch: for ( Var [ )
rank: 967
score: 98.26133219401042
patch: Annotation def = false ;
rank: 967
score: 98.15135701497395
patch: try { Var s :
rank: 968
score: 98.68324279785156
patch: for ( Node < Var ) {
rank: 968
score: 98.61603546142578
patch: if ( this . depends ) {
rank: 968
score: 98.39629255022321
patch: return def != null ) ;
rank: 968
score: 98.3806660970052
patch: for ( Var s --
rank: 968
score: 98.12975056966145
patch: Var ( s ) {
rank: 969
score: 98.76651340060764
patch: if ( def Var != null ) {
rank: 969
score: 98.75250244140625
patch: if ( def != $STRING$ ) {
rank: 969
score: 98.6795883178711
patch: for ( Node s = ) {
rank: 969
score: 98.47460065569196
patch: for ( Var s : def
rank: 969
score: 98.34754435221355
patch: for ( Var s /
rank: 969
score: 98.19478352864583
patch: Definition state = false ;
rank: 969
score: 98.11722819010417
patch: Var ( false ) ;
rank: 970
score: 98.76533338758681
patch: if ( def != null s ) {
rank: 970
score: 98.6066665649414
patch: List ( def . depends ) ;
rank: 970
score: 98.37729317801339
patch: Var s = def . {
rank: 970
score: 98.237646484375
patch: if ( ) {
rank: 971
score: 98.58462960379464
patch: return def . depends ) ;
rank: 971
score: 98.37302943638393
patch: Set < Var > def )
rank: 971
score: 98.23512776692708
patch: if ( < null )
rank: 971
score: 98.16123046875
patch: for ( Var s
rank: 971
score: 98.10868326822917
patch: while ( true ) {
rank: 972
score: 98.7431869506836
patch: for ( Var s != null {
rank: 972
score: 98.60265350341797
patch: for ( Var s : options )
rank: 972
score: 98.38938685825893
patch: for ( Var s : }
rank: 972
score: 98.2261962890625
patch: Var def = true ;
rank: 972
score: 98.135498046875
patch: Definition def ( ) ;
rank: 972
score: 98.0779317220052
patch: add ( s ) ;
rank: 973
score: 98.73048400878906
patch: for ( Var s == ) {
rank: 973
score: 98.58737182617188
patch: for ( Var s : { {
rank: 973
score: 97.944970703125
patch: Var s : else
rank: 974
score: 98.71027374267578
patch: if ( ref != null ) {
rank: 974
score: 98.53673444475446
patch: if ( ! depends ) {
rank: 974
score: 98.38067626953125
patch: for ( Var s -- ;
rank: 974
score: 98.20752970377605
patch: Annotation def = true ;
rank: 974
score: 98.12784830729167
patch: Definition state = true ;
rank: 974
score: 97.9328125
patch: Var s : }
rank: 975
score: 98.34619140625
patch: for ( Var < ) {
rank: 975
score: 98.19002685546874
patch: if ( false )
rank: 975
score: 98.1274922688802
patch: synchronized ( s ) {
rank: 975
score: 97.89745483398437
patch: Var s ) {
rank: 976
score: 98.34503173828125
patch: for ( Var >= ) {
rank: 976
score: 98.2810791015625
patch: for ( else {
rank: 976
score: 98.16576538085937
patch: if ( state )
rank: 976
score: 97.87317504882813
patch: Iterator catch ) {
rank: 977
score: 98.69194030761719
patch: return ( def != null ) ;
rank: 977
score: 98.67151641845703
patch: for ( int s = null {
rank: 977
score: 98.34385463169643
patch: if ( s != def )
rank: 977
score: 98.10610961914062
patch: for ( / *
rank: 977
score: 97.85277099609375
patch: for ( ) ;
rank: 978
score: 98.66651916503906
patch: if ( def != null { {
rank: 978
score: 98.54721069335938
patch: for ( int s = 0 {
rank: 978
score: 98.47038922991071
patch: return s . depends ) ;
rank: 978
score: 98.34079996744792
patch: if ( def != {
rank: 978
score: 98.25343831380208
patch: for ( Object ) {
rank: 978
score: 98.1144307454427
patch: Definition def = 0 ;
rank: 978
score: 98.05052490234375
patch: if ( depends )
rank: 978
score: 97.806103515625
patch: } Var s :
rank: 979
score: 98.65034484863281
patch: Var [ ] def = null ;
rank: 979
score: 98.4561767578125
patch: if ( def instanceof Var )
rank: 979
score: 98.2569071451823
patch: for ( for ) {
rank: 979
score: 98.2294209798177
patch: for ( Var s >=
rank: 979
score: 98.0335693359375
patch: } return false ;
rank: 979
score: 97.79503173828125
patch: String s : {
rank: 980
score: 98.51004464285714
patch: for ( Node < Var )
rank: 980
score: 98.42789132254464
patch: for ( Node depends ) {
rank: 980
score: 98.28490193684895
patch: Var s = def )
rank: 980
score: 98.10038248697917
patch: Definition def = def ;
rank: 980
score: 98.02615966796876
patch: } } ) ;
rank: 980
score: 97.78985595703125
patch: { Var s :
rank: 981
score: 98.64422607421875
patch: if ( depends != null ) {
rank: 981
score: 98.39215959821429
patch: return def . depends ) {
rank: 981
score: 98.38509114583333
patch: for ( int ) {
rank: 981
score: 98.22861735026042
patch: if ( def == )
rank: 981
score: 98.17191569010417
patch: for ( Var s {
rank: 981
score: 98.16151936848958
patch: for ( Var s else
rank: 981
score: 97.99265747070312
patch: if ( s )
rank: 981
score: 97.78323974609376
patch: boolean s ) {
rank: 982
score: 98.62124633789062
patch: def = def . depends ) {
rank: 982
score: 98.14620971679688
patch: for ( Var s <
rank: 982
score: 97.96756591796876
patch: if ( return )
rank: 982
score: 97.782763671875
patch: Var ( ) {
rank: 983
score: 98.1276611328125
patch: if ( def !=
rank: 983
score: 98.12485758463542
patch: for ( Var s >
rank: 983
score: 97.95892333984375
patch: Definition def ++ ;
rank: 984
score: 98.60358537946429
patch: if ( def == state )
rank: 984
score: 98.15651448567708
patch: for ( Var < )
rank: 984
score: 98.10223388671875
patch: for ( Var [
rank: 984
score: 97.94224243164062
patch: for ( Var )
rank: 984
score: 97.88201904296875
patch: for ( String s
rank: 984
score: 97.76043090820312
patch: int s ) {
rank: 985
score: 98.56981404622395
patch: Var s = null {
rank: 985
score: 98.1258036295573
patch: for ( Var >= )
rank: 985
score: 98.06697998046874
patch: for ( Var {
rank: 985
score: 97.93482666015625
patch: int depends ) {
rank: 985
score: 97.87023315429687
patch: for ( Var $NUMBER$
rank: 985
score: 97.75706787109375
patch: boolean depends ) {
rank: 986
score: 98.25680541992188
patch: return def != null ;
rank: 986
score: 98.181884765625
patch: return def != null {
rank: 986
score: 97.93287353515625
patch: for ( Node (
rank: 986
score: 97.83662109375
patch: synchronized ( ) {
rank: 986
score: 97.74056396484374
patch: String s ) {
rank: 987
score: 98.51985386439732
patch: if ( s != ) {
rank: 987
score: 98.17160034179688
patch: / * * /
rank: 987
score: 98.11036173502605
patch: for ( Var s )
rank: 987
score: 97.9806884765625
patch: if ( s ;
rank: 987
score: 97.90947875976562
patch: } return true ;
rank: 987
score: 97.75347900390625
patch: for ( Var 1
rank: 987
score: 97.73198852539062
patch: if ( ) ;
rank: 988
score: 98.10770670572917
patch: for ( int ) ;
rank: 988
score: 97.98978881835937
patch: Definition def = )
rank: 988
score: 97.9665283203125
patch: if ( def ;
rank: 988
score: 97.90634765625
patch: if ( state ;
rank: 988
score: 97.71547241210938
patch: while ( ) {
rank: 989
score: 97.9419189453125
patch: if ( state !=
rank: 989
score: 97.75277099609374
patch: if ( ( (
rank: 989
score: 97.70881958007813
patch: Var s -- {
rank: 990
score: 98.42496163504464
patch: Var s = depends ) ;
rank: 990
score: 98.11952718098958
patch: return def == def ;
rank: 990
score: 98.08643595377605
patch: while ( def ) {
rank: 990
score: 97.91282348632812
patch: if ( def ==
rank: 990
score: 97.86268310546875
patch: final Var depends :
rank: 990
score: 97.73816528320313
patch: for ( else else
rank: 990
score: 97.67528686523437
patch: repaint ( ) ;
rank: 991
score: 97.86410522460938
patch: Definition def = {
rank: 991
score: 97.65157470703124
patch: while ( ) ;
rank: 992
score: 98.06259155273438
patch: match ( def ) ;
rank: 992
score: 98.0469462076823
patch: if ( def == {
rank: 992
score: 97.852685546875
patch: return depends ) ;
rank: 992
score: 97.81904907226563
patch: for ( try {
rank: 992
score: 97.62562255859375
patch: else { ) ;
rank: 993
score: 97.97911376953125
patch: if ( def {
rank: 993
score: 97.82740478515625
patch: if ( if )
rank: 993
score: 97.80343017578124
patch: for ( Var }
rank: 993
score: 97.6246826171875
patch: boolean depends ) ;
rank: 993
score: 97.27821350097656
patch: if ( def
rank: 994
score: 98.2244364420573
patch: for ( if ) {
rank: 994
score: 97.93453369140624
patch: for ( int )
rank: 994
score: 97.8037109375
patch: } return null ;
rank: 994
score: 97.80108032226562
patch: for ( int *
rank: 994
score: 97.79443969726563
patch: String depends ) {
rank: 994
score: 97.69856567382813
patch: for ( int }
rank: 994
score: 97.6215576171875
patch: for null ) {
rank: 994
score: 97.23406982421875
patch: return def ;
rank: 995
score: 98.19978841145833
patch: Var s = ) ;
rank: 995
score: 98.03273518880208
patch: if ( ! ) {
rank: 995
score: 97.80855102539063
patch: while ( def )
rank: 995
score: 97.78862915039062
patch: Var depends ) {
rank: 995
score: 97.787158203125
patch: for ( Var ,
rank: 995
score: 97.62119750976562
patch: clear ( ) ;
rank: 995
score: 97.41384887695312
patch: if ( {
rank: 995
score: 96.927490234375
patch: for (
rank: 996
score: 97.76527099609375
patch: if ( state ==
rank: 996
score: 97.62017211914062
patch: Var depends : {
rank: 996
score: 96.72941080729167
patch: / *
rank: 996
score: 96.69272867838542
patch: try {
rank: 996
score: 96.2071533203125
patch: System .
rank: 997
score: 97.72815551757813
patch: for ( ? *
rank: 997
score: 97.71414184570312
patch: / * * {
rank: 997
score: 97.26515197753906
patch: } else {
rank: 997
score: 97.13445281982422
patch: for ( else
rank: 997
score: 96.52171834309895
patch: if (
rank: 998
score: 97.60016479492188
patch: private Var s :
rank: 998
score: 97.06719970703125
patch: Definition def ;
rank: 998
score: 96.3311055501302
patch: / /
rank: 999
score: 97.65277099609375
patch: Var s = {
rank: 999
score: 97.61744995117188
patch: for ( int {
rank: 999
score: 97.27012634277344
patch: String s :
rank: 999
score: 97.17707824707031
patch: for ( {
rank: 999
score: 96.62252807617188
patch: else {
rank: 999
score: 95.64042154947917
patch: break ;
rank: 999
score: 95.3584976196289
patch: }
rank: 1000
score: 97.6050048828125
patch: revalidate ( ) ;
rank: 1000
score: 97.13383483886719
patch: Var depends :
rank: 1000
score: 95.00801849365234
patch: final
rank: 1000
score: 94.57060241699219
patch: else
rank: 1000
score: 93.89424133300781
patch: /
