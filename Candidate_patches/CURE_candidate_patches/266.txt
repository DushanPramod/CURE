rank: 1
score: 99.82529168379934
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 1
score: 99.80854235197368
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 1
score: 99.80645197088069
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 1
score: 99.73935953776042
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 1
score: 99.59886977251838
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 2
score: 99.81063988095238
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 2
score: 99.71736653645833
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 2
score: 99.69104721966912
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 2
score: 99.65030343191964
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 2
score: 99.61383928571429
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 2
score: 99.53435202205883
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 3
score: 99.74255952380952
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 3
score: 99.67104867788461
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 3
score: 99.6476162997159
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 3
score: 99.60438889723558
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 4
score: 99.66120062934027
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 4
score: 99.64423828125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 4
score: 99.59340413411458
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 4
score: 99.56336030505952
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 4
score: 99.54305594308036
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 4
score: 99.47115325927734
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 5
score: 99.62903771033653
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 5
score: 99.58374786376953
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 5
score: 99.52627563476562
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 6
score: 99.5556640625
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 6
score: 99.54183523995536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 6
score: 99.54108743106617
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 7
score: 99.63740466889881
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 7
score: 99.60886637369792
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 7
score: 99.60640869140624
patch: new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 7
score: 99.55081612723214
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 7
score: 99.55009321732955
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 7
score: 99.50011189778645
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 7
score: 99.38543701171875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 8
score: 99.6196521577381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 8
score: 99.5821044921875
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 8
score: 99.53794642857143
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 8
score: 99.53691549862133
patch: throw Math CaMeL Runtime CaMeL Exception ( p . get CaMeL Message ( ) ) ;
rank: 8
score: 99.52395395132211
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 8
score: 99.36354693244485
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 9
score: 99.61907087053571
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ;
rank: 9
score: 99.5968246459961
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 9
score: 99.57778448807566
patch: throw Illegal CaMeL Argument CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 9
score: 99.53265380859375
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 9
score: 99.50600298713235
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 9
score: 99.4713134765625
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 9
score: 99.3599494485294
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 10
score: 99.57682582310268
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ; }
rank: 10
score: 99.57107704564145
patch: throw Illegal CaMeL Argument CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 10
score: 99.51933070591518
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 10
score: 99.5153076171875
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 10
score: 99.50491153492646
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 10
score: 99.4753887469952
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 10
score: 99.47059983473558
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 11
score: 99.5576236122533
patch: throw Math CaMeL Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 11
score: 99.5197002704327
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 11
score: 99.50611461292614
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; }
rank: 11
score: 99.47425672743056
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 11
score: 99.31944986979167
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 12
score: 99.55062866210938
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 12
score: 99.51686604817708
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 12
score: 99.31731818704044
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 13
score: 99.59605189732143
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 ) ;
rank: 13
score: 99.51669747488839
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ; }
rank: 13
score: 99.49078369140625
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 13
score: 99.48456131784539
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 13
score: 99.46187337239583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 13
score: 99.44666399274554
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 14
score: 99.58954148065476
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ;
rank: 14
score: 99.54735717773437
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 14
score: 99.51234944661458
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 14
score: 99.50894869290866
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } }
rank: 14
score: 99.48286743164063
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 14
score: 99.43636067708333
patch: throw new Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 14
score: 99.31497012867646
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 15
score: 99.48091052827381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 15
score: 99.47698419744319
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 15
score: 99.45632755055146
patch: throw Math CaMeL Runtime CaMeL Exception ( this . get CaMeL Message ( ) ) ;
rank: 15
score: 99.43144989013672
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 16
score: 99.57185668945313
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ;
rank: 16
score: 99.49628448486328
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( p ) ) ;
rank: 16
score: 99.48999837239583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; }
rank: 16
score: 99.4876220703125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 16
score: 99.47488839285714
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name , p ) ;
rank: 16
score: 99.46568080357143
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + p ) ;
rank: 16
score: 99.44314778645834
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 16
score: 99.42275390625
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 16
score: 99.30290004185268
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p ) ;
rank: 17
score: 99.5348233309659
patch: throw Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 17
score: 99.48457845052083
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Exception ( $STRING$ ) ;
rank: 17
score: 99.48426818847656
patch: throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 17
score: 99.4417365579044
patch: throw Math CaMeL Utils . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 17
score: 99.29064002403847
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 18
score: 99.5615466889881
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 18
score: 99.53274536132812
patch: new Poisson CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 18
score: 99.48980353860294
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ;
rank: 18
score: 99.48131385216347
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 18
score: 99.47649069393383
patch: throw Math . Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 18
score: 99.46455522017045
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 18
score: 99.46253967285156
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 18
score: 99.44008501838235
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 18
score: 99.40015411376953
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + p ) ;
rank: 18
score: 99.28818646599265
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 19
score: 99.53243215460526
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 19
score: 99.48451861213235
patch: throw Math CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 19
score: 99.47578648158482
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 19
score: 99.38167898995536
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 19
score: 99.28539276123047
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 20
score: 99.53145559210526
patch: throw Math CaMeL Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 20
score: 99.46912493024554
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p ) ; }
rank: 20
score: 99.44551355698529
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 20
score: 99.44285278320312
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 21
score: 99.5289306640625
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 21
score: 99.47589874267578
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( p ) ) ;
rank: 21
score: 99.46106635199652
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + Math . sqrt ( p ) ) ;
rank: 21
score: 99.37517547607422
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 21
score: 99.28150353064903
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 22
score: 99.52458639705883
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 22
score: 99.45993041992188
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 22
score: 99.45779239430146
patch: throw Math CaMeL Runtime CaMeL Exception ( p . to CaMeL String ( ) ) ;
rank: 22
score: 99.44192940848214
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + p ) ;
rank: 22
score: 99.4295654296875
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 23
score: 99.53050595238095
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;
rank: 23
score: 99.5101254111842
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 ) ;
rank: 23
score: 99.45699055989583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p ) ;
rank: 23
score: 99.45301729090073
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 23
score: 99.43293108258929
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( System . err ) ;
rank: 23
score: 99.4283447265625
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . to CaMeL String ( p ) ) ;
rank: 23
score: 99.42804718017578
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + p ) ;
rank: 23
score: 99.37033315805289
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = p ;
rank: 23
score: 99.26568603515625
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( ) ;
rank: 24
score: 99.52790178571429
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 ) ;
rank: 24
score: 99.50736694335937
patch: throw throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 24
score: 99.45661477481617
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 24
score: 99.456494140625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p ) ;
rank: 24
score: 99.43990071614583
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 24
score: 99.4277576264881
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 24
score: 99.4275146484375
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( ) ) ;
rank: 24
score: 99.42386300223214
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ ) ;
rank: 25
score: 99.52763671875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 25
score: 99.505859375
patch: Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 25
score: 99.45453752790179
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 25
score: 99.4365234375
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 25
score: 99.42244096235795
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception 1 ( $STRING$ , p ) ;
rank: 25
score: 99.42194366455078
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 25
score: 99.3653335571289
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + p ) ;
rank: 25
score: 99.26234537760416
patch: throw ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 26
score: 99.52698335193452
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( null , p ) ;
rank: 26
score: 99.45429338727679
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ; }
rank: 26
score: 99.4244155883789
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( $STRING$ ) ;
rank: 26
score: 99.42201926491477
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( double ) p ) ;
rank: 26
score: 99.3626708984375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , p ) ;
rank: 27
score: 99.4509765625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p ) ;
rank: 27
score: 99.43942260742188
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p ) ; }
rank: 27
score: 99.43528837316177
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . abs ( p ) ) ;
rank: 27
score: 99.42218017578125
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 27
score: 99.42099144345238
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name , $STRING$ ) ;
rank: 27
score: 99.40603841145834
patch: throw Math . max ( 0 . 0 , 0 . 0 ) ;
rank: 27
score: 99.36176300048828
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 28
score: 99.44524739583333
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p ) ;
rank: 28
score: 99.43430739182692
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 28
score: 99.420654296875
patch: throw Math . sqrt ( $STRING$ ) ;
rank: 28
score: 99.42033305921052
patch: return new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 28
score: 99.3609848022461
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] = p ;
rank: 28
score: 99.2583740234375
patch: throw p . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 29
score: 99.52320620888158
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 29
score: 99.4358139038086
patch: mean = p ; normal = Fast CaMeL Math . sqrt ( p ) ;
rank: 29
score: 99.42030552455357
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( System . out ) ;
rank: 29
score: 99.39771225873162
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 29
score: 99.25115966796875
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , p ) ;
rank: 30
score: 99.52139442845395
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( null ) ;
rank: 30
score: 99.49870219983552
patch: throw Poisson CaMeL Distribution CaMeL Impl . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 30
score: 99.43546919389205
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 30
score: 99.43115234375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( 0 , p ) ) ;
rank: 30
score: 99.43011944110577
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 30
score: 99.41790161132812
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception 1 ( p ) ;
rank: 30
score: 99.40974934895833
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Runtime ( ) ) ;
rank: 30
score: 99.39627779447116
patch: throw Math . max ( 0 . 0 , p ) ;
rank: 30
score: 99.35939534505208
patch: throw new Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 30
score: 99.25058419363839
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 31
score: 99.42752278645834
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; }
rank: 31
score: 99.41688842773438
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception String ( $STRING$ ) ;
rank: 31
score: 99.40974934895833
patch: return Math . sqrt ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 31
score: 99.38719267003677
patch: throw Math . max ( 0 . 0 , p + 1 . 0 ) ;
rank: 31
score: 99.35806710379464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 32
score: 99.50733584449405
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ) ;
rank: 32
score: 99.49451968544408
patch: throw Math . Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 32
score: 99.4263427734375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 32
score: 99.4151547080592
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 32
score: 99.4097038717831
patch: throw Math CaMeL Runtime CaMeL Exception ( null . to CaMeL String ( ) ) ;
rank: 32
score: 99.35640775240384
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $STRING$ ) ;
rank: 33
score: 99.49876767113095
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , name ) ;
rank: 33
score: 99.49371337890625
patch: throw throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 33
score: 99.424560546875
patch: throw ( Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 33
score: 99.37625885009766
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + $STRING$ ) ;
rank: 33
score: 99.21414947509766
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 34
score: 99.42359161376953
patch: throw new Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 34
score: 99.41627720424107
patch: throw Math CaMeL Exception ( Math . abs ( p ) ) ;
rank: 34
score: 99.40724092371323
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 34
score: 99.34921264648438
patch: throw new Runtime CaMeL Exception ( this . get CaMeL Message ( ) ) ;
rank: 35
score: 99.49365234375
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 35
score: 99.49359421502976
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( String . class ) ;
rank: 35
score: 99.42283799913194
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( $STRING$ ) ) ;
rank: 35
score: 99.41130719866071
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 35
score: 99.40442612591912
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new String ( $STRING$ ) ) ;
rank: 35
score: 99.36849975585938
patch: throw new Null CaMeL Pointer CaMeL Exception ( p ) ;
rank: 35
score: 99.21134185791016
patch: throw new Runtime CaMeL Exception ( p . get CaMeL Message ( ) ) ;
rank: 36
score: 99.49338250411184
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;
rank: 36
score: 99.49288940429688
patch: throw Math CaMeL Runtime CaMeL Exception ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 36
score: 99.42266845703125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ;
rank: 36
score: 99.41664475661058
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , null ) ;
rank: 36
score: 99.40589192708333
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ ) ) ;
rank: 36
score: 99.40279134114583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . value CaMeL Of ( p ) ) ;
rank: 36
score: 99.3673095703125
patch: throw Math . max ( p , 1 . 0 ) ;
rank: 36
score: 99.34722900390625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ , p ) ;
rank: 37
score: 99.49296061197917
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p .
rank: 37
score: 99.49273071289062
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 37
score: 99.41901991102431
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 37
score: 99.41586538461539
patch: throw Math CaMeL Runtime CaMeL Exception ( null , $STRING$ ) ;
rank: 37
score: 99.402783203125
patch: throw ( Math CaMeL Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 37
score: 99.40273030598958
patch: throw Math . abs ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 38
score: 99.4188591452206
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Cause ( ) ) ;
rank: 38
score: 99.40235053168402
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( $STRING$ , p ) ;
rank: 38
score: 99.36669921875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 38
score: 99.3438720703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 39
score: 99.48828125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this , p ) ;
rank: 39
score: 99.40994027944711
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } }
rank: 39
score: 99.40205652573529
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Runtime ( ) ) ;
rank: 39
score: 99.40140206473214
patch: throw ( Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 39
score: 99.364501953125
patch: throw Math . min ( p , 1 . 0 ) ;
rank: 39
score: 99.33582414899554
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 39
score: 99.205126953125
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 40
score: 99.48808361235119
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , false ) ;
rank: 40
score: 99.41802978515625
patch: new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 40
score: 99.40948486328125
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p ) ; }
rank: 40
score: 99.39985961914063
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception String ( p ) ;
rank: 40
score: 99.36370380108173
patch: throw Math . max ( 0 . $NUMBER$ , p ) ;
rank: 41
score: 99.48856201171876
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 41
score: 99.48790922619048
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ;
rank: 41
score: 99.4168701171875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Integer ( p ) ) ;
rank: 41
score: 99.40885162353516
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Exception ( $STRING$ ) ; }
rank: 41
score: 99.39972795758929
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , 0 ) ;
rank: 41
score: 99.39647759331598
patch: throw Math . sqrt ( $STRING$ + Fast CaMeL Math . sqrt ( p ) ) ;
rank: 41
score: 99.3927490234375
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 41
score: 99.32704380580357
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + p ) ;
rank: 42
score: 99.48705444335937
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ;
rank: 42
score: 99.4869449013158
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , max CaMeL Iterations ) ;
rank: 42
score: 99.40845540364583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( $STRING$ ) ) ;
rank: 42
score: 99.3979724702381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; break ;
rank: 42
score: 99.39554172092014
patch: if ( p <= 0 ) { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 42
score: 99.3565902709961
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ + p ) ;
rank: 43
score: 99.4864013671875
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + ) ;
rank: 43
score: 99.48511420355902
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 43
score: 99.40829264322916
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Cause ( ) ) ;
rank: 43
score: 99.4043212890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ; }
rank: 43
score: 99.39772727272727
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( Integer ) p ) ;
rank: 43
score: 99.39209662543402
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , max CaMeL Iterations ) ;
rank: 43
score: 99.35189615885416
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 44
score: 99.484033203125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ p ) ;
rank: 44
score: 99.40273030598958
patch: throw Math CaMeL Runtime CaMeL Exception ( p ) ; }
rank: 44
score: 99.39603881835937
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception 1 ( $STRING$ ) ;
rank: 44
score: 99.36762551700367
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ ) , p ) ;
rank: 44
score: 99.35096650965073
patch: throw Math . Runtime CaMeL Exception ( p + $STRING$ + p + $STRING$ ) ;
rank: 44
score: 99.31908416748047
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 44
score: 99.18954702524039
patch: throw throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 45
score: 99.48359760485198
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( false ) ;
rank: 45
score: 99.47982933407738
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 45
score: 99.39591841264205
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; }
rank: 45
score: 99.36653958834134
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 45
score: 99.34871673583984
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Class ( ) ) ;
rank: 45
score: 99.31566273082386
patch: throw Math . value CaMeL Of ( p ) ;
rank: 46
score: 99.48312217310855
patch: throw Math . Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 46
score: 99.4766512784091
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 46
score: 99.40411376953125
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . to CaMeL String ( p ) ) ;
rank: 46
score: 99.40211486816406
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 46
score: 99.39414672851562
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( p ) ;
rank: 46
score: 99.36532827524039
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 46
score: 99.315185546875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . length ( ) ) ;
rank: 46
score: 99.18862915039062
patch: throw new Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 47
score: 99.47513253348214
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , start ) ;
rank: 47
score: 99.404052734375
patch: throw Math CaMeL Runtime CaMeL Exception ( p . get CaMeL Class ( ) ) ;
rank: 47
score: 99.40166015625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ; } }
rank: 47
score: 99.39263361150569
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( $STRING$ , p ) ;
rank: 47
score: 99.38465881347656
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( p ) ;
rank: 47
score: 99.36275906032986
patch: throw Math CaMeL Exception ( $STRING$ ) ;
rank: 47
score: 99.31190490722656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . 0 , p ) ;
rank: 48
score: 99.47984554893092
patch: Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 48
score: 99.4744873046875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 48
score: 99.39247349330357
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ , p ) ;
rank: 48
score: 99.38465881347656
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( $STRING$ ) ) ;
rank: 48
score: 99.33995056152344
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ + p ) ;
rank: 48
score: 99.3111328125
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 , p ) ;
rank: 48
score: 99.18584442138672
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 49
score: 99.47462768554688
patch: Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 49
score: 99.47364443824405
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , value ) ;
rank: 49
score: 99.39401681082589
patch: throw Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 49
score: 99.3836669921875
patch: throw Math . mean ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 49
score: 99.35840561810662
patch: throw Math CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class , $STRING$ ) ;
rank: 49
score: 99.33980066636029
patch: throw Math . min ( 0 . 0 , p + 1 . 0 ) ;
rank: 49
score: 99.30959647042411
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;
rank: 49
score: 99.18583540482955
patch: throw Math . max ( p , p ) ;
rank: 50
score: 99.47285730698529
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 50
score: 99.39998372395833
patch: throw Math . min ( 0 , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 50
score: 99.39304896763393
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , null ) ; }
rank: 50
score: 99.39210911800987
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 50
score: 99.38292778862848
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( $STRING$ + p ) ;
rank: 50
score: 99.35820456112133
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ , p ) ) ;
rank: 50
score: 99.33448079427083
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( p + $STRING$ ) ;
rank: 50
score: 99.30790492466518
patch: throw new Runtime CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 50
score: 99.1807861328125
patch: throw ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 51
score: 99.47269287109376
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 51
score: 99.47002210115132
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , p , max CaMeL Iterations ) ;
rank: 51
score: 99.39158935546875
patch: throw ( Math CaMeL Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 51
score: 99.33443777901786
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , p ) ;
rank: 51
score: 99.3074951171875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 51
score: 99.17869567871094
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ;
rank: 52
score: 99.39809163411458
patch: throw new Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 52
score: 99.39028785342262
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 , p ) ;
rank: 52
score: 99.38628278459821
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ; }
rank: 52
score: 99.38133409288194
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( $STRING$ , p ) ) ;
rank: 52
score: 99.35395050048828
patch: throw Math CaMeL Exception ( Math . abs ( p ) + $STRING$ ) ;
rank: 52
score: 99.30572509765625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + p + $STRING$ ) ;
rank: 53
score: 99.47233501233552
patch: throw Math CaMeL Runtime CaMeL Exception , create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 53
score: 99.46812037417763
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( double ) ;
rank: 53
score: 99.3978630514706
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new String ( $STRING$ ) ) ;
rank: 53
score: 99.38917125355114
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ; }
rank: 53
score: 99.3861835186298
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p ) ;
rank: 53
score: 99.30296979631696
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . 0 ) ;
rank: 53
score: 99.17677307128906
patch: throw new Math CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 54
score: 99.46531982421875
patch: Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 54
score: 99.39762878417969
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new int [ ] { p
rank: 54
score: 99.38876488095238
patch: throw ( Illegal CaMeL Argument CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 54
score: 99.384521484375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , $STRING$ ) ; }
rank: 54
score: 99.35246007582721
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 54
score: 99.33173370361328
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ , p ) ;
rank: 54
score: 99.29852294921875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . 0 , p ) ;
rank: 54
score: 99.17396545410156
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 55
score: 99.46997680664063
patch: throw Math Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 55
score: 99.4651611328125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( , p ) ;
rank: 55
score: 99.38824172247024
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( max CaMeL Iterations ) ;
rank: 55
score: 99.38253784179688
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + $STRING$ ) ; }
rank: 55
score: 99.37359619140625
patch: throw Math CaMeL Runtime CaMeL Exception ( String . to CaMeL String ( p ) ) ;
rank: 55
score: 99.3514045266544
patch: throw Math CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 55
score: 99.33061218261719
patch: throw new Null CaMeL Pointer CaMeL Exception ( get CaMeL Class ( ) ) ;
rank: 55
score: 99.2954852764423
patch: throw Math . min ( 0 . 0 , p ) ;
rank: 55
score: 99.17096710205078
patch: throw new Runtime CaMeL Exception ( p . to CaMeL String ( ) ) ;
rank: 56
score: 99.46951729910714
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , true ) ;
rank: 56
score: 99.46445599724265
patch: throw new Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 56
score: 99.3974609375
patch: throw Math . substring ( 0 , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 56
score: 99.38824172247024
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p <= 0 ) ;
rank: 56
score: 99.33020958533653
patch: throw Math . min ( 0 . $NUMBER$ , p ) ;
rank: 56
score: 99.1701416015625
patch: throw Math CaMeL Runtime CaMeL Exception . Math CaMeL Exception ( $STRING$ ) ;
rank: 57
score: 99.46931966145833
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 57
score: 99.46274928042763
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 57
score: 99.37014770507812
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Exception ( $STRING$ ) ) ;
rank: 57
score: 99.3432846069336
patch: throw Math CaMeL Exception ( Runtime . get CaMeL Message ( $STRING$ ) ) ;
rank: 57
score: 99.3284912109375
patch: throw Math . max ( 1 . 0 , p + 1 . 0 ) ;
rank: 57
score: 99.16875813802083
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 58
score: 99.46772693452381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ) ;
rank: 58
score: 99.46145290798611
patch: Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 58
score: 99.38686988467262
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , epsilon ) ;
rank: 58
score: 99.37765066964286
patch: throw Math CaMeL Runtime CaMeL Exception ( null , $STRING$ ) ; }
rank: 58
score: 99.36745876736111
patch: throw Math . max ( $STRING$ , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 58
score: 99.34137321920956
patch: throw Math CaMeL Runtime CaMeL Exception ( . get CaMeL Message ( $STRING$ ) ) ;
rank: 58
score: 99.3282958984375
patch: throw Math . max ( 0 . 0 , 1 . 0 ) ;
rank: 58
score: 99.28649088541667
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + ) ;
rank: 59
score: 99.461181640625
patch: throw ( Math CaMeL Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 59
score: 99.38646351207386
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ; }
rank: 59
score: 99.3671013327206
patch: mean = p ; normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 59
score: 99.34032389322917
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 59
score: 99.32759312220982
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + $STRING$ ) ;
rank: 59
score: 99.28601946149554
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . 0 ) ;
rank: 59
score: 99.16727701822917
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 60
score: 99.46098247327302
patch: throw Math . Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 60
score: 99.39404975043402
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p , p ) ) ;
rank: 60
score: 99.3862368935033
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 60
score: 99.37638346354167
patch: throw Math . sqrt ( Math . sqrt ( p ) ) ; }
rank: 60
score: 99.36675666360294
patch: Math . sqrt ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 60
score: 99.16613006591797
patch: throw Math CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 61
score: 99.46134868421052
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( err ) ;
rank: 61
score: 99.46031494140625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 61
score: 99.39342498779297
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new int [ ] { p
rank: 61
score: 99.38567560369319
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception String ( $STRING$ , p ) ;
rank: 61
score: 99.37320382254464
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p ) ; }
rank: 61
score: 99.36615349264706
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Localized CaMeL Message ( ) ) ;
rank: 61
score: 99.33799115349265
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;
rank: 61
score: 99.32676696777344
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 61
score: 99.27909088134766
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Integer ( p ) ) ;
rank: 61
score: 99.16580403645834
patch: throw Math . create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 62
score: 99.46133277529762
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this , $STRING$ ) ;
rank: 62
score: 99.45826480263158
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 62
score: 99.39226935891544
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p + $STRING$ ) ;
rank: 62
score: 99.37291717529297
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( $STRING$ ) ) ; }
rank: 62
score: 99.36423746744792
patch: throw Math CaMeL Runtime CaMeL Exception ( Long . to CaMeL String ( p ) ) ;
rank: 62
score: 99.33695714613971
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL IO CaMeL Exception ( $STRING$ ) ;
rank: 62
score: 99.32662963867188
patch: throw new Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( $STRING$ ) ;
rank: 62
score: 99.27830403645834
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $STRING$ + p ) ;
rank: 63
score: 99.45947875976563
patch: throw ( Runtime CaMeL Exception ) Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 63
score: 99.38540504092262
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 , $STRING$ ) ;
rank: 63
score: 99.37290954589844
patch: return Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 63
score: 99.36244710286458
patch: throw Math CaMeL Runtime CaMeL Exception ( Boolean . to CaMeL String ( p ) ) ;
rank: 63
score: 99.32659553079044
patch: throw Math . max ( 0 . $NUMBER$ , p + 1 . 0 ) ;
rank: 63
score: 99.27740478515625
patch: throw new Runtime CaMeL Exception ( p + $STRING$ ) ;
rank: 63
score: 99.16288757324219
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 64
score: 99.45748098273026
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( true ) ;
rank: 64
score: 99.39013671875
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( p , $STRING$ ) ) ;
rank: 64
score: 99.38477725074405
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ , p ) ;
rank: 64
score: 99.37288665771484
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 64
score: 99.33129164751838
patch: throw Math CaMeL Exception ( new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ) ;
rank: 64
score: 99.27588907877605
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 64
score: 99.15888671875
patch: throw Math CaMeL Runtime CaMeL Exception . Math CaMeL Exception ( p ) ;
rank: 65
score: 99.45591905381944
patch: throw Illegal CaMeL Argument CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 65
score: 99.38450985863095
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( true , p ) ;
rank: 65
score: 99.32725614659927
patch: throw Math CaMeL Runtime CaMeL Exception ( new Internal CaMeL Error ( $STRING$ ) ) ;
rank: 65
score: 99.32611846923828
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 . 0 ) ;
rank: 65
score: 99.27583530970982
patch: throw new Runtime CaMeL Exception ( 0 . 0 , p ) ;
rank: 66
score: 99.45665893554687
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 66
score: 99.4533447265625
patch: throw Math CaMeL Runtime CaMeL Exception ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 66
score: 99.38869222005208
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ;
rank: 66
score: 99.38432384672619
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( null , $STRING$ ) ;
rank: 66
score: 99.36978149414062
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p ) ; }
rank: 66
score: 99.36034478081598
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Message ( ) ) ;
rank: 66
score: 99.3258415670956
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 66
score: 99.32455623851104
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + p ) ;
rank: 66
score: 99.27447509765625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + p ) ;
rank: 66
score: 99.15775299072266
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 67
score: 99.4532699584961
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . sqrt ( p ) ) ;
rank: 67
score: 99.45298414963942
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 67
score: 99.3886359719669
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new String ( p ) ) ;
rank: 67
score: 99.38297526041667
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Message ( p ) ) ;
rank: 67
score: 99.36892465444711
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , this ) ;
rank: 67
score: 99.324951171875
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . floor ( p ) ) ;
rank: 67
score: 99.32329963235294
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $STRING$ + p + $STRING$ ) ;
rank: 67
score: 99.27401733398438
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 68
score: 99.45281982421875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 68
score: 99.45151238692434
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 68
score: 99.38043212890625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 68
score: 99.36698913574219
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( String ) p ) ;
rank: 68
score: 99.2724380493164
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + p ) ;
rank: 68
score: 99.15221296037946
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 69
score: 99.38630506727431
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . format ( p , p ) ) ;
rank: 69
score: 99.37976684570313
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( $STRING$ ) ;
rank: 69
score: 99.35940890842014
patch: throw Math . sqrt ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 69
score: 99.32051086425781
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ ) ;
rank: 69
score: 99.27002716064453
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name + $STRING$ + p ) ;
rank: 70
score: 99.44929809570313
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 70
score: 99.44551809210526
patch: Poisson CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 70
score: 99.37882856889205
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( format ( p ) ) ;
rank: 70
score: 99.35795323988971
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Runtime ( ) , p ) ;
rank: 70
score: 99.3201434795673
patch: throw Math . Runtime CaMeL Exception ( p + $STRING$ ) ;
rank: 70
score: 99.2697982788086
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , 0 ) ;
rank: 70
score: 99.14808654785156
patch: throw ( ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 71
score: 99.4446044921875
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , ) ;
rank: 71
score: 99.38507439108456
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Class ( ) ) ;
rank: 71
score: 99.37865048363095
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 71
score: 99.36284993489583
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 71
score: 99.35652429917279
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Name ( ) ) ;
rank: 71
score: 99.32242257254464
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 71
score: 99.3198974609375
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 71
score: 99.26962716238839
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ + p ) ;
rank: 71
score: 99.14566802978516
patch: throw new ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 72
score: 99.442431640625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ;
rank: 72
score: 99.44003475413604
patch: throw Poisson CaMeL Distribution . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 72
score: 99.360791015625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ; }
rank: 72
score: 99.32025505514706
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ;
rank: 72
score: 99.31700846354167
patch: throw Math . min ( 0 . 0 , 0 . 0 ) ;
rank: 72
score: 99.26784261067708
patch: throw new Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 73
score: 99.44060315583882
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 73
score: 99.4394287109375
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 73
score: 99.37808082217262
patch: return Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 73
score: 99.35267857142857
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ; }
rank: 73
score: 99.2654800415039
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ + p ) ;
rank: 74
score: 99.43807180304276
patch: throw ( Math CaMeL Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 74
score: 99.38180202907986
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ( Math . sqrt ( p ) ) ;
rank: 74
score: 99.35320281982422
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( $STRING$ ) ) ;
rank: 74
score: 99.3191276999081
patch: throw Math . Runtime CaMeL Exception ( . get CaMeL Message ( $STRING$ ) ) ;
rank: 74
score: 99.31476189108456
patch: throw Math . max ( p + 1 . 0 , 0 . 0 ) ;
rank: 74
score: 99.1394287109375
patch: throw p . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 75
score: 99.43500077097039
patch: throw Math . Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 75
score: 99.37506975446429
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 75
score: 99.35223795572917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . trim ( ) ) ;
rank: 75
score: 99.349560546875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ; } }
rank: 75
score: 99.31897786458333
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( ) ) ;
rank: 75
score: 99.26283569335938
patch: throw new Runtime CaMeL Exception ( p ) ;
rank: 76
score: 99.43821207682292
patch: throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 76
score: 99.43358018663194
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( Math . sqrt ( p ) ) ;
rank: 76
score: 99.35222981770833
patch: throw Math . sqrt ( $STRING$ . to CaMeL String ( ) ) ;
rank: 76
score: 99.34912109375
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 76
score: 99.3182014016544
patch: throw Math CaMeL Runtime CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 76
score: 99.31287560096153
patch: throw Math . min ( p , 0 . 0 ) ;
rank: 77
score: 99.43496704101562
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 77
score: 99.43243729440789
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 77
score: 99.37910970052083
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( p ) ) ;
rank: 77
score: 99.34686279296875
patch: throw Math . Runtime CaMeL Exception ( p ) ; }
rank: 77
score: 99.31775620404412
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 77
score: 99.311083984375
patch: throw Math . max ( p + 1 . 0 , p ) ;
rank: 77
score: 99.2552734375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , ) ;
rank: 77
score: 99.13511439732143
patch: throw new Illegal CaMeL State CaMeL Exception ( p + $STRING$ ) ;
rank: 78
score: 99.43392944335938
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ;
rank: 78
score: 99.43239232113487
patch: throw ( Math CaMeL Runtime CaMeL Exception ) new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 78
score: 99.37803021599265
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new Integer ( p ) ) ;
rank: 78
score: 99.36960671164773
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ; }
rank: 78
score: 99.34480794270833
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Localized CaMeL Message ( $STRING$ ) ) ;
rank: 78
score: 99.34268624441964
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , this ) ; }
rank: 78
score: 99.3162109375
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 78
score: 99.3105827780331
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( get CaMeL Class ( ) ) ;
rank: 78
score: 99.25489807128906
patch: throw new Exception ( $STRING$ ) ;
rank: 78
score: 99.13432965959821
patch: throw Math CaMeL Runtime CaMeL Exception . Math CaMeL Exception ( ) ;
rank: 79
score: 99.431884765625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 79
score: 99.37626817491319
patch: throw Math . substring ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 79
score: 99.34434000651042
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . Math . sqrt ( p ) ) ;
rank: 79
score: 99.31580307904412
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Class ( ) , $STRING$ ) ;
rank: 79
score: 99.30892508370536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ) ;
rank: 80
score: 99.42949829101562
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 80
score: 99.36825706845238
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ - p ) ;
rank: 80
score: 99.34333801269531
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . format ( $STRING$ ) ) ;
rank: 80
score: 99.34121704101562
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p ) ; }
rank: 80
score: 99.30839987362133
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( p + $STRING$ + p ) ;
rank: 81
score: 99.42941766036184
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 ) ;
rank: 81
score: 99.3751708984375
patch: throw ( Runtime CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 81
score: 99.36823064630681
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( float ) p ) ;
rank: 81
score: 99.34131537543402
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( 0 , 0 ) ) ;
rank: 81
score: 99.33913010817308
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 81
score: 99.25313023158482
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ;
rank: 81
score: 99.13201434795673
patch: throw Math . max ( p , 0 . 0 ) ;
rank: 82
score: 99.42912153764205
patch: throw Math . Runtime CaMeL Exception ( p ) ;
rank: 82
score: 99.42697625411184
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 82
score: 99.37448459201389
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . max ( $STRING$ , p ) ;
rank: 82
score: 99.3681408110119
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; } }
rank: 82
score: 99.3388671875
patch: throw Math CaMeL Runtime CaMeL Exception ( p , $STRING$ ) ;
rank: 82
score: 99.3150634765625
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 , $STRING$ ) ;
rank: 82
score: 99.25289916992188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 . 0 ) ;
rank: 83
score: 99.42894568810097
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 83
score: 99.37346055772569
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . max ( 0 , p ) ) ;
rank: 83
score: 99.36732700892857
patch: throw ( Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 83
score: 99.33977864583333
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Class ( ) ) ;
rank: 83
score: 99.338623046875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , p ) ;
rank: 83
score: 99.3136455829327
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 83
score: 99.25257219587054
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 84
score: 99.3732177734375
patch: throw Math CaMeL Runtime CaMeL Exception ( to CaMeL String ( ) ) ;
rank: 84
score: 99.3127800436581
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 84
score: 99.30709838867188
patch: throw new Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( p ) ;
rank: 84
score: 99.25216238839286
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ) ;
rank: 85
score: 99.37309434678819
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 85
score: 99.33877328725961
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 ) ;
rank: 85
score: 99.33799743652344
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; } }
rank: 85
score: 99.31101361443015
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( int ) p + $STRING$ ) ;
rank: 85
score: 99.30708582261029
patch: throw Math . min ( 0 . $NUMBER$ , p + 1 . 0 ) ;
rank: 85
score: 99.25199381510417
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = 0 . 0 ;
rank: 85
score: 99.128515625
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 86
score: 99.42810776654412
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 86
score: 99.36409505208333
patch: throw ( Illegal CaMeL Argument CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 86
score: 99.31089680989584
patch: throw new Runtime CaMeL Exception ( Math . abs ( p ) ) ;
rank: 86
score: 99.30705915178571
patch: throw ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 86
score: 99.12675337357955
patch: throw Math . abs ( p , p ) ;
rank: 87
score: 99.427978515625
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . Math . sqrt ( p ) ) ;
rank: 87
score: 99.42182006835938
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p . to CaMeL String ( ) ) ;
rank: 87
score: 99.36993049172794
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , to CaMeL String ( ) ) ;
rank: 87
score: 99.33772786458333
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ( Math . sqrt ( $STRING$ ) ) ;
rank: 87
score: 99.30727251838235
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ , p ) ;
rank: 88
score: 99.427197265625
patch: p = new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 88
score: 99.36946105957031
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . abs ( p ) ;
rank: 88
score: 99.36288291529605
patch: return Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 88
score: 99.33726591222427
patch: throw Math . Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 88
score: 99.33074079241071
patch: throw Math CaMeL Runtime CaMeL Exception ( p , p ) ; }
rank: 88
score: 99.30682373046875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + this ) ;
rank: 88
score: 99.30657958984375
patch: throw Math CaMeL Exception ( Math . abs ( p ) , $STRING$ ) ;
rank: 88
score: 99.24456787109375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 89
score: 99.42521587171052
patch: throw ( Math CaMeL Runtime CaMeL Exception ) new Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 89
score: 99.42121967516448
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 89
score: 99.3275146484375
patch: Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 89
score: 99.3060546875
patch: throw Math . max ( 0 . $NUMBER$ , 0 . 0 ) ;
rank: 89
score: 99.30558013916016
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( $NUMBER$ ) ) ;
rank: 89
score: 99.24177551269531
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + p + p ) ;
rank: 89
score: 99.12253243582589
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 ) ;
rank: 90
score: 99.419140625
patch: throw Math CaMeL Runtime CaMeL Exception Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 90
score: 99.36618221507354
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p + $STRING$ ) ;
rank: 90
score: 99.33433430989584
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Exception ( ) ) ;
rank: 90
score: 99.32652994791667
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 90
score: 99.24162292480469
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p + p ) ;
rank: 91
score: 99.42308631310097
patch: throw Math CaMeL Runtime CaMeL Exception ( this . $STRING$ ) ;
rank: 91
score: 99.36162775213069
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 91
score: 99.33317735460069
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( String ) 0 . 0 ) ;
rank: 91
score: 99.3258056640625
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 91
score: 99.24079895019531
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 91
score: 99.12200520833333
patch: throw throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p ) ;
rank: 92
score: 99.42307535807292
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ .
rank: 92
score: 99.41243896484374
patch: throw Math Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 92
score: 99.36066545758929
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; break ;
rank: 92
score: 99.3328857421875
patch: throw Math CaMeL Runtime CaMeL Exception ( null , Math . sqrt ( p ) ) ;
rank: 92
score: 99.3253402709961
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p , p ) ; }
rank: 92
score: 99.30480143229167
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 92
score: 99.30455780029297
patch: throw Math . max ( 0 . 0 , - 1 . 0 ) ;
rank: 92
score: 99.23944091796875
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] = 0 ;
rank: 92
score: 99.11931610107422
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ , $STRING$ ) ;
rank: 93
score: 99.42274234169408
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( new ) ;
rank: 93
score: 99.36210123697917
patch: throw Math . max ( 0 , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 93
score: 99.35947963169643
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( format , p ) ;
rank: 93
score: 99.32364908854167
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p , p ) ;
rank: 93
score: 99.30458068847656
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 93
score: 99.30408477783203
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . 0 , $STRING$ ) ;
rank: 93
score: 99.2392578125
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + $STRING$ + p ) ;
rank: 93
score: 99.11788236177884
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 94
score: 99.40902099609374
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class , p ) ;
rank: 94
score: 99.35890706380208
patch: throw ( Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 94
score: 99.3235614483173
patch: throw Math CaMeL Runtime CaMeL Exception ( p , p ) ;
rank: 94
score: 99.30416666666666
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ;
rank: 94
score: 99.2384033203125
patch: throw Math CaMeL Runtime CaMeL Exception ( String . class , p ) ;
rank: 94
score: 99.11634318033855
patch: throw Math . print CaMeL Stack CaMeL Trace ( ) ;
rank: 95
score: 99.4224917763158
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( value ) ;
rank: 95
score: 99.36040900735294
patch: throw Math CaMeL Runtime CaMeL Exception ( p . get CaMeL Exception ( ) ) ;
rank: 95
score: 99.3587287454044
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 95
score: 99.30410766601562
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( 1 ) ) ;
rank: 95
score: 99.30230353860294
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( int ) p ) ;
rank: 95
score: 99.1155776977539
patch: throw Math . abs ( Math . max ( p , p ) ) ;
rank: 96
score: 99.42180432771382
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 96
score: 99.35983455882354
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;
rank: 96
score: 99.35855538504464
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 96
score: 99.3297119140625
patch: throw ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 96
score: 99.30361106178977
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 96
score: 99.30142647879464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ;
rank: 96
score: 99.23762730189732
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name + $STRING$ ) ;
rank: 96
score: 99.11555698939732
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 97
score: 99.35947552849265
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p . to CaMeL String ( ) ;
rank: 97
score: 99.3579165810033
patch: return Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 97
score: 99.32811063878677
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Name ( ) , $STRING$ ) ;
rank: 97
score: 99.3227294921875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ; }
rank: 97
score: 99.30331600413604
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ;
rank: 97
score: 99.30109001608456
patch: throw Math . max ( 0 . 0 , new Integer ( p ) ) ;
rank: 97
score: 99.11412760416667
patch: throw Math . round ( p . to CaMeL String ( ) ) ;
rank: 98
score: 99.42168830422794
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , p , epsilon ) ;
rank: 98
score: 99.3272705078125
patch: { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 98
score: 99.32122802734375
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; }
rank: 98
score: 99.30260512408088
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + new Integer ( p ) ) ;
rank: 98
score: 99.30012730189732
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 98
score: 99.23606770833334
patch: throw Math CaMeL Runtime CaMeL Exception . value CaMeL Of ( p ) ;
rank: 98
score: 99.1131122295673
patch: throw Math . max ( 1 . 0 , p ) ;
rank: 99
score: 99.41830783420139
patch: throw Poisson CaMeL Distribution ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 99
score: 99.39935913085938
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ;
rank: 99
score: 99.35745675223214
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( false , p ) ;
rank: 99
score: 99.32691192626953
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( String ) 0 ) ;
rank: 99
score: 99.3210205078125
patch: return Math . sqrt ( p ) ; }
rank: 99
score: 99.30247497558594
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( 0 ) ) ;
rank: 99
score: 99.2358642578125
patch: throw Math CaMeL Runtime CaMeL Exception ( 1 . 0 , p ) ;
rank: 99
score: 99.11234828404018
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 100
score: 99.41804809570313
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ; } }
rank: 100
score: 99.399072265625
patch: throw ( Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 100
score: 99.35824924045139
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . substring ( 0 , p ) ;
rank: 100
score: 99.3571544828869
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + mean ) ;
rank: 100
score: 99.31858723958334
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( null ) ;
rank: 100
score: 99.29816032858456
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new Throwable ( ) ) ;
rank: 100
score: 99.23546600341797
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + 1 ) ;
rank: 100
score: 99.11109270368304
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 101
score: 99.41790301983173
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . $STRING$ ) ;
rank: 101
score: 99.39853244357639
patch: throw Math Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 101
score: 99.35763729319854
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ( p + $STRING$ ) ) ;
rank: 101
score: 99.32513427734375
patch: throw Math . min ( $STRING$ , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 101
score: 99.318115234375
patch: throw Math CaMeL Runtime CaMeL Exception ( p , $STRING$ ) ; }
rank: 101
score: 99.29811006433823
patch: throw new Exception ( Math . max ( 0 . 0 , p ) ) ;
rank: 101
score: 99.23492838541667
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $STRING$ , p ) ;
rank: 101
score: 99.11073521205357
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 102
score: 99.41670532226563
patch: throw ( Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 102
score: 99.35743126502403
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + null ) ;
rank: 102
score: 99.3170166015625
patch: throw Math . sqrt ( p ) ; }
rank: 102
score: 99.29993393841912
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + get CaMeL Class ( ) ) ;
rank: 102
score: 99.29745662913604
patch: throw Math . max ( 0 . $NUMBER$ , new Integer ( p ) ) ;
rank: 102
score: 99.23479755108173
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ;
rank: 102
score: 99.10931396484375
patch: throw ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 103
score: 99.41539588341347
patch: throw Math CaMeL Runtime CaMeL Exception ( p . $STRING$ ) ;
rank: 103
score: 99.35721842447917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . parse CaMeL Int ( p ) ) ;
rank: 103
score: 99.35621279761905
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( Throwable . p ) ;
rank: 103
score: 99.31669921875
patch: return Math . sqrt ( Math . sqrt ( p ) ) ; }
rank: 103
score: 99.29991912841797
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 103
score: 99.23426164899554
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;
rank: 103
score: 99.10878092447916
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Exception ( $STRING$ ) ;
rank: 104
score: 99.41455078125
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 104
score: 99.39212646484376
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 104
score: 99.35675726996527
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , Integer . sqrt ( p ) ) ;
rank: 104
score: 99.32238091362848
patch: throw Math CaMeL Runtime CaMeL Exception ( String . to CaMeL String ( $STRING$ ) ) ;
rank: 104
score: 99.31522042410714
patch: return Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 104
score: 99.23320007324219
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $NUMBER$ ) ;
rank: 104
score: 99.10758754185268
patch: throw new Illegal CaMeL State CaMeL Exception ( p , $STRING$ ) ;
rank: 105
score: 99.41282252261513
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( epsilon ) ;
rank: 105
score: 99.39137669613487
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 105
score: 99.35639504825367
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 105
score: 99.3539151278409
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , , p ) ;
rank: 105
score: 99.3145039876302
patch: throw Math CaMeL Runtime CaMeL Exception ( null ) ; }
rank: 105
score: 99.29013671875
patch: throw Math . max ( 1 . 0 , 0 . 0 ) ;
rank: 105
score: 99.23296247209821
patch: throw new Runtime CaMeL Exception ( p + $STRING$ + p ) ;
rank: 105
score: 99.10738118489583
patch: throw Math . max ( p , 0 . 0 , p ) ;
rank: 106
score: 99.41260986328125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( + p ) ;
rank: 106
score: 99.38999430338542
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 106
score: 99.35355050223214
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( true , $STRING$ ) ;
rank: 106
score: 99.32047213040866
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 ) ;
rank: 106
score: 99.31375826322116
patch: Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 106
score: 99.29607077205883
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , new Integer ( p ) ) ;
rank: 106
score: 99.29009246826172
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + 1 ) ;
rank: 106
score: 99.23270416259766
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ . 0 ) ;
rank: 106
score: 99.10731608072916
patch: throw null . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 107
score: 99.41168619791667
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( p ) ;
rank: 107
score: 99.38677014802632
patch: throw new Runtime CaMeL Exception ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 107
score: 99.35273881392045
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 107
score: 99.31344401041666
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , null ) ;
rank: 107
score: 99.29578354779412
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 ) ;
rank: 107
score: 99.23247528076172
patch: throw Math CaMeL Runtime CaMeL Exception = new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 107
score: 99.10720389229911
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 108
score: 99.41155646829044
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , p ) ;
rank: 108
score: 99.35338677300348
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . min ( 0 , p ) ;
rank: 108
score: 99.35188802083333
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( false , $STRING$ ) ;
rank: 108
score: 99.32020399305556
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . format ( $STRING$ , p ) ) ;
rank: 108
score: 99.31219482421875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } ) ;
rank: 108
score: 99.23213958740234
patch: throw Math CaMeL Runtime CaMeL Exception = this . to CaMeL String ( ) ;
rank: 108
score: 99.10633951822916
patch: throw Math . max ( p , 1 . 0 , p ) ;
rank: 109
score: 99.3848812705592
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 109
score: 99.35295553768383
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Long ( p ) ) ;
rank: 109
score: 99.35038618607955
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( Integer ) $STRING$ ) ;
rank: 109
score: 99.32000373391544
patch: throw Math CaMeL Runtime CaMeL Exception ( p . get CaMeL Runtime ( ) ) ;
rank: 109
score: 99.29533835018383
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 109
score: 99.23152923583984
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + 0 ) ;
rank: 109
score: 99.10612349076705
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 110
score: 99.40755615234374
patch: normal = Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 110
score: 99.3526611328125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p . $STRING$ ) ;
rank: 110
score: 99.35017903645833
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ - $STRING$ ) ;
rank: 110
score: 99.29309800091912
patch: throw new Math CaMeL Runtime CaMeL Exception ( Math . abs ( p ) ) ;
rank: 110
score: 99.28520202636719
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ + $STRING$ ) ;
rank: 110
score: 99.1059814453125
patch: throw super . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 111
score: 99.40705951891448
patch: throw Poisson CaMeL Distribution CaMeL Impl . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 111
score: 99.383837890625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; ;
rank: 111
score: 99.3501309481534
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 111
score: 99.31095377604167
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 111
score: 99.29270306755515
patch: throw Math CaMeL Exception ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 111
score: 99.28444536994485
patch: throw Math . max ( p + 1 . 0 , $NUMBER$ . 0 ) ;
rank: 111
score: 99.23062133789062
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name + $STRING$ , p ) ;
rank: 111
score: 99.10430145263672
patch: throw Math . append ( Math . max ( p , p ) ) ;
rank: 112
score: 99.40525189568015
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 112
score: 99.38296169704861
patch: throw Math CaMeL Runtime CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 112
score: 99.35009002685547
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 ( $STRING$ ) ) ;
rank: 112
score: 99.31770833333333
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( p , p ) ;
rank: 112
score: 99.31075286865234
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( null ) ; }
rank: 112
score: 99.29241584329044
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Class ( ) , $STRING$ ) ;
rank: 112
score: 99.28257841222427
patch: throw Math . max ( 0 . 0 , Integer . MAX _ VALUE ) ;
rank: 112
score: 99.10422585227273
patch: throw Math . max ( 0 , p ) ;
rank: 113
score: 99.35002790178571
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ , p ) ;
rank: 113
score: 99.3478116122159
patch: result = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 113
score: 99.31734525240384
patch: throw Math CaMeL Runtime CaMeL Exception ( System . $STRING$ ) ;
rank: 113
score: 99.30947043678977
patch: throw Math CaMeL Runtime CaMeL Exception ( null ) ;
rank: 113
score: 99.29225376674107
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 113
score: 99.22824331430289
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ;
rank: 113
score: 99.1039047241211
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p , p ) ;
rank: 114
score: 99.38025841346153
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 114
score: 99.34993250229779
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new String ( p ) ) ;
rank: 114
score: 99.34773763020833
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 114
score: 99.31578826904297
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . 0 ( $STRING$ ) ;
rank: 114
score: 99.29192756204044
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ( p + 1 ) ) ;
rank: 114
score: 99.28124186197917
patch: throw Math . Runtime CaMeL Exception ( p + $STRING$ + p ) ;
rank: 114
score: 99.22798919677734
patch: throw Math CaMeL Runtime CaMeL Exception [ $NUMBER$ ] [ 0 ] = p ;
rank: 114
score: 99.10295867919922
patch: throw ( ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 115
score: 99.37777549342105
patch: throw Math CaMeL Runtime CaMeL Exception , create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 115
score: 99.34966362847223
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( 0 , epsilon ) ) ;
rank: 115
score: 99.34700150923295
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( String ) p ) ;
rank: 115
score: 99.30859375
patch: throw Math . Runtime CaMeL Exception ( null , $STRING$ ) ;
rank: 115
score: 99.29182434082031
patch: throw Math CaMeL Exception ( Math . to CaMeL String ( p ) ) ;
rank: 115
score: 99.28101303998162
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;
rank: 115
score: 99.22394268329327
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = $STRING$ ;
rank: 116
score: 99.40391138980263
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 116
score: 99.37729363692434
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( exp ) ;
rank: 116
score: 99.3489990234375
patch: throw Math CaMeL Runtime CaMeL Exception ( p . get CaMeL Name ( ) ) ;
rank: 116
score: 99.34631928943452
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , mean ) ;
rank: 116
score: 99.30824973366477
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ; }
rank: 116
score: 99.22336989182692
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + ) ;
rank: 116
score: 99.10216522216797
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , 1 ) ;
rank: 117
score: 99.40227864583333
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 117
score: 99.34855143229167
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . min ( 0 , p ) ) ;
rank: 117
score: 99.34614490327381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ * p ) ;
rank: 117
score: 99.31528049045139
patch: throw Math = Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 117
score: 99.30802408854167
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 117
score: 99.28929946001838
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 ) ;
rank: 117
score: 99.28019445082721
patch: throw new Error ( Math . max ( 0 . 0 , p ) ) ;
rank: 118
score: 99.40089518229166
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 118
score: 99.34612482244319
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 118
score: 99.28900146484375
patch: throw Math CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 118
score: 99.27915852864584
patch: throw Math . min ( p + 1 . 0 , p ) ;
rank: 118
score: 99.2231216430664
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . 0 + p ) ;
rank: 118
score: 99.10137067522321
patch: throw p . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 119
score: 99.37611694335938
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p . to CaMeL String ( ) ) ;
rank: 119
score: 99.3478271484375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p . $STRING$ ) ;
rank: 119
score: 99.34516834077381
patch: super . Poisson CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 119
score: 99.31108940972223
patch: if ( p == 0 ) { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 119
score: 99.30741882324219
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } mean = 0 ;
rank: 119
score: 99.28713809742646
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 119
score: 99.27693939208984
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p - 1 ) ;
rank: 119
score: 99.2224629720052
patch: throw new Runtime CaMeL Exception ( p , $STRING$ ) ;
rank: 119
score: 99.10065307617188
patch: throw new Math CaMeL Exception ( $STRING$ ) ;
rank: 120
score: 99.40017700195312
patch: normal = new Poisson CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 120
score: 99.37575169613487
patch: throw Math CaMeL Utils . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 120
score: 99.34412202380952
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . epsilon ) ;
rank: 120
score: 99.28564453125
patch: throw Math CaMeL Exception ( Math . abs ( 1 . 0 ) ) ;
rank: 120
score: 99.22226388113839
patch: throw new Runtime CaMeL Exception ( 1 . 0 , p ) ;
rank: 120
score: 99.09986877441406
patch: throw new Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 121
score: 99.40007934570312
patch: throw Math CaMeL Runtime CaMeL Exception ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 121
score: 99.37498779296875
patch: throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 121
score: 99.34629821777344
patch: throw Math . equals ( Math . sqrt ( p ) , p ) ;
rank: 121
score: 99.30347493489583
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p ) ; } }
rank: 121
score: 99.28518676757812
patch: throw Math CaMeL Exception ( Math . abs ( p ) , p ) ;
rank: 121
score: 99.27560604319854
patch: throw Math . min ( p + 1 . 0 , 0 . 0 ) ;
rank: 121
score: 99.22169596354166
patch: throw Math CaMeL Runtime CaMeL Exception ( p + p + $STRING$ ) ;
rank: 121
score: 99.09967447916667
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + p ) ;
rank: 122
score: 99.39960327148438
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( 0 . 0 , p ) ) ;
rank: 122
score: 99.37430612664474
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception , $STRING$ ) ;
rank: 122
score: 99.31038172104779
patch: throw Math CaMeL Runtime CaMeL Exception ( String . to CaMeL String ( ) ) ;
rank: 122
score: 99.30252779447116
patch: mean = p ; normal = p ; normal = epsilon ;
rank: 122
score: 99.28513470818015
patch: throw Math CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class , p ) ;
rank: 122
score: 99.27478745404412
patch: throw Math . max ( p + 1 . 0 , 1 . 0 ) ;
rank: 122
score: 99.09962463378906
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , $NUMBER$ ) ;
rank: 123
score: 99.39948473478618
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 123
score: 99.37355346679688
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ ;
rank: 123
score: 99.34509995404412
patch: throw Math CaMeL Runtime CaMeL Exception ( p . get CaMeL Cause ( ) ) ;
rank: 123
score: 99.34156383167614
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( double ) epsilon ) ;
rank: 123
score: 99.310205078125
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Name ( ) ) ;
rank: 123
score: 99.30211639404297
patch: mean = 0 ; normal = Fast CaMeL Math . sqrt ( p ) ;
rank: 123
score: 99.28317440257354
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . random ( ) , $STRING$ ) ;
rank: 123
score: 99.22126007080078
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . 0 + p ) ;
rank: 123
score: 99.09712357954545
patch: throw throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 124
score: 99.34505886501736
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . min ( $STRING$ , p ) ;
rank: 124
score: 99.33998616536458
patch: throw ( Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 124
score: 99.30967712402344
patch: throw Math = Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 124
score: 99.30187225341797
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; }
rank: 124
score: 99.22122955322266
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . trim ( ) ) ;
rank: 124
score: 99.09424591064453
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 125
score: 99.39919026692708
patch: throw Math CaMeL Runtime CaMeL Exception ( p , Math . sqrt ( p ) ) ;
rank: 125
score: 99.34398696001838
patch: new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , max CaMeL Iterations ) ;
rank: 125
score: 99.33966619318181
patch: attribute = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 125
score: 99.30184733072916
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 125
score: 99.27419864430146
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( double ) p ) ;
rank: 125
score: 99.22002766927083
patch: throw Math CaMeL Runtime CaMeL Exception ( new Integer ( p ) ) ;
rank: 125
score: 99.09278106689453
patch: throw Math . round ( Math . max ( p , p ) ) ;
rank: 126
score: 99.39692518446181
patch: throw Math CaMeL Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 126
score: 99.3702456825658
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 126
score: 99.33946644176136
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 126
score: 99.30870056152344
patch: throw Math . sqrt ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 126
score: 99.30120849609375
patch: throw new Runtime CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 126
score: 99.28190104166667
patch: throw Math CaMeL Runtime CaMeL Exception . init CaMeL Cause ( $STRING$ ) ;
rank: 126
score: 99.27375344669117
patch: throw Math . ) ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 126
score: 99.09247295673077
patch: throw Math . abs ( p , 0 . 0 ) ;
rank: 127
score: 99.39597778320312
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 127
score: 99.34159342447917
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . max ( 0 , p ) ;
rank: 127
score: 99.33924449573864
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; case 0 :
rank: 127
score: 99.30863444010417
patch: { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 127
score: 99.29957580566406
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } normal = p ;
rank: 127
score: 99.28165435791016
patch: throw Math CaMeL Exception ( Math . format ( $STRING$ , p ) ) ;
rank: 128
score: 99.36917724609376
patch: throw Math Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 128
score: 99.33842329545455
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( String ) $STRING$ ) ;
rank: 128
score: 99.30846449908088
patch: throw Math CaMeL Runtime CaMeL Exception ( double . to CaMeL String ( ) ) ;
rank: 128
score: 99.28125762939453
patch: throw Math . Runtime CaMeL Exception ( Math . floor ( p ) ) ;
rank: 128
score: 99.27250402113971
patch: throw Math . Runtime CaMeL Exception ( p . to CaMeL String ( ) ) ;
rank: 128
score: 99.08992513020833
patch: throw Math . create CaMeL Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 129
score: 99.39241108141448
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 129
score: 99.3690249794408
patch: throw Math CaMeL Runtime CaMeL Exception throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 129
score: 99.3381115141369
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p - $STRING$ ) ;
rank: 129
score: 99.27986653645833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 ) ;
rank: 129
score: 99.08977801983173
patch: throw Math . print CaMeL Stack CaMeL Trace ( $STRING$ ) ;
rank: 130
score: 99.39235229492188
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p $NUMBER$ ) ;
rank: 130
score: 99.34048122829861
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . to CaMeL String ( p ) ;
rank: 130
score: 99.3377685546875
patch: throw Math CaMeL Runtime CaMeL Exception . to CaMeL String ( p ) ;
rank: 130
score: 99.30442504882812
patch: throw Math CaMeL Runtime CaMeL Exception ( ) ;
rank: 130
score: 99.29529825846355
patch: mean = Fast CaMeL Math . sqrt ( p ) ;
rank: 130
score: 99.27200520833334
patch: throw new Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( ) ;
rank: 130
score: 99.21810913085938
patch: throw Math CaMeL Runtime CaMeL Exception = value . to CaMeL String ( ) ;
rank: 130
score: 99.08854675292969
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 . 0 ) ;
rank: 131
score: 99.39136962890625
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( Math . sqrt ( p ) ) ;
rank: 131
score: 99.33755154079861
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Message ( ) ) ;
rank: 131
score: 99.29525756835938
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , null ) ; }
rank: 131
score: 99.2177734375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + p ) ;
rank: 131
score: 99.0873291015625
patch: throw Math . exit ( $STRING$ . to CaMeL String ( ) ) ;
rank: 132
score: 99.3908935546875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , Math . sqrt ( p ) ) ;
rank: 132
score: 99.33804660373264
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , p , max CaMeL Iterations ) ;
rank: 132
score: 99.30146340762867
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + get CaMeL Message ( ) ) ;
rank: 132
score: 99.2952392578125
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 132
score: 99.26905822753906
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ , $STRING$ ) ;
rank: 132
score: 99.21723284040179
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ ) ;
rank: 132
score: 99.08673095703125
patch: throw Math . normal ( Math . max ( p , p ) ) ;
rank: 133
score: 99.3900146484375
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , p , epsilon ) ;
rank: 133
score: 99.36532931857639
patch: throw Math CaMeL Runtime CaMeL Exception = new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 133
score: 99.33725807883523
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 133
score: 99.29933076746323
patch: throw Math CaMeL Runtime CaMeL Exception ( this . to CaMeL String ( ) ) ;
rank: 133
score: 99.29473407451923
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 133
score: 99.27722981770833
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 133
score: 99.26871984145221
patch: throw Math . max ( 0 . 0 , p - 1 . 0 ) ;
rank: 133
score: 99.21560232979911
patch: throw new Runtime CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 133
score: 99.08660888671875
patch: throw new ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 134
score: 99.38927504595588
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Integer . sqrt ( p ) ) ;
rank: 134
score: 99.36503295898437
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) + p ;
rank: 134
score: 99.33709161931819
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ $NUMBER$ , p ) ;
rank: 134
score: 99.29861014229911
patch: throw Math . ( $STRING$ . to CaMeL String ( ) ) ;
rank: 134
score: 99.27607996323529
patch: throw new Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 134
score: 99.08612823486328
patch: throw p . get CaMeL Runtime ( ) . get CaMeL Exception ( ) ;
rank: 135
score: 99.38870399876645
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 , p ) ;
rank: 135
score: 99.36328843060662
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , p ) ;
rank: 135
score: 99.33705832741477
patch: ret = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 135
score: 99.33688534007354
patch: throw ( Runtime CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 135
score: 99.2973299893466
patch: throw Math . sqrt ( $STRING$ , p ) ;
rank: 135
score: 99.29379272460938
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 135
score: 99.27595789292279
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ( p + $STRING$ ) ) ;
rank: 135
score: 99.2144305889423
patch: throw Math CaMeL Runtime CaMeL Exception ( p + p ) ;
rank: 135
score: 99.08580729166667
patch: throw super . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 136
score: 99.36191277754934
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p . to CaMeL String ( ) ) ;
rank: 136
score: 99.29378255208333
patch: throw Math . sqrt ( p ) ;
rank: 136
score: 99.27589925130208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;
rank: 136
score: 99.08558067908653
patch: throw create CaMeL Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 137
score: 99.36170654296875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class , $STRING$ ) ;
rank: 137
score: 99.33470569957386
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } break ;
rank: 137
score: 99.29609375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 . 0 ) ;
rank: 137
score: 99.29349517822266
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p , $STRING$ ) ; }
rank: 137
score: 99.27577837775735
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( err ) ;
rank: 137
score: 99.21273040771484
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + 0 . 0 ) ;
rank: 137
score: 99.08423961292614
patch: throw Math . min ( p , p ) ;
rank: 138
score: 99.3878173828125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( Integer . sqrt ( p ) ) ;
rank: 138
score: 99.36112253289474
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 138
score: 99.2934799194336
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( $STRING$ ) ) ;
rank: 138
score: 99.27450741038604
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ ) , $STRING$ ) ;
rank: 138
score: 99.26536560058594
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + $NUMBER$ ) ;
rank: 138
score: 99.08420973557692
patch: throw Math . max ( p , 0 . 1 ) ;
rank: 139
score: 99.33430619673295
patch: library = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 139
score: 99.2932637532552
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 139
score: 99.27435302734375
patch: throw Math CaMeL Exception ( . to CaMeL String ( ) ) ;
rank: 139
score: 99.26515197753906
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 139
score: 99.08385467529297
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + p , $STRING$ ) ;
rank: 140
score: 99.38776598478618
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . Math . sqrt ( p ) ) ;
rank: 140
score: 99.33535766601562
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ 0 ] , p ) ;
rank: 140
score: 99.33407738095238
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 . 0 ) ;
rank: 140
score: 99.29536946614583
patch: throw Math . sqrt ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 140
score: 99.29307556152344
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ; }
rank: 140
score: 99.27418870192308
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ p ) ;
rank: 140
score: 99.21228790283203
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , null ) ;
rank: 140
score: 99.0810546875
patch: throw throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , p ) ;
rank: 141
score: 99.38774956597223
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . Runtime CaMeL Exception ( p ) ) ;
rank: 141
score: 99.29524500229779
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p , $STRING$ ) ;
rank: 141
score: 99.27362060546875
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( 0 ) ) ;
rank: 141
score: 99.26377650669643
patch: throw new Exception ( p . to CaMeL String ( ) ) ;
rank: 141
score: 99.08096516927084
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 142
score: 99.38707275390625
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 142
score: 99.35794228001645
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( E ) ;
rank: 142
score: 99.33323838975694
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + Integer . sqrt ( p ) ) ;
rank: 142
score: 99.33266379616477
patch: re = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 142
score: 99.27171325683594
patch: throw Math CaMeL Exception ( . get CaMeL Message ( ) , $STRING$ ) ;
rank: 142
score: 99.26346588134766
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + this ) ;
rank: 142
score: 99.2120361328125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name , p ) ;
rank: 142
score: 99.08090645926339
patch: throw Math CaMeL Runtime CaMeL Exception = new Exception ( $STRING$ ) ;
rank: 143
score: 99.38680691189236
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this .
rank: 143
score: 99.35698385799633
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ , p ) ;
rank: 143
score: 99.33291965060764
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 143
score: 99.33036876860119
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , epsilon ) ;
rank: 143
score: 99.28711876502403
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , null ) ;
rank: 143
score: 99.2715594951923
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 143
score: 99.2116190592448
patch: throw new Math CaMeL Exception ( $STRING$ + p ) ;
rank: 144
score: 99.38634033203125
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 144
score: 99.35588635896382
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p . to CaMeL String ( ) ) ;
rank: 144
score: 99.32979125976563
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ $STRING$ ) ;
rank: 144
score: 99.2930549172794
patch: throw Math CaMeL Runtime CaMeL Exception ( String . Illegal CaMeL Argument CaMeL Exception ) ;
rank: 144
score: 99.28685709635417
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 144
score: 99.27154541015625
patch: throw Math CaMeL Exception ( Math . abs ( p ) + p ) ;
rank: 145
score: 99.38612767269737
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 145
score: 99.28656768798828
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( double ) p ) ;
rank: 145
score: 99.27103678385417
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( ) ) ;
rank: 145
score: 99.26177215576172
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . p ) ;
rank: 145
score: 99.21094689002403
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ + p ) ;
rank: 146
score: 99.38585747612848
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 146
score: 99.35404245476974
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . to CaMeL String ( ) ) ;
rank: 146
score: 99.33030870225694
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( 0 . 0 ) ) ;
rank: 146
score: 99.32603759765625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( - $STRING$ ) ;
rank: 146
score: 99.29261016845703
patch: return ( Normal CaMeL Distribution CaMeL Impl ) Math . sqrt ( p ) ;
rank: 146
score: 99.285888671875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , 0 ) ;
rank: 146
score: 99.2703348795573
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 146
score: 99.26139009915866
patch: throw Math . min ( p , $NUMBER$ . 0 ) ;
rank: 146
score: 99.07822963169643
patch: throw Math = new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 147
score: 99.35362548828125
patch: throw ( Runtime CaMeL Exception ) Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 147
score: 99.32989860983456
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p + $STRING$ ) ;
rank: 147
score: 99.3252185639881
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p - 0 ) ;
rank: 147
score: 99.28572591145833
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ; } }
rank: 147
score: 99.26101888020834
patch: throw Math . max ( 0 . 0 , $NUMBER$ . 0 ) ;
rank: 147
score: 99.20964050292969
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . $NUMBER$ , p ) ;
rank: 147
score: 99.07747395833333
patch: throw this . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 148
score: 99.35321044921875
patch: throw Illegal CaMeL Argument CaMeL Exception ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 148
score: 99.32933213975694
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Name ( ) ) ;
rank: 148
score: 99.32477213541667
patch: throw Math CaMeL Runtime CaMeL Exception . to CaMeL String ( $STRING$ ) ;
rank: 148
score: 99.28524780273438
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; } }
rank: 148
score: 99.26078033447266
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new String ( $STRING$ ) ) ;
rank: 148
score: 99.07698880709134
patch: throw Math . abs ( p , 1 . 0 ) ;
rank: 149
score: 99.38402035361842
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations , p ) ;
rank: 149
score: 99.35309159128289
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 149
score: 99.32916937934027
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p + $STRING$ ) ) ;
rank: 149
score: 99.32471865699405
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 , p ) ;
rank: 149
score: 99.28900505514706
patch: throw Math . Runtime CaMeL Exception ( p . get CaMeL Message ( ) ) ;
rank: 149
score: 99.28360421316964
patch: throw Math . Runtime CaMeL Exception ( null , $STRING$ ) ; }
rank: 149
score: 99.26832580566406
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( 1 ) ) ;
rank: 149
score: 99.20817565917969
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + $STRING$ , p ) ;
rank: 149
score: 99.0751953125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + ) ;
rank: 150
score: 99.38358561197917
patch: this ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 150
score: 99.3529541015625
patch: throw ( Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 150
score: 99.32464890252976
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( System . this ) ;
rank: 150
score: 99.25849609375
patch: throw Math . min ( 0 . 0 , 1 . 0 ) ;
rank: 150
score: 99.20755004882812
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ , p ) ;
rank: 150
score: 99.07389068603516
patch: throw Math CaMeL Runtime CaMeL Exception . . Math CaMeL Exception ( p ) ;
rank: 151
score: 99.38325769761029
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 , p ) ;
rank: 151
score: 99.32449776785714
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ | p ) ;
rank: 151
score: 99.28563690185547
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Message ( ) ) ;
rank: 151
score: 99.28321075439453
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , $STRING$ ) ; }
rank: 151
score: 99.2680435180664
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( $NUMBER$ ) ) ;
rank: 151
score: 99.07367815290179
patch: throw new Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 152
score: 99.35108706825658
patch: throw Math CaMeL Runtime CaMeL Exception ( new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ) ;
rank: 152
score: 99.32770453559027
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( p , p ) ) ;
rank: 152
score: 99.28279113769531
patch: mean = p ; epsilon = Fast CaMeL Math . sqrt ( p ) ;
rank: 152
score: 99.26686197916666
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 152
score: 99.20500183105469
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , p ) ;
rank: 152
score: 99.07356480189732
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 ) ;
rank: 153
score: 99.38210623604911
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . $STRING$ ) ;
rank: 153
score: 99.26540240119485
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 ) ;
rank: 153
score: 99.25403645833333
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 153
score: 99.2046127319336
patch: throw ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ) ;
rank: 154
score: 99.3819580078125
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , p ) ;
rank: 154
score: 99.34959106445312
patch: throw Math Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 154
score: 99.32614474826389
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 154
score: 99.28395708869485
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( ) , $STRING$ ) ;
rank: 154
score: 99.264892578125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 , p ) ;
rank: 154
score: 99.25300598144531
patch: throw ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ) ;
rank: 154
score: 99.20429992675781
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 154
score: 99.07279205322266
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ;
rank: 155
score: 99.34923031455592
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( , ) ;
rank: 155
score: 99.2830810546875
patch: throw Math . abs ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 155
score: 99.28238677978516
patch: throw Math CaMeL Runtime CaMeL Exception ( to CaMeL String ( ) ) ; }
rank: 155
score: 99.25217848557692
patch: throw Math . max ( p , $NUMBER$ . 0 ) ;
rank: 155
score: 99.20423126220703
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ p ] = p ;
rank: 156
score: 99.37794253700658
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 156
score: 99.32534610523896
patch: new Normal CaMeL Distribution CaMeL Impl ( p , p , max CaMeL Iterations ) ;
rank: 156
score: 99.3208240327381
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 156
score: 99.2822265625
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , null ) ; }
rank: 156
score: 99.26387532552083
patch: throw Math CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 156
score: 99.25176595052083
patch: throw Math . max ( p + 1 . $NUMBER$ , p ) ;
rank: 156
score: 99.20421491350446
patch: throw new Runtime CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 156
score: 99.07265403053977
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 157
score: 99.34765014648437
patch: throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 157
score: 99.32438829210069
patch: throw Math CaMeL Runtime CaMeL Exception ( this . get CaMeL Message ( $STRING$ ) ) ;
rank: 157
score: 99.3205333891369
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( String . $STRING$ ) ;
rank: 157
score: 99.2638690655048
patch: throw Math . Runtime CaMeL Exception ( p , $STRING$ ) ;
rank: 157
score: 99.25169372558594
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 . 0 , $STRING$ ) ;
rank: 158
score: 99.37607247488839
patch: this . p = Fast CaMeL Math . sqrt ( p ) ;
rank: 158
score: 99.32406795726104
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p , $STRING$ ) ;
rank: 158
score: 99.31909790039063
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( + $STRING$ ) ;
rank: 158
score: 99.28263346354167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . p ( ) ) ;
rank: 158
score: 99.27997233072917
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Message ( $STRING$ ) ;
rank: 158
score: 99.2628662109375
patch: throw Math CaMeL Runtime CaMeL Exception . init CaMeL Cause ( p ) ;
rank: 158
score: 99.07205200195312
patch: Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 159
score: 99.32352701822917
patch: throw Math . substring ( Fast CaMeL Math . sqrt ( p ) , p ) ;
rank: 159
score: 99.31896391369048
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ <= p ) ;
rank: 159
score: 99.28189522879464
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . ( ) ) ;
rank: 159
score: 99.248828125
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 159
score: 99.20335286458334
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . class , p ) ;
rank: 159
score: 99.07189127604167
patch: throw Math . max ( p , 0 . 1 , p ) ;
rank: 160
score: 99.32307434082031
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new long [ ] { p
rank: 160
score: 99.3180919828869
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . p ) ;
rank: 160
score: 99.28141784667969
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( String ) $STRING$ ) ;
rank: 160
score: 99.27965369591347
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 160
score: 99.2486328125
patch: throw Math . min ( 0 . $NUMBER$ , 0 . 0 ) ;
rank: 160
score: 99.2030029296875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ + p ) ;
rank: 161
score: 99.37386281866776
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + Math . sqrt ( p ) ) ;
rank: 161
score: 99.32223690257354
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p , p ) ;
rank: 161
score: 99.31780042146382
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( PI ) ;
rank: 161
score: 99.27931315104166
patch: throw Math CaMeL Runtime CaMeL Exception . substring ( $STRING$ , p ) ;
rank: 161
score: 99.25820743336396
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . random ( ) , p ) ;
rank: 161
score: 99.24812316894531
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + 0 ) ;
rank: 161
score: 99.06927490234375
patch: throw Math ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 162
score: 99.37330386513158
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , Math . sqrt ( p ) ) ;
rank: 162
score: 99.34127004523026
patch: throw Math CaMeL Runtime CaMeL Exception = create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 162
score: 99.3176502046131
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ == p ) ;
rank: 162
score: 99.2566146850586
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 162
score: 99.24710845947266
patch: throw throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 162
score: 99.20256042480469
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 . $NUMBER$ ) ;
rank: 162
score: 99.06896209716797
patch: throw new Runtime CaMeL Exception ( p . get CaMeL Class ( ) ) ;
rank: 163
score: 99.37311150045956
patch: normal = Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 163
score: 99.34077962239583
patch: throw throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 163
score: 99.27964872472427
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Integer ( 0 ) ) ;
rank: 163
score: 99.24649752103366
patch: throw Math . abs ( p + 1 . 0 ) ;
rank: 163
score: 99.0686368075284
patch: throw Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 164
score: 99.33890380859376
patch: throw ( Illegal CaMeL Argument CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 164
score: 99.32023111979167
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . to CaMeL String ( $STRING$ ) ;
rank: 164
score: 99.31694103422619
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name + $STRING$ ) ;
rank: 164
score: 99.27874755859375
patch: throw Math . max ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 164
score: 99.25562241498162
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . abs ( $NUMBER$ ) ) ;
rank: 164
score: 99.2459716796875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ ) ;
rank: 165
score: 99.3384033203125
patch: throw throw ( Illegal CaMeL Argument CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 165
score: 99.32005479600694
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . abs ( p , p ) ;
rank: 165
score: 99.31575520833333
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 , $STRING$ ) ;
rank: 165
score: 99.27866908482143
patch: throw Math . Runtime CaMeL Exception ( null , p ) ; }
rank: 165
score: 99.27698567708333
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 . 0 ) ;
rank: 165
score: 99.25540364583334
patch: throw Math CaMeL Runtime CaMeL Exception ( new Error ( $STRING$ ) ) ;
rank: 165
score: 99.20028483072916
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + , p ) ;
rank: 165
score: 99.06721714564732
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 166
score: 99.3382632606908
patch: throw Math CaMeL Runtime CaMeL Exception ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 166
score: 99.27843475341797
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } p = p ;
rank: 166
score: 99.27610868566177
patch: throw Math CaMeL Runtime CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 166
score: 99.24440002441406
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 166
score: 99.20020294189453
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 , p ) ;
rank: 166
score: 99.06655883789062
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception ) ;
rank: 167
score: 99.31975959329044
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p , p ) ;
rank: 167
score: 99.27708217075893
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ; }
rank: 167
score: 99.2538592998798
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( ) ) ;
rank: 167
score: 99.24250793457031
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + $STRING$ ) ;
rank: 167
score: 99.19902692522321
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this + p ) ;
rank: 168
score: 99.31890869140625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p . get CaMeL Message ( ) ) ;
rank: 168
score: 99.3139415922619
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + epsilon ) ;
rank: 168
score: 99.27694702148438
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p + $STRING$ ) ; }
rank: 168
score: 99.25370279947917
patch: throw Math CaMeL Exception ( . value CaMeL Of ( p ) ) ;
rank: 168
score: 99.24124348958334
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 169
score: 99.37142783717105
patch: throw Poisson CaMeL Distribution . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 169
score: 99.33551635742188
patch: throw throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 169
score: 99.31887637867646
patch: throw get CaMeL Runtime ( ) . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 169
score: 99.31391834077381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . $STRING$ ) ;
rank: 169
score: 99.27684020996094
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , 0 ) ; }
rank: 169
score: 99.253662109375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . abs ( 0 ) ) ;
rank: 169
score: 99.24092864990234
patch: throw Math . max ( - 1 . 0 , 0 . 0 ) ;
rank: 169
score: 99.19747924804688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ , p ) ;
rank: 169
score: 99.0657470703125
patch: throw this . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 170
score: 99.33545532226563
patch: throw Math CaMeL Runtime CaMeL Exception . . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 170
score: 99.31376720610119
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . name ) ;
rank: 170
score: 99.2746941061581
patch: throw Math . sqrt . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 170
score: 99.19650268554688
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 171
score: 99.31294177827381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . this ) ;
rank: 171
score: 99.27468637319711
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 ) ;
rank: 171
score: 99.25309484145221
patch: throw new Runtime CaMeL Exception ( Math . min ( 0 , p ) ) ;
rank: 171
score: 99.1961441040039
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . trim ( ) ) ;
rank: 172
score: 99.36868446751645
patch: throw Math CaMeL Runtime CaMeL Exception ( Math CaMeL Runtime CaMeL Exception . p , p ) ;
rank: 172
score: 99.33388157894737
patch: throw Math CaMeL Runtime CaMeL Exception . Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 172
score: 99.27491861979166
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p , p ) ;
rank: 172
score: 99.27437918526786
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ( $STRING$ ) ) ;
rank: 172
score: 99.25277944711539
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + this ) ;
rank: 172
score: 99.06343078613281
patch: throw Math . abs ( Math . min ( p , p ) ) ;
rank: 173
score: 99.31118629092262
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( PI , p ) ;
rank: 173
score: 99.25236002604167
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;
rank: 173
score: 99.23726399739583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ) ) ;
rank: 173
score: 99.19498443603516
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p ) ;
rank: 173
score: 99.0617904663086
patch: throw Math CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 174
score: 99.36765650699013
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . Runtime CaMeL Exception ( p ) ) ;
rank: 174
score: 99.30933837890625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ) ; }
rank: 174
score: 99.2745830829327
patch: throw Math . Runtime CaMeL Exception ( null , p ) ;
rank: 174
score: 99.19465637207031
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 . 0 ) ;
rank: 175
score: 99.36687911184211
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( mean ) ;
rank: 175
score: 99.33326480263158
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p . to CaMeL String ( ) ) ;
rank: 175
score: 99.31458237591912
patch: throw Math CaMeL Runtime CaMeL Exception ( this . get CaMeL Class ( ) ) ;
rank: 175
score: 99.30910034179688
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ] ) ;
rank: 175
score: 99.27152745863971
patch: throw Math . ( $STRING$ + Fast CaMeL Math . sqrt ( p ) ) ;
rank: 175
score: 99.25185259650735
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Parse CaMeL Exception ( $STRING$ ) ;
rank: 175
score: 99.23499298095703
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ , p ) ;
rank: 175
score: 99.19463348388672
patch: throw new Runtime CaMeL Exception ( this . to CaMeL String ( ) ) ;
rank: 176
score: 99.3665771484375
patch: throw Math CaMeL Runtime CaMeL Exception . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 176
score: 99.3324462890625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( null , ) ;
rank: 176
score: 99.30843955592105
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Integer . to CaMeL String ( p ) ) ;
rank: 176
score: 99.2739028930664
patch: throw Math CaMeL Runtime CaMeL Exception . substring ( $STRING$ , p ) ; }
rank: 176
score: 99.27131204044117
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( get CaMeL Message ( ) ) ;
rank: 176
score: 99.25170180376838
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Class ( ) + $STRING$ ) ;
rank: 176
score: 99.23490397135417
patch: throw Math . max ( 0 . $NUMBER$ , 1 . 0 ) ;
rank: 176
score: 99.05957794189453
patch: throw Math CaMeL Runtime CaMeL Exception = new Exception ( $STRING$ , p ) ;
rank: 177
score: 99.27376302083333
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 177
score: 99.25081634521484
patch: throw Math CaMeL Exception ( Math . to CaMeL String ( $STRING$ ) ) ;
rank: 177
score: 99.23408203125
patch: throw new Illegal CaMeL Argument CaMeL Exception . to CaMeL String ( ) ;
rank: 177
score: 99.19230651855469
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 177
score: 99.05859375
patch: throw new Math CaMeL Exception ( $STRING$ , p ) ;
rank: 178
score: 99.36520867598684
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , max CaMeL Iterations ) ;
rank: 178
score: 99.3316650390625
patch: throw Math CaMeL Runtime CaMeL Exception Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 178
score: 99.313232421875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new int [ ] { max CaMeL Iterations
rank: 178
score: 99.30767531622024
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name + p ) ;
rank: 178
score: 99.27335030691964
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 ) ; }
rank: 178
score: 99.19123077392578
patch: throw Math CaMeL Runtime CaMeL Exception == new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 178
score: 99.05795724051339
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 179
score: 99.3075939360119
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . $STRING$ ) ;
rank: 179
score: 99.2705547626202
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null ) ; }
rank: 179
score: 99.2504638671875
patch: throw Math CaMeL Runtime CaMeL Exception ( new Exception ( $STRING$ ) ) ;
rank: 179
score: 99.19117431640625
patch: throw new Exception ( $STRING$ + p ) ;
rank: 180
score: 99.36373098273026
patch: this . normal = ( Normal CaMeL Distribution CaMeL Impl ) Math . sqrt ( p ) ;
rank: 180
score: 99.33059210526316
patch: throw Math CaMeL Utils . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 180
score: 99.31009674072266
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ to CaMeL String ( ) ) ;
rank: 180
score: 99.30741159539474
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception 1 ( ) ;
rank: 180
score: 99.19087727864583
patch: throw new Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 180
score: 99.05744934082031
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL EOF CaMeL Exception ( ) ;
rank: 181
score: 99.36337459788604
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , epsilon ) ;
rank: 181
score: 99.31002604166666
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . class , $STRING$ ) ;
rank: 181
score: 99.30574115953948
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( int ) ;
rank: 181
score: 99.269970703125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( false ) ;
rank: 181
score: 99.2697982788086
patch: mean = Fast CaMeL Math . sqrt ( p ) ; normal = null ;
rank: 181
score: 99.24988511029412
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + new Integer ( 0 ) ) ;
rank: 181
score: 99.1901123046875
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . $NUMBER$ , p ) ;
rank: 182
score: 99.36253446691177
patch: throw Math CaMeL Runtime CaMeL Exception . Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 182
score: 99.32951524522569
patch: throw ( Runtime CaMeL Exception ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 182
score: 99.30959743923611
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 . 0 ( p ) ) ;
rank: 182
score: 99.26972961425781
patch: throw ( Math . sqrt ( Math . sqrt ( p ) ) ) ;
rank: 182
score: 99.26959991455078
patch: throw Math . sqrt ( Math . sqrt ( p ) , p ) ;
rank: 182
score: 99.24986165364584
patch: throw Math CaMeL Exception ( new Math CaMeL Exception ( $STRING$ ) ) ;
rank: 182
score: 99.22947474888393
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + p ) ;
rank: 182
score: 99.18993268694196
patch: try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 182
score: 99.05694986979167
patch: throw Math . min ( p , 1 . 0 , p ) ;
rank: 183
score: 99.36241912841797
patch: throw Math . Runtime CaMeL Exception ( Integer . sqrt ( p ) ) ;
rank: 183
score: 99.32931179470486
patch: throw Math CaMeL Runtime CaMeL Exception , create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 183
score: 99.30901022518383
patch: Math . max ( 0 , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 183
score: 99.30409592848558
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 183
score: 99.2690658569336
patch: throw Math . sqrt ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 183
score: 99.249267578125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 183
score: 99.228759765625
patch: throw new Exception ( $STRING$ + p + $STRING$ ) ;
rank: 183
score: 99.05670166015625
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( ) ;
rank: 184
score: 99.361328125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( max CaMeL Iterations ) ) ;
rank: 184
score: 99.32886420355902
patch: throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 184
score: 99.30898150275735
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Float ( p ) ) ;
rank: 184
score: 99.30394345238095
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ { p ) ;
rank: 184
score: 99.24925321691177
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Class ( ) + $STRING$ ) ;
rank: 184
score: 99.2285888671875
patch: throw Math . min ( p + 1 . $NUMBER$ , p ) ;
rank: 184
score: 99.18853352864583
patch: throw Math CaMeL Runtime CaMeL Exception ( String . class , $STRING$ ) ;
rank: 184
score: 99.05667877197266
patch: throw new Illegal CaMeL State CaMeL Exception ( p + $STRING$ + p ) ;
rank: 185
score: 99.36109076605902
patch: throw Math . Runtime CaMeL Exception ( Math . Math . sqrt ( p ) ) ;
rank: 185
score: 99.30881076388889
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( p ) ) ;
rank: 185
score: 99.30326080322266
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 185
score: 99.26852416992188
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Exception ( $STRING$ ) ; }
rank: 185
score: 99.22774505615234
patch: throw new Exception ( p . to CaMeL String ( ) + $STRING$ ) ;
rank: 185
score: 99.1884521484375
patch: throw Math . max ( 0 . 0 , p , p ) ;
rank: 185
score: 99.05574035644531
patch: throw Math . round ( Math . min ( p , p ) ) ;
rank: 186
score: 99.36079915364583
patch: throw ( Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ) ;
rank: 186
score: 99.30759564568015
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . Poisson CaMeL Distribution CaMeL Impl ) ;
rank: 186
score: 99.30323428199405
patch: { { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 186
score: 99.26845703125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ , p ) ;
rank: 186
score: 99.26781508501838
patch: throw Math CaMeL Runtime CaMeL Exception ( null . get CaMeL Message ( ) ) ;
rank: 186
score: 99.2490593405331
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ( p - 1 ) ) ;
rank: 186
score: 99.05469859730114
patch: throw Math . max ( $STRING$ , p ) ;
rank: 187
score: 99.3067626953125
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . min ( p , p ) ;
rank: 187
score: 99.26780598958334
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ;
rank: 187
score: 99.26743451286765
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , get CaMeL Message ( ) ) ;
rank: 187
score: 99.2490593405331
patch: throw Math CaMeL Exception ( new Math CaMeL Exception ( $STRING$ ) , p ) ;
rank: 187
score: 99.05439758300781
patch: Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 188
score: 99.36008172286184
patch: this . p = ( Normal CaMeL Distribution CaMeL Impl ) Math . sqrt ( p ) ;
rank: 188
score: 99.32716771175987
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Message ( ) ) ;
rank: 188
score: 99.30632467830883
patch: throw ( Runtime CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 188
score: 99.30288550967262
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . err ) ;
rank: 188
score: 99.26774088541667
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p , p ) ;
rank: 188
score: 99.26678825827206
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . ( $STRING$ , p ) ;
rank: 188
score: 99.24857823988971
patch: throw Math . Runtime CaMeL Exception ( Math . random ( ) , $STRING$ ) ;
rank: 188
score: 99.22426060267857
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 188
score: 99.05428873697916
patch: throw Math . min ( p , 0 . 0 , p ) ;
rank: 189
score: 99.3268310546875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 189
score: 99.30597393329327
patch: throw ( Math . max ( 0 , p ) ) ;
rank: 189
score: 99.30283900669643
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) + $STRING$ ;
rank: 189
score: 99.2676513671875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } ) ;
rank: 189
score: 99.26589786305146
patch: throw Math CaMeL Runtime CaMeL Exception ( this . get CaMeL Exception ( ) ) ;
rank: 189
score: 99.05345916748047
patch: throw Math . append ( Math . min ( p , p ) ) ;
rank: 190
score: 99.3267886513158
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Class ( ) ) ;
rank: 190
score: 99.30575997488839
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ true , p ) ;
rank: 190
score: 99.30282738095238
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . 0 ) ;
rank: 190
score: 99.26522391183036
patch: throw Math . abs ( Math . sqrt ( p ) ) ;
rank: 190
score: 99.2232437133789
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Error ( $STRING$ ) ) ;
rank: 190
score: 99.05208587646484
patch: throw Math CaMeL Runtime CaMeL Exception = new Math CaMeL Exception ( $STRING$ ) ;
rank: 191
score: 99.35800509982639
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( max CaMeL Iterations ) ) ;
rank: 191
score: 99.32669406467014
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 191
score: 99.30572868795956
patch: throw Math CaMeL Runtime CaMeL Exception ( System . to CaMeL String ( ) ) ;
rank: 191
score: 99.30209495907738
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( E . p ) ;
rank: 191
score: 99.26722717285156
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p ) ; }
rank: 191
score: 99.24772135416667
patch: throw Math CaMeL Exception ( . value CaMeL Of ( $STRING$ ) ) ;
rank: 191
score: 99.22303059895833
patch: throw Math . max ( 1 . 0 , 1 . 0 ) ;
rank: 191
score: 99.18567708333333
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] . trim ( ) ;
rank: 191
score: 99.05146484375
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 192
score: 99.35748291015625
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( epsilon ) ) ;
rank: 192
score: 99.30465932992789
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ != p ) ;
rank: 192
score: 99.3010486421131
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + p ;
rank: 192
score: 99.26685442243304
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ 1 . 0 ) ;
rank: 192
score: 99.2636359719669
patch: throw Math CaMeL Utils . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 192
score: 99.24672037760416
patch: throw Math CaMeL Runtime CaMeL Exception . value CaMeL Of ( $STRING$ ) ;
rank: 193
score: 99.32544555664063
patch: throw Math CaMeL Runtime CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 193
score: 99.30441284179688
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new double [ ] { p
rank: 193
score: 99.30094401041667
patch: throw ( Runtime CaMeL Exception ) Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 193
score: 99.26604352678571
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , ) ;
rank: 193
score: 99.24654715401786
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 , $STRING$ ) ;
rank: 193
score: 99.18269348144531
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p ) ;
rank: 193
score: 99.04897635323661
patch: throw Math . abs ( Math . max ( p ) ) ;
rank: 194
score: 99.32462158203126
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p p ) ;
rank: 194
score: 99.30081176757812
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( new $STRING$ ) ;
rank: 194
score: 99.26597086588542
patch: throw throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 194
score: 99.26255170036765
patch: throw Math . 0 . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 194
score: 99.22163391113281
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + $STRING$ ) ;
rank: 194
score: 99.18088204520089
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ;
rank: 195
score: 99.35471062911184
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 , p ) ;
rank: 195
score: 99.32418212890624
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class + $STRING$ ) ;
rank: 195
score: 99.26590728759766
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , ( String ) p ) ;
rank: 195
score: 99.26188659667969
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . format ( p ) ) ;
rank: 195
score: 99.24619427849265
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , new Integer ( 0 ) ) ;
rank: 195
score: 99.1797866821289
patch: throw new Runtime CaMeL Exception ( String . to CaMeL String ( ) ) ;
rank: 195
score: 99.04814453125
patch: throw Math . print CaMeL Stack CaMeL Trace ( $STRING$ , p ) ;
rank: 196
score: 99.353759765625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 196
score: 99.32398681640625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this , ) ;
rank: 196
score: 99.3033088235294
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , p , epsilon ) ;
rank: 196
score: 99.30060686383929
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( PI , $STRING$ ) ;
rank: 196
score: 99.26571451822916
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new String epsilon ) ;
rank: 196
score: 99.26151769301471
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p , 0 ) ;
rank: 196
score: 99.24613444010417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( int ) p ) ;
rank: 196
score: 99.1796875
patch: throw new Math CaMeL Runtime CaMeL Exception ( 0 . 0 , p ) ;
rank: 196
score: 99.04786682128906
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 . 1 ) ;
rank: 197
score: 99.32368299696181
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . out ) ;
rank: 197
score: 99.30322943793402
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . max ( $STRING$ , p ) ) ;
rank: 197
score: 99.30060135690789
patch: throw ( Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 197
score: 99.2656982421875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ; }
rank: 197
score: 99.24567009420956
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( p ) ) ; }
rank: 197
score: 99.218603515625
patch: throw Math . max ( 0 . 0 , p + 1 ) ;
rank: 197
score: 99.17964172363281
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ . 0 , p ) ;
rank: 198
score: 99.35307231702302
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , p , max CaMeL Iterations ) ;
rank: 198
score: 99.24562174479166
patch: throw Math CaMeL Runtime CaMeL Exception . init CaMeL Cause ( this ) ;
rank: 199
score: 99.35300580193015
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , p , p ) ;
rank: 199
score: 99.32298519736842
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( command ) ;
rank: 199
score: 99.259716796875
patch: throw Math CaMeL Runtime CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception ) ;
rank: 199
score: 99.2454833984375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ . 0 , $STRING$ ) ;
rank: 199
score: 99.04735514322917
patch: throw Math . print CaMeL Stack CaMeL Trace ( $STRING$ + p ) ;
rank: 200
score: 99.35182591488487
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( 0 . 0 ) ) ;
rank: 200
score: 99.3222720497533
patch: throw Illegal CaMeL Argument CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 200
score: 99.2981185913086
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 200
score: 99.26499586838942
patch: { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 200
score: 99.259130859375
patch: p = ( double ) Fast CaMeL Math . sqrt ( p ) ;
rank: 200
score: 99.24542595358456
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( - p ) ) ;
rank: 200
score: 99.1789779663086
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , this ) ;
rank: 201
score: 99.35154965049342
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 201
score: 99.32201538085937
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) , p ) ;
rank: 201
score: 99.30111873851104
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new Long ( p ) ) ;
rank: 201
score: 99.29774693080357
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ && p ) ;
rank: 201
score: 99.26475524902344
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new String ( ) ) ;
rank: 201
score: 99.25853056066177
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Cause ( ) , $STRING$ ) ;
rank: 201
score: 99.24526798023896
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ ) + $STRING$ ) ;
rank: 201
score: 99.17864583333333
patch: throw new new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 202
score: 99.3511962890625
patch: mean = Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 202
score: 99.32029965049342
patch: throw throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 202
score: 99.30033111572266
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new long [ ] { p
rank: 202
score: 99.29754929315476
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . p ) ;
rank: 202
score: 99.26455688476562
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } normal = null ;
rank: 202
score: 99.25794219970703
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . decode ( p ) ) ;
rank: 202
score: 99.24516157670455
patch: throw Math CaMeL Runtime CaMeL Exception ( new ) ;
rank: 202
score: 99.21684265136719
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p - $STRING$ ) ;
rank: 202
score: 99.04615783691406
patch: throw Math . err ; new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 203
score: 99.35072157118056
patch: throw Poisson CaMeL Distribution CaMeL Impl . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 203
score: 99.30014217601104
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 . 0 , p ) ;
rank: 203
score: 99.29701450892857
patch: throw { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 203
score: 99.26435852050781
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p , p ) ; }
rank: 203
score: 99.216552734375
patch: throw Math . min ( 0 . 0 , - 1 . 0 ) ;
rank: 203
score: 99.17695617675781
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ + p ) ;
rank: 203
score: 99.04566368689903
patch: throw throw new Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 204
score: 99.34943704044117
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( epsilon ) ) ;
rank: 204
score: 99.31931023848684
patch: throw get CaMeL Runtime ( ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 204
score: 99.26387786865234
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p , p ) ; }
rank: 204
score: 99.25737448299633
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( ) , p ) ;
rank: 204
score: 99.24405611478366
patch: throw Math CaMeL Runtime CaMeL Exception . Exception ( $STRING$ ) ;
rank: 204
score: 99.21526336669922
patch: throw Math . max ( 0 . $NUMBER$ , - 1 . 0 ) ;
rank: 204
score: 99.04544067382812
patch: throw new Illegal CaMeL State CaMeL Exception ( p + $STRING$ , $STRING$ ) ;
rank: 205
score: 99.34933953536184
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 205
score: 99.29959445529514
patch: throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) , p ) ;
rank: 205
score: 99.29623558407738
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ( ) ) ;
rank: 205
score: 99.2633285522461
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; }
rank: 205
score: 99.25692313058036
patch: throw Math . ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 205
score: 99.24382019042969
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( $STRING$ ) ) ;
rank: 205
score: 99.2149658203125
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + $STRING$ + $STRING$ ) ;
rank: 205
score: 99.17643519810268
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . $NUMBER$ ) ;
rank: 205
score: 99.04512023925781
patch: throw Math CaMeL Exception throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 206
score: 99.34847219366776
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , ;
rank: 206
score: 99.31779399671052
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ;
rank: 206
score: 99.29957682291666
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 0 . 0 ) ;
rank: 206
score: 99.2618408203125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } break ;
rank: 206
score: 99.25542340959821
patch: mean = p + Fast CaMeL Math . sqrt ( p ) ;
rank: 206
score: 99.2435302734375
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( Math . abs ( p ) ) ;
rank: 206
score: 99.21397399902344
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + 0 . 0 ) ;
rank: 206
score: 99.04483795166016
patch: throw Math CaMeL Runtime CaMeL Exception . . Math CaMeL Exception ( $STRING$ ) ;
rank: 207
score: 99.3474480124081
patch: throw ( Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 207
score: 99.31751844618056
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ,
rank: 207
score: 99.29949188232422
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p [ 0 ] ) ;
rank: 207
score: 99.29582868303571
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) + p ;
rank: 207
score: 99.25481100643383
patch: throw Math . Runtime CaMeL Exception ( this . get CaMeL Message ( ) ) ;
rank: 207
score: 99.17469024658203
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . $NUMBER$ , p ) ;
rank: 207
score: 99.04468712439903
patch: throw Math . abs ( p , 0 . 1 ) ;
rank: 208
score: 99.34398735894098
patch: throw Math . Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 208
score: 99.2989142922794
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p , p ) ;
rank: 208
score: 99.29561941964286
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ || p ) ;
rank: 208
score: 99.26090240478516
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ; }
rank: 208
score: 99.25413513183594
patch: { throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 208
score: 99.21295928955078
patch: throw Math . max ( 0 . 0 , ( int ) p ) ;
rank: 208
score: 99.1742935180664
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , Integer . class ) ;
rank: 209
score: 99.34379497327302
patch: throw get CaMeL Runtime ( ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 209
score: 99.29819742838542
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( p + p ) ;
rank: 209
score: 99.29537160773026
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . value CaMeL Of ( p ) ) ;
rank: 209
score: 99.26023763020834
patch: mean = ( double ) Fast CaMeL Math . sqrt ( p ) ;
rank: 209
score: 99.24144071691177
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . floor ( p ) ) ;
rank: 209
score: 99.21258544921875
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + this + $STRING$ ) ;
rank: 209
score: 99.17361450195312
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 209
score: 99.0443344116211
patch: throw Math . normal ( Math . min ( p , p ) ) ;
rank: 210
score: 99.3433837890625
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 210
score: 99.31548751027961
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( log ) ;
rank: 210
score: 99.29781341552734
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ 0 ] + p ) ;
rank: 210
score: 99.29523577008929
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 210
score: 99.26009114583333
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ , p ) ; }
rank: 210
score: 99.24069213867188
patch: throw Math CaMeL Exception ( Math . max ( 0 , p ) ) ;
rank: 210
score: 99.21194893973214
patch: throw Math . max ( - 1 . 0 , p ) ;
rank: 210
score: 99.17350006103516
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] * p ;
rank: 210
score: 99.044140625
patch: throw Math . max ( 1 . 0 + p , p ) ;
rank: 211
score: 99.34326850043402
patch: throw Math [ 0 ] . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 211
score: 99.31529476768092
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( format ) ;
rank: 211
score: 99.29774385340073
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p + p ) ;
rank: 211
score: 99.21165248325893
patch: throw new Null CaMeL Pointer CaMeL Exception ( p , $STRING$ ) ;
rank: 211
score: 99.17298889160156
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , 0 ) ;
rank: 211
score: 99.04391276041666
patch: throw null . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 212
score: 99.34193821957237
patch: throw throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 212
score: 99.31379968979779
patch: throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 212
score: 99.29770795036765
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p , p ) ;
rank: 212
score: 99.2950439453125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p 1 ) ;
rank: 212
score: 99.25929260253906
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; mean = p ; }
rank: 212
score: 99.2531509399414
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , p ) ;
rank: 212
score: 99.23983764648438
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 212
score: 99.17291259765625
patch: throw Math CaMeL Runtime CaMeL Exception [ 1 ] [ 0 ] = p ;
rank: 212
score: 99.043798828125
patch: throw Math . min ( p , 0 . 1 , p ) ;
rank: 213
score: 99.34164225260416
patch: throw Math CaMeL Runtime CaMeL Exception ( this . this . $STRING$ ) ;
rank: 213
score: 99.31352153577302
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 213
score: 99.25928673377403
patch: throw throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 213
score: 99.17237200055804
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ; }
rank: 213
score: 99.04360129616477
patch: throw Math . round ( p , p ) ;
rank: 214
score: 99.31108012952302
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . out ) ;
rank: 214
score: 99.29641384548611
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( 0 , $NUMBER$ ) ) ;
rank: 214
score: 99.29307861328125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception Integer ( $STRING$ ) ;
rank: 214
score: 99.25860188802083
patch: mean = p ; normal = p ; this . normal = epsilon ;
rank: 214
score: 99.2511848000919
patch: throw Math CaMeL Runtime CaMeL Exception ( String . get CaMeL Message ( ) ) ;
rank: 214
score: 99.21104431152344
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ + this ) ;
rank: 214
score: 99.17219682173295
patch: throw new Math CaMeL Runtime CaMeL Exception ( ) ;
rank: 214
score: 99.0435791015625
patch: throw Math . abs ( p . to CaMeL String ( ) ) ;
rank: 215
score: 99.3406120749081
patch: throw this . Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 215
score: 99.3107974403783
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ , p ) ;
rank: 215
score: 99.29615020751953
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . append ( p ) ) ;
rank: 215
score: 99.25823102678571
patch: mean = p ; normal = Math . sqrt ( p ) ;
rank: 215
score: 99.25066779641544
patch: mean = ( int ) ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 215
score: 99.23940860523896
patch: throw Math CaMeL Exception ( new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ) ;
rank: 215
score: 99.2108383178711
patch: throw throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 215
score: 99.17184884207589
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ . 0 ) ;
rank: 216
score: 99.34008110894098
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p ) , p ) ;
rank: 216
score: 99.31053969439338
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 216
score: 99.29192243303571
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( p , p ) ;
rank: 216
score: 99.25759887695312
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ; } }
rank: 216
score: 99.23936552159927
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + get CaMeL Class ( ) ) ;
rank: 216
score: 99.21002666766827
patch: throw Math . max ( $NUMBER$ . 0 , p ) ;
rank: 216
score: 99.17163957868304
patch: throw new Math CaMeL Runtime CaMeL Exception ( p , $STRING$ ) ;
rank: 216
score: 99.04340154474431
patch: throw Math . max ( $NUMBER$ , p ) ;
rank: 217
score: 99.33871299342105
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ; this . epsilon = epsilon ;
rank: 217
score: 99.29597024356617
patch: throw ( Math CaMeL Runtime CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 217
score: 99.2915271577381
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( mean , p ) ;
rank: 217
score: 99.25753580729166
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , p ) ; }
rank: 217
score: 99.25031594669117
patch: return Poisson CaMeL Distribution CaMeL Impl ( p , epsilon , max CaMeL Iterations ) ;
rank: 217
score: 99.239111328125
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 217
score: 99.17124938964844
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] [ ) ;
rank: 218
score: 99.33867730034723
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ,
rank: 218
score: 99.2956183938419
patch: this . mean = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 218
score: 99.2914806547619
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Runtime CaMeL Exception . to CaMeL String ( p ) ) ;
rank: 218
score: 99.25694173177084
patch: normal ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 218
score: 99.25013732910156
patch: mean = Fast CaMeL Math . sqrt ( p ) ; normal = epsilon ;
rank: 218
score: 99.23906393612133
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . Na CaMeL N , p ) ;
rank: 218
score: 99.209814453125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p 1 ) ;
rank: 218
score: 99.04328918457031
patch: throw Math CaMeL Runtime CaMeL Exception = new Exception ( $STRING$ + p ) ;
rank: 219
score: 99.33863740808823
patch: p = Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 219
score: 99.29495578342014
patch: throw Math . Runtime CaMeL Exception ( Math . to CaMeL String ( p ) ) ;
rank: 219
score: 99.29045758928571
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( $STRING$ ) ) ;
rank: 219
score: 99.23904622395834
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $STRING$ + p ) ;
rank: 219
score: 99.20979309082031
patch: throw Math CaMeL Runtime CaMeL Exception . print CaMeL Stack CaMeL Trace ( ) ;
rank: 219
score: 99.17008754185268
patch: throw new Runtime CaMeL Exception ( $STRING$ + p + p ) ;
rank: 219
score: 99.04287923177084
patch: throw Math . abs ( p , 0 . 0 , p ) ;
rank: 220
score: 99.33855523003473
patch: throw Math . Runtime CaMeL Exception ( Math . Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 220
score: 99.30763003700658
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ + p ) ;
rank: 220
score: 99.28985305059524
patch: : new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 220
score: 99.2097919170673
patch: throw Math . min ( 1 . 0 , p ) ;
rank: 220
score: 99.17007211538461
patch: throw Math CaMeL Runtime CaMeL Exception ( 1 . 0 ) ;
rank: 220
score: 99.042626953125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p p ) ;
rank: 221
score: 99.33819580078125
patch: Math CaMeL Runtime CaMeL Exception throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 221
score: 99.30724379595588
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , p ) ;
rank: 221
score: 99.29460144042969
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 ( p ) ) ;
rank: 221
score: 99.28942289806548
patch: return new Normal CaMeL Distribution CaMeL Impl ( p . Fast CaMeL Math . sqrt ( p ) ) ;
rank: 221
score: 99.25641547309027
patch: return Math . sqrt ( p ) ;
rank: 221
score: 99.24928193933823
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , p , 0 ) ;
rank: 221
score: 99.23876235064338
patch: throw Math CaMeL Exception ( Math . abs ( ( double ) p ) ) ;
rank: 221
score: 99.20932006835938
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 . 0 , p ) ;
rank: 221
score: 99.16976165771484
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , p + $STRING$ ) ;
rank: 221
score: 99.04234313964844
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 222
score: 99.33683507582721
patch: throw get CaMeL Runtime ( ) . Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 222
score: 99.3059441061581
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Exception ( $STRING$ ) ) ;
rank: 222
score: 99.2945785522461
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , p , epsilon ) ;
rank: 222
score: 99.24868774414062
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ( String ) p ) ;
rank: 222
score: 99.23867618336396
patch: throw Math CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) , p ) ;
rank: 222
score: 99.2077407836914
patch: throw ( new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ) ;
rank: 222
score: 99.04218292236328
patch: throw new Illegal CaMeL State CaMeL Exception ( p + $STRING$ , p ) ;
rank: 223
score: 99.33659282483552
patch: throw Math $NUMBER$ Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 223
score: 99.30592105263158
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( out ) ;
rank: 223
score: 99.2945556640625
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . to CaMeL String ( $STRING$ ) ) ;
rank: 223
score: 99.25575949928977
patch: throw Math CaMeL Runtime CaMeL Exception ( false ) ;
rank: 223
score: 99.24835759943181
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p ;
rank: 223
score: 99.23828125
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 223
score: 99.20744323730469
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + null ) ;
rank: 223
score: 99.1677474975586
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ( ) ) ;
rank: 223
score: 99.04216766357422
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . p , p ) ;
rank: 224
score: 99.33628934972427
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( p , p ) ;
rank: 224
score: 99.30135091145833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p . to CaMeL String ( ) ) ;
rank: 224
score: 99.29451497395833
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p + p ) ) ;
rank: 224
score: 99.25560760498047
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ $STRING$ ) ;
rank: 224
score: 99.23826688878677
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( int ) p ) ;
rank: 224
score: 99.1675137606534
patch: throw Math CaMeL Runtime CaMeL Exception ( this ) ;
rank: 224
score: 99.04201834542411
patch: throw new Illegal CaMeL State CaMeL Exception ( p + p ) ;
rank: 225
score: 99.30128238075658
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ( new Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 225
score: 99.29430474175348
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ true . get CaMeL Message ( ) ) ;
rank: 225
score: 99.28723725818452
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( System . $STRING$ ) ;
rank: 225
score: 99.25557454427083
patch: mean = p ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 225
score: 99.24805405560662
patch: throw Math CaMeL Runtime CaMeL Exception ( this . get CaMeL Runtime ( ) ) ;
rank: 225
score: 99.16636657714844
patch: Math . max ( 0 . 0 , p , 0 . 0 ) ;
rank: 225
score: 99.04123942057292
patch: throw throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 226
score: 99.33555692784927
patch: normal = ( Normal CaMeL Distribution CaMeL Impl ) Math . sqrt ( p ) ;
rank: 226
score: 99.25535231370192
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } ;
rank: 226
score: 99.23713684082031
patch: throw Math CaMeL Exception ( Runtime . to CaMeL String ( $STRING$ ) ) ;
rank: 227
score: 99.29351806640625
patch: throw Math CaMeL Runtime CaMeL Exception ( System . to CaMeL String ( $STRING$ ) ) ;
rank: 227
score: 99.28621419270833
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( System . 0 ) ;
rank: 227
score: 99.25508117675781
patch: { throw Math CaMeL Runtime CaMeL Exception . get CaMeL Exception ( $STRING$ ) ;
rank: 227
score: 99.2469970703125
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p , $STRING$ ) ;
rank: 227
score: 99.23688821231617
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . ceil ( p ) ) ;
rank: 227
score: 99.205322265625
patch: throw new Error ( p . to CaMeL String ( ) ) ;
rank: 227
score: 99.16609191894531
patch: throw Math CaMeL Runtime CaMeL Exception = this . get CaMeL Message ( ) ;
rank: 227
score: 99.03969163161058
patch: throw create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 228
score: 99.3350894325658
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , epsilon ) ;
rank: 228
score: 99.29287540211396
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 0 . 0 , p ) ;
rank: 228
score: 99.25504847935268
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + null ) ; }
rank: 228
score: 99.24693388097427
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL EOF CaMeL Exception ( $STRING$ ) ;
rank: 228
score: 99.16575270432692
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ , p ) ;
rank: 229
score: 99.33501120174633
patch: throw new Math CaMeL Runtime CaMeL Exception ( Integer . sqrt ( p ) ) ;
rank: 229
score: 99.3006527549342
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new Exception ( $STRING$ ) ) ;
rank: 229
score: 99.28548177083333
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ != p ) ;
rank: 229
score: 99.25476888020833
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 229
score: 99.246875
patch: throw Math . sqrt ( p . to CaMeL String ( ) ) ;
rank: 229
score: 99.23649327895221
patch: throw new Null CaMeL Pointer CaMeL Exception ( Math . abs ( p ) ) ;
rank: 229
score: 99.20380045572917
patch: throw Math . Runtime CaMeL Exception ( p + $STRING$ + $STRING$ ) ;
rank: 229
score: 99.16564069475446
patch: throw new Runtime CaMeL Exception ( 0 . 0 + p ) ;
rank: 229
score: 99.03921944754464
patch: this . throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 230
score: 99.3346176147461
patch: throw Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 230
score: 99.25443522135417
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , ) ; }
rank: 230
score: 99.24661458333334
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . ( $STRING$ ) ;
rank: 230
score: 99.23646455652573
patch: throw Math CaMeL Runtime CaMeL Exception ( new Integer ( 0 ) , $STRING$ ) ;
rank: 230
score: 99.2035903930664
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p * $STRING$ ) ;
rank: 230
score: 99.1655044555664
patch: throw Math CaMeL Runtime CaMeL Exception = new Runtime CaMeL Exception ( p ) ;
rank: 230
score: 99.0390396118164
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 231
score: 99.30013877467105
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 231
score: 99.29174086626838
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 231
score: 99.28478422619048
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;
rank: 231
score: 99.25441196986607
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , $NUMBER$ ) ; }
rank: 231
score: 99.23600006103516
patch: throw new Illegal CaMeL Argument CaMeL Exception ( to CaMeL String ( ) ) ;
rank: 231
score: 99.20299479166667
patch: throw Math . max ( 1 . 0 , $NUMBER$ . 0 ) ;
rank: 231
score: 99.16504669189453
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ + p + $STRING$ ) ;
rank: 232
score: 99.33395867598684
patch: throw new Math CaMeL Runtime CaMeL Exception ( Math . Math . sqrt ( p ) ) ;
rank: 232
score: 99.29983038651316
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 232
score: 99.29166666666667
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 0 . 0 ( p ) ) ;
rank: 232
score: 99.28472609747024
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . epsilon ) ;
rank: 232
score: 99.23552389705883
patch: throw Math CaMeL Exception ( new Math CaMeL Exception ( $STRING$ ) , $STRING$ ) ;
rank: 232
score: 99.20160675048828
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Name ( ) ) ;
rank: 232
score: 99.16457693917411
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , value ) ;
rank: 232
score: 99.03846842447916
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 233
score: 99.33323910361842
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . $STRING$ ) ;
rank: 233
score: 99.291259765625
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . iterator ( $STRING$ ) ;
rank: 233
score: 99.28319149925595
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new ) ;
rank: 233
score: 99.25431823730469
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( Integer ) p ) ;
rank: 233
score: 99.24546185661765
patch: throw ( Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 233
score: 99.20142364501953
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ , p ) ;
rank: 234
score: 99.33273654513889
patch: throw Math CaMeL Runtime CaMeL Exception ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 234
score: 99.29123942057292
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( $NUMBER$ , p ) ) ;
rank: 234
score: 99.28293328536184
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( ) ;
rank: 234
score: 99.25411783854166
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 234
score: 99.24525553385416
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( ) ;
rank: 234
score: 99.2353156594669
patch: throw Math . Runtime CaMeL Exception ( Math . random ( ) , p ) ;
rank: 234
score: 99.20127868652344
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 234
score: 99.16380092075893
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null + p ) ;
rank: 234
score: 99.03785807291666
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 235
score: 99.29931640625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Class ( ) ) ;
rank: 235
score: 99.2540512084961
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ; }
rank: 235
score: 99.24458451704545
patch: throw Math . sqrt ( $STRING$ + p ) ;
rank: 235
score: 99.23526763916016
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ , $STRING$ ) ;
rank: 235
score: 99.20077749399039
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 235
score: 99.16344451904297
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , false ) ;
rank: 235
score: 99.03778839111328
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ Exception
rank: 236
score: 99.2991879111842
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 236
score: 99.2911017922794
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Integer ( epsilon ) ) ;
rank: 236
score: 99.28140419407895
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Message ( ) ) ;
rank: 236
score: 99.24443817138672
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Message ( p ) ) ;
rank: 236
score: 99.23518880208333
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 236
score: 99.19935607910156
patch: throw new Null CaMeL Pointer CaMeL Exception ( get CaMeL Name ( ) ) ;
rank: 236
score: 99.037353515625
patch: throw Math . round ( Math . max ( p ) ) ;
rank: 237
score: 99.29767166940789
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 237
score: 99.29062228732639
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( $STRING$ + p ) ) ;
rank: 237
score: 99.28134300595238
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ; }
rank: 237
score: 99.25377655029297
patch: mean = p ; p = Fast CaMeL Math . sqrt ( p ) ;
rank: 237
score: 99.23513997395834
patch: throw Math CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 237
score: 99.16275787353516
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 . 1 ) ;
rank: 237
score: 99.0371322631836
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p + p ) ;
rank: 238
score: 99.33084909539474
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . $STRING$ ) ;
rank: 238
score: 99.29059516059027
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . iterator ( $STRING$ + p ) ;
rank: 238
score: 99.28118024553571
patch: return Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 238
score: 99.25331115722656
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( false ) ; }
rank: 238
score: 99.24424833409927
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Type ( ) ) ;
rank: 238
score: 99.23493194580078
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ( int ) p ) ;
rank: 238
score: 99.16259002685547
patch: throw Math CaMeL Runtime CaMeL Exception ( String . abs ( p ) ) ;
rank: 239
score: 99.29752390008224
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) , p ) ;
rank: 239
score: 99.29058430989583
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 , $STRING$ ) ;
rank: 239
score: 99.25269317626953
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ true ) ;
rank: 239
score: 99.24360926011029
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( get CaMeL Runtime ( ) ) ;
rank: 239
score: 99.23492790670956
patch: throw new Illegal CaMeL Argument CaMeL Exception ( . to CaMeL String ( ) ) ;
rank: 239
score: 99.19789225260416
patch: throw Math . max ( $NUMBER$ . 0 , 0 . 0 ) ;
rank: 239
score: 99.03589545355902
patch: throw Math . max ( p ) ;
rank: 240
score: 99.33012309827302
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , p , p ) ;
rank: 240
score: 99.29709201388889
patch: throw Math CaMeL Runtime CaMeL Exception = new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 240
score: 99.28045944940476
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ && $STRING$ ) ;
rank: 240
score: 99.25196940104166
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , ( $STRING$ ) ) ;
rank: 240
score: 99.16136823381696
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , name ) ;
rank: 240
score: 99.03566080729166
patch: throw Math . max ( p , p , 1 . 0 ) ;
rank: 241
score: 99.32937782689145
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 . 0 , p ) ;
rank: 241
score: 99.28013916015625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception Integer ( p ) ;
rank: 241
score: 99.24268687855114
patch: throw ( Math . sqrt ( $STRING$ ) ) ;
rank: 241
score: 99.23432922363281
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ + p ) ;
rank: 241
score: 99.197021484375
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 241
score: 99.1613037109375
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 + p ) ;
rank: 241
score: 99.03556685014205
patch: throw Math . max ( p , 0 ) ;
rank: 242
score: 99.27934337797619
patch: = new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 242
score: 99.25153459821429
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ,
rank: 242
score: 99.24257525275735
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , p ) ;
rank: 242
score: 99.23387235753677
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ) ;
rank: 242
score: 99.03314208984375
patch: throw Math . TRUE . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 243
score: 99.27902703536184
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ; }
rank: 243
score: 99.2512939453125
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p ) ; } }
rank: 243
score: 99.24249674479167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , null ) ;
rank: 243
score: 99.23359949448529
patch: throw Math CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) , ;
rank: 243
score: 99.032958984375
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , ) ;
rank: 244
score: 99.32819567228618
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations , epsilon ) ;
rank: 244
score: 99.29647666529605
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( random ) ;
rank: 244
score: 99.28844496783088
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $STRING$ + p ) ;
rank: 244
score: 99.24227201021634
patch: throw Math CaMeL Runtime CaMeL Exception ( null + p ) ;
rank: 244
score: 99.19654947916666
patch: throw Math . create CaMeL Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 244
score: 99.15992082868304
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . $NUMBER$ ) ;
rank: 244
score: 99.03289388020833
patch: throw Math CaMeL Runtime CaMeL Exception . . Math CaMeL Exception ( ) ;
rank: 245
score: 99.32802220394737
patch: throw new Math CaMeL Runtime CaMeL Exception ( Math . Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 245
score: 99.29644775390625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL State CaMeL Exception . class ) ;
rank: 245
score: 99.27716936383929
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + $STRING$ ;
rank: 245
score: 99.2510009765625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 1 . 0 ) ;
rank: 245
score: 99.23269653320312
patch: throw Math CaMeL Exception ( Math . abs ( p + 1 ) ) ;
rank: 245
score: 99.15970284598214
patch: throw new Runtime CaMeL Exception ( p , $STRING$ + p ) ;
rank: 245
score: 99.03229437934027
patch: throw Math . round ( p ) ;
rank: 246
score: 99.32794548483456
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 246
score: 99.29567357113487
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 246
score: 99.27591103001645
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ , p ;
rank: 246
score: 99.24149816176471
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ;
rank: 246
score: 99.19625651041666
patch: throw Math = Math . max ( p , 1 . 0 ) ;
rank: 246
score: 99.15966796875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name + p ) ;
rank: 246
score: 99.03211321149554
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 ) ;
rank: 247
score: 99.29488332648026
patch: throw Math CaMeL Runtime CaMeL Exception . run ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 247
score: 99.28821478949652
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( $STRING$ , p ) ) ;
rank: 247
score: 99.27498168945313
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception 0 ( $STRING$ ) ;
rank: 247
score: 99.24109604779412
patch: throw Math CaMeL Runtime CaMeL Exception ( null . get CaMeL Exception ( ) ) ;
rank: 247
score: 99.23240751378677
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . abs ( 1 ) ) ;
rank: 247
score: 99.1596210186298
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = null ;
rank: 247
score: 99.03190394810268
patch: throw throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 248
score: 99.32713317871094
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( 0 ) ) ;
rank: 248
score: 99.29415732935855
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL IO CaMeL Exception ( $STRING$ , p ) ;
rank: 248
score: 99.27421875
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ! $STRING$ ) ;
rank: 248
score: 99.24953988882211
patch: throw new Runtime CaMeL Exception ( $STRING$ , p ) ; }
rank: 248
score: 99.24083754595588
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Name ( ) , p ) ;
rank: 248
score: 99.23162841796875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 248
score: 99.19566243489584
patch: throw Math . min ( 1 . 0 , 0 . 0 ) ;
rank: 248
score: 99.15862165178571
patch: throw new Runtime CaMeL Exception ( p + $STRING$ , p ) ;
rank: 249
score: 99.32709147135417
patch: throw Math CaMeL Runtime CaMeL Exception ( this . 0 , p ) ;
rank: 249
score: 99.27393798828125
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 , 0 . 0 ) ;
rank: 249
score: 99.24951171875
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ; }
rank: 249
score: 99.23051901424633
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( p ) ) ; }
rank: 249
score: 99.19561360677083
patch: throw Math . create CaMeL Null CaMeL Pointer CaMeL Exception ( p ) ;
rank: 249
score: 99.15857747395833
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] ++ ;
rank: 249
score: 99.03090006510416
patch: throw throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 250
score: 99.32698139391448
patch: throw Math $NUMBER$ Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 250
score: 99.29400275735294
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 250
score: 99.24903971354166
patch: mean = p ; normal = epsilon ; this . normal = epsilon ;
rank: 250
score: 99.24011908637152
patch: throw Math . 0 ( $STRING$ ) ;
rank: 250
score: 99.22975158691406
patch: System . err . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 250
score: 99.19542694091797
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + p ) ;
rank: 250
score: 99.15855189732143
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + p ) ;
rank: 251
score: 99.32663445723684
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , mean , max CaMeL Iterations ) ;
rank: 251
score: 99.29393246299342
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ , p ) ;
rank: 251
score: 99.28640747070312
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new Object [ ] { p
rank: 251
score: 99.27139892578126
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ , p ) ;
rank: 251
score: 99.24864908854167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - $NUMBER$ , p ) ;
rank: 251
score: 99.22903645833334
patch: throw Math CaMeL Exception ( get CaMeL Class ( ) , $STRING$ ) ;
rank: 251
score: 99.15777587890625
patch: throw new Math CaMeL Runtime CaMeL Exception ( 1 . 0 , p ) ;
rank: 252
score: 99.29390033922698
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , p ) ;
rank: 252
score: 99.28512912326389
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . iterator ( $STRING$ , p ) ;
rank: 252
score: 99.27105712890625
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? p ;
rank: 252
score: 99.24850899832589
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new $STRING$ ) ;
rank: 252
score: 99.23928653492646
patch: mean = 0 ; normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 252
score: 99.19512939453125
patch: throw new Exception ( $STRING$ + $STRING$ ) ;
rank: 253
score: 99.3248650045956
patch: throw Poisson CaMeL Distribution . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 253
score: 99.27079050164474
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ $STRING$ ) ;
rank: 253
score: 99.24818638392857
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $STRING$ ) ; }
rank: 253
score: 99.2391357421875
patch: throw Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 253
score: 99.22823079427083
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 253
score: 99.19486490885417
patch: throw Math . max ( 0 . $NUMBER$ , $NUMBER$ . 0 ) ;
rank: 253
score: 99.15750122070312
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ . 0 ) ;
rank: 254
score: 99.3240902549342
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . to CaMeL String ( p ) ) ;
rank: 254
score: 99.29190866570724
patch: throw ( Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 254
score: 99.28492567274306
patch: throw Math CaMeL Runtime CaMeL Exception ( System . substring ( 0 , p ) ) ;
rank: 254
score: 99.23902130126953
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } mean = p .
rank: 254
score: 99.22819213867187
patch: throw Math . Runtime CaMeL Exception ( ) ;
rank: 254
score: 99.19419860839844
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ + p ) ;
rank: 254
score: 99.15621948242188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , true ) ;
rank: 254
score: 99.0284652709961
patch: throw Math CaMeL Runtime CaMeL Exception = new Math CaMeL Exception ( p ) ;
rank: 255
score: 99.3240902549342
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ; this . epsilon = p ;
rank: 255
score: 99.27003173828125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception 0 ( p ) ;
rank: 255
score: 99.24801199776786
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + ) ;
rank: 255
score: 99.23888397216797
patch: throw Math . sqrt ( Math . sqrt ( p , p ) ) ;
rank: 255
score: 99.22808837890625
patch: throw new Runtime CaMeL Exception ( . get CaMeL Message ( $STRING$ ) ) ;
rank: 255
score: 99.15501403808594
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , name ) ;
rank: 255
score: 99.02723795572916
patch: throw Math . sleep ( p . to CaMeL String ( ) ) ;
rank: 256
score: 99.32403243215461
patch: throw Math CaMeL Runtime CaMeL Exception ( this . this . get CaMeL Message ( ) ) ;
rank: 256
score: 99.28407796223958
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 256
score: 99.27001342773437
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 256
score: 99.22799862132354
patch: synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 256
score: 99.19327545166016
patch: throw Math . max ( 0 . $NUMBER$ , ( int ) p ) ;
rank: 257
score: 99.323974609375
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Integer . sqrt ( p ) ) ;
rank: 257
score: 99.28379720052084
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . clone ( ) ) ;
rank: 257
score: 99.26964750744048
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; * /
rank: 257
score: 99.2277603149414
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( $STRING$ ) ) ;
rank: 257
score: 99.19315011160714
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new + $STRING$ ) ;
rank: 257
score: 99.15454864501953
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 257
score: 99.02690887451172
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 258
score: 99.2836052389706
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $STRING$ , p ) ;
rank: 258
score: 99.2693103608631
patch: { { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 258
score: 99.24641927083333
patch: mean = p ; normal = epsilon ;
rank: 258
score: 99.23670959472656
patch: throw Math CaMeL Runtime CaMeL Exception ( format ( $STRING$ , p ) ) ;
rank: 258
score: 99.22769368489584
patch: throw Math CaMeL Exception ( Math . random ( ) , $STRING$ ) ;
rank: 258
score: 99.193115234375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + false ) ;
rank: 259
score: 99.28880550986842
patch: throw Math CaMeL Runtime CaMeL Exception = create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 259
score: 99.28300924862133
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , p + p ) ;
rank: 259
score: 99.22744571461396
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( new ) ;
rank: 259
score: 99.19303131103516
patch: throw new Exception ( p . get CaMeL Localized CaMeL Message ( ) ) ;
rank: 259
score: 99.15420532226562
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Integer ( $STRING$ ) ) ;
rank: 259
score: 99.02645874023438
patch: throw Math . err = new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 260
score: 99.28841824001736
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception , $STRING$ ;
rank: 260
score: 99.28265380859375
patch: throw new Runtime CaMeL Exception ( $STRING$ + p . get CaMeL Name ( ) ) ;
rank: 260
score: 99.22715130974265
patch: throw Math CaMeL Exception ( Math . ( 1 . 0 , p ) ) ;
rank: 260
score: 99.19287872314453
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ , null ) ;
rank: 260
score: 99.15373229980469
patch: throw new Runtime CaMeL Exception ( $STRING$ + p + $STRING$ + p ) ;
rank: 260
score: 99.026416015625
patch: throw ( ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 261
score: 99.32343493009868
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 261
score: 99.28803453947368
patch: throw ( Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 261
score: 99.26572779605263
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception String ( ) ;
rank: 261
score: 99.24507359095982
patch: throw Math . Runtime CaMeL Exception ( p , p ) ; }
rank: 261
score: 99.235595703125
patch: throw Math CaMeL Runtime CaMeL Exception ( log , $STRING$ ) ;
rank: 261
score: 99.2271369485294
patch: throw new Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 261
score: 99.19140625
patch: throw Math . min ( p , p + 1 . 0 ) ;
rank: 261
score: 99.15373011997768
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ , p ) ;
rank: 261
score: 99.0263900756836
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ;
rank: 262
score: 99.32257080078125
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . Math . sqrt ( p ) ) ;
rank: 262
score: 99.28744988692434
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . to CaMeL String ( ) ) ;
rank: 262
score: 99.26538696289063
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ! p ) ;
rank: 262
score: 99.24497477213542
patch: throw Math CaMeL Runtime CaMeL Exception ( false ) ; }
rank: 262
score: 99.23553825827206
patch: mean = Fast CaMeL Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 262
score: 99.19133649553571
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 . 0 ) ;
rank: 262
score: 99.02631487165179
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , 0 ) ;
rank: 263
score: 99.2652587890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 263
score: 99.2447509765625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + this ) ;
rank: 263
score: 99.22689998851104
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 263
score: 99.15354919433594
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + Integer . class ) ;
rank: 263
score: 99.02616882324219
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . max ( p ) ;
rank: 264
score: 99.32203504774306
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 264
score: 99.28294542100694
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . err ) ;
rank: 264
score: 99.26511101973684
patch: throw ( Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 264
score: 99.24468524639423
patch: mean = Fast CaMeL Math . sqrt ( p ) ; }
rank: 264
score: 99.22688562729779
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ ) + p ) ;
rank: 264
score: 99.19065755208334
patch: throw Math . abs ( new Double ( 0 . 0 ) ) ;
rank: 264
score: 99.15305989583334
patch: throw Math CaMeL Runtime CaMeL Exception ( p + 0 . 0 ) ;
rank: 265
score: 99.32096593520221
patch: throw new Poisson CaMeL Distribution CaMeL Impl ( Math . sqrt ( p ) ) ;
rank: 265
score: 99.28007956112133
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + p ) ;
rank: 265
score: 99.24462127685547
patch: throw Math . sqrt ( Math . sqrt ( p ) ) ; } }
rank: 265
score: 99.23389434814453
patch: throw Math . sqrt ( $STRING$ . value CaMeL Of ( p ) ) ;
rank: 265
score: 99.2264175415039
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ( ) ) ;
rank: 265
score: 99.1528828938802
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 265
score: 99.02597045898438
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 266
score: 99.27900526258681
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 266
score: 99.26404622395833
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( $STRING$ ) ;
rank: 266
score: 99.23367130055146
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Math CaMeL Exception ( $STRING$ ) ;
rank: 266
score: 99.22637580422794
patch: throw Math CaMeL Runtime CaMeL Exception new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 266
score: 99.15285081129808
patch: throw Math CaMeL Runtime CaMeL Exception ( this + p ) ;
rank: 266
score: 99.02586364746094
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 267
score: 99.27899169921875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) p ) ;
rank: 267
score: 99.26332493832237
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . get CaMeL Message ( p ) ) ;
rank: 267
score: 99.22624655330883
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 267
score: 99.18885149274554
patch: throw Math . round ( Math . abs ( p ) ) ;
rank: 267
score: 99.15249399038461
patch: throw new new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 267
score: 99.02568359375
patch: throw Math CaMeL Runtime CaMeL Exception = Math . max ( p ) ;
rank: 268
score: 99.32018280029297
patch: throw Math CaMeL Runtime CaMeL Exception ( Long . sqrt ( p ) ) ;
rank: 268
score: 99.27887321920956
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Throwable ( $STRING$ ) ) ;
rank: 268
score: 99.277587890625
patch: throw new Math CaMeL Runtime CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 268
score: 99.2633056640625
patch: throw ( Math . min ( p , 0 . 0 ) ) ;
rank: 268
score: 99.24411010742188
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $STRING$ ) ; }
rank: 268
score: 99.23264447380515
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Long ( 0 ) ) ;
rank: 268
score: 99.22583725873162
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . Na CaMeL N , $STRING$ ) ;
rank: 268
score: 99.1882080078125
patch: throw Math . min ( 0 . $NUMBER$ , 1 . 0 ) ;
rank: 268
score: 99.0254898071289
patch: throw Math CaMeL Exception . create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 269
score: 99.32011975740132
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( p ) , p ) ;
rank: 269
score: 99.27846950954861
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . max ( p , p ) ;
rank: 269
score: 99.24411010742188
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( + p ) ;
rank: 269
score: 99.22524844898896
patch: throw Math CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) , $STRING$ ) ;
rank: 269
score: 99.18785264756944
patch: throw Math . abs ( p ) ;
rank: 269
score: 99.15132904052734
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 Exception [ 0 ] = p ;
rank: 270
score: 99.32004123263889
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( epsilon ) ) ;
rank: 270
score: 99.27832709418402
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . substring ( p , p ) ;
rank: 270
score: 99.27701822916667
patch: throw Math Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 270
score: 99.26207885742187
patch: return Poisson CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 270
score: 99.24361979166666
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null , p ) ; }
rank: 270
score: 99.2252197265625
patch: throw Math CaMeL Exception ( Math . abs ( ) ) ;
rank: 270
score: 99.1876690204327
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 270
score: 99.1506591796875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; ;
rank: 270
score: 99.02535807291666
patch: throw Math . max ( p , $NUMBER$ . 0 , p ) ;
rank: 271
score: 99.31965467664931
patch: normal = Math . sqrt ( p ) ; this . epsilon = max CaMeL Iterations ;
rank: 271
score: 99.27809244791666
patch: new Normal CaMeL Distribution CaMeL Impl ( p , p , epsilon ) ;
rank: 271
score: 99.26043379934211
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 271
score: 99.2242202758789
patch: throw Math CaMeL Exception ( Math . abs ( $NUMBER$ . 0 ) ) ;
rank: 271
score: 99.18743896484375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) + $STRING$ ;
rank: 271
score: 99.15065220424107
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . class ) ;
rank: 271
score: 99.02524038461539
patch: throw Math . max ( 1 . 1 , p ) ;
rank: 272
score: 99.31923540900735
patch: Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 272
score: 99.27728740985577
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + epsilon ) ;
rank: 272
score: 99.2755126953125
patch: throw ( Runtime CaMeL Exception ) Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 272
score: 99.25994551809211
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Message ( ) ) ) ;
rank: 272
score: 99.22410673253677
patch: throw Math CaMeL Exception ( . get CaMeL Message ( $STRING$ ) , null ) ;
rank: 272
score: 99.18682454427083
patch: throw Math . max ( p , p + 1 . 0 ) ;
rank: 272
score: 99.15058898925781
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + p + $STRING$ ) ;
rank: 273
score: 99.3180401141827
patch: throw ( Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 273
score: 99.2597720497533
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( ) ; } mean = p ;
rank: 273
score: 99.24224853515625
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , ( $STRING$ ) ) ; }
rank: 273
score: 99.230224609375
patch: throw Math . p . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 273
score: 99.18641764322916
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , - 1 ) ;
rank: 274
score: 99.2770637063419
patch: throw Math . abs ( new Normal CaMeL Distribution CaMeL Impl ( p ) ) ;
rank: 274
score: 99.24209594726562
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p ; }
rank: 274
score: 99.23015280330883
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Cause ( ) , p ) ;
rank: 274
score: 99.22384823069854
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 , $STRING$ ) ;
rank: 274
score: 99.02486165364583
patch: throw $STRING$ . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 275
score: 99.3174984580592
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 275
score: 99.277001953125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p - $STRING$ ) ;
rank: 275
score: 99.2411376953125
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 275
score: 99.23005676269531
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( String ) null ) ;
rank: 275
score: 99.22360409007354
patch: throw new Illegal CaMeL Argument CaMeL Exception ( . get CaMeL Message ( ) ) ;
rank: 275
score: 99.1498272235577
patch: throw Math CaMeL Runtime CaMeL Exception ( String . class ) ;
rank: 275
score: 99.0243896484375
patch: throw Math CaMeL Runtime CaMeL Exception . max ( $STRING$ , p ) ;
rank: 276
score: 99.27672526041667
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + max CaMeL Iterations ) ;
rank: 276
score: 99.24078369140625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; break ; }
rank: 276
score: 99.2296142578125
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p . get CaMeL Message ( ) ;
rank: 276
score: 99.18470865885416
patch: return Math . max ( 0 . 0 , 0 . 0 ) ;
rank: 276
score: 99.14969635009766
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ + p , $STRING$ ) ;
rank: 277
score: 99.31526692708333
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 277
score: 99.27585736443015
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p + p ) ;
rank: 277
score: 99.24073791503906
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 . 0 ) ; }
rank: 277
score: 99.22309426700367
patch: throw Math CaMeL Runtime CaMeL Exception ( new Math CaMeL Exception ( $STRING$ ) ) ;
rank: 277
score: 99.14912109375
patch: throw Math . max ( 0 . 0 + p , p ) ;
rank: 277
score: 99.0233154296875
patch: throw ( Illegal CaMeL State CaMeL Exception ) new Exception ( $STRING$ ) ;
rank: 278
score: 99.31517198350694
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( max CaMeL Iterations ) ) ;
rank: 278
score: 99.25693230879934
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( p ) . get CaMeL Message ( ) ) ;
rank: 278
score: 99.2405014038086
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } mean = null ;
rank: 278
score: 99.22276395909927
patch: throw new Runtime CaMeL Exception ( Math . to CaMeL String ( p ) ) ;
rank: 278
score: 99.18428548177083
patch: throw Math . max ( 0 . $NUMBER$ , p + 1 ) ;
rank: 278
score: 99.14910016741071
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + throw ) ;
rank: 278
score: 99.023193359375
patch: throw Math . max ( p , p , 0 . 0 ) ;
rank: 279
score: 99.31507783777573
patch: throw ( Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 279
score: 99.27569580078125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new int [ ] { max CaMeL Iterations
rank: 279
score: 99.25689086914062
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ,
rank: 279
score: 99.23985290527344
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } mean = epsilon ;
rank: 279
score: 99.18422154017857
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + this ) ;
rank: 279
score: 99.148681640625
patch: throw Math CaMeL Runtime CaMeL Exception ( p + p + p ) ;
rank: 279
score: 99.0226806640625
patch: throw Math . abs ( p , 1 . 0 , p ) ;
rank: 280
score: 99.25639038085937
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ + p ) ;
rank: 280
score: 99.2286865234375
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Message ( ) ) ;
rank: 280
score: 99.22244083180146
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } this . ) ;
rank: 280
score: 99.184130859375
patch: throw Math . min ( 0 . 0 , $NUMBER$ . 0 ) ;
rank: 280
score: 99.14862823486328
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] = $STRING$ ;
rank: 281
score: 99.31448364257812
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . 0 , p ) ;
rank: 281
score: 99.2754767922794
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 . 1 , p ) ;
rank: 281
score: 99.25593118106617
patch: throw ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( p ) ) ;
rank: 281
score: 99.22822122012867
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Name ( ) + $STRING$ ) ;
rank: 281
score: 99.183837890625
patch: throw Math . , new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 281
score: 99.14820098876953
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + name ) ;
rank: 281
score: 99.01969401041667
patch: throw Math . max ( p , $NUMBER$ . 1 , p ) ;
rank: 282
score: 99.27513930376838
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 0 . 1 , p ) ;
rank: 282
score: 99.26751708984375
patch: throw Math CaMeL Runtime CaMeL Exception == new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 282
score: 99.25563450863487
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ + p ;
rank: 282
score: 99.23909505208333
patch: throw Math . sqrt ( p , p ) ; }
rank: 282
score: 99.22222137451172
patch: throw Math . Runtime CaMeL Exception ( Math . ceil ( p ) ) ;
rank: 282
score: 99.1837387084961
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , 0 . 0 ) ;
rank: 282
score: 99.14765276227679
patch: throw new Runtime CaMeL Exception ( $NUMBER$ . 0 , p ) ;
rank: 282
score: 99.01964460100446
patch: throw new Illegal CaMeL State CaMeL Exception ( p , p ) ;
rank: 283
score: 99.31145770733173
patch: this . throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 283
score: 99.27480181525735
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p + p ) ;
rank: 283
score: 99.25520405016448
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Throwable . get CaMeL Message ( p ) ) ;
rank: 283
score: 99.23833465576172
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . trim ( ) ) ; }
rank: 283
score: 99.22203871783088
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 283
score: 99.18346354166667
patch: throw Math . max ( 0 . 0 , this . p ) ;
rank: 283
score: 99.14759826660156
patch: throw Math CaMeL Runtime CaMeL Exception != new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 283
score: 99.01932779947917
patch: throw Math . max ( p , 1 . 0 + p ) ;
rank: 284
score: 99.31120219983552
patch: throw ( Poisson CaMeL Distribution CaMeL Impl ) new Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 284
score: 99.27479654947916
patch: throw Math CaMeL Runtime CaMeL Exception ( p , p + $STRING$ ) ;
rank: 284
score: 99.23811848958333
patch: throw Math CaMeL Runtime CaMeL Exception . format ( $STRING$ , p ) ;
rank: 284
score: 99.22760368795956
patch: if ( p <= 0 ) throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 284
score: 99.22144317626953
patch: throw Math CaMeL Exception ( Math . min ( 0 , p ) ) ;
rank: 284
score: 99.01925455729166
patch: throw Math . max ( p , 0 . 0 + p ) ;
rank: 285
score: 99.31104800575658
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 1 , p ) ;
rank: 285
score: 99.26643880208333
patch: throw . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 285
score: 99.220654296875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( ) , $STRING$ ) ;
rank: 285
score: 99.18332345145089
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new ) ;
rank: 285
score: 99.14628383091518
patch: throw new Runtime CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 285
score: 99.018798828125
patch: throw Math . max ( 0 . 1 , p ) ;
rank: 286
score: 99.31060112847223
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Runtime ( ) , p ) ;
rank: 286
score: 99.27459716796875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( 1 , p ) ) ;
rank: 286
score: 99.26548258463542
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ , p ) ;
rank: 286
score: 99.25435598273026
patch: throw Math . Interrupted CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 286
score: 99.23753138950893
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 286
score: 99.22044462316177
patch: throw Math CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . this , $STRING$ ) ;
rank: 286
score: 99.1829833984375
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ + 1 ) ;
rank: 286
score: 99.14613342285156
patch: throw new Runtime CaMeL Exception ( 0 . 0 , p , $STRING$ ) ;
rank: 287
score: 99.27358111213235
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p + $STRING$ ) ;
rank: 287
score: 99.26502821180556
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ( ) + $STRING$ ) ;
rank: 287
score: 99.25401475694444
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 , p ) ;
rank: 287
score: 99.22035319010416
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 ) ;
rank: 287
score: 99.1829605102539
patch: throw new Null CaMeL Pointer CaMeL Exception ( new Error ( $STRING$ ) ) ;
rank: 287
score: 99.14611053466797
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + p + $STRING$ ;
rank: 287
score: 99.01812274639423
patch: throw . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 288
score: 99.30975020559211
patch: throw Illegal CaMeL Argument CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 288
score: 99.26327175564236
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . get CaMeL Class ( ) ) ;
rank: 288
score: 99.25363159179688
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 288
score: 99.23716735839844
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; }
rank: 288
score: 99.22402121803977
patch: throw Math = Math . sqrt ( p ) ;
rank: 288
score: 99.22014825994319
patch: throw Math CaMeL Exception ( $STRING$ + p ) ;
rank: 288
score: 99.18278503417969
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;
rank: 288
score: 99.01768141526442
patch: throw Math . max ( p , $NUMBER$ . 1 ) ;
rank: 289
score: 99.2530453330592
patch: throw Math . Interrupted CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 289
score: 99.23670959472656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( String ) p ) ; }
rank: 289
score: 99.2198715209961
patch: throw Math . Math CaMeL Exception ( Math . abs ( p ) ) ;
rank: 289
score: 99.14593505859375
patch: throw new Runtime CaMeL Exception ( String . length ( ) ) ;
rank: 289
score: 99.01759440104166
patch: throw Math CaMeL Runtime CaMeL Exception . max ( p , p ) ;
rank: 290
score: 99.30929744944854
patch: p = ( Normal CaMeL Distribution CaMeL Impl ) Math . sqrt ( p ) ;
rank: 290
score: 99.27257622612848
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ; }
rank: 290
score: 99.25218505859375
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ;
rank: 290
score: 99.2363510131836
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ , p ) ; }
rank: 290
score: 99.22297937729779
patch: throw Math . max ( $STRING$ . to CaMeL String ( ) , p ) ;
rank: 290
score: 99.21986490885416
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 290
score: 99.01758829752605
patch: throw ( Illegal CaMeL Argument CaMeL Exception , $STRING$ ) ;
rank: 291
score: 99.3092400045956
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( 0 ) ) ;
rank: 291
score: 99.26277669270833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( p + $STRING$ ) ) ;
rank: 291
score: 99.25186767578126
patch: throw Math CaMeL Runtime CaMeL Exception this . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 291
score: 99.22278550091912
patch: mean = p ; normal = null ; this . epsilon = max CaMeL Iterations ;
rank: 291
score: 99.21809387207031
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ p ) ;
rank: 291
score: 99.1812744140625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + 0 ) ;
rank: 291
score: 99.145556640625
patch: throw new Exception throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 291
score: 99.0172119140625
patch: throw . . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 292
score: 99.30874837239584
patch: throw $STRING$ . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 292
score: 99.27217371323529
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p == 0 . 0 ) ;
rank: 292
score: 99.2516338641827
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 292
score: 99.22264753069196
patch: { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 292
score: 99.18115234375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( p ) ) ;
rank: 293
score: 99.30845289963942
patch: throw Math . Runtime CaMeL Exception ( $STRING$ . $STRING$ ) ;
rank: 293
score: 99.2720458984375
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p + $STRING$ ) ;
rank: 293
score: 99.26118299696181
patch: throw Math CaMeL Runtime CaMeL Exception != new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 293
score: 99.25108642578125
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p 0 ) ;
rank: 293
score: 99.21754455566406
patch: throw Math CaMeL Exception ( . to CaMeL String ( ) , p ) ;
rank: 293
score: 99.14505767822266
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] = $NUMBER$ ;
rank: 293
score: 99.016845703125
patch: throw Math . sleep ( p , 1 . 0 ) ;
rank: 294
score: 99.30788949819711
patch: throw Math . Runtime CaMeL Exception ( this . $STRING$ ) ;
rank: 294
score: 99.27188110351562
patch: throw Math . append ( Math . sqrt ( p ) , p ) ;
rank: 294
score: 99.25981309678819
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ + p ) ;
rank: 294
score: 99.25045166015624
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( - 1 ) ;
rank: 294
score: 99.23566080729167
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Exception ( p ) ;
rank: 294
score: 99.22252655029297
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 , p ) ;
rank: 294
score: 99.21741485595703
patch: throw Math CaMeL Exception ( Math . get CaMeL Message ( $STRING$ ) ) ;
rank: 294
score: 99.18030548095703
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + $STRING$ ) ;
rank: 294
score: 99.14466094970703
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . 0 , $STRING$ ) ;
rank: 295
score: 99.27130485983456
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + $STRING$ + p ) ;
rank: 295
score: 99.25040893554687
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ , $STRING$ ) ;
rank: 295
score: 99.2354736328125
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( + $STRING$ ) ;
rank: 295
score: 99.21700286865234
patch: throw Math CaMeL Exception ( . get CaMeL Message ( ) , p ) ;
rank: 295
score: 99.17966871995192
patch: throw Math . max ( 0 . 0 , $STRING$ ) ;
rank: 295
score: 99.14435577392578
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . class , p ) ;
rank: 295
score: 99.01575520833333
patch: throw Math CaMeL Runtime CaMeL Exception . append ( $STRING$ , p ) ;
rank: 296
score: 99.30691867404514
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( 0 . 0 ) ) ;
rank: 296
score: 99.27112755408653
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == p ) ;
rank: 296
score: 99.25782686121323
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 296
score: 99.24867553710938
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 296
score: 99.23499348958333
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 1 . 0 ) ;
rank: 296
score: 99.2221450805664
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Bytes ( $STRING$ ) ) ;
rank: 296
score: 99.21678969439338
patch: synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 296
score: 99.17861328125
patch: throw Math . min ( p , p - 1 . 0 ) ;
rank: 296
score: 99.14419759114584
patch: throw Math CaMeL Runtime CaMeL Exception ( p , $STRING$ + p ) ;
rank: 296
score: 99.01554361979167
patch: throw Math . max ( p + 0 . 0 , p ) ;
rank: 297
score: 99.30689290364583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . 0 , p ) ;
rank: 297
score: 99.24595336914062
patch: n = new Normal CaMeL Distribution CaMeL Impl ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 297
score: 99.21645938648896
patch: throw Math CaMeL Exception ( new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 297
score: 99.17840983072917
patch: throw Math . max ( 0 . MAX _ VALUE , p ) ;
rank: 298
score: 99.30653381347656
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( epsilon ) ) ;
rank: 298
score: 99.27082655164931
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Class ( ) ) ;
rank: 298
score: 99.25759548611111
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Access CaMeL Exception . class ) ;
rank: 298
score: 99.23458862304688
patch: mean = p ; normal = ( Normal CaMeL Distribution CaMeL Impl ) p ;
rank: 298
score: 99.22142118566177
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( System . $STRING$ ) ;
rank: 298
score: 99.21640912224265
patch: throw new Runtime CaMeL Exception ( Math . abs ( p ) + $STRING$ ) ;
rank: 299
score: 99.30632866753473
patch: throw Math . Runtime CaMeL Exception ( Math . Runtime CaMeL Exception ( p ) ) ;
rank: 299
score: 99.25623236762152
patch: throw ( Exception ) Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 299
score: 99.23423414963942
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , this ) ;
rank: 299
score: 99.2213493795956
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + $STRING$ , p ) ;
rank: 299
score: 99.2161003561581
patch: throw new Runtime CaMeL Exception ( Math . min ( 0 , $NUMBER$ ) ) ;
rank: 299
score: 99.17765045166016
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new + $STRING$ ) ;
rank: 300
score: 99.30548416940789
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 , max CaMeL Iterations ) ;
rank: 300
score: 99.2698745727539
patch: throw Math . min ( 0 , Math . sqrt ( p ) ) ;
rank: 300
score: 99.24408637152777
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 300
score: 99.234130859375
patch: Math . sqrt ( Fast CaMeL Math . sqrt ( p ) ) ; }
rank: 300
score: 99.21575927734375
patch: throw Math CaMeL Exception ( Math . max ( 0 , 0 ) ) ;
rank: 300
score: 99.14324951171875
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = p ) ;
rank: 300
score: 99.01373291015625
patch: throw throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 301
score: 99.26979693244485
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Double ( p ) ) ;
rank: 301
score: 99.22075338924633
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Runtime ( ) + $STRING$ ) ;
rank: 301
score: 99.21544692095588
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( ) + $STRING$ ) ;
rank: 301
score: 99.17512512207031
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ + this ) ;
rank: 301
score: 99.01312255859375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 1 ) ;
rank: 302
score: 99.26947428385417
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $NUMBER$ , p ) ;
rank: 302
score: 99.23372105189732
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , this ) ; }
rank: 302
score: 99.22068786621094
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . p ( $STRING$ ) ;
rank: 302
score: 99.21538947610294
patch: throw Math CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ) ;
rank: 302
score: 99.17491048177084
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $STRING$ + $STRING$ ) ;
rank: 302
score: 99.01287286931819
patch: throw Math . max ( p , $STRING$ ) ;
rank: 303
score: 99.25392659505208
patch: throw throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 303
score: 99.24166067023026
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p
rank: 303
score: 99.2334716796875
patch: mean = p ; normal = p ; epsilon = max CaMeL Iterations ;
rank: 303
score: 99.2203877766927
patch: p = Fast CaMeL Math . sqrt ( p ) ;
rank: 303
score: 99.21537511488971
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this , $STRING$ ) ;
rank: 303
score: 99.14232635498047
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p + 0 ) ;
rank: 304
score: 99.30408528645833
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 1 , p ) ;
rank: 304
score: 99.26918029785156
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ , p + $STRING$ ) ;
rank: 304
score: 99.25359429253473
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . to CaMeL String ( ) ) ;
rank: 304
score: 99.17462921142578
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 305
score: 99.25349256727431
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( p + $STRING$ ) ) ;
rank: 305
score: 99.2190933227539
patch: throw Math . sqrt ( Math . sqrt ( 0 . 0 ) ) ;
rank: 305
score: 99.21483612060547
patch: throw Math CaMeL Exception ( . to CaMeL String ( ) + $STRING$ ) ;
rank: 305
score: 99.17426006610577
patch: throw Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ;
rank: 305
score: 99.00879845252403
patch: throw Math . max ( p + 1 , p ) ;
rank: 306
score: 99.30284772600446
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p . $STRING$ ) ;
rank: 306
score: 99.26899065290179
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ 0 ] ) ;
rank: 306
score: 99.25262451171875
patch: throw new Runtime CaMeL Exception ( $STRING$ + p . to CaMeL String ( ) ) ;
rank: 306
score: 99.2400653545673
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 306
score: 99.23309733072917
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p + p ) ;
rank: 306
score: 99.21454216452206
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 306
score: 99.17424774169922
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + p + $STRING$ ) ;
rank: 306
score: 99.14183631310097
patch: throw Math CaMeL Runtime CaMeL Exception ( this + $STRING$ ) ;
rank: 306
score: 99.00843157087054
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $NUMBER$ ) ;
rank: 307
score: 99.30242919921875
patch: throw Math . Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 307
score: 99.25132921006944
patch: throw Math CaMeL Runtime CaMeL Exception , new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 307
score: 99.23308919270833
patch: throw Math . equals ( Math . sqrt ( p ) ) ; }
rank: 307
score: 99.21405029296875
patch: throw Math . Runtime CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . ) ;
rank: 307
score: 99.00840407151442
patch: throw Math . sleep ( p , 0 . 0 ) ;
rank: 308
score: 99.26882595486111
patch: throw Math CaMeL Runtime CaMeL Exception ( System . to CaMeL String ( p ) ) ;
rank: 308
score: 99.25126139322917
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , p ) ;
rank: 308
score: 99.23894585503473
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Throwable . to CaMeL String ( ) ) ;
rank: 308
score: 99.21345520019531
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ , p ) ;
rank: 308
score: 99.1736591045673
patch: throw Math . abs ( p - 1 . 0 ) ;
rank: 308
score: 99.14115084134616
patch: throw Math CaMeL Runtime CaMeL Exception ( this , p ) ;
rank: 309
score: 99.21825408935547
patch: throw Math CaMeL Utils . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 309
score: 99.21341959635417
patch: throw Math . Runtime CaMeL Exception ( new Integer ( p ) ) ;
rank: 309
score: 99.1735610961914
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + $STRING$ ) ;
rank: 309
score: 99.14097377232143
patch: throw new Runtime CaMeL Exception ( $STRING$ + 0 + p ) ;
rank: 309
score: 99.0074462890625
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ) ;
rank: 310
score: 99.30025906032986
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . Runtime CaMeL Exception ( p ) ;
rank: 310
score: 99.2668212890625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == 0 . 0 ) ;
rank: 310
score: 99.25099690755208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , get CaMeL Class ( ) ) ;
rank: 310
score: 99.2325668334961
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; else throw p ; }
rank: 310
score: 99.21824544270834
patch: throw Math . p ( $STRING$ . to CaMeL String ( ) ) ;
rank: 310
score: 99.21334838867188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ;
rank: 310
score: 99.17323303222656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + true ) ;
rank: 311
score: 99.29975237165179
patch: this . epsilon = Fast CaMeL Math . sqrt ( p ) ;
rank: 311
score: 99.24965533088235
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ( ) ) ;
rank: 311
score: 99.23230794270833
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new String p ) ;
rank: 311
score: 99.21811810661765
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Pattern ( ) , $STRING$ ) ;
rank: 311
score: 99.21319939108456
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( - p ) ) ;
rank: 311
score: 99.17269897460938
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 311
score: 99.14075520833333
patch: throw new Exception ( String . value CaMeL Of ( p ) ) ;
rank: 311
score: 99.00685221354166
patch: throw Math . max ( 1 . 0 , p , p ) ;
rank: 312
score: 99.29930013020834
patch: throw Math CaMeL Runtime CaMeL Exception ( p . $STRING$ , p ) ;
rank: 312
score: 99.26675235523896
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ( p - 0 ) ) ;
rank: 312
score: 99.23396809895833
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Cause ( p ) ;
rank: 312
score: 99.21729951746323
patch: mean = 0 ; normal = 0 ; this . epsilon = max CaMeL Iterations ;
rank: 312
score: 99.2125244140625
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( p , $STRING$ ) ;
rank: 312
score: 99.1725082397461
patch: throw new Error ( p . to CaMeL String ( ) + $STRING$ ) ;
rank: 312
score: 99.140625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; return null ;
rank: 312
score: 99.00655924479166
patch: throw Math . max ( p , 1 . 1 , p ) ;
rank: 313
score: 99.29915125229779
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL EOF CaMeL Exception ( p ) ;
rank: 313
score: 99.26655129825367
patch: throw new Runtime CaMeL Exception ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 313
score: 99.17179870605469
patch: throw new throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 313
score: 99.14019012451172
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] [ 0 ]
rank: 313
score: 99.0064453125
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 314
score: 99.29903157552083
patch: throw Math . Runtime CaMeL Exception ( 0 . 0 , p ) ;
rank: 314
score: 99.24865004595588
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( new Exception ( $STRING$ ) ) ;
rank: 314
score: 99.23175811767578
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ false ) ;
rank: 314
score: 99.2108383178711
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . ceil ( p ) ) ;
rank: 314
score: 99.17164611816406
patch: throw new Null CaMeL Pointer CaMeL Exception ( new String ( $STRING$ ) ) ;
rank: 314
score: 99.00643216646634
patch: throw Math . print CaMeL Stack CaMeL Trace ( p ) ;
rank: 315
score: 99.23349480879934
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Name ( ) ) ;
rank: 315
score: 99.23173014322917
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( true ) ;
rank: 315
score: 99.21673943014706
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . ( $STRING$ + p ) ;
rank: 315
score: 99.17149000901442
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 315
score: 99.13967895507812
patch: throw Math CaMeL Runtime CaMeL Exception [ p ] [ 0 ] = p ;
rank: 315
score: 99.00640399639423
patch: throw Illegal CaMeL State CaMeL Exception ( $STRING$ + p ) ;
rank: 316
score: 99.26415297564338
patch: throw Math . arraycopy ( p , 0 , p , 0 , p ) ;
rank: 316
score: 99.24834846047794
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 316
score: 99.23335774739583
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 316
score: 99.23162372295673
patch: throw Math CaMeL Runtime CaMeL Exception ( null , null ) ;
rank: 316
score: 99.21589929917279
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , 0 , p ) ;
rank: 316
score: 99.20977020263672
patch: throw Math CaMeL Exception ( Math . max ( 1 , p ) ) ;
rank: 316
score: 99.17147064208984
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + null ) ;
rank: 316
score: 99.13905334472656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Integer ( 0 ) ) ;
rank: 316
score: 99.00637582632211
patch: throw throw new Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 317
score: 99.29808852251838
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . $NUMBER$ ( p ) ) ;
rank: 317
score: 99.26407623291016
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p [ 0 ] ) ;
rank: 317
score: 99.24829779730902
patch: throw Math CaMeL Runtime CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 317
score: 99.23160552978516
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , p + p ) ; }
rank: 317
score: 99.21587057674633
patch: throw Math . epsilon . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 317
score: 99.17080078125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + ) ;
rank: 317
score: 99.13848470052083
patch: throw Math . max ( 0 . 0 , p , $NUMBER$ ) ;
rank: 317
score: 99.00612571022727
patch: throw Math . max ( null , p ) ;
rank: 318
score: 99.24814181857639
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . to CaMeL String ( ) ) ;
rank: 318
score: 99.23139299665179
patch: throw Math CaMeL Runtime CaMeL Exception ( - 1 . 0 ) ;
rank: 318
score: 99.23061794704861
patch: throw ( Illegal CaMeL Argument CaMeL Exception . p . get CaMeL Message ( ) ) ;
rank: 318
score: 99.17034149169922
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 . 0 + $STRING$ ) ;
rank: 318
score: 99.13835797991071
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false ) ;
rank: 319
score: 99.29691314697266
patch: throw Math CaMeL Runtime CaMeL Exception ( String . $NUMBER$ ( p ) ) ;
rank: 319
score: 99.26362609863281
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new float [ ] { p
rank: 319
score: 99.23124694824219
patch: mean = p ; mean = Fast CaMeL Math . sqrt ( p ) ;
rank: 319
score: 99.20935872395833
patch: throw Math CaMeL Exception ( Math . Na CaMeL N , p ) ;
rank: 319
score: 99.1702392578125
patch: throw Math = Math . max ( 0 . 0 , p ) ;
rank: 319
score: 99.13829040527344
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . length , p ) ;
rank: 319
score: 99.0056621844952
patch: throw Math . min ( p , 0 . 1 ) ;
rank: 320
score: 99.2966064453125
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . p , p ) ;
rank: 320
score: 99.26340060763889
patch: throw . Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 320
score: 99.23117065429688
patch: mean = p ( Fast CaMeL Math . sqrt ( p ) ) ; }
rank: 320
score: 99.22899672564338
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Message ( p ) ) ;
rank: 320
score: 99.21542537913604
patch: throw Math . max ( $STRING$ . get CaMeL Message ( ) , p ) ;
rank: 320
score: 99.17005157470703
patch: throw new Null CaMeL Pointer CaMeL Exception ( get CaMeL Message ( ) ) ;
rank: 320
score: 99.13824462890625
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ $NUMBER$ ] = p ;
rank: 320
score: 99.00515512319711
patch: throw Math . round ( p , 0 . 0 ) ;
rank: 321
score: 99.26301792689732
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ false , p ) ;
rank: 321
score: 99.23116861979166
patch: Math . sqrt ( Math . sqrt ( p ) , p ) ;
rank: 321
score: 99.20905412946429
patch: throw Math CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . ) ;
rank: 321
score: 99.16969299316406
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( , p ) ;
rank: 321
score: 99.00494384765625
patch: throw Math = new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 322
score: 99.26296657986111
patch: throw new Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 322
score: 99.24678548177083
patch: throw ( Runtime CaMeL Exception ) Math . Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 322
score: 99.23108782087054
patch: throw Math CaMeL Runtime CaMeL Exception ( null , null ) ; }
rank: 322
score: 99.21539665670956
patch: mean = ( double ) ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 322
score: 99.16957092285156
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new + $STRING$ ) ;
rank: 322
score: 99.13802337646484
patch: throw new Runtime CaMeL Exception ( this . get CaMeL Name ( ) ) ;
rank: 322
score: 99.00410970052083
patch: throw Math . max ( 1 . 1 + p , p ) ;
rank: 323
score: 99.29579162597656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . this . $STRING$ ) ;
rank: 323
score: 99.26239013671875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ( double ) p ) ;
rank: 323
score: 99.24654715401786
patch: throw . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 323
score: 99.23091888427734
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ $NUMBER$ ) ;
rank: 323
score: 99.16876627604167
patch: throw Math . max ( 0 , p + 1 . 0 ) ;
rank: 323
score: 99.13728841145833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ , ) ;
rank: 324
score: 99.26219940185547
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . equals ( p ) ) ;
rank: 324
score: 99.24588351779514
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 324
score: 99.23067801339286
patch: mean = Fast CaMeL Math . sqrt ( p , p ) ;
rank: 324
score: 99.208251953125
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + this + $STRING$ ) ;
rank: 324
score: 99.16837310791016
patch: throw Math . ) ( new Null CaMeL Pointer CaMeL Exception ( ) ) ;
rank: 324
score: 99.13678385416667
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p + ) ;
rank: 325
score: 99.23063659667969
patch: throw Math CaMeL Runtime CaMeL Exception ( p ) ; } mean = p ;
rank: 325
score: 99.22256630345395
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( p . get CaMeL Message ( ) ) ;
rank: 325
score: 99.20805140904018
patch: throw Math CaMeL Exception ( Math . abs ( $NUMBER$ ) ) ;
rank: 325
score: 99.16802978515625
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , null ) ;
rank: 325
score: 99.13646647135417
patch: throw Math CaMeL Runtime CaMeL Exception = Math . abs ( p ) ;
rank: 325
score: 99.00300736860795
patch: throw Math . min ( 0 , p ) ;
rank: 326
score: 99.2954345703125
patch: normal = Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 326
score: 99.26091452205883
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new byte [ 0 ] ) ;
rank: 326
score: 99.23062896728516
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( double ) epsilon ) ;
rank: 326
score: 99.22043328536184
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } this . mean = p ;
rank: 326
score: 99.20772552490234
patch: throw Math CaMeL Exception ( Math . abs ( p - 1 ) ) ;
rank: 326
score: 99.16713053385416
patch: throw Math . max ( 0 . $NUMBER$ , 0 . $NUMBER$ ) ;
rank: 326
score: 99.13640485491071
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; break ;
rank: 327
score: 99.29509420955883
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . p ) ;
rank: 327
score: 99.2438605813419
patch: throw ( Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 327
score: 99.2305908203125
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ; }
rank: 327
score: 99.21188354492188
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Runtime ( ) , ) ;
rank: 327
score: 99.16678292410714
patch: throw Math = new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 327
score: 99.1362075805664
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , p , $STRING$ ) ;
rank: 327
score: 99.00240885416666
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 328
score: 99.24357774522569
patch: throw new Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 328
score: 99.22970377604166
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , epsilon ) ;
rank: 328
score: 99.20722198486328
patch: throw Math CaMeL Exception ( Math . abs ( 0 ) , p ) ;
rank: 328
score: 99.16591099330357
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 328
score: 99.13607025146484
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name , p , p ) ;
rank: 328
score: 99.00214494977679
patch: throw new throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 329
score: 99.29501681857639
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p }
rank: 329
score: 99.22921752929688
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , epsilon ) ; }
rank: 329
score: 99.16487884521484
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + p ) ;
rank: 329
score: 99.13597819010417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + - p ) ;
rank: 329
score: 99.00179349459134
patch: throw throw new Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 330
score: 99.29463958740234
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . mean ( p ) ) ;
rank: 330
score: 99.24289279513889
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;
rank: 330
score: 99.22913469587054
patch: throw Math CaMeL Runtime CaMeL Exception ( p + p ) ; }
rank: 330
score: 99.21468912760416
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( p ) ;
rank: 330
score: 99.21160125732422
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( p ) ) ;
rank: 330
score: 99.20682525634766
patch: throw Math CaMeL Exception = new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 330
score: 99.00170026506696
patch: throw Math . abs ( Math . abs ( p ) ) ;
rank: 331
score: 99.29379611545139
patch: if ( p <= 0 ) { throw Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 331
score: 99.25998159555289
patch: new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 331
score: 99.22871907552083
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; } }
rank: 331
score: 99.21380615234375
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 ) ;
rank: 331
score: 99.21154022216797
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . append ( $STRING$ ) ) ;
rank: 331
score: 99.16455078125
patch: return Math . max ( 0 . 0 , p ) ;
rank: 331
score: 99.13507080078125
patch: throw new Runtime CaMeL Exception ( 0 . 0 ) ;
rank: 331
score: 99.0014892578125
patch: throw throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 332
score: 99.25962320963542
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 332
score: 99.24147135416666
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 332
score: 99.22869873046875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $STRING$ ) ;
rank: 332
score: 99.21312120225694
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , epsilon , max CaMeL Iterations ) ;
rank: 332
score: 99.211376953125
patch: throw Math CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 332
score: 99.20538736979167
patch: throw Math CaMeL Runtime CaMeL Exception ( new Integer ( 0 ) ) ;
rank: 332
score: 99.13506673177083
patch: throw Math . min ( 0 . 0 , p , p ) ;
rank: 333
score: 99.2936150045956
patch: throw Math CaMeL Runtime CaMeL Exception ( this . this . this . $STRING$ ) ;
rank: 333
score: 99.25947840073529
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p , $STRING$ ) ;
rank: 333
score: 99.22809244791667
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null , $STRING$ ) ; }
rank: 333
score: 99.21234130859375
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception $STRING$ ) ;
rank: 333
score: 99.21080729166667
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( $STRING$ ;
rank: 333
score: 99.13375150240384
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;
rank: 333
score: 99.0012939453125
patch: throw throw new Illegal CaMeL State CaMeL Exception ( p + $STRING$ ) ;
rank: 334
score: 99.29360961914062
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Runtime ( ) ) ;
rank: 334
score: 99.212255859375
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Cause ( $STRING$ ) ;
rank: 334
score: 99.21080017089844
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . equals ( $STRING$ ) ) ;
rank: 334
score: 99.20499965122768
patch: throw Math CaMeL Exception ( . get CaMeL Message ( ) ) ;
rank: 334
score: 99.16404724121094
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 334
score: 99.00059678819444
patch: throw Math . sleep ( p ) ;
rank: 335
score: 99.25807100183823
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p == 0 . 0 ) ;
rank: 335
score: 99.23975327435662
patch: throw Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 335
score: 99.21116536458334
patch: throw ( Math . max ( p , 0 . 0 ) ) ;
rank: 335
score: 99.20430210658482
patch: throw Math CaMeL Runtime CaMeL Exception . init CaMeL Cause ( ) ;
rank: 335
score: 99.16366577148438
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 . 0 + $STRING$ ) ;
rank: 335
score: 99.13330950055804
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 + p ) ;
rank: 335
score: 99.00057279146634
patch: throw throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 336
score: 99.25792738970588
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 . 0 , p ) ;
rank: 336
score: 99.22745768229167
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ; }
rank: 336
score: 99.16338704427083
patch: throw Math . , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 336
score: 99.13330078125
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . class , p ) ;
rank: 336
score: 99.00043194110577
patch: throw Math . max ( p , 1 . 1 ) ;
rank: 337
score: 99.25763298483456
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + get CaMeL Name ( ) ) ;
rank: 337
score: 99.22703450520834
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + ) ; }
rank: 337
score: 99.21022542317708
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 337
score: 99.20932006835938
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . FALSE ( $STRING$ ) ;
rank: 337
score: 99.20193045479911
patch: throw Math CaMeL Runtime CaMeL Exception Math CaMeL Exception ( $STRING$ ) ;
rank: 337
score: 99.16278545673077
patch: throw Math . min ( $NUMBER$ . 0 , p ) ;
rank: 337
score: 99.13328450520834
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ . 0 , p ) ;
rank: 337
score: 99.00011596679687
patch: throw p . get CaMeL Exception ( ) ;
rank: 338
score: 99.29280359604779
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 , epsilon ) ;
rank: 338
score: 99.22644914899554
patch: this . normal = Fast CaMeL Math . sqrt ( p ) ;
rank: 338
score: 99.20796712239583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ) ;
rank: 338
score: 99.2019271850586
patch: throw Math CaMeL Exception ( . to CaMeL String ( ) , $STRING$ ) ;
rank: 338
score: 99.13284301757812
patch: throw Math CaMeL Runtime CaMeL Exception != $NUMBER$ . 0 ;
rank: 338
score: 99.00004359654018
patch: throw super . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 339
score: 99.29195149739583
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( p ) , p ) ;
rank: 339
score: 99.23422420726104
patch: Illegal CaMeL Argument CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 339
score: 99.22635091145834
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } return p ;
rank: 339
score: 99.20157623291016
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . abs ( ) ) ;
rank: 339
score: 99.132470703125
patch: throw Math CaMeL Runtime CaMeL Exception ( String . length ( ) ) ;
rank: 339
score: 98.99969075520833
patch: throw Integer . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 340
score: 99.291259765625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( $STRING$ ) ) ;
rank: 340
score: 99.25664605034723
patch: throw Math . arraycopy ( p , Fast CaMeL Math . sqrt ( p ) ) ;
rank: 340
score: 99.23398724724265
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Exception ( $STRING$ , p ) ;
rank: 340
score: 99.22622680664062
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . p ( ) ) ; }
rank: 340
score: 99.20772298177083
patch: throw Math CaMeL Runtime CaMeL Exception String ( $STRING$ ) ;
rank: 340
score: 99.20740464154412
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 , ) ;
rank: 340
score: 99.20091663707386
patch: throw Math . Math CaMeL Exception ( $STRING$ ) ;
rank: 340
score: 99.13186645507812
patch: throw new Runtime CaMeL Exception ( 1 . 0 ) ;
rank: 340
score: 98.99939903846153
patch: throw Math . max ( p + $STRING$ , p ) ;
rank: 341
score: 99.2911376953125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . $STRING$ ) ;
rank: 341
score: 99.25655788845486
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ +
rank: 341
score: 99.23246495863971
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ + p ) ;
rank: 341
score: 99.22589518229167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ; } }
rank: 341
score: 99.20689481847427
patch: throw ( Illegal CaMeL Argument CaMeL Exception . to CaMeL String ( p ) ) ;
rank: 341
score: 99.13129069010417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , ) ;
rank: 341
score: 98.9989990234375
patch: throw new Exception Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 342
score: 99.25634765625
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 1 , $STRING$ ) ;
rank: 342
score: 99.20713177849265
patch: p = p ; normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 342
score: 99.20655732996323
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL IO CaMeL Exception ( p ) ;
rank: 342
score: 99.20035552978516
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( $STRING$ + p ) ) ;
rank: 342
score: 99.16234588623047
patch: throw Math . max ( 0 . $NUMBER$ , ( double ) p ) ;
rank: 342
score: 98.99839430588942
patch: throw throw Math . print CaMeL Stack CaMeL Trace ( ) ;
rank: 343
score: 99.29053452435662
patch: this . throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 343
score: 99.20694986979167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . intern ( ) ) ;
rank: 343
score: 99.162255859375
patch: throw Math . ) ( p + $STRING$ + p + $STRING$ ) ;
rank: 343
score: 99.13059303977273
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ ) ;
rank: 344
score: 99.29051106770834
patch: throw Math CaMeL Runtime CaMeL Exception ( p . this , p ) ;
rank: 344
score: 99.231201171875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ , p ) ;
rank: 344
score: 99.20248074001736
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 344
score: 99.16204071044922
patch: throw Math . max ( ( int ) 0 . 0 , p ) ;
rank: 344
score: 98.99710286458334
patch: throw new ) . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 345
score: 99.2556640625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + null ) ;
rank: 345
score: 99.22519155649039
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - $NUMBER$ ) ;
rank: 345
score: 99.20006510416667
patch: throw ( Math . min ( 0 . 0 , p ) ) ;
rank: 345
score: 99.199951171875
patch: throw Math CaMeL Runtime CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . ) ;
rank: 345
score: 99.1619384765625
patch: throw Math . ceil ( p + $STRING$ + p + $STRING$ ) ;
rank: 345
score: 99.1302959735577
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . $NUMBER$ ) ;
rank: 345
score: 98.9969970703125
patch: throw throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 346
score: 99.19959174262152
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . get CaMeL Name ( ) ) ;
rank: 346
score: 99.19935021033653
patch: throw Math CaMeL Runtime CaMeL Exception . append ( $STRING$ ) ;
rank: 346
score: 99.16161346435547
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + $NUMBER$ ) ;
rank: 346
score: 99.13018798828125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 + p ) ;
rank: 347
score: 99.25548502604167
patch: throw Math . arraycopy ( p , p , 0 , p ) ;
rank: 347
score: 99.22682100183823
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ , p ) ;
rank: 347
score: 99.22486877441406
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ; }
rank: 347
score: 99.1983642578125
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 347
score: 99.1978759765625
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . round ( p ) ) ;
rank: 347
score: 99.1615219116211
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + p + p ) ;
rank: 347
score: 99.12990025111607
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this , $STRING$ ) ;
rank: 347
score: 98.99656459263393
patch: throw new Exception throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 348
score: 99.25534955193015
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 , p + $STRING$ ) ;
rank: 348
score: 99.22453308105469
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Exception ( ) ) ; }
rank: 348
score: 99.19769694010417
patch: throw Math CaMeL Runtime CaMeL Exception ( new String ( $STRING$ ) ) ;
rank: 348
score: 99.1972412109375
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 348
score: 99.16107177734375
patch: throw Math . max ( 0 . 0 , ( double ) p ) ;
rank: 348
score: 99.12965745192308
patch: throw Math CaMeL Runtime CaMeL Exception ( this , $STRING$ ) ;
rank: 348
score: 98.99644368489584
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 349
score: 99.28832289751838
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . $STRING$ ) ;
rank: 349
score: 99.25533718532986
patch: throw Math . arraycopy ( p , 0 , Math . sqrt ( p ) ) ;
rank: 349
score: 99.22447102864584
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + null , p ) ;
rank: 349
score: 99.20440266927083
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . name ( ) ) ;
rank: 349
score: 99.19762420654297
patch: throw Math CaMeL Exception ( Math . abs ( 1 ) + $STRING$ ) ;
rank: 349
score: 99.16069793701172
patch: throw Math . min ( 0 . $NUMBER$ , ( int ) p ) ;
rank: 349
score: 99.12947300502232
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Integer . class ) ;
rank: 349
score: 98.99576822916667
patch: throw Math . max ( p + 0 . 1 , p ) ;
rank: 350
score: 99.2550800030048
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , true ) ;
rank: 350
score: 99.22431640625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , p ) ; }
rank: 350
score: 99.2236328125
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 ) ;
rank: 350
score: 99.202880859375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ * p ) ;
rank: 350
score: 99.19521077473958
patch: throw public Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 350
score: 99.16047014508929
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( p + $STRING$ ) ;
rank: 350
score: 99.12631661551339
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + true ) ;
rank: 350
score: 98.9954833984375
patch: throw Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 351
score: 99.28790838068181
patch: throw ( Math . sqrt ( p ) ) ;
rank: 351
score: 99.25504557291667
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . format ( $STRING$ , p ) ;
rank: 351
score: 99.22412923177083
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , null ) ; } }
rank: 351
score: 99.2230583639706
patch: throw Math CaMeL Runtime CaMeL Exception ( new Exception ( $STRING$ , p ) ) ;
rank: 351
score: 99.15949249267578
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ , 0 ) ;
rank: 351
score: 99.12591083233173
patch: throw Math CaMeL Runtime CaMeL Exception [ $NUMBER$ ] = p ;
rank: 352
score: 99.2238057454427
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ true ) ;
rank: 352
score: 99.22231876148896
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new Exception ( $STRING$ ) ) ;
rank: 352
score: 99.20263671875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } mean = p ; }
rank: 352
score: 99.19685363769531
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ + $STRING$ ) ;
rank: 352
score: 99.19070095486111
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 352
score: 99.15948893229167
patch: throw Math . min ( 0 . 0 , p + 1 ) ;
rank: 352
score: 99.1251220703125
patch: throw new Runtime CaMeL Exception ( $STRING$ , 0 . 0 ) ;
rank: 352
score: 98.99498639787946
patch: throw Math = new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 353
score: 99.2874755859375
patch: new Normal CaMeL Distribution CaMeL Impl ( Math . sqrt ( p ) ) ;
rank: 353
score: 99.25421501608456
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 , p , p ) ;
rank: 353
score: 99.22073184742646
patch: throw Math CaMeL Runtime CaMeL Exception . run ( new Exception ( $STRING$ ) ) ;
rank: 353
score: 99.20174967447916
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Pattern ( ) ) ;
rank: 353
score: 99.19621930803571
patch: throw Math CaMeL Exception ( Math . abs ( 1 ) ) ;
rank: 353
score: 99.15878530649039
patch: throw Math . max ( 0 . 0 , $NUMBER$ ) ;
rank: 354
score: 99.28739107572116
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 354
score: 99.22329711914062
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - $NUMBER$ , p ) ; }
rank: 354
score: 99.19581705729166
patch: this . ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 354
score: 99.12392578125
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ + p + $STRING$ ) ;
rank: 354
score: 98.9946797688802
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 355
score: 99.25348977481617
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p . get CaMeL Exception ( ) ;
rank: 355
score: 99.22297668457031
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ; } }
rank: 355
score: 99.19510650634766
patch: throw Math CaMeL Exception ( Math . abs ( p / $NUMBER$ ) ) ;
rank: 355
score: 99.18935259650735
patch: throw ( Math CaMeL Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 355
score: 99.15859985351562
patch: throw new Runtime CaMeL Exception ( p + $STRING$ + p + $STRING$ ) ;
rank: 355
score: 98.99466959635417
patch: throw Math = create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 356
score: 99.28698012408088
patch: throw this . Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 356
score: 99.25299750434027
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . sqrt ( p + $STRING$ ) ;
rank: 356
score: 99.22292856069711
patch: throw Math . Runtime CaMeL Exception ( p , p ) ;
rank: 356
score: 99.20091145833334
patch: throw Math . ( $STRING$ , Math . sqrt ( p ) ) ;
rank: 356
score: 99.19426727294922
patch: throw Math CaMeL Exception ( Math . max ( 0 , $NUMBER$ ) ) ;
rank: 356
score: 99.188623046875
patch: throw Math CaMeL Runtime CaMeL Exception . Verify CaMeL Error ( $STRING$ ) ;
rank: 356
score: 99.12332492404514
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 356
score: 98.99430338541667
patch: throw create CaMeL Illegal CaMeL State CaMeL Exception ( ) ;
rank: 357
score: 99.28645833333333
patch: throw new Poisson CaMeL Distribution . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 357
score: 99.2227032001202
patch: throw Math CaMeL Runtime CaMeL Exception ( p ) ; } }
rank: 357
score: 99.19423828125
patch: throw Math CaMeL Exception ( Math . Na CaMeL N , $STRING$ ) ;
rank: 357
score: 99.18731011284723
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 , $STRING$ ) ;
rank: 357
score: 99.15814615885417
patch: throw Math . max ( p , p - 1 . 0 ) ;
rank: 357
score: 98.99334309895833
patch: throw Math . max ( p , p , 0 . 1 ) ;
rank: 358
score: 99.21882847377232
patch: throw . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 358
score: 99.1578369140625
patch: throw throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 358
score: 99.12307942708334
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ) ;
rank: 358
score: 98.9931640625
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $NUMBER$ ) ;
rank: 359
score: 99.28570197610294
patch: throw new Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( epsilon ) ) ;
rank: 359
score: 99.25274299172794
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new int [ 0 ] ) ;
rank: 359
score: 99.19962310791016
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . TRUE ( $STRING$ ) ;
rank: 359
score: 99.19373321533203
patch: throw Math CaMeL Exception ( Math . abs ( $NUMBER$ ) + $STRING$ ) ;
rank: 359
score: 99.1864013671875
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 359
score: 99.1575698852539
patch: throw Math . min ( 0 . 0 , ( int ) p ) ;
rank: 359
score: 99.12253042367789
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = 0 ;
rank: 360
score: 99.19931640625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . format ( ) ) ;
rank: 360
score: 99.19342803955078
patch: throw Math CaMeL Exception ( Math . abs ( 0 . 0 ) ) ;
rank: 360
score: 99.1573486328125
patch: throw Math . max ( 0 . 0 , p + $NUMBER$ ) ;
rank: 360
score: 98.99288236177884
patch: throw new Exception Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 361
score: 99.28562298943015
patch: throw Math CaMeL Runtime CaMeL Exception ( this . this . 0 , p ) ;
rank: 361
score: 99.25145766314338
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( p + $STRING$ ) ) ;
rank: 361
score: 99.22235870361328
patch: mean = p ; normal = new Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 361
score: 99.18601481119792
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . $STRING$ ) ;
rank: 361
score: 99.15719604492188
patch: throw new Error ( $STRING$ + p + $STRING$ ) ;
rank: 361
score: 99.12210518973214
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 361
score: 98.99282004616477
patch: throw Math . max ( p , $NUMBER$ ) ;
rank: 362
score: 99.25117043887867
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + p . $STRING$ ) ;
rank: 362
score: 99.22198486328125
patch: throw Math . Runtime CaMeL Exception ( p , $STRING$ ) ; }
rank: 362
score: 99.21580595128677
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( p + $STRING$ ) ) ;
rank: 362
score: 99.192919921875
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $STRING$ , p ) ;
rank: 362
score: 99.18509928385417
patch: throw ( Illegal CaMeL Argument CaMeL Exception 1 . get CaMeL Message ( p ) ) ;
rank: 362
score: 99.12207845052083
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Integer ( ) ) ;
rank: 362
score: 98.992529296875
patch: throw Math . sleep ( p , 1 . 0 , p ) ;
rank: 363
score: 99.22172328404018
patch: throw Math . equals ( Math . sqrt ( p ) ) ;
rank: 363
score: 99.21510943244485
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . err , p ) ;
rank: 363
score: 99.19847106933594
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , epsilon ) ;
rank: 363
score: 99.19267054966518
patch: throw Math CaMeL Exception ( Math . abs ( 0 ) ) ;
rank: 363
score: 99.15716959635417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + , $STRING$ ) ;
rank: 363
score: 98.99158653846153
patch: throw Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 364
score: 99.28492024739583
patch: throw Math CaMeL Runtime CaMeL Exception ( String . 0 , p ) ;
rank: 364
score: 99.19721221923828
patch: throw Math . ( $STRING$ ) ;
rank: 364
score: 99.1926513671875
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . PI , $STRING$ ) ;
rank: 364
score: 99.18470110212054
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 364
score: 99.156982421875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + 1 ) ;
rank: 365
score: 99.22107696533203
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } normal = p ;
rank: 365
score: 99.19256184895833
patch: throw Math CaMeL Exception ( Math . random ( ) , p ) ;
rank: 365
score: 99.18418255974265
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p ) ; } mean = p ;
rank: 365
score: 99.1568603515625
patch: throw Math . min ( p + 1 , p + 1 ) ;
rank: 365
score: 99.12096296037946
patch: throw new Runtime CaMeL Exception ( p + p + $STRING$ ) ;
rank: 365
score: 98.99136555989584
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 366
score: 99.28429457720588
patch: throw ( Runtime CaMeL Exception ) new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 366
score: 99.25050455729166
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ + p ) ;
rank: 366
score: 99.21310604319854
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ) ;
rank: 366
score: 99.19230651855469
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ || p + $STRING$ ) ;
rank: 366
score: 99.1827033547794
patch: throw Math CaMeL Runtime CaMeL Exception . to CaMeL String ( $STRING$ , p ) ;
rank: 366
score: 98.9910419170673
patch: throw Math CaMeL Runtime CaMeL Exception . close ( p ) ;
rank: 367
score: 99.28421020507812
patch: throw Math CaMeL Runtime CaMeL Exception ( Double . sqrt ( p ) ) ;
rank: 367
score: 99.22032165527344
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } mean = 0 ;
rank: 367
score: 99.21288248697917
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ;
rank: 367
score: 99.19596862792969
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( double ) 0 ) ;
rank: 367
score: 99.19223022460938
patch: throw Math CaMeL Runtime CaMeL Exception Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 367
score: 99.18019612630208
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 , $NUMBER$ ) ;
rank: 367
score: 99.120263671875
patch: throw Math . value CaMeL Of ( p + 0 . 0 ) ;
rank: 367
score: 98.99086216517857
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 368
score: 99.2502082375919
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 1 . 0 , p ) ;
rank: 368
score: 99.22027994791667
patch: throw Math CaMeL Runtime CaMeL Exception ( ( $STRING$ , p ) ) ;
rank: 368
score: 99.192138671875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , p ) ;
rank: 368
score: 99.15511881510416
patch: throw Math . max ( 0 . 0 , p . length ) ;
rank: 368
score: 99.11984688895089
patch: throw new Math CaMeL Runtime CaMeL Exception ( this + $STRING$ ) ;
rank: 369
score: 99.28207058376736
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( 0 . 1 ) ) ;
rank: 369
score: 99.25016276041667
patch: throw new Runtime CaMeL Exception ( Math . sqrt ( p ) ) ;
rank: 369
score: 99.22002410888672
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new String epsilon ) ; }
rank: 369
score: 99.21212005615234
patch: throw ( Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 369
score: 99.19518280029297
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ 0 ] , $STRING$ ) ;
rank: 369
score: 99.19161783854166
patch: throw Math CaMeL Runtime CaMeL Exception . Na CaMeL N ( $STRING$ ) ;
rank: 369
score: 99.17960357666016
patch: throw ( Illegal CaMeL Argument CaMeL Exception . to CaMeL String ( ) ) ;
rank: 369
score: 99.15492600661058
patch: throw new Illegal CaMeL Argument CaMeL Exception ( + $STRING$ ) ;
rank: 369
score: 99.11968587239583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + p ) ;
rank: 370
score: 99.28134765625
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 ) ;
rank: 370
score: 99.219970703125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , - 1 ) ;
rank: 370
score: 99.21201171875
patch: throw Math CaMeL Runtime CaMeL Exception . Exception ( $STRING$ , p ) ;
rank: 370
score: 99.19097137451172
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Message ( $STRING$ ) ) ;
rank: 370
score: 99.17920860877403
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 370
score: 99.11962890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( Integer ) p ) ;
rank: 370
score: 98.99036516462054
patch: this . throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 371
score: 99.24967687270221
patch: throw Math . arraycopy ( p , 0 , mean , 0 , p ) ;
rank: 371
score: 99.21967315673828
patch: throw Math CaMeL Runtime CaMeL Exception ( ( $STRING$ , p ) ) ; }
rank: 371
score: 99.2119873046875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( null , p ) ;
rank: 371
score: 99.19474792480469
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . 0 ( p ) ;
rank: 371
score: 99.1785888671875
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 371
score: 99.15361785888672
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + $STRING$ + $NUMBER$ ) ;
rank: 371
score: 99.11871744791667
patch: throw Math CaMeL Runtime CaMeL Exception == null ? $STRING$ : p ) ;
rank: 372
score: 99.28117540147569
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ }
rank: 372
score: 99.24952697753906
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ 0 ] + $STRING$ ) ;
rank: 372
score: 99.21962890625
patch: throw Math . sqrt ( $STRING$ ) ; }
rank: 372
score: 99.21121978759766
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ) ;
rank: 372
score: 99.19446563720703
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . ( , p ) ) ;
rank: 372
score: 99.19061279296875
patch: throw Math CaMeL Exception ( Math . min ( 1 , p ) ) ;
rank: 372
score: 99.17840169270833
patch: throw Math CaMeL Runtime CaMeL Exception . Assertion CaMeL Error ( $STRING$ ) ;
rank: 372
score: 99.1184814453125
patch: throw Math . min ( 0 . 0 + p , p ) ;
rank: 372
score: 98.9888916015625
patch: throw Math . max ( 0 . 1 + p , p ) ;
rank: 373
score: 99.28101348876953
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Exception ( $STRING$ ) ) ;
rank: 373
score: 99.24946145450367
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p , $STRING$ ) ;
rank: 373
score: 99.21958821614584
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null + p ) ; }
rank: 373
score: 99.19423828125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , 0 ) ;
rank: 373
score: 99.19017791748047
patch: throw Math CaMeL Exception ( Math . abs ( p * p ) ) ;
rank: 373
score: 99.176513671875
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 373
score: 99.117919921875
patch: throw Math . value CaMeL Of ( 0 . 0 ) ;
rank: 373
score: 98.98788686899039
patch: throw Math . index CaMeL Of ( $STRING$ , p ) ;
rank: 374
score: 99.28059387207031
patch: normal = Math . sqrt ( p ) ; this . epsilon = epsilon ;
rank: 374
score: 99.21815592447916
patch: { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ; }
rank: 374
score: 99.21058872767857
patch: throw throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 374
score: 99.19013977050781
patch: throw Math CaMeL Exception ( Math . abs ( $NUMBER$ ) , p ) ;
rank: 374
score: 99.17521398207721
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 374
score: 99.15301983173077
patch: throw Math . min ( p , 0 . $NUMBER$ ) ;
rank: 374
score: 99.1177490234375
patch: throw Math CaMeL Runtime CaMeL Exception ( new Integer ( $STRING$ ) ) ;
rank: 375
score: 99.21736283735795
patch: throw Math . sqrt ( p , p ) ;
rank: 375
score: 99.20937930836396
patch: throw Math CaMeL Runtime CaMeL Exception = new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 375
score: 99.17509909237133
patch: throw ( Illegal CaMeL Argument CaMeL Exception . format ( $STRING$ , p ) ) ;
rank: 375
score: 98.98770577566964
patch: throw . create CaMeL Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 376
score: 99.27657063802083
patch: throw Math CaMeL Runtime CaMeL Exception ( p . String ( ) ) ;
rank: 376
score: 99.2485580444336
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new double [ ] { p
rank: 376
score: 99.19005584716797
patch: throw Math CaMeL Exception ( Math . abs ( 0 ) + $STRING$ ) ;
rank: 376
score: 98.98685396634616
patch: throw Math . max ( p + $NUMBER$ , p ) ;
rank: 377
score: 99.21689278738839
patch: throw Math CaMeL Runtime CaMeL Exception ( null + p ) ; }
rank: 377
score: 99.20660041360294
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , p + $STRING$ ) ;
rank: 377
score: 99.11673409598214
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 , p ) ;
rank: 378
score: 99.21680501302083
patch: mean = p ; normal = epsilon ; this . epsilon = epsilon ;
rank: 378
score: 99.20634909237133
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Exception ( $STRING$ + p ) ;
rank: 378
score: 99.19200897216797
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . substring ( 0 ) ) ;
rank: 378
score: 99.1897201538086
patch: throw Math CaMeL Exception ( Math . abs ( 1 ) , p ) ;
rank: 378
score: 99.15236002604166
patch: throw Math . min ( 0 . $NUMBER$ , p + 1 ) ;
rank: 379
score: 99.27593635110294
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 , p ) ;
rank: 379
score: 99.2057746438419
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , $STRING$ ) ;
rank: 379
score: 99.17169189453125
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 1 ) ;
rank: 379
score: 99.15140206473214
patch: throw Math . max ( p , - 1 . 0 ) ;
rank: 379
score: 99.11599496694711
patch: throw Math . value CaMeL Of ( p + $STRING$ ) ;
rank: 380
score: 99.27564239501953
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p . String ( ) ) ;
rank: 380
score: 99.21597493489584
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new $STRING$ ) ; }
rank: 380
score: 99.19107055664062
patch: throw Math . compare ( Math . sqrt ( p ) , p ) ;
rank: 380
score: 99.15108548677884
patch: throw Math . abs ( new Integer ( p ) ) ;
rank: 380
score: 99.11586216517857
patch: throw new Runtime CaMeL Exception ( 1 . 0 + p ) ;
rank: 380
score: 98.983642578125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , true ) ;
rank: 381
score: 99.27548397288604
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ . $STRING$ ) ;
rank: 381
score: 99.24584242876838
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + p . $STRING$ ) ;
rank: 381
score: 99.21586390904018
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } ) ;
rank: 381
score: 99.20515711167279
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , $NUMBER$ ) ;
rank: 381
score: 99.19042205810547
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . max ( $STRING$ ) ;
rank: 381
score: 99.18953704833984
patch: throw Math CaMeL Exception ( Math . to CaMeL String ( 1 ) ) ;
rank: 381
score: 99.15100911458333
patch: throw Math = Math . min ( p , 1 . 0 ) ;
rank: 381
score: 99.11453450520834
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . length , p ) ;
rank: 382
score: 99.27442169189453
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . Integer ( p ) ) ;
rank: 382
score: 99.21561686197917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , this ) ;
rank: 382
score: 99.18907752403847
patch: throw Math CaMeL Runtime CaMeL Exception ( null + $STRING$ ) ;
rank: 382
score: 99.16916073069854
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 382
score: 99.11448567708334
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p Exception ) ;
rank: 383
score: 99.2451171875
patch: throw Math . substring ( 0 , p ) ;
rank: 383
score: 99.21548461914062
patch: throw Math . sqrt ( $STRING$ , p ) ; }
rank: 383
score: 99.18863118489584
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ;
rank: 383
score: 99.114208984375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ + p ;
rank: 384
score: 99.27431353400735
patch: throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p
rank: 384
score: 99.24481964111328
patch: throw Math . max ( 0 , Math . sqrt ( p ) ) ;
rank: 384
score: 99.20497233072916
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;
rank: 384
score: 99.14862060546875
patch: p = 0 . 0 ; } else { p = 0 . 0 ;
rank: 385
score: 99.27419146369485
patch: throw this . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 385
score: 99.21529134114583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } break ;
rank: 385
score: 99.20317526424633
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , $NUMBER$ ) ;
rank: 385
score: 99.18775177001953
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( p + $STRING$ ) ) ;
rank: 385
score: 99.1485595703125
patch: throw Math . max ( 0 . 0 , p + 1 . ) ;
rank: 385
score: 99.11338588169643
patch: throw Math CaMeL Runtime CaMeL Exception $NUMBER$ ( $STRING$ + p ) ;
rank: 385
score: 98.98110622829861
patch: throw Math . exit ( $STRING$ ) ;
rank: 386
score: 99.2729263305664
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( 0 ) ) ;
rank: 386
score: 99.21513148716518
patch: { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 386
score: 99.18685913085938
patch: throw Math CaMeL Exception ( Math . floor ( p ) + $STRING$ ) ;
rank: 386
score: 99.1683349609375
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , Fast CaMeL Math . sqrt (
rank: 386
score: 99.1485126201923
patch: throw Math . ceil ( p + 1 . 0 ) ;
rank: 386
score: 99.11257498604911
patch: Math . max ( 0 . 0 , 0 . 0 ) ;
rank: 386
score: 98.98072228064903
patch: throw Math . round ( p , 1 . 0 ) ;
rank: 387
score: 99.21494140625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; mean = p ;
rank: 387
score: 99.20074821920956
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? p + $STRING$ : $STRING$ ) ;
rank: 387
score: 99.18636380709134
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ;
rank: 387
score: 99.185546875
patch: throw Math . p ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 387
score: 99.14792104867789
patch: throw Math . round ( p + 1 . 0 ) ;
rank: 387
score: 98.97992498224431
patch: throw Math . max ( p , null ) ;
rank: 388
score: 99.20065487132354
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , 0 ) ;
rank: 388
score: 99.18610026041667
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ;
rank: 388
score: 99.18544108072916
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Runtime ( ) ) ;
rank: 388
score: 99.16515299479167
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 388
score: 99.11208871694711
patch: throw Math CaMeL Runtime CaMeL Exception [ 1 ] = p ;
rank: 388
score: 98.97948201497395
patch: throw p . print CaMeL Stack CaMeL Trace ( ) ;
rank: 389
score: 99.27205403645833
patch: throw Math CaMeL Runtime CaMeL Exception ( this . $STRING$ , p ) ;
rank: 389
score: 99.24257525275735
patch: throw Math CaMeL Runtime CaMeL Exception ( p == null ? $STRING$ : p ) ;
rank: 389
score: 99.20056870404412
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ , p ) ;
rank: 389
score: 99.1853515625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 , p ) ;
rank: 389
score: 99.147021484375
patch: throw Math . min ( 0 . $NUMBER$ , $NUMBER$ . 0 ) ;
rank: 389
score: 99.11185709635417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 ) ;
rank: 390
score: 99.21371895926339
patch: mean = p . Fast CaMeL Math . sqrt ( p ) ;
rank: 390
score: 99.2004150390625
patch: throw ( Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 390
score: 99.1857177734375
patch: throw Math . Runtime CaMeL Exception ( Math . PI , $STRING$ ) ;
rank: 390
score: 99.11155482700893
patch: throw new Math CaMeL Runtime CaMeL Exception ( $NUMBER$ + p ) ;
rank: 390
score: 98.97824331430289
patch: throw Illegal CaMeL State CaMeL Exception ( $STRING$ , p ) ;
rank: 391
score: 99.213671875
patch: throw Math CaMeL Runtime CaMeL Exception ( ( String ) p ) ; }
rank: 391
score: 99.2003925030048
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 391
score: 99.18404947916666
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ != 0 . 0 ) ;
rank: 391
score: 99.16370346966912
patch: throw ( Illegal CaMeL Argument CaMeL Exception . format ( p , p ) ) ;
rank: 391
score: 99.14644949776786
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ + $STRING$ ) ;
rank: 391
score: 99.11107526506696
patch: throw new Math CaMeL Runtime CaMeL Exception ( this + p ) ;
rank: 391
score: 98.97795758928571
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , $NUMBER$ ) ;
rank: 392
score: 99.24241536458334
patch: throw ( Math . max ( 0 . 0 , p ) ) ;
rank: 392
score: 99.20021685431985
patch: throw Math CaMeL Runtime CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 392
score: 99.18491432883523
patch: throw Math CaMeL Exception ( $STRING$ , p ) ;
rank: 392
score: 99.1829833984375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + ) ;
rank: 392
score: 99.16343688964844
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 392
score: 99.11073404947916
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; *
rank: 392
score: 98.97685895647321
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + 1 ) ;
rank: 393
score: 99.2131591796875
patch: throw Math . Runtime CaMeL Exception ( to CaMeL String ( ) ) ;
rank: 393
score: 99.1999870749081
patch: warn ( $STRING$ ) ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 393
score: 99.1843731219952
patch: throw Math CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 393
score: 99.16277717141544
patch: throw Math CaMeL Runtime CaMeL Exception . interrupt ( ) ; } mean = p ;
rank: 393
score: 99.14469401041667
patch: throw Math . max ( 0 . 0 , 0 . 1 ) ;
rank: 393
score: 99.11031087239583
patch: throw Math . max ( 0 . 0 , p , 0 ) ;
rank: 393
score: 98.9765625
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( p + p ) ;
rank: 394
score: 99.27013142903645
patch: this . p = Math . sqrt ( p ) ;
rank: 394
score: 99.21213942307692
patch: mean = p ; normal = p ; normal = p ;
rank: 394
score: 99.19989372702206
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( p + $STRING$ ) ) ;
rank: 394
score: 99.18409220377605
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( p ) ;
rank: 394
score: 99.16172688802084
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ) ;
rank: 394
score: 99.11013793945312
patch: throw Math CaMeL Runtime CaMeL Exception $NUMBER$ ( $STRING$ ) ;
rank: 394
score: 98.97642164963942
patch: throw ( Illegal CaMeL State CaMeL Exception ( $STRING$ ) ) ;
rank: 395
score: 99.24077962239583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p == 0 ) ;
rank: 395
score: 99.2119140625
patch: throw Math CaMeL Runtime CaMeL Exception ( + $STRING$ ) ;
rank: 395
score: 99.18120930989583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 , $STRING$ ) ;
rank: 395
score: 99.14356994628906
patch: p = 1 . 0 ; } else { p = 1 . 0 ;
rank: 395
score: 99.110009765625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; return p ;
rank: 395
score: 98.97587890625
patch: throw Math . abs ( p , p , 1 . 0 ) ;
rank: 396
score: 99.26897834329044
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Runtime ( ) , p ) ;
rank: 396
score: 99.24060872395833
patch: throw Math . arraycopy ( mean , p , 0 , p ) ;
rank: 396
score: 99.21140950520834
patch: throw Math CaMeL Runtime CaMeL Exception ( null , $STRING$ ) ; } }
rank: 396
score: 99.1993767233456
patch: throw Math CaMeL Runtime CaMeL Exception ( new Exception ( $STRING$ ) , p ) ;
rank: 396
score: 99.18170572916667
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ p + $STRING$ ) ;
rank: 396
score: 99.1615851907169
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 396
score: 99.14281287560097
patch: throw new Null CaMeL Pointer CaMeL Exception ( , $STRING$ ) ;
rank: 396
score: 98.97564697265625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , 1 ) ;
rank: 397
score: 99.2687255859375
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . epsilon , p ) ;
rank: 397
score: 99.21127755301339
patch: Math . sqrt ( Math . sqrt ( p ) ) ; }
rank: 397
score: 99.19875201056985
patch: throw Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Class ( ) ) ;
rank: 397
score: 99.14269205729167
patch: throw Math . max ( p + 1 . 0 , $STRING$ ) ;
rank: 397
score: 99.109423828125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , , p ) ;
rank: 397
score: 98.97533240685097
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , ) ;
rank: 398
score: 99.26869303385416
patch: throw Math CaMeL Runtime CaMeL Exception ( this . p , p ) ;
rank: 398
score: 99.2398681640625
patch: throw new Runtime CaMeL Exception ( p . get CaMeL Name ( ) ) ;
rank: 398
score: 99.21046799879808
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 1 ) ;
rank: 398
score: 99.19817038143383
patch: throw Math ; } throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 398
score: 99.17996215820312
patch: throw Math CaMeL Exception ( new Null CaMeL Pointer CaMeL Exception ( ) ) ;
rank: 398
score: 99.15965169270834
patch: throw ( Math . min ( p , 0 . 1 ) ) ;
rank: 398
score: 99.14190266927083
patch: throw Math = Math . max ( p , 0 . 0 ) ;
rank: 398
score: 99.10892159598214
patch: throw new Math CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 398
score: 98.97508021763393
patch: throw Math CaMeL Runtime CaMeL Exception = new Exception ( p ) ;
rank: 399
score: 99.20984700520833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ; }
rank: 399
score: 99.18033040364584
patch: throw Math CaMeL Runtime CaMeL Exception ( null + p , $STRING$ ) ;
rank: 399
score: 99.17970493861607
patch: throw Math CaMeL Exception ( Math . floor ( p ) ) ;
rank: 399
score: 99.15925867417279
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Message ( $STRING$ ) ) ;
rank: 399
score: 99.14168294270833
patch: throw Math . max ( 0 . 0 , 0 . $NUMBER$ ) ;
rank: 399
score: 99.1085205078125
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( 1 . 0 ) ;
rank: 399
score: 98.9745205965909
patch: throw Math . abs ( p , $STRING$ ) ;
rank: 400
score: 99.26814270019531
patch: mean = 0 ; } throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 400
score: 99.2093505859375
patch: throw Math CaMeL Runtime CaMeL Exception ( ( String ) p ) ;
rank: 400
score: 99.17850748697917
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( String ) null ) ;
rank: 400
score: 99.14152018229167
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ) ; }
rank: 400
score: 99.10839029947917
patch: throw Math CaMeL Runtime CaMeL Exception ( this , $STRING$ + p ) ;
rank: 400
score: 98.9734375
patch: throw Math . abs ( p , p , 0 . 0 ) ;
rank: 401
score: 99.26809512867646
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 401
score: 99.17838228665866
patch: throw Math CaMeL Exception ( Math . PI , $STRING$ ) ;
rank: 401
score: 99.10794270833334
patch: throw Math CaMeL Runtime CaMeL Exception ( name + $STRING$ + p ) ;
rank: 401
score: 98.973095703125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p ) ; }
rank: 402
score: 99.2680305032169
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , $NUMBER$ , p ) ;
rank: 402
score: 99.2382061298077
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + true ) ;
rank: 402
score: 99.20901692708334
patch: throw Math . Runtime CaMeL Exception . get CaMeL Exception ( $STRING$ ) ;
rank: 402
score: 99.19611672794117
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ? p + $STRING$ : $STRING$ ) ;
rank: 402
score: 99.17921799879808
patch: throw Math = Math . sqrt ( 0 . 0 ) ;
rank: 402
score: 99.15574017693015
patch: throw Math CaMeL Runtime CaMeL Exception new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 402
score: 99.1407940204327
patch: throw Math . err . to CaMeL String ( $STRING$ ) ;
rank: 403
score: 99.2679443359375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Long . sqrt ( p ) ) ;
rank: 403
score: 99.20888671875
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p ) ; } }
rank: 403
score: 99.1960808249081
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . out , p ) ;
rank: 403
score: 99.1542236328125
patch: result = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 403
score: 99.14043317522321
patch: throw Math . min ( p , - 1 . 0 ) ;
rank: 403
score: 99.10655866350446
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name , $STRING$ ) ;
rank: 403
score: 98.97254289899554
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Exception ( ) ;
rank: 404
score: 99.20803598257211
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 1 ) ;
rank: 404
score: 99.19563562729779
patch: throw Math CaMeL Runtime CaMeL Exception throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 404
score: 99.15301154641544
patch: { throw Math CaMeL Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 404
score: 99.13942307692308
patch: throw Math . max ( p , 0 . $NUMBER$ ) ;
rank: 404
score: 98.9725341796875
patch: throw Math . create CaMeL Illegal CaMeL State CaMeL Exception ( ) ;
rank: 405
score: 99.2667236328125
patch: this . p = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 405
score: 99.17850748697917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 . 1 ) ;
rank: 405
score: 99.17584228515625
patch: throw Math CaMeL Exception ( Math . max ( $NUMBER$ , p ) ) ;
rank: 405
score: 99.15174057904412
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 405
score: 99.13929036458333
patch: throw Math . max ( 0 . 0 , p - 1 ) ;
rank: 405
score: 99.10585123697916
patch: throw Math CaMeL Runtime CaMeL Exception ( this + $STRING$ + p ) ;
rank: 406
score: 99.20764973958333
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 406
score: 99.1781494140625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 , 0 ) ;
rank: 406
score: 99.13831505408653
patch: throw Math . max ( $STRING$ , 0 . 0 ) ;
rank: 406
score: 98.97117396763393
patch: throw Math . round ( Math . min ( p ) ) ;
rank: 407
score: 99.2064208984375
patch: mean = p ; normal = epsilon ; normal = epsilon ;
rank: 407
score: 99.177783203125
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Type ( ) ) ;
rank: 407
score: 99.17501831054688
patch: throw Math . Runtime CaMeL Exception ( Math . round ( p ) ) ;
rank: 408
score: 99.26579733455883
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 , 0 ) ;
rank: 408
score: 99.20571463448661
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } ;
rank: 408
score: 99.19145651424633
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( new Integer ( p ) ) ;
rank: 408
score: 99.17728678385417
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ) ;
rank: 408
score: 99.173388671875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( ) + $STRING$ ) ;
rank: 408
score: 99.13762555803571
patch: throw Math . min ( - 1 . 0 , p ) ;
rank: 408
score: 99.10541178385417
patch: throw Math CaMeL Runtime CaMeL Exception ( p + 1 . 0 ) ;
rank: 408
score: 98.97086007254464
patch: throw new Math CaMeL Exception ( $STRING$ + p , $STRING$ ) ;
rank: 409
score: 99.26545933314732
patch: throw new Math CaMeL Runtime CaMeL Exception ( p , p ) ;
rank: 409
score: 99.23582548253677
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 . $NUMBER$ , p ) ;
rank: 409
score: 99.20568033854167
patch: throw Math CaMeL Runtime CaMeL Exception . substring ( p , p ) ;
rank: 409
score: 99.17703012319711
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == 0 ) ;
rank: 409
score: 99.17311197916666
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . floor ( ) ) ;
rank: 409
score: 99.15054086538461
patch: throw new public Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 409
score: 99.13720703125
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + p ) ;
rank: 409
score: 99.10478864397321
patch: throw Math CaMeL Runtime CaMeL Exception == null ? $STRING$ : p ;
rank: 409
score: 98.97040201822917
patch: throw Math . max ( p , p + 0 . 0 ) ;
rank: 410
score: 99.26544548483456
patch: throw ( Runtime CaMeL Exception ) new Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 410
score: 99.20522238991477
patch: throw Math CaMeL Runtime CaMeL Exception ( true ) ;
rank: 410
score: 99.17655436197917
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Properties ( ) ) ;
rank: 410
score: 99.17264556884766
patch: throw Math CaMeL Exception ( Math . abs ( 0 ) , $STRING$ ) ;
rank: 410
score: 99.15038299560547
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 410
score: 99.1363037109375
patch: throw Math . max ( $NUMBER$ , p + 1 . 0 ) ;
rank: 410
score: 99.104541015625
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( name , p ) ;
rank: 411
score: 99.26459817325367
patch: throw Math . err . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 411
score: 99.20518275669643
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null , $STRING$ ) ;
rank: 411
score: 99.17655181884766
patch: throw Math . ( $STRING$ . get CaMeL Message ( ) , p ) ;
rank: 411
score: 99.13599571814903
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + ) ;
rank: 411
score: 99.10390061598558
patch: throw Math . max ( 0 . 0 + p ) ;
rank: 411
score: 98.969970703125
patch: throw Math . abs ( Math . min ( p ) ) ;
rank: 412
score: 99.26420084635417
patch: throw ( create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 412
score: 99.2349853515625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 0 . $NUMBER$ , p ) ;
rank: 412
score: 99.205078125
patch: throw Math CaMeL Runtime CaMeL Exception ( ) ; }
rank: 412
score: 99.1494499655331
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 412
score: 99.13541666666667
patch: throw Math . abs ( new Integer ( 0 . 0 ) ) ;
rank: 412
score: 99.1038309733073
patch: throw new Runtime CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 413
score: 99.26417451746323
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p , 0 ) ;
rank: 413
score: 99.20493861607143
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , - $NUMBER$ ) ;
rank: 413
score: 99.1893310546875
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , 0 ) ;
rank: 413
score: 99.14867446001838
patch: throw ( Math . min ( 0 . 0 , 0 . 0 ) ) ;
rank: 413
score: 99.13529750279018
patch: throw new Number CaMeL Format CaMeL Exception ( p + $STRING$ ) ;
rank: 413
score: 99.10344587053571
patch: throw new Runtime CaMeL Exception ( $STRING$ + p , p ) ;
rank: 414
score: 99.23456280048077
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , name ) ;
rank: 414
score: 99.18834731158088
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new Exception ( $STRING$ ) ) ;
rank: 414
score: 99.17167663574219
patch: throw Math CaMeL Exception ( Math . format ( $STRING$ ) , p ) ;
rank: 414
score: 99.14790852864583
patch: attribute = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 414
score: 99.13492024739584
patch: throw Math . max ( 0 . $NUMBER$ , p + $NUMBER$ ) ;
rank: 414
score: 98.96932779947916
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + p , ) ;
rank: 415
score: 99.26364135742188
patch: throw Poisson CaMeL Distribution . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 415
score: 99.23448079427084
patch: new Normal CaMeL Distribution CaMeL Impl ( p , max CaMeL Iterations ) ;
rank: 415
score: 99.20452880859375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null , p ) ;
rank: 415
score: 99.14777688419117
patch: throw ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( p ) ) ;
rank: 415
score: 99.13490397135416
patch: throw Math . round ( new Double ( 0 . 0 ) ) ;
rank: 415
score: 99.10259540264423
patch: throw Math . max ( 0 , 0 . 0 ) ;
rank: 415
score: 98.96788441051136
patch: throw Math . min ( p , 0 ) ;
rank: 416
score: 99.26185518152573
patch: this . throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 416
score: 99.20414225260417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null ) ;
rank: 416
score: 99.14741785386029
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 416
score: 99.1346923828125
patch: throw throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 416
score: 99.10255650111607
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ + p ) ;
rank: 416
score: 98.96785794771634
patch: throw , new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 417
score: 99.26173909505208
patch: this . normal = Math . sqrt ( p ) ;
rank: 417
score: 99.23418426513672
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ; }
rank: 417
score: 99.14649873621323
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 417
score: 99.13429612379808
patch: throw Math . max ( 0 . $NUMBER$ , $STRING$ ) ;
rank: 418
score: 99.26136016845703
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( $NUMBER$ ) ) ;
rank: 418
score: 99.23379281850961
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . class ) ;
rank: 418
score: 99.20406901041666
patch: mean = p ; normal = null ; this . normal = epsilon ;
rank: 418
score: 99.17232840401786
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , ) ;
rank: 418
score: 99.17120768229167
patch: throw Math CaMeL Runtime CaMeL Exception . new CaMeL Instance ( $STRING$ ) ;
rank: 418
score: 99.13414713541667
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ; ;
rank: 418
score: 99.10068359375
patch: throw Math CaMeL Runtime CaMeL Exception ( p + p , $STRING$ ) ;
rank: 418
score: 98.96597493489584
patch: throw Math CaMeL Runtime CaMeL Exception = Math . p ( p ) ;
rank: 419
score: 99.26134440104167
patch: throw Math CaMeL Runtime CaMeL Exception ( p . this . $STRING$ ) ;
rank: 419
score: 99.23354867788461
patch: throw ( Math . min ( 0 , p ) ) ;
rank: 419
score: 99.2033935546875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , $STRING$ , p ) ;
rank: 419
score: 99.1854019165039
patch: throw ( Runtime CaMeL Exception ) throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 419
score: 99.17104666573661
patch: throw Math CaMeL Exception ( . 0 , p + $STRING$ ) ;
rank: 419
score: 99.14480794270834
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( $STRING$ , p ) ;
rank: 419
score: 99.13396809895833
patch: throw Math . min ( $NUMBER$ . 0 , 0 . 0 ) ;
rank: 419
score: 99.10020228794643
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . value ) ;
rank: 419
score: 98.96559495192308
patch: throw Math . max ( p + $STRING$ + p ) ;
rank: 420
score: 99.20332845052083
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ false ) ;
rank: 420
score: 99.17210036057692
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ . 0 ) ;
rank: 420
score: 99.17100172776442
patch: throw Math . Math CaMeL Exception ( $STRING$ + p ) ;
rank: 420
score: 99.13394368489584
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , p + $STRING$ ) ;
rank: 420
score: 99.10011509486607
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; * /
rank: 420
score: 98.9654208096591
patch: throw Math . append ( p , p ) ;
rank: 421
score: 99.26038536658653
patch: throw Math CaMeL Runtime CaMeL Exception ( this . p ) ;
rank: 421
score: 99.20329938616071
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 421
score: 99.17116135817308
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , value ) ;
rank: 421
score: 99.16909555288461
patch: throw Math CaMeL Exception ( Math . PI , p ) ;
rank: 421
score: 99.14438045726104
patch: throw Math CaMeL Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 421
score: 99.13374546595982
patch: throw Math . floor ( Math . abs ( p ) ) ;
rank: 421
score: 99.09953962053571
patch: throw new Runtime CaMeL Exception ( $STRING$ , 1 . 0 ) ;
rank: 421
score: 98.9653789813702
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 422
score: 99.20328776041667
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( null , $STRING$ ) ;
rank: 422
score: 99.18414665670956
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ , ) ;
rank: 422
score: 99.17101287841797
patch: if ( p <= 0 ) { throw Math . sqrt ( $STRING$ ) ;
rank: 422
score: 99.14339192708333
patch: library = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 422
score: 99.13191731770833
patch: throw Math = Math . max ( 0 . $NUMBER$ , p ) ;
rank: 422
score: 99.09950608473558
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 422
score: 98.9652099609375
patch: throw Math . max ( 0 , 0 ) ;
rank: 423
score: 99.25869750976562
patch: Math CaMeL Runtime CaMeL Exception throw Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 423
score: 99.23123931884766
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ;
rank: 423
score: 99.20309012276786
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 ) ; }
rank: 423
score: 99.18406767003677
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , get CaMeL Class ( ) ) ;
rank: 423
score: 99.17080078125
patch: throw Math CaMeL Runtime CaMeL Exception ( String . p ( ) ) ;
rank: 423
score: 99.16853841145833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( double ) p ) ;
rank: 423
score: 99.14315359933036
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , false ) ;
rank: 423
score: 99.13160196940105
patch: throw Math . err . to CaMeL String ( ) ;
rank: 423
score: 98.965087890625
patch: throw Math . max ( 0 , p , p ) ;
rank: 424
score: 99.25861358642578
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( $STRING$ ) ) ;
rank: 424
score: 99.23110961914062
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new String ( ) ) ;
rank: 424
score: 99.17039388020834
patch: throw Math CaMeL Runtime CaMeL Exception ( System . class , $STRING$ ) ;
rank: 424
score: 99.142724609375
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 424
score: 99.13091169084821
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + null ) ;
rank: 424
score: 99.09922438401442
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = ) ;
rank: 424
score: 98.96494704026442
patch: throw Math . max ( 0 , 1 . 0 ) ;
rank: 425
score: 99.20276692708333
patch: mean = Fast CaMeL Math . sqrt ( p , p ) ; }
rank: 425
score: 99.18212890625
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p + $STRING$ + p ;
rank: 425
score: 99.1671142578125
patch: throw Math . Runtime CaMeL Exception ( Math . PI , p ) ;
rank: 425
score: 99.13008626302083
patch: throw Math . to CaMeL String ( $STRING$ + p + $STRING$ ) ;
rank: 425
score: 99.09913987379808
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 425
score: 98.96370755709134
patch: throw Math . sleep ( p , 0 . 1 ) ;
rank: 426
score: 99.25837707519531
patch: mean = 0 ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 426
score: 99.1818618774414
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , $NUMBER$ ) ;
rank: 426
score: 99.17013346354166
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 + p ) ;
rank: 426
score: 99.14232680376838
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( 0 . 0 , p ) ;
rank: 426
score: 99.12986653645834
patch: throw Math . Runtime CaMeL Exception ( get CaMeL Class ( ) ) ;
rank: 426
score: 99.09822300502232
patch: throw ( new Illegal CaMeL Argument CaMeL Exception ( p ) ) ;
rank: 426
score: 98.96255929129464
patch: throw throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 427
score: 99.25779622395834
patch: throw err . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 427
score: 99.22999790736607
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ true + p ) ;
rank: 427
score: 99.16985677083333
patch: throw Math CaMeL Runtime CaMeL Exception ( System . p ( ) ) ;
rank: 427
score: 99.16702270507812
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;
rank: 427
score: 99.12945149739583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ;
rank: 427
score: 99.0975341796875
patch: throw Math . value CaMeL Of ( $STRING$ ) ;
rank: 427
score: 98.96213600852273
patch: throw Math . exit ( $STRING$ , p ) ;
rank: 428
score: 99.20177408854167
patch: Math . sqrt ( Math . sqrt ( p , p ) ) ;
rank: 428
score: 99.18151137408088
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ , p ) ;
rank: 428
score: 99.1664810180664
patch: throw Math CaMeL Runtime CaMeL Exception Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 428
score: 99.13931978665866
patch: { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 428
score: 98.96083286830357
patch: try { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 429
score: 99.20149739583333
patch: mean = p ; normal = Math . sqrt ( p ) ; }
rank: 429
score: 99.18065688189338
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ;
rank: 429
score: 99.16859537760416
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p . null ) ;
rank: 429
score: 99.16586739676339
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ( ) ) ;
rank: 429
score: 99.13780302159927
patch: result = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 429
score: 99.129150390625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p 1 ) ;
rank: 429
score: 99.0953369140625
patch: throw new Runtime CaMeL Exception ( this , $STRING$ ) ;
rank: 429
score: 98.96015276227679
patch: throw throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 430
score: 99.2572509765625
patch: this . p = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 430
score: 99.228955078125
patch: throw Math CaMeL Runtime CaMeL Exception ( p . class , $STRING$ ) ;
rank: 430
score: 99.18046300551471
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . class , p ) ;
rank: 430
score: 99.16857147216797
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . mean ( p ) ;
rank: 430
score: 99.16558837890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } p = p ;
rank: 430
score: 99.13746995192308
patch: throw Math CaMeL Runtime CaMeL Exception . normal ( $STRING$ ) ;
rank: 430
score: 99.12911283052884
patch: throw Math . max ( 0 . 0 , 0 ) ;
rank: 430
score: 99.09532752403847
patch: throw Math . value CaMeL Of ( p , p ) ;
rank: 430
score: 98.95998910757211
patch: throw Math . max ( $NUMBER$ + p , p ) ;
rank: 431
score: 99.25660807291666
patch: mean = 0 ; throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 431
score: 99.22894287109375
patch: throw new Runtime CaMeL Exception ( $STRING$ . get CaMeL Class ( ) ) ;
rank: 431
score: 99.18012551700367
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( Integer ) p ) ;
rank: 431
score: 99.16462925502232
patch: throw new Null CaMeL Pointer CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 431
score: 99.09506225585938
patch: throw new Runtime CaMeL Exception ( $NUMBER$ , p ) ;
rank: 431
score: 98.95994984019886
patch: throw Math . min ( $STRING$ , p ) ;
rank: 432
score: 99.25641228170956
patch: throw Math CaMeL Runtime CaMeL Exception ( p . $STRING$ , p . $STRING$ ) ;
rank: 432
score: 99.1675537109375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . length ( ) ) ;
rank: 432
score: 99.16436767578125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ;
rank: 432
score: 99.13566320082721
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 432
score: 99.128515625
patch: throw Math . max ( p + 1 , p + 1 ) ;
rank: 432
score: 99.09432279146634
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; *
rank: 433
score: 99.25634765625
patch: throw Math CaMeL Runtime CaMeL Exception ( p . 0 , p ) ;
rank: 433
score: 99.20071847098214
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + this ) ; }
rank: 433
score: 99.17975930606617
patch: throw ( Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 433
score: 99.16741943359375
patch: mean = Fast CaMeL Math . sqrt ( p ) ; epsilon = epsilon ;
rank: 433
score: 99.16436360677083
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( ) ) ;
rank: 433
score: 99.09282575334821
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - p ) ;
rank: 434
score: 99.25596708409927
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . 1 ( p ) ) ;
rank: 434
score: 99.20057024274554
patch: mean = p ; Fast CaMeL Math . sqrt ( p ) ;
rank: 434
score: 99.1673916903409
patch: throw Math . to CaMeL String ( $STRING$ ) ;
rank: 434
score: 99.16147286551339
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 + $STRING$ ) ;
rank: 434
score: 99.09245082310268
patch: throw new Runtime CaMeL Exception ( this , $STRING$ + p ) ;
rank: 435
score: 99.25557215073529
patch: this . mean = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 435
score: 99.2282485961914
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ , p , p ) ;
rank: 435
score: 99.20056966145833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( String ) p ) ;
rank: 435
score: 99.17938591452206
patch: throw Math CaMeL Runtime CaMeL Exception throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 435
score: 99.16729329427083
patch: mean = ( int ) Fast CaMeL Math . sqrt ( p ) ;
rank: 435
score: 99.13443196614584
patch: minor = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 435
score: 99.0919189453125
patch: throw Math . min ( 0 . 0 , p , $NUMBER$ ) ;
rank: 435
score: 98.95903669084821
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p + ) ;
rank: 436
score: 99.200390625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , $NUMBER$ ) ;
rank: 436
score: 99.17887609145221
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , p ) ;
rank: 436
score: 99.16004943847656
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } this . ) ;
rank: 436
score: 99.12699381510417
patch: throw Math = Math . max ( p , $NUMBER$ . 0 ) ;
rank: 436
score: 99.09168352399554
patch: throw new Runtime CaMeL Exception ( 0 . $NUMBER$ , p ) ;
rank: 437
score: 99.2281723022461
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , new int [ ] { p
rank: 437
score: 99.20009765625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ,
rank: 437
score: 99.17827606201172
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , Math . err ) ;
rank: 437
score: 99.134375
patch: expr = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 437
score: 99.12684733072916
patch: throw Math . max ( 0 . $NUMBER$ , this . p ) ;
rank: 437
score: 99.09115164620536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , false ) ;
rank: 437
score: 98.95864633413461
patch: throw Math . abs ( p , $NUMBER$ . 0 ) ;
rank: 438
score: 99.20005696614584
patch: throw Math CaMeL Runtime CaMeL Exception ( p , p , p ) ;
rank: 438
score: 99.16625162760417
patch: p = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 438
score: 99.15852355957031
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } this . ;
rank: 438
score: 99.13394869290866
patch: throw new Illegal CaMeL Argument CaMeL Exception 1 ( $STRING$ ) ;
rank: 438
score: 99.1263671875
patch: throw Math . Runtime CaMeL Exception ( p + $STRING$ , p ) ;
rank: 438
score: 98.95841471354167
patch: throw Math CaMeL Runtime CaMeL Exception = new Math CaMeL Exception ( ) ;
rank: 439
score: 99.25330307904412
patch: mean = 0 ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 439
score: 99.19858022836539
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , false ) ;
rank: 439
score: 99.15753580729167
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . clone ( ) ) ;
rank: 439
score: 99.126220703125
patch: throw Math . max ( 1 . $NUMBER$ , p ) ;
rank: 439
score: 99.09048897879464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + p ) ;
rank: 439
score: 98.9583270733173
patch: throw Math CaMeL Exception . Math CaMeL Exception ( $STRING$ ) ;
rank: 440
score: 99.252294921875
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( ) ) ;
rank: 440
score: 99.22699381510417
patch: throw Math CaMeL Runtime CaMeL Exception ( null , p + p ) ;
rank: 440
score: 99.19849446614583
patch: throw Math . sqrt ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 440
score: 99.17748151506696
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ;
rank: 440
score: 99.15531412760417
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $STRING$ , $STRING$ ) ;
rank: 440
score: 99.13341471354167
patch: ret = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 440
score: 99.08999633789062
patch: throw new Runtime CaMeL Exception ( p + p ) ;
rank: 440
score: 98.9578857421875
patch: throw Math CaMeL Runtime CaMeL Exception . append ( p ) ;
rank: 441
score: 99.25214385986328
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( ( double ) p ) ;
rank: 441
score: 99.17730353860294
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 , p ) ;
rank: 441
score: 99.13248443603516
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . 0 , p ) ;
rank: 441
score: 99.1246826171875
patch: throw Math . max ( 0 . $NUMBER$ , 0 . 1 ) ;
rank: 441
score: 98.95765380859375
patch: throw p . to CaMeL String ( ) ;
rank: 442
score: 99.25204647288604
patch: throw ( Math CaMeL Runtime CaMeL Exception ) new Runtime CaMeL Exception ( p ) ;
rank: 442
score: 99.22584443933823
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , epsilon ) ;
rank: 442
score: 99.19632161458334
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new
rank: 442
score: 99.17677217371323
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + p ) ;
rank: 442
score: 99.15498046875
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p + p ) ;
rank: 442
score: 99.12401529947917
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + - 1 ) ;
rank: 443
score: 99.25204264322916
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . this . $STRING$ ) ;
rank: 443
score: 99.19612943209134
patch: throw new Runtime CaMeL Exception ( $STRING$ + p ) ; }
rank: 443
score: 99.16455078125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , this ) ;
rank: 443
score: 99.15437316894531
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ;
rank: 443
score: 99.1320556640625
patch: re = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 443
score: 99.12389197716347
patch: throw Math . min ( $STRING$ , 0 . 0 ) ;
rank: 443
score: 99.08842250279018
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this , p ) ;
rank: 444
score: 99.25201822916667
patch: throw Math . Runtime CaMeL Exception ( this . this . $STRING$ ) ;
rank: 444
score: 99.1955096905048
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ) ; }
rank: 444
score: 99.17631022135417
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 444
score: 99.12357271634616
patch: return Math . max ( 0 . $NUMBER$ , p ) ;
rank: 444
score: 99.08798014322916
patch: throw Math CaMeL Runtime CaMeL Exception . substring ( 0 , p ) ;
rank: 444
score: 98.95702185997597
patch: throw Math . max ( p , p , 0 ) ;
rank: 445
score: 99.25185259650735
patch: throw this . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 445
score: 99.22506713867188
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ( double ) epsilon ) ;
rank: 445
score: 99.19461763822116
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; else {
rank: 445
score: 99.15354817708334
patch: throw Math CaMeL Exception ( Math . abs ( - p ) ) ;
rank: 445
score: 99.12942270132211
patch: throw new Illegal CaMeL Argument CaMeL Exception String ( $STRING$ ) ;
rank: 445
score: 98.95693734975961
patch: throw Math . abs ( p , 1 . 1 ) ;
rank: 446
score: 99.25034466911765
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , p , 0 ) ;
rank: 446
score: 99.17542221966912
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ( new Exception ( $STRING$ ) ) ;
rank: 446
score: 99.1632308959961
patch: p = Fast CaMeL Math . sqrt ( p ) ; normal = null ;
rank: 446
score: 99.15345865885416
patch: throw new Math CaMeL Exception ( Math . abs ( p ) ) ;
rank: 446
score: 99.12940889246323
patch: ret = new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 446
score: 99.12252604166666
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + p + ) ;
rank: 446
score: 99.08784702845982
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ . $NUMBER$ ) ;
rank: 446
score: 98.9550030048077
patch: throw Math . round ( p , 0 . 1 ) ;
rank: 447
score: 99.25028991699219
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . sqrt ( epsilon ) ) ;
rank: 447
score: 99.19359537760417
patch: Math . sqrt ( p , Math . sqrt ( p ) ) ;
rank: 447
score: 99.17451477050781
patch: throw new Runtime CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 447
score: 99.16240234375
patch: throw Math CaMeL Runtime CaMeL Exception ( log , $STRING$ , p ) ;
rank: 447
score: 99.15314127604167
patch: throw Math CaMeL Exception ( Math . abs ( p ) ) ; }
rank: 447
score: 99.12935093470982
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . err ) ;
rank: 447
score: 99.12211100260417
patch: throw Math . min ( new Integer ( p ) , p ) ;
rank: 447
score: 99.08773367745536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 , p ) ;
rank: 447
score: 98.95457240513393
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + p ) ;
rank: 448
score: 99.24966866629464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . p ) ;
rank: 448
score: 99.19352213541667
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ; } }
rank: 448
score: 99.15301106770833
patch: throw Math CaMeL Runtime CaMeL Exception ( new Integer ( 1 ) ) ;
rank: 448
score: 99.12915852864583
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Message ( p ) ;
rank: 448
score: 99.12205153245192
patch: return Math . max ( p , 1 . 0 ) ;
rank: 448
score: 99.08771158854167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + $NUMBER$ ) ;
rank: 448
score: 98.954345703125
patch: throw Math . max ( p , p + 1 ) ;
rank: 449
score: 99.22373860677084
patch: throw Math . out ( $STRING$ . to CaMeL String ( ) ) ;
rank: 449
score: 99.17355782645089
patch: throw throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 449
score: 99.12177385602679
patch: throw new Illegal CaMeL Argument CaMeL Exception ( value + $STRING$ ) ;
rank: 449
score: 99.08724271334134
patch: throw Math . p ( 0 . 0 , p ) ;
rank: 449
score: 98.9539462002841
patch: throw Math . parse CaMeL Int ( p ) ;
rank: 450
score: 99.192919921875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , - 1 ) ; }
rank: 450
score: 99.17317199707031
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ : p ) ;
rank: 450
score: 99.15107421875
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . PI , p ) ;
rank: 450
score: 99.12164713541667
patch: throw Math . min ( 0 . 0 , this . p ) ;
rank: 450
score: 99.08714948381696
patch: throw new Runtime CaMeL Exception ( $STRING$ + 1 + p ) ;
rank: 450
score: 98.95380108173077
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 451
score: 99.1599609375
patch: p = ( int ) Fast CaMeL Math . sqrt ( p ) ;
rank: 451
score: 99.15061848958334
patch: throw Math CaMeL Runtime CaMeL Exception ( new Integer ( $NUMBER$ ) ) ;
rank: 451
score: 99.1275146484375
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 451
score: 99.12112192007211
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ; }
rank: 451
score: 99.08674839564732
patch: throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + p ) ;
rank: 452
score: 99.24912396599265
patch: this . mean = p ; this . max CaMeL Iterations = max CaMeL Iterations ;
rank: 452
score: 99.22309875488281
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . epsilon ( p ) ) ;
rank: 452
score: 99.19215494791666
patch: throw System . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 452
score: 99.17241668701172
patch: throw Math CaMeL Runtime CaMeL Exception + $STRING$ + p + $STRING$ + p ;
rank: 452
score: 99.15948893229167
patch: throw Math = Math . sqrt ( p , 0 . 0 ) ;
rank: 452
score: 99.15039934430804
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 , $STRING$ ) ;
rank: 452
score: 99.12742262620192
patch: throw Math CaMeL Runtime CaMeL Exception . exit ( $STRING$ ) ;
rank: 452
score: 99.08580671037946
patch: throw Math CaMeL Runtime CaMeL Exception $NUMBER$ ( $STRING$ , p ) ;
rank: 452
score: 98.95281982421875
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 453
score: 99.1920166015625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p $STRING$ ) ;
rank: 453
score: 99.157958984375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p + 0 ) ;
rank: 453
score: 99.15019008091518
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 453
score: 99.12067119891827
patch: throw Math . to CaMeL String ( p + $STRING$ ) ;
rank: 453
score: 99.08517892020089
patch: throw new Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 453
score: 98.95164905894886
patch: throw Math . abs ( p , $NUMBER$ ) ;
rank: 454
score: 99.24839680989584
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . String ( ) ) ;
rank: 454
score: 99.17021942138672
patch: throw Math CaMeL Runtime CaMeL Exception , new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 454
score: 99.15789794921875
patch: { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 454
score: 99.12550706129808
patch: throw ( Math . min ( p , p ) ) ;
rank: 454
score: 99.12051391601562
patch: throw new Error ( $STRING$ ) ;
rank: 454
score: 99.0849609375
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ ) ;
rank: 454
score: 98.95162259615384
patch: throw Math . sleep ( 0 . 0 , p ) ;
rank: 455
score: 99.22211100260417
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p - $STRING$ ) ;
rank: 455
score: 99.1915752704327
patch: throw new Illegal CaMeL Argument CaMeL Exception ( false ) ; }
rank: 455
score: 99.1495849609375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 455
score: 99.1243408203125
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) , p ) ;
rank: 455
score: 99.12043108258929
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ ) ;
rank: 455
score: 99.08477376302083
patch: throw new Illegal CaMeL Argument CaMeL Exception ( - 1 . 0 ) ;
rank: 455
score: 98.95152698863636
patch: throw Math . abs ( p , 0 ) ;
rank: 456
score: 99.24732163373162
patch: throw new Math CaMeL Runtime CaMeL Exception ( Math . sqrt ( 0 ) ) ;
rank: 456
score: 99.22200230189732
patch: throw Math . round ( Math . sqrt ( p ) ) ;
rank: 456
score: 99.1909649188702
patch: throw Math CaMeL Runtime CaMeL Exception ( + $STRING$ ) ; }
rank: 456
score: 99.16939290364583
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Throwable ( $STRING$ ) ;
rank: 456
score: 99.1567626953125
patch: throw Math . ( $STRING$ , p ) ;
rank: 456
score: 99.14935709635417
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , $STRING$ + p ) ;
rank: 456
score: 99.1239501953125
patch: throw Math CaMeL Runtime CaMeL Exception . distance ( $STRING$ , p ) ;
rank: 456
score: 98.95104166666667
patch: throw Math CaMeL Runtime CaMeL Exception = Math . round ( p ) ;
rank: 457
score: 99.24717084099265
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( max CaMeL Iterations , p ) ;
rank: 457
score: 99.22175598144531
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . trim ( p ) ;
rank: 457
score: 99.18932233537946
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p ) ; } }
rank: 457
score: 99.15665690104167
patch: throw Math CaMeL Utils . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 457
score: 99.14916178385417
patch: throw Math CaMeL Exception ( Math . PI , p + $STRING$ ) ;
rank: 457
score: 99.1220474243164
patch: return new Normal CaMeL Distribution CaMeL Impl ( p . p , epsilon ) ;
rank: 457
score: 98.9509746844952
patch: throw Math . max ( 0 , p , 0 ) ;
rank: 458
score: 99.22147623697917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p ) ;
rank: 458
score: 99.15607096354167
patch: throw Math CaMeL Runtime CaMeL Exception ( System . $STRING$ , p ) ;
rank: 458
score: 99.14910419170673
patch: throw new Exception ( Math . abs ( p ) ) ;
rank: 458
score: 99.1217041015625
patch: exception = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 458
score: 99.084228515625
patch: throw Math . start ( 0 . 0 , p ) ;
rank: 458
score: 98.95040189302884
patch: throw Math . max ( 0 + p , p ) ;
rank: 459
score: 99.18755231584821
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , true ) ; }
rank: 459
score: 99.14906412760416
patch: throw Math . Runtime CaMeL Exception ( 1 . 0 , p ) ;
rank: 459
score: 99.12134602864583
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 459
score: 99.08401053292411
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ) ;
rank: 459
score: 98.94986165364584
patch: throw Math CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 460
score: 99.2211181640625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + mean , p ) ;
rank: 460
score: 99.15394694010416
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Bytes ( ) ) ;
rank: 461
score: 99.22073567708334
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 ( ) ) ;
rank: 461
score: 99.18702189127605
patch: throw Math CaMeL Runtime CaMeL Exception ( true ) ; }
rank: 461
score: 99.1536865234375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ * 0 . 0 ) ;
rank: 461
score: 99.11831430288461
patch: throw Math . abs ( new Double ( p ) ) ;
rank: 461
score: 98.94948167067308
patch: throw Math . abs ( p , $NUMBER$ . 1 ) ;
rank: 462
score: 99.24610093060662
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Runtime CaMeL Exception ( p ) ;
rank: 462
score: 99.18667602539062
patch: return Math . sqrt ( p , p ) ; }
rank: 462
score: 99.1477801983173
patch: throw Math CaMeL Exception ( new Exception ( $STRING$ ) ) ;
rank: 462
score: 99.11815592447917
patch: throw Math . min ( p , p , 1 . 0 ) ;
rank: 462
score: 99.11714172363281
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( $STRING$ ) ; }
rank: 462
score: 98.94944069602273
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 463
score: 99.16568756103516
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length , p ) ;
rank: 463
score: 99.1524658203125
patch: mean = Fast CaMeL Math . sqrt ( p ) ; normal = p ;
rank: 463
score: 99.11765950520834
patch: throw Math . max ( 0 . $NUMBER$ , p - 1 ) ;
rank: 463
score: 99.08253696986607
patch: throw new Runtime CaMeL Exception ( 0 . 0 , $STRING$ ) ;
rank: 464
score: 99.218505859375
patch: new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 464
score: 99.11754499162946
patch: throw Math . round ( Math . round ( p ) ) ;
rank: 464
score: 99.1157470703125
patch: { return new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 464
score: 99.082275390625
patch: else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 464
score: 98.94830791766827
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + p ;
rank: 465
score: 99.24519348144531
patch: normal = Math . sqrt ( p ) ; this . epsilon = p ;
rank: 465
score: 99.21823354867789
patch: throw Math CaMeL Runtime CaMeL Exception ( true , $STRING$ ) ;
rank: 465
score: 99.16462053571429
patch: throw ( Illegal CaMeL Argument CaMeL Exception , $STRING$ + p ) ;
rank: 465
score: 99.15093994140625
patch: mean = 0 ; normal = Math . sqrt ( p ) ;
rank: 465
score: 99.14666748046875
patch: System . out . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 465
score: 99.11752115885416
patch: throw Math . min ( p , 1 . 0 + p ) ;
rank: 465
score: 99.11483561197916
patch: bug = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 465
score: 98.94807652064732
patch: throw throw throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 466
score: 99.24507904052734
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . 0 , p ) ;
rank: 466
score: 99.18409946986607
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p true ) ;
rank: 466
score: 99.150146484375
patch: return new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 466
score: 99.11673990885417
patch: throw Math . err . to CaMeL String ( $STRING$ + p ) ;
rank: 466
score: 99.11437116350446
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . out ) ;
rank: 467
score: 99.2449592141544
patch: throw Runtime CaMeL Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 467
score: 99.14793982872597
patch: throw Math CaMeL Runtime CaMeL Exception . Math ( $STRING$ ) ;
rank: 467
score: 99.14508928571429
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( $STRING$ ) ) ;
rank: 467
score: 99.11673177083334
patch: throw Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ + p ) ;
rank: 467
score: 99.0804443359375
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = $NUMBER$ . 0 ;
rank: 467
score: 98.94746537642045
patch: throw Math . round ( p , $STRING$ ) ;
rank: 468
score: 99.24495697021484
patch: throw Math . Runtime CaMeL Exception ( Math . mean ( p ) ) ;
rank: 468
score: 99.21745300292969
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new int [ ] { 0
rank: 468
score: 99.11659342447916
patch: throw Math . min ( p , $NUMBER$ . 0 , p ) ;
rank: 469
score: 99.24411010742188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . sqrt ( ) ) ;
rank: 469
score: 99.21696472167969
patch: throw Math . min ( Math . sqrt ( p ) , p ) ;
rank: 469
score: 99.1835186298077
patch: throw Math CaMeL Runtime CaMeL Exception . format ( $STRING$ ) ;
rank: 469
score: 99.11220703125
patch: throw ( Math . min ( 0 . 1 , p ) ) ;
rank: 469
score: 99.07909284319196
patch: throw Math . max ( 0 . 0 , p ) ; }
rank: 469
score: 98.94724818638393
patch: throw throw Math . print CaMeL Stack CaMeL Trace ( $STRING$ ) ;
rank: 470
score: 99.2440185546875
patch: this . throw Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 470
score: 99.21659342447917
patch: throw Math . arraycopy ( mean , p , 0 , epsilon ) ;
rank: 470
score: 99.14690290178571
patch: this . mean = Fast CaMeL Math . sqrt ( p ) ;
rank: 470
score: 99.11554361979167
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + ) ;
rank: 470
score: 99.11177571614583
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( ) ; }
rank: 470
score: 98.94698392427884
patch: throw Math CaMeL Runtime CaMeL Exception = new Exception ( ) ;
rank: 471
score: 99.24400227864584
patch: throw err . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 471
score: 99.1829325358073
patch: throw Math CaMeL Runtime CaMeL Exception ( this ) ; }
rank: 471
score: 99.1622085571289
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + byte CaMeL Value ) ;
rank: 471
score: 99.14684244791667
patch: throw Math CaMeL Runtime CaMeL Exception ( ( $STRING$ + p ) ) ;
rank: 471
score: 99.11553548177083
patch: throw Math . Math CaMeL Exception ( p + $STRING$ + p ) ;
rank: 471
score: 98.94640096028645
patch: throw new Runtime CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 472
score: 99.18255615234375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 1 ) ; }
rank: 472
score: 99.14576009114583
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL Id ( ) ) ;
rank: 472
score: 99.14379010881696
patch: throw new create CaMeL Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 472
score: 99.11100006103516
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . this , $STRING$ ) ;
rank: 472
score: 99.07552083333333
patch: Math . max ( 0 . 0 , p ) ;
rank: 472
score: 98.94572230747768
patch: throw this . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 473
score: 99.2430419921875
patch: this . mean = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 473
score: 99.18246023995536
patch: throw Math CaMeL Runtime CaMeL Exception . Exception ( $STRING$ ) ; }
rank: 473
score: 99.14496256510417
patch: mean = 0 ; normal = 0 ; this . normal = epsilon ;
rank: 473
score: 99.14308518629808
patch: throw Math . Math CaMeL Exception ( $STRING$ , p ) ;
rank: 473
score: 99.11285400390625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null + $STRING$ ) ;
rank: 473
score: 99.11080729166666
patch: throw Math CaMeL Runtime CaMeL Exception . substring ( p , 0 ) ;
rank: 473
score: 98.94502563476563
patch: throw new Exception ( $STRING$ , p ) ;
rank: 474
score: 99.24292864118304
patch: throw new Math CaMeL Runtime CaMeL Exception ( this . $STRING$ ) ;
rank: 474
score: 99.21566009521484
patch: throw Math . max ( Math . sqrt ( p ) , p ) ;
rank: 474
score: 99.1809833233173
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( null ) ;
rank: 474
score: 99.15909576416016
patch: throw throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 474
score: 99.14484514508929
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p , $STRING$ ) ;
rank: 474
score: 99.1127178485577
patch: throw Math . parse CaMeL Double ( p + $STRING$ ) ;
rank: 474
score: 99.11055210658482
patch: throw Math CaMeL Runtime CaMeL Exception . to CaMeL String ( ) ;
rank: 474
score: 98.9434481534091
patch: throw Math . append ( $STRING$ , p ) ;
rank: 475
score: 99.21563720703125
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . round ( p ) ;
rank: 475
score: 99.15859985351562
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , ) ;
rank: 475
score: 99.1425537109375
patch: throw Math CaMeL Runtime CaMeL Exception ; } this . p = p ;
rank: 475
score: 99.11172921316964
patch: throw ( new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ) ;
rank: 475
score: 99.11040852864583
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( p , $STRING$ ) ;
rank: 475
score: 99.07422814002403
patch: throw Math . max ( $NUMBER$ , 0 . 0 ) ;
rank: 476
score: 99.24177551269531
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . sqrt ( 0 ) ) ;
rank: 476
score: 99.21480015345982
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ false + p ) ;
rank: 476
score: 99.18033541165866
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - p ) ;
rank: 476
score: 99.15848541259766
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + , p ) ;
rank: 476
score: 99.144677734375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , 0 . 1 ) ;
rank: 476
score: 99.14248422475961
patch: throw Math . Runtime CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 476
score: 99.1101962002841
patch: return new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 476
score: 99.07232259114583
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = Math . TRUE ;
rank: 476
score: 98.94278658353366
patch: throw Math . max ( p , p , p ) ;
rank: 477
score: 99.241650390625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . $STRING$ , p ) ;
rank: 477
score: 99.21458333333334
patch: throw Math CaMeL Runtime CaMeL Exception ( p + p , p ) ;
rank: 477
score: 99.15789031982422
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , , p ) ;
rank: 477
score: 99.14466145833333
patch: throw Math CaMeL Runtime CaMeL Exception ( Throwable . class , $STRING$ ) ;
rank: 477
score: 99.14168294270833
patch: throw Math . Runtime CaMeL Exception ( new Integer ( 0 ) ) ;
rank: 477
score: 99.11070556640625
patch: throw new Exception ( p + $STRING$ ) ;
rank: 477
score: 99.10995483398438
patch: throw new ( Math . sqrt ( p ) ) ;
rank: 477
score: 99.0713778409091
patch: throw Math . format ( $STRING$ , p ) ;
rank: 478
score: 99.24118041992188
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . 1 , p ) ;
rank: 478
score: 99.18030724158653
patch: throw Math . Runtime CaMeL Exception ( 0 . 0 ) ;
rank: 478
score: 99.1434326171875
patch: throw Math = Math . sqrt ( p , p ) ;
rank: 478
score: 99.1414082845052
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ) ;
rank: 478
score: 99.10992901141827
patch: throw Math . max ( p , 1 . $NUMBER$ ) ;
rank: 479
score: 99.24055989583333
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , this ) ;
rank: 479
score: 99.21387532552083
patch: throw ( Math . max ( 0 , max CaMeL Iterations ) ) ;
rank: 479
score: 99.18012084960938
patch: mean = p ; normal = epsilon ; }
rank: 479
score: 99.14168607271634
patch: mean = 0 . 0 ; normal = 0 . 0 ;
rank: 479
score: 99.1413818359375
patch: throw Math CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . err ) ;
rank: 479
score: 99.10983712332589
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , 0 ) ;
rank: 479
score: 99.10975060096153
patch: throw ( Illegal CaMeL Argument CaMeL Exception 1 . 0 ) ;
rank: 479
score: 99.0703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ ) ;
rank: 479
score: 98.94223257211539
patch: throw Math . parse CaMeL Int ( p , p ) ;
rank: 480
score: 99.17927769252232
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ null , p ) ;
rank: 480
score: 99.15702819824219
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new Exception ( ) ) ;
rank: 480
score: 99.14107259114583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } * /
rank: 480
score: 99.1095947265625
patch: throw ( Runtime CaMeL Exception ) create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 480
score: 99.06963641826923
patch: throw Math CaMeL Runtime CaMeL Exception ( name + $STRING$ ) ;
rank: 481
score: 99.17917104867789
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $STRING$ ) ; }
rank: 481
score: 99.14102608816964
patch: throw Math CaMeL Exception ( Math . abs ( $STRING$ ) ) ;
rank: 481
score: 99.10918719951923
patch: throw Math . abs ( p + 1 . $NUMBER$ ) ;
rank: 481
score: 99.10869891826923
patch: throw Math CaMeL Runtime CaMeL Exception . halt ( p ) ;
rank: 481
score: 98.9408428485577
patch: throw Math . exit ( 0 . 0 , p ) ;
rank: 482
score: 99.23924967447917
patch: throw Math . Runtime CaMeL Exception ( 0 . 1 , p ) ;
rank: 482
score: 99.21266174316406
patch: throw Math . equals ( Math . sqrt ( p , p ) ) ;
rank: 482
score: 99.17825753348214
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } } }
rank: 482
score: 99.1565933227539
patch: throw . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + $STRING$ ) ;
rank: 482
score: 99.14089731069711
patch: throw Math . Runtime CaMeL Exception ( this , $STRING$ ) ;
rank: 482
score: 99.10857599431819
patch: throw Math . parse CaMeL Double ( p ) ;
rank: 482
score: 99.06903076171875
patch: Math . min ( 0 . 0 , 0 . 0 ) ;
rank: 482
score: 98.94063313802083
patch: throw Math . close ( p ) ;
rank: 483
score: 99.211865234375
patch: new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , p ) ;
rank: 483
score: 99.17774309430804
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( ) ) ;
rank: 483
score: 99.10781860351562
patch: throw ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Cause ( ) ) ;
rank: 483
score: 99.10758666992187
patch: throw new Error ( $STRING$ + $STRING$ ) ;
rank: 483
score: 98.93993123372395
patch: throw new Runtime CaMeL Exception ( $STRING$ , 0 ) ;
rank: 484
score: 99.17730243389423
patch: throw Math CaMeL Runtime CaMeL Exception ( + p ) ; }
rank: 484
score: 99.1556625366211
patch: throw ( Illegal CaMeL Argument CaMeL Exception , new Exception ( $STRING$ ) ) ;
rank: 484
score: 99.14053548177084
patch: mean = p ; normal = null ; this . epsilon = epsilon ;
rank: 484
score: 99.14039713541666
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( p ) ;
rank: 484
score: 99.1070087139423
patch: throw Math . Math CaMeL Exception ( p + $STRING$ ) ;
rank: 484
score: 99.10665893554688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( System . this , p ) ;
rank: 484
score: 99.06858317057292
patch: throw new Runtime CaMeL Exception ( $STRING$ + 0 ) ;
rank: 484
score: 98.939453125
patch: throw null . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 485
score: 99.14019305889423
patch: throw Math CaMeL Runtime CaMeL Exception ( false , $STRING$ ) ;
rank: 485
score: 99.10563441685268
patch: throw public Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 485
score: 99.06756591796875
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = p ; }
rank: 485
score: 98.93944440569196
patch: throw Math CaMeL Exception throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 486
score: 99.2364013671875
patch: mean = Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 486
score: 99.2104263305664
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . contains ( p ) ) ;
rank: 486
score: 99.17671421595982
patch: throw new Illegal CaMeL Argument CaMeL Exception ( + $STRING$ ) ; }
rank: 486
score: 99.15327453613281
patch: throw ( Throwable ) create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 486
score: 99.14019368489583
patch: throw new Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 486
score: 99.13981119791667
patch: throw Math * create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 486
score: 99.10328087439903
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ;
rank: 486
score: 99.06756591796875
patch: throw Math CaMeL Runtime CaMeL Exception == $NUMBER$ . $NUMBER$ : p ;
rank: 486
score: 98.93931227463942
patch: throw Math . abs ( 0 . 0 , p ) ;
rank: 487
score: 99.2348403930664
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . $STRING$ , p ) ;
rank: 487
score: 99.21042104867789
patch: throw Math CaMeL Runtime CaMeL Exception ( true , p ) ;
rank: 487
score: 99.13973999023438
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 ) ;
rank: 487
score: 99.10498860677083
patch: result = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 487
score: 99.10312124399039
patch: throw Math . min ( p , 1 . $NUMBER$ ) ;
rank: 487
score: 98.93927471454327
patch: throw Math . max ( $STRING$ + p , p ) ;
rank: 488
score: 99.2348388671875
patch: throw Math . Runtime CaMeL Exception ( this . 0 , p ) ;
rank: 488
score: 99.2103271484375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ * $STRING$ ) ;
rank: 488
score: 99.17426409040179
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , value ) ; }
rank: 488
score: 99.13953450520833
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) get CaMeL Message ( ) ;
rank: 488
score: 99.06748744419643
patch: throw new Runtime CaMeL Exception ( $STRING$ , p + p ) ;
rank: 488
score: 98.93916538783482
patch: create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 489
score: 99.23466491699219
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new Exception ( p ) ) ;
rank: 489
score: 99.1741192157452
patch: mean = 0 ; normal = p ; normal = epsilon ;
rank: 489
score: 99.139501953125
patch: throw Math CaMeL Exception ( get CaMeL Class ( ) + $STRING$ ) ;
rank: 490
score: 99.23413899739583
patch: throw Math . Runtime CaMeL Exception ( $STRING$ . 0 , p ) ;
rank: 490
score: 99.15267944335938
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + ) ;
rank: 490
score: 99.13937813895089
patch: throw Math . epsilon ( Math . sqrt ( p ) ) ;
rank: 490
score: 99.13933856670673
patch: throw Math CaMeL Runtime CaMeL Exception . exec ( $STRING$ ) ;
rank: 490
score: 98.93810163225446
patch: throw Math = new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 491
score: 99.20872279575893
patch: throw Math CaMeL Runtime CaMeL Exception ( ( String ) $STRING$ ) ;
rank: 491
score: 99.13933771306819
patch: throw Math . p ( $STRING$ , p ) ;
rank: 491
score: 99.13899739583333
patch: throw Math CaMeL Exception ( Math . abs ( ) + $STRING$ ) ;
rank: 491
score: 99.1027099609375
patch: throw ( Math . max ( p , 0 . 1 ) ) ;
rank: 491
score: 99.100830078125
patch: return Math . max ( p , 0 . 0 ) ;
rank: 491
score: 99.06519775390625
patch: throw Math CaMeL Runtime CaMeL Exception = p ;
rank: 491
score: 98.93709622896634
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ p ) ;
rank: 492
score: 99.23251139322916
patch: throw Math . Runtime CaMeL Exception ( Math . p , p ) ;
rank: 492
score: 99.17367788461539
patch: throw new Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ; }
rank: 492
score: 99.1385986328125
patch: throw Math CaMeL Runtime CaMeL Exception . Exception ( $STRING$ + p ) ;
rank: 492
score: 99.1021240234375
patch: attribute = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 492
score: 99.09999302455357
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ * p ) ;
rank: 492
score: 99.06484549386161
patch: throw new Math CaMeL Runtime CaMeL Exception ( 1 . 0 ) ;
rank: 492
score: 98.93689903846153
patch: throw Math . min ( 1 . 1 , p ) ;
rank: 493
score: 99.2322006225586
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . epsilon , p ) ;
rank: 493
score: 99.17327880859375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , false ) ; }
rank: 493
score: 99.15135955810547
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ( p ) ) ;
rank: 493
score: 99.13899739583333
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p == 0 ) ;
rank: 493
score: 99.13853352864584
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( err ) ;
rank: 493
score: 99.10198974609375
patch: return new Normal CaMeL Distribution CaMeL Impl ( this , p ) ;
rank: 493
score: 99.09886823381696
patch: throw new Exception ( p . get CaMeL Message ( ) ) ;
rank: 493
score: 99.0647684733073
patch: throw new Runtime CaMeL Exception ( this + $STRING$ ) ;
rank: 493
score: 98.93660794771634
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , ) ;
rank: 494
score: 99.17265973772321
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; }
rank: 494
score: 99.13869065504808
patch: throw Math CaMeL Runtime CaMeL Exception ( name , $STRING$ ) ;
rank: 494
score: 99.10192057291667
patch: plugin = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 494
score: 98.93582492404514
patch: throw Math . exit ( p ) ;
rank: 495
score: 99.23161315917969
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( $STRING$ ) + p ) ;
rank: 495
score: 99.15087076822917
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( Math . err ) ;
rank: 495
score: 99.13863118489583
patch: throw Math . p ( $STRING$ ) ;
rank: 495
score: 99.10155310997597
patch: throw Math CaMeL Runtime CaMeL Exception . abs ( p ) ;
rank: 495
score: 99.09813514122597
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new ;
rank: 495
score: 98.93548583984375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p , 0 ) ;
rank: 496
score: 99.23146409254808
patch: throw Math CaMeL Runtime CaMeL Exception ( p . this ) ;
rank: 496
score: 99.1382723721591
patch: throw Math . sqrt ( 0 . 0 ) ;
rank: 496
score: 99.10074869791667
patch: throw Math CaMeL Runtime CaMeL Exception . format ( p , p ) ;
rank: 496
score: 99.0633544921875
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 ) ;
rank: 496
score: 98.93480506310097
patch: throw Math . min ( p , $NUMBER$ . 1 ) ;
rank: 497
score: 99.231396484375
patch: throw Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 497
score: 99.20633697509766
patch: throw ( Runtime CaMeL Exception ) Math . max ( $STRING$ , p ) ;
rank: 497
score: 99.17202524038461
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ true ) ; }
rank: 497
score: 99.09931182861328
patch: return new Normal CaMeL Distribution CaMeL Impl ( this , p , epsilon ) ;
rank: 497
score: 99.09724644252232
patch: throw new Assertion CaMeL Error ( $STRING$ + p + $STRING$ ) ;
rank: 497
score: 99.06321364182692
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 , p ) ;
rank: 498
score: 99.20615931919643
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p p ) ;
rank: 498
score: 99.17134312220982
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } this .
rank: 498
score: 99.15010070800781
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + $STRING$ + p ;
rank: 498
score: 99.13650716145834
patch: throw new Assertion CaMeL Error ( Math . abs ( p ) ) ;
rank: 498
score: 99.09923377403847
patch: throw new Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( $STRING$ ) ;
rank: 498
score: 99.06314791165866
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + value ) ;
rank: 498
score: 98.933984375
patch: throw new Math CaMeL Exception ( p ) ;
rank: 499
score: 99.229736328125
patch: p = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 499
score: 99.17119891826923
patch: throw Math . Runtime CaMeL Exception ( p ) ; } }
rank: 499
score: 99.15000697544643
patch: throw ( Illegal CaMeL Argument CaMeL Exception , $STRING$ , p ) ;
rank: 499
score: 99.09920560396634
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( p ) {
rank: 499
score: 98.93227317116477
patch: throw Math . min ( $NUMBER$ , p ) ;
rank: 500
score: 99.22964477539062
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 500
score: 99.20540618896484
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new char [ ] { p
rank: 500
score: 99.17093331473214
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } * /
rank: 500
score: 99.13656850961539
patch: throw ( Math . sqrt ( $STRING$ , p ) ) ;
rank: 500
score: 99.099169921875
patch: expr = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 500
score: 99.09685407366071
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( p ) ;
rank: 500
score: 98.93219463641827
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;
rank: 501
score: 99.22954852764423
patch: throw Math . Runtime CaMeL Exception ( p . $STRING$ ) ;
rank: 501
score: 99.20522836538461
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ != $STRING$ ) ;
rank: 501
score: 99.1491943359375
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Exception ( p ) ;
rank: 501
score: 99.09903157552084
patch: throw Math CaMeL Runtime CaMeL Exception . Verify CaMeL Error ( p ) ;
rank: 501
score: 99.09674944196429
patch: logger = Math . max ( p , 1 . 0 ) ;
rank: 501
score: 99.0616924579327
patch: throw Math CaMeL Runtime CaMeL Exception ( p + $NUMBER$ ) ;
rank: 501
score: 98.9317959872159
patch: throw Illegal CaMeL State CaMeL Exception ( p ) ;
rank: 502
score: 99.20487976074219
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ 1 . 0 , p ) ;
rank: 502
score: 99.17003377278645
patch: throw Math . Runtime CaMeL Exception ( null ) ; }
rank: 502
score: 99.13572474888393
patch: mean = Math . sqrt ( p ) ; normal = null ;
rank: 502
score: 99.13511305588942
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 502
score: 99.09818812779018
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 502
score: 99.06133161272321
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 . 1 ) ;
rank: 502
score: 98.93121337890625
patch: create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 503
score: 99.20472063337054
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ , $STRING$ ) ;
rank: 503
score: 99.13445638020833
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ + this ) ;
rank: 503
score: 99.09671456473214
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ * $STRING$ ) ;
rank: 503
score: 98.930419921875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . $NUMBER$ ) ;
rank: 504
score: 99.16858782087054
patch: throw Math . Runtime CaMeL Exception ( $STRING$ $NUMBER$ , p ) ;
rank: 504
score: 99.14849853515625
patch: throw ( Illegal CaMeL Argument CaMeL Exception , p ) ;
rank: 504
score: 99.1338399251302
patch: throw new Illegal CaMeL Argument CaMeL Exception ( err ) ;
rank: 504
score: 99.0947998046875
patch: throw Math CaMeL Runtime CaMeL Exception . Assertion CaMeL Error ( p ) ;
rank: 504
score: 99.06007737379808
patch: throw new new Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 504
score: 98.92984713040866
patch: throw Math . sleep ( 1 . 0 , p ) ;
rank: 505
score: 99.22796223958333
patch: throw ( Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ) ;
rank: 505
score: 99.20411028180804
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ 1 , p ) ;
rank: 505
score: 99.16786411830357
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( null ) ; }
rank: 505
score: 99.1482684795673
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;
rank: 505
score: 99.13501654730902
patch: mean = 0 ; normal = 0 ;
rank: 505
score: 99.13370768229167
patch: throw Math CaMeL Exception ( . 0 , $STRING$ ) ;
rank: 505
score: 99.09393717447917
patch: sm = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 505
score: 98.92972819010417
patch: throw Math . normal ( $STRING$ ) ;
rank: 506
score: 99.20406087239583
patch: throw Math CaMeL Runtime CaMeL Exception ( p , p + p ) ;
rank: 506
score: 99.16775076729911
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; else { }
rank: 506
score: 99.14767020089286
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start ) ;
rank: 506
score: 99.13433368389423
patch: throw ( Math . Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 506
score: 99.09364318847656
patch: throw Math CaMeL Runtime CaMeL Exception . to CaMeL String ( p ) ; }
rank: 506
score: 98.92890276227679
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ;
rank: 507
score: 99.20378875732422
patch: throw ( Runtime CaMeL Exception ) Math . substring ( 0 , p ) ;
rank: 507
score: 99.16773478190105
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; ;
rank: 507
score: 99.09254557291666
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( $STRING$ , $STRING$ ) ;
rank: 507
score: 99.05804998224431
patch: throw Math . abs ( 0 . 0 ) ;
rank: 507
score: 98.92644794170673
patch: throw Math . abs ( p , 0 . $NUMBER$ ) ;
rank: 508
score: 99.16749790736607
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ , p ) ; }
rank: 508
score: 99.14675903320312
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p . length ) ;
rank: 508
score: 99.13251953125
patch: throw Math CaMeL Exception ( $STRING$ , new Integer ( p ) ) ;
rank: 508
score: 99.13130696614583
patch: new Normal CaMeL Distribution CaMeL Impl ( p , 0 , p ) ;
rank: 508
score: 99.09195149739584
patch: library = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 509
score: 99.22685023716518
patch: this . p = ( Normal CaMeL Distribution CaMeL Impl ) p ;
rank: 509
score: 99.20254516601562
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , - 1 . 0 ) ;
rank: 509
score: 99.16722760881696
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } break ;
rank: 509
score: 99.14574381510417
patch: throw Math CaMeL Runtime CaMeL Exception ( this , $STRING$ , p ) ;
rank: 509
score: 99.1321512858073
patch: throw Math CaMeL Exception ( . 0 , p ) ;
rank: 509
score: 99.12957763671875
patch: throw Math . ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 509
score: 99.09400523792614
patch: throw Math . min ( p , $NUMBER$ ) ;
rank: 510
score: 99.2023681640625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . class , p ) ;
rank: 510
score: 99.14553833007812
patch: throw throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 510
score: 99.09365609975961
patch: throw Math . abs ( p == 0 . 0 ) ;
rank: 510
score: 99.09047037760416
patch: ret = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 510
score: 99.05691293569711
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 : p ) ;
rank: 511
score: 99.20230538504464
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ true , $STRING$ ) ;
rank: 511
score: 99.166748046875
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , 0 ) ; }
rank: 511
score: 99.14518737792969
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) throw new Exception ( $STRING$ ) ;
rank: 511
score: 99.12909807477679
patch: throw Math . 0 ( Math . sqrt ( p ) ) ;
rank: 511
score: 99.08932291666666
patch: re = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 511
score: 99.05618990384616
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = $NUMBER$ ;
rank: 511
score: 98.9248046875
patch: throw Math . max ( $STRING$ + p ) ;
rank: 512
score: 99.20182291666667
patch: throw Math CaMeL Runtime CaMeL Exception ( p , p , $STRING$ ) ;
rank: 512
score: 99.16671316964286
patch: throw Math CaMeL Runtime CaMeL Exception ( - $NUMBER$ , $STRING$ ) ;
rank: 512
score: 99.13104717548077
patch: throw Math . Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 512
score: 99.12832302517361
patch: throw Math . max ( $STRING$ ) ;
rank: 512
score: 99.087890625
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 512
score: 98.92312387319711
patch: throw Math CaMeL Runtime CaMeL Exception . max ( p ) ;
rank: 513
score: 99.16661487926136
patch: throw Math . Runtime CaMeL Exception ( ) ; }
rank: 513
score: 99.144775390625
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; }
rank: 513
score: 99.1310323079427
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 513
score: 99.1283203125
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL State ( ) ) ;
rank: 513
score: 99.09279563210227
patch: throw Math . abs ( p + 1 ) ;
rank: 513
score: 99.08782552083333
patch: proc = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 513
score: 98.92226155598958
patch: throw Math = new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 514
score: 99.1663348858173
patch: { throw Math . Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 514
score: 99.12796724759616
patch: mean = 0 ; normal = 0 ; normal = 0 ;
rank: 514
score: 99.09215369591347
patch: throw Math . max ( $NUMBER$ . $NUMBER$ , p ) ;
rank: 514
score: 99.05496651785714
patch: throw new Math CaMeL Runtime CaMeL Exception ( 0 . 0 ) ;
rank: 514
score: 98.92194073016827
patch: throw Math . min ( p + $STRING$ , p ) ;
rank: 515
score: 99.220263671875
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 ) ;
rank: 515
score: 99.13023792613636
patch: throw Math CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 515
score: 99.0917217548077
patch: throw Math . max ( 1 . 0 , $STRING$ ) ;
rank: 515
score: 99.08757781982422
patch: throw Math CaMeL Runtime CaMeL Exception instanceof Illegal CaMeL Argument CaMeL Exception + p ;
rank: 515
score: 99.05478341238839
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Double . class ) ;
rank: 515
score: 98.921875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( false ) ;
rank: 516
score: 99.20098876953125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( int ) p ) ;
rank: 516
score: 99.16609409877232
patch: throw Math . sqrt ( p ) ; } mean = p ;
rank: 516
score: 99.14198303222656
patch: throw null ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 516
score: 99.12938435872395
patch: throw Math . ; } this . p = p ;
rank: 516
score: 99.12661307198661
patch: throw Math CaMeL Runtime CaMeL Exception ( format ( $STRING$ ) ) ;
rank: 516
score: 99.09154334435097
patch: throw Math . abs ( p / $NUMBER$ . 0 ) ;
rank: 516
score: 99.08688354492188
patch: throw Math CaMeL Runtime CaMeL Exception instanceof Illegal CaMeL Argument CaMeL Exception + $STRING$ ;
rank: 516
score: 99.05459158761161
patch: throw new Runtime CaMeL Exception ( $STRING$ , $NUMBER$ . 0 ) ;
rank: 516
score: 98.92169189453125
patch: throw new Math CaMeL Exception ( p , $STRING$ ) ;
rank: 517
score: 99.219873046875
patch: throw Math CaMeL Runtime CaMeL Exception ( p . Integer ( ) ) ;
rank: 517
score: 99.16586739676339
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p false ) ;
rank: 517
score: 99.08676382211539
patch: throw Math CaMeL Runtime CaMeL Exception . normal ( p ) ;
rank: 517
score: 98.92163957868304
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p , ) ;
rank: 518
score: 99.20010579427084
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - $NUMBER$ + p ) ;
rank: 518
score: 99.1655782063802
patch: throw Math CaMeL Runtime CaMeL Exception ( + p ) ;
rank: 518
score: 99.14111328125
patch: throw ( Illegal CaMeL Argument CaMeL Exception , p + $STRING$ ) ;
rank: 518
score: 99.12889753069196
patch: throw new Illegal CaMeL Argument CaMeL Exception ( trim ( ) ) ;
rank: 518
score: 99.12604314630681
patch: throw Math . sqrt ( p , $STRING$ ) ;
rank: 518
score: 99.08642578125
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , true ) ;
rank: 518
score: 99.05327899639423
patch: throw Math CaMeL Runtime CaMeL Exception ( Integer . class ) ;
rank: 518
score: 98.92153695913461
patch: throw Math . max ( p + 0 , p ) ;
rank: 519
score: 99.21866048177084
patch: throw Math CaMeL Runtime CaMeL Exception ( this . this . p ) ;
rank: 519
score: 99.14078776041667
patch: throw ( Throwable ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 519
score: 99.12858072916667
patch: throw Runtime . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 519
score: 99.12573920355902
patch: mean = p ; normal = null ;
rank: 519
score: 99.09009660993304
patch: throw new Null CaMeL Pointer CaMeL Exception ( $NUMBER$ + $STRING$ ) ;
rank: 519
score: 99.08635711669922
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , p , p ) ;
rank: 520
score: 99.19913736979167
patch: new Normal CaMeL Distribution CaMeL Impl ( p , epsilon , epsilon ) ;
rank: 520
score: 99.16492638221153
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , 0 ) ;
rank: 520
score: 99.14070129394531
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + double CaMeL Value ) ;
rank: 520
score: 99.12705641526442
patch: throw new Illegal CaMeL Argument CaMeL Exception ( + p ) ;
rank: 520
score: 99.08993966238839
patch: logger = Math . max ( 0 . 0 , p ) ;
rank: 520
score: 99.08612932477679
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , null ) ;
rank: 520
score: 98.92074819711539
patch: throw new Illegal CaMeL State CaMeL Exception ( p + ) ;
rank: 521
score: 99.21845703125
patch: p = Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 521
score: 99.08953857421875
patch: throw new Null CaMeL Pointer CaMeL Exception ( $NUMBER$ ) ;
rank: 521
score: 99.05269949776786
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . class ) ;
rank: 521
score: 98.92030686598558
patch: throw Math . append ( Math . class , p ) ;
rank: 522
score: 99.21778971354166
patch: throw Error . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 522
score: 99.19893646240234
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ , p + p ) ;
rank: 522
score: 99.16459437779018
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - $NUMBER$ ) ; }
rank: 522
score: 99.08929443359375
patch: throw Math . create CaMeL Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 522
score: 98.92010498046875
patch: throw $STRING$ . create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 523
score: 99.21767578125
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , true ) ;
rank: 523
score: 99.16454467773437
patch: Math . sqrt ( p , p ) ;
rank: 523
score: 99.12627766927083
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ( $STRING$ ) ;
rank: 523
score: 99.08884974888393
patch: throw new Error ( p . get CaMeL Message ( ) ) ;
rank: 523
score: 99.08451021634616
patch: throw Math CaMeL Runtime CaMeL Exception . halt ( $STRING$ ) ;
rank: 523
score: 99.05224609375
patch: throw new Runtime CaMeL Exception ( $STRING$ + p + ) ;
rank: 523
score: 98.9199969951923
patch: throw Math . min ( p , 1 . 1 ) ;
rank: 524
score: 99.21692708333333
patch: throw Math . Runtime CaMeL Exception ( Math . epsilon , p ) ;
rank: 524
score: 99.19835611979167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ / 1 . 0 ) ;
rank: 524
score: 99.16395786830357
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p $NUMBER$ ) ;
rank: 524
score: 99.13863932291666
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ) ;
rank: 524
score: 99.12569986979166
patch: if ( ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 524
score: 99.12318772536058
patch: p = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 524
score: 99.0872051532452
patch: throw new throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 524
score: 99.08404134114583
patch: ke = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 524
score: 99.05208333333333
patch: throw new Math CaMeL Runtime CaMeL Exception ( this ) ;
rank: 524
score: 98.9198749248798
patch: throw Math . min ( p + 1 , p ) ;
rank: 525
score: 99.21651458740234
patch: ( ( Normal CaMeL Distribution CaMeL Impl ) p ) . mean = p ;
rank: 525
score: 99.16351787860577
patch: mean = p ; normal = p ; epsilon = epsilon ;
rank: 525
score: 99.12568495008681
patch: throw Math . Exception ( $STRING$ ) ;
rank: 525
score: 99.08694893973214
patch: throw new Runtime CaMeL Exception ( p + $STRING$ + $STRING$ ) ;
rank: 525
score: 99.0840313251202
patch: throw ( Math . min ( p , 0 ) ) ;
rank: 525
score: 99.05208333333333
patch: throw new Runtime CaMeL Exception ( this , p ) ;
rank: 525
score: 98.91824106069711
patch: throw new Exception Math CaMeL Exception ( $STRING$ , p ) ;
rank: 526
score: 99.2152099609375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( get CaMeL Exception ( ) ) ;
rank: 526
score: 99.16222205528847
patch: mean = p ; normal = null ; normal = null ;
rank: 526
score: 99.08664957682292
patch: throw Math . floor ( p ) ;
rank: 526
score: 99.08309232271634
patch: throw new Illegal CaMeL Argument CaMeL Exception 1 ( p ) ;
rank: 526
score: 99.05206298828125
patch: throw new Runtime CaMeL Exception ( $NUMBER$ . 0 ) ;
rank: 527
score: 99.21509660993304
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 527
score: 99.19632161458334
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p + null ) ;
rank: 527
score: 99.1618319424716
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new
rank: 527
score: 99.121337890625
patch: Fast CaMeL Math . sqrt ( Math . sqrt ( p ) ) ;
rank: 527
score: 99.08641706194196
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - $STRING$ ) ;
rank: 527
score: 99.08284214564732
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 527
score: 99.05180140904018
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + $STRING$ ;
rank: 527
score: 98.91750863882211
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ) ;
rank: 528
score: 99.19582693917411
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p true ) ;
rank: 528
score: 99.124072265625
patch: throw new . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 528
score: 99.12044852120536
patch: mean = p - Fast CaMeL Math . sqrt ( p ) ;
rank: 528
score: 99.05159505208333
patch: throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 528
score: 98.91555551382211
patch: throw Math . max ( p + p , p ) ;
rank: 529
score: 99.2139404296875
patch: this . throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 529
score: 99.1951904296875
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . start ( $STRING$ ) ;
rank: 529
score: 99.16156005859375
patch: throw Math . Runtime CaMeL Exception ( p + $STRING$ ) ; }
rank: 529
score: 99.1376953125
patch: { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 529
score: 99.08186340332031
patch: throw new Poisson CaMeL Distribution CaMeL Impl ( p , 0 . 0 ) ;
rank: 529
score: 99.05093819754464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + p ;
rank: 529
score: 98.9153719815341
patch: throw Math . abs ( p , null ) ;
rank: 530
score: 99.19471740722656
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + new int [ ] { p
rank: 530
score: 99.16114153180804
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p 1 ) ;
rank: 530
score: 99.11865234375
patch: throw Math CaMeL Runtime CaMeL Exception ( false , p ) ;
rank: 530
score: 99.0853759765625
patch: throw new Error ( $STRING$ + p ) ;
rank: 530
score: 99.08159993489583
patch: minor = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 530
score: 99.05093149038461
patch: throw Math . value CaMeL Of ( $STRING$ + p ) ;
rank: 530
score: 98.91524564302884
patch: throw Math = Math . max ( p , p ) ;
rank: 531
score: 99.2127197265625
patch: normal = Math . sqrt ( p ) ;
rank: 531
score: 99.15989332932692
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + null ) ;
rank: 531
score: 99.12376185825893
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 0 , $STRING$ ) ;
rank: 531
score: 99.1168212890625
patch: throw Math . sqrt ( $STRING$ , p , p ) ;
rank: 531
score: 99.05057373046876
patch: throw Math CaMeL Runtime CaMeL Exception = $STRING$ ;
rank: 531
score: 98.9151611328125
patch: throw Math . exit ( 1 . 0 , p ) ;
rank: 532
score: 99.2126934344952
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . 0 ) ;
rank: 532
score: 99.12371419270833
patch: throw new Runtime CaMeL Exception ( Math . abs ( 0 ) ) ;
rank: 532
score: 99.08504544771634
patch: throw Math . round ( new Double ( p ) ) ;
rank: 532
score: 99.08060396634616
patch: throw ( Math . min ( p , epsilon ) ) ;
rank: 533
score: 99.15970552884616
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - epsilon ) ;
rank: 533
score: 99.12290736607143
patch: throw Math . Exception ( Math . abs ( p ) ) ;
rank: 533
score: 99.11483060396634
patch: throw Math CaMeL Runtime CaMeL Exception ( value , $STRING$ ) ;
rank: 533
score: 99.08450082632211
patch: throw Math . abs ( p * 1 . 0 ) ;
rank: 533
score: 98.91465407151442
patch: throw Math . print CaMeL Stack CaMeL Trace ( this ) ;
rank: 534
score: 99.21171061197917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . this , p ) ;
rank: 534
score: 99.1594989483173
patch: p = Fast CaMeL Math . sqrt ( p ) ; }
rank: 534
score: 99.13610026041667
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 ) ;
rank: 534
score: 99.11327253069196
patch: throw Math . p ( Math . sqrt ( p ) ) ;
rank: 534
score: 99.0485595703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ; /
rank: 534
score: 98.9139404296875
patch: throw new ) . print CaMeL Stack CaMeL Trace ( ) ;
rank: 535
score: 99.21141764322917
patch: throw Math CaMeL Runtime CaMeL Exception ( this . 1 , p ) ;
rank: 535
score: 99.19348958333333
patch: throw Math CaMeL Runtime CaMeL Exception ( p == 0 . 0 ) ;
rank: 535
score: 99.15910993303571
patch: Math . sqrt ( p ) ; this . normal = epsilon ;
rank: 535
score: 99.0836181640625
patch: throw Math . to CaMeL String ( $STRING$ + p ) ;
rank: 535
score: 99.04837740384616
patch: throw Math . max ( 0 . 0 , null ) ;
rank: 535
score: 98.91375262920673
patch: throw Illegal CaMeL State CaMeL Exception ( p + $STRING$ ) ;
rank: 536
score: 99.15900530133929
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - p ) ; }
rank: 536
score: 99.12126159667969
patch: throw Math CaMeL Exception ( ) ;
rank: 536
score: 99.08359938401442
patch: throw new Null CaMeL Pointer CaMeL Exception ( + $STRING$ ) ;
rank: 536
score: 99.07890973772321
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , this ) ;
rank: 536
score: 99.04790387834821
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ p ] ;
rank: 537
score: 99.1586162860577
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; break ;
rank: 537
score: 99.13400065104166
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 537
score: 99.04606119791667
patch: throw new Runtime CaMeL Exception ( $STRING$ , null ) ;
rank: 538
score: 99.19151204427084
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ p + $STRING$ ) ;
rank: 538
score: 99.15858677455357
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new $STRING$ ) ; }
rank: 538
score: 99.119482421875
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( p ) ;
rank: 538
score: 99.11192908653847
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ != 0 ) ;
rank: 538
score: 99.08314866286058
patch: throw Math . min ( p + $NUMBER$ , p ) ;
rank: 538
score: 99.0445556640625
patch: throw new Exception Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 538
score: 98.91295369466145
patch: throw Math . max ( p , 0 . ) ;
rank: 539
score: 99.15777118389423
patch: throw Math CaMeL Runtime CaMeL Exception . substring ( $STRING$ ) ;
rank: 539
score: 99.1331787109375
patch: throw throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 539
score: 99.04393592247597
patch: throw Math . value CaMeL Of ( p + p ) ;
rank: 540
score: 99.19081217447916
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math CaMeL Runtime CaMeL Exception ;
rank: 540
score: 99.1186053936298
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( ;
rank: 540
score: 99.11060442243304
patch: throw ( Runtime CaMeL Exception ) Math . sqrt ( $STRING$ ) ;
rank: 540
score: 99.08258928571429
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p * $STRING$ ) ;
rank: 540
score: 99.07754516601562
patch: return ( new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ) ;
rank: 540
score: 99.04370930989583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ; ;
rank: 540
score: 98.9119160970052
patch: throw new Illegal CaMeL State CaMeL Exception ( this ) ;
rank: 541
score: 99.19027506510416
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 0 . 1 ) ;
rank: 541
score: 99.15724534254808
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ false ) ; }
rank: 541
score: 99.13307189941406
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . out , p ) ;
rank: 541
score: 99.11809895833333
patch: throw new Runtime CaMeL Exception ( Math . floor ( p ) ) ;
rank: 541
score: 99.08228478064903
patch: throw Math . min ( 0 . 0 , $STRING$ ) ;
rank: 541
score: 99.07685546875
patch: g = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 541
score: 99.0432637532552
patch: throw Math CaMeL Runtime CaMeL Exception == $NUMBER$ . 0 ;
rank: 541
score: 98.90903883713942
patch: throw Illegal CaMeL State CaMeL Exception ( p , $STRING$ ) ;
rank: 542
score: 99.1568936434659
patch: throw Math . Runtime CaMeL Exception ( null ) ;
rank: 542
score: 99.11785481770833
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . random ( ) ) ;
rank: 542
score: 99.10902756911058
patch: throw Math CaMeL Runtime CaMeL Exception ( ( $STRING$ ) ) ;
rank: 542
score: 99.0765625
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 542
score: 99.042724609375
patch: throw Math . min ( 0 . 0 , p ) ; }
rank: 542
score: 98.90890502929688
patch: throw throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 543
score: 99.20673076923077
patch: this ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 543
score: 99.18927408854167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == $STRING$ + p ) ;
rank: 543
score: 99.15658133370536
patch: { { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 543
score: 99.10885184151786
patch: throw Math CaMeL Runtime CaMeL Exception String ( $STRING$ , p ) ;
rank: 543
score: 99.08152077414773
patch: throw Math . round ( p + $STRING$ ) ;
rank: 543
score: 99.07520470252403
patch: throw Math CaMeL Runtime CaMeL Exception . PI ( $STRING$ ) ;
rank: 543
score: 99.04242815290179
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ] ;
rank: 543
score: 98.90866323617789
patch: throw Math . max ( p , p , $STRING$ ) ;
rank: 544
score: 99.1319808959961
patch: throw Math CaMeL Runtime CaMeL Exception , new Math CaMeL Exception ( $STRING$ ) ;
rank: 544
score: 99.08118785511364
patch: throw Math . ceil ( p + $STRING$ ) ;
rank: 544
score: 99.07505798339844
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } mean = p ;
rank: 544
score: 98.90760387073864
patch: throw Math . min ( p , $STRING$ ) ;
rank: 545
score: 99.20506184895834
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , normal ) ;
rank: 545
score: 99.15572684151786
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $STRING$ , p ) ;
rank: 545
score: 99.10753522600446
patch: throw Math CaMeL Runtime CaMeL Exception ( - 0 . 0 ) ;
rank: 545
score: 99.07923235212054
patch: throw new Internal CaMeL Error ( $STRING$ + p + $STRING$ ) ;
rank: 545
score: 99.07455679086539
patch: throw ( Math . max ( p , p ) ) ;
rank: 545
score: 99.04090372721355
patch: throw new Runtime CaMeL Exception ( this + p ) ;
rank: 545
score: 98.90704345703125
patch: throw Math . append ( $STRING$ ) ;
rank: 546
score: 99.20502115885417
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , $STRING$ ) ;
rank: 546
score: 99.18895670572917
patch: throw Math . arraycopy ( p , 0 , p , 0 ) ;
rank: 546
score: 99.15543038504464
patch: throw Math . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ +
rank: 546
score: 99.11643629807692
patch: throw Math CaMeL Runtime CaMeL Exception . err ( $STRING$ ) ;
rank: 546
score: 99.10734419389205
patch: throw Math . max ( $STRING$ , 0 ) ;
rank: 546
score: 99.07388305664062
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( p ) ; }
rank: 546
score: 98.90581805889423
patch: throw Math . max ( p , $NUMBER$ , p ) ;
rank: 547
score: 99.13077545166016
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Runtime CaMeL Exception ( ) ;
rank: 547
score: 99.11623910757211
patch: throw Math . Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 547
score: 99.04053751627605
patch: throw Math CaMeL Runtime CaMeL Exception ( p + ) ;
rank: 548
score: 99.1883544921875
patch: throw Math . arraycopy ( mean , 0 , p , epsilon ) ;
rank: 548
score: 99.15449741908482
patch: throw Math CaMeL Runtime CaMeL Exception ( null + $STRING$ ) ; }
rank: 548
score: 99.13056182861328
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . close ( p ) ;
rank: 548
score: 99.11622111002605
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( ) ;
rank: 548
score: 99.07205636160714
patch: throw ( Illegal CaMeL Argument CaMeL Exception 1 ( $STRING$ ) ) ;
rank: 548
score: 99.04006958007812
patch: throw Math CaMeL Runtime CaMeL Exception = this ;
rank: 549
score: 99.20397135416667
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . 0 , p ) ;
rank: 549
score: 99.0714111328125
patch: dim = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 549
score: 99.0399169921875
patch: throw Math CaMeL Runtime CaMeL Exception != null ? p : $STRING$ ;
rank: 549
score: 98.905517578125
patch: throw Math . min ( p ) ;
rank: 550
score: 99.18777669270834
patch: throw p . get CaMeL Runtime ( ) . Exception ( $STRING$ ) ;
rank: 550
score: 99.12982177734375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , 1 ) ;
rank: 550
score: 99.115966796875
patch: throw new Runtime CaMeL Exception ( Math . abs ( $NUMBER$ ) ) ;
rank: 550
score: 99.0709228515625
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p , 0 ) ;
rank: 550
score: 98.9053203876202
patch: throw Math CaMeL Runtime CaMeL Exception . close ( $STRING$ ) ;
rank: 551
score: 99.15286959134616
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; } ;
rank: 551
score: 99.10308837890625
patch: mean = Fast CaMeL Math . sqrt ( p , epsilon ) ;
rank: 551
score: 99.06947428385416
patch: throw new Illegal CaMeL Argument CaMeL Exception 1 ( $STRING$ , p ) ;
rank: 551
score: 99.03944749098558
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + ) ;
rank: 552
score: 99.18737030029297
patch: this . normal = new Normal CaMeL Distribution CaMeL Impl ( p ) ; }
rank: 552
score: 99.15283203125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ * p ) ; }
rank: 552
score: 99.12900390625
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ , p ) ;
rank: 552
score: 99.10291466346153
patch: throw ( Math . sqrt ( p , p ) ) ;
rank: 552
score: 99.07569231305804
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p - $STRING$ ) ;
rank: 552
score: 99.06873430524554
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ; }
rank: 552
score: 99.03922213040866
patch: throw Math . format ( 0 . 0 , p ) ;
rank: 552
score: 98.90509588068181
patch: throw Math . min ( p , null ) ;
rank: 553
score: 99.15192522321429
patch: mean = p ; normal = p ; normal = epsilon ; }
rank: 553
score: 99.11278279622395
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 553
score: 99.10260479266827
patch: throw Math CaMeL Runtime CaMeL Exception ( false + p ) ;
rank: 553
score: 99.07461111886161
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + name ) ;
rank: 553
score: 99.068701171875
patch: exception = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 553
score: 98.90479532877605
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 554
score: 99.20164388020834
patch: this . throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 554
score: 99.15164620535714
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( p ) ; }
rank: 554
score: 99.07444545200893
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + 0 ) ;
rank: 554
score: 99.0364657315341
patch: throw Math . max ( 0 . 0 ) ;
rank: 554
score: 98.90428670247395
patch: throw ( Illegal CaMeL State CaMeL Exception , $STRING$ ) ;
rank: 555
score: 99.15132649739583
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p .
rank: 555
score: 99.11106654575893
patch: throw Math CaMeL Runtime CaMeL Exception . Runtime CaMeL Exception ( ) ;
rank: 555
score: 99.07405308314732
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + ;
rank: 555
score: 99.067626953125
patch: s = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 555
score: 99.0357196514423
patch: throw Math . min ( $NUMBER$ , 0 . 0 ) ;
rank: 555
score: 98.9039306640625
patch: throw Math . decode ( p , p ) ;
rank: 556
score: 99.20105794270833
patch: throw Math CaMeL Runtime CaMeL Exception ( p . this , $STRING$ ) ;
rank: 556
score: 99.18477630615234
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ ;
rank: 556
score: 99.1100341796875
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . abs ( ; ) ;
rank: 556
score: 99.10014997209821
patch: p = Fast CaMeL Math . sqrt ( p , p ) ;
rank: 556
score: 99.07290649414062
patch: throw new Assertion CaMeL Error ( $STRING$ ) ;
rank: 556
score: 99.06761756310097
patch: throw Math CaMeL Runtime CaMeL Exception . round ( p ) ;
rank: 557
score: 99.20103352864584
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . p ) ;
rank: 557
score: 99.15123572716347
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 557
score: 99.1000225360577
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , epsilon ) ;
rank: 557
score: 99.07256610576923
patch: throw Math . min ( 0 . 0 , $NUMBER$ ) ;
rank: 557
score: 99.06758626302083
patch: { return new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 557
score: 99.03482759915866
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 557
score: 98.90315385298295
patch: throw Math . start ( $STRING$ , p ) ;
rank: 558
score: 99.20047760009766
patch: normal = Math . sqrt ( p ) ; this . normal = epsilon ;
rank: 558
score: 99.18375338040866
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == $STRING$ ) ;
rank: 558
score: 99.12519182477679
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Exception ( ) ;
rank: 558
score: 99.0674072265625
patch: m = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 559
score: 99.19955679086539
patch: throw this . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 559
score: 99.15076700846355
patch: throw Math CaMeL Runtime CaMeL Exception ( ( $STRING$ ) ;
rank: 559
score: 99.1244873046875
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ( ) ) ;
rank: 559
score: 99.10642311789773
patch: throw Math CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 559
score: 99.0716083233173
patch: return Math . min ( p , 1 . 0 ) ;
rank: 559
score: 99.06720377604167
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 559
score: 99.03397310697116
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , p ) ;
rank: 559
score: 98.90265362079327
patch: throw Math . max ( $STRING$ , 1 . 0 ) ;
rank: 560
score: 99.18360246930804
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p , p ) ;
rank: 560
score: 99.15073939732143
patch: throw Math . Runtime CaMeL Exception ( $STRING$ 1 . 0 ) ;
rank: 560
score: 99.0953838641827
patch: throw Math . sqrt ( $STRING$ + p , p ) ;
rank: 560
score: 99.0666015625
patch: bug = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 560
score: 98.90230618990384
patch: throw Math CaMeL Exception . Math CaMeL Exception ( p ) ;
rank: 561
score: 99.19928850446429
patch: throw new Math CaMeL Runtime CaMeL Exception ( p . $STRING$ ) ;
rank: 561
score: 99.18301595052084
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . TRUE , p ) ;
rank: 561
score: 99.15053013392857
patch: throw Math CaMeL Runtime CaMeL Exception ( - $NUMBER$ , p ) ;
rank: 561
score: 99.12342247596153
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 561
score: 99.0713641826923
patch: return Math . max ( p , $NUMBER$ . 0 ) ;
rank: 561
score: 99.0657489483173
patch: throw Math CaMeL Runtime CaMeL Exception . interrupt ( p ) ;
rank: 561
score: 99.03183218149039
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 + p ] ;
rank: 561
score: 98.9020108309659
patch: throw Math . min ( null , p ) ;
rank: 562
score: 99.199267578125
patch: throw Math . Runtime CaMeL Exception ( Math . sqrt ( ) ) ;
rank: 562
score: 99.15007672991071
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - 1 ) ; }
rank: 562
score: 99.10459681919643
patch: throw Math CaMeL Exception ( Math . round ( p ) ) ;
rank: 562
score: 99.07134540264423
patch: throw Math . abs ( p * $NUMBER$ . 0 ) ;
rank: 562
score: 99.06560407366071
patch: throw Math . log ( Math . sqrt ( p ) ) ;
rank: 562
score: 99.03167724609375
patch: throw new Exception ( p , $STRING$ ) ;
rank: 562
score: 98.90131084735577
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ ;
rank: 563
score: 99.18135579427083
patch: throw Math . arraycopy ( p , 0 , mean , 0 ) ;
rank: 563
score: 99.14993722098214
patch: throw Math . Runtime CaMeL Exception ( - 1 . 0 ) ;
rank: 563
score: 99.10453578404018
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ( ) ) ;
rank: 563
score: 99.07124546595982
patch: throw throw Math . Runtime CaMeL Exception ( p + $STRING$ ) ;
rank: 563
score: 99.06461007254464
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , $NUMBER$ ) ;
rank: 563
score: 98.90007990056819
patch: throw Math . format ( p , p ) ;
rank: 564
score: 99.18115234375
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 , $STRING$ ) ;
rank: 564
score: 99.1497802734375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ p ) ; }
rank: 564
score: 99.10259540264423
patch: throw new Illegal CaMeL Argument CaMeL Exception ( - 1 ) ;
rank: 564
score: 99.09228515625
patch: throw Math . sqrt ( get CaMeL Message ( ) ) ;
rank: 564
score: 99.02916541466347
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 1 ) ;
rank: 565
score: 99.19815266927084
patch: throw Math CaMeL Runtime CaMeL Exception ( new double [ 0 ] ) ;
rank: 565
score: 99.1810302734375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p + $STRING$ ) ;
rank: 565
score: 99.0706787109375
patch: throw Math . to CaMeL String ( p ) ;
rank: 565
score: 99.02870871803977
patch: throw new Runtime CaMeL Exception ( $STRING$ , ) ;
rank: 565
score: 98.8994891826923
patch: throw Math . max ( p , 0 . p ) ;
rank: 566
score: 99.19771321614583
patch: throw Math CaMeL Runtime CaMeL Exception ( this . $NUMBER$ , p ) ;
rank: 566
score: 99.18050944010416
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p != 0 ) ;
rank: 566
score: 99.14966692243304
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ; }
rank: 566
score: 99.0908536044034
patch: throw Math CaMeL Runtime CaMeL Exception ( name ) ;
rank: 566
score: 99.0703125
patch: throw Math . floor ( p + $STRING$ ) ;
rank: 566
score: 99.02817946213942
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + name ) ;
rank: 567
score: 99.19707845052083
patch: throw Runtime . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 567
score: 99.14669363839286
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 567
score: 99.09869854266827
patch: throw Math CaMeL Runtime CaMeL Exception . Error ( $STRING$ ) ;
rank: 567
score: 99.09046519886364
patch: throw Math CaMeL Runtime CaMeL Exception ( log ) ;
rank: 567
score: 99.07027762276786
patch: throw Math . , new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 567
score: 98.8987325032552
patch: create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 568
score: 99.07010323660714
patch: throw Math . ceil ( Math . abs ( p ) ) ;
rank: 568
score: 99.0609882061298
patch: throw Math CaMeL Runtime CaMeL Exception . log ( $STRING$ ) ;
rank: 568
score: 99.02698692908653
patch: throw Math CaMeL Runtime CaMeL Exception ( 1 . $NUMBER$ ) ;
rank: 568
score: 98.8978780110677
patch: throw new Exception ( $STRING$ + p , $STRING$ ) ;
rank: 569
score: 99.14574178059895
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ ) ;
rank: 569
score: 99.11925455729167
patch: { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 569
score: 99.09744966947116
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 569
score: 99.06036783854167
patch: parsed = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 569
score: 98.89785531850961
patch: throw Math . min ( 0 . 1 , p ) ;
rank: 570
score: 99.19571940104167
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( this . $STRING$ ) ;
rank: 570
score: 99.14531598772321
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , $NUMBER$ ) ; }
rank: 570
score: 99.11856282552084
patch: throw Math ; } throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 570
score: 99.08815354567308
patch: throw Math = Math . sqrt ( p , 0 ) ;
rank: 570
score: 99.06003824869792
patch: n = Fast CaMeL Math . sqrt ( p ) ;
rank: 570
score: 99.0263202373798
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . class ) ;
rank: 570
score: 98.89731069711539
patch: throw Math = Math . max ( 0 , p ) ;
rank: 571
score: 99.195556640625
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , $NUMBER$ ) ;
rank: 571
score: 99.14527239118304
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Cause ( ) ;
rank: 571
score: 99.1182861328125
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ;
rank: 571
score: 99.0680682842548
patch: throw Math . floor ( p + 1 . 0 ) ;
rank: 571
score: 99.059912109375
patch: z = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 571
score: 99.02618408203125
patch: throw new Runtime CaMeL Exception ( $STRING$ , this ) ;
rank: 572
score: 99.19541829427084
patch: mean = p ; throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 572
score: 99.14442661830357
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ , $STRING$ ) ; }
rank: 572
score: 99.06702599158653
patch: throw Math = new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 572
score: 99.02525634765625
patch: throw new Runtime CaMeL Exception ( this ) ;
rank: 572
score: 98.89622145432692
patch: throw Math CaMeL Runtime CaMeL Exception . Math ( p ) ;
rank: 573
score: 99.19495500837054
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ . $STRING$ ) ;
rank: 573
score: 99.08571370442708
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p ;
rank: 573
score: 99.06662423270089
patch: throw new Null CaMeL Pointer CaMeL Exception ( name + $STRING$ ) ;
rank: 573
score: 99.02501502403847
patch: throw new Exception Math CaMeL Exception ( $STRING$ + p ) ;
rank: 573
score: 98.89614633413461
patch: throw Math . max ( p , p , $NUMBER$ ) ;
rank: 574
score: 99.19483235677083
patch: throw Math CaMeL Runtime CaMeL Exception ( this . null , p ) ;
rank: 574
score: 99.17818509615384
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - $STRING$ ) ;
rank: 574
score: 99.06552358774039
patch: return Math . min ( 0 . 0 , p ) ;
rank: 574
score: 99.05712890625
patch: sym = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 575
score: 99.19386393229166
patch: this . throw Math CaMeL Runtime CaMeL Exception ( p , p ) ;
rank: 575
score: 99.17752838134766
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , new int [ ] { $NUMBER$
rank: 575
score: 99.14329176682692
patch: throw new Illegal CaMeL Argument CaMeL Exception ( true ) ; }
rank: 575
score: 99.06543907752403
patch: throw Math . min ( $NUMBER$ . $NUMBER$ , p ) ;
rank: 575
score: 99.0242919921875
patch: return new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 576
score: 99.19309895833334
patch: throw Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 576
score: 99.14136681189903
patch: mean = p ; mean = p ; normal = epsilon ;
rank: 576
score: 99.09190016526442
patch: throw Math CaMeL Runtime CaMeL Exception . init CaMeL Cause ( ;
rank: 576
score: 99.06451416015625
patch: logger = Math . min ( p , 1 . 0 ) ;
rank: 576
score: 99.05659993489583
patch: sm = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 576
score: 99.02406819661458
patch: Math . min ( 0 . 0 , p ) ;
rank: 576
score: 98.89595540364583
patch: throw new Illegal CaMeL State CaMeL Exception ( $NUMBER$ ) ;
rank: 577
score: 99.19144694010417
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p . $STRING$ ) ;
rank: 577
score: 99.17715454101562
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new byte [ ] { p
rank: 577
score: 99.09053257533482
patch: throw Math CaMeL Exception ( . 1 , p + $STRING$ ) ;
rank: 577
score: 99.0841533954327
patch: throw Math . sqrt ( $STRING$ + 0 . 0 ) ;
rank: 577
score: 99.0639178936298
patch: throw Math . min ( p , $NUMBER$ . $NUMBER$ ) ;
rank: 577
score: 99.05635892427884
patch: throw Math CaMeL Runtime CaMeL Exception . join ( $STRING$ ) ;
rank: 577
score: 98.89566744290866
patch: throw Illegal CaMeL Argument CaMeL Exception ( p , p ) ;
rank: 578
score: 99.19099644252232
patch: throw new Poisson CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 578
score: 99.13946063701923
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ) ; }
rank: 578
score: 99.06215256911058
patch: throw Math . min ( $STRING$ , 1 . 0 ) ;
rank: 578
score: 99.05596516927083
patch: throw Math CaMeL Runtime CaMeL Exception instanceof Normal CaMeL Distribution CaMeL Impl ) ;
rank: 578
score: 98.89554850260417
patch: throw Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( $STRING$ ) ;
rank: 579
score: 99.19069010416666
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( 0 , p ) ;
rank: 579
score: 99.13931039663461
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; ; }
rank: 579
score: 99.08859252929688
patch: throw Math . ( 1 . 0 , p ) ;
rank: 579
score: 98.89492797851562
patch: throw Math CaMeL Runtime CaMeL Exception . close ( ) ;
rank: 580
score: 99.1901611328125
patch: throw Exception . create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 580
score: 99.13744007457386
patch: return Math . sqrt ( p , p ) ;
rank: 580
score: 99.08333646334134
patch: throw Math CaMeL Runtime CaMeL Exception ( p == 0 ) ;
rank: 580
score: 99.0611102764423
patch: throw Math . max ( p , $NUMBER$ . $NUMBER$ ) ;
rank: 580
score: 99.0549072265625
patch: locale = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 580
score: 99.0220703125
patch: throw new Interrupted CaMeL Exception ( $STRING$ ) ;
rank: 581
score: 99.18913922991071
patch: this . normal = ( Normal CaMeL Distribution CaMeL Impl ) p ;
rank: 581
score: 99.17630004882812
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + new int [ ] { 0
rank: 581
score: 99.1106201171875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , $NUMBER$ ) ;
rank: 581
score: 99.08123779296875
patch: p = ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 581
score: 99.054736328125
patch: ODE = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 581
score: 99.01976521809895
patch: throw new Math CaMeL Exception ( p + $STRING$ ) ;
rank: 582
score: 99.18798828125
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( $STRING$ , p ) ;
rank: 582
score: 99.1761474609375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == p + $STRING$ ) ;
rank: 582
score: 99.08645193917411
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 582
score: 99.08066969651442
patch: throw Math . sqrt ( p , 0 . 0 ) ;
rank: 582
score: 99.05995871803977
patch: throw Math . abs ( p + $STRING$ ) ;
rank: 582
score: 99.05453725961539
patch: throw Math CaMeL Runtime CaMeL Exception . join ( p ) ;
rank: 582
score: 98.89461576021634
patch: throw Math . round ( p , $NUMBER$ . 0 ) ;
rank: 583
score: 99.18792169744319
patch: throw ( Math CaMeL Runtime CaMeL Exception ) $STRING$ ;
rank: 583
score: 99.13467407226562
patch: throw ( Math . sqrt ( p ) ) ; }
rank: 583
score: 99.109814453125
patch: throw Math CaMeL Runtime CaMeL Exception ( this + $STRING$ , p ) ;
rank: 583
score: 99.08591134207589
patch: throw Math CaMeL Exception ( Math . ceil ( p ) ) ;
rank: 583
score: 99.05445274939903
patch: throw Math CaMeL Runtime CaMeL Exception . sleep ( p ) ;
rank: 583
score: 99.01950509207589
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ;
rank: 583
score: 98.89394309303977
patch: throw Math . sleep ( p , p ) ;
rank: 584
score: 99.18765258789062
patch: this . epsilon = Math . sqrt ( p ) ;
rank: 584
score: 99.13450270432692
patch: throw Math CaMeL Runtime CaMeL Exception ( null , this ) ;
rank: 584
score: 99.07998422475961
patch: throw Math . sqrt ( $STRING$ , p , 0 ) ;
rank: 584
score: 99.05936686197917
patch: throw new Number CaMeL Format CaMeL Exception ( p ) ;
rank: 584
score: 99.05419108072917
patch: return new Normal CaMeL Distribution CaMeL Impl ( p [ 0 ] ) ;
rank: 584
score: 99.01862127130681
patch: throw Math . sleep ( 0 . 0 ) ;
rank: 584
score: 98.89389272836539
patch: throw Math . sleep ( p , 1 . 1 ) ;
rank: 585
score: 99.1726825420673
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ( $STRING$ ) ;
rank: 585
score: 99.05901630108173
patch: throw Math . abs ( new Integer ( 0 ) ) ;
rank: 585
score: 99.05408732096355
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 585
score: 99.01774379185268
patch: throw Math CaMeL Runtime CaMeL Exception < $STRING$ + p + $STRING$ ;
rank: 585
score: 98.8935038248698
patch: throw new Exception throw Math CaMeL Exception ( $STRING$ ) ;
rank: 586
score: 99.18665364583333
patch: normal = new Poisson CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 586
score: 99.13363647460938
patch: mean = Math . sqrt ( p ) ;
rank: 586
score: 99.10823567708333
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $NUMBER$ ) ;
rank: 586
score: 99.08453838641827
patch: throw Math CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 586
score: 99.05341796875
patch: record = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 586
score: 99.01704915364583
patch: throw new Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 586
score: 98.89276123046875
patch: throw Math . append ( Math . abs ( p ) ) ;
rank: 587
score: 99.17141287667411
patch: throw Math . decode ( Math . sqrt ( p ) ) ;
rank: 587
score: 99.0842754657452
patch: throw Math . Runtime CaMeL Exception ( 1 , $STRING$ ) ;
rank: 587
score: 99.05804912860577
patch: return Math . max ( 1 . 0 , p ) ;
rank: 587
score: 99.05293782552083
patch: throw Math . Interrupted CaMeL Exception ( ) ; } mean = p ;
rank: 587
score: 99.0165264423077
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 1 ) ;
rank: 588
score: 99.17119954427083
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p != 0 ) ;
rank: 588
score: 99.10743931361607
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . err ) ;
rank: 588
score: 99.0760498046875
patch: throw Math . max ( $STRING$ , p , 0 ) ;
rank: 588
score: 99.05290876116071
patch: throw Math . new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 588
score: 99.0164082845052
patch: throw new Runtime CaMeL Exception ( name , p ) ;
rank: 589
score: 99.0755145733173
patch: throw Math CaMeL Runtime CaMeL Exception ( true + p ) ;
rank: 589
score: 99.0160420735677
patch: throw Math CaMeL Runtime CaMeL Exception $NUMBER$ ( p ) ;
rank: 589
score: 98.89220252403847
patch: throw Math CaMeL Runtime CaMeL Exception . remove ( p ) ;
rank: 590
score: 99.18411254882812
patch: this . mean = Math . sqrt ( p ) ;
rank: 590
score: 99.17008754185268
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ( p ) ) ;
rank: 590
score: 99.10712076822917
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + 0 , $STRING$ ) ;
rank: 590
score: 99.0576171875
patch: throw Math . min ( 0 . $NUMBER$ , $STRING$ ) ;
rank: 590
score: 99.05201822916666
patch: eq = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 590
score: 99.01480806790866
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = value ;
rank: 591
score: 99.18372521033653
patch: throw ( Math CaMeL Runtime CaMeL Exception ( p ) ) ;
rank: 591
score: 99.16929274338942
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + false ) ;
rank: 591
score: 99.1064697265625
patch: throw Math CaMeL Runtime CaMeL Exception . run ( $STRING$ , p ) ;
rank: 591
score: 99.08259800502232
patch: p = Math . max ( 1 . 0 , p ) ;
rank: 591
score: 99.05069986979167
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( ) {
rank: 591
score: 98.89141845703125
patch: throw Math . start ( $STRING$ ) ;
rank: 592
score: 99.08240618024554
patch: log . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 592
score: 99.07323201497395
patch: { throw Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 592
score: 99.05711951622597
patch: throw Math . abs ( p + $NUMBER$ . 0 ) ;
rank: 592
score: 99.04988919771634
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 593
score: 99.18310546875
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) $STRING$ ;
rank: 593
score: 99.16771589006696
patch: throw new Runtime CaMeL Exception ( $STRING$ , p , p ) ;
rank: 593
score: 99.1057637532552
patch: throw Math Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 593
score: 99.07316450639205
patch: throw Math . sqrt ( $STRING$ , $STRING$ ) ;
rank: 593
score: 99.04967447916667
patch: plugin = new Normal CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 593
score: 99.01412963867188
patch: throw new Runtime CaMeL Exception ( p , p ) ;
rank: 593
score: 98.8910381610577
patch: throw Math . abs ( p , p + 1 ) ;
rank: 594
score: 99.18310546875
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( max CaMeL Iterations ) ;
rank: 594
score: 99.07889229910714
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ || $STRING$ ) ;
rank: 594
score: 99.07277268629808
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + mean ) ;
rank: 594
score: 99.05680025540866
patch: throw Math . min ( 1 . $NUMBER$ , p ) ;
rank: 594
score: 99.04806954520089
patch: { throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 594
score: 99.01233927408855
patch: throw ( new Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 595
score: 99.16708809988839
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p + p ) ;
rank: 595
score: 99.07811628069196
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ( String ) ) ;
rank: 595
score: 99.05515700120192
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ; ;
rank: 595
score: 99.0480224609375
patch: ex = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 595
score: 98.89076585036058
patch: throw p . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 596
score: 99.18279622395833
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( this , p ) ;
rank: 596
score: 99.07741088867188
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ;
rank: 596
score: 99.07208721454327
patch: throw ( Math . sqrt ( 0 . 0 ) ) ;
rank: 596
score: 99.0550067608173
patch: return Math . min ( p , 0 . 0 ) ;
rank: 596
score: 99.01146443684895
patch: throw Math CaMeL Runtime CaMeL Exception != 0 . 0 ;
rank: 597
score: 99.18165940504808
patch: throw Math CaMeL Runtime CaMeL Exception ( p ( ) ) ;
rank: 597
score: 99.12924429086539
patch: throw Math CaMeL Runtime CaMeL Exception ( null ) ; } }
rank: 597
score: 99.1029541015625
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( null + p ) ;
rank: 597
score: 99.07740196814903
patch: throw Math . Math CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 597
score: 99.05462176983173
patch: throw Math . max ( 0 , p + 1 ) ;
rank: 597
score: 99.04698893229167
patch: throw Math CaMeL Runtime CaMeL Exception . to CaMeL String ( ) ; }
rank: 598
score: 99.18163248697917
patch: throw Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ( p ) ;
rank: 598
score: 99.04587965745192
patch: throw Math CaMeL Runtime CaMeL Exception . exit ( p ) ;
rank: 598
score: 98.89003684303977
patch: throw throw new Math CaMeL Exception ( $STRING$ ) ;
rank: 599
score: 99.18084716796875
patch: p = Math . sqrt ( p ) ;
rank: 599
score: 99.12843831380208
patch: throw Math = Math . sqrt ( p ) ; }
rank: 599
score: 99.10249546595982
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 599
score: 99.06876997514205
patch: throw Math = Math . sqrt ( $STRING$ ) ;
rank: 599
score: 99.04545084635417
patch: throw Math CaMeL Runtime CaMeL Exception 1 ( $STRING$ ) ;
rank: 599
score: 98.89000355113636
patch: throw Math . sleep ( p , 0 ) ;
rank: 600
score: 99.16544015066964
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $STRING$ + p ) ;
rank: 600
score: 99.12811279296875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ 1 ) ;
rank: 600
score: 99.07655843098958
patch: throw Math . ( 1 . 0 , $STRING$ ) ;
rank: 600
score: 99.04537760416666
patch: o = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 600
score: 99.00595925071023
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] ;
rank: 600
score: 98.88965782752403
patch: throw Math CaMeL Runtime CaMeL Exception . max ( $STRING$ ) ;
rank: 601
score: 99.1653076171875
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 . 0 ) ;
rank: 601
score: 99.12706409801136
patch: throw Math . sqrt ( p ) ; } }
rank: 601
score: 99.06788048377403
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ | p ) ;
rank: 601
score: 99.0452880859375
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p , 0 ) ;
rank: 601
score: 99.0052490234375
patch: throw new Math CaMeL Runtime CaMeL Exception ( p + ) ;
rank: 602
score: 99.17885044642857
patch: mean = p : Fast CaMeL Math . sqrt ( p ) ;
rank: 602
score: 99.1265117938702
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 602
score: 99.0757723721591
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + ;
rank: 602
score: 99.04524739583333
patch: return ( ( Normal CaMeL Distribution CaMeL Impl ) p ) . epsilon ;
rank: 602
score: 99.00521240234374
patch: Math . value CaMeL Of ( p ) ;
rank: 602
score: 98.88930100661058
patch: throw Illegal CaMeL Argument CaMeL Exception ( p + p ) ;
rank: 603
score: 99.1776592548077
patch: throw Math . Runtime CaMeL Exception ( this , p ) ;
rank: 603
score: 99.07561383928571
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ || p ) ;
rank: 603
score: 99.0048583984375
patch: throw Math CaMeL Runtime CaMeL Exception = null ;
rank: 603
score: 98.88917893629808
patch: throw Math . abs ( p , p , 0 ) ;
rank: 604
score: 99.12578667534723
patch: throw new Illegal CaMeL Argument CaMeL Exception (
rank: 604
score: 99.07526506696429
patch: throw Math CaMeL Runtime CaMeL Exception Runtime CaMeL Exception ( $STRING$ ) ;
rank: 604
score: 99.06736403245192
patch: throw Math CaMeL Runtime CaMeL Exception ( out , p ) ;
rank: 604
score: 99.0436279296875
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , 0 . 0 ,
rank: 604
score: 99.00407270951705
patch: throw new new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 605
score: 99.17606026785714
patch: throw Math CaMeL Runtime CaMeL Exception ( ( double ) p ) ;
rank: 605
score: 99.12515024038461
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } {
rank: 605
score: 99.04967322716347
patch: throw Math . max ( 0 . $NUMBER$ , $NUMBER$ ) ;
rank: 605
score: 99.04342447916666
patch: b = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 605
score: 99.00386555989583
patch: Math . max ( p , 0 . 0 ) ;
rank: 606
score: 99.16363118489583
patch: throw Math . arraycopy ( mean , 0 , mean , 0 ) ;
rank: 606
score: 99.12282151442308
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ p ) ; }
rank: 606
score: 99.07462855747768
patch: throw new Runtime CaMeL Exception ( Math . abs ( ) ) ;
rank: 606
score: 99.06591796875
patch: mean = 0 ; normal = 0 ; epsilon = 0 ;
rank: 606
score: 99.0424335186298
patch: throw new Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( p ) ;
rank: 606
score: 99.00327711838942
patch: throw Math CaMeL Runtime CaMeL Exception < $NUMBER$ [ 0 ] ;
rank: 606
score: 98.88724772135417
patch: throw Math . round ( $STRING$ ) ;
rank: 607
score: 99.0739276592548
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p 1 ) ;
rank: 607
score: 99.04840557391827
patch: return Math . min ( 0 . $NUMBER$ , p ) ;
rank: 607
score: 99.0416259765625
patch: throw Math CaMeL Runtime CaMeL Exception instanceof Illegal CaMeL Argument CaMeL Exception ; }
rank: 608
score: 99.17306753305289
patch: throw Math CaMeL Runtime CaMeL Exception ( String . $STRING$ ) ;
rank: 608
score: 99.16268717447916
patch: throw Math . arraycopy ( p , p , 0 , epsilon ) ;
rank: 608
score: 99.12191162109374
patch: mean = p ; normal = p ; }
rank: 608
score: 99.09947916666667
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ) ;
rank: 608
score: 99.07247924804688
patch: throw Math CaMeL Runtime CaMeL Exception ( new ;
rank: 608
score: 99.04788208007812
patch: throw new Math CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 608
score: 98.99942016601562
patch: throw new Runtime CaMeL Exception ( $STRING$ + 1 ) ;
rank: 608
score: 98.88657789963942
patch: throw Math . min ( p , p , 0 ) ;
rank: 609
score: 99.17162214006696
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . - p ) ;
rank: 609
score: 99.16161170372597
patch: throw Math . substring ( p , 0 , p ) ;
rank: 609
score: 99.1213887532552
patch: return Fast CaMeL Math . sqrt ( p ) ; }
rank: 609
score: 99.07205200195312
patch: throw Math . Runtime CaMeL Exception ( $STRING$ p ) ;
rank: 609
score: 99.0471660907452
patch: throw Math . round ( p - 1 . 0 ) ;
rank: 609
score: 99.04029134114583
patch: Caption = new Normal CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 609
score: 98.9991963704427
patch: throw new Illegal CaMeL Argument CaMeL Exception ( value ) ;
rank: 609
score: 98.88602388822116
patch: throw new Exception throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 610
score: 99.12137545072116
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } }
rank: 610
score: 99.09767252604166
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ , p ) ;
rank: 610
score: 99.0626690204327
patch: throw Math CaMeL Runtime CaMeL Exception . trim ( $STRING$ ) ;
rank: 610
score: 98.99684836647727
patch: throw Math CaMeL Runtime CaMeL Exception ( value ) ;
rank: 610
score: 98.8856201171875
patch: throw Math . exit ( p , p ) ;
rank: 611
score: 99.12083851207386
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , (
rank: 611
score: 98.9961649576823
patch: throw new Runtime CaMeL Exception ( $STRING$ + null ) ;
rank: 612
score: 99.1685321514423
patch: throw Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 612
score: 99.07028432992789
patch: throw Math . Runtime CaMeL Exception ( $NUMBER$ , p ) ;
rank: 612
score: 99.05990600585938
patch: throw Math . ( $STRING$ + p ) ;
rank: 612
score: 99.04010009765625
patch: throw Math CaMeL Runtime CaMeL Exception . interrupt ( , p ) ;
rank: 612
score: 98.99610484730114
patch: throw Math . start ( 0 . 0 ) ;
rank: 612
score: 98.88484022352431
patch: throw Math . start ( p ) ;
rank: 613
score: 99.1682880108173
patch: throw Math . Runtime CaMeL Exception ( this . p ) ;
rank: 613
score: 99.11984252929688
patch: throw Math CaMeL Runtime CaMeL Exception ( - $NUMBER$ ) ;
rank: 613
score: 99.07012067522321
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . min ( ;
rank: 613
score: 99.04334435096153
patch: throw Math . max ( 0 . $NUMBER$ , 0 ) ;
rank: 613
score: 98.884765625
patch: throw Math . min ( p + $STRING$ + p ) ;
rank: 614
score: 99.16808268229167
patch: normal = new Poisson CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 614
score: 99.11983548677884
patch: throw Math CaMeL Runtime CaMeL Exception ( ( $STRING$ ) ; }
rank: 614
score: 99.09728190104167
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , $NUMBER$ ) ;
rank: 614
score: 99.06984299879808
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + 1 ) ;
rank: 614
score: 99.04323167067308
patch: throw Math . min ( p , p + 1 ) ;
rank: 614
score: 99.0386962890625
patch: throw Math new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 614
score: 98.99539888822116
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] [ 0 ]
rank: 615
score: 99.15883963448661
patch: throw new Runtime CaMeL Exception ( get CaMeL Cause ( ) ) ;
rank: 615
score: 99.06802804129464
patch: Runtime . create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 615
score: 99.05709838867188
patch: throw Math . 0 . to CaMeL String ( ) ;
rank: 615
score: 99.0411376953125
patch: throw Math . abs ( p - 1 . $NUMBER$ ) ;
rank: 615
score: 99.03692157451923
patch: { throw new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 616
score: 99.16717529296875
patch: throw new Poisson CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 616
score: 99.1192157451923
patch: throw Math . Runtime CaMeL Exception ( null , null ) ;
rank: 616
score: 99.09537760416667
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p , p ) ;
rank: 616
score: 99.06733049665179
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Math . abs ( ;
rank: 616
score: 99.05652794471153
patch: throw Math CaMeL Utils . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 616
score: 99.0403544108073
patch: throw new Exception ( $STRING$ + $STRING$ + p ) ;
rank: 616
score: 99.0359637920673
patch: throw Math CaMeL Runtime CaMeL Exception . PI [ 0 ] ;
rank: 616
score: 98.99418501420455
patch: throw Math CaMeL Runtime CaMeL Exception [ p ] ;
rank: 617
score: 99.16702974759616
patch: this . throw Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 617
score: 99.15861002604167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p . null ) ;
rank: 617
score: 99.11916879507211
patch: throw Math . Runtime CaMeL Exception ( null + p ) ;
rank: 617
score: 99.06595552884616
patch: throw new Illegal CaMeL Argument CaMeL Exception ( + 1 ) ;
rank: 617
score: 99.05615234375
patch: mean = p ; normal = max CaMeL Iterations ;
rank: 617
score: 99.03985126201923
patch: throw Math . ) ( p + $STRING$ + p ) ;
rank: 617
score: 99.03582294170673
patch: throw Math CaMeL Runtime CaMeL Exception . signum ( p ) ;
rank: 618
score: 99.11873372395833
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new
rank: 618
score: 98.88022085336539
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; ;
rank: 619
score: 99.1663485440341
patch: throw Math . Runtime CaMeL Exception ( this ) ;
rank: 619
score: 99.1165771484375
patch: throw Math . Runtime CaMeL Exception ( p + p ) ;
rank: 619
score: 99.0937969501202
patch: throw Math CaMeL Runtime CaMeL Exception + $STRING$ + p ) ;
rank: 619
score: 99.0370624248798
patch: throw Math . err . to CaMeL String ( p ) ;
rank: 619
score: 98.9926045735677
patch: throw Math CaMeL Runtime CaMeL Exception = $NUMBER$ . 0 ;
rank: 619
score: 98.8800381747159
patch: throw Math . close ( p , p ) ;
rank: 620
score: 99.16614708533653
patch: throw Math . Runtime CaMeL Exception ( 0 , p ) ;
rank: 620
score: 99.09341634114584
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , 0 ) ;
rank: 620
score: 99.06110088641827
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 620
score: 99.03526814778645
patch: throw new Exception ( p + $STRING$ + p ) ;
rank: 620
score: 98.99019368489583
patch: throw new Runtime CaMeL Exception ( $NUMBER$ + p ) ;
rank: 620
score: 98.87938343394886
patch: throw Math . exit ( p , $STRING$ ) ;
rank: 621
score: 99.16586538461539
patch: throw this . Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 621
score: 99.11553400213069
patch: throw new Math CaMeL Exception ( $STRING$ ) ; }
rank: 621
score: 99.03397914341518
patch: throw Math CaMeL Runtime CaMeL Exception . Exception $NUMBER$ ( $STRING$ ) ;
rank: 621
score: 98.98980712890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( true ) ;
rank: 622
score: 99.11553400213069
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ; }
rank: 622
score: 99.06043419471153
patch: throw Math . Runtime CaMeL Exception ( . , $STRING$ ) ;
rank: 622
score: 99.05146928267045
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 ) ;
rank: 622
score: 98.98929850260417
patch: throw new Runtime CaMeL Exception ( $STRING$ + value ) ;
rank: 622
score: 98.87898393110795
patch: throw Math . abs ( p + p ) ;
rank: 623
score: 99.16563063401442
patch: throw Math CaMeL Runtime CaMeL Exception ( this . 0 ) ;
rank: 623
score: 99.11545034555289
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; * /
rank: 623
score: 99.09224155970982
patch: throw Math CaMeL Runtime CaMeL Exception , new Exception ( $STRING$ ) ;
rank: 623
score: 99.06014310396634
patch: throw Math . Math CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 623
score: 98.98925018310547
patch: throw new Exception ( p ) ;
rank: 623
score: 98.87852783203125
patch: Math . max ( p , p ) ;
rank: 624
score: 99.16523088727679
patch: max CaMeL Iterations = Fast CaMeL Math . sqrt ( p ) ;
rank: 624
score: 99.15642438616071
patch: throw ( Runtime CaMeL Exception ) Math . abs ( p ) ;
rank: 624
score: 99.11544799804688
patch: throw Math . sqrt ( $STRING$ + p ) ; }
rank: 624
score: 99.09168352399554
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ) ;
rank: 624
score: 99.0564434344952
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , ) ;
rank: 624
score: 99.03342507102273
patch: throw Math . abs ( p + $NUMBER$ ) ;
rank: 624
score: 99.02988106863839
patch: { throw Math . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 624
score: 98.87535511363636
patch: throw Math . exit ( $NUMBER$ , p ) ;
rank: 625
score: 99.1651611328125
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , false ) ;
rank: 625
score: 99.0546875
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ p ) ;
rank: 626
score: 99.15545654296875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p false ) ;
rank: 626
score: 99.0535888671875
patch: throw Math CaMeL Exception ( Math . floor ( ) ) ;
rank: 626
score: 99.0496493252841
patch: mean = 0 ; normal = 0 . 0 ;
rank: 626
score: 99.03186974158653
patch: throw Math . ceil ( p + $STRING$ + p ) ;
rank: 626
score: 98.98853648792614
patch: throw Math . max ( $NUMBER$ , 0 ) ;
rank: 626
score: 98.87274169921875
patch: throw new Runtime CaMeL Exception ( $STRING$ , 1 ) ;
rank: 627
score: 99.15513392857143
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + , p ) ;
rank: 627
score: 99.09034946986607
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 627
score: 99.04947916666667
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . ) ;
rank: 627
score: 99.03143310546875
patch: throw Math . random ( ) ;
rank: 627
score: 98.98831176757812
patch: Math . append ( p , 0 . 0 ) ;
rank: 627
score: 98.8722811612216
patch: throw Math . start ( p , p ) ;
rank: 628
score: 99.02987905649039
patch: throw Math . max ( $NUMBER$ , $NUMBER$ . 0 ) ;
rank: 628
score: 99.02903529575893
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( p ) ) ; }
rank: 628
score: 98.9875821200284
patch: return Math . value CaMeL Of ( p ) ;
rank: 628
score: 98.87035023082386
patch: throw Math . floor ( p , p ) ;
rank: 629
score: 99.16223958333333
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ( $STRING$ ) ) ;
rank: 629
score: 99.11278357872597
patch: mean = p ; normal = p ; normal = null ;
rank: 629
score: 99.08968098958333
patch: throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;
rank: 629
score: 99.05247667100694
patch: throw Math CaMeL Exception ( new ) ;
rank: 629
score: 99.04833984375
patch: throw null ; } mean = p ; normal = null ;
rank: 629
score: 99.02974759615384
patch: throw Math . max ( 0 . $NUMBER$ , null ) ;
rank: 629
score: 99.02879920372597
patch: throw Math CaMeL Runtime CaMeL Exception . floor ( p ) ;
rank: 629
score: 98.86913045247395
patch: throw throw Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 630
score: 99.15225655691964
patch: throw Math . append ( Math . sqrt ( p ) ) ;
rank: 630
score: 99.04811448317308
patch: mean = 0 ; mean = 0 ; normal = 0 ;
rank: 630
score: 99.02951284555289
patch: return Math . min ( p , $NUMBER$ . 0 ) ;
rank: 630
score: 98.98675537109375
patch: throw new Runtime CaMeL Exception ( 0 . $NUMBER$ ) ;
rank: 631
score: 99.11200420673077
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ; }
rank: 631
score: 99.05185171274039
patch: throw new Null CaMeL Pointer CaMeL Exception ( ( ) ) ;
rank: 631
score: 99.0476582845052
patch: throw Math CaMeL Runtime CaMeL Exception . ( $STRING$ ) ;
rank: 631
score: 99.0272686298077
patch: throw new Illegal CaMeL Argument CaMeL Exception String ( p ) ;
rank: 631
score: 98.985595703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new ) ;
rank: 631
score: 98.86820845170455
patch: throw Math . log ( $STRING$ , p ) ;
rank: 632
score: 99.1112060546875
patch: throw Math . ( $STRING$ , p ) ; }
rank: 632
score: 99.05025540865384
patch: throw Math . min ( 0 , 1 . 0 ) ;
rank: 632
score: 99.02919358473558
patch: throw Math . abs ( p == 1 . 0 ) ;
rank: 632
score: 99.02643291766827
patch: throw ( Math . max ( p , 0 ) ) ;
rank: 632
score: 98.98486328125
patch: throw Math CaMeL Runtime CaMeL Exception [ ) + p ] ;
rank: 633
score: 99.0443827311198
patch: throw Math . } mean ( p , epsilon ) ;
rank: 633
score: 99.0261981670673
patch: throw Math CaMeL Runtime CaMeL Exception . abs ( $STRING$ ) ;
rank: 633
score: 98.9831034342448
patch: throw new Runtime CaMeL Exception ( name , $STRING$ ) ;
rank: 633
score: 98.86692116477273
patch: throw new Exception Math CaMeL Exception ( $STRING$ ) ;
rank: 634
score: 99.15855305989584
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , mean ) ;
rank: 634
score: 99.1105244954427
patch: throw Math . Math ( $STRING$ , p ) ; }
rank: 634
score: 99.04862154447116
patch: throw new create CaMeL Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 634
score: 99.02803548177083
patch: throw new Assertion CaMeL Error ( $STRING$ + $STRING$ ) ;
rank: 634
score: 99.02536446707589
patch: throw ( Illegal CaMeL Argument CaMeL Exception 1 ( p ) ) ;
rank: 634
score: 98.98228963216145
patch: throw new Runtime CaMeL Exception ( 1 , p ) ;
rank: 634
score: 98.8653055826823
patch: throw ) . print CaMeL Stack CaMeL Trace ( ) ;
rank: 635
score: 99.08698381696429
patch: throw Math Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 635
score: 99.03956017127403
patch: mean = 0 ; normal = 0 ; mean = 0 ;
rank: 635
score: 99.02727801983173
patch: throw Math . round ( p / $NUMBER$ . 0 ) ;
rank: 635
score: 99.02512904575893
patch: throw public Poisson CaMeL Distribution CaMeL Impl ( $STRING$ , p ) ;
rank: 635
score: 98.86466471354167
patch: throw throw Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 636
score: 99.08638218470982
patch: throw Math throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 636
score: 99.02688363882211
patch: throw Math . round ( p + 1 . $NUMBER$ ) ;
rank: 636
score: 99.02462064302884
patch: throw Math CaMeL Runtime CaMeL Exception . { $STRING$ + p ;
rank: 636
score: 98.98104154146634
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; ;
rank: 636
score: 98.8631591796875
patch: throw Math . ceil ( p , p ) ;
rank: 637
score: 99.1089579264323
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ; } }
rank: 637
score: 99.08638218470982
patch: throw Math CaMeL Runtime CaMeL Exception + $STRING$ + p + $STRING$ ;
rank: 637
score: 99.046142578125
patch: throw Math CaMeL Exception ( 1 . 0 , p ) ;
rank: 637
score: 99.03892933238636
patch: throw ( Math CaMeL Runtime CaMeL Exception ) p ;
rank: 637
score: 99.02587890625
patch: throw new Assertion CaMeL Error ( $STRING$ + p ) ;
rank: 637
score: 98.86228249289773
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ ;
rank: 638
score: 99.14932955228366
patch: throw Math . substring ( max CaMeL Iterations , p ) ;
rank: 638
score: 99.1087176983173
patch: throw Math . ( Math . sqrt ( p ) ) ;
rank: 638
score: 99.03665865384616
patch: mean = 1 . 0 ; normal = 0 . 0 ;
rank: 639
score: 99.0439453125
patch: throw Math CaMeL Exception ( new Error ( $STRING$ ) ) ;
rank: 639
score: 99.03591684194711
patch: throw p ; } mean = p ; normal = null ;
rank: 639
score: 99.02488199869792
patch: throw new Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 639
score: 98.86027388139205
patch: throw Math . min ( 0 , 0 ) ;
rank: 640
score: 99.15334065755208
patch: throw throw Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 640
score: 99.1077129657452
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p , new
rank: 640
score: 99.08328683035714
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + length ) ;
rank: 640
score: 99.04248046875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }
rank: 640
score: 99.03488159179688
patch: throw Math . sqrt ( ) ;
rank: 640
score: 99.02242337740384
patch: throw Math CaMeL Runtime CaMeL Exception . ceil ( p ) ;
rank: 641
score: 99.15320696149554
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . $STRING$ ) ;
rank: 641
score: 99.107666015625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( new $STRING$ ) ;
rank: 641
score: 99.08253831129808
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ) ;
rank: 641
score: 99.03395774147727
patch: throw Math . p ( $STRING$ + p ) ;
rank: 641
score: 98.97657267252605
patch: throw new Interrupted CaMeL Exception ( $STRING$ + p ) ;
rank: 641
score: 98.8592862215909
patch: throw Math . sleep ( p , $NUMBER$ ) ;
rank: 642
score: 99.15269118088942
patch: normal = new Poisson CaMeL Distribution CaMeL Impl ( p ) ;
rank: 642
score: 99.04136827256944
patch: throw Math CaMeL Exception ( . ) ;
rank: 642
score: 99.02411443536931
patch: throw Math . round ( p + 1 ) ;
rank: 642
score: 98.97629801432292
patch: throw Math . format ( $STRING$ ) ;
rank: 643
score: 99.14480590820312
patch: throw p . get CaMeL Message ( ) ;
rank: 643
score: 99.10682091346153
patch: throw Math CaMeL Runtime CaMeL Exception ( p , null ) ;
rank: 643
score: 99.03030734592014
patch: mean = p ; normal = 0 ;
rank: 643
score: 98.97446852463942
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ] = this ;
rank: 644
score: 99.15185546875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . 0 ) ;
rank: 644
score: 99.105712890625
patch: mean = p ; max CaMeL Iterations = max CaMeL Iterations ;
rank: 644
score: 99.0239990234375
patch: throw new Internal CaMeL Error ( $STRING$ ) ;
rank: 644
score: 99.019775390625
patch: throw ( Math CaMeL Runtime CaMeL Exception ) ( $STRING$ ) ;
rank: 645
score: 99.14455942007211
patch: throw Math CaMeL Runtime CaMeL Exception ( p - $STRING$ ) ;
rank: 645
score: 99.10560960036058
patch: mean = p ; normal = p ; mean = p ;
rank: 645
score: 98.85789905894886
patch: throw Math . round ( p , null ) ;
rank: 646
score: 99.14989362444196
patch: this . throw new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 646
score: 99.07895132211539
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 ) ;
rank: 646
score: 99.01792555588942
patch: throw ( Math . max ( p , epsilon ) ) ;
rank: 646
score: 98.97210693359375
patch: throw new Exception ( p , $STRING$ + p ) ;
rank: 646
score: 98.85747736150569
patch: throw Math . max ( $NUMBER$ + p ) ;
rank: 647
score: 99.10364708533653
patch: mean = 0 ; normal = p ; normal = p ;
rank: 647
score: 99.02235764723558
patch: throw Math . min ( p , p - 1 ) ;
rank: 647
score: 99.01663643973214
patch: throw Math CaMeL Runtime CaMeL Exception . Interrupted CaMeL Exception ( ) ;
rank: 647
score: 98.97132457386364
patch: throw Math . exit ( 0 . 0 ) ;
rank: 648
score: 99.14821213942308
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( this ) ;
rank: 648
score: 99.10361891526442
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( false ) ;
rank: 648
score: 99.03513590494792
patch: throw Math CaMeL Exception ( . 1 , $STRING$ ) ;
rank: 648
score: 98.97086588541667
patch: Math . min ( p , 0 . 0 ) ;
rank: 648
score: 98.85636763139205
patch: throw Math . normal ( p , p ) ;
rank: 649
score: 99.10350623497597
patch: mean = p ; normal = p ; mean = epsilon ;
rank: 649
score: 99.07599283854167
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + p , 1 ) ;
rank: 649
score: 99.0341045673077
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } ;
rank: 649
score: 98.97066243489583
patch: Math . max ( 0 , 0 . 0 ) ;
rank: 649
score: 98.85636393229167
patch: return new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 650
score: 99.14779897836539
patch: throw Math CaMeL Runtime CaMeL Exception . Exception ( p ) ;
rank: 650
score: 99.14311872209821
patch: throw Math CaMeL Runtime CaMeL Exception ( ( String ) null ) ;
rank: 650
score: 99.10345928485577
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ) ; else {
rank: 650
score: 99.03237915039062
patch: throw Math . ( 0 . 0 , p ) ;
rank: 650
score: 99.025146484375
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) null ;
rank: 650
score: 99.02149376502403
patch: throw ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 650
score: 98.97056070963542
patch: throw new Runtime CaMeL Exception ( $STRING$ , value ) ;
rank: 650
score: 98.85475667317708
patch: throw Math CaMeL Exception throw new Exception ( $STRING$ ) ;
rank: 651
score: 99.03152231069711
patch: throw Math CaMeL Exception ( $STRING$ , p + $STRING$ ) ;
rank: 651
score: 99.02513538707386
patch: mean = p ; epsilon = max CaMeL Iterations ;
rank: 651
score: 99.01339956430289
patch: throw ( Illegal CaMeL Argument CaMeL Exception 1 . $STRING$ ) ;
rank: 651
score: 98.8544921875
patch: throw Math . normal ( $STRING$ , p ) ;
rank: 652
score: 99.10331217447917
patch: throw Math . Runtime CaMeL Exception ( false ) ; }
rank: 652
score: 99.03076171875
patch: throw Math CaMeL Exception ( to CaMeL String ( ) ) ;
rank: 652
score: 99.0210848721591
patch: throw Math . 0 ( $STRING$ , p ) ;
rank: 652
score: 99.01849834735577
patch: throw Math . abs ( p - $NUMBER$ . 0 ) ;
rank: 652
score: 98.9701416015625
patch: throw new Runtime CaMeL Exception ( $NUMBER$ ) ;
rank: 652
score: 98.85396634615384
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p + $STRING$ ;
rank: 653
score: 99.10325270432692
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ true ) ;
rank: 653
score: 99.03047688802083
patch: throw Math . ( 0 . 0 , $STRING$ ) ;
rank: 653
score: 99.02092950994319
patch: throw Math . Math ( $STRING$ , p ) ;
rank: 653
score: 99.01814778645833
patch: throw new Internal CaMeL Error ( $STRING$ + p ) ;
rank: 654
score: 99.14154522235577
patch: throw Math . substring ( 0 , p + $STRING$ ) ;
rank: 654
score: 99.10210712139423
patch: throw Math . Runtime CaMeL Exception ( log , $STRING$ ) ;
rank: 654
score: 99.07251915564903
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 654
score: 99.01803823617789
patch: throw Math . max ( $NUMBER$ , p + 1 ) ;
rank: 654
score: 99.01266479492188
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( ) {
rank: 655
score: 99.10166931152344
patch: Math . sqrt ( p ) ;
rank: 655
score: 99.0299823467548
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . min ( ;
rank: 655
score: 99.01797485351562
patch: throw throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 655
score: 99.01209605823864
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p ;
rank: 655
score: 98.85328258167614
patch: throw Math . insert ( p , p ) ;
rank: 656
score: 99.10158128004808
patch: mean = p ; normal = 0 ; normal = 0 ;
rank: 656
score: 99.02894083658855
patch: throw Math CaMeL Exception ( . 1 , p ) ;
rank: 656
score: 99.01697887073864
patch: throw Math . max ( $STRING$ , $STRING$ ) ;
rank: 656
score: 99.01676025390626
patch: throw new Error ( p + $STRING$ ) ;
rank: 656
score: 99.01009427584134
patch: throw Math CaMeL Runtime CaMeL Exception . log ( p ) ;
rank: 656
score: 98.96840413411458
patch: throw new Math CaMeL Runtime CaMeL Exception ( $NUMBER$ ) ;
rank: 656
score: 98.85234832763672
patch: throw Math . exit ( ) ;
rank: 657
score: 99.13599742542614
patch: throw Math . substring ( p , p ) ;
rank: 657
score: 99.10073020241477
patch: throw Math . Runtime CaMeL Exception ( false ) ;
rank: 657
score: 99.02755737304688
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . ) ;
rank: 657
score: 99.01609450120192
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ;
rank: 657
score: 98.85219504616477
patch: throw Math . index CaMeL Of ( $STRING$ ) ;
rank: 658
score: 99.1434795673077
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . this ) ;
rank: 658
score: 99.1356952373798
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ & p ) ;
rank: 658
score: 99.1002666766827
patch: return new Normal CaMeL Distribution CaMeL Impl ( p ) ; }
rank: 658
score: 99.06902606670673
patch: throw Math . append ( $STRING$ , p , p ) ;
rank: 658
score: 99.01575816761364
patch: throw Math . sqrt ( p + $STRING$ ) ;
rank: 658
score: 99.0155498798077
patch: throw Math . max ( 0 , $NUMBER$ . 0 ) ;
rank: 658
score: 99.00949331430289
patch: throw ( Math . abs ( p ) <= 0 ) ;
rank: 658
score: 98.85215065696023
patch: throw Math . max ( 0 + p ) ;
rank: 659
score: 99.14276123046875
patch: throw this . throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 659
score: 99.0999286358173
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ $NUMBER$ ) ; }
rank: 659
score: 99.06856863839286
patch: throw Math Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 659
score: 99.02581317608173
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + 0 ) ;
rank: 659
score: 99.01553005642361
patch: throw Math . 0 ( p ) ;
rank: 659
score: 99.01463734019886
patch: throw Math . abs ( p * $NUMBER$ ) ;
rank: 659
score: 98.8512295809659
patch: throw throw new Runtime CaMeL Exception ( p ) ;
rank: 660
score: 99.14272836538461
patch: throw Math . Runtime CaMeL Exception ( $STRING$ . 0 ) ;
rank: 660
score: 99.02471923828125
patch: throw Math . Runtime CaMeL Exception ( ( ) ) ;
rank: 660
score: 99.01542524857955
patch: mean = p ; normal = 0 . 0 ;
rank: 660
score: 99.00823505108173
patch: throw Math CaMeL Runtime CaMeL Exception . wait ( 1 ) ;
rank: 660
score: 98.8511629971591
patch: throw Math . append ( p , $STRING$ ) ;
rank: 661
score: 99.13370455228366
patch: throw Math . substring ( p , max CaMeL Iterations ) ;
rank: 661
score: 99.09975363991477
patch: mean = Math . sqrt ( p ) ; }
rank: 661
score: 99.0668194110577
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ;
rank: 661
score: 99.02460186298077
patch: throw Math CaMeL Exception ( Math . abs ( p ) ;
rank: 661
score: 99.0151034268466
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math .
rank: 661
score: 99.013671875
patch: throw new Null CaMeL Pointer CaMeL Exception ( p + ) ;
rank: 661
score: 99.00816999162946
patch: return new Normal CaMeL Distribution CaMeL Impl ( $STRING$ , p ) ;
rank: 661
score: 98.96317545572917
patch: throw new Runtime CaMeL Exception ( String . class ) ;
rank: 661
score: 98.85068581321023
patch: throw Math . exit ( 0 , p ) ;
rank: 662
score: 99.09932454427083
patch: mean = p ; normal = p ;
rank: 662
score: 99.06678118024554
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , start ) ;
rank: 662
score: 99.0142822265625
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ double ) ;
rank: 662
score: 99.00656362680289
patch: throw Math CaMeL Runtime CaMeL Exception . signum ( $STRING$ ) ;
rank: 662
score: 98.96117146809895
patch: throw Math CaMeL Runtime CaMeL Exception != ( $STRING$ ) ;
rank: 662
score: 98.84938742897727
patch: throw Math . round ( p , $NUMBER$ ) ;
rank: 663
score: 99.14198996803977
patch: throw Math . Runtime CaMeL Exception ( 0 ) ;
rank: 663
score: 99.13326322115384
patch: throw ( Math . max ( 0 , epsilon ) ) ;
rank: 663
score: 99.09759521484375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ - ) ;
rank: 663
score: 99.0233154296875
patch: throw Math CaMeL Exception ( . ( ) , p ) ;
rank: 663
score: 99.01380072699652
patch: mean = 0 ; normal = null ;
rank: 663
score: 99.00563401442308
patch: throw Math . Null CaMeL Pointer CaMeL Exception ( p ) ;
rank: 663
score: 98.96084594726562
patch: try { throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 663
score: 98.84926350911458
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 664
score: 99.09749348958333
patch: ( ( Normal CaMeL Distribution CaMeL Impl ) p ) .
rank: 664
score: 99.06451416015625
patch: throw Math CaMeL Runtime CaMeL Exception . get CaMeL Runtime ( ) ;
rank: 664
score: 99.02330603966347
patch: throw Math . Runtime CaMeL Exception ( Math . abs ( ;
rank: 664
score: 99.01247336647727
patch: return ( Normal CaMeL Distribution CaMeL Impl ) p ;
rank: 664
score: 99.00443812779018
patch: { p = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 664
score: 98.96068725585937
patch: throw Math CaMeL Runtime CaMeL Exception != null ;
rank: 665
score: 99.13271859975961
patch: throw Math CaMeL Runtime CaMeL Exception ( mean , p ) ;
rank: 665
score: 99.09668986002605
patch: throw Math CaMeL Runtime CaMeL Exception ( $NUMBER$ ) ; }
rank: 665
score: 99.02316518930289
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }
rank: 665
score: 99.01108805338542
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ;
rank: 665
score: 99.01084547776442
patch: throw new Null CaMeL Pointer CaMeL Exception ( , p ) ;
rank: 665
score: 99.00435697115384
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( ) $STRING$ ) ;
rank: 665
score: 98.96035427517361
patch: throw new Interrupted CaMeL Exception ( ) ;
rank: 665
score: 98.84764515269886
patch: throw Math . round ( $STRING$ , p ) ;
rank: 666
score: 99.13800048828125
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( p , ) ;
rank: 666
score: 99.09559215198864
patch: mean = p ; this . normal = epsilon ;
rank: 666
score: 99.0224609375
patch: throw Math CaMeL Runtime CaMeL Exception ( err , p ) ;
rank: 666
score: 99.00276402064732
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p <= 0 ) ;
rank: 666
score: 98.95986938476562
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , ) ;
rank: 666
score: 98.8472012606534
patch: return Math . max ( p , p ) ;
rank: 667
score: 99.1377704326923
patch: throw new Exception ( Math . sqrt ( p ) ) ;
rank: 667
score: 99.09536743164062
patch: throw Math . Runtime CaMeL Exception ( + $STRING$ ) ;
rank: 667
score: 99.06305803571429
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p + ) ;
rank: 667
score: 99.02167217548077
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ( ) ) ;
rank: 667
score: 99.01018817608173
patch: throw Math . abs ( p / 1 . 0 ) ;
rank: 667
score: 99.0101318359375
patch: throw Math . FALSE ( $STRING$ ) ;
rank: 667
score: 99.00244140625
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 667
score: 98.84534801136364
patch: throw Math . max ( 0 , $NUMBER$ ) ;
rank: 668
score: 99.09241739908855
patch: return Math . sqrt ( p , epsilon ) ; }
rank: 668
score: 99.021484375
patch: throw Math CaMeL Exception . value CaMeL Of ( $STRING$ ) ;
rank: 668
score: 99.00970458984375
patch: throw ( $STRING$ . to CaMeL String ( ) ) ;
rank: 668
score: 99.00958721454327
patch: throw Math . min ( $STRING$ , $NUMBER$ . 0 ) ;
rank: 668
score: 98.9582010904948
patch: Math . exit ( 0 . 0 , p ) ;
rank: 668
score: 98.84531656901042
patch: throw new Illegal CaMeL State CaMeL Exception ( name ) ;
rank: 669
score: 99.13413492838542
patch: throw throw Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 669
score: 99.02083646334134
patch: try { throw Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 669
score: 98.9575703938802
patch: throw new Runtime CaMeL Exception ( $STRING$ + this ) ;
rank: 669
score: 98.84510633680556
patch: throw Math . sleep ( $STRING$ ) ;
rank: 670
score: 99.13140399639423
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ [ p ) ;
rank: 670
score: 99.09173583984375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ +
rank: 670
score: 99.00619506835938
patch: throw Math CaMeL Runtime CaMeL Exception ( p ;
rank: 670
score: 99.00126429966518
patch: { throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 670
score: 98.95452880859375
patch: assert new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 670
score: 98.84481811523438
patch: throw new Illegal CaMeL Access CaMeL Exception ( p ) ;
rank: 671
score: 99.13079364483173
patch: throw this . Math . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 671
score: 99.09161376953125
patch: return ( Normal CaMeL Distribution CaMeL Impl ) p ; }
rank: 671
score: 99.019775390625
patch: throw new Exception ( Math . floor ( p ) ) ;
rank: 671
score: 99.00426228841145
patch: throw new Internal CaMeL Error ( $STRING$ + $STRING$ ) ;
rank: 671
score: 98.94959513346355
patch: throw new Exception ( 0 . 0 , p ) ;
rank: 672
score: 99.09134928385417
patch: throw Math . Runtime CaMeL Exception ( $STRING$ $STRING$ ) ;
rank: 672
score: 99.01749361478366
patch: ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 672
score: 99.00266520182292
patch: throw new Null CaMeL Pointer CaMeL Exception ( null ) ;
rank: 672
score: 98.99806906960227
patch: throw Math . Interrupted CaMeL Exception ( $STRING$ ) ;
rank: 672
score: 98.84378051757812
patch: throw Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 673
score: 99.13027954101562
patch: throw new Poisson CaMeL Distribution CaMeL Impl ( p ) ;
rank: 673
score: 99.05830601283482
patch: throw throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , p ) ;
rank: 673
score: 98.99703543526786
patch: throw Math CaMeL Runtime CaMeL Exception != null ? p : p ;
rank: 673
score: 98.94578334263393
patch: throw new Exception ( ) ;
rank: 673
score: 98.84210759943181
patch: throw Math . max ( 0 , null ) ;
rank: 674
score: 99.1280517578125
patch: epsilon = Fast CaMeL Math . sqrt ( p ) ;
rank: 674
score: 99.1272442157452
patch: throw { throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 674
score: 99.08439331054687
patch: mean = p ; normal = null ; }
rank: 674
score: 99.01560465494792
patch: throw Math . Runtime CaMeL Exception $NUMBER$ ( $STRING$ ) ;
rank: 674
score: 98.99698580228366
patch: throw Math CaMeL Runtime CaMeL Exception . wait ( 0 ) ;
rank: 674
score: 98.84153238932292
patch: throw Math . abs ( p , 0 . ) ;
rank: 675
score: 99.12754603794643
patch: mean = ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 675
score: 99.01491292317708
patch: throw Math . Runtime CaMeL Exception ( $STRING$ + p ;
rank: 675
score: 98.99532376802884
patch: attribute = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 675
score: 98.94495646158855
patch: throw p [ 0 ] [ 0 ] = p ;
rank: 675
score: 98.84153053977273
patch: throw Math . sum ( p , p ) ;
rank: 676
score: 99.08385120738636
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ,
rank: 676
score: 99.01337139423077
patch: throw Math . Runtime CaMeL Exception ( System . err ) ;
rank: 676
score: 98.99562581380208
patch: throw Math . abs ( ( double ) p ) ;
rank: 676
score: 98.99493408203125
patch: throw Math . new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 676
score: 98.84122314453126
patch: throw . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 677
score: 99.12525353064903
patch: throw Math CaMeL Runtime CaMeL Exception ( this . $NUMBER$ ) ;
rank: 677
score: 99.08236694335938
patch: throw Math . Runtime CaMeL Exception ( this ) ; }
rank: 677
score: 99.01292067307692
patch: throw Math CaMeL Exception ( Math . clone ( ) ) ;
rank: 677
score: 98.99562766335227
patch: throw Math . get CaMeL Exception ( $STRING$ ) ;
rank: 677
score: 98.99479166666667
patch: throw Math . abs ( ( int ) p ) ;
rank: 677
score: 98.99454439603366
patch: throw ( Math . abs ( p ) == 0 ) ;
rank: 677
score: 98.94279341264205
patch: throw new Runtime CaMeL Exception ( $STRING$ + ) ;
rank: 677
score: 98.841064453125
patch: throw Math . min ( p , 0 . ) ;
rank: 678
score: 99.12439903846153
patch: throw Runtime . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 678
score: 99.12106557992789
patch: throw Math . arraycopy ( p , 0 , p ) ;
rank: 678
score: 99.08047485351562
patch: mean = p ; this . normal = epsilon ; }
rank: 678
score: 99.05522809709821
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p , ) ;
rank: 678
score: 99.01263897235577
patch: throw Math CaMeL Exception ( 1 . 0 , $STRING$ ) ;
rank: 678
score: 98.99411843039773
patch: mean = 0 ; epsilon = max CaMeL Iterations ;
rank: 678
score: 98.99392465444711
patch: assert ( Fast CaMeL Math . sqrt ( p ) ) ;
rank: 678
score: 98.94041859019886
patch: throw Math CaMeL Runtime CaMeL Exception ( 1 ) ;
rank: 678
score: 98.84102006392045
patch: throw Math . parse CaMeL Int ( $STRING$ ) ;
rank: 679
score: 99.08034261067708
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p ,
rank: 679
score: 99.01246134440105
patch: throw Math CaMeL Exception ( . $NUMBER$ , $STRING$ ) ;
rank: 679
score: 98.99431818181819
patch: throw Math . abs ( $NUMBER$ . 0 ) ;
rank: 679
score: 98.99380258413461
patch: throw Math CaMeL Runtime CaMeL Exception . { $STRING$ , p ;
rank: 679
score: 98.9933194247159
patch: mean = 0 ; normal = max CaMeL Iterations ;
rank: 679
score: 98.94007364908855
patch: throw new Runtime CaMeL Exception ( 1 . $NUMBER$ ) ;
rank: 680
score: 98.99144490559895
patch: normal = Fast CaMeL Math . sqrt ( p ) ;
rank: 680
score: 98.93890935724431
patch: throw Math . abs ( 1 . 0 ) ;
rank: 680
score: 98.84032093394886
patch: throw Math . normal ( p , $STRING$ ) ;
rank: 681
score: 99.12355735085227
patch: new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 681
score: 99.05255126953125
patch: throw new Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 681
score: 98.9386494954427
patch: throw new Runtime CaMeL Exception ( $STRING$ + name ) ;
rank: 682
score: 99.12287248883929
patch: normal = Math . sqrt ( p ) ; normal = p ;
rank: 682
score: 99.07688395182292
patch: throw Math CaMeL Runtime CaMeL Exception ( - 1 ) ;
rank: 682
score: 99.05201067243304
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ p ) ;
rank: 682
score: 98.9910555752841
patch: mean = 0 ; normal = 1 . 0 ;
rank: 683
score: 99.12283090444711
patch: throw Math CaMeL Runtime CaMeL Exception ( this . false ) ;
rank: 683
score: 98.99166165865384
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( $STRING$ ) ;
rank: 683
score: 98.98887125651042
patch: throw new Null CaMeL Pointer CaMeL Exception ( err ) ;
rank: 683
score: 98.9380594889323
patch: throw new Runtime CaMeL Exception ( $STRING$ , name ) ;
rank: 683
score: 98.83848741319444
patch: throw Math . abs ( $STRING$ ) ;
rank: 684
score: 99.12222055288461
patch: throw Runtime CaMeL Exception . Runtime CaMeL Exception ( p ) ;
rank: 684
score: 99.11283365885417
patch: throw ( Normal CaMeL Distribution CaMeL Impl )
rank: 684
score: 99.07540893554688
patch: throw Math . p ( $STRING$ , p ) ; }
rank: 684
score: 99.048828125
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ;
rank: 684
score: 98.99090576171875
patch: throw new public Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 684
score: 98.9876708984375
patch: throw Math . parse CaMeL Long ( p ) ;
rank: 684
score: 98.83782404119319
patch: throw Math . max ( p + p ) ;
rank: 685
score: 99.1212909405048
patch: throw Math CaMeL Runtime CaMeL Exception ( p . 0 ) ;
rank: 685
score: 99.0747958096591
patch: return Fast CaMeL Math . sqrt ( p ) ;
rank: 685
score: 98.98891194661458
patch: throw public Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 685
score: 98.98662775213069
patch: throw Math . Exception ( p + $STRING$ ) ;
rank: 685
score: 98.9372891512784
patch: throw Math . min ( 0 . 0 ) ;
rank: 685
score: 98.83621215820312
patch: throw Math CaMeL Exception . Math CaMeL Exception ( ) ;
rank: 686
score: 99.12096296037946
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ; } }
rank: 686
score: 99.00675455729167
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , ) ;
rank: 686
score: 98.9888446514423
patch: throw new public Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 686
score: 98.98579237196181
patch: mean = p ; normal = false ;
rank: 686
score: 98.93687947591145
patch: throw new Math CaMeL Runtime CaMeL Exception ( name ) ;
rank: 686
score: 98.83587646484375
patch: throw . Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 687
score: 99.11190091646634
patch: throw Math . to CaMeL String ( p , p ) ;
rank: 687
score: 99.07306518554688
patch: throw Math CaMeL Exception ( $STRING$ ) ; }
rank: 687
score: 99.00647650824652
patch: throw Math . Runtime CaMeL Exception ( ;
rank: 687
score: 98.98853478064903
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 687
score: 98.98543294270833
patch: throw new Null CaMeL Pointer CaMeL Exception ( this ) ;
rank: 687
score: 98.97930353338069
patch: throw Math . min ( $STRING$ , 0 ) ;
rank: 687
score: 98.9366122159091
patch: throw new . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 687
score: 98.83544243706598
patch: throw new Math CaMeL Exception ( ) ;
rank: 688
score: 99.11836460658482
patch: normal = Math . sqrt ( p ) ; normal = epsilon ;
rank: 688
score: 99.11021071213942
patch: throw ( Math . max ( $NUMBER$ , p ) ) ;
rank: 688
score: 99.006103515625
patch: throw new create CaMeL Illegal CaMeL Argument CaMeL Exception ( ;
rank: 688
score: 98.98638916015625
patch: throw Math CaMeL Runtime CaMeL Exception 0 ( $STRING$ ) ;
rank: 688
score: 98.98399861653645
patch: throw new Error ( p + $STRING$ + p ) ;
rank: 688
score: 98.97768332741477
patch: throw Math . mean ( p , epsilon ) ;
rank: 688
score: 98.93660481770833
patch: throw new Instantiation CaMeL Exception ( $STRING$ + p ) ;
rank: 688
score: 98.8353271484375
patch: throw Math . exit ( $STRING$ + p ) ;
rank: 689
score: 99.11818284254808
patch: throw Math CaMeL Runtime CaMeL Exception . exec ( p ) ;
rank: 689
score: 99.070068359375
patch: throw Math . Runtime CaMeL Exception ( $STRING$ true ) ;
rank: 689
score: 99.04588971819196
patch: throw Math create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 689
score: 98.98382013494319
patch: throw Math . round ( p + $NUMBER$ ) ;
rank: 689
score: 98.93618774414062
patch: throw new Exception ( $STRING$ , p + $STRING$ ) ;
rank: 689
score: 98.83391779119319
patch: throw Math . round ( p + p ) ;
rank: 690
score: 99.0684814453125
patch: return Math . sqrt ( p ) ; } }
rank: 690
score: 98.9835917154948
patch: throw Math . max ( 0 . 0 , ) ;
rank: 690
score: 98.93588256835938
patch: throw Math CaMeL Runtime CaMeL Exception != $NUMBER$ . $NUMBER$ ;
rank: 691
score: 99.10802283653847
patch: throw Math . substring ( 0 , p , 0 ) ;
rank: 691
score: 99.0458514873798
patch: throw ( Runtime CaMeL Exception ) new Exception ( $STRING$ ) ;
rank: 691
score: 98.98413957868304
patch: throw ( Runtime CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception (
rank: 691
score: 98.98255750868056
patch: throw Math . ceil ( p ) ;
rank: 691
score: 98.97705078125
patch: mean = 0 ; normal = $NUMBER$ ;
rank: 691
score: 98.93397105823864
patch: throw Math . format ( $STRING$ + p ) ;
rank: 691
score: 98.83368474786931
patch: throw Math . sleep ( p , $STRING$ ) ;
rank: 692
score: 99.10757211538461
patch: throw Math CaMeL Runtime CaMeL Exception ( p . class ) ;
rank: 692
score: 99.04523174579327
patch: throw Math CaMeL Runtime CaMeL Exception . run ( $STRING$ ) ;
rank: 692
score: 98.9997891512784
patch: throw Math . Exception ( $STRING$ + p ) ;
rank: 692
score: 98.98319185697116
patch: { p = Fast CaMeL Math . sqrt ( p ) ;
rank: 692
score: 98.98063151041667
patch: throw new Null CaMeL Pointer CaMeL Exception ( name ) ;
rank: 692
score: 98.9763916015625
patch: throw Math . to CaMeL String ( ) ;
rank: 692
score: 98.93321736653645
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 : p ;
rank: 693
score: 99.06255548650569
patch: return Math . sqrt ( p , epsilon ) ;
rank: 693
score: 99.04433969350961
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ;
rank: 693
score: 98.998291015625
patch: throw Math CaMeL Runtime CaMeL Exception ( ;
rank: 693
score: 98.98245004507211
patch: library = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 693
score: 98.9802579012784
patch: throw Math . Na CaMeL N ( $STRING$ ) ;
rank: 693
score: 98.83157009548611
patch: throw Math . append ( p ) ;
rank: 694
score: 99.11588228665866
patch: throw ( Math . Runtime CaMeL Exception ( p ) ) ;
rank: 694
score: 99.04387958233173
patch: throw Math CaMeL Runtime CaMeL Exception . delete ( p ) ;
rank: 694
score: 98.99486287434895
patch: throw Math CaMeL Runtime CaMeL Exception . interrupt ( ) ;
rank: 694
score: 98.98191528320312
patch: n = Math . sqrt ( p ) ;
rank: 694
score: 98.92847696940105
patch: Math . value CaMeL Of ( 0 . 0 ) ;
rank: 694
score: 98.8290127840909
patch: throw Math . round ( p , 0 ) ;
rank: 695
score: 99.06092325846355
patch: throw Math . Math ( p , p ) ; }
rank: 695
score: 98.99486194957386
patch: throw Math CaMeL Exception ( p , $STRING$ ) ;
rank: 695
score: 98.97867838541667
patch: throw new Throwable ( $STRING$ + p + $STRING$ ) ;
rank: 695
score: 98.92755681818181
patch: throw new Runtime CaMeL Exception ( p + ) ;
rank: 695
score: 98.8274813565341
patch: throw new Exception throw new Exception ( $STRING$ ) ;
rank: 696
score: 99.10516826923077
patch: throw new Runtime CaMeL Exception . to CaMeL String ( ) ;
rank: 696
score: 99.06032492897727
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . ;
rank: 696
score: 99.04280911959134
patch: throw Math CaMeL Runtime CaMeL Exception . load ( p ) ;
rank: 696
score: 98.9929532137784
patch: throw Math CaMeL Exception ( Math . abs ( ;
rank: 696
score: 98.9805157001202
patch: throw Math . log ( 0 . 0 , $STRING$ ) ;
rank: 696
score: 98.97755940755208
patch: throw Math . abs ( new Double ( ) ) ;
rank: 696
score: 98.92638050426136
patch: throw Math . abs ( $NUMBER$ , p ) ;
rank: 697
score: 99.05902099609375
patch: throw Math . Runtime CaMeL Exception ( + p ) ;
rank: 697
score: 99.04232352120536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , throw ) ;
rank: 697
score: 98.97711181640625
patch: throw Math . current CaMeL Time CaMeL Millis ( ) ;
rank: 697
score: 98.97383256392045
patch: throw Math . sqrt ( $STRING$ + 0 ) ;
rank: 697
score: 98.82601928710938
patch: throw Math . max ( p , ) ;
rank: 698
score: 99.11341271033653
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . false ) ;
rank: 698
score: 99.05869547526042
patch: throw Math . Runtime CaMeL Exception ( true ) ; }
rank: 698
score: 98.98824055989583
patch: throw Math . Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 698
score: 98.98024495442708
patch: throw ( Math CaMeL Runtime CaMeL Exception , $STRING$ ) ;
rank: 698
score: 98.977099609375
patch: throw new Null CaMeL Pointer CaMeL Exception ( ;
rank: 698
score: 98.97332208806819
patch: return Math . sqrt ( 0 . 0 ) ;
rank: 698
score: 98.92531516335227
patch: throw Math . value CaMeL Of ( $NUMBER$ ) ;
rank: 698
score: 98.82533094618056
patch: throw throw new Exception ( $STRING$ ) ;
rank: 699
score: 99.0585428873698
patch: mean = Math . sqrt ( p , p ) ;
rank: 699
score: 98.9800555889423
patch: throw Math . Unsupported CaMeL Operation CaMeL Exception ( p ) ;
rank: 699
score: 98.97323608398438
patch: normal = ( Normal CaMeL Distribution CaMeL Impl ) p ;
rank: 699
score: 98.92287190755208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; ;
rank: 699
score: 98.8251065340909
patch: throw Math . exit ( null , p ) ;
rank: 700
score: 99.05800374348958
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) null ; }
rank: 700
score: 99.04078020368304
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( , p ) ;
rank: 700
score: 98.98594156901042
patch: throw Math . Runtime CaMeL Exception 1 ( $STRING$ ) ;
rank: 700
score: 98.9706298828125
patch: throw Math . ( $STRING$ , $STRING$ ) ;
rank: 700
score: 98.9221903483073
patch: throw Math CaMeL Runtime CaMeL Exception == 0 . 0 ;
rank: 700
score: 98.82440185546875
patch: throw Math . exit ( null ) ;
rank: 701
score: 99.05689586292614
patch: Math . sqrt ( p , p ) ; }
rank: 701
score: 98.97768930288461
patch: throw Math CaMeL Runtime CaMeL Exception . interrupt ( ) ; }
rank: 701
score: 98.97251383463542
patch: throw new Error ( $STRING$ + $STRING$ + p ) ;
rank: 701
score: 98.96901448567708
patch: throw Math . mean ( p ) ;
rank: 701
score: 98.92047674005681
patch: throw Math CaMeL Runtime CaMeL Exception = new ) ;
rank: 701
score: 98.82393391927083
patch: throw Math . max ( p , $NUMBER$ . ) ;
rank: 702
score: 99.10758833451705
patch: throw ( Poisson CaMeL Distribution CaMeL Impl ) $STRING$ ;
rank: 702
score: 99.05685424804688
patch: throw Math CaMeL Exception ( $STRING$ , p ) ; }
rank: 702
score: 98.98385620117188
patch: p = Math . max ( 0 , p ) ;
rank: 702
score: 98.97176106770833
patch: throw new Assertion CaMeL Error ( $STRING$ , p ) ;
rank: 702
score: 98.91781616210938
patch: Math . append ( 0 . 0 , p ) ;
rank: 703
score: 99.05561967329545
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ; }
rank: 703
score: 99.04000418526786
patch: return new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 703
score: 98.98239135742188
patch: throw Math CaMeL Exception ( . $NUMBER$ , p ) ;
rank: 703
score: 98.97744315011161
patch: throw ( Illegal CaMeL Argument CaMeL Exception . p <= 0 ) ;
rank: 703
score: 98.96633078835227
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) 0 ;
rank: 703
score: 98.82183283025569
patch: throw Math . start ( p , $STRING$ ) ;
rank: 704
score: 99.10475510817308
patch: throw ( Math . Math . sqrt ( p ) ) ;
rank: 704
score: 99.0553311434659
patch: throw Math . Runtime CaMeL Exception ( true ) ;
rank: 704
score: 99.039306640625
patch: throw Math throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 704
score: 98.97678833007812
patch: result = Math . sqrt ( p ) ;
rank: 704
score: 98.96957397460938
patch: throw Math . round ( ( double ) p ) ;
rank: 704
score: 98.96586778428819
patch: throw Math . Long ( $STRING$ ) ;
rank: 704
score: 98.91318969726562
patch: Math . exit ( 0 . 0 ) ;
rank: 705
score: 99.09829477163461
patch: throw Math CaMeL Runtime CaMeL Exception ( p + null ) ;
rank: 705
score: 99.03916713169643
patch: throw Math CaMeL Runtime CaMeL Exception , Illegal CaMeL Argument CaMeL Exception ;
rank: 705
score: 98.97899373372395
patch: Math . max ( 1 . 0 , p ) ;
rank: 705
score: 98.97650146484375
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 705
score: 98.9695536295573
patch: throw new Assertion CaMeL Error ( p + $STRING$ ) ;
rank: 705
score: 98.91152121803977
patch: throw Math . abs ( $STRING$ , p ) ;
rank: 705
score: 98.82136674360795
patch: throw Math . max ( null , 0 ) ;
rank: 706
score: 99.0978252704327
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ == $NUMBER$ ) ;
rank: 706
score: 99.05104573567708
patch: throw Math CaMeL Runtime CaMeL Exception ( log ) ; }
rank: 706
score: 98.97615189985795
patch: throw new public Runtime CaMeL Exception ( $STRING$ ) ;
rank: 706
score: 98.96369764539931
patch: throw Math . Math ( $STRING$ ) ;
rank: 706
score: 98.91111450195312
patch: throw new Security CaMeL Exception ( $STRING$ ) ;
rank: 706
score: 98.81793767755681
patch: throw Math . min ( $STRING$ + p ) ;
rank: 707
score: 98.97542630709134
patch: throw Math CaMeL Runtime CaMeL Exception . capacity ( $STRING$ ) ;
rank: 707
score: 98.96812855113636
patch: throw Math . ) ( p + $STRING$ ) ;
rank: 707
score: 98.96222478693181
patch: throw Math CaMeL Runtime CaMeL Exception ( err ) ;
rank: 707
score: 98.91041148792614
patch: throw Math . min ( $NUMBER$ , 0 ) ;
rank: 707
score: 98.81784889914773
patch: throw Math . sleep ( 1 . 0 ) ;
rank: 708
score: 99.03607177734375
patch: throw ( Illegal CaMeL Argument CaMeL Exception + $STRING$ ) ;
rank: 708
score: 98.97516338641827
patch: throw ( Math . min ( p , 1 ) ) ;
rank: 708
score: 98.96171061197917
patch: throw Math . iterator ( $STRING$ ) ;
rank: 708
score: 98.81590779622395
patch: throw Math CaMeL Runtime CaMeL Exception . . ( ) ;
rank: 709
score: 99.09922096946023
patch: this ( Math . sqrt ( p ) ) ;
rank: 709
score: 99.04842122395833
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . }
rank: 709
score: 99.03583635602679
patch: create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ) ;
rank: 710
score: 99.09921499399039
patch: throw Math CaMeL Runtime CaMeL Exception ( this . null ) ;
rank: 710
score: 99.09154256184895
patch: throw new Runtime CaMeL Exception ( null , p ) ;
rank: 710
score: 99.0475186434659
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) }
rank: 710
score: 98.9723369891827
patch: expr = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 710
score: 98.81340997869319
patch: throw Math . log ( $STRING$ + p ) ;
rank: 711
score: 99.09012545072116
patch: throw Math . substring ( 0 , p , p ) ;
rank: 711
score: 99.04709879557292
patch: throw Math CaMeL Runtime CaMeL Exception ( p , ) ;
rank: 711
score: 98.81090198863636
patch: throw Math . max ( false , p ) ;
rank: 712
score: 99.0894775390625
patch: throw Math . substring ( max CaMeL Iterations , 0 ) ;
rank: 712
score: 99.04616292317708
patch: throw Math . Runtime CaMeL Exception ( $STRING$ false ) ;
rank: 712
score: 98.9727274576823
patch: throw Math . Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 712
score: 98.97066556490384
patch: throw Math CaMeL Runtime CaMeL Exception . split ( $STRING$ ) ;
rank: 712
score: 98.95855158025569
patch: throw Math . sqrt ( $STRING$ , null ) ;
rank: 712
score: 98.90498046875
patch: throw Math CaMeL Runtime CaMeL Exception < $NUMBER$ ;
rank: 712
score: 98.81088256835938
patch: throw Math . max ( ) ;
rank: 713
score: 99.09818209134616
patch: throw Math CaMeL Runtime CaMeL Exception ( Math . p ) ;
rank: 713
score: 99.04608154296875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ( (
rank: 713
score: 99.034423828125
patch: throw throw ( Illegal CaMeL Argument CaMeL Exception , $STRING$ ) ;
rank: 713
score: 98.9722900390625
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( $STRING$ ;
rank: 713
score: 98.9706561748798
patch: { ( ( Normal CaMeL Distribution CaMeL Impl ) p ) .
rank: 713
score: 98.96575927734375
patch: throw new Error ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 713
score: 98.95557750355114
patch: throw Math . sqrt ( $STRING$ , 0 ) ;
rank: 713
score: 98.80974786931819
patch: throw Math . floor ( p , $STRING$ ) ;
rank: 714
score: 99.0966045673077
patch: throw Math CaMeL Runtime CaMeL Exception ( String . 0 ) ;
rank: 714
score: 99.04234822591145
patch: throw Math . sqrt ( p , $STRING$ ) ; }
rank: 714
score: 98.96982828776042
patch: throw ( Math CaMeL Runtime CaMeL Exception , p ) ;
rank: 714
score: 98.80902654474431
patch: throw Math . sleep ( p , null ) ;
rank: 715
score: 99.0958251953125
patch: throw Math . Runtime CaMeL Exception ( $NUMBER$ ) ;
rank: 715
score: 99.08641468394886
patch: throw ( Math . abs ( p ) ) ;
rank: 715
score: 99.0408426920573
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ null ) ;
rank: 715
score: 98.96793306790866
patch: throw Math . Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 715
score: 98.89790649414063
patch: Math . sleep ( 0 . 0 ) ;
rank: 715
score: 98.80809868706598
patch: throw Math . max ( 0 ) ;
rank: 716
score: 99.09487680288461
patch: throw Math . Runtime CaMeL Exception ( p . this ) ;
rank: 716
score: 99.03401692708333
patch: throw Math CaMeL Runtime CaMeL Exception + $STRING$ + p ;
rank: 716
score: 98.96685321514423
patch: bug = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 716
score: 98.95481178977273
patch: throw Math . 0 ( $STRING$ + p ) ;
rank: 716
score: 98.89698375355114
patch: throw Math CaMeL Runtime CaMeL Exception $NUMBER$ ( ) ;
rank: 717
score: 99.09346829927884
patch: new Poisson CaMeL Distribution CaMeL Impl ( p , p ) ;
rank: 717
score: 99.08174954927884
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ ) + $STRING$ ;
rank: 717
score: 99.02986363002232
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Throwable ( ) ;
rank: 717
score: 98.96958414713542
patch: throw Math . ( $NUMBER$ . 0 , p ) ;
rank: 717
score: 98.9666278545673
patch: throw Math CaMeL Runtime CaMeL Exception . floor ( $STRING$ ) ;
rank: 717
score: 98.96394856770833
patch: throw new Internal CaMeL Error ( p + $STRING$ ) ;
rank: 717
score: 98.95448133680556
patch: throw Math . abs ( 0 ) ;
rank: 717
score: 98.89484197443181
patch: throw Math CaMeL Runtime CaMeL Exception [ ) ) ;
rank: 718
score: 99.08052571614583
patch: throw Math Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 718
score: 99.02951485770089
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) = $STRING$ ;
rank: 718
score: 98.8942538174716
patch: throw Math . ceil ( 0 . 0 ) ;
rank: 718
score: 98.80408325195313
patch: throw Illegal CaMeL State CaMeL Exception ( ) ;
rank: 719
score: 99.0888202373798
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( 0 ) ;
rank: 719
score: 99.03849283854167
patch: throw new Runtime CaMeL Exception ( null , $STRING$ ) ;
rank: 719
score: 98.96855024857955
patch: throw Math . Runtime CaMeL Exception ( new ) ;
rank: 719
score: 98.96529447115384
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ( $STRING$ ) ;
rank: 719
score: 98.96239217122395
patch: throw new Exception ( p + $STRING$ + $STRING$ ) ;
rank: 719
score: 98.95305841619319
patch: mean = max CaMeL Iterations ; normal = null ;
rank: 719
score: 98.80385520241477
patch: throw Math . start ( $STRING$ + p ) ;
rank: 720
score: 99.08753551136364
patch: throw ( Math CaMeL Runtime CaMeL Exception ) false ;
rank: 720
score: 99.03846232096355
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( $STRING$ ,
rank: 720
score: 98.96827281605114
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ + ;
rank: 720
score: 98.96223958333333
patch: throw Math . max ( 0 . 0 , p ;
rank: 721
score: 99.0867450420673
patch: throw Math CaMeL Runtime CaMeL Exception ( p , this ) ;
rank: 721
score: 99.0380615234375
patch: throw Math . 0 ( $STRING$ ) ; }
rank: 721
score: 98.96157836914062
patch: throw Math . round ( ( int ) p ) ;
rank: 721
score: 98.95264781605114
patch: throw Math . sqrt ( $STRING$ . null ) ;
rank: 721
score: 98.8895596590909
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; ;
rank: 721
score: 98.8026123046875
patch: throw Math . compare ( p , p ) ;
rank: 722
score: 99.08523559570312
patch: p = ( Normal CaMeL Distribution CaMeL Impl ) p ;
rank: 722
score: 99.07286580403645
patch: throw new Runtime CaMeL Exception ( p . $STRING$ ) ;
rank: 722
score: 99.0361328125
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , p +
rank: 722
score: 99.0235595703125
patch: throw Math CaMeL Runtime CaMeL Exception . run ( this ) ;
rank: 722
score: 98.96349158653847
patch: throw Math CaMeL Runtime CaMeL Exception . round ( $STRING$ ) ;
rank: 722
score: 98.96097819010417
patch: throw new Null CaMeL Pointer CaMeL Exception ( false ) ;
rank: 722
score: 98.95224338107639
patch: throw Math . Float ( $STRING$ ) ;
rank: 722
score: 98.88414417613636
patch: throw Math . format ( p , $STRING$ ) ;
rank: 722
score: 98.80260120738636
patch: throw Math . exit ( 1 . 0 ) ;
rank: 723
score: 99.084716796875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( double ) ;
rank: 723
score: 99.0725567157452
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) Math . TRUE ;
rank: 723
score: 99.03582763671875
patch: throw Math . p ( p , p ) ; }
rank: 723
score: 99.02328927176339
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ ;
rank: 723
score: 98.96437766335227
patch: throw Math . Runtime CaMeL Exception ( err ) ;
rank: 723
score: 98.9630126953125
patch: throw Math $NUMBER$ . 1 ( $STRING$ , p ) ;
rank: 723
score: 98.95195978338069
patch: throw Math . compare ( $STRING$ , p ) ;
rank: 723
score: 98.8837890625
patch: throw Math CaMeL Runtime CaMeL Exception [ $NUMBER$ ] ;
rank: 723
score: 98.80213512073864
patch: throw Math . round ( $STRING$ + p ) ;
rank: 724
score: 99.03572591145833
patch: normal = Math . sqrt ( p , p ) ;
rank: 724
score: 98.9637451171875
patch: throw Math CaMeL Exception ( p + $STRING$ ) ;
rank: 724
score: 98.80202414772727
patch: throw Math . max ( p , 1 ) ;
rank: 725
score: 99.03538208007812
patch: throw Math . Runtime CaMeL Exception ( $STRING$ ,
rank: 725
score: 98.96120198567708
patch: throw Math CaMeL Runtime CaMeL Exception 1 ( p ) ;
rank: 725
score: 98.95989990234375
patch: throw new Error ( $STRING$ , p ) ;
rank: 725
score: 98.94865587022569
patch: mean = p ; normal = $NUMBER$ ;
rank: 725
score: 98.88311212713069
patch: throw Math . abs ( $STRING$ + p ) ;
rank: 725
score: 98.80138050426136
patch: throw Math . round ( 0 . 0 ) ;
rank: 726
score: 99.08056640625
patch: normal = new Normal CaMeL Distribution CaMeL Impl ( $STRING$ ) ;
rank: 726
score: 99.0332364169034
patch: throw System . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 726
score: 98.9620028409091
patch: throw Math CaMeL Exception ( this , $STRING$ ) ;
rank: 726
score: 98.80120294744319
patch: throw Math . split ( $STRING$ , p ) ;
rank: 727
score: 99.03298117897727
patch: throw Math . sqrt ( $STRING$ ) ; } }
rank: 727
score: 98.9588623046875
patch: create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 727
score: 98.95704064002403
patch: throw Math CaMeL Runtime CaMeL Exception . decode ( $STRING$ ) ;
rank: 727
score: 98.80113636363636
patch: return Math . abs ( p , p ) ;
rank: 728
score: 99.07688395182292
patch: max CaMeL Iterations = Math . sqrt ( p ) ;
rank: 728
score: 99.03053977272727
patch: throw new Runtime CaMeL Exception ( p ) ; }
rank: 728
score: 98.95655314127605
patch: throw public Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 728
score: 98.94589572482639
patch: throw Math . min ( $STRING$ ) ;
rank: 728
score: 98.8782626065341
patch: throw Math . p ( 0 . 0 ) ;
rank: 729
score: 99.07664998372395
patch: throw new Math CaMeL Runtime CaMeL Exception ( 0 ) ;
rank: 729
score: 99.0652364095052
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ int ) ;
rank: 729
score: 98.95885213216145
patch: throw new Illegal CaMeL Argument CaMeL Exception ( length ) ;
rank: 729
score: 98.95808549360795
patch: return Math . max ( 0 , p ) ;
rank: 729
score: 98.9564960186298
patch: return new Normal CaMeL Distribution CaMeL Impl ( p , ) ;
rank: 729
score: 98.80085584852431
patch: throw Math . format ( p ) ;
rank: 730
score: 99.07661576704545
patch: throw ( Poisson CaMeL Distribution CaMeL Impl ) false ;
rank: 730
score: 99.05940755208333
patch: throw Math CaMeL Runtime CaMeL Exception ( , $STRING$ ) ;
rank: 730
score: 99.0035400390625
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ;
rank: 730
score: 98.95664469401042
patch: p = Math . min ( 0 , p ) ;
rank: 730
score: 98.9564208984375
patch: throw Math CaMeL Runtime CaMeL Exception . yield ( p ) ;
rank: 730
score: 98.94469105113636
patch: throw Math . p ( p , p ) ;
rank: 730
score: 98.87662963867187
patch: throw new Runtime CaMeL Exception ( 1 ) ;
rank: 730
score: 98.79941813151042
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 731
score: 99.07623291015625
patch: epsilon = Math . sqrt ( p ) ;
rank: 731
score: 99.02388305664063
patch: throw Math . abs ( p ) ; }
rank: 731
score: 98.95692027698864
patch: throw Math . round ( p * $NUMBER$ ) ;
rank: 731
score: 98.95628004807692
patch: throw Math . log ( 0 . 0 , p ) ;
rank: 731
score: 98.94455788352273
patch: throw Math . sqrt ( p + p ) ;
rank: 731
score: 98.87515869140626
patch: throw new Instantiation CaMeL Exception ( $STRING$ ) ;
rank: 731
score: 98.79868386008523
patch: throw throw new Exception ( $STRING$ + p ) ;
rank: 732
score: 99.05657404119319
patch: throw Math . out ( $STRING$ + p ) ;
rank: 732
score: 99.0000712076823
patch: throw Math CaMeL Runtime CaMeL Exception . gc ( ) ;
rank: 732
score: 98.95553823617789
patch: throw Math new Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 732
score: 98.95382690429688
patch: throw Math . abs ( ( float ) p ) ;
rank: 732
score: 98.95084635416667
patch: throw Math CaMeL Runtime CaMeL Exception . Exception ( ) ;
rank: 732
score: 98.9420166015625
patch: throw Math CaMeL Runtime CaMeL Exception ( FALSE ) ;
rank: 732
score: 98.79819742838542
patch: throw throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 733
score: 99.05559747869319
patch: throw Math . substring ( $NUMBER$ , p ) ;
rank: 733
score: 98.9549091045673
patch: throw Math CaMeL Runtime CaMeL Exception . sleep ( 0 ) ;
rank: 733
score: 98.9536844889323
patch: throw Math . round ( new Double ( ) ) ;
rank: 733
score: 98.9412841796875
patch: throw Math instanceof Illegal CaMeL Argument CaMeL Exception ;
rank: 733
score: 98.87191162109374
patch: throw new Error ( p , $STRING$ ) ;
rank: 733
score: 98.79804021661931
patch: throw new Illegal CaMeL Access CaMeL Exception ( ) ;
rank: 734
score: 99.05314805772569
patch: throw Math . arraycopy ( p ) ;
rank: 734
score: 99.01300726996527
patch: throw Math . ( $STRING$ ) ; }
rank: 734
score: 98.99673227163461
patch: throw Illegal CaMeL Argument CaMeL Exception ( null + p ) ;
rank: 734
score: 98.9541766826923
patch: re = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 734
score: 98.95255737304687
patch: throw new Assertion CaMeL Error ( p ) ;
rank: 734
score: 98.94996226917614
patch: throw Math . Exception ( $STRING$ , p ) ;
rank: 734
score: 98.93928666548295
patch: throw Math . sqrt ( p . $STRING$ ) ;
rank: 734
score: 98.87184836647727
patch: throw Math . max ( $NUMBER$ , null ) ;
rank: 735
score: 99.07252086292614
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) false ;
rank: 735
score: 98.9540506998698
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( ) ;
rank: 735
score: 98.95224831321023
patch: throw Math . min ( p , 1 ) ;
rank: 735
score: 98.9497958096591
patch: throw Math CaMeL Exception ( . , $STRING$ ) ;
rank: 735
score: 98.93918678977273
patch: throw Math . equals ( $STRING$ , p ) ;
rank: 735
score: 98.87131754557292
patch: throw get CaMeL Exception ( $STRING$ ) ;
rank: 735
score: 98.7957763671875
patch: throw Math . sleep ( $STRING$ , p ) ;
rank: 736
score: 98.9922626201923
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 736
score: 98.9493408203125
patch: throw Math CaMeL Runtime CaMeL Exception ( new ; }
rank: 736
score: 98.9373779296875
patch: throw Math . sqrt ( p , 0 ) ;
rank: 736
score: 98.87117143110795
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this ;
rank: 736
score: 98.79574584960938
patch: throw Math . max ( p , p ) ; }
rank: 737
score: 99.0667724609375
patch: throw ( Math CaMeL Runtime CaMeL Exception ) null ;
rank: 737
score: 98.9523174579327
patch: throw Math CaMeL Runtime CaMeL Exception . PI ( p ) ;
rank: 737
score: 98.95018513997395
patch: logger = Math . max ( p , p ) ;
rank: 737
score: 98.93562455610795
patch: throw Math . mean ( p , p ) ;
rank: 737
score: 98.86796431107955
patch: throw new Exception Runtime CaMeL Exception ( $STRING$ ) ;
rank: 737
score: 98.79450017755681
patch: throw Math . append ( $STRING$ + p ) ;
rank: 738
score: 99.06256103515625
patch: mean = new Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 738
score: 99.00689697265625
patch: throw Math . Exception ( $STRING$ ) ; }
rank: 738
score: 98.9491678873698
patch: throw Math . round ( ( float ) p ) ;
rank: 738
score: 98.93340509588069
patch: logger . = Math . sqrt ( p ) ;
rank: 738
score: 98.86613325639205
patch: throw Math . max ( 1 . 0 ) ;
rank: 738
score: 98.79390092329545
patch: throw Math . max ( $NUMBER$ , $NUMBER$ ) ;
rank: 739
score: 99.04694158380681
patch: throw Math . MAX _ VALUE ( $STRING$ ) ;
rank: 739
score: 98.9512939453125
patch: throw ( Math . round ( p ) ) ;
rank: 739
score: 98.94875081380208
patch: throw new Assertion CaMeL Error ( p , $STRING$ ) ;
rank: 739
score: 98.94583129882812
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + ;
rank: 739
score: 98.93339399857955
patch: throw Math . p ( $STRING$ , $STRING$ ) ;
rank: 739
score: 98.86361083984374
patch: throw Math CaMeL Runtime CaMeL Exception == $NUMBER$ ;
rank: 739
score: 98.79286887428977
patch: throw Math . split ( p , p ) ;
rank: 740
score: 99.00548206676136
patch: throw new Runtime CaMeL Exception ( null ) ; }
rank: 740
score: 98.951171875
patch: throw new public Null CaMeL Pointer CaMeL Exception ( ) {
rank: 740
score: 98.9479647549716
patch: throw Math . parse CaMeL Float ( p ) ;
rank: 740
score: 98.94578043619792
patch: throw Math . ( $NUMBER$ . 0 , $STRING$ ) ;
rank: 740
score: 98.8628173828125
patch: Math . append ( p , p ) ;
rank: 741
score: 99.06153361002605
patch: throw new Illegal CaMeL Argument CaMeL Exception ( epsilon ) ;
rank: 741
score: 99.00198364257812
patch: throw Math CaMeL Runtime CaMeL Exception ( null ,
rank: 741
score: 98.95116248497597
patch: throw public Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 741
score: 98.94562322443181
patch: throw Math . min ( 0 , $NUMBER$ ) ;
rank: 741
score: 98.79250081380208
patch: Math . max ( p , 1 . 0 ) ;
rank: 742
score: 99.06058756510417
patch: normal = Math . sqrt ( max CaMeL Iterations ) ;
rank: 742
score: 99.00053267045455
patch: throw Math . ( p , p ) ; }
rank: 742
score: 98.95037372295673
patch: minor = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 742
score: 98.94623357599431
patch: throw Math . abs ( p - 1 ) ;
rank: 742
score: 98.94539018110795
patch: return Math . max ( 0 , 0 ) ;
rank: 742
score: 98.79196999289773
patch: throw Math . abs ( p , 1 ) ;
rank: 743
score: 99.06044921875
patch: throw Math CaMeL Runtime CaMeL Exception ( p .
rank: 743
score: 99.00041060014205
patch: { return Math . sqrt ( p ) ; }
rank: 743
score: 98.98983060396634
patch: throw Math CaMeL Runtime CaMeL Exception , new ( $STRING$ ) ;
rank: 743
score: 98.9500262920673
patch: plugin = new Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 743
score: 98.94462076822917
patch: throw new Internal CaMeL Error ( $STRING$ , p ) ;
rank: 743
score: 98.94424438476562
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ) ;
rank: 743
score: 98.93084161931819
patch: throw Math CaMeL Runtime CaMeL Exception ( format ) ;
rank: 743
score: 98.79191450639205
patch: throw Math . sleep ( 0 . 1 ) ;
rank: 744
score: 99.05785115559895
patch: throw new Runtime CaMeL Exception ( this . $STRING$ ) ;
rank: 744
score: 98.9999112215909
patch: throw . Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 744
score: 98.98875075120192
patch: throw Math CaMeL Runtime CaMeL Exception . wait ( p ) ;
rank: 744
score: 98.94989013671875
patch: throw public Illegal CaMeL Argument CaMeL Exception ( p ) {
rank: 744
score: 98.94427490234375
patch: Math . max ( 0 . $NUMBER$ , p ) ;
rank: 744
score: 98.94420369466145
patch: p = Math . max ( 0 , 0 ) ;
rank: 744
score: 98.93048650568181
patch: throw Math . p ( p , $STRING$ ) ;
rank: 744
score: 98.79069010416667
patch: throw Math . max ( null ) ;
rank: 745
score: 98.99734836154514
patch: throw new Exception ( $STRING$ ) ; }
rank: 745
score: 98.94380696614583
patch: throw new Null CaMeL Pointer CaMeL Exception ( value ) ;
rank: 745
score: 98.94353693181819
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , ;
rank: 745
score: 98.93007202148438
patch: { throw Math . sqrt ( $STRING$ ) ;
rank: 745
score: 98.859375
patch: throw Math . Na CaMeL N ( p ) ;
rank: 745
score: 98.78941761363636
patch: throw Math . max ( 0 , $STRING$ ) ;
rank: 746
score: 99.03834025065105
patch: throw new Runtime CaMeL Exception ( null + p ) ;
rank: 746
score: 98.99733664772727
patch: normal ( Math . sqrt ( p ) ) ;
rank: 746
score: 98.98784930889423
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p + $STRING$ ;
rank: 746
score: 98.9468994140625
patch: throw new ( Math . sqrt ( p ) ) ; }
rank: 746
score: 98.92822265625
patch: throw Math . sqrt ( $STRING$ . 0 ) ;
rank: 746
score: 98.78883870442708
patch: throw Math . exit ( 0 ) ;
rank: 747
score: 99.05224609375
patch: this . max CaMeL Iterations = max CaMeL Iterations ;
rank: 747
score: 98.94447631835938
patch: throw Math $NUMBER$ . 1 ( $STRING$ ) ;
rank: 747
score: 98.94300426136364
patch: throw Math . abs ( p - $NUMBER$ ) ;
rank: 747
score: 98.94199625651042
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ , ;
rank: 747
score: 98.92802290482955
patch: throw Math . sqrt ( $STRING$ + epsilon ) ;
rank: 747
score: 98.85802001953125
patch: throw new Exception . Exception ( $STRING$ ) ;
rank: 747
score: 98.78835227272727
patch: throw Math . index CaMeL Of ( p ) ;
rank: 748
score: 99.05149332682292
patch: Poisson CaMeL Distribution = Math . sqrt ( p ) ;
rank: 748
score: 98.98717322716347
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 ) ;
rank: 748
score: 98.94328169389205
patch: throw ( Illegal CaMeL Argument CaMeL Exception $NUMBER$ ) ;
rank: 748
score: 98.94291548295455
patch: throw Math . abs ( 0 . $NUMBER$ ) ;
rank: 748
score: 98.94173177083333
patch: throw Math CaMeL Runtime CaMeL Exception ( ( ) ) ;
rank: 748
score: 98.92802290482955
patch: throw Math CaMeL Runtime CaMeL Exception ( out ) ;
rank: 748
score: 98.85771484375
patch: Math . max ( 0 , p ) ;
rank: 748
score: 98.7870205965909
patch: throw Math CaMeL Runtime CaMeL Exception . ( ) ;
rank: 749
score: 99.03538929332386
patch: throw Math . MAX _ VALUE ( p ) ;
rank: 749
score: 98.9854266826923
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ) ;
rank: 749
score: 98.94261169433594
patch: throw new Throwable ( $STRING$ ) ;
rank: 749
score: 98.94125366210938
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ;
rank: 749
score: 98.927978515625
patch: = Fast CaMeL Math . sqrt ( p ) ;
rank: 749
score: 98.85694469105114
patch: throw Math CaMeL Runtime CaMeL Exception ( E ) ;
rank: 750
score: 99.04998779296875
patch: normal = Math . sqrt ( p ) ; } }
rank: 750
score: 98.98253455528847
patch: throw ( Exception ) new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 750
score: 98.94108072916667
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( 1 ) ;
rank: 750
score: 98.9400634765625
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ;
rank: 750
score: 98.927001953125
patch: throw Math . mean ( p , 0 ) ;
rank: 750
score: 98.854736328125
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ]
rank: 751
score: 99.04673258463542
patch: mean = Math . sqrt ( p ) ; } }
rank: 751
score: 99.0338643391927
patch: throw Math CaMeL Runtime CaMeL Exception ( 0 . 0 ;
rank: 751
score: 98.99354137073864
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ +
rank: 751
score: 98.9405008951823
patch: p = Math . max ( 0 , $NUMBER$ ) ;
rank: 751
score: 98.9256924715909
patch: throw Math = Math . sqrt ( 0 ) ;
rank: 751
score: 98.78655450994319
patch: throw ) . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 752
score: 99.03309215198864
patch: throw Math . substring ( epsilon , p ) ;
rank: 752
score: 98.99065483940973
patch: Math . sqrt ( p ) ; }
rank: 752
score: 98.97995229867789
patch: throw new Math CaMeL Runtime CaMeL Exception ( $STRING$ , ) ;
rank: 752
score: 98.93838500976562
patch: p = Math . max ( 0 , 1 ) ;
rank: 752
score: 98.93804931640625
patch: logger = Math . min ( p , p ) ;
rank: 752
score: 98.93500366210938
patch: ret = Math . sqrt ( p ) ;
rank: 752
score: 98.92555930397727
patch: throw Math . sqrt ( 0 . 1 ) ;
rank: 752
score: 98.8529296875
patch: throw new Runtime CaMeL Exception ( name ) ;
rank: 752
score: 98.7862215909091
patch: throw Math . exit ( 0 . 1 ) ;
rank: 753
score: 98.9888583096591
patch: throw Math . ( $STRING$ + p ) ; }
rank: 753
score: 98.93589089133523
patch: throw Math . ceil ( p + 1 ) ;
rank: 753
score: 98.9341708096591
patch: throw new Illegal CaMeL Argument CaMeL Exception $STRING$ ) ;
rank: 753
score: 98.92512650923295
patch: throw Math . equals ( p , p ) ;
rank: 754
score: 99.04238891601562
patch: mean = Math . sqrt ( max CaMeL Iterations ) ;
rank: 754
score: 98.98839721679687
patch: mean = p ; mean = p ; }
rank: 754
score: 98.9786376953125
patch: throw . Runtime CaMeL Exception ( $STRING$ + p ) ;
rank: 754
score: 98.93753662109376
patch: throw Math CaMeL Exception ( Math . ) ;
rank: 754
score: 98.93332741477273
patch: throw ( Math . ceil ( p ) ) ;
rank: 754
score: 98.84842529296876
patch: throw new Runtime CaMeL Exception ( 0 ) ;
rank: 754
score: 98.78480113636364
patch: throw Math = Math . max ( p ) ;
rank: 755
score: 99.04177024147727
patch: throw ( Math . sqrt ( epsilon ) ) ;
rank: 755
score: 98.98486328125
patch: normal = Math . sqrt ( p ) ; }
rank: 755
score: 98.97635591947116
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start ) ;
rank: 755
score: 98.93321644176136
patch: throw Math . round ( $NUMBER$ . 0 ) ;
rank: 755
score: 98.93283081054688
patch: return new Normal CaMeL Distribution CaMeL Impl [ 0 ] ;
rank: 755
score: 98.92237006293402
patch: mean = 0 ; normal = epsilon ;
rank: 755
score: 98.7840805053711
patch: throw Math . interrupt ( ) ;
rank: 756
score: 98.92978737571023
patch: throw public Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 756
score: 98.9210537997159
patch: throw Math . sqrt ( p . null ) ;
rank: 756
score: 98.84578857421874
patch: Math . abs ( 0 . 0 ) ;
rank: 756
score: 98.78187255859375
patch: throw Math . abs ( p , ) ;
rank: 757
score: 99.04048295454545
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p .
rank: 757
score: 99.02685546875
patch: throw Math . arraycopy ( p , 0 ) ;
rank: 757
score: 98.98419799804688
patch: throw Math . 0 ( p ) ; }
rank: 757
score: 98.97496541341145
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ;
rank: 757
score: 98.93051979758523
patch: throw new Number CaMeL Format CaMeL Exception ( ) ;
rank: 757
score: 98.92808948863636
patch: throw Math . Interrupted CaMeL Exception ( p ) ;
rank: 757
score: 98.92029918323864
patch: throw Math . epsilon ( p , p ) ;
rank: 757
score: 98.84249267578124
patch: assert new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 758
score: 99.0394287109375
patch: throw new Math CaMeL Runtime CaMeL Exception ( false ) ;
rank: 758
score: 99.02643377130681
patch: throw Math . substring ( p , epsilon ) ;
rank: 758
score: 98.92906605113636
patch: throw Math . init CaMeL Cause ( p ) ;
rank: 758
score: 98.92807006835938
patch: throw new Illegal CaMeL Argument CaMeL Exception 1 ( ) ;
rank: 758
score: 98.91919555664063
patch: mean = 0 ; normal = 0 ; }
rank: 758
score: 98.83853759765626
patch: throw new ) ;
rank: 758
score: 98.77640109592014
patch: throw Math . normal ( p ) ;
rank: 759
score: 98.98101251775569
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ .
rank: 759
score: 98.92899946732955
patch: throw Math . abs ( p - p ) ;
rank: 759
score: 98.83840942382812
patch: throw Math . value CaMeL Of ( ) ;
rank: 759
score: 98.77632279829545
patch: throw ( Illegal CaMeL State CaMeL Exception ) p ;
rank: 760
score: 99.03238932291667
patch: this . p = Math . sqrt ( epsilon ) ;
rank: 760
score: 98.9801358309659
patch: mean = p . p ; normal = epsilon ;
rank: 760
score: 98.97079467773438
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new ) ;
rank: 760
score: 98.92594770951705
patch: throw Math . Math CaMeL Runtime CaMeL Exception ( ;
rank: 760
score: 98.91771351207386
patch: throw Math . 0 ( p , p ) ;
rank: 760
score: 98.83665161132812
patch: throw Math CaMeL Runtime CaMeL Exception > $NUMBER$ ;
rank: 761
score: 98.96968587239583
patch: throw ( Illegal CaMeL Argument CaMeL Exception , this ) ;
rank: 761
score: 98.92667236328126
patch: throw new ) ; } mean = p ;
rank: 761
score: 98.9241610440341
patch: throw Math CaMeL Exception ( $NUMBER$ , $STRING$ ) ;
rank: 761
score: 98.92193048650569
patch: throw Math . Math CaMeL Exception ( p ) ;
rank: 761
score: 98.83406372070313
patch: throw Math CaMeL Runtime CaMeL Exception = value ;
rank: 761
score: 98.76925659179688
patch: throw Illegal CaMeL Argument CaMeL Exception = $STRING$ ;
rank: 762
score: 98.96873121995192
patch: throw Math CaMeL Runtime CaMeL Exception , new Exception ( ) ;
rank: 762
score: 98.92607421875
patch: list = Math . sqrt ( p ) ;
rank: 762
score: 98.91640896267361
patch: throw Math . trim ( p ) ;
rank: 762
score: 98.83148803710938
patch: throw new Exception ( $STRING$ , $STRING$ ) ;
rank: 762
score: 98.76835123697917
patch: throw Math . sum ( p ) ;
rank: 763
score: 99.02933756510417
patch: throw new Math CaMeL Runtime CaMeL Exception ( null ) ;
rank: 763
score: 98.923828125
patch: throw new Illegal CaMeL Argument CaMeL Exception $STRING$ $STRING$ ) ;
rank: 763
score: 98.91700328480114
patch: throw Math . max ( 0 , 1 ) ;
rank: 763
score: 98.91495768229167
patch: mean = 0 ; normal = 1 ;
rank: 763
score: 98.7584228515625
patch: throw Math . max ( p + ) ;
rank: 764
score: 99.02232530381944
patch: throw Math . out ( $STRING$ ) ;
rank: 764
score: 98.9163818359375
patch: throw Math CaMeL Exception ( 1 , $STRING$ ) ;
rank: 764
score: 98.91367797851562
patch: throw Math . ( $STRING$ , 0 ) ;
rank: 765
score: 98.97139115767045
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ . }
rank: 765
score: 98.967529296875
patch: throw throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 765
score: 98.92208862304688
patch: bad = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 765
score: 98.91254216974431
patch: return new Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 765
score: 98.91178588867187
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 765
score: 98.82119140625
patch: throw p == 0 . 0 : p ;
rank: 765
score: 98.75595703125
patch: throw Math = new Exception ( $STRING$ ) ;
rank: 766
score: 99.0228983561198
patch: this . normal = Math . sqrt ( epsilon ) ;
rank: 766
score: 98.97063654119319
patch: throw Math . Runtime CaMeL Exception ( $STRING$ , new
rank: 766
score: 98.90590598366477
patch: throw Math . , new Exception ( $STRING$ ) ;
rank: 766
score: 98.82013617621527
patch: throw new Exception $NUMBER$ ( $STRING$ ) ;
rank: 766
score: 98.75592041015625
patch: throw Math . log ( $STRING$ ) ;
rank: 767
score: 98.96489923650569
patch: throw Math . Math ( p , p ) ;
rank: 767
score: 98.91018337673611
patch: mean = 0 ; normal = false ;
rank: 767
score: 98.90578002929688
patch: throw new Internal CaMeL Error ( p ) ;
rank: 767
score: 98.81093139648438
patch: return new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 767
score: 98.75522867838542
patch: throw Math . sleep ( 0 ) ;
rank: 768
score: 98.96572875976562
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 768
score: 98.91652425130208
patch: throw Math ( Math . sqrt ( p ) ) ;
rank: 768
score: 98.90936957465277
patch: throw Math . sqrt ( null ) ;
rank: 768
score: 98.80870361328125
patch: throw Math CaMeL Runtime CaMeL Exception == this ;
rank: 768
score: 98.75448608398438
patch: throw Math . start ( ) ;
rank: 769
score: 99.0119295987216
patch: throw new Poisson CaMeL Distribution CaMeL Impl ( ) ;
rank: 769
score: 98.95830688476562
patch: mean = p ; normal = 0 ; }
rank: 769
score: 98.9088134765625
patch: throw Math . trim ( 0 . 0 ) ;
rank: 769
score: 98.90381469726563
patch: throw Math CaMeL Exception ( . 0 ) ;
rank: 769
score: 98.90216619318181
patch: throw Math . parse CaMeL Double ( $STRING$ ) ;
rank: 769
score: 98.80704752604167
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 769
score: 98.7501953125
patch: throw throw new Interrupted CaMeL Exception ( ) ;
rank: 770
score: 99.01048694957386
patch: new Poisson CaMeL Distribution CaMeL Impl ( p ) ;
rank: 770
score: 98.95390625
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) ;
rank: 770
score: 98.91596013849431
patch: { mean = Math . sqrt ( p ) ;
rank: 770
score: 98.90789240056819
patch: throw Math . max ( $STRING$ , $NUMBER$ ) ;
rank: 770
score: 98.89829323508523
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ , ;
rank: 770
score: 98.80690307617188
patch: throw new Runtime CaMeL Exception ( null ) ;
rank: 771
score: 99.01435990767045
patch: throw Math . iterator ( $STRING$ + p ) ;
rank: 771
score: 99.0088623046875
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ .
rank: 771
score: 98.96211751302083
patch: throw final Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 771
score: 98.950244140625
patch: Math . sqrt ( 0 . 0 ) ;
rank: 771
score: 98.9142178622159
patch: throw public Illegal CaMeL Argument CaMeL Exception ( ) {
rank: 771
score: 98.90535111860795
patch: this . mean = p ; normal = null ;
rank: 771
score: 98.90095350477431
patch: throw new Assertion CaMeL Error ( ) ;
rank: 771
score: 98.89718288845486
patch: throw Math CaMeL Runtime CaMeL Exception ; }
rank: 771
score: 98.80486450195312
patch: throw new Exception ( p , p ) ;
rank: 772
score: 99.00456099076705
patch: throw Math CaMeL Runtime CaMeL Exception ( epsilon ) ;
rank: 772
score: 98.90041281960227
patch: throw Math . decode ( p + $STRING$ ) ;
rank: 772
score: 98.89635120738636
patch: throw Math CaMeL Exception ( . , p ) ;
rank: 772
score: 98.80457763671875
patch: throw new Interrupted CaMeL Exception ( p ) ;
rank: 772
score: 98.7448397549716
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ Exception
rank: 773
score: 98.91179809570312
patch: throw public Runtime CaMeL Exception ( $STRING$ ) ;
rank: 773
score: 98.90022416548295
patch: return Math . min ( p , p ) ;
rank: 773
score: 98.89466441761364
patch: return Math . max ( 0 , 1 ) ;
rank: 773
score: 98.80401611328125
patch: Math . append ( $STRING$ , p ) ;
rank: 773
score: 98.74384099786931
patch: throw p . get CaMeL Exception ( ) ; }
rank: 774
score: 98.91061401367188
patch: result = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 774
score: 98.8936767578125
patch: mean = p ; normal = true ;
rank: 774
score: 98.89309353298611
patch: throw Math CaMeL Exception ( p ) ;
rank: 775
score: 99.0118408203125
patch: throw Math . substring ( 0 , epsilon ) ;
rank: 775
score: 98.99053400213069
patch: throw Runtime . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 775
score: 98.94480590820312
patch: Math . sqrt ( p <= 0 ) ;
rank: 775
score: 98.80294799804688
patch: Math . min ( p , p ) ;
rank: 775
score: 98.74196370442708
patch: throw Math . floor ( $STRING$ ) ;
rank: 776
score: 98.90850830078125
patch: throw ( Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 776
score: 98.89077758789062
patch: throw Math CaMeL Exception ( new ;
rank: 776
score: 98.88218383789062
patch: throw ( Math . sqrt ( ) ) ;
rank: 776
score: 98.80266723632812
patch: throw new Throwable ( $STRING$ + p ) ;
rank: 777
score: 99.00829060872395
patch: Poisson CaMeL Distribution CaMeL Impl ( p , epsilon ) ;
rank: 777
score: 98.98622824928977
patch: throw Poisson CaMeL Distribution ( p , epsilon ) ;
rank: 777
score: 98.886962890625
patch: throw Math . ( $NUMBER$ , p ) ;
rank: 777
score: 98.8816162109375
patch: throw Math . } mean ( p ) ;
rank: 777
score: 98.80050659179688
patch: throw new Exception ( p + p ) ;
rank: 778
score: 98.97809392755681
patch: throw ( Math CaMeL Exception ( $STRING$ ) ) ;
rank: 778
score: 98.95163981119792
patch: throw . Illegal CaMeL Argument CaMeL Exception ( p ) ;
rank: 778
score: 98.94271240234374
patch: throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 778
score: 98.87911987304688
patch: throw Math . . sqrt ( $STRING$ ) ;
rank: 778
score: 98.79844360351562
patch: throw Math CaMeL Runtime CaMeL Exception < this ;
rank: 778
score: 98.73729790581598
patch: throw Math . close ( $STRING$ ) ;
rank: 779
score: 99.00307395241477
patch: throw Math . substring ( 1 , p ) ;
rank: 779
score: 98.94005126953125
patch: mean = p ; epsilon = epsilon ; }
rank: 779
score: 98.90342203776042
patch: n = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 779
score: 98.79505615234375
patch: throw Math CaMeL Runtime CaMeL Exception >= $NUMBER$ ;
rank: 780
score: 98.972119140625
patch: normal = Math . sqrt ( epsilon ) ;
rank: 780
score: 98.93976440429688
patch: throw Math . Math ( $STRING$ ) ; }
rank: 780
score: 98.90199788411458
patch: attribute = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 780
score: 98.89394309303977
patch: throw Math . ceil ( $STRING$ + p ) ;
rank: 780
score: 98.8821133700284
patch: return Math . max ( 0 , $NUMBER$ ) ;
rank: 780
score: 98.79407958984375
patch: Math . max ( 0 , 0 ) ;
rank: 781
score: 98.9994140625
patch: throw ( Poisson CaMeL Distribution CaMeL Impl ) ;
rank: 781
score: 98.96424449573864
patch: throw ( Math CaMeL Runtime CaMeL Exception ) true ;
rank: 781
score: 98.93973117404514
patch: throw Math . sqrt ( ) ; }
rank: 781
score: 98.90194702148438
patch: ret = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 781
score: 98.89208984375
patch: throw new Error ( p ) ;
rank: 781
score: 98.87257690429688
patch: mean = 0 ; normal = - 0 ;
rank: 781
score: 98.7328109741211
patch: throw Math . gc ( ) ;
rank: 782
score: 98.96378871372768
patch: this . p = p ;
rank: 782
score: 98.9342529296875
patch: throw Math . p ( $STRING$ ) ; }
rank: 782
score: 98.90089925130208
patch: inst = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 782
score: 98.88958185369319
patch: throw Math . abs ( p * p ) ;
rank: 782
score: 98.86861843532986
patch: mean = p ; normal = ) ;
rank: 783
score: 98.99638227982955
patch: throw Math . iterator ( 0 . 0 ) ;
rank: 783
score: 98.96314586292614
patch: throw Math . Runtime CaMeL Exception ( epsilon ) ;
rank: 783
score: 98.89860026041667
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p ) ;
rank: 783
score: 98.88650173611111
patch: throw Math . decode ( p ) ;
rank: 783
score: 98.8783203125
patch: throw Math . ( $NUMBER$ , $STRING$ ) ;
rank: 783
score: 98.867919921875
patch: mean = 0 ; normal = - $NUMBER$ ;
rank: 783
score: 98.78407592773438
patch: System . out . Exception ( $STRING$ ) ;
rank: 783
score: 98.72757975260417
patch: throw Math . destroy ( p ) ;
rank: 784
score: 98.95899547230114
patch: new Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 784
score: 98.9463399251302
patch: throw . Runtime CaMeL Exception ( $STRING$ , p ) ;
rank: 784
score: 98.9325180053711
patch: throw Math CaMeL Runtime CaMeL Exception (
rank: 784
score: 98.89699300130208
patch: throw new ) ; } this . mean = p ;
rank: 784
score: 98.87816273082386
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception ( ;
rank: 784
score: 98.7827377319336
patch: throw get CaMeL Cause ( ) ;
rank: 785
score: 98.9918545809659
patch: throw Math . out ( $STRING$ , p ) ;
rank: 785
score: 98.95856267755681
patch: throw Math . Runtime CaMeL Exception ( 1 ) ;
rank: 785
score: 98.8960673014323
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( p )
rank: 785
score: 98.88275701349431
patch: throw . print CaMeL Stack CaMeL Trace ( ) ;
rank: 785
score: 98.87764485677083
patch: throw Math CaMeL Exception ( ) ; }
rank: 785
score: 98.86662462022569
patch: throw Math . trim ( $STRING$ ) ;
rank: 785
score: 98.77933349609376
patch: throw Math CaMeL Runtime CaMeL Exception = false ;
rank: 785
score: 98.72598605685764
patch: throw Math . wait ( 0 ) ;
rank: 786
score: 98.93002319335938
patch: Math . sqrt ( p , $STRING$ ) ;
rank: 786
score: 98.89559936523438
patch: throw Illegal CaMeL Argument CaMeL Exception ( p ) ; }
rank: 786
score: 98.88023792613636
patch: throw Math . floor ( p + 1 ) ;
rank: 786
score: 98.87741921164773
patch: return Math . min ( 0 , p ) ;
rank: 786
score: 98.77756958007812
patch: throw Math CaMeL Runtime CaMeL Exception [ 0 ;
rank: 787
score: 98.9904452237216
patch: throw Math . iterator ( $STRING$ , p ) ;
rank: 787
score: 98.92902221679688
patch: throw Math . sqrt ( null ) ; }
rank: 787
score: 98.87693093039773
patch: throw Math = Math . abs ( p ) ;
rank: 787
score: 98.773681640625
patch: Math . max ( $NUMBER$ , p ) ;
rank: 787
score: 98.72372436523438
patch: throw Math CaMeL Runtime CaMeL Exception = ) ;
rank: 788
score: 98.95569957386364
patch: throw ( Math . sqrt ( 0 ) ) ;
rank: 788
score: 98.94045003255208
patch: throw ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 788
score: 98.89337158203125
patch: return new Normal CaMeL Distribution CaMeL Impl ( this ) ;
rank: 788
score: 98.874609375
patch: throw new Exception ( $STRING$ , null ) ;
rank: 788
score: 98.86172824435764
patch: mean = 0 ; normal = $STRING$ ;
rank: 788
score: 98.72352430555556
patch: throw Math . sleep ( $NUMBER$ ) ;
rank: 789
score: 98.9556884765625
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) true ;
rank: 789
score: 98.92671508789063
patch: Math . sqrt ( p , epsilon ) ;
rank: 789
score: 98.86949573863636
patch: return Math . min ( 0 , 0 ) ;
rank: 789
score: 98.85660400390626
patch: mean = 0 ; normal = - 1 ;
rank: 789
score: 98.76983642578125
patch: throw Math . max ( 0 . ) ;
rank: 789
score: 98.72317843967014
patch: throw Math . exit ( this ) ;
rank: 790
score: 98.955224609375
patch: throw Math . Runtime CaMeL Exception ( $STRING$ .
rank: 790
score: 98.92638549804687
patch: mean = 0 ; normal = epsilon ; }
rank: 790
score: 98.76865844726562
patch: throw Math CaMeL Runtime CaMeL Exception += $STRING$ ;
rank: 791
score: 98.9259521484375
patch: Math . sqrt ( p , 0 ) ;
rank: 791
score: 98.88887532552083
patch: re = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 791
score: 98.8699951171875
patch: throw Math . round ( 1 . 0 ) ;
rank: 791
score: 98.86671142578125
patch: throw new Math CaMeL Runtime CaMeL Exception ( ;
rank: 791
score: 98.85263061523438
patch: throw Math CaMeL Runtime CaMeL Exception ( Illegal CaMeL
rank: 792
score: 98.98451538085938
patch: throw p . get CaMeL Cause ( ) ;
rank: 792
score: 98.932373046875
patch: throw ( Illegal CaMeL Argument CaMeL Exception , null ) ;
rank: 792
score: 98.88881613991477
patch: throw Math . Assertion CaMeL Error ( $STRING$ ) ;
rank: 792
score: 98.86919611150569
patch: throw Math . ceil ( p + $NUMBER$ ) ;
rank: 792
score: 98.86651056463069
patch: throw Math . min ( 0 , 1 ) ;
rank: 792
score: 98.8509521484375
patch: mean = 0 ; normal = p ;
rank: 792
score: 98.71978759765625
patch: throw Math . min ( p , ) ;
rank: 793
score: 98.9513427734375
patch: Math CaMeL Runtime CaMeL Exception ( $STRING$ ) ;
rank: 793
score: 98.91808471679687
patch: mean = p ; normal = false ; }
rank: 793
score: 98.8813985188802
patch: library = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 793
score: 98.86350319602273
patch: throw new Runtime CaMeL Exception ( ( ) ) ;
rank: 793
score: 98.84495713975694
patch: mean = p ; normal = $STRING$ ;
rank: 793
score: 98.76575317382813
patch: System . value CaMeL Of ( p ) ;
rank: 794
score: 98.98419189453125
patch: throw Math . err ( $STRING$ ) ;
rank: 794
score: 98.94667746803977
patch: throw ( Poisson CaMeL Distribution CaMeL Impl ) null ;
rank: 794
score: 98.91796875
patch: throw Math . Runtime CaMeL Exception ( $STRING$ +
rank: 794
score: 98.87994384765625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( p ; }
rank: 794
score: 98.8447509765625
patch: throw ( Math . ( $STRING$ ) ) ;
rank: 794
score: 98.76550903320313
patch: throw Math CaMeL Runtime CaMeL Exception = this .
rank: 795
score: 98.94557883522727
patch: new Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 795
score: 98.84276665581598
patch: mean = p ; mean = p ;
rank: 795
score: 98.76380004882813
patch: System . value CaMeL Of ( $STRING$ ) ;
rank: 795
score: 98.71124822443181
patch: throw new Illegal CaMeL State CaMeL Exception ( p ;
rank: 796
score: 98.98060191761364
patch: throw Math . abs ( max CaMeL Iterations ) ;
rank: 796
score: 98.91086154513889
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$
rank: 796
score: 98.85991876775569
patch: throw Math CaMeL Exception ( $STRING$ + this ) ;
rank: 796
score: 98.76342163085937
patch: logger . exit ( 0 . 0 ) ;
rank: 797
score: 98.91068725585937
patch: Math . sqrt ( p , null ) ;
rank: 797
score: 98.87750244140625
patch: throw Math CaMeL Runtime CaMeL Exception != null + p ;
rank: 797
score: 98.85651245117188
patch: throw Math CaMeL Exception ( . err ) ;
rank: 797
score: 98.838623046875
patch: throw Math . ( $STRING$ , null ) ;
rank: 797
score: 98.76289672851563
patch: Math . parse CaMeL Int ( p ) ;
rank: 798
score: 98.93656782670455
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this .
rank: 798
score: 98.92064412434895
patch: throw ( Illegal CaMeL Argument CaMeL Exception , $NUMBER$ ) ;
rank: 798
score: 98.906494140625
patch: throw Math . ( p , p ) ;
rank: 798
score: 98.8537264737216
patch: throw Math . Exception ( $STRING$ + $STRING$ ) ;
rank: 798
score: 98.83727416992187
patch: throw Math = Math . sqrt ( p ;
rank: 798
score: 98.76146240234375
patch: assert ( p == 0 . 0 ) ;
rank: 799
score: 98.97238991477273
patch: throw Math . equals ( 0 , p ) ;
rank: 799
score: 98.93544514973958
patch: this . mean = max CaMeL Iterations ;
rank: 799
score: 98.91989968039773
patch: throw Math CaMeL Runtime CaMeL Exception + $STRING$ ) ;
rank: 799
score: 98.90563354492187
patch: mean = 0 ; normal = p ; }
rank: 799
score: 98.8770751953125
patch: throw new Illegal CaMeL Argument CaMeL Exception String ( ) ;
rank: 799
score: 98.86194957386364
patch: throw Math . ) ( $STRING$ + p ) ;
rank: 799
score: 98.8526944247159
patch: throw Math CaMeL Exception ( null , $STRING$ ) ;
rank: 799
score: 98.83617401123047
patch: throw Math . 0 ( ) ;
rank: 799
score: 98.76111518012152
patch: throw Math . decode ( $STRING$ ) ;
rank: 799
score: 98.70876736111111
patch: throw Math . exit ( $NUMBER$ ) ;
rank: 800
score: 98.93203735351562
patch: throw Math CaMeL Runtime CaMeL Exception ( this .
rank: 800
score: 98.90160522460937
patch: mean = p ; mean = epsilon ; }
rank: 800
score: 98.85260564630681
patch: return Math . abs ( 0 . 0 ) ;
rank: 800
score: 98.83383517795139
patch: mean = 0 ; normal = true ;
rank: 800
score: 98.75672607421875
patch: throw Math CaMeL Runtime CaMeL Exception [ ) ;
rank: 800
score: 98.70461697048611
patch: throw Math . start ( 0 ) ;
rank: 801
score: 98.9317959872159
patch: throw new Math CaMeL Runtime CaMeL Exception ( p .
rank: 801
score: 98.91776529947917
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Exception ) ;
rank: 801
score: 98.87608753551136
patch: throw public Poisson CaMeL Distribution CaMeL Impl ( ) {
rank: 801
score: 98.85027521306819
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;
rank: 801
score: 98.7529541015625
patch: throw new Exception ( $STRING$ + 0 ) ;
rank: 801
score: 98.704541015625
patch: throw Math . max ( , p ) ;
rank: 802
score: 98.85747736150569
patch: throw p 1 . to CaMeL String ( ) ;
rank: 802
score: 98.75042724609375
patch: throw Math CaMeL Runtime CaMeL Exception < 0 ;
rank: 802
score: 98.70346069335938
patch: throw Math . close ( ) ;
rank: 803
score: 98.8739522298177
patch: throw new Illegal CaMeL Argument CaMeL Exception $NUMBER$ ( ) ;
rank: 803
score: 98.85671164772727
patch: throw Math . max ( 0 . 0 , ;
rank: 803
score: 98.82808430989583
patch: mean = 1 ; normal = 0 ;
rank: 803
score: 98.7458740234375
patch: throw Math CaMeL Runtime CaMeL Exception != $NUMBER$ ;
rank: 803
score: 98.70313720703125
patch: throw throw Math . max ( p ) ;
rank: 804
score: 98.89464721679687
patch: throw Math . format ( $STRING$ ) ; }
rank: 804
score: 98.8738037109375
patch: members = Math . sqrt ( p ) ;
rank: 804
score: 98.856689453125
patch: throw Math . parse CaMeL Short ( p ) ;
rank: 804
score: 98.70212809244792
patch: throw Math . exit ( false ) ;
rank: 805
score: 98.92137315538194
patch: this . epsilon = max CaMeL Iterations ;
rank: 805
score: 98.90869140625
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ;
rank: 805
score: 98.89379272460937
patch: return Math . sqrt ( epsilon ) ; }
rank: 805
score: 98.873291015625
patch: throw $STRING$ ; } mean = p ;
rank: 805
score: 98.85584605823864
patch: throw Math . round ( p - $NUMBER$ ) ;
rank: 805
score: 98.82572631835937
patch: throw Math CaMeL Runtime CaMeL Exception ( get CaMeL
rank: 805
score: 98.74239501953124
patch: throw Math CaMeL Runtime CaMeL Exception = 0 ;
rank: 806
score: 98.91977945963542
patch: this . epsilon = 0 . 0 ;
rank: 806
score: 98.90172322591145
patch: throw Math CaMeL Runtime CaMeL Exception . super ( ) ;
rank: 806
score: 98.89346923828126
patch: mean = 0 ; normal = null ; }
rank: 806
score: 98.82552083333333
patch: throw Math . epsilon ( $STRING$ ) ;
rank: 806
score: 98.74151000976562
patch: throw Math CaMeL Runtime CaMeL Exception = true ;
rank: 806
score: 98.69934692382813
patch: throw throw new Runtime CaMeL Exception ( ) ;
rank: 807
score: 98.91807725694444
patch: this . mean = 0 . 0 ;
rank: 807
score: 98.85310502485795
patch: throw Math . round ( p * p ) ;
rank: 807
score: 98.841796875
patch: throw Math CaMeL Runtime CaMeL Exception ( . ) ;
rank: 807
score: 98.82020263671875
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 807
score: 98.74137573242187
patch: throw new Exception ( $NUMBER$ , p ) ;
rank: 807
score: 98.69913736979167
patch: throw Math . max ( $NUMBER$ ) ;
rank: 808
score: 98.9580965909091
patch: throw Math . arraycopy ( p , p ) ;
rank: 808
score: 98.90797729492188
patch: mean = Math . sqrt ( epsilon ) ;
rank: 808
score: 98.8994852701823
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ + p ;
rank: 808
score: 98.88906860351562
patch: throw Math . mean ( p ) ; }
rank: 809
score: 98.95768599076705
patch: throw Math . abs ( p , epsilon ) ;
rank: 809
score: 98.88858642578126
patch: throw Math . p ( p ) ; }
rank: 809
score: 98.86995072798295
patch: throw ( Illegal CaMeL Argument CaMeL Exception 1 ) ;
rank: 809
score: 98.81756591796875
patch: throw Math . sqrt ( $STRING$ ;
rank: 810
score: 98.90664672851562
patch: max = Math . sqrt ( p ) ;
rank: 810
score: 98.868408203125
patch: { p = Math . sqrt ( p ) ;
rank: 810
score: 98.83819025213069
patch: throw Math CaMeL Exception . Exception ( $STRING$ ) ;
rank: 810
score: 98.81641845703125
patch: throw Math = Math . sqrt ( ) ;
rank: 811
score: 98.9027587890625
patch: p = Math . sqrt ( epsilon ) ;
rank: 811
score: 98.86810302734375
patch: minor = new Normal CaMeL Distribution CaMeL Impl ( p ,
rank: 811
score: 98.81426323784723
patch: mean = p ; epsilon = epsilon ;
rank: 812
score: 98.8926114169034
patch: throw Illegal CaMeL Argument CaMeL Exception ( null ) ;
rank: 812
score: 98.84972034801136
patch: throw Math . round ( p - 1 ) ;
rank: 812
score: 98.83601684570313
patch: throw Math . ; } this . ) ;
rank: 812
score: 98.81037055121527
patch: mean = $NUMBER$ ; normal = 0 ;
rank: 812
score: 98.71040852864583
patch: throw Math . abs ( $NUMBER$ ) ;
rank: 813
score: 98.89194946289062
patch: throw Math . Runtime CaMeL Exception ( p .
rank: 813
score: 98.86678059895833
patch: throw ( Illegal CaMeL Argument CaMeL Exception . $STRING$ ) ;
rank: 813
score: 98.84601440429688
patch: throw Math . Interrupted CaMeL Exception ( ) ;
rank: 813
score: 98.80681016710069
patch: mean = $NUMBER$ ; normal = null ;
rank: 813
score: 98.68636067708333
patch: throw Math . load ( p ) ;
rank: 814
score: 98.89182826450893
patch: this . mean = p ;
rank: 814
score: 98.87416381835938
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ }
rank: 814
score: 98.84559326171875
patch: logger = Math . abs ( p ) ;
rank: 814
score: 98.83228648792614
patch: throw Math CaMeL Runtime CaMeL Exception ( Math ) ;
rank: 814
score: 98.80118815104167
patch: mean = p ; normal = 1 ;
rank: 814
score: 98.68545193142361
patch: throw Math . split ( p ) ;
rank: 815
score: 98.95454545454545
patch: { throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 815
score: 98.86036265980114
patch: throw new public Illegal CaMeL Argument CaMeL Exception ( )
rank: 815
score: 98.84490356445312
patch: throw new Throwable ( $STRING$ + $STRING$ ) ;
rank: 815
score: 98.80040147569444
patch: mean = 0 ; epsilon = 0 ;
rank: 816
score: 98.9545010653409
patch: throw Math . trim ( p , p ) ;
rank: 816
score: 98.8679443359375
patch: throw Math CaMeL Runtime CaMeL Exception ( $STRING$ -
rank: 816
score: 98.79835340711806
patch: throw Math . FALSE ( p ) ;
rank: 816
score: 98.68868679470486
patch: throw p [ 0 ] = p ;
rank: 816
score: 98.68428955078124
patch: throw Math . round ( p , ) ;
rank: 817
score: 98.95234818892045
patch: throw ( Math . max ( p ) ) ;
rank: 817
score: 98.88624267578125
patch: Normal CaMeL Distribution CaMeL Impl ( p ) ;
rank: 817
score: 98.87567693536931
patch: throw Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 817
score: 98.85857543945312
patch: throw ( Runtime CaMeL Exception , $STRING$ ) ;
rank: 817
score: 98.83799235026042
patch: throw Math . list ( p ) ;
rank: 817
score: 98.82114868164062
patch: throw Math CaMeL Exception ( ( ) ) ;
rank: 817
score: 98.796142578125
patch: throw Math . 0 ( 0 ) ;
rank: 818
score: 98.95139382102273
patch: throw Math . substring ( p , $NUMBER$ ) ;
rank: 818
score: 98.88541870117187
patch: Math CaMeL Runtime CaMeL Exception ( p ) ;
rank: 818
score: 98.86561889648438
patch: throw Math . epsilon ( p ) ; }
rank: 818
score: 98.85563659667969
patch: assert ( p <= 0 ) ;
rank: 818
score: 98.8358154296875
patch: throw Math . ceil ( $STRING$ ) ;
rank: 818
score: 98.79521348741319
patch: mean = 0 ; normal = ) ;
rank: 818
score: 98.68302408854167
patch: throw Math . split ( $STRING$ ) ;
rank: 819
score: 98.8849365234375
patch: throw ( Math CaMeL Runtime CaMeL Exception ) ;
rank: 819
score: 98.86010131835937
patch: { return Math . sqrt ( p ) ;
rank: 819
score: 98.85289417613636
patch: throw Math . Verify CaMeL Error ( $STRING$ ) ;
rank: 819
score: 98.81416320800781
patch: throw Math . Exception ( ) ;
rank: 819
score: 98.79270935058594
patch: throw Math . sqrt ( p ;
rank: 819
score: 98.67720336914063
patch: throw Math . round ( p ) ; }
rank: 820
score: 98.95108642578126
patch: throw Math Runtime CaMeL Exception ( $STRING$ ) ;
rank: 820
score: 98.88437228732639
patch: this . max CaMeL Iterations = p ;
rank: 820
score: 98.81072319878473
patch: throw Math CaMeL Runtime CaMeL Exception ) ;
rank: 820
score: 98.79024251302083
patch: throw Math . Float ( p ) ;
rank: 821
score: 98.82943115234374
patch: throw Math . current CaMeL Thread ( ) ;
rank: 821
score: 98.78786892361111
patch: mean = p . max CaMeL Iterations ;
rank: 821
score: 98.66990152994792
patch: throw Math . sleep ( null ) ;
rank: 822
score: 98.88056098090277
patch: throw Poisson CaMeL Distribution ( p ) ;
rank: 822
score: 98.85579427083333
patch: mean = epsilon ; normal = epsilon ;
rank: 822
score: 98.8482333096591
patch: return new Poisson CaMeL Distribution CaMeL Impl ( p ,
rank: 822
score: 98.78706190321181
patch: throw Math . TRUE ( $STRING$ ) ;
rank: 822
score: 98.66938612196181
patch: throw throw new Error ( $STRING$ ) ;
rank: 823
score: 98.94633345170455
patch: throw new Runtime CaMeL Exception ( $STRING$ true ) ;
rank: 823
score: 98.87783203125
patch: Poisson CaMeL Distribution CaMeL Impl ( p ) ;
rank: 823
score: 98.84796697443181
patch: ret = Math . sqrt ( p ) ; }
rank: 823
score: 98.79785919189453
patch: throw new Runtime CaMeL Exception ( ;
rank: 824
score: 98.94402521306819
patch: throw Math . arraycopy ( mean , 0 ) ;
rank: 824
score: 98.87302652994792
patch: max CaMeL Iterations = max CaMeL Iterations ;
rank: 824
score: 98.86060791015625
patch: throw Math CaMeL Runtime CaMeL Exception + $STRING$ ;
rank: 824
score: 98.84706624348958
patch: p = p ; normal = epsilon ;
rank: 824
score: 98.84409401633523
patch: result = Math . sqrt ( p ) ; }
rank: 824
score: 98.7971435546875
patch: Math . max ( $NUMBER$ , 0 ) ;
rank: 824
score: 98.66357421875
patch: throw Math CaMeL Runtime CaMeL Exception Math ;
rank: 825
score: 98.87273297991071
patch: this . epsilon = p ;
rank: 825
score: 98.84241832386364
patch: throw ( Illegal CaMeL Argument CaMeL Exception $STRING$ ) ;
rank: 825
score: 98.8223876953125
patch: throw new Internal CaMeL Error ( ) ;
rank: 825
score: 98.79418334960937
patch: Math . max ( 0 , $NUMBER$ ) ;
rank: 825
score: 98.77539740668402
patch: mean = 0 ; mean = 0 ;
rank: 825
score: 98.66453721788194
patch: throw Math . E ( $STRING$ ) ;
rank: 825
score: 98.6621337890625
patch: throw Math . max ( p ) ; }
rank: 826
score: 98.93759765625
patch: throw ( Normal CaMeL Distribution CaMeL Impl ) ;
rank: 826
score: 98.84864390980114
patch: throw . Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 826
score: 98.84157307942708
patch: throw Math CaMeL Runtime CaMeL Exception ( (
rank: 826
score: 98.84010009765625
patch: inst = Math . sqrt ( p ) ;
rank: 826
score: 98.79222412109375
patch: throw Math CaMeL Exception ( Exception . ) ;
rank: 826
score: 98.77533637152777
patch: throw Math . } mean ( ) ;
rank: 826
score: 98.66059705946181
patch: throw get CaMeL Exception ( p ) ;
rank: 827
score: 98.86412217881944
patch: throw ( Poisson CaMeL Distribution CaMeL Impl )
rank: 827
score: 98.83760375976563
patch: if ( ( p <= 0 ) ) {
rank: 827
score: 98.81171875
patch: throw new Throwable ( p + $STRING$ ) ;
rank: 827
score: 98.79120483398438
patch: Math . max ( 0 , 1 ) ;
rank: 827
score: 98.77138943142361
patch: throw Math . SIZE ( $STRING$ ) ;
rank: 827
score: 98.65980360243056
patch: throw Math . min ( 0 ) ;
rank: 828
score: 98.86193237304687
patch: new Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 828
score: 98.83213500976562
patch: assert ( ( p <= 0 ) ) ;
rank: 828
score: 98.78932189941406
patch: throw Math CaMeL Exception ( $STRING$ ;
rank: 828
score: 98.7708740234375
patch: throw Math . p ( ) ;
rank: 828
score: 98.65817260742188
patch: warn ( $STRING$ + p ) ;
rank: 828
score: 98.65705871582031
patch: throw Math . sleep ( ) ;
rank: 829
score: 98.857421875
patch: this . max CaMeL Iterations = 0 ;
rank: 829
score: 98.83423529730902
patch: return Math . sqrt ( epsilon ) ;
rank: 829
score: 98.83194580078126
patch: sm = Math . sqrt ( p ) ;
rank: 829
score: 98.78839111328125
patch: throw Math CaMeL Exception ( ;
rank: 829
score: 98.76941596137152
patch: throw Math . p ( p ) ;
rank: 830
score: 98.91956922743056
patch: throw Math . iterator ( p ) ;
rank: 830
score: 98.8445556640625
patch: normal = Math . sqrt ( 0 ) ;
rank: 830
score: 98.83192027698864
patch: throw ( Runtime CaMeL Exception ) ( $STRING$ ) ;
rank: 830
score: 98.82963731553819
patch: return Math . sqrt ( p ; }
rank: 830
score: 98.783544921875
patch: throw new Runtime CaMeL Exception ( ) ; }
rank: 830
score: 98.76841227213542
patch: throw Math . equals ( $STRING$ ) ;
rank: 830
score: 98.65422058105469
patch: throw Math . abs ( p ;
rank: 830
score: 98.64009602864583
patch: throw Math . min ( $NUMBER$ ) ;
rank: 831
score: 98.91628011067708
patch: throw Math . abs ( epsilon ) ;
rank: 831
score: 98.821533203125
patch: normal = p ; normal = p ;
rank: 831
score: 98.78423461914062
patch: throw new Error ( $STRING$ , $STRING$ ) ;
rank: 831
score: 98.7799560546875
patch: throw Math . Runtime CaMeL Exception ( ; }
rank: 831
score: 98.76826985677083
patch: throw Math . Integer ( $STRING$ ) ;
rank: 831
score: 98.65286865234376
patch: throw Math . max ( 0 , p ;
rank: 831
score: 98.63907623291016
patch: Math . append ( p ) ;
rank: 832
score: 98.91455756293402
patch: throw Math . substring ( p ) ;
rank: 832
score: 98.830322265625
patch: throw new public Poisson CaMeL Distribution CaMeL Impl ( )
rank: 832
score: 98.82661576704545
patch: throw throw new Exception ( $STRING$ , p ) ;
rank: 832
score: 98.82230050223214
patch: this . epsilon = epsilon ;
rank: 832
score: 98.7788330078125
patch: throw Math . Runtime CaMeL Exception ( new ;
rank: 833
score: 98.82958984375
patch: if ( p <= 0 ) {
rank: 833
score: 98.81465657552083
patch: throw ( Illegal CaMeL Argument CaMeL Exception )
rank: 833
score: 98.81452094184027
patch: this . p = 0 . 0 ;
rank: 833
score: 98.77830810546875
patch: throw new Error ( $STRING$ , null ) ;
rank: 833
score: 98.76706271701389
patch: throw Math . mean ( $STRING$ ) ;
rank: 833
score: 98.63762749565973
patch: throw new Exception ( $STRING$ ) ; ;
rank: 834
score: 98.82775268554687
patch: re = Math . sqrt ( p ) ;
rank: 834
score: 98.82373046875
patch: throw ( Exception ) new Exception ( $STRING$ ) ;
rank: 834
score: 98.81415473090277
patch: mean = p + 0 . 0 ;
rank: 834
score: 98.7783447265625
patch: throw Math . Math CaMeL Exception ( ) ;
rank: 834
score: 98.77373589409723
patch: throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 834
score: 98.64379204644098
patch: throw Math . delete ( p ) ;
rank: 834
score: 98.63394927978516
patch: logger . append ( $STRING$ ) ;
rank: 835
score: 98.82684881036931
patch: throw ( Math . >> ( p ) ) ;
rank: 835
score: 98.81246337890624
patch: mean = 0 ;
rank: 835
score: 98.79431830512152
patch: normal = p ; normal = epsilon ;
rank: 835
score: 98.76957194010417
patch: throw Math . Exception ( p ) ;
rank: 835
score: 98.75824652777777
patch: p = p ; normal = null ;
rank: 835
score: 98.64334445529514
patch: throw Math . exit ( 1 ) ;
rank: 836
score: 98.82553932883523
patch: throw $STRING$ ; } this . mean = p ;
rank: 836
score: 98.81043836805556
patch: throw Math . Error ( $STRING$ ) ;
rank: 836
score: 98.76918029785156
patch: throw Math . min ( ) ;
rank: 836
score: 98.75750054253473
patch: throw Math . mean ( 0 ) ;
rank: 836
score: 98.64242892795139
patch: throw Math . insert ( p ) ;
rank: 837
score: 98.90048828125
patch: throw ( to CaMeL String ( ) ) ;
rank: 837
score: 98.78498670789931
patch: mean = null ; normal = null ;
rank: 837
score: 98.76873779296875
patch: throw . to CaMeL String ( ) ;
rank: 838
score: 98.89447631835938
patch: throw Math . arraycopy ( p , ) ;
rank: 838
score: 98.8190030184659
patch: n = Math . sqrt ( p ) ; }
rank: 838
score: 98.80800955636161
patch: this . epsilon = 0 ;
rank: 838
score: 98.78299967447917
patch: mean = p ; mean = epsilon ;
rank: 838
score: 98.75617218017578
patch: throw Math . mean ( ) ;
rank: 838
score: 98.62746175130208
patch: buf = new String [ 0 ] ;
rank: 839
score: 98.89085083007812
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) p
rank: 839
score: 98.77834743923611
patch: throw Math . ( p ) ; }
rank: 839
score: 98.76266140407986
patch: throw Math . clone ( p ) ;
rank: 839
score: 98.62689887152777
patch: throw Math . start ( $NUMBER$ ) ;
rank: 840
score: 98.88300916883681
patch: throw Math . clone ( $STRING$ ) ;
rank: 840
score: 98.81776258680556
patch: throw Math . run ( $STRING$ ) ;
rank: 840
score: 98.79010009765625
patch: this . normal = p ;
rank: 840
score: 98.76773071289062
patch: Math . min ( 0 , p ) ;
rank: 840
score: 98.76260375976562
patch: throw Math 1 . 0 ( $STRING$ ) ;
rank: 840
score: 98.75543891059027
patch: throw Math . epsilon ( p ) ;
rank: 840
score: 98.6346923828125
patch: throw Math . sleep ( p ) ; }
rank: 841
score: 98.81712036132812
patch: throw ( Runtime CaMeL Exception , p ) ;
rank: 841
score: 98.81061345880681
patch: throw Math CaMeL Runtime CaMeL Exception , new ) ;
rank: 841
score: 98.78974745008681
patch: mean = 0 . 0 . 0 ;
rank: 841
score: 98.76239013671875
patch: return Math . abs ( p ) ;
rank: 841
score: 98.75370279947917
patch: throw Math . Long ( p ) ;
rank: 841
score: 98.63058132595486
patch: throw new Math CaMeL Exception ( $STRING$ ;
rank: 841
score: 98.61802455357143
patch: throw new Error ( ) ;
rank: 842
score: 98.78843858506944
patch: this . p = max CaMeL Iterations ;
rank: 842
score: 98.75841064453125
patch: throw p + $STRING$ + p + $STRING$ ;
rank: 842
score: 98.6295166015625
patch: throw Math . run ( null ) ;
rank: 842
score: 98.61663055419922
patch: throw p . trim ( ) ;
rank: 843
score: 98.8140625
patch: s = Math . sqrt ( p ) ;
rank: 843
score: 98.78413609095982
patch: this . mean = 0 ;
rank: 843
score: 98.765283203125
patch: Math . max ( $NUMBER$ , 1 ) ;
rank: 843
score: 98.75006103515625
patch: throw Math . TRUE ( p ) ;
rank: 843
score: 98.62883165147569
patch: throw Math . min ( null ) ;
rank: 843
score: 98.61474609375
patch: Math . abs ( p ) ;
rank: 844
score: 98.80497436523437
patch: xform = Math . sqrt ( p ) ;
rank: 844
score: 98.77870008680556
patch: throw ( Math CaMeL Runtime CaMeL Exception )
rank: 844
score: 98.75975952148437
patch: Math . max ( $NUMBER$ , $NUMBER$ ) ;
rank: 844
score: 98.7546615600586
patch: throw Math . Runtime CaMeL Exception (
rank: 844
score: 98.74298095703125
patch: logger = Math . round ( p ) ;
rank: 845
score: 98.86796569824219
patch: throw Math . iterator ( ) ;
rank: 845
score: 98.80363159179687
patch: throw Math $NUMBER$ . $NUMBER$ ( $STRING$ ) ;
rank: 845
score: 98.7744140625
patch: this . max CaMeL Iterations = epsilon ;
rank: 845
score: 98.75934448242188
patch: throw Math CaMeL Exception ( $STRING$ + ) ;
rank: 845
score: 98.75313313802083
patch: mean = p ; p = epsilon ;
rank: 845
score: 98.74534098307292
patch: throw Math . compare ( $STRING$ ) ;
rank: 845
score: 98.74288330078124
patch: p = Math . abs ( p ) ;
rank: 845
score: 98.62497965494792
patch: throw Math . max ( false ) ;
rank: 845
score: 98.61273871527777
patch: throw Math . case ( $STRING$ ) ;
rank: 846
score: 98.80358276367187
patch: dim = Math . sqrt ( p ) ;
rank: 846
score: 98.75734252929688
patch: throw Math . ( 0 , p ) ;
rank: 846
score: 98.74234619140626
patch: throw Math . min ( 0 . ) ;
rank: 846
score: 98.61012098524306
patch: throw Math . max ( 1 ) ;
rank: 847
score: 98.80112526633523
patch: throw $STRING$ ; } this . p = p ;
rank: 847
score: 98.75628662109375
patch: Math . min ( 0 , 0 ) ;
rank: 847
score: 98.74468994140625
patch: mean = 1 ; normal = null ;
rank: 847
score: 98.74161987304687
patch: throw new Throwable ( $STRING$ , p ) ;
rank: 847
score: 98.62291802300348
patch: throw Math . close ( null ) ;
rank: 848
score: 98.76975504557292
patch: throw ( Runtime CaMeL Exception ) $STRING$ ;
rank: 848
score: 98.74368625217014
patch: mean = epsilon ; normal = null ;
rank: 848
score: 98.74042619977679
patch: mean = max CaMeL Iterations ;
rank: 848
score: 98.61931694878473
patch: throw Math . abs ( null ) ;
rank: 849
score: 98.799169921875
patch: messages = Math . sqrt ( p ) ;
rank: 849
score: 98.76773410373264
patch: mean = this . max CaMeL Iterations ;
rank: 849
score: 98.7541748046875
patch: throw Math CaMeL Runtime CaMeL Exception ( ; }
rank: 849
score: 98.73863389756944
patch: throw . get CaMeL Exception ( ) ;
rank: 849
score: 98.61905246310764
patch: throw Math . exit ( true ) ;
rank: 849
score: 98.59861755371094
patch: Math . append ( $STRING$ ) ;
rank: 850
score: 98.76710728236607
patch: mean = 0 . 0 ;
rank: 850
score: 98.75050659179688
patch: throw Math . ( 1 . 0 ) ;
rank: 850
score: 98.74078369140625
patch: mean = $NUMBER$ ; normal = epsilon ;
rank: 850
score: 98.7236328125
patch: throw Math . exec ( p ) ;
rank: 850
score: 98.61709933810764
patch: throw Math . close ( 0 ) ;
rank: 851
score: 98.79714965820312
patch: labels = Math . sqrt ( p ) ;
rank: 851
score: 98.76164899553571
patch: this . p = 0 ;
rank: 851
score: 98.56967163085938
patch: throw Math . abs ( ) ;
rank: 852
score: 98.8470458984375
patch: throw Math . arraycopy ( p , 0 ,
rank: 852
score: 98.79450073242188
patch: throw $STRING$ ) ; } mean = p ;
rank: 852
score: 98.76092529296875
patch: this . mean = epsilon ;
rank: 852
score: 98.73963758680556
patch: mean = ( double ) p ; }
rank: 852
score: 98.73037719726562
patch: throw Math . FALSE ( ) ;
rank: 852
score: 98.61265733506944
patch: throw Math . start ( null ) ;
rank: 852
score: 98.56521606445312
patch: throw get CaMeL Exception ( ) ;
rank: 853
score: 98.84580688476562
patch: throw p . get CaMeL Runtime ( ) ;
rank: 853
score: 98.75848388671875
patch: throw new Math CaMeL Runtime CaMeL Exception (
rank: 853
score: 98.72927856445312
patch: Math . sqrt ( $STRING$ ) ;
rank: 853
score: 98.60527038574219
patch: throw Math . max ( p ;
rank: 853
score: 98.56446075439453
patch: return new double [ 0 ] ;
rank: 854
score: 98.79306640625
patch: throw new public Interrupted CaMeL Exception ( ) {
rank: 854
score: 98.74481879340277
patch: throw Math CaMeL Exception ( . ; }
rank: 854
score: 98.73855251736111
patch: p = p ; normal = p ;
rank: 854
score: 98.60415988498264
patch: throw new Exception ( $STRING$ , ) ;
rank: 854
score: 98.56021118164062
patch: Math . sleep ( p ) ;
rank: 855
score: 98.79233620383523
patch: throw $STRING$ ; } this . epsilon = p ;
rank: 855
score: 98.74429321289062
patch: throw Math CaMeL Exception ( . 1 ) ;
rank: 855
score: 98.54551478794643
patch: throw new Throwable ( ) ;
rank: 856
score: 98.78849653764205
patch: throw null ; } this . mean = p ;
rank: 856
score: 98.74689398871527
patch: this . epsilon = 0 . 1 ;
rank: 856
score: 98.74428982204861
patch: throw Math CaMeL Exception ( new ; }
rank: 856
score: 98.7364501953125
patch: mean = p . p . epsilon ;
rank: 856
score: 98.69816080729167
patch: throw Math . ) ( p ) ;
rank: 856
score: 98.59992133246527
patch: throw Math . join ( $STRING$ ) ;
rank: 857
score: 98.78762817382812
patch: bad = Math . sqrt ( p ) ;
rank: 857
score: 98.74284057617187
patch: throw Math . ( 1 , p ) ;
rank: 857
score: 98.74157036675348
patch: this . mean = 0 . 1 ;
rank: 857
score: 98.73495919363839
patch: throw new Runtime CaMeL Exception (
rank: 857
score: 98.7241943359375
patch: throw throw Math CaMeL Exception ( $STRING$ ) ;
rank: 857
score: 98.71626112196181
patch: throw Math . intern ( $STRING$ ) ;
rank: 857
score: 98.59629313151042
patch: throw Math . normal ( this ) ;
rank: 857
score: 98.54229736328125
patch: throw Math . format ( ) ;
rank: 858
score: 98.78739624023437
patch: throw new public Exception ( , $STRING$ ) ;
rank: 858
score: 98.73752848307292
patch: Normal CaMeL Distribution CaMeL Impl ( ) ;
rank: 858
score: 98.71441650390625
patch: throw Math . 0 ( null ) ;
rank: 858
score: 98.59564208984375
patch: throw Math . join ( p ) ;
rank: 858
score: 98.5326919555664
patch: throw new Exception $NUMBER$ ( ) ;
rank: 859
score: 98.78646240234374
patch: array = Math . sqrt ( p ) ;
rank: 859
score: 98.733056640625
patch: throw Math . ( $NUMBER$ , $NUMBER$ ) ;
rank: 859
score: 98.73163519965277
patch: mean = p ; epsilon = p ;
rank: 859
score: 98.72639295789931
patch: if ( max CaMeL Iterations <= 0 )
rank: 859
score: 98.7088623046875
patch: throw Math . trim ( 0 ) ;
rank: 859
score: 98.68898518880208
patch: return Math . round ( p ) ;
rank: 859
score: 98.59457736545139
patch: throw Math CaMeL Exception . Exception ) ;
rank: 859
score: 98.52880096435547
patch: throw new Throwable ( p ) ;
rank: 860
score: 98.81642659505208
patch: throw Math . iterator ( 0 ) ;
rank: 860
score: 98.78584120008681
patch: throw null ; } mean = p ;
rank: 860
score: 98.73092990451389
patch: throw new Runtime CaMeL Exception ( $STRING$ ,
rank: 860
score: 98.72530788845486
patch: throw Runtime CaMeL Exception ( $STRING$ ) ;
rank: 860
score: 98.70526885986328
patch: throw Math . clone ( ) ;
rank: 860
score: 98.68577745225694
patch: throw Math . exec ( $STRING$ ) ;
rank: 860
score: 98.51531219482422
patch: throw Math . stop ( ) ;
rank: 861
score: 98.78427124023438
patch: e = Math . sqrt ( p ) ;
rank: 861
score: 98.72347005208333
patch: this . mean = p + epsilon ;
rank: 861
score: 98.71639251708984
patch: mean = ( double ) p ;
rank: 861
score: 98.67891438802083
patch: throw Math 1 . 0 ( ) ;
rank: 861
score: 98.5110092163086
patch: logger . append ( p ) ;
rank: 862
score: 98.78384399414062
patch: if ( ( p == 0 ) ) {
rank: 862
score: 98.72940673828126
patch: Math . min ( 0 , $NUMBER$ ) ;
rank: 862
score: 98.72083875868056
patch: this . mean = 1 . 0 ;
rank: 862
score: 98.70289442274306
patch: mean = p , epsilon = p ;
rank: 862
score: 98.68660736083984
patch: Math . sqrt ( 0 ) ;
rank: 862
score: 98.67616489955357
patch: p = 0 . 0 ;
rank: 862
score: 98.59080505371094
patch: throw Math . round ( ) ;
rank: 863
score: 98.78319091796875
patch: insets = Math . sqrt ( p ) ;
rank: 863
score: 98.70069715711806
patch: mean = $NUMBER$ ; normal = $NUMBER$ ;
rank: 863
score: 98.68372344970703
patch: return Math . sqrt ( p ;
rank: 863
score: 98.67131212022569
patch: throw Math . round ( $NUMBER$ ) ;
rank: 863
score: 98.50236511230469
patch: p [ 0 ] = p ;
rank: 864
score: 98.78126109730114
patch: throw Math . Interrupted CaMeL Exception ( ) ; }
rank: 864
score: 98.71749441964286
patch: this . p = epsilon ;
rank: 864
score: 98.68283081054688
patch: throw null ; }
rank: 864
score: 98.67083062065973
patch: throw Math . ) ( $STRING$ ) ;
rank: 864
score: 98.49919891357422
patch: Math . sleep ( 0 ) ;
rank: 865
score: 98.80304633246527
patch: throw Math . stop ( $STRING$ ) ;
rank: 865
score: 98.7803466796875
patch: retval = Math . sqrt ( p ) ;
rank: 865
score: 98.70712280273438
patch: throw Poisson CaMeL Distribution ( ) ;
rank: 865
score: 98.68932495117187
patch: throw new Runtime CaMeL Exception ( Exception ) ;
rank: 865
score: 98.6820068359375
patch: Math . sqrt ( epsilon ) ;
rank: 865
score: 98.66649034288194
patch: throw Math . err ( p ) ;
rank: 865
score: 98.58783637152777
patch: throw Math . wait ( p ) ;
rank: 865
score: 98.49319458007812
patch: throw new Exception ( ) ; }
rank: 866
score: 98.77963595920139
patch: throw p ; } mean = p ;
rank: 866
score: 98.7068862915039
patch: this ( p , epsilon ) ;
rank: 866
score: 98.66590711805556
patch: throw Math . > 0 . 0 ;
rank: 866
score: 98.66175079345703
patch: mean = p . epsilon ; }
rank: 866
score: 98.4870834350586
patch: throw new Exception ( $NUMBER$ ) ;
rank: 867
score: 98.67739432198661
patch: max CaMeL Iterations = 0 ;
rank: 867
score: 98.48062133789062
patch: throw new Integer ( $STRING$ ) ;
rank: 868
score: 98.79719373914931
patch: throw ( Runtime CaMeL Exception ) p ;
rank: 868
score: 98.77514038085937
patch: j = Math . sqrt ( p ) ;
rank: 868
score: 98.69431559244792
patch: throw Math CaMeL Exception ( this ) ;
rank: 868
score: 98.69279649522569
patch: throw Math . sqrt ( 0 ) ;
rank: 868
score: 98.68048095703125
patch: throw Math throw new Exception ( $STRING$ ) ;
rank: 868
score: 98.66432407924107
patch: this . normal = epsilon ;
rank: 868
score: 98.66038513183594
patch: p = - 1 . 0 ;
rank: 868
score: 98.63209533691406
patch: throw Math . ( p ) ;
rank: 868
score: 98.58511013454861
patch: throw Math . max ( true ) ;
rank: 868
score: 98.47799682617188
patch: fail ( $STRING$ + p ) ;
rank: 869
score: 98.69171820746527
patch: mean = $NUMBER$ ; normal = false ;
rank: 869
score: 98.66013590494792
patch: throw Math . list ( 0 ) ;
rank: 869
score: 98.62568882533482
patch: mean = p . epsilon ;
rank: 869
score: 98.58479309082031
patch: throw Math . round ( p ;
rank: 869
score: 98.4753646850586
patch: Math . exit ( 0 ) ;
rank: 870
score: 98.77154541015625
patch: arguments = Math . sqrt ( p ) ;
rank: 870
score: 98.69125705295139
patch: p = p ; normal = 0 ;
rank: 870
score: 98.68149820963542
patch: throw Math . abs ( 1 ) ;
rank: 870
score: 98.66924370659723
patch: throw ( Illegal CaMeL Argument CaMeL Exception ;
rank: 870
score: 98.65844048394098
patch: throw Math . interrupt ( p ) ;
rank: 870
score: 98.58420138888889
patch: return Math . max ( p ) ;
rank: 870
score: 98.47095489501953
patch: throw Math . run ( ) ;
rank: 871
score: 98.77145385742188
patch: queue = Math . sqrt ( p ) ;
rank: 871
score: 98.62990025111607
patch: this . normal = null ;
rank: 871
score: 98.62003326416016
patch: mean = ( int ) p ;
rank: 871
score: 98.58401150173611
patch: throw . Runtime CaMeL Exception ( ) ;
rank: 871
score: 98.47018432617188
patch: throw Math . MAX _ VALUE ;
rank: 872
score: 98.77017211914062
patch: g = Math . sqrt ( p ) ;
rank: 872
score: 98.68932427300348
patch: mean = 1 ; normal = $NUMBER$ ;
rank: 872
score: 98.67163764105902
patch: throw Math CaMeL Exception ( Math ) ;
rank: 872
score: 98.62359619140625
patch: mean = 0 . 0 ; }
rank: 872
score: 98.58317057291667
patch: throw Math . wait ( null ) ;
rank: 873
score: 98.76149204799107
patch: throw new ( $STRING$ ) ;
rank: 873
score: 98.67026774088542
patch: this . value = 0 . 0 ;
rank: 873
score: 98.64501274956598
patch: throw Math . max ( 0 . ;
rank: 873
score: 98.46510532924107
patch: d = 0 . 0 ;
rank: 874
score: 98.75850830078124
patch: plugins = Math . sqrt ( p ) ;
rank: 874
score: 98.64409044053819
patch: throw Math . round ( new ) ;
rank: 874
score: 98.62141636439732
patch: mean = p + epsilon ;
rank: 874
score: 98.61065673828125
patch: mean = p ;
rank: 874
score: 98.46107482910156
patch: throw new Double ( $STRING$ ) ;
rank: 875
score: 98.75687255859376
patch: expr = Math . sqrt ( p ) ;
rank: 875
score: 98.66790093315973
patch: throw Math CaMeL Exception ( $STRING$ + ;
rank: 875
score: 98.66368865966797
patch: mean = - max CaMeL Iterations ;
rank: 875
score: 98.60169982910156
patch: this . normal = p ; }
rank: 875
score: 98.45562744140625
patch: throw get CaMeL State ( ) ;
rank: 876
score: 98.756396484375
patch: loop = Math . sqrt ( p ) ;
rank: 876
score: 98.64305284288194
patch: throw Math . , $NUMBER$ . 0 ;
rank: 876
score: 98.63776991102431
patch: throw Math . wait ( $NUMBER$ ) ;
rank: 876
score: 98.60740661621094
patch: Math . mean ( p ) ;
rank: 876
score: 98.59414672851562
patch: throw new ) ; }
rank: 876
score: 98.5750732421875
patch: throw Math . normal ( ) ;
rank: 876
score: 98.45419311523438
patch: buf [ 0 ] = p ;
rank: 877
score: 98.65005832248264
patch: p = Double . MIN _ VALUE ;
rank: 877
score: 98.64012908935547
patch: throw new String ( $STRING$ ) ;
rank: 877
score: 98.63646104600694
patch: throw Math . wait ( $STRING$ ) ;
rank: 877
score: 98.447509765625
patch: System . exit ( 0 ) ;
rank: 878
score: 98.75540161132812
patch: z = Math . sqrt ( p ) ;
rank: 878
score: 98.64519585503473
patch: p = Double . MAX _ VALUE ;
rank: 878
score: 98.60317557198661
patch: this . p = mean ;
rank: 878
score: 98.58648681640625
patch: throw Math [ 0 ] ; }
rank: 878
score: 98.57180447048611
patch: throw Math . round ( null ) ;
rank: 878
score: 98.44644927978516
patch: logger . exit ( 0 ) ;
rank: 879
score: 98.7548095703125
patch: params = Math . sqrt ( p ) ;
rank: 879
score: 98.64406331380208
patch: throw Runtime . Exception ( $STRING$ ) ;
rank: 879
score: 98.63658142089844
patch: throw Math . list ( ) ;
rank: 879
score: 98.63172258649554
patch: throw Math . ( ) ;
rank: 879
score: 98.62550862630208
patch: throw new Exception 1 ( $STRING$ ) ;
rank: 879
score: 98.60222625732422
patch: mean = ( int ) 0 ;
rank: 879
score: 98.5697250366211
patch: throw Math . err = ) ;
rank: 879
score: 98.44561767578125
patch: / ] = 0 . 0 ;
rank: 880
score: 98.75280151367187
patch: Caption = Math . sqrt ( p ) ;
rank: 880
score: 98.63532172309027
patch: throw Math CaMeL Exception ( 1 ) ;
rank: 880
score: 98.63184271918402
patch: p = 1 . 0 + p ;
rank: 880
score: 98.63167572021484
patch: throw Math . Long ( ) ;
rank: 880
score: 98.5958023071289
patch: this ( p , p ) ;
rank: 880
score: 98.581298828125
patch: mean = ( double ) epsilon ;
rank: 881
score: 98.75997924804688
patch: throw Math . arraycopy ( p ,
rank: 881
score: 98.75186767578126
patch: if ( max CaMeL Iterations == 0 ) {
rank: 881
score: 98.62861463758681
patch: throw Math . random ( ) ; }
rank: 881
score: 98.62822723388672
patch: throw Math . Float ( ) ;
rank: 881
score: 98.5921859741211
patch: throw ( Math . 0 ) ;
rank: 881
score: 98.56539577907986
patch: throw throw new Exception ( p ) ;
rank: 881
score: 98.4425277709961
patch: throw p != 0 . 0 ;
rank: 882
score: 98.75109252929687
patch: results = Math . sqrt ( p ) ;
rank: 882
score: 98.63414849175348
patch: throw Math . ; } this . ;
rank: 882
score: 98.62271554129464
patch: p = 1 . 0 ;
rank: 882
score: 98.5894775390625
patch: mean = 0 ; } }
rank: 882
score: 98.57173374720982
patch: throw Math . TRUE ; }
rank: 882
score: 98.43341064453125
patch: super ( $NUMBER$ , p ) ;
rank: 883
score: 98.749365234375
patch: attributes = Math . sqrt ( p ) ;
rank: 883
score: 98.63328721788194
patch: throw Math CaMeL Exception ( $STRING$ , ;
rank: 883
score: 98.62124294704861
patch: p = 0 . 0 + p ;
rank: 883
score: 98.61014556884766
patch: throw Math . TRUE ( ) ;
rank: 883
score: 98.56943184988839
patch: mean = 1 . 0 ;
rank: 883
score: 98.5682601928711
patch: throw Math . ( ) ; }
rank: 883
score: 98.55696614583333
patch: throw Math . append ( this ) ;
rank: 884
score: 98.7479736328125
patch: throw Math $NUMBER$ . 0 ( $STRING$ ) ;
rank: 884
score: 98.63274468315973
patch: throw Math CaMeL Exception ( err ) ;
rank: 884
score: 98.61705864800348
patch: throw new Null CaMeL Pointer CaMeL Exception ;
rank: 884
score: 98.5643310546875
patch: if ( p <= 0 )
rank: 884
score: 98.4281005859375
patch: return new Exception ( $STRING$ ) ;
rank: 885
score: 98.74641723632813
patch: o = Math . sqrt ( p ) ;
rank: 885
score: 98.61465115017361
patch: return Math . floor ( p ) ;
rank: 885
score: 98.56180245535714
patch: mean = p + 0 ;
rank: 885
score: 98.42765808105469
patch: p [ $NUMBER$ ] = p ;
rank: 886
score: 98.74572143554687
patch: l = Math . sqrt ( p ) ;
rank: 886
score: 98.62043762207031
patch: throw Math . ( $NUMBER$ ) ;
rank: 886
score: 98.61223008897569
patch: throw Math . yield ( p ) ;
rank: 886
score: 98.55628967285156
patch: this ( $STRING$ , p ) ;
rank: 886
score: 98.55268096923828
patch: throw Math CaMeL Runtime CaMeL Exception ;
rank: 886
score: 98.55049641927083
patch: mean = p ; }
rank: 886
score: 98.42140706380208
patch: throw new Exception ) ;
rank: 887
score: 98.74534606933594
patch: if ( p == 0 ) {
rank: 887
score: 98.74231635199652
patch: throw Math . arraycopy ( mean ) ;
rank: 887
score: 98.61172146267361
patch: throw ( new Throwable ( ) ) ;
rank: 887
score: 98.55471801757812
patch: p = ( double ) p ;
rank: 887
score: 98.54948425292969
patch: throw p . clone ( ) ;
rank: 887
score: 98.42094421386719
patch: throw new Exception ( Exception ) ;
rank: 888
score: 98.54671478271484
patch: mean = p ( p ) ;
rank: 888
score: 98.53489467075893
patch: epsilon = 0 . 0 ;
rank: 888
score: 98.41311645507812
patch: out . append ( $STRING$ ) ;
rank: 889
score: 98.74517822265625
patch: throw Math $NUMBER$ . 1 ( p ) ;
rank: 889
score: 98.609130859375
patch: throw Math CaMeL Exception ( $NUMBER$ ) ;
rank: 889
score: 98.54402669270833
patch: throw throw Math . max ( ) ;
rank: 889
score: 98.53446742466518
patch: mean = 0 . 1 ;
rank: 889
score: 98.3717753092448
patch: warn ( $STRING$ ) ;
rank: 890
score: 98.74439697265625
patch: OID = Math . sqrt ( p ) ;
rank: 890
score: 98.60458713107639
patch: throw Math CaMeL Exception ( Math ; }
rank: 890
score: 98.58969455295139
patch: throw Math . close ( this ) ;
rank: 890
score: 98.56623077392578
patch: throw get CaMeL Message ( ) ;
rank: 890
score: 98.540283203125
patch: throw Math = new Exception ( ) ;
rank: 890
score: 98.51728166852679
patch: max CaMeL Iterations = p ;
rank: 891
score: 98.73110961914062
patch: throw ( $STRING$ ) ;
rank: 891
score: 98.59932454427083
patch: throw Math CaMeL Exception ( Math . ;
rank: 891
score: 98.58568657769098
patch: throw Math . run ( this ) ;
rank: 891
score: 98.54002549913194
patch: throw throw Math . exit ( ) ;
rank: 891
score: 98.51287841796875
patch: mean = this . epsilon ;
rank: 891
score: 98.507275390625
patch: throw p ; }
rank: 891
score: 98.33498709542411
patch: z = 0 . 0 ;
rank: 892
score: 98.74288330078124
patch: tmp = Math . sqrt ( p ) ;
rank: 892
score: 98.54045867919922
patch: throw ( $STRING$ + p ) ;
rank: 892
score: 98.529541015625
patch: throw Math . err = p ;
rank: 892
score: 98.49937220982143
patch: throw ( $STRING$ ) ; }
rank: 892
score: 98.29991803850446
patch: h = 0 . 0 ;
rank: 893
score: 98.74097900390625
patch: eq = Math . sqrt ( p ) ;
rank: 893
score: 98.58919270833333
patch: throw Math $NUMBER$ Exception ( $STRING$ ) ;
rank: 893
score: 98.52890014648438
patch: throw throw new Exception ( ) ;
rank: 893
score: 98.49173409598214
patch: throw Math ( $STRING$ ) ;
rank: 893
score: 98.29007975260417
patch: throw new ( ) ;
rank: 894
score: 98.73828735351563
patch: m = Math . sqrt ( p ) ;
rank: 894
score: 98.72979058159723
patch: throw Math . substring ( epsilon ) ;
rank: 894
score: 98.57892523871527
patch: throw throw new Throwable ( $STRING$ ) ;
rank: 894
score: 98.52371215820312
patch: throw Math . destroy ( ) ;
rank: 894
score: 98.48756103515625
patch: mean = epsilon ;
rank: 894
score: 98.48094831194196
patch: Math . sqrt ( p ;
rank: 894
score: 98.28172084263393
patch: v = 0 . 0 ;
rank: 895
score: 98.7350341796875
patch: throw Math 1 . 1 ( $STRING$ ) ;
rank: 895
score: 98.53621128627232
patch: throw super ( $STRING$ ) ;
rank: 895
score: 98.486572265625
patch: max CaMeL Iterations = epsilon ;
rank: 895
score: 98.47744315011161
patch: this . normal = 0 ;
rank: 895
score: 98.26769147600446
patch: c = 0 . 0 ;
rank: 896
score: 98.73424072265625
patch: children = Math . sqrt ( p ) ;
rank: 896
score: 98.59949602399554
patch: p = $NUMBER$ . 0 ;
rank: 896
score: 98.53445434570312
patch: throw Math . Math ( ) ;
rank: 896
score: 98.49388122558594
patch: Math . max ( p ) ;
rank: 896
score: 98.46684919084821
patch: mean = new double epsilon ;
rank: 896
score: 98.26759556361607
patch: value = 0 . 0 ;
rank: 897
score: 98.47801862444196
patch: mean = 0 ; break ;
rank: 897
score: 98.45824584960937
patch: throw true ; }
rank: 898
score: 98.73008897569444
patch: throw Math . log ( p ) ;
rank: 898
score: 98.50777762276786
patch: mean = p - epsilon ;
rank: 898
score: 98.46609061104911
patch: this . max = p ;
rank: 898
score: 98.43902587890625
patch: mean = p . p ;
rank: 898
score: 98.25523158482143
patch: throw $NUMBER$ . 0 ; }
rank: 899
score: 98.7298095703125
patch: vals = Math . sqrt ( p ) ;
rank: 899
score: 98.7198486328125
patch: throw Math . out ( p ) ;
rank: 899
score: 98.46932983398438
patch: throw Math = null ;
rank: 899
score: 98.4546142578125
patch: epsilon = 0 ;
rank: 899
score: 98.43741280691964
patch: throw 0 . 0 ; }
rank: 899
score: 98.25255737304687
patch: throw Math ) ;
rank: 900
score: 98.72821044921875
patch: it = Math . sqrt ( p ) ;
rank: 900
score: 98.574462890625
patch: throw Math . min ( p ;
rank: 900
score: 98.46551513671875
patch: throw Math . finalize ( ) ;
rank: 900
score: 98.46184430803571
patch: throw Math . = 0 ;
rank: 900
score: 98.45449393136161
patch: this . mean = null ;
rank: 900
score: 98.4259033203125
patch: normal ( p ) ;
rank: 900
score: 98.25023396809895
patch: fail ( $STRING$ ) ;
rank: 901
score: 98.72574462890626
patch: if ( max CaMeL Iterations <= 0 ) {
rank: 901
score: 98.51386260986328
patch: throw Math . ( 1 ) ;
rank: 901
score: 98.42548479352679
patch: Math . sqrt ( ) ;
rank: 901
score: 98.24788120814732
patch: Float = 0 . 0 ;
rank: 902
score: 98.7249267578125
patch: ke = Math . sqrt ( p ) ;
rank: 902
score: 98.52721405029297
patch: throw Math . Na CaMeL N ;
rank: 902
score: 98.50608825683594
patch: throw Math CaMeL Exception ( ; }
rank: 902
score: 98.464111328125
patch: throw new Exception = $STRING$ ;
rank: 902
score: 98.44733537946429
patch: this . mean = $NUMBER$ ;
rank: 902
score: 98.42280796595982
patch: throw new ) ; } }
rank: 902
score: 98.24649483816964
patch: val = 0 . 0 ;
rank: 903
score: 98.72423706054687
patch: assert ( ( p == 0 ) ) ;
rank: 903
score: 98.49823869977679
patch: throw new Exception ( $STRING$ ;
rank: 903
score: 98.46226501464844
patch: throw Math . sleep ( p ;
rank: 903
score: 98.43773542131696
patch: mean = p : epsilon ;
rank: 903
score: 98.41595458984375
patch: normal = 0 . 0 ;
rank: 903
score: 98.24488176618304
patch: this . value = p ;
rank: 904
score: 98.71856689453125
patch: assert ( p == 0 ) ;
rank: 904
score: 98.70818413628473
patch: throw Math . Double ( p ) ;
rank: 904
score: 98.49506378173828
patch: return ( 0 . 0 ) ;
rank: 904
score: 98.46196746826172
patch: throw Math . ; = null ;
rank: 904
score: 98.43679373604911
patch: mean = p + 1 ;
rank: 904
score: 98.41464233398438
patch: throw Math ) ; }
rank: 904
score: 98.23032836914062
patch: throw ( ) ;
rank: 905
score: 98.45893859863281
patch: throw Math . wait ( ) ;
rank: 905
score: 98.4227294921875
patch: mean = p . normal ;
rank: 905
score: 98.40840366908482
patch: throw Math = p ; }
rank: 905
score: 98.22467912946429
patch: width = 0 . 0 ;
rank: 906
score: 98.54910617404514
patch: throw ( Runtime CaMeL Exception ) null ;
rank: 906
score: 98.4781494140625
patch: throw Math . ( 0 ) ;
rank: 906
score: 98.45557403564453
patch: throw Math . floor ( ) ;
rank: 906
score: 98.43031529017857
patch: throw Math [ 0 ] ;
rank: 906
score: 98.21432059151786
patch: n = 0 . 0 ;
rank: 907
score: 98.71441040039062
patch: if ( max CaMeL Iterations < 0 ) {
rank: 907
score: 98.54893663194444
patch: throw Math CaMeL Exception ( null ) ;
rank: 907
score: 98.49688720703125
patch: throw Math . MIN _ VALUE ;
rank: 907
score: 98.44982147216797
patch: throw Math . max = p ;
rank: 907
score: 98.42933000837054
patch: this . mean = 1 ;
rank: 907
score: 98.21186174665179
patch: r = 0 . 0 ;
rank: 908
score: 98.71293334960937
patch: h = Math . sqrt ( p ) ;
rank: 908
score: 98.70576985677083
patch: throw Math . sqrt ( epsilon ) ;
rank: 908
score: 98.49583435058594
patch: return Math . max ( ) ;
rank: 908
score: 98.46601213727679
patch: throw Math . abs ( ;
rank: 908
score: 98.44876861572266
patch: throw p + $STRING$ + p ;
rank: 908
score: 98.42844935825893
patch: mean = p * epsilon ;
rank: 908
score: 98.2099365234375
patch: throw Math ; }
rank: 909
score: 98.71127319335938
patch: logger . log ( $STRING$ , p ) ;
rank: 909
score: 98.49365234375
patch: throw Math . ceil ( ) ;
rank: 909
score: 98.44477081298828
patch: Math . close ( p ) ;
rank: 909
score: 98.42722865513393
patch: mean = $NUMBER$ . 0 ;
rank: 909
score: 98.20587158203125
patch: throw new Exception . ) ;
rank: 910
score: 98.70803833007812
patch: if ( this . epsilon <= 0 ) {
rank: 910
score: 98.4551010131836
patch: throw Math . ; } ) ;
rank: 910
score: 98.44375610351562
patch: throw Math . halt ( ) ;
rank: 910
score: 98.42425537109375
patch: mean = p : p ;
rank: 910
score: 98.39003295898438
patch: return p ; }
rank: 910
score: 98.20449393136161
patch: location = 0 . 0 ;
rank: 911
score: 98.70800170898437
patch: sum = Math . sqrt ( p ) ;
rank: 911
score: 98.69422743055556
patch: throw Math . substring ( 0 ) ;
rank: 911
score: 98.48664202008929
patch: throw Math . max ( ;
rank: 911
score: 98.45887756347656
patch: Math . round ( p ) ;
rank: 911
score: 98.4428939819336
patch: throw Math . exit ( $STRING$ ;
rank: 911
score: 98.37794712611607
patch: normal ( p ) ; }
rank: 911
score: 98.202880859375
patch: Math . gc ( ) ;
rank: 912
score: 98.44744873046875
patch: throw Math . Exception ( ;
rank: 912
score: 98.43990325927734
patch: throw Math . ; = p ;
rank: 912
score: 98.41839599609375
patch: mean = p ; } }
rank: 912
score: 98.37589518229167
patch: throw null ; } }
rank: 912
score: 98.20138985770089
patch: throw new ( $NUMBER$ ) ;
rank: 913
score: 98.70745171440973
patch: throw new ( $STRING$ , p ) ;
rank: 913
score: 98.46858215332031
patch: throw Math . , p 1 ;
rank: 913
score: 98.43375941685268
patch: throw Math . err ) ;
rank: 913
score: 98.407958984375
patch: this ( p ) ;
rank: 913
score: 98.3661397298177
patch: p = p ; }
rank: 913
score: 98.35807291666667
patch: mean = 0 ; }
rank: 913
score: 98.19837297712054
patch: this . Math = null ;
rank: 914
score: 98.43783569335938
patch: throw Math . Exception ( $STRING$ ;
rank: 914
score: 98.42488861083984
patch: Math . exit ( null ) ;
rank: 914
score: 98.40761893136161
patch: this . mean = false ;
rank: 914
score: 98.36471993582589
patch: throw Math . FALSE ; }
rank: 914
score: 98.35634068080357
patch: throw Math . ( $STRING$ ;
rank: 914
score: 98.19309779575893
patch: w = 0 . 0 ;
rank: 915
score: 98.70496215820313
patch: rv = Math . sqrt ( p ) ;
rank: 915
score: 98.42201232910156
patch: throw Math . floor ( p ;
rank: 915
score: 98.40591866629464
patch: if ( p < 0 )
rank: 915
score: 98.35089111328125
patch: mean = p ; this .
rank: 915
score: 98.34935651506696
patch: mean = p + p ;
rank: 915
score: 98.18544921875
patch: super ( ) ;
rank: 916
score: 98.7037109375
patch: throw create CaMeL Illegal CaMeL Argument CaMeL Exception (
rank: 916
score: 98.4189224243164
patch: throw Math . err = $STRING$ ;
rank: 916
score: 98.39673723493304
patch: this . mean = true ;
rank: 916
score: 98.34961809430804
patch: return max CaMeL Iterations ; }
rank: 916
score: 98.1832275390625
patch: Math . max ( ) ;
rank: 917
score: 98.70186767578124
patch: attribute = Math . sqrt ( p ) ;
rank: 917
score: 98.61902618408203
patch: throw Math . arraycopy ( mean ,
rank: 917
score: 98.41885375976562
patch: throw new Exception [ 1 ] ;
rank: 917
score: 98.41092681884766
patch: throw Math CaMeL Exception ( Math ;
rank: 917
score: 98.4044189453125
patch: throw ( Exception , $STRING$ ) ;
rank: 917
score: 98.38628278459821
patch: throw ( Exception ) $STRING$ ;
rank: 918
score: 98.700048828125
patch: pref = Math . sqrt ( p ) ;
rank: 918
score: 98.43828582763672
patch: debug ( $STRING$ + p ) ;
rank: 918
score: 98.38547188895089
patch: this . mean = mean ;
rank: 918
score: 98.34224853515624
patch: normal = null ;
rank: 918
score: 98.34110804966518
patch: Math . sqrt ( p ,
rank: 918
score: 98.17802211216518
patch: if ( p == 0 )
rank: 919
score: 98.69793701171875
patch: bug = Math . sqrt ( p ) ;
rank: 919
score: 98.61762237548828
patch: throw ( p + $STRING$ ) ;
rank: 919
score: 98.43727111816406
patch: throw Math . ) ( ) ;
rank: 919
score: 98.40573120117188
patch: return Math . min ( ) ;
rank: 919
score: 98.39733123779297
patch: Math . wait ( 0 ) ;
rank: 919
score: 98.33803013392857
patch: Math . sqrt ( 0 ;
rank: 920
score: 98.69764404296875
patch: if ( ( p < 0 ) ) {
rank: 920
score: 98.42570495605469
patch: return Math . random ( ) ;
rank: 920
score: 98.40290069580078
patch: throw Math . substring ( ) ;
rank: 920
score: 98.37132263183594
patch: Math . wait ( $NUMBER$ ) ;
rank: 920
score: 98.3376708984375
patch: throw false ; }
rank: 920
score: 98.16973005022321
patch: if ( $NUMBER$ == 0 )
rank: 921
score: 98.6963134765625
patch: throw new p ; } mean = p ;
rank: 921
score: 98.60903930664062
patch: throw Math . arraycopy ( p ;
rank: 921
score: 98.40225982666016
patch: throw Math . sum ( ) ;
rank: 921
score: 98.35769653320312
patch: warn ( $STRING$ , p ) ;
rank: 921
score: 98.33356584821429
patch: throw Math . ) ; }
rank: 921
score: 98.30224609375
patch: throw Math . -= $STRING$ ;
rank: 921
score: 98.16366141183036
patch: this . Math = p ;
rank: 922
score: 98.69591064453125
patch: throw new public Runtime CaMeL Exception ( ) {
rank: 922
score: 98.39099884033203
patch: throw Math . reverse ( ) ;
rank: 922
score: 98.37923758370536
patch: throw Math . min ( ;
rank: 922
score: 98.37502615792411
patch: mean = p + $NUMBER$ ;
rank: 922
score: 98.35682678222656
patch: throw . Error ( $STRING$ ) ;
rank: 922
score: 98.29917689732143
patch: throw this ( $STRING$ ) ;
rank: 922
score: 98.10293579101562
patch: super ( null ) ;
rank: 923
score: 98.69244995117188
patch: metadata = Math . sqrt ( p ) ;
rank: 923
score: 98.38851928710938
patch: throw Math . err = null ;
rank: 923
score: 98.37056187220982
patch: this . mean = $STRING$ ;
rank: 923
score: 98.10284423828125
patch: super ( $STRING$ ) ;
rank: 924
score: 98.691845703125
patch: val = Math . sqrt ( p ) ;
rank: 924
score: 98.40916442871094
patch: throw Math . ) ( p ;
rank: 924
score: 98.38667297363281
patch: throw p = 0 . 0 ;
rank: 924
score: 98.36791120256696
patch: this . p = normal ;
rank: 924
score: 98.31352887834821
patch: throw Math + $STRING$ ) ;
rank: 924
score: 98.08426920572917
patch: super ( p ) ;
rank: 925
score: 98.68199327256944
patch: throw Math . run ( p ) ;
rank: 925
score: 98.3861312866211
patch: throw Math . round ( $STRING$ ;
rank: 925
score: 98.36507742745536
patch: this . max = 0 ;
rank: 925
score: 98.29117431640626
patch: throw $STRING$ ; }
rank: 925
score: 98.28908865792411
patch: mean = p ; normal ;
rank: 926
score: 98.38164520263672
patch: throw Math . err ( ) ;
rank: 926
score: 98.36356026785714
patch: this . max = epsilon ;
rank: 926
score: 98.29050699869792
patch: normal ( $STRING$ ) ;
rank: 926
score: 98.28665597098214
patch: throw Math . += $STRING$ ;
rank: 926
score: 98.05051879882812
patch: p = p ;
rank: 927
score: 98.57947540283203
patch: throw ( p , $STRING$ ) ;
rank: 927
score: 98.37445068359375
patch: throw throw new Exception = $STRING$ ;
rank: 927
score: 98.3673604329427
patch: throw new Exception ( ;
rank: 927
score: 98.36213902064732
patch: this . mean = ) ;
rank: 927
score: 98.3582763671875
patch: throw Math . ) ;
rank: 927
score: 98.28860473632812
patch: mean = epsilon ; }
rank: 927
score: 98.28575788225446
patch: throw p ( $STRING$ ) ;
rank: 927
score: 98.03413899739583
patch: throw new Math ) ;
rank: 928
score: 98.37059783935547
patch: throw new Exception throw new ) ;
rank: 928
score: 98.36099679129464
patch: mean = p : 0 ;
rank: 928
score: 98.34633963448661
patch: throw Math CaMeL Exception ; }
rank: 928
score: 98.2830810546875
patch: error ( $STRING$ ) ;
rank: 928
score: 98.23232596261161
patch: throw ( Exception ) p ;
rank: 928
score: 98.03296915690105
patch: throw ( null ) ;
rank: 929
score: 98.55941772460938
patch: throw p + $STRING$ + epsilon ;
rank: 929
score: 98.37016296386719
patch: throw Math . max ( $STRING$ ;
rank: 929
score: 98.3530985514323
patch: throw p + $STRING$ ;
rank: 929
score: 98.34593854631696
patch: throw Math . ; } ;
rank: 929
score: 98.25724283854167
patch: throw ( ) ; }
rank: 929
score: 98.2291259765625
patch: msg = $STRING$ + p ;
rank: 929
score: 98.02461751302083
patch: assert $NUMBER$ = 0 ;
rank: 930
score: 98.66141086154514
patch: throw new ( $STRING$ , $STRING$ ) ;
rank: 930
score: 98.55880737304688
patch: throw Math . arraycopy ( ) ;
rank: 930
score: 98.35299246651786
patch: this . epsilon = mean ;
rank: 930
score: 98.33101196289063
patch: throw Math . ;
rank: 930
score: 98.25387573242188
patch: throw p ; } }
rank: 930
score: 98.01853434244792
patch: throw throw new ) ;
rank: 931
score: 98.35234723772321
patch: this . normal = mean ;
rank: 931
score: 98.31828090122768
patch: this . value = 0 ;
rank: 931
score: 98.24986775716145
patch: normal = p ; }
rank: 931
score: 98.16385323660714
patch: throw ( Runtime CaMeL Exception ;
rank: 931
score: 98.01158650716145
patch: report ( $STRING$ ) ;
rank: 932
score: 98.65554470486111
patch: throw new public Error ( $STRING$ ) ;
rank: 932
score: 98.5525131225586
patch: this . mean = p ; }
rank: 932
score: 98.35105678013393
patch: mean = p . mean ;
rank: 932
score: 98.30950927734375
patch: this . value = null ;
rank: 932
score: 98.20441284179688
patch: normal = 0 ;
rank: 932
score: 98.15709577287946
patch: throw ( Throwable ) p ;
rank: 933
score: 98.35008893694196
patch: p = max CaMeL Iterations ;
rank: 933
score: 98.30653889973958
patch: throw p = null ;
rank: 933
score: 98.2679443359375
patch: p = 0 . $NUMBER$ ;
rank: 933
score: 98.19788614908855
patch: throw true ; } }
rank: 933
score: 98.1897216796875
patch: throw Math null ;
rank: 933
score: 97.9735107421875
patch: throw new ) ; ;
rank: 934
score: 98.54630279541016
patch: throw Math . out ( $STRING$ ;
rank: 934
score: 98.34546770368304
patch: mean = p ; break ;
rank: 934
score: 98.30093383789062
patch: throw p = $STRING$ ;
rank: 934
score: 98.28965541294643
patch: return Math . max ( ;
rank: 934
score: 98.26174490792411
patch: return - 1 . 0 ;
rank: 934
score: 98.18965657552083
patch: throw p - $STRING$ ;
rank: 934
score: 98.18882242838542
patch: throw p ) ; }
rank: 934
score: 98.11354282924107
patch: throw Math CaMeL Runtime CaMeL Exception
rank: 934
score: 97.95907592773438
patch: / ] = p ;
rank: 935
score: 98.64779663085938
patch: assert ( p < 0 ) ;
rank: 935
score: 98.54542541503906
patch: this . p = p ; }
rank: 935
score: 98.34203229631696
patch: epsilon = max CaMeL Iterations ;
rank: 935
score: 98.28758021763393
patch: throw Math ) err ) ;
rank: 935
score: 98.24496023995536
patch: throw Math CaMeL Exception ) ;
rank: 935
score: 97.95216064453125
patch: throw new ; }
rank: 936
score: 98.6396484375
patch: assert ( p != 0 ) ;
rank: 936
score: 98.24802071707589
patch: z = $NUMBER$ . 0 ;
rank: 936
score: 98.24058314732143
patch: return Math . min ( ;
rank: 936
score: 98.18625895182292
patch: normal = null ; }
rank: 936
score: 98.17203776041667
patch: mean = - $NUMBER$ ;
rank: 936
score: 97.948974609375
patch: throw p == $NUMBER$ ;
rank: 937
score: 98.54049682617188
patch: throw ( 0 . 0 ) ;
rank: 937
score: 98.3330322265625
patch: normal = p ;
rank: 937
score: 98.24288504464286
patch: dim = 0 . 0 ;
rank: 937
score: 98.18068440755208
patch: throw Math ; } }
rank: 937
score: 98.15098063151042
patch: throw Math = 0 ;
rank: 937
score: 97.93793334960938
patch: reset ( ) ;
rank: 938
score: 98.63163248697917
patch: return p ; } mean = p ;
rank: 938
score: 98.26926967075893
patch: throw throw Math . err ;
rank: 938
score: 98.24044363839286
patch: dim = $NUMBER$ . 0 ;
rank: 938
score: 98.07358224051339
patch: throw ( Exception ) null ;
rank: 938
score: 97.92979939778645
patch: int catch = 0 ;
rank: 939
score: 98.62945556640625
patch: if ( ( p <= 0 ) )
rank: 939
score: 98.29994710286458
patch: throw $STRING$ + p ;
rank: 939
score: 98.26865059988839
patch: throw Math = new ) ;
rank: 939
score: 98.23961530412946
patch: p = $NUMBER$ . $NUMBER$ ;
rank: 939
score: 98.2230224609375
patch: return new ( p ) ;
rank: 939
score: 98.11594645182292
patch: throw Math $NUMBER$ ] ;
rank: 939
score: 97.92084350585938
patch: redraw ( ) ;
rank: 940
score: 98.62868923611111
patch: throw Math . 1 ( $STRING$ ) ;
rank: 940
score: 98.29921264648438
patch: mean = null ;
rank: 940
score: 98.26570638020833
patch: throw p = p ;
rank: 940
score: 98.23247419084821
patch: z = 1 . 0 ;
rank: 940
score: 98.21843610491071
patch: this . p = null ;
rank: 940
score: 98.11553955078125
patch: mean = - 0 ;
rank: 940
score: 97.91558837890625
patch: m $NUMBER$ = p ;
rank: 941
score: 98.52001190185547
patch: mean = max CaMeL Iterations ; }
rank: 941
score: 98.29140625
patch: mean = $NUMBER$ ;
rank: 941
score: 98.26108805338542
patch: throw Math = p ;
rank: 941
score: 98.21774727957589
patch: p = 1 . $NUMBER$ ;
rank: 941
score: 98.12142944335938
patch: normal = $STRING$ ; }
rank: 941
score: 98.10018920898438
patch: flush ( ) ;
rank: 941
score: 98.06076485770089
patch: throw new Exception $NUMBER$ null ;
rank: 941
score: 97.91080322265626
patch: invalidate ( ) ;
rank: 942
score: 98.29019775390626
patch: p = 0 ;
rank: 942
score: 98.21244594029018
patch: throw Math . , p ;
rank: 942
score: 97.90993245442708
patch: throw p != $NUMBER$ ;
rank: 943
score: 98.51747131347656
patch: throw Math . trim ( ) ;
rank: 943
score: 98.24484252929688
patch: throw Math . err ;
rank: 943
score: 98.20167759486607
patch: pos = 0 . 0 ;
rank: 943
score: 98.19123186383929
patch: this . value = $STRING$ ;
rank: 943
score: 98.09877522786458
patch: normal = 0 ; }
rank: 944
score: 98.51417541503906
patch: throw ( Runtime CaMeL Exception ) ;
rank: 944
score: 98.27953491210937
patch: mean = $STRING$ ;
rank: 944
score: 98.19850376674107
patch: m = 0 . 0 ;
rank: 944
score: 98.16576276506696
patch: this . p = $STRING$ ;
rank: 944
score: 98.09452311197917
patch: mean = - 1 ;
rank: 944
score: 98.09242757161458
patch: throw false ; } }
rank: 944
score: 98.03516642252605
patch: return ( throw ) ;
rank: 944
score: 97.89882405598958
patch: debug ( $STRING$ ) ;
rank: 945
score: 98.61500379774306
patch: throw Math . PI ( $STRING$ ) ;
rank: 945
score: 98.51130894252232
patch: throw p + $STRING$ ) ;
rank: 945
score: 98.2505391438802
patch: mean = p ) ;
rank: 945
score: 98.23207600911458
patch: throw Math ) err ;
rank: 945
score: 98.193359375
patch: throw Math 1 . 0 ;
rank: 945
score: 98.08638509114583
patch: mean = - p ;
rank: 945
score: 97.898388671875
patch: p = $NUMBER$ ;
rank: 946
score: 98.50368245442708
patch: throw p : $STRING$ ;
rank: 946
score: 98.2501220703125
patch: this ( 0 ) ;
rank: 946
score: 98.21371895926339
patch: throw new Exception = ) ;
rank: 946
score: 98.15704345703125
patch: throw new Error ( $STRING$ ;
rank: 946
score: 97.89136759440105
patch: throw new Exception ; }
rank: 947
score: 98.61216905381944
patch: throw Math . new ( $STRING$ ) ;
rank: 947
score: 98.24703979492188
patch: throw Math + $STRING$ ;
rank: 947
score: 98.20911516462054
patch: throw Math . err ; }
rank: 947
score: 98.18470982142857
patch: throw Math . round ( ;
rank: 947
score: 98.15501185825893
patch: this . ; return null ;
rank: 947
score: 98.08309936523438
patch: return p ; } }
rank: 947
score: 98.04342651367188
patch: throw Math . TRUE ;
rank: 947
score: 97.88590087890626
patch: repaint ( ) ;
rank: 948
score: 98.61101531982422
patch: throw new public Exception ( ) {
rank: 948
score: 98.15334647042411
patch: this . ( p ) ;
rank: 948
score: 98.0763651529948
patch: mean = - epsilon ;
rank: 949
score: 98.60950469970703
patch: if ( p < 0 ) {
rank: 949
score: 98.2345947265625
patch: epsilon = p ;
rank: 949
score: 98.18343680245536
patch: Math . exit ( ) ;
rank: 949
score: 97.83685302734375
patch: pack ( ) ;
rank: 950
score: 98.22860107421874
patch: epsilon = epsilon ;
rank: 950
score: 98.17549641927083
patch: throw p = 0 ;
rank: 950
score: 98.0972391764323
patch: p = - 1 ;
rank: 950
score: 98.063037109375
patch: throw Math . }
rank: 950
score: 97.87931315104167
patch: throw Math ; break ;
rank: 950
score: 97.83488159179687
patch: throw throw p ;
rank: 951
score: 98.22495524088542
patch: this ( $STRING$ ) ;
rank: 951
score: 98.16780598958333
patch: throw Math CaMeL Exception ;
rank: 951
score: 98.14265659877232
patch: return Math . abs ( ;
rank: 951
score: 98.05602010091145
patch: normal ( null ) ;
rank: 951
score: 97.85405883789062
patch: p = null ;
rank: 951
score: 97.82853698730469
patch: throw p ;
rank: 952
score: 98.60639105902777
patch: throw false ; } mean = p ;
rank: 952
score: 98.33296712239583
patch: throw p : p ;
rank: 952
score: 98.05382283528645
patch: throw $STRING$ ; } }
rank: 952
score: 98.0128173828125
patch: normal ( 0 ) ;
rank: 952
score: 97.84078369140624
patch: throw ( Exception ;
rank: 952
score: 97.82222900390624
patch: d = p ;
rank: 953
score: 98.60590362548828
patch: if ( p != 0 ) {
rank: 953
score: 98.21793823242187
patch: mean = 1 ;
rank: 953
score: 98.14206368582589
patch: throw new Exception ( p ;
rank: 953
score: 98.10580444335938
patch: throw Math = ) ;
rank: 953
score: 97.805126953125
patch: return new ) ;
rank: 954
score: 98.05902099609375
patch: throw p * $STRING$ ;
rank: 954
score: 98.03696695963542
patch: normal = ) ; }
rank: 954
score: 97.79508666992187
patch: fail ( ) ;
rank: 954
score: 97.79259236653645
patch: throw Math ; } else
rank: 955
score: 98.203759765625
patch: mean = false ;
rank: 955
score: 98.12820434570312
patch: throw Math . ; }
rank: 955
score: 98.02555338541667
patch: normal ( ) ; }
rank: 956
score: 98.56929016113281
patch: throw new ( $STRING$ ) ; }
rank: 956
score: 98.28025309244792
patch: throw ( p ) ;
rank: 956
score: 98.19009399414062
patch: normal = epsilon ;
rank: 956
score: 98.11971028645833
patch: initialize ( p ) ;
rank: 956
score: 98.02229817708333
patch: throw new $STRING$ ; }
rank: 956
score: 98.0210673014323
patch: throw Math = this ;
rank: 956
score: 97.99448852539062
patch: normal = $STRING$ ;
rank: 956
score: 97.77736206054688
patch: n = p ;
rank: 956
score: 97.75374145507813
patch: throw - $NUMBER$ ;
rank: 957
score: 98.53519439697266
patch: assert ( p >= 0 ) ;
rank: 957
score: 98.27462332589286
patch: throw Math . = p ;
rank: 957
score: 98.17532958984376
patch: mean = true ;
rank: 957
score: 98.015380859375
patch: throw new Exception null ;
rank: 957
score: 98.00801595052083
patch: { return p ; }
rank: 957
score: 97.9259521484375
patch: return - 1 ;
rank: 957
score: 97.7529541015625
patch: throw new Exception ;
rank: 957
score: 97.73369140625
patch: throw p ) ;
rank: 958
score: 98.53494262695312
patch: if ( epsilon <= 0 ) {
rank: 958
score: 98.26671491350446
patch: throw Math . <= $NUMBER$ ;
rank: 958
score: 97.95593872070313
patch: normal = ) ;
rank: 958
score: 97.75294189453125
patch: throw throw null ;
rank: 958
score: 97.72483520507812
patch: report ( ) ;
rank: 959
score: 98.53023529052734
patch: assert ( epsilon <= 0 ) ;
rank: 959
score: 98.00457763671875
patch: normal ( epsilon ) ;
rank: 959
score: 97.98338826497395
patch: return new ( ) ;
rank: 959
score: 97.94508056640625
patch: normal = false ;
rank: 959
score: 97.8911641438802
patch: throw new Error ( ;
rank: 959
score: 97.71815185546875
patch: revalidate ( ) ;
rank: 960
score: 98.52536010742188
patch: warn ( $STRING$ , $STRING$ ) ;
rank: 960
score: 97.88925170898438
patch: throw Math . ; ;
rank: 960
score: 97.71530151367188
patch: i = 0 ;
rank: 961
score: 98.50446319580078
patch: if ( p >= 0 ) {
rank: 961
score: 97.95179239908855
patch: throw Math = $STRING$ ;
rank: 961
score: 97.9114990234375
patch: normal = $NUMBER$ ;
rank: 961
score: 97.71427001953126
patch: n = 0 ;
rank: 961
score: 97.65714111328126
patch: sb = null ;
rank: 962
score: 98.47626495361328
patch: if ( epsilon == 0 ) {
rank: 962
score: 97.99749755859375
patch: normal ( ) ;
rank: 962
score: 97.70658569335937
patch: initialize ( ) ;
rank: 962
score: 97.63724365234376
patch: throw Math ; ;
rank: 963
score: 98.47415161132812
patch: assert ( p > 0 ) ;
rank: 963
score: 98.10204467773437
patch: this ( ) ;
rank: 963
score: 97.77701416015626
patch: dim = p ;
rank: 963
score: 97.70225219726562
patch: unlock ( ) ;
rank: 963
score: 97.59693603515625
patch: ret = null ;
rank: 964
score: 98.16673787434895
patch: throw p + p ;
rank: 964
score: 97.87669881184895
patch: return ( $STRING$ ) ;
rank: 964
score: 97.7517822265625
patch: size = 0 ;
rank: 964
score: 97.69046630859376
patch: throw p ; ;
rank: 965
score: 98.0884501139323
patch: throw Math + p ;
rank: 965
score: 97.94418334960938
patch: throw this ; }
rank: 965
score: 97.90728759765625
patch: throw p = $NUMBER$ ;
rank: 965
score: 97.879052734375
patch: throw new $STRING$ ;
rank: 965
score: 97.679541015625
patch: result = null ;
rank: 966
score: 98.0594482421875
patch: mean = ) ;
rank: 966
score: 97.9052225748698
patch: throw p = ) ;
rank: 966
score: 97.86153564453124
patch: mean = mean ;
rank: 966
score: 97.85129801432292
patch: throw Math $NUMBER$ ) ;
rank: 966
score: 97.67896728515625
patch: logger = null ;
rank: 966
score: 97.56015625
patch: out = null ;
rank: 967
score: 98.45440673828125
patch: if ( p > 0 ) {
rank: 967
score: 98.0730692545573
patch: throw Math == $STRING$ ;
rank: 967
score: 98.01361694335938
patch: p = epsilon ;
rank: 967
score: 97.92427368164063
patch: return epsilon ; }
rank: 967
score: 97.87925211588542
patch: throw Math = Math ;
rank: 967
score: 97.68189086914063
patch: o = p ;
rank: 967
score: 97.55864868164062
patch: s = p ;
rank: 968
score: 98.06666056315105
patch: throw p + ) ;
rank: 968
score: 98.00827026367188
patch: max = 0 ;
rank: 968
score: 97.85057373046875
patch: normal = true ;
rank: 968
score: 97.8085225423177
patch: return ( null ) ;
rank: 968
score: 97.66752319335937
patch: exit ( ) ;
rank: 968
score: 97.65675659179688
patch: p = $STRING$ ;
rank: 968
score: 97.55322875976563
patch: dim = null ;
rank: 969
score: 98.44737243652344
patch: throw Math $NUMBER$ ( $STRING$ ) ;
rank: 969
score: 97.98247680664062
patch: epsilon = $STRING$ ;
rank: 969
score: 97.8173828125
patch: m = p ;
rank: 969
score: 97.78333740234375
patch: p = 1 ;
rank: 969
score: 97.66430053710937
patch: return ( ) ;
rank: 969
score: 97.54147338867188
patch: v = p ;
rank: 970
score: 97.9626220703125
patch: max = p ;
rank: 970
score: 97.91168212890625
patch: return 0 ; }
rank: 970
score: 97.6536865234375
patch: result = p ;
rank: 971
score: 97.95388793945312
patch: mean += p ;
rank: 971
score: 97.9068115234375
patch: return mean ; }
rank: 971
score: 97.55608520507812
patch: z = p ;
rank: 972
score: 98.41176932198661
patch: throw new ( p ) ;
rank: 972
score: 97.75635986328125
patch: throw new Runtime ;
rank: 972
score: 97.51353149414062
patch: s = null ;
rank: 973
score: 98.39317975725446
patch: assert p <= 0 ) ;
rank: 973
score: 97.88372192382812
patch: epsilon = null ;
rank: 973
score: 97.76168212890624
patch: throw ( $STRING$ ;
rank: 973
score: 97.631103515625
patch: throw throw ) ;
rank: 973
score: 97.52924194335938
patch: f = p ;
rank: 974
score: 98.00166829427083
patch: throw p : null ;
rank: 974
score: 97.87032470703124
patch: normal = this ;
rank: 974
score: 97.75747680664062
patch: dispose ( ) ;
rank: 974
score: 97.62369995117187
patch: c = p ;
rank: 974
score: 97.48368530273437
patch: throw null ) ;
rank: 975
score: 97.799658203125
patch: return null ; }
rank: 975
score: 97.70302734375
patch: throw ) ) ;
rank: 975
score: 97.62236785888672
patch: throw null ;
rank: 975
score: 97.519189453125
patch: throw new ; ;
rank: 976
score: 97.85858154296875
patch: epsilon = $NUMBER$ ;
rank: 976
score: 97.791845703125
patch: mean = new double
rank: 976
score: 97.62006225585938
patch: commit ( ) ;
rank: 976
score: 97.5115478515625
patch: val = p ;
rank: 976
score: 97.47618408203125
patch: h = p ;
rank: 977
score: 98.33735874720982
patch: assert p == 0 ) ;
rank: 977
score: 97.98282877604167
patch: throw Math != $STRING$ ;
rank: 977
score: 97.76865844726562
patch: return Math ; }
rank: 977
score: 97.6597412109375
patch: n = null ;
rank: 977
score: 97.6194580078125
patch: warn ( ) ;
rank: 977
score: 97.50465698242188
patch: m = null ;
rank: 978
score: 98.30943806966145
patch: throw Math . new CaMeL
rank: 978
score: 97.81165771484375
patch: mean += epsilon ;
rank: 978
score: 97.768359375
patch: throw 0 ; }
rank: 978
score: 97.6584243774414
patch: throw Math ;
rank: 978
score: 97.494970703125
patch: name = $STRING$ ;
rank: 979
score: 98.27081298828125
patch: assert p < 0 ) ;
rank: 979
score: 97.64755249023438
patch: output = p ;
rank: 979
score: 97.47024536132812
patch: d = null ;
rank: 980
score: 98.27054268973214
patch: if ( p != 0 )
rank: 980
score: 97.78702392578126
patch: epsilon = 1 ;
rank: 980
score: 97.747900390625
patch: return this ; }
rank: 980
score: 97.63672485351563
patch: throw super ) ;
rank: 981
score: 98.24534388950893
patch: throw new public ( ) {
rank: 981
score: 97.78675537109375
patch: max = epsilon ;
rank: 981
score: 97.607958984375
patch: d = $NUMBER$ ;
rank: 981
score: 97.58116455078125
patch: p = ) ;
rank: 982
score: 98.18567766462054
patch: if ( p >= 0 )
rank: 982
score: 97.78659057617188
patch: throw $STRING$ ;
rank: 982
score: 97.74248046875
patch: throw p ? p
rank: 982
score: 97.58724365234374
patch: throw this ) ;
rank: 982
score: 97.462939453125
patch: retval = null ;
rank: 983
score: 98.17525809151786
patch: warn ( $STRING$ ) ; }
rank: 983
score: 97.77944946289062
patch: throw throw $STRING$ ;
rank: 983
score: 97.71765747070313
patch: return ) ; }
rank: 983
score: 97.65364379882813
patch: m = 0 ;
rank: 983
score: 97.5300048828125
patch: throw new Math ;
rank: 983
score: 97.44409790039063
patch: s = $STRING$ ;
rank: 984
score: 97.5898681640625
patch: d = 0 ;
rank: 984
score: 97.58470458984375
patch: f = null ;
rank: 984
score: 97.49813232421874
patch: f = 0 ;
rank: 985
score: 98.16338239397321
patch: assert p >= 0 ) ;
rank: 985
score: 97.61940002441406
patch: throw Math .
rank: 985
score: 97.58600463867188
patch: position = 0 ;
rank: 985
score: 97.58209228515625
patch: throw ) ; }
rank: 986
score: 97.65951538085938
patch: throw p == 0
rank: 986
score: 97.61570434570312
patch: mean ( ) ;
rank: 986
score: 97.58291015625
patch: validate ( ) ;
rank: 986
score: 97.57421875
patch: at = null ;
rank: 986
score: 97.44169311523437
patch: failed = null ;
rank: 986
score: 97.42341918945313
patch: pos = 0 ;
rank: 987
score: 97.61124877929687
patch: throw Math true ;
rank: 987
score: 97.577490234375
patch: title = $STRING$ ;
rank: 987
score: 97.56863403320312
patch: Math = null ;
rank: 987
score: 97.42432861328125
patch: throw throw Math ;
rank: 988
score: 97.729248046875
patch: p += epsilon ;
rank: 988
score: 97.5722900390625
patch: msg = $STRING$ ;
rank: 988
score: 97.42266235351562
patch: list = null ;
rank: 988
score: 97.4200927734375
patch: name = p ;
rank: 989
score: 97.63797607421876
patch: throw Math != null
rank: 989
score: 97.56365966796875
patch: throw p false ;
rank: 989
score: 97.55892333984374
patch: this = p ;
rank: 989
score: 97.4743408203125
patch: z = 0 ;
rank: 989
score: 97.409716796875
patch: pos = p ;
rank: 990
score: 97.8266357421875
patch: throw $STRING$ ) ;
rank: 990
score: 97.60054931640624
patch: throw Math 1 ;
rank: 990
score: 97.5587890625
patch: throw ( Math ;
rank: 990
score: 97.54697265625
patch: t = p ;
rank: 990
score: 97.4581298828125
patch: warn = $STRING$ ;
rank: 990
score: 97.40914916992188
patch: size = $NUMBER$ ;
rank: 991
score: 97.54362182617187
patch: rollback ( ) ;
rank: 991
score: 97.40364379882813
patch: length = 0 ;
rank: 991
score: 97.39736328125
patch: buf = null ;
rank: 992
score: 97.71276245117187
patch: p += 0 ;
rank: 992
score: 97.61170043945313
patch: { return ; }
rank: 992
score: 97.541162109375
patch: str = p ;
rank: 992
score: 97.399853515625
patch: val = null ;
rank: 993
score: 97.58734130859375
patch: throw new p ;
rank: 993
score: 97.53477783203125
patch: value = p ;
rank: 993
score: 97.503759765625
patch: output = null ;
rank: 993
score: 97.3931640625
patch: h = null ;
rank: 993
score: 97.392578125
patch: size = p ;
rank: 994
score: 97.527197265625
patch: b = p ;
rank: 994
score: 97.39308471679688
patch: quit ( ) ;
rank: 995
score: 97.69496459960938
patch: epsilon = false ;
rank: 995
score: 97.5108642578125
patch: r = p ;
rank: 995
score: 97.39126586914062
patch: v = null ;
rank: 995
score: 97.36588745117187
patch: throw Math $NUMBER$ ;
rank: 995
score: 97.32794952392578
patch: return null ;
rank: 996
score: 97.27775573730469
patch: return p ;
rank: 996
score: 97.09809112548828
patch: throw this ;
rank: 997
score: 97.4559814453125
patch: ch = p ;
rank: 997
score: 97.4414291381836
patch: throw false ;
rank: 997
score: 97.26971435546875
patch: throw ) ;
rank: 997
score: 97.18853759765625
patch: throw p _
rank: 997
score: 97.06953430175781
patch: throw new ;
rank: 997
score: 97.047607421875
patch: throw true ;
rank: 998
score: 97.38284912109376
patch: c = null ;
rank: 998
score: 96.07173665364583
patch: throw new
rank: 998
score: 95.78280639648438
patch: Math .
rank: 999
score: 96.89892578125
patch: return this ;
rank: 999
score: 96.7677001953125
patch: throw p
rank: 999
score: 95.99232991536458
patch: break ;
rank: 999
score: 94.86270904541016
patch: throw
rank: 1000
score: 95.97129821777344
patch: {
rank: 1000
score: 93.80973815917969
patch: mean
