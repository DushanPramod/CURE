rank: 1
score: 99.76610565185547
patch: return true ;
rank: 1
score: 99.70832061767578
patch: return false ;
rank: 1
score: 99.01975795200893
patch: return false ; return true ;
rank: 2
score: 99.58563842773438
patch: return true ; }
rank: 2
score: 99.57264293323864
patch: return search CaMeL Chars [ j ] == ch ;
rank: 2
score: 99.24339076450893
patch: return true ; return true ;
rank: 2
score: 99.230712890625
patch: return true ; } return false ;
rank: 3
score: 99.49866739908855
patch: return true ; } }
rank: 3
score: 99.44073486328125
patch: return false ; }
rank: 3
score: 99.27000325520834
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 3
score: 99.24385375976563
patch: . return true ;
rank: 3
score: 99.18419647216797
patch: return true ; } return true ;
rank: 4
score: 99.3008968955592
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 4
score: 99.27475210336539
patch: return ( search CaMeL Chars [ j ] == ch ) ;
rank: 4
score: 99.25904541015625
patch: return cs . is CaMeL Empty ( ) ;
rank: 4
score: 99.16327582465277
patch: return true ; } } return false ;
rank: 4
score: 98.87057059151786
patch: return 0 ; return true ;
rank: 5
score: 99.32189002403847
patch: return Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 5
score: 99.24661959134616
patch: return this . search CaMeL Chars [ j ] == ch ;
rank: 5
score: 99.20572916666667
patch: return ( true ) ;
rank: 5
score: 99.19391547309027
patch: return true ; } } return true ;
rank: 5
score: 99.17952183314732
patch: return true ; return false ;
rank: 5
score: 99.10096435546875
patch: CaMeL return true ;
rank: 6
score: 99.31084127987133
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ) ;
rank: 6
score: 99.2738037109375
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 6
score: 99.24142252604166
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 6
score: 99.19533284505208
patch: return false ; } }
rank: 6
score: 99.17283121744792
patch: return true ; ; }
rank: 6
score: 99.16745431082589
patch: return true ; return null ;
rank: 6
score: 99.07291412353516
patch: return true ; return true ; }
rank: 6
score: 98.85991559709821
patch: return false ; return false ;
rank: 7
score: 99.28926166735198
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 7
score: 99.25098334418402
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ;
rank: 7
score: 99.21888316761364
patch: return search CaMeL Chars [ j ] != ch ;
rank: 7
score: 99.17633666992188
patch: return ch . is CaMeL Empty ( ) ;
rank: 7
score: 99.145263671875
patch: . return true ; }
rank: 7
score: 99.14395751953126
patch: return true ; ;
rank: 7
score: 99.12379455566406
patch: return false ; } return false ;
rank: 7
score: 98.83588409423828
patch: return false ; ; return true ;
rank: 8
score: 99.2117919921875
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == ch ;
rank: 8
score: 99.18824768066406
patch: return false ; return false ; }
rank: 8
score: 99.1680438701923
patch: if ( search CaMeL Chars [ j ] == ch ) {
rank: 8
score: 99.1315689086914
patch: return true ; break ; } }
rank: 8
score: 99.08526611328125
patch: return is CaMeL Empty ( true ) ;
rank: 8
score: 98.82969665527344
patch: return 0 ;
rank: 9
score: 99.2728740985577
patch: return contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 9
score: 99.24717802159927
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , ch ) ;
rank: 9
score: 99.20531548394098
patch: return search CaMeL Chars [ j ] ;
rank: 9
score: 99.12633666992187
patch: return is CaMeL Empty ( ch ) ; }
rank: 9
score: 99.0947265625
patch: return false ; return null ;
rank: 9
score: 99.08003234863281
patch: return false ; } return true ;
rank: 10
score: 99.23850384880515
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 10
score: 99.20393371582031
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( ch ) ;
rank: 10
score: 99.10288696289062
patch: return is CaMeL Empty ( true ) ; }
rank: 10
score: 99.10025024414062
patch: if ( search CaMeL Chars [ j ] == ch )
rank: 10
score: 99.0922622680664
patch: return true ; return true ; ;
rank: 10
score: 99.0679931640625
patch: return true ; } } return ;
rank: 10
score: 98.77922058105469
patch: return true ; ; return true ;
rank: 11
score: 99.25152946920956
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ch ) ;
rank: 11
score: 99.2343017578125
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , ch ) ;
rank: 11
score: 99.18646647135417
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 11
score: 99.1420669555664
patch: return false ; return true ; }
rank: 11
score: 99.09569440569196
patch: if ( search CaMeL Length < search CaMeL Chars . length ) {
rank: 11
score: 99.09443359375
patch: return ! is CaMeL Empty ( ch ) ;
rank: 11
score: 99.07760009765624
patch: return false ; ;
rank: 11
score: 99.04344346788194
patch: return false ; } } return false ;
rank: 11
score: 98.98460083007812
patch: . return false ;
rank: 11
score: 98.77598063151042
patch: CaMeL List ( ) ; return true ;
rank: 12
score: 99.2284423828125
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 12
score: 99.18625710227273
patch: return search CaMeL Chars [ j ] == $STRING$ ;
rank: 12
score: 99.08441162109375
patch: return true ; } ;
rank: 12
score: 99.07624816894531
patch: return false ; return true ; ;
rank: 12
score: 99.03472137451172
patch: return true ; return false ; }
rank: 12
score: 98.92613874162946
patch: CaMeL ; return true ; }
rank: 12
score: 98.76963806152344
patch: return 0 ; ; return true ;
rank: 13
score: 99.23603515625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length ) ;
rank: 13
score: 99.22541246916118
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 13
score: 99.06339518229167
patch: CaMeL Range = true ; return true ;
rank: 13
score: 98.88870675223214
patch: = true ; break ; }
rank: 13
score: 98.74500383649554
patch: return 0 ; return false ;
rank: 14
score: 99.2316143329327
patch: return Array CaMeL Utils . is CaMeL Empty ( ch ) ;
rank: 14
score: 99.17145330255681
patch: return search CaMeL Chars [ i ] == ch ;
rank: 14
score: 99.0684305826823
patch: if ( cs . is CaMeL Empty ( ) ) {
rank: 14
score: 99.05514962332589
patch: return true ; } } ;
rank: 14
score: 99.05217827690973
patch: CaMeL Exception = true ; return true ;
rank: 14
score: 99.0109634399414
patch: return true ; } } if ;
rank: 14
score: 98.88545735677083
patch: CaMeL ; return true ;
rank: 14
score: 98.73689100477431
patch: CaMeL do = true ; return true ;
rank: 15
score: 99.23102213541667
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , ch ) ;
rank: 15
score: 99.04363250732422
patch: return true ; return null ; ;
rank: 15
score: 98.87992858886719
patch: = true ; return true ; }
rank: 15
score: 98.71356879340277
patch: CaMeL ch = true ; return true ;
rank: 16
score: 99.22620307074652
patch: return contains CaMeL Any ( cs ) ;
rank: 16
score: 99.16389973958333
patch: return ch == ch ;
rank: 16
score: 99.09451293945312
patch: return search CaMeL Chars [ j ] == ch ; }
rank: 16
score: 99.05556640625
patch: return ( cs . char CaMeL At ( j ) == ch ) ;
rank: 16
score: 99.04341634114583
patch: return is CaMeL Empty ( ch ) ;
rank: 16
score: 98.99633110894098
patch: return true ; } else return false ;
rank: 16
score: 98.86263602120536
patch: return true ; break ; }
rank: 16
score: 98.68692452566964
patch: return ; { return true ;
rank: 17
score: 99.22378200954861
patch: return is CaMeL Empty ( cs ) ;
rank: 17
score: 99.15767996651786
patch: return search CaMeL Chars [ j ] . contains ( ch ) ;
rank: 17
score: 99.03942260742187
patch: return true ; } } } return true ;
rank: 17
score: 99.03729802911931
patch: return cs . is CaMeL Empty ( ) ; }
rank: 17
score: 99.0316162109375
patch: return true ; ; return false ;
rank: 17
score: 98.8558578491211
patch: . return true ; return true ;
rank: 17
score: 98.68241373697917
patch: CaMeL List ( ) . return true ;
rank: 18
score: 99.21156712582237
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs , ch ) ;
rank: 18
score: 99.1575927734375
patch: return search CaMeL Chars [ j ] . equals ( ch ) ;
rank: 18
score: 99.03129069010417
patch: p = true ; return true ; }
rank: 18
score: 99.02714538574219
patch: return true ; return false ; ;
rank: 18
score: 98.85531616210938
patch: m = true ; return true ;
rank: 18
score: 98.68169487847223
patch: CaMeL Array CaMeL List ( true ) ;
rank: 19
score: 99.21563251201923
patch: return is CaMeL Empty ( cs , search CaMeL Chars ) ;
rank: 19
score: 99.15470581054687
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) ) ;
rank: 19
score: 99.02738037109376
patch: return ! true ;
rank: 19
score: 99.02479771205357
patch: . return true ; } }
rank: 19
score: 99.02423773871527
patch: CaMeL Number = true ; return true ;
rank: 19
score: 98.9607925415039
patch: return true ; } else if ;
rank: 19
score: 98.85365804036458
patch: . return false ; }
rank: 19
score: 98.67059326171875
patch: return ; return ; = true ;
rank: 20
score: 99.21405029296875
patch: return search CaMeL Chars . is CaMeL Empty ( ) ;
rank: 20
score: 99.19114283511513
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs , cs ) ;
rank: 20
score: 99.05131225585937
patch: search CaMeL Chars [ j ] = ch ;
rank: 20
score: 99.023681640625
patch: if ( search CaMeL Length < search CaMeL Chars . length )
rank: 20
score: 99.02064208984375
patch: return ! is CaMeL Empty ( true ) ;
rank: 20
score: 98.66965738932292
patch: CaMeL List ( ) ; return false ;
rank: 21
score: 99.14110218394886
patch: return cs . contains CaMeL Any ( ch ) ;
rank: 21
score: 99.02097389914773
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 21
score: 99.01888020833333
patch: c = true ; return true ; }
rank: 21
score: 98.99190521240234
patch: return false ; return null ; ;
rank: 21
score: 98.93866729736328
patch: return false ; } } return ;
rank: 21
score: 98.66265106201172
patch: ( false ) ; return true ;
rank: 22
score: 99.21272358141448
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Length ) ;
rank: 22
score: 99.0197245279948
patch: if ( search CaMeL Length < cs CaMeL Length ) {
rank: 22
score: 99.0114501953125
patch: return true ; } } } return false ;
rank: 22
score: 98.9906997680664
patch: return false ; return false ; ;
rank: 22
score: 98.82399204799107
patch: = true ; return true ;
rank: 22
score: 98.66020202636719
patch: return false ; return - 1 ;
rank: 23
score: 99.20946248372395
patch: return search CaMeL Chars [ j ] == ch ) ;
rank: 23
score: 99.18140933388158
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( search CaMeL Chars , ch ) ;
rank: 23
score: 99.14022064208984
patch: return ch . equals ( cs . char CaMeL At ( j ) ) ;
rank: 23
score: 99.00630326704545
patch: return search CaMeL Chars [ j ] == null ;
rank: 23
score: 98.986083984375
patch: CaMeL Exception = true ; return false ;
rank: 23
score: 98.65182156032986
patch: CaMeL sum = true ; return true ;
rank: 24
score: 99.20919596354166
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs ) ;
rank: 24
score: 99.17019418569711
patch: return Array CaMeL Utils . contains CaMeL Any ( cs ) ;
rank: 24
score: 99.01410319010417
patch: return ( cs . char CaMeL At ( i ) == ch ) ;
rank: 24
score: 99.00765228271484
patch: return true ? true : true ;
rank: 24
score: 98.99187469482422
patch: return false ; } j ++ ;
rank: 24
score: 98.98478190104167
patch: CaMeL List . return ( true ) ;
rank: 24
score: 98.92605590820312
patch: return is CaMeL Empty ;
rank: 24
score: 98.81253051757812
patch: m = true ; break ; }
rank: 24
score: 98.64031110491071
patch: return 0 ; return 1 ;
rank: 25
score: 99.13610076904297
patch: return is CaMeL Empty ( cs . char CaMeL At ( j ) ) ;
rank: 25
score: 99.0087381998698
patch: return ! return true ;
rank: 25
score: 99.00417654854911
patch: return true ; ; } }
rank: 25
score: 98.8109130859375
patch: if ( true ) return true ;
rank: 25
score: 98.63932800292969
patch: return false ; ; return false ;
rank: 26
score: 99.20011138916016
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ; }
rank: 26
score: 99.00448172433036
patch: if ( search CaMeL Length >= search CaMeL Chars . length ) {
rank: 26
score: 98.98497517903645
patch: return return false ; }
rank: 26
score: 98.91889105902777
patch: return false ; } } return true ;
rank: 26
score: 98.80948893229167
patch: CaMeL return true ; }
rank: 26
score: 98.61842854817708
patch: return 0 + true ;
rank: 27
score: 99.19940655048077
patch: return search CaMeL Chars [ cs CaMeL Length ] == ch ;
rank: 27
score: 99.13303444602273
patch: return contains CaMeL Any ( cs , ch ) ;
rank: 27
score: 99.00321451822917
patch: if ( Array CaMeL Utils . is CaMeL Empty ( cs ) ) {
rank: 27
score: 98.98557535807292
patch: return ! true ; }
rank: 27
score: 98.98248291015625
patch: search CaMeL Chars [ j ] = true ;
rank: 27
score: 98.91880967881944
patch: return is CaMeL True ( true ) ;
rank: 27
score: 98.78117370605469
patch: p = true ; break ; }
rank: 28
score: 99.19824936810662
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , search CaMeL Chars ) ;
rank: 28
score: 99.16027113970588
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , search CaMeL Chars ) ;
rank: 28
score: 99.13093118106617
patch: return search CaMeL Chars [ j ] . length < search CaMeL Chars . length ;
rank: 28
score: 99.00137532552084
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length )
rank: 28
score: 98.98413848876953
patch: c = true ; break ; }
rank: 28
score: 98.97957153320313
patch: return search CaMeL Chars [ j ] ; }
rank: 28
score: 98.94866265190973
patch: CaMeL Range = true ; return false ;
rank: 28
score: 98.61507839626736
patch: CaMeL do = true ; return false ;
rank: 29
score: 99.19775390625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , cs ) ;
rank: 29
score: 99.15960693359375
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 29
score: 99.13004150390626
patch: return ! search CaMeL Chars [ j ] ;
rank: 29
score: 99.00005696614583
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length )
rank: 29
score: 98.98091634114583
patch: return true ; } return true ; }
rank: 29
score: 98.97480912642045
patch: return super . contains CaMeL Any ( cs ) ;
rank: 29
score: 98.94361029730902
patch: return this . true ; return true ;
rank: 29
score: 98.91617838541667
patch: return true ; } if return false ;
rank: 29
score: 98.61444091796875
patch: CaMeL List ( ) ; return null ;
rank: 30
score: 99.15907689144737
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( cs , search CaMeL Chars ) ;
rank: 30
score: 98.99938151041667
patch: return Array CaMeL Utils . is CaMeL Empty ( cs CaMeL Length ) ;
rank: 30
score: 98.97967529296875
patch: return true ; } ; }
rank: 30
score: 98.97020374644886
patch: return search CaMeL Length [ j ] == ch ;
rank: 30
score: 98.93345811631944
patch: CaMeL Number = true ; return false ;
rank: 30
score: 98.7742919921875
patch: . return true ; break ; }
rank: 30
score: 98.60987854003906
patch: return ! true ; return true ;
rank: 31
score: 99.12456512451172
patch: return ! search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 31
score: 98.99814675071023
patch: if ( cs . is CaMeL Empty ( ) )
rank: 31
score: 98.96695556640626
patch: ( search CaMeL Chars [ j ] ) ;
rank: 31
score: 98.9237060546875
patch: CaMeL Exception return true ;
rank: 31
score: 98.9031270345052
patch: return true ; } else
rank: 31
score: 98.77141571044922
patch: CaMeL return true ; return true ;
rank: 31
score: 98.60861206054688
patch: return - ) ; return true ;
rank: 32
score: 99.15255533854166
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs ) ;
rank: 32
score: 99.12435150146484
patch: return ( ch == ch ) ;
rank: 32
score: 98.99567057291667
patch: if ( search CaMeL Chars . length == search CaMeL Chars . length )
rank: 32
score: 98.97478637695312
patch: return true ; this . return true ; }
rank: 32
score: 98.96504720052083
patch: return return true ; }
rank: 32
score: 98.89984130859375
patch: return null ; } return false ;
rank: 32
score: 98.75864955357143
patch: . return ( true ) ;
rank: 32
score: 98.60601043701172
patch: return true ; return - 1 ;
rank: 33
score: 98.99223188920455
patch: return is CaMeL Empty ( search CaMeL Chars ) ;
rank: 33
score: 98.97216796875
patch: return true ; } } }
rank: 33
score: 98.91515096028645
patch: CaMeL Range = true ;
rank: 33
score: 98.89830017089844
patch: return null ; } return true ;
rank: 33
score: 98.75527954101562
patch: if ( true ) return false ;
rank: 33
score: 98.60361153738839
patch: return false ; return 1 ;
rank: 34
score: 99.14875344669117
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , cs ) ;
rank: 34
score: 99.1184414950284
patch: return ch == search CaMeL Chars [ j ] ;
rank: 34
score: 98.9908447265625
patch: return Array CaMeL Utils . is CaMeL Empty ( ) ;
rank: 34
score: 98.96520233154297
patch: c = true ; return true ;
rank: 34
score: 98.9642822265625
patch: return return false ;
rank: 34
score: 98.9060791015625
patch: CaMeL Exception = true ; if return true ;
rank: 34
score: 98.89110107421875
patch: return return is CaMeL Empty ( true ) ;
rank: 34
score: 98.73662719726562
patch: CaMeL return false ;
rank: 34
score: 98.5992431640625
patch: CaMeL List ( true ) ; return ;
rank: 35
score: 99.11770193917411
patch: return is CaMeL Empty ( search CaMeL Chars [ j ] ) ;
rank: 35
score: 98.98638044084821
patch: if ( search CaMeL Length <= search CaMeL Chars . length ) {
rank: 35
score: 98.96171569824219
patch: return true ; } j ++ ;
rank: 35
score: 98.95863342285156
patch: return true ; } } * /
rank: 35
score: 98.90545654296875
patch: return null ; return true ;
rank: 35
score: 98.89082166883681
patch: return false ; } else return false ;
rank: 35
score: 98.73627580915179
patch: m = true ; break ;
rank: 35
score: 98.5972900390625
patch: CaMeL += ) ) ; return true ;
rank: 36
score: 99.14401084498355
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Length ) ;
rank: 36
score: 99.11513846261161
patch: return contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 36
score: 98.95703125
patch: return cs CaMeL Length < search CaMeL Chars . length ;
rank: 36
score: 98.95034790039062
patch: return true ; } break ; }
rank: 36
score: 98.88789367675781
patch: return true ; } else return ;
rank: 36
score: 98.88628540039062
patch: CaMeL Range = true ; if return true ;
rank: 36
score: 98.71786499023438
patch: $NUMBER$ . return true ;
rank: 37
score: 99.17849392361111
patch: return is CaMeL Empty ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 37
score: 99.14347330729167
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , ch ) ;
rank: 37
score: 99.11245727539062
patch: return ! search CaMeL Chars [ j ] == ch ;
rank: 37
score: 98.97523600260416
patch: if ( search CaMeL Chars . length <= search CaMeL Chars . length )
rank: 37
score: 98.94635881696429
patch: return true ; } else {
rank: 37
score: 98.88099670410156
patch: return false ; } } if ;
rank: 37
score: 98.87765163845486
patch: CaMeL Error = true ; return true ;
rank: 37
score: 98.7127456665039
patch: . return false ; return true ;
rank: 38
score: 99.17713120404412
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Length ) ;
rank: 38
score: 99.1396484375
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ i ] ) ;
rank: 38
score: 99.11228942871094
patch: return cs . equals ( cs . char CaMeL At ( j ) ) ;
rank: 38
score: 98.87600272042411
patch: return true ; } return ;
rank: 38
score: 98.87447509765624
patch: CaMeL Exception return true ; } return true ;
rank: 38
score: 98.70170084635417
patch: = true ; break ;
rank: 38
score: 98.58216857910156
patch: CaMeL return ) ; return true ;
rank: 39
score: 99.13697509765625
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ) ;
rank: 39
score: 99.10919596354167
patch: return search CaMeL Chars [ j ] . to CaMeL Object ( ) ;
rank: 39
score: 98.9707539876302
patch: if ( search CaMeL Length < search CaMeL Length ) {
rank: 39
score: 98.941650390625
patch: . return true ; break ; } }
rank: 39
score: 98.87224663628473
patch: return true ; return this . true ;
rank: 39
score: 98.85834503173828
patch: return ; } } return false ;
rank: 39
score: 98.69354248046875
patch: = true ? true : true ;
rank: 39
score: 98.58071899414062
patch: ( true ) ; return true ;
rank: 40
score: 99.17316228693181
patch: return contains CaMeL Any ( search CaMeL Chars ) ;
rank: 40
score: 98.9688232421875
patch: return return true ;
rank: 40
score: 98.93913269042969
patch: return is CaMeL Empty ( ; }
rank: 40
score: 98.86741638183594
patch: CaMeL List . ; return true ;
rank: 40
score: 98.85833740234375
patch: CaMeL Thread . return ( true ) ;
rank: 40
score: 98.58032989501953
patch: CaMeL List ( ; return true ;
rank: 41
score: 99.136572265625
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , ch ) ;
rank: 41
score: 98.93596649169922
patch: Plane return false ; return false ;
rank: 41
score: 98.9314453125
patch: return is CaMeL Empty ( ch , true ;
rank: 41
score: 98.86574881417411
patch: CaMeL Range true return true ;
rank: 41
score: 98.57611846923828
patch: return 0 ; return - 1 ;
rank: 42
score: 99.1703872680664
patch: return return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 42
score: 99.1305419921875
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( ) ;
rank: 42
score: 99.1070556640625
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 42
score: 98.96731567382812
patch: return search CaMeL Length < search CaMeL Chars . length ;
rank: 42
score: 98.92903900146484
patch: return true ? false : true ;
rank: 42
score: 98.85330963134766
patch: return true ; } if true ;
rank: 42
score: 98.6866226196289
patch: = true ; break ; } }
rank: 42
score: 98.57400173611111
patch: CaMeL List ( ) ; return $NUMBER$ ;
rank: 43
score: 99.16246032714844
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ) ;
rank: 43
score: 99.1054458618164
patch: return null . equals ( cs . char CaMeL At ( j ) ) ;
rank: 43
score: 98.96623011997768
patch: if ( Array CaMeL Utils . is CaMeL Empty ( cs ) )
rank: 43
score: 98.92707963423295
patch: return Boolean . is CaMeL Empty ( ch ) ;
rank: 43
score: 98.86158243815105
patch: CaMeL Exception = true ;
rank: 43
score: 98.85178048270089
patch: return true ; } * /
rank: 43
score: 98.68092346191406
patch: p = true ; return true ;
rank: 43
score: 98.57350158691406
patch: return return ) ; return true ;
rank: 44
score: 99.15943818933823
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , j ) ;
rank: 44
score: 99.12744954427083
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , ch ) ;
rank: 44
score: 99.10321807861328
patch: return cs . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 44
score: 98.96535237630208
patch: if ( search CaMeL Length >= cs CaMeL Length ) {
rank: 44
score: 98.92643907335069
patch: return ! is CaMeL Empty ( ch ;
rank: 44
score: 98.92561170789931
patch: return false ; return false ; } }
rank: 44
score: 98.85567016601563
patch: return this . true ; ; return false ;
rank: 44
score: 98.84918212890625
patch: return true ; break ;
rank: 44
score: 98.67782592773438
patch: if ( true ) break ; }
rank: 44
score: 98.57337103949652
patch: return ; = true ; return true ;
rank: 45
score: 99.15663548519737
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , cs CaMeL Length ) ;
rank: 45
score: 99.1253303079044
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( search CaMeL Chars ) ;
rank: 45
score: 98.9652850811298
patch: if ( ! cs . is CaMeL Empty ( ) ) {
rank: 45
score: 98.85435791015625
patch: return this . true ; ; return true ;
rank: 45
score: 98.8475830078125
patch: return is CaMeL Empty ( true , true ;
rank: 45
score: 98.56696319580078
patch: return 0 ; ; return false ;
rank: 46
score: 99.15151742788461
patch: return contains CaMeL Any ( ch , search CaMeL Chars ) ;
rank: 46
score: 99.1004638671875
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( cs ) ;
rank: 46
score: 98.96127115885416
patch: return Char CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 46
score: 98.91926713423295
patch: return search CaMeL Chars [ j ] >= ch ;
rank: 46
score: 98.91866048177083
patch: t = true ; return true ; }
rank: 46
score: 98.85243733723958
patch: CaMeL Range return true ;
rank: 46
score: 98.84745279947917
patch: CaMeL State . return ( true ) ;
rank: 46
score: 98.66883196149554
patch: p = true ; break ;
rank: 46
score: 98.56607818603516
patch: return return true ; return true ;
rank: 47
score: 99.1219482421875
patch: return search CaMeL Chars [ j ] == ch . to CaMeL String ( ) ;
rank: 47
score: 99.0972900390625
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j ) ;
rank: 47
score: 98.91755981445313
patch: Plane return false ;
rank: 47
score: 98.916162109375
patch: . return true ; } } return true ;
rank: 47
score: 98.85013834635417
patch: return false ; return this . true ;
rank: 47
score: 98.84639739990234
patch: return is CaMeL Empty ( true ;
rank: 47
score: 98.56502278645833
patch: return ; = true ;
rank: 48
score: 99.14213053385417
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars ,
rank: 48
score: 99.12162057976974
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( search CaMeL Chars , cs ) ;
rank: 48
score: 99.09302696814903
patch: return Array CaMeL Utils . contains ( cs , ch ) ;
rank: 48
score: 98.9124755859375
patch: return is CaMeL Empty ( cs ) ; }
rank: 48
score: 98.84879150390626
patch: CaMeL Exception return true ; } return false ;
rank: 48
score: 98.84593200683594
patch: return false ; } else if ;
rank: 48
score: 98.66453334263393
patch: return true ; } break ;
rank: 48
score: 98.56379699707031
patch: return false ; return - true ;
rank: 49
score: 99.13974609375
patch: return contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 49
score: 99.0919189453125
patch: return ch . equals ( search CaMeL Chars [ j ] ) ;
rank: 49
score: 98.95212624289773
patch: return ch . is CaMeL Empty ( ) ; }
rank: 49
score: 98.91195678710938
patch: Plane return false ; return true ;
rank: 49
score: 98.84832085503473
patch: CaMeL Exception return true ; return true ;
rank: 49
score: 98.55409240722656
patch: return != ) ; return true ;
rank: 50
score: 99.1371078491211
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 50
score: 99.11234323601974
patch: return Array CaMeL Utils . Array CaMeL Utils . contains CaMeL Any ( cs , ch ) ;
rank: 50
score: 98.94862874348958
patch: if ( ch . is CaMeL Empty ( ) ) {
rank: 50
score: 98.90904651988636
patch: return search CaMeL Chars [ j ] == false ;
rank: 50
score: 98.90865478515624
patch: return true ; } this . return true ;
rank: 50
score: 98.84701199001736
patch: CaMeL Exception return true ; return false ;
rank: 50
score: 98.8420181274414
patch: return true ; } } else {
rank: 50
score: 98.66089630126953
patch: parser = true ; return true ;
rank: 50
score: 98.55032009548611
patch: CaMeL ch = true ; return false ;
rank: 51
score: 99.11173930921052
patch: return Array CaMeL Utils . Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 51
score: 98.9466083233173
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 51
score: 98.90498490767045
patch: return is CaMeL Empty ( cs CaMeL Length ) ;
rank: 51
score: 98.84410264756944
patch: return this . true ; return false ;
rank: 51
score: 98.83429565429688
patch: return is CaMeL True ( true ) ; }
rank: 51
score: 98.54926409040179
patch: return false ; return $NUMBER$ ;
rank: 52
score: 99.0912726907169
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 52
score: 98.9439697265625
patch: if ( search CaMeL Chars . length != search CaMeL Chars . length )
rank: 52
score: 98.83919270833333
patch: CaMeL Number return true ;
rank: 52
score: 98.83076695033482
patch: return false ; break ; }
rank: 52
score: 98.65485382080078
patch: t = true ; break ; }
rank: 52
score: 98.54564751519098
patch: CaMeL sum = true ; return false ;
rank: 53
score: 99.13449276194854
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 53
score: 99.10917394301471
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( ch ) ;
rank: 53
score: 99.0889663696289
patch: return contains CaMeL Any ( cs . char CaMeL At ( j ) ) ;
rank: 53
score: 98.94369506835938
patch: int search CaMeL Length = search CaMeL Chars . length ;
rank: 53
score: 98.9020663174716
patch: return search CaMeL Chars [ j ] == true ;
rank: 53
score: 98.8994140625
patch: c = true ; break ; } }
rank: 53
score: 98.83849419487848
patch: CaMeL Range return true ; return true ;
rank: 53
score: 98.82784016927083
patch: return true ; } if return true ;
rank: 53
score: 98.64399065290179
patch: CaMeL ; return false ; }
rank: 53
score: 98.54560682508681
patch: return false ; return ; = true ;
rank: 54
score: 99.1068359375
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ; }
rank: 54
score: 98.94285074869792
patch: if ( search CaMeL Length <= cs CaMeL Length ) {
rank: 54
score: 98.9020284016927
patch: ( cs . char CaMeL At ( j ) ) ;
rank: 54
score: 98.89845106336806
patch: m = true ; return true ; }
rank: 54
score: 98.8355712890625
patch: return true ; ; ;
rank: 54
score: 98.82196723090277
patch: return is CaMeL Empty ; return true ;
rank: 54
score: 98.64208112444196
patch: CaMeL Builder . return true ;
rank: 54
score: 98.54371643066406
patch: return false ; ; if true ;
rank: 55
score: 99.13125430836396
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs CaMeL Length ) ;
rank: 55
score: 99.08484604779412
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) ;
rank: 55
score: 98.94248744419643
patch: if ( search CaMeL Chars . length == cs CaMeL Length ) {
rank: 55
score: 98.9011739095052
patch: return super . contains CaMeL Any ( cs ) ; }
rank: 55
score: 98.83511013454861
patch: CaMeL Exception = true ; return null ;
rank: 55
score: 98.82185194227431
patch: return true ; return false ; } }
rank: 55
score: 98.54334368024554
patch: return 0 ; return $NUMBER$ ;
rank: 56
score: 99.13032801011029
patch: return ( search CaMeL Chars . char CaMeL At ( j ) == ch ) ;
rank: 56
score: 99.10343852796052
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( ch , ch ) ;
rank: 56
score: 99.08404947916667
patch: return super . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 56
score: 98.94147198016827
patch: return Array CaMeL Utils . is CaMeL Empty ( true ) ;
rank: 56
score: 98.90086873372395
patch: return search CaMeL Chars [ i ] == ch ; }
rank: 56
score: 98.83506944444444
patch: CaMeL Number return true ; return true ;
rank: 56
score: 98.54263741629464
patch: return true ; return 1 ;
rank: 57
score: 99.12882486979167
patch: return contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 57
score: 99.09739925986842
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars , ch ) ;
rank: 57
score: 99.08152940538194
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 57
score: 98.94044846754808
patch: return Array CaMeL Utils . contains ( search CaMeL Chars ) ;
rank: 57
score: 98.900634765625
patch: Plane return true ; return false ;
rank: 57
score: 98.89258490668402
patch: return ! is CaMeL Empty ( ; }
rank: 57
score: 98.82747802734374
patch: CaMeL Number = true ; if return true ;
rank: 57
score: 98.81695556640625
patch: return false ; } if return false ;
rank: 57
score: 98.5418472290039
patch: CaMeL = true ; return true ;
rank: 58
score: 99.12859143708882
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , char CaMeL At ) ;
rank: 58
score: 99.09464263916016
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , ) ;
rank: 58
score: 98.93931361607143
patch: if ( search CaMeL Chars . length >= search CaMeL Length ) {
rank: 58
score: 98.89594116210938
patch: search CaMeL Chars [ i ] = ch ;
rank: 58
score: 98.81685384114583
patch: CaMeL Exception = false ; return true ;
rank: 58
score: 98.81637234157986
patch: return is CaMeL Empty ( return ) ;
rank: 58
score: 98.53960309709821
patch: CaMeL List ( true ) ;
rank: 59
score: 99.1266228170956
patch: return search CaMeL Chars . get ( ch ) . is CaMeL Empty ( ) ;
rank: 59
score: 99.0946044921875
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( cs , ch ) ;
rank: 59
score: 98.93495396205357
patch: if ( search CaMeL Chars . length >= cs CaMeL Length ) {
rank: 59
score: 98.81644897460937
patch: CaMeL Exception return true ; if return true ;
rank: 59
score: 98.8138427734375
patch: return ; } } return true ;
rank: 59
score: 98.62879943847656
patch: CaMeL ; if ( true ) {
rank: 59
score: 98.53864881727431
patch: CaMeL = ) ) ; return true ;
rank: 60
score: 99.12623009314903
patch: return search CaMeL Chars [ cs CaMeL Length ] != ch ;
rank: 60
score: 99.09414672851562
patch: return ch . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 60
score: 98.88944498697917
patch: return false ; return true ; } }
rank: 60
score: 98.88320583767361
patch: . return true ; } return true ;
rank: 60
score: 98.81515163845486
patch: CaMeL Number return true ; return false ;
rank: 60
score: 98.81342909071181
patch: return true ; } else return true ;
rank: 60
score: 98.62500871930804
patch: $NUMBER$ . return true ; }
rank: 60
score: 98.53311157226562
patch: return ! ) ; return true ;
rank: 61
score: 99.09309692382813
patch: return true . is CaMeL Empty ( ) ;
rank: 61
score: 99.07753499348958
patch: return search CaMeL Chars [ j ] . == ch ;
rank: 61
score: 98.9286639873798
patch: if ( search CaMeL Length >= search CaMeL Chars . length )
rank: 61
score: 98.888330078125
patch: Plane return true ;
rank: 61
score: 98.88090209960937
patch: return true ; } } if ( true )
rank: 61
score: 98.81340196397569
patch: return null ; } } return false ;
rank: 61
score: 98.81210666232639
patch: CaMeL Error = true ; return false ;
rank: 61
score: 98.62464141845703
patch: CaMeL return true ; break ; }
rank: 61
score: 98.53266059027777
patch: CaMeL List ( ) . return false ;
rank: 62
score: 98.92503865559895
patch: p = cs . char CaMeL At ( i ) ;
rank: 62
score: 98.88336181640625
patch: result = search CaMeL Chars [ j ] ;
rank: 62
score: 98.880859375
patch: return true ? true : false ;
rank: 62
score: 98.80941772460938
patch: return null ; return true ; ;
rank: 62
score: 98.62349700927734
patch: . is CaMeL Empty = true ;
rank: 63
score: 99.0735092163086
patch: return search CaMeL Chars [ j ] . search CaMeL Chars [ j ] ;
rank: 63
score: 98.9243896484375
patch: if ( Array CaMeL Utils . is CaMeL Empty ( ch ) ) {
rank: 63
score: 98.88219105113636
patch: return search CaMeL Chars [ j ] == 0 ;
rank: 63
score: 98.8807861328125
patch: return is CaMeL Empty ( ) ; } }
rank: 63
score: 98.80363246372768
patch: return null ; return null ;
rank: 63
score: 98.62223815917969
patch: CaMeL true = true ; break ;
rank: 63
score: 98.52623155381944
patch: CaMeL List ( true ) ; true ;
rank: 64
score: 99.1224853515625
patch: return cs . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 64
score: 99.0856869346217
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( ch , cs ) ;
rank: 64
score: 99.07334681919643
patch: return cs . equals ( search CaMeL Chars [ j ] ) ;
rank: 64
score: 98.92256303267045
patch: if ( search CaMeL Length < cs CaMeL Length )
rank: 64
score: 98.88188171386719
patch: Plane return true ; return true ;
rank: 64
score: 98.88040771484376
patch: return true ; this . return false ; }
rank: 64
score: 98.8030517578125
patch: return is CaMeL Empty return true ; } }
rank: 64
score: 98.80044555664062
patch: CaMeL List . iterator return true ;
rank: 64
score: 98.61982727050781
patch: . return false ; break ; }
rank: 64
score: 98.52588653564453
patch: CaMeL ( ) ; return true ;
rank: 65
score: 99.12162057976974
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length ) ;
rank: 65
score: 99.0848452919408
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars . next ( ) ) ;
rank: 65
score: 98.92072405133929
patch: return ( cs . to CaMeL String ( ) == ch ) ;
rank: 65
score: 98.8797607421875
patch: return true true ; }
rank: 65
score: 98.79979705810547
patch: CaMeL List . true return true ;
rank: 65
score: 98.79961547851562
patch: return is CaMeL Empty ( true ) ; ;
rank: 65
score: 98.52544487847223
patch: CaMeL List ( true ; return true ;
rank: 66
score: 99.08378462357955
patch: return search CaMeL Chars [ j ] < ch ;
rank: 66
score: 99.07203674316406
patch: return search CaMeL Chars [ j ] == search CaMeL Chars [ j ] ;
rank: 66
score: 98.9188565340909
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 66
score: 98.88058035714286
patch: return return false ; } }
rank: 66
score: 98.87695990668402
patch: p = true ; break ; } }
rank: 66
score: 98.79755401611328
patch: return true ; return null ; }
rank: 66
score: 98.61282784598214
patch: CaMeL return ( true ) ;
rank: 66
score: 98.521240234375
patch: CaMeL ; = true ; return true ;
rank: 67
score: 99.08307495117188
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 67
score: 99.0708740234375
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) ) ;
rank: 67
score: 98.91796061197917
patch: return Array CaMeL Utils . search CaMeL Chars ( search CaMeL Chars ) ;
rank: 67
score: 98.88057084517045
patch: return Boolean . is CaMeL Empty ( cs ) ;
rank: 67
score: 98.87550184461806
patch: return true ; ; } return true ;
rank: 67
score: 98.79744873046874
patch: CaMeL List . return ( true true ) ;
rank: 67
score: 98.61215209960938
patch: . * / return true ; }
rank: 67
score: 98.51931423611111
patch: CaMeL mid = true ; return true ;
rank: 68
score: 99.11829898231908
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length , search CaMeL Chars ) ;
rank: 68
score: 99.07048882378473
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 68
score: 98.91700157752403
patch: if ( search CaMeL Length <= search CaMeL Chars . length )
rank: 68
score: 98.8758544921875
patch: return return search CaMeL Chars [ j ] == ch ;
rank: 68
score: 98.87549700055804
patch: c = true ; break ;
rank: 68
score: 98.79701063368056
patch: CaMeL List return true ; return true ;
rank: 68
score: 98.79444715711806
patch: return is CaMeL Empty ; return false ;
rank: 68
score: 98.61094665527344
patch: return true ; j ++ ; }
rank: 68
score: 98.51846749441964
patch: return 0 ; return null ;
rank: 69
score: 99.11825741038604
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( search CaMeL Chars ) ;
rank: 69
score: 99.06834309895834
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , ch ) ;
rank: 69
score: 98.87570190429688
patch: search CaMeL Chars [ j ] = search CaMeL Length ;
rank: 69
score: 98.7923583984375
patch: CaMeL Range . return ( true ) ;
rank: 69
score: 98.79099818638393
patch: return return true ; } }
rank: 70
score: 99.11544036865234
patch: return search CaMeL Chars . equals ( search CaMeL Chars [ j ] ) ;
rank: 70
score: 99.07742513020834
patch: return Array CaMeL Utils . contains ( cs , search CaMeL Chars ) ;
rank: 70
score: 99.06456580528847
patch: return cs . char CaMeL At ( j ) == ch ;
rank: 70
score: 98.91237386067708
patch: if ( ! cs . is CaMeL Empty ( ) )
rank: 70
score: 98.8718770345052
patch: return ( ! search CaMeL Chars [ j ] ) ;
rank: 70
score: 98.86642456054688
patch: return ! is CaMeL Empty ( ch ; }
rank: 70
score: 98.79085964626736
patch: CaMeL Range return true ; return false ;
rank: 70
score: 98.61011759440105
patch: CaMeL ; break ; }
rank: 70
score: 98.51634385850694
patch: CaMeL List ( ; . return true ;
rank: 71
score: 99.11306583180146
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , i ) ;
rank: 71
score: 99.0767489346591
patch: return ch . contains CaMeL Any ( ch ) ;
rank: 71
score: 99.06455775669643
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 71
score: 98.91080147879464
patch: return Array CaMeL Utils . is CaMeL Empty ( cs ) ; }
rank: 71
score: 98.8642349243164
patch: return is CaMeL Empty ( ch ;
rank: 71
score: 98.79085083007813
patch: CaMeL List . return ( return true ) ;
rank: 71
score: 98.78933376736111
patch: CaMeL Builder . return ( true ) ;
rank: 71
score: 98.60859680175781
patch: $NUMBER$ * / return true ; }
rank: 71
score: 98.51631164550781
patch: CaMeL += true ; return true ;
rank: 72
score: 99.06407581676136
patch: return search CaMeL Chars [ j ] == cs ;
rank: 72
score: 98.9080078125
patch: if ( search CaMeL Length >= 0 ) {
rank: 72
score: 98.7896240234375
patch: CaMeL Exception = true ; if return false ;
rank: 72
score: 98.78772735595703
patch: return ; * * * * /
rank: 72
score: 98.60688018798828
patch: return true ; if ( true )
rank: 72
score: 98.51575469970703
patch: CaMeL += ) ; return true ;
rank: 73
score: 99.07639447380515
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Length ) ;
rank: 73
score: 99.0586649576823
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 73
score: 98.90723528180804
patch: byte CaMeL Value = cs . char CaMeL At ( i ) ;
rank: 73
score: 98.78941345214844
patch: return true ; ; return null ;
rank: 73
score: 98.78610229492188
patch: return true ; } } if return false ;
rank: 73
score: 98.6065673828125
patch: $NUMBER$ * / return true ;
rank: 73
score: 98.51531982421875
patch: return 0 ; ; if true ;
rank: 74
score: 99.075830078125
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At (
rank: 74
score: 99.0579325358073
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) , ch ) ;
rank: 74
score: 98.90388706752232
patch: return ( cs CaMeL Length >= search CaMeL Chars . length ) ;
rank: 74
score: 98.85808563232422
patch: p = ; return true ; }
rank: 74
score: 98.78824462890626
patch: return true ; ; ; if return false ;
rank: 74
score: 98.78489685058594
patch: return true ; else return false ;
rank: 74
score: 98.51094818115234
patch: return true ; return - true ;
rank: 75
score: 99.05780319940476
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 75
score: 98.90187766335227
patch: return ! cs . is CaMeL Empty ( ) ;
rank: 75
score: 98.85483224051339
patch: return is CaMeL Empty ( ;
rank: 75
score: 98.78748779296875
patch: return true ; return null ; return true ;
rank: 75
score: 98.78441772460937
patch: return return is CaMeL True ( true ) ;
rank: 75
score: 98.59602355957031
patch: . return true ; return false ;
rank: 75
score: 98.50877549913194
patch: CaMeL List ( ; { return true ;
rank: 76
score: 99.07484130859375
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ cs CaMeL Length ] ) ;
rank: 76
score: 99.05704752604167
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Empty ( ) ;
rank: 76
score: 98.9012451171875
patch: if ( cs CaMeL Length >= search CaMeL Chars . length ) {
rank: 76
score: 98.78720431857639
patch: CaMeL Boolean = true ; return true ;
rank: 76
score: 98.78327026367188
patch: return is CaMeL True return false ; } }
rank: 76
score: 98.59372384207589
patch: * / return true ; }
rank: 76
score: 98.50810895647321
patch: return is ( true ) ;
rank: 77
score: 99.1059326171875
patch: return Array CaMeL Utils . is CaMeL True ( search CaMeL Chars ) ;
rank: 77
score: 99.07432556152344
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars 1 ) ;
rank: 77
score: 99.05581665039062
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [ j ] ) ;
rank: 77
score: 98.90017264229911
patch: if ( search CaMeL Chars . length < cs CaMeL Length ) {
rank: 77
score: 98.85758666992187
patch: return 0 . [ j ] == ch ;
rank: 77
score: 98.85238647460938
patch: CaMeL true = true ; return true ; }
rank: 77
score: 98.7862060546875
patch: return true ; return true ; return false ;
rank: 77
score: 98.78077528211806
patch: return is CaMeL True return false ; }
rank: 77
score: 98.5897445678711
patch: = true ; return false ; }
rank: 77
score: 98.50424533420139
patch: CaMeL do . true ; return true ;
rank: 78
score: 99.05487060546875
patch: return cs . contains ( cs . char CaMeL At ( j ) ) ;
rank: 78
score: 98.89910888671875
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 78
score: 98.85186212713069
patch: { ch = search CaMeL Chars [ j ] ;
rank: 78
score: 98.78542751736111
patch: return true ; ; ; return true ;
rank: 78
score: 98.77970377604167
patch: return is CaMeL Empty return true ; }
rank: 78
score: 98.50407579210069
patch: return 0 ; return ; = true ;
rank: 79
score: 99.10482083834134
patch: return search CaMeL Chars [ search CaMeL Length ] == ch ;
rank: 79
score: 98.89905802408855
patch: if ( search CaMeL Chars . length > 0 ) {
rank: 79
score: 98.84531656901042
patch: return true ? true : true ; }
rank: 79
score: 98.7850830078125
patch: return true ; return true ; return true ;
rank: 79
score: 98.778564453125
patch: return true ; } } true ;
rank: 79
score: 98.58670043945312
patch: m = true ; return false ;
rank: 80
score: 99.05300903320312
patch: return contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 80
score: 98.89893391927083
patch: if ( search CaMeL Chars . length > search CaMeL Chars . length )
rank: 80
score: 98.84984241832386
patch: return ( is CaMeL Empty ( ch ) ) ;
rank: 80
score: 98.84414672851562
patch: . return is CaMeL Empty ( ch ) ;
rank: 80
score: 98.78480360243056
patch: CaMeL List . return ( true ; {
rank: 80
score: 98.77796020507813
patch: return true ; } else return false ; }
rank: 80
score: 98.50202094184027
patch: CaMeL capacity = true ; return true ;
rank: 81
score: 99.0672671669408
patch: return Array CaMeL Utils . Array CaMeL Utils . contains CaMeL Any ( cs , cs ) ;
rank: 81
score: 99.05195617675781
patch: return ch . contains ( cs . char CaMeL At ( j ) ) ;
rank: 81
score: 98.89860316685268
patch: return ( cs . to CaMeL Char CaMeL Array ( ) ) ;
rank: 81
score: 98.84228515625
patch: t = true ; return true ;
rank: 81
score: 98.78192138671875
patch: CaMeL Number = true ;
rank: 81
score: 98.77684326171875
patch: return true ; } } if return true ;
rank: 81
score: 98.5821762084961
patch: b = true ; break ; }
rank: 81
score: 98.5012435913086
patch: return ; = ; return true ;
rank: 82
score: 99.10344381893383
patch: return search CaMeL Chars [ cs CaMeL Length ] . is CaMeL Empty ( ) ;
rank: 82
score: 99.05169677734375
patch: return Array CaMeL Utils . contains ( search CaMeL Chars [ j ] ) ;
rank: 82
score: 98.89805385044643
patch: if ( search CaMeL Chars . length < search CaMeL Length ) {
rank: 82
score: 98.84111192491319
patch: return is CaMeL Empty ( ) ; }
rank: 82
score: 98.77950032552083
patch: CaMeL Range = true ; return null ;
rank: 82
score: 98.775634765625
patch: return true ; } } if true ;
rank: 82
score: 98.58174133300781
patch: f = true ; return true ;
rank: 82
score: 98.50043487548828
patch: CaMeL |= ) ; return true ;
rank: 83
score: 99.10303548177083
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , true ) ;
rank: 83
score: 99.06147596571181
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs , ) ;
rank: 83
score: 98.89696655273437
patch: if ( search CaMeL Length < 0 ) {
rank: 83
score: 98.84732394748264
patch: return true ; return true ; } }
rank: 83
score: 98.77896118164062
patch: CaMeL Exception = true ; while return true ;
rank: 83
score: 98.77551947699652
patch: return is CaMeL Sealed ( true ) ;
rank: 83
score: 98.57941436767578
patch: return true ; i ++ ; }
rank: 83
score: 98.49751281738281
patch: CaMeL do . ; return true ;
rank: 84
score: 98.8959452311198
patch: if ( j >= search CaMeL Chars . length ) {
rank: 84
score: 98.84726969401042
patch: Plane return search CaMeL Chars [ j ] == ch ;
rank: 84
score: 98.8373031616211
patch: return is CaMeL Empty ( ) ;
rank: 84
score: 98.77454833984375
patch: return is CaMeL Empty return false ; } }
rank: 84
score: 98.76998901367188
patch: return false ; ; ;
rank: 84
score: 98.49681599934895
patch: return ; return true ;
rank: 85
score: 99.10121154785156
patch: return search CaMeL Chars [ search CaMeL Chars . char CaMeL At ( j )
rank: 85
score: 99.04744873046874
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars [ j ] ) ;
rank: 85
score: 98.83720567491319
patch: return contains CaMeL Any ( ch ) ;
rank: 85
score: 98.837109375
patch: return is CaMeL Empty ( return ) ; }
rank: 85
score: 98.77336968315973
patch: return is CaMeL True ( false ) ;
rank: 85
score: 98.7694091796875
patch: CaMeL List return true ;
rank: 85
score: 98.57597133091518
patch: CaMeL ; if ( true )
rank: 85
score: 98.49626922607422
patch: return 0 ; return - true ;
rank: 86
score: 99.09916178385417
patch: return is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 86
score: 99.04719682173295
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs . char CaMeL At ( j ) ) ;
rank: 86
score: 98.89393310546875
patch: return is . is CaMeL Empty ( ) ;
rank: 86
score: 98.83586774553571
patch: return ! true ; } }
rank: 86
score: 98.83414459228516
patch: return false ; } i ++ ;
rank: 86
score: 98.77294243706598
patch: return is CaMeL Empty return false ; }
rank: 86
score: 98.76835327148437
patch: return false ; return true ; return true ;
rank: 86
score: 98.4955342610677
patch: return false ; true ;
rank: 87
score: 99.05931181066177
patch: return Char CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 87
score: 99.04598563058036
patch: return null . equals ( search CaMeL Chars [ j ] ) ;
rank: 87
score: 98.89319864908855
patch: if ( search CaMeL Length >= search CaMeL Length ) {
rank: 87
score: 98.82973225911458
patch: return Boolean . is CaMeL Empty ( ch ) ; }
rank: 87
score: 98.77235412597656
patch: return false ; break ; } }
rank: 87
score: 98.76793823242187
patch: CaMeL List . return true ; return true ;
rank: 87
score: 98.57180786132812
patch: item = true ; break ; }
rank: 87
score: 98.495361328125
patch: return - 1 ; return true ;
rank: 88
score: 99.05915383731617
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( cs , cs ) ;
rank: 88
score: 98.88975016276042
patch: return ( cs . is CaMeL Empty ( ) ) ;
rank: 88
score: 98.8322525024414
patch: return ! is CaMeL Empty ( ;
rank: 88
score: 98.8293124112216
patch: return ( is CaMeL Empty ( cs ) ) ;
rank: 88
score: 98.77178955078125
patch: return false ; } else return ;
rank: 88
score: 98.570556640625
patch: = true ;
rank: 88
score: 98.49502563476562
patch: return true ; ; if true ;
rank: 89
score: 99.0946377840909
patch: return contains CaMeL Any ( cs , cs ) ;
rank: 89
score: 99.04315185546875
patch: return contains CaMeL Any ( cs , search CaMeL Chars [ j ] ) ;
rank: 89
score: 98.88967459542411
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ,
rank: 89
score: 98.82955932617188
patch: c = ; return true ; }
rank: 89
score: 98.82806396484375
patch: contains [ j ] = true ;
rank: 89
score: 98.76847839355469
patch: return true ; if return false ;
rank: 89
score: 98.76735142299107
patch: CaMeL List true return true ;
rank: 89
score: 98.5696792602539
patch: def = true ; return true ;
rank: 89
score: 98.49341498480902
patch: return true ; return ; = true ;
rank: 90
score: 99.05784847861842
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars . length ) ;
rank: 90
score: 98.88919067382812
patch: if ( search CaMeL Chars . length == 0 ) {
rank: 90
score: 98.82731323242187
patch: search CaMeL Chars [ j ] = cs ;
rank: 90
score: 98.82113647460938
patch: return true ; } } break ;
rank: 90
score: 98.765576171875
patch: CaMeL Exception = true ; return true ; }
rank: 90
score: 98.56752232142857
patch: . return true ; break ;
rank: 90
score: 98.48942057291667
patch: CaMeL filter = true ; return true ;
rank: 91
score: 99.0413309733073
patch: return search CaMeL Chars [ j ] . length ++ ;
rank: 91
score: 98.88625662667411
patch: if ( search CaMeL Chars . length <= cs CaMeL Length ) {
rank: 91
score: 98.82496134440105
patch: cs = cs . char CaMeL At ( j ) ;
rank: 91
score: 98.82046847873264
patch: return true ; } } if ( ;
rank: 91
score: 98.7678451538086
patch: return true ; } * * /
rank: 91
score: 98.76544189453125
patch: CaMeL Range = return true ; return true ;
rank: 91
score: 98.48821149553571
patch: return true ; return $NUMBER$ ;
rank: 92
score: 98.88617815290179
patch: if ( Array CaMeL Utils . is CaMeL Empty ( ch ) )
rank: 92
score: 98.81722005208333
patch: s = true ; return true ; }
rank: 92
score: 98.76673583984375
patch: return true ; } else if return false ;
rank: 92
score: 98.76482391357422
patch: CaMeL List . return ( true ;
rank: 92
score: 98.56084442138672
patch: = new ; return true ; }
rank: 92
score: 98.48709869384766
patch: return == ) ; return true ;
rank: 93
score: 98.88575090680804
patch: return ( cs CaMeL Length < search CaMeL Chars . length ) ;
rank: 93
score: 98.82185502485795
patch: return is CaMeL Empty ( [ j ] ) ;
rank: 93
score: 98.81609497070312
patch: p = true ; return true ; } }
rank: 93
score: 98.7638916015625
patch: return is CaMeL Empty ; return true ; }
rank: 93
score: 98.76277160644531
patch: return new is ( true ) ;
rank: 93
score: 98.56016845703125
patch: m = true ;
rank: 93
score: 98.48686387803819
patch: CaMeL size = true ; return true ;
rank: 94
score: 99.08869171142578
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ,
rank: 94
score: 99.0559814453125
patch: return search CaMeL Chars [ j ] == search CaMeL Chars . length ;
rank: 94
score: 98.88558959960938
patch: return ( cs . to CaMeL String ( ) ) ;
rank: 94
score: 98.82131958007812
patch: return is CaMeL Empty ( cs CaMeL Length ) ; }
rank: 94
score: 98.81599731445313
patch: return true ; } else return true ; }
rank: 94
score: 98.76352945963542
patch: return return true ; } return false ;
rank: 94
score: 98.76129150390625
patch: return false ; return true ; return false ;
rank: 94
score: 98.55964660644531
patch: s = true ; return true ;
rank: 94
score: 98.4862060546875
patch: return 0 ; ;
rank: 95
score: 99.0352274576823
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 95
score: 98.81943581321023
patch: return search CaMeL Chars [ j ] + ch ;
rank: 95
score: 98.81531372070313
patch: return true ; } else if ( true )
rank: 95
score: 98.76346435546876
patch: CaMeL Builder . return true ; return false ;
rank: 95
score: 98.76038953993056
patch: CaMeL Runtime . return ( true ) ;
rank: 95
score: 98.5595194498698
patch: * / return true ;
rank: 95
score: 98.48548719618056
patch: CaMeL List ( ) . return null ;
rank: 96
score: 99.05179636101974
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , cs CaMeL Length ) ;
rank: 96
score: 98.88484700520833
patch: if ( search CaMeL Length <= search CaMeL Length ) {
rank: 96
score: 98.81867065429688
patch: search CaMeL Chars [ i ] = true ;
rank: 96
score: 98.8131103515625
patch: . return true ; } } return false ;
rank: 96
score: 98.75922987196181
patch: CaMeL List = true ; return true ;
rank: 96
score: 98.55931745256696
patch: . * / return true ;
rank: 96
score: 98.4850082397461
patch: return return 1 ; return true ;
rank: 97
score: 99.05105251736111
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs ) ; }
rank: 97
score: 98.88404947916666
patch: if ( ! Array CaMeL Utils . is CaMeL Empty ( cs ) )
rank: 97
score: 98.81463068181819
patch: return search CaMeL Chars [ j ] == value ;
rank: 97
score: 98.81241455078126
patch: return is CaMeL Empty ? true : true ;
rank: 97
score: 98.75996704101563
patch: return is CaMeL True return true ; } }
rank: 97
score: 98.75750732421875
patch: CaMeL Exception return true ; ;
rank: 97
score: 98.55746459960938
patch: def = true ; break ; }
rank: 97
score: 98.48497856987848
patch: CaMeL do . return ( true ) ;
rank: 98
score: 99.0813052528783
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars , ch ) ;
rank: 98
score: 99.0505730124081
patch: return Array CaMeL Utils . Array CaMeL Utils . contains CaMeL Any ( cs ) ;
rank: 98
score: 98.88283865792411
patch: if ( search CaMeL Chars . length > cs CaMeL Length ) {
rank: 98
score: 98.81187947591145
patch: return false ; cs CaMeL Length = cs CaMeL Length ;
rank: 98
score: 98.758837890625
patch: return is CaMeL Empty ; return false ; }
rank: 98
score: 98.75728759765624
patch: CaMeL Exception = true ; } return true ;
rank: 98
score: 98.55599975585938
patch: scanner = true ; return true ;
rank: 98
score: 98.48180389404297
patch: return ; = true ; true ;
rank: 99
score: 99.08082580566406
patch: return Boolean . is CaMeL Empty ( search CaMeL Chars [ j ] ) ;
rank: 99
score: 99.05040218955592
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . length ) ;
rank: 99
score: 99.0305508700284
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs . char CaMeL At ( j ) ) ;
rank: 99
score: 98.88280378069196
patch: if ( search CaMeL Length == search CaMeL Chars . length ) {
rank: 99
score: 98.81168823242187
patch: return false ; } } } return false ;
rank: 99
score: 98.81168619791667
patch: return true ; } return false ; }
rank: 99
score: 98.75838470458984
patch: return ; ; } return false ;
rank: 99
score: 98.75706263950893
patch: CaMeL Exception return true ; }
rank: 99
score: 98.55599212646484
patch: fg = true ; return true ;
rank: 99
score: 98.47969055175781
patch: return ~ true ; return true ;
rank: 100
score: 99.08077298677884
patch: return cs . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 100
score: 98.88192313058036
patch: if ( search CaMeL Chars . length <= search CaMeL Length ) {
rank: 100
score: 98.80327606201172
patch: return true ; } i ++ ;
rank: 100
score: 98.75783865792411
patch: return true ; } if ;
rank: 100
score: 98.75571695963542
patch: return this . true ;
rank: 100
score: 98.55554962158203
patch: CaMeL return false ; return true ;
rank: 100
score: 98.47732204861111
patch: return false ; return true ; break ;
rank: 101
score: 99.08045305524554
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , ) ;
rank: 101
score: 99.0493408203125
patch: return Char CaMeL Utils . search CaMeL Chars [ j ] == ch ;
rank: 101
score: 98.87996128627232
patch: if ( search CaMeL Length > search CaMeL Chars . length ) {
rank: 101
score: 98.756591796875
patch: return ; return false ;
rank: 101
score: 98.7556396484375
patch: return false ; ; ; if return false ;
rank: 101
score: 98.55120849609375
patch: CaMeL ; * / return true ;
rank: 101
score: 98.47621372767857
patch: CaMeL do . return true ;
rank: 102
score: 99.07968374399039
patch: return search CaMeL Chars [ j ] == search CaMeL Length ;
rank: 102
score: 99.02896728515626
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] , ch ) ;
rank: 102
score: 98.8789532001202
patch: return ( ! cs . is CaMeL Empty ( ) ) ;
rank: 102
score: 98.80477469308036
patch: return ( true ) ; }
rank: 102
score: 98.80140380859375
patch: return cs CaMeL Length < cs CaMeL Length ;
rank: 102
score: 98.75554063585069
patch: return true ; } catch return false ;
rank: 102
score: 98.75383649553571
patch: CaMeL Range true return false ;
rank: 102
score: 98.5508041381836
patch: env = true ; return true ;
rank: 102
score: 98.47462293836806
patch: return 0 ; return true ; break ;
rank: 103
score: 99.0447933799342
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs , true ) ;
rank: 103
score: 98.87641252790179
patch: return ( search CaMeL Length < search CaMeL Chars . length ) ;
rank: 103
score: 98.80474853515625
patch: return is CaMeL Empty ( ch , ; }
rank: 103
score: 98.8012939453125
patch: return System . [ j ] == ch ;
rank: 103
score: 98.75496673583984
patch: return is true ; return false ;
rank: 103
score: 98.75338406032986
patch: return true ; ; ; return false ;
rank: 103
score: 98.5506591796875
patch: CaMeL ch = true ; break ;
rank: 103
score: 98.47280544704861
patch: CaMeL += ( true ; return true ;
rank: 104
score: 99.07761637369792
patch: return search CaMeL Length - search CaMeL Chars . length ;
rank: 104
score: 99.04476125616776
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( cs , search CaMeL Chars ) ;
rank: 104
score: 99.0275545987216
patch: return search CaMeL Chars [ j ] , ch ;
rank: 104
score: 98.8761874112216
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 104
score: 98.80074055989583
patch: ( search CaMeL Chars [ j ] , ch ) ;
rank: 104
score: 98.75255330403645
patch: return false ; } else
rank: 104
score: 98.751806640625
patch: return true ; return false ; return true ;
rank: 104
score: 98.54934692382812
patch: CaMeL ; return false ;
rank: 104
score: 98.47026824951172
patch: return 0 ; ; return 0 ;
rank: 105
score: 99.04474283854167
patch: return search CaMeL Chars [ i ] . is CaMeL Empty ( ) ;
rank: 105
score: 99.02702192826705
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , ch ) ;
rank: 105
score: 98.87581380208333
patch: return ( cs . search CaMeL Chars [ j ] == ch ) ;
rank: 105
score: 98.79974920099431
patch: return search CaMeL Chars [ j ] == 1 ;
rank: 105
score: 98.75031195746527
patch: return is CaMeL Supported ( true ) ;
rank: 105
score: 98.74957275390625
patch: CaMeL Null ( ; return true ;
rank: 105
score: 98.54554239908855
patch: CaMeL return false ; }
rank: 105
score: 98.46883816189236
patch: CaMeL List ( ; , true ) ;
rank: 106
score: 99.07639447380515
patch: try { return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 106
score: 99.04430213341347
patch: return search CaMeL Chars [ j ] == ch . length ;
rank: 106
score: 99.02686903211806
patch: return Array CaMeL Utils . contains ( search CaMeL Chars [ j ] , ch ) ;
rank: 106
score: 98.874755859375
patch: return search CaMeL Length < cs CaMeL Length ;
rank: 106
score: 98.79853651258681
patch: return ! is CaMeL Empty ( true ;
rank: 106
score: 98.79822887073864
patch: return Boolean . is CaMeL Empty ( true ) ;
rank: 106
score: 98.74991455078126
patch: return true ; } if ; return true ;
rank: 106
score: 98.74952697753906
patch: return null ; return null ; ;
rank: 106
score: 98.54481506347656
patch: = true ? true : false ;
rank: 106
score: 98.46871512276786
patch: return 0 ; return 0 ;
rank: 107
score: 99.04281455592105
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , char CaMeL At ) ;
rank: 107
score: 99.0260009765625
patch: return search CaMeL Chars [ j ] == ch . ch ;
rank: 107
score: 98.79842529296874
patch: return true ; ; } return true ; }
rank: 107
score: 98.79651896158855
patch: return search CaMeL Chars [ j ] == null ; }
rank: 107
score: 98.74932183159723
patch: CaMeL String = true ; return true ;
rank: 107
score: 98.74921264648438
patch: return is CaMeL Empty ( true ; break ;
rank: 107
score: 98.54168701171875
patch: CaMeL Builder . return true ; }
rank: 107
score: 98.46868218315973
patch: return 0 . 0 ; return true ;
rank: 108
score: 99.07563862047698
patch: return Array CaMeL Utils . is CaMeL Empty ( cs CaMeL Length , search CaMeL Chars ) ;
rank: 108
score: 99.04249674479166
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , cs ) ;
rank: 108
score: 99.02579538445724
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ;
rank: 108
score: 98.87376819957386
patch: return ! is . is CaMeL Empty ( ) ;
rank: 108
score: 98.79614935980902
patch: p = true ; return false ; }
rank: 108
score: 98.74895562065973
patch: CaMeL Null return true ; return true ;
rank: 108
score: 98.74833461216518
patch: return false ; } return ;
rank: 108
score: 98.54041399274554
patch: return true ; true ; }
rank: 108
score: 98.46656799316406
patch: CaMeL *= ) ; return true ;
rank: 109
score: 99.07490757533482
patch: return return Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 109
score: 99.03837585449219
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars $NUMBER$ ) ;
rank: 109
score: 99.02337325246711
patch: return search CaMeL Chars [ j ] . equals ( search CaMeL Chars [ j ] ) ;
rank: 109
score: 98.87307303292411
patch: if ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars
rank: 109
score: 98.79570978338069
patch: return super . contains CaMeL Any ( ch ) ;
rank: 109
score: 98.74806431361607
patch: CaMeL Range ; return true ;
rank: 109
score: 98.74462018694196
patch: return ; } return false ;
rank: 109
score: 98.53887939453125
patch: &= true ; return true ; }
rank: 109
score: 98.46645682198661
patch: return false ; return 0 ;
rank: 110
score: 99.07449679904514
patch: return Array CaMeL Utils . is CaMeL True ( search CaMeL Chars [ j ] ) ;
rank: 110
score: 99.03825298108552
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . to CaMeL String ( ) ) ;
rank: 110
score: 99.02283477783203
patch: return search CaMeL Chars [ j ] . char CaMeL At ( i ) ;
rank: 110
score: 98.87196858723958
patch: target = cs . char CaMeL At ( i ) ;
rank: 110
score: 98.7950106534091
patch: || search CaMeL Chars [ j ] = ch ;
rank: 110
score: 98.79473876953125
patch: return true ; continue ; }
rank: 110
score: 98.746337890625
patch: CaMeL Exception = false ; return false ;
rank: 110
score: 98.74224090576172
patch: return true ; } if return ;
rank: 110
score: 98.53868103027344
patch: ret = true ; break ; }
rank: 110
score: 98.46611785888672
patch: CaMeL List ( ; = true ;
rank: 111
score: 99.03736979166666
patch: return search CaMeL Chars [ j ] < search CaMeL Chars . length ;
rank: 111
score: 98.79458618164062
patch: return true ; } } if ( true ;
rank: 111
score: 98.79410807291667
patch: return ch . is CaMeL Empty ( ) ; } }
rank: 111
score: 98.74577026367187
patch: CaMeL Range = true ; if return false ;
rank: 111
score: 98.74158393012152
patch: return is CaMeL Empty ( false ) ;
rank: 111
score: 98.53827776227679
patch: if ( true ) break ;
rank: 111
score: 98.465576171875
patch: return 0 + true ; return true ;
rank: 112
score: 99.07241641773896
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , search CaMeL Length ) ;
rank: 112
score: 98.79402669270833
patch: return ch . equals ( ch ) ;
rank: 112
score: 98.7449951171875
patch: CaMeL Exception ; return true ;
rank: 112
score: 98.74114227294922
patch: return false ; } if true ;
rank: 112
score: 98.53734588623047
patch: . return true ; } break ;
rank: 112
score: 98.46369086371527
patch: CaMeL += ) ] ; return true ;
rank: 113
score: 99.02155010516827
patch: return Array CaMeL Utils . equals ( cs , ch ) ;
rank: 113
score: 98.86869303385417
patch: return cs . is CaMeL Empty ( ) ; } }
rank: 113
score: 98.74394880022321
patch: CaMeL Range true return null ;
rank: 113
score: 98.7408203125
patch: return return true ; } } return false ;
rank: 113
score: 98.53160095214844
patch: s = true ; break ; }
rank: 113
score: 98.46367645263672
patch: CaMeL List ( ) ; true ;
rank: 114
score: 99.03672688802084
patch: return Array CaMeL Utils . search CaMeL Chars [ i ] == ch ;
rank: 114
score: 99.02022976345486
patch: return search CaMeL Chars [ j ] . search CaMeL Chars [ j ] == ch ;
rank: 114
score: 98.8670987215909
patch: if ( search CaMeL Length >= cs CaMeL Length )
rank: 114
score: 98.74260602678571
patch: return null ; return false ;
rank: 114
score: 98.7395248413086
patch: return true ; if return true ;
rank: 114
score: 98.46298556857639
patch: CaMeL += ) ) ; return false ;
rank: 115
score: 99.06922912597656
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ] ) ;
rank: 115
score: 99.01967486213235
patch: return search CaMeL Chars [ j ] . is CaMeL Not CaMeL Empty ( ) ;
rank: 115
score: 98.7912109375
patch: return true ; } this . return false ;
rank: 115
score: 98.78992808948864
patch: return this . search CaMeL Chars [ j ] ;
rank: 115
score: 98.74252319335938
patch: CaMeL Range [ ] return true ;
rank: 115
score: 98.73899841308594
patch: return null ; return false ; }
rank: 115
score: 98.52946472167969
patch: ( true , true , true )
rank: 115
score: 98.45823838975694
patch: return false ; return ; return true ;
rank: 116
score: 99.06890399639423
patch: return contains CaMeL Any ( cs , search CaMeL Length ) ;
rank: 116
score: 99.01957194010417
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , cs . char CaMeL At ( j ) ) ;
rank: 116
score: 98.86614990234375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 116
score: 98.79076470269098
patch: f = true ; return true ; }
rank: 116
score: 98.78681776258681
patch: return cs . equals ( ch ) ;
rank: 116
score: 98.74246978759766
patch: return true ; true return true ;
rank: 116
score: 98.738037109375
patch: return ; ; } } return false ;
rank: 116
score: 98.52819061279297
patch: state = true ; return true ;
rank: 116
score: 98.45547485351562
patch: return false ; ; = true ;
rank: 117
score: 99.06808810763889
patch: return is CaMeL Empty ( search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 117
score: 99.0362548828125
patch: return ch . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 117
score: 99.0192538174716
patch: return contains CaMeL Any ( ch , ch ) ;
rank: 117
score: 98.8660000887784
patch: if ( ch . is CaMeL Empty ( ) )
rank: 117
score: 98.79049072265624
patch: return ! is CaMeL Empty ( ) ; }
rank: 117
score: 98.78505637428977
patch: return search CaMeL Chars [ j ] <= ch ;
rank: 117
score: 98.74003770616319
patch: return false ; ; ; return true ;
rank: 117
score: 98.73721923828126
patch: CaMeL Builder . return true ; return true ;
rank: 117
score: 98.45539008246527
patch: CaMeL return ( true ; return true ;
rank: 118
score: 99.035498046875
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( cs ) ;
rank: 118
score: 98.86551607572116
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars
rank: 118
score: 98.78898315429687
patch: CaMeL ; if ( true ) break ; }
rank: 118
score: 98.77615017361111
patch: Plane return false ; return false ; }
rank: 118
score: 98.74003601074219
patch: CaMeL List . ; return false ;
rank: 118
score: 98.73694458007813
patch: CaMeL Thread . return ( true ) ; }
rank: 118
score: 98.52353341238839
patch: return true ; } true ;
rank: 118
score: 98.45322672526042
patch: return false ; return ; if true ;
rank: 119
score: 99.03418686810662
patch: return true && Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 119
score: 99.0185791015625
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ j ] , ch ) ;
rank: 119
score: 98.7860107421875
patch: return is CaMeL Empty ( i ) ; }
rank: 119
score: 98.77546909877232
patch: return false ; } break ;
rank: 119
score: 98.73992919921875
patch: CaMeL Error return true ;
rank: 119
score: 98.73690185546874
patch: CaMeL State . return ( true ) ; }
rank: 119
score: 98.45171356201172
patch: return ; return ; return true ;
rank: 120
score: 99.06730382582721
patch: return ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 120
score: 99.01802978515624
patch: return is CaMeL Empty ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 120
score: 98.7854736328125
patch: return $STRING$ . equals ( ch ) ; }
rank: 120
score: 98.77278645833333
patch: return search CaMeL Chars [ i ] ;
rank: 120
score: 98.73857421875
patch: return false ; return null ; return true ;
rank: 120
score: 98.51620483398438
patch: return ( true && true ) ;
rank: 120
score: 98.45122612847223
patch: return ; = true ; return false ;
rank: 121
score: 99.01607572115384
patch: return search CaMeL Chars [ j ] . close ( ) ;
rank: 121
score: 98.86267961774554
patch: return Array CaMeL Utils . is CaMeL Empty ( ch ) ; }
rank: 121
score: 98.78534545898438
patch: c = true ; return true ; } }
rank: 121
score: 98.771630859375
patch: return new Char CaMeL Sequence ( ch ) ;
rank: 121
score: 98.73688422309027
patch: CaMeL Number = true ; return null ;
rank: 121
score: 98.73397064208984
patch: return true ; for return false ;
rank: 121
score: 98.51466878255208
patch: . return true ; ;
rank: 121
score: 98.4501724243164
patch: return 0 ; ; = true ;
rank: 122
score: 99.06627699908088
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , char CaMeL At ) ;
rank: 122
score: 99.01568196614583
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) ;
rank: 122
score: 98.86246163504464
patch: if ( search CaMeL Chars . length == search CaMeL Length ) {
rank: 122
score: 98.78515625
patch: return true ? false : true ; }
rank: 122
score: 98.77108154296874
patch: return return is CaMeL Empty ( ch ) ;
rank: 122
score: 98.736865234375
patch: return true ; return null ; return false ;
rank: 122
score: 98.73342895507812
patch: return true ; break ; } ;
rank: 122
score: 98.51229858398438
patch: = false ; return true ; }
rank: 122
score: 98.44841003417969
patch: return false ; ; return 0 ;
rank: 123
score: 99.06520774147727
patch: return is CaMeL Empty ( cs , ch ) ;
rank: 123
score: 99.01555989583333
patch: return search CaMeL Chars [ j ] . length < search CaMeL Length ;
rank: 123
score: 98.78506130642361
patch: b = true ; return true ; }
rank: 123
score: 98.77049255371094
patch: return ( true || false ) ;
rank: 123
score: 98.73670654296875
patch: CaMeL List . return true ; return false ;
rank: 123
score: 98.73328993055556
patch: return false ; } if return true ;
rank: 123
score: 98.51195417131696
patch: return this . true ; }
rank: 123
score: 98.44784206814236
patch: CaMeL += ( ) ; return true ;
rank: 124
score: 99.06402946920956
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , } ) ;
rank: 124
score: 99.02861870659723
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars . char CaMeL At (
rank: 124
score: 98.86179809570312
patch: if ( search CaMeL Length > 0 ) {
rank: 124
score: 98.73300170898438
patch: return return is CaMeL Sealed ( true ) ;
rank: 124
score: 98.51001739501953
patch: parser = true ; break ; }
rank: 124
score: 98.44625854492188
patch: return false ; return - $NUMBER$ ;
rank: 125
score: 99.06355424360795
patch: return search CaMeL Chars . equals ( ch ) ;
rank: 125
score: 98.78221978081598
patch: return $STRING$ . equals ( ch ) ;
rank: 125
score: 98.7696866122159
patch: return search CaMeL Chars [ i ] == $STRING$ ;
rank: 125
score: 98.734326171875
patch: return get CaMeL Instance ( ; return true ;
rank: 125
score: 98.73232693142361
patch: return is CaMeL True return true ; }
rank: 125
score: 98.50833129882812
patch: CaMeL return true ; return false ;
rank: 125
score: 98.44603135850694
patch: CaMeL List ( ; , return ) ;
rank: 126
score: 99.06193033854167
patch: return ch != null . is CaMeL Empty ( ) ;
rank: 126
score: 99.01359419389205
patch: return search CaMeL Chars [ j ] & ch ;
rank: 126
score: 98.85925903320313
patch: if ( search CaMeL Length <= 0 ) {
rank: 126
score: 98.78126356336806
patch: c = true ; return false ; }
rank: 126
score: 98.73335774739583
patch: CaMeL Error return true ; return true ;
rank: 126
score: 98.73049926757812
patch: return true ; } * * * * /
rank: 126
score: 98.44450547960069
patch: CaMeL return ( ) ; return true ;
rank: 127
score: 99.02622584292763
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , ch , ch ) ;
rank: 127
score: 99.01349283854167
patch: return search CaMeL Chars [ j ] . length < cs . length ;
rank: 127
score: 98.85914963942308
patch: if ( search CaMeL Chars . length == cs CaMeL Length )
rank: 127
score: 98.77879638671875
patch: return is CaMeL Empty ( ch ) ; ;
rank: 127
score: 98.76932525634766
patch: return ( true && false ) ;
rank: 127
score: 98.73326110839844
patch: CaMeL Range true ; return true ;
rank: 127
score: 98.73042805989583
patch: return null ; } } return true ;
rank: 127
score: 98.50724283854167
patch: CaMeL true = true ;
rank: 127
score: 98.44315592447917
patch: return false ; return ;
rank: 128
score: 99.06126990685097
patch: return contains CaMeL Any ( cs , cs CaMeL Length ) ;
rank: 128
score: 99.02583821614583
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ) ;
rank: 128
score: 98.8588397686298
patch: return Array CaMeL Utils . is CaMeL Empty ( false ) ;
rank: 128
score: 98.77785915798611
patch: return true ; } if ( true )
rank: 128
score: 98.7682772549716
patch: search CaMeL Chars [ j ] = true ; }
rank: 128
score: 98.7320556640625
patch: return true ; return false ; return false ;
rank: 128
score: 98.72901746961806
patch: CaMeL Builder . return true ; } }
rank: 128
score: 98.50306701660156
patch: val = true ; break ; }
rank: 129
score: 99.06079864501953
patch: return search CaMeL Chars . contains ( search CaMeL Chars [ j ] ) ;
rank: 129
score: 99.01108805338542
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j ) == ch ;
rank: 129
score: 98.8560791015625
patch: if ( is CaMeL Empty ( search CaMeL Chars ) ) {
rank: 129
score: 98.77725655691964
patch: return true ; ; } ;
rank: 129
score: 98.76725630326705
patch: return search CaMeL Chars [ j ] == $NUMBER$ ;
rank: 129
score: 98.73072052001953
patch: return true ; true return false ;
rank: 129
score: 98.72854614257812
patch: return false ; } break ; }
rank: 129
score: 98.49959564208984
patch: = ( ; return true ) ;
rank: 129
score: 98.44202423095703
patch: return != 1 ; return true ;
rank: 130
score: 99.02434833233173
patch: return search CaMeL Chars [ j ] < ch . length ;
rank: 130
score: 99.01052856445312
patch: return super . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 130
score: 98.8559061686198
patch: if ( j < search CaMeL Chars . length ) {
rank: 130
score: 98.77701568603516
patch: return true ; ; } ; }
rank: 130
score: 98.76502574573864
patch: return search CaMeL Chars [ j ] ; } }
rank: 130
score: 98.730126953125
patch: CaMeL Error = true ; if return true ;
rank: 130
score: 98.728515625
patch: return is ; } return false ;
rank: 130
score: 98.49923706054688
patch: return true ; j -- ; }
rank: 131
score: 99.01024280894886
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , cs . char CaMeL At ( j ) ) ;
rank: 131
score: 98.85584309895833
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . length ) ;
rank: 131
score: 98.77687581380208
patch: t = true ; break ; } }
rank: 131
score: 98.729736328125
patch: CaMeL Object = true ; return true ;
rank: 131
score: 98.72816467285156
patch: return null ; return true ; }
rank: 131
score: 98.44189453125
patch: CaMeL += ( return ) true ;
rank: 132
score: 99.05703735351562
patch: return search CaMeL Chars . add ( search CaMeL Chars [ j ] ) ;
rank: 132
score: 99.02359212239584
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( ch ) ;
rank: 132
score: 99.00986328125
patch: return ! search CaMeL Chars [ j ] . equals ( ch ) ;
rank: 132
score: 98.764453125
patch: return contains CaMeL Any ( cs ) ; }
rank: 132
score: 98.72930908203125
patch: return this . true ; ; ;
rank: 132
score: 98.49535369873047
patch: renderer = true ; break ; }
rank: 132
score: 98.441650390625
patch: return 0 . 0 + true ;
rank: 133
score: 99.00972806490384
patch: return cs . search CaMeL Chars [ j ] == ch ;
rank: 133
score: 98.8554217998798
patch: if ( search CaMeL Chars [ j ] != ch ) {
rank: 133
score: 98.77409362792969
patch: t = ; return true ; }
rank: 133
score: 98.76204057173295
patch: return search CaMeL Chars [ i ] == null ;
rank: 133
score: 98.72903781467014
patch: return get CaMeL Instance ( true ) ;
rank: 133
score: 98.49522399902344
patch: renderer = true ; return true ;
rank: 134
score: 99.05629660866477
patch: return is CaMeL Empty ( cs , cs ) ;
rank: 134
score: 99.02283999794408
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars , cs ) ;
rank: 134
score: 99.00613742404514
patch: return cs . contains ( ch ) ;
rank: 134
score: 98.85421316964286
patch: if ( search CaMeL Chars . length != cs CaMeL Length ) {
rank: 134
score: 98.7704833984375
patch: return true ; ; } } return true ;
rank: 134
score: 98.76139526367187
patch: return search CaMeL Chars [ j ] == ch
rank: 134
score: 98.728662109375
patch: CaMeL Range . return true ; return true ;
rank: 134
score: 98.72725423177083
patch: return is CaMeL Defined ( true ) ;
rank: 134
score: 98.49462127685547
patch: . if ( true ) break ;
rank: 134
score: 98.43981255425348
patch: CaMeL List ( ) . return $NUMBER$ ;
rank: 135
score: 99.05574304917279
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , true ) ;
rank: 135
score: 99.0224250344669
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars . length ) ;
rank: 135
score: 98.8533935546875
patch: if ( search CaMeL Length > cs CaMeL Length ) {
rank: 135
score: 98.7603759765625
patch: return Boolean . is CaMeL Empty ( ) ;
rank: 135
score: 98.72845458984375
patch: CaMeL Number return true ; if return true ;
rank: 135
score: 98.7262191772461
patch: return ; ; } return true ;
rank: 135
score: 98.49461364746094
patch: CaMeL ; return true ; } }
rank: 135
score: 98.43685913085938
patch: return ! 1 ; return true ;
rank: 136
score: 99.0556640625
patch: return is CaMeL Empty ( ch , search CaMeL Chars ) ;
rank: 136
score: 99.02120168585526
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( ch , search CaMeL Chars ) ;
rank: 136
score: 99.00583321707589
patch: return search CaMeL Chars [ j ] . add ( ch ) ;
rank: 136
score: 98.8531494140625
patch: if ( search CaMeL Chars . length >= cs CaMeL Length )
rank: 136
score: 98.75883345170455
patch: search CaMeL Chars [ j ] = ch ; }
rank: 136
score: 98.72640652126736
patch: CaMeL Exception = true ; while true ;
rank: 136
score: 98.72396850585938
patch: return true ; } if ; return false ;
rank: 136
score: 98.49034118652344
patch: . is CaMeL Empty return true ;
rank: 136
score: 98.43649631076389
patch: return size != true ; return true ;
rank: 137
score: 99.0556640625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ) ;
rank: 137
score: 99.02095540364583
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , cs ) ;
rank: 137
score: 99.0057601928711
patch: return contains CaMeL Any ( search CaMeL Chars [ j ] , ch ) ;
rank: 137
score: 98.85271344866071
patch: if ( cs CaMeL Length < search CaMeL Chars . length ) {
rank: 137
score: 98.76737060546876
patch: return true ; } System . out . ;
rank: 137
score: 98.75876686789773
patch: return ch . is CaMeL Empty ( ) ) ;
rank: 137
score: 98.72583618164063
patch: CaMeL List . clear ( ; return true ;
rank: 137
score: 98.72302856445313
patch: return true ; } else { return false ;
rank: 137
score: 98.48800659179688
patch: . this . return true ; }
rank: 137
score: 98.43600802951389
patch: CaMeL = ) true ; return true ;
rank: 138
score: 99.05487615411931
patch: return search CaMeL Chars . contains ( ch ) ;
rank: 138
score: 99.02091761997768
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , ) ;
rank: 138
score: 99.005126953125
patch: return ch . contains ( search CaMeL Chars [ j ] ) ;
rank: 138
score: 98.84848257211539
patch: return Char CaMeL Utils . is CaMeL Empty ( ch ) ;
rank: 138
score: 98.76677788628473
patch: g = true ; return true ; }
rank: 138
score: 98.75699462890626
patch: ch = search CaMeL Chars [ j ] ;
rank: 138
score: 98.72528076171875
patch: CaMeL Error return true ; return false ;
rank: 138
score: 98.72171020507812
patch: return true ; for return true ;
rank: 138
score: 98.48677825927734
patch: ( ; return true ) ; }
rank: 138
score: 98.4345703125
patch: CaMeL += false ; return true ;
rank: 139
score: 99.02089029947916
patch: return Char CaMeL Utils . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 139
score: 99.00486755371094
patch: return is CaMeL Empty ( cs , search CaMeL Chars [ j ] ) ;
rank: 139
score: 98.84839884440105
patch: return ! is CaMeL Empty ( search CaMeL Chars ) ;
rank: 139
score: 98.76633707682292
patch: return is CaMeL Empty ( ch ; }
rank: 139
score: 98.756689453125
patch: return 0 . [ i ] == ch ;
rank: 139
score: 98.72440185546876
patch: CaMeL Error return true ; } return true ;
rank: 139
score: 98.72074127197266
patch: return true ; } return null ;
rank: 139
score: 98.48511505126953
patch: . starts CaMeL With ( true )
rank: 139
score: 98.43450927734375
patch: CaMeL return ) ; ; return true ;
rank: 140
score: 99.02070756392045
patch: return search CaMeL Chars [ j ] == ch _
rank: 140
score: 99.00316443810097
patch: return ( search CaMeL Chars [ j ] != ch ) ;
rank: 140
score: 98.76490783691406
patch: return true ? false : false ;
rank: 140
score: 98.75656960227273
patch: return is CaMeL Empty ( ch , ch ) ;
rank: 140
score: 98.72065565321181
patch: CaMeL List != null ; return true ;
rank: 140
score: 98.71751403808594
patch: return false ; } } else {
rank: 140
score: 98.48443603515625
patch: def = true ; break ;
rank: 140
score: 98.43419053819444
patch: return 0 . true ; return true ;
rank: 141
score: 99.0522101907169
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length , ch ) ;
rank: 141
score: 99.01968544407895
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( search CaMeL Chars , ch ) ;
rank: 141
score: 99.00069986979166
patch: return Array CaMeL Utils . equals ( cs , search CaMeL Chars ) ;
rank: 141
score: 98.84796612079327
patch: throw new Null CaMeL Pointer CaMeL Exception ( , $STRING$ ) ;
rank: 141
score: 98.76213243272569
patch: return true ; } else if ( ;
rank: 141
score: 98.75190734863281
patch: return false ; else return false ;
rank: 141
score: 98.71981375558036
patch: CaMeL Range = return true ;
rank: 141
score: 98.71707763671876
patch: CaMeL List true = true ; return true ;
rank: 141
score: 98.4837875366211
patch: CaMeL ; if ; break ; }
rank: 141
score: 98.43418884277344
patch: return ; return ; + true ;
rank: 142
score: 99.05086263020833
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( cs ) ;
rank: 142
score: 99.01689596737133
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , i ) ;
rank: 142
score: 98.84664212740384
patch: return cs . char CaMeL At ( i ) == ch ;
rank: 142
score: 98.75982666015625
patch: . return true ; ; }
rank: 142
score: 98.751708984375
patch: return return is CaMeL Empty ( cs ) ;
rank: 142
score: 98.71851806640625
patch: return false ; return false ; return true ;
rank: 142
score: 98.71683175223214
patch: return return is CaMeL Empty ;
rank: 142
score: 98.43277740478516
patch: return is ( true true ) ;
rank: 143
score: 99.05029296875
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Length ) ;
rank: 143
score: 99.01647010216347
patch: return search CaMeL Chars [ j ] == ch . value ;
rank: 143
score: 98.998583984375
patch: return contains CaMeL Any ( ch , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 143
score: 98.84623579545455
patch: if ( search CaMeL Length <= cs CaMeL Length )
rank: 143
score: 98.7515625
patch: return cs CaMeL Length < search CaMeL Length ;
rank: 143
score: 98.71808624267578
patch: return false ; return null ; }
rank: 143
score: 98.43241882324219
patch: ( false ) ; return false ;
rank: 144
score: 99.01513671875
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs . char CaMeL At (
rank: 144
score: 98.84496198381696
patch: return ( cs . to CaMeL Lower CaMeL Case ( ) ) ;
rank: 144
score: 98.75929565429688
patch: return is CaMeL Empty ( ch ; } }
rank: 144
score: 98.71742466517857
patch: CaMeL List true return null ;
rank: 144
score: 98.71548122829861
patch: CaMeL List return true ; return false ;
rank: 144
score: 98.42881774902344
patch: CaMeL List ( ) return true ;
rank: 145
score: 99.04851935891544
patch: return search CaMeL Chars . get ( j ) . is CaMeL Empty ( ) ;
rank: 145
score: 99.01436767578124
patch: return false . is CaMeL Empty ( ) ;
rank: 145
score: 98.84471546519886
patch: if ( search CaMeL Length < search CaMeL Length )
rank: 145
score: 98.75908203125
patch: return false ; } } } return true ;
rank: 145
score: 98.75095436789773
patch: return search CaMeL Chars [ j ] > ch ;
rank: 145
score: 98.48039027622768
patch: = true ; return false ;
rank: 145
score: 98.42870076497395
patch: return 0 ; break ;
rank: 146
score: 99.04823521205357
patch: return search CaMeL Length - search CaMeL Chars . size ( ) ;
rank: 146
score: 99.0138003700658
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( true , ch ) ;
rank: 146
score: 98.84463065011161
patch: if ( cs CaMeL Length == search CaMeL Chars . length ) {
rank: 146
score: 98.75779724121094
patch: return true ; continue ; } }
rank: 146
score: 98.75076633029514
patch: Plane return false ; return true ; }
rank: 146
score: 98.71507263183594
patch: CaMeL Exception = ; return true ;
rank: 146
score: 98.47970145089286
patch: t = true ; break ;
rank: 146
score: 98.42755998883929
patch: return $NUMBER$ ; return true ;
rank: 147
score: 99.04690987723214
patch: return search CaMeL Chars [ cs . char CaMeL At ( j )
rank: 147
score: 98.99542236328125
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 147
score: 98.84452311197917
patch: if ( ! search CaMeL Chars . is CaMeL Empty ( ) ) {
rank: 147
score: 98.7572509765625
patch: return true ; } } while ( true )
rank: 147
score: 98.75071207682292
patch: return cs [ j ] == ch ;
rank: 147
score: 98.71477593315973
patch: return false ; } else return true ;
rank: 147
score: 98.712646484375
patch: CaMeL Enum = true ; return true ;
rank: 147
score: 98.47916085379464
patch: if ( true ) continue ;
rank: 147
score: 98.427490234375
patch: return true ; return true ; break ;
rank: 148
score: 98.99482945033482
patch: return cs . contains ( search CaMeL Chars [ j ] ) ;
rank: 148
score: 98.84422084263393
patch: if ( ! search CaMeL Chars [ j ] == ch ) {
rank: 148
score: 98.7566650390625
patch: . return is CaMeL Empty ( true ) ;
rank: 148
score: 98.71376255580357
patch: return ; } return true ;
rank: 148
score: 98.71190185546875
patch: CaMeL Exception = true ; return true ; ;
rank: 148
score: 98.47865295410156
patch: state = true ; break ; }
rank: 148
score: 98.42537689208984
patch: return - true ; return true ;
rank: 149
score: 99.01258138020833
patch: return Array CaMeL Utils . contains ( ch , search CaMeL Chars ) ;
rank: 149
score: 98.99458618164063
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( i ) ) ;
rank: 149
score: 98.84105631510417
patch: if ( cs . char CaMeL At ( i ) == ch ) {
rank: 149
score: 98.75580444335938
patch: return ! is CaMeL Empty ( true ; }
rank: 149
score: 98.74866943359375
patch: return contains CaMeL Any ( ch ) ; }
rank: 149
score: 98.71260986328124
patch: return is CaMeL True ( false ) ; }
rank: 149
score: 98.7109146118164
patch: return false ; ; return null ;
rank: 149
score: 98.47740936279297
patch: $NUMBER$ . / * return true ;
rank: 149
score: 98.42469618055556
patch: CaMeL List ( ) ; return 1 ;
rank: 150
score: 99.0398418719952
patch: return contains CaMeL Any ( j , search CaMeL Chars ) ;
rank: 150
score: 99.01188441685268
patch: return ! Array CaMeL Utils . is CaMeL Empty ( ch ) ;
rank: 150
score: 98.99407087053571
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Value ( ) ;
rank: 150
score: 98.84000338040866
patch: if ( search CaMeL Chars . length >= search CaMeL Length )
rank: 150
score: 98.74833540482955
patch: return search CaMeL Chars [ count ] == ch ;
rank: 150
score: 98.71084594726562
patch: return true ; } if return false ; }
rank: 150
score: 98.71055297851562
patch: CaMeL Null ( true ) ; return true ;
rank: 150
score: 98.476806640625
patch: scale = true ; return true ;
rank: 150
score: 98.42094590928819
patch: return false ; true ; return true ;
rank: 151
score: 99.03814338235294
patch: return search CaMeL Chars . get ( ch ) . contains CaMeL Any ( ) ;
rank: 151
score: 99.01162880345395
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Char CaMeL Array ( ) ;
rank: 151
score: 98.99402965198864
patch: return super . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 151
score: 98.83956909179688
patch: p = cs . char CaMeL At ( j ) ;
rank: 151
score: 98.75506591796875
patch: return ! is CaMeL Empty ( ) ;
rank: 151
score: 98.70935821533203
patch: CaMeL Range true ; return false ;
rank: 151
score: 98.7086181640625
patch: CaMeL List true = true ; return false ;
rank: 151
score: 98.47671508789062
patch: . return - 1 == true ;
rank: 151
score: 98.42084418402777
patch: CaMeL += ) true ; return true ;
rank: 152
score: 99.0358642578125
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , cs ) ;
rank: 152
score: 99.01111653645833
patch: return Char CaMeL Utils . contains CaMeL Any ( cs , ch ) ;
rank: 152
score: 98.99401245117187
patch: return Array CaMeL Utils . contains ( cs , cs . char CaMeL At ( j ) ) ;
rank: 152
score: 98.8391825358073
patch: v = cs . char CaMeL At ( i ) ;
rank: 152
score: 98.7545166015625
patch: CaMeL true = true ; return true ;
rank: 152
score: 98.74515533447266
patch: return ( true || true ) ;
rank: 152
score: 98.70824432373047
patch: return true ; while return false ;
rank: 152
score: 98.70781792534723
patch: CaMeL List . return ( false ) ;
rank: 152
score: 98.41967010498047
patch: return ; = ; = true ;
rank: 153
score: 98.99399636008523
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , ch ) ;
rank: 153
score: 98.83834402901786
patch: if ( search CaMeL Chars . length != search CaMeL Length ) {
rank: 153
score: 98.7450180053711
patch: return ( false && false ) ;
rank: 153
score: 98.70639377170139
patch: CaMeL Boolean = true ; return false ;
rank: 153
score: 98.47474670410156
patch: logger = true ; return true ;
rank: 153
score: 98.41632843017578
patch: return 0 ; while return true ;
rank: 154
score: 99.0345947265625
patch: return search CaMeL Chars . equals ( cs , search CaMeL Chars ) ;
rank: 154
score: 98.99344075520834
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , cs ) ;
rank: 154
score: 98.83831317608173
patch: return Char CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 154
score: 98.74415172230114
patch: return is CaMeL Empty ( ch ) ; } }
rank: 154
score: 98.70755615234376
patch: return is CaMeL True ( true ) ; ;
rank: 154
score: 98.47465515136719
patch: . return true ; true ; }
rank: 154
score: 98.41485595703125
patch: return true ; true ;
rank: 155
score: 99.03382110595703
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ;
rank: 155
score: 98.993115234375
patch: return search CaMeL Chars [ j ] . trim ( ) . length ;
rank: 155
score: 98.83809407552083
patch: if ( cs . char CaMeL At ( j ) == ch ) {
rank: 155
score: 98.75373077392578
patch: return true ; } continue ; }
rank: 155
score: 98.7436767578125
patch: return search CaMeL Chars [ i ] ; }
rank: 155
score: 98.7069580078125
patch: return true ; break ; } return false ;
rank: 155
score: 98.70438232421876
patch: CaMeL List . true ; if return true ;
rank: 155
score: 98.47195434570312
patch: $NUMBER$ . this . return true ;
rank: 155
score: 98.41446685791016
patch: return - $NUMBER$ ; return true ;
rank: 156
score: 99.0086310891544
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Object ( ) ;
rank: 156
score: 98.7435302734375
patch: return new Char CaMeL Sequence ( cs ) ;
rank: 156
score: 98.703271484375
patch: CaMeL Exception = false ; if return true ;
rank: 156
score: 98.47057342529297
patch: ? * / return true ; }
rank: 156
score: 98.41321563720703
patch: return false ; return return true ;
rank: 157
score: 99.03270545372597
patch: return is CaMeL Empty ( cs , search CaMeL Length ) ;
rank: 157
score: 99.00807818244485
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs CaMeL Length ) ;
rank: 157
score: 98.83707369290866
patch: if ( search CaMeL Chars [ i ] == ch ) {
rank: 157
score: 98.74905395507812
patch: return true ; * /
rank: 157
score: 98.70271131727431
patch: CaMeL Range [ ] true = true ;
rank: 157
score: 98.46961975097656
patch: r = true ; break ; }
rank: 157
score: 98.41053602430556
patch: CaMeL ch = true ; return null ;
rank: 158
score: 99.03183419363839
patch: return search CaMeL Chars [ j == search CaMeL Chars . length ;
rank: 158
score: 98.99253336588542
patch: return Array CaMeL Utils . contains ( cs , search CaMeL Chars [ j ] ) ;
rank: 158
score: 98.748974609375
patch: return true ; } } else return true ;
rank: 158
score: 98.74181450737848
patch: Plane return true ; return false ; }
rank: 158
score: 98.70035400390626
patch: CaMeL Number = return true ; return true ;
rank: 158
score: 98.46958923339844
patch: loop = true ; break ; }
rank: 158
score: 98.40780203683036
patch: return ; = true ; ;
rank: 159
score: 99.00765830592105
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars . length , ch ) ;
rank: 159
score: 98.99237615411931
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars [ j ] ) ;
rank: 159
score: 98.8359130859375
patch: return j < search CaMeL Chars . length ;
rank: 159
score: 98.74749145507812
patch: return true ; default : return true ; }
rank: 159
score: 98.7415438565341
patch: return search CaMeL Chars [ ch ] == ch ;
rank: 159
score: 98.70152587890625
patch: return true ; break ; } } if ;
rank: 159
score: 98.70023193359376
patch: CaMeL Range true return true ; return true ;
rank: 159
score: 98.46958923339844
patch: model = true ; return true ;
rank: 159
score: 98.40772840711806
patch: return 0 ; ; if return true ;
rank: 160
score: 99.03025189568015
patch: return cs . char CaMeL At ( j ) . is CaMeL Empty ( ) ;
rank: 160
score: 99.00655324835526
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == search CaMeL Chars . length ;
rank: 160
score: 98.99179077148438
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) , cs ) ;
rank: 160
score: 98.83571951729911
patch: if ( cs . length < search CaMeL Chars . length ) {
rank: 160
score: 98.7462158203125
patch: . return true ; } return false ;
rank: 160
score: 98.7410888671875
patch: { search CaMeL Chars [ j ] = ch ;
rank: 160
score: 98.70082397460938
patch: return false ; this . return false ; }
rank: 160
score: 98.69979248046874
patch: CaMeL Exception return true ; } return null ;
rank: 160
score: 98.46819305419922
patch: = true ; if ( true )
rank: 160
score: 98.40752410888672
patch: return matches ; { return true ;
rank: 161
score: 99.029052734375
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length ) ; }
rank: 161
score: 98.99002075195312
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [ i ] ) ;
rank: 161
score: 98.83547141335227
patch: if ( search CaMeL Chars . length == 0 )
rank: 161
score: 98.74470520019531
patch: return true ; ; } } ;
rank: 161
score: 98.70067342122395
patch: return false ; break ;
rank: 161
score: 98.69826049804688
patch: CaMeL Exception return true ; while return true ;
rank: 161
score: 98.46722412109375
patch: binding = true ; break ; }
rank: 161
score: 98.40739222935268
patch: return true ; return 0 ;
rank: 162
score: 99.02827284071181
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ,
rank: 162
score: 98.98988560267857
patch: return search CaMeL Chars [ j ] . equals ( cs ) ;
rank: 162
score: 98.83526611328125
patch: if ( i == search CaMeL Chars . length ) {
rank: 162
score: 98.744677734375
patch: return is CaMeL Empty ( true , false ;
rank: 162
score: 98.73912963867187
patch: return null . is CaMeL Empty ( ) ;
rank: 162
score: 98.70059543185764
patch: return return true ; } return true ;
rank: 162
score: 98.69823455810547
patch: return false ; true return true ;
rank: 162
score: 98.46636962890625
patch: [ ] return true ;
rank: 162
score: 98.40593126085069
patch: return is != 0 ; return true ;
rank: 163
score: 99.02783203125
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , false ) ;
rank: 163
score: 99.005859375
patch: return search CaMeL Chars [ j ] == ch . is CaMeL Empty ( ) ;
rank: 163
score: 98.98936971028645
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , cs . char CaMeL At ( j ) ) ;
rank: 163
score: 98.83492024739583
patch: if ( j == search CaMeL Chars . length ) {
rank: 163
score: 98.74159545898438
patch: return true ; } else if ( true ;
rank: 163
score: 98.7367831143466
patch: return search CaMeL Length [ i ] == ch ;
rank: 163
score: 98.69803466796876
patch: CaMeL Exception = true ; return false ; }
rank: 163
score: 98.4649429321289
patch: return true ; true = true ;
rank: 163
score: 98.40574645996094
patch: return true ; ; return 0 ;
rank: 164
score: 99.02665201822917
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ) ; }
rank: 164
score: 98.98898111979166
patch: return ! search CaMeL Chars [ j ] . contains ( ch ) ;
rank: 164
score: 98.83355712890625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ;
rank: 164
score: 98.74024658203125
patch: return is CaMeL Empty ? true : false ;
rank: 164
score: 98.69759114583333
patch: CaMeL Exception return true ; if true ;
rank: 164
score: 98.46401977539062
patch: . return ( true ) ; }
rank: 164
score: 98.40510389539931
patch: return true ; return ; return true ;
rank: 165
score: 99.02646309988839
patch: return search CaMeL Chars [ j ] is CaMeL Empty ( ) ;
rank: 165
score: 99.00518798828125
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ch ) ;
rank: 165
score: 98.73975219726563
patch: return is CaMeL Empty ( true , ; }
rank: 165
score: 98.69725952148437
patch: CaMeL Range = true ; return true ; ;
rank: 165
score: 98.69674246651786
patch: return false ; } * /
rank: 165
score: 98.46131896972656
patch: CaMeL ; if ( ! true )
rank: 166
score: 99.0260871438419
patch: return search CaMeL Chars . to CaMeL String ( ) . equals ( ch ) ;
rank: 166
score: 99.0044677734375
patch: return cs . contains CaMeL Any ( ch , search CaMeL Chars ) ;
rank: 166
score: 98.98679713199013
patch: return search CaMeL Chars [ j ] . contains ( search CaMeL Chars [ j ] ) ;
rank: 166
score: 98.83220966045673
patch: byte ch = cs . char CaMeL At ( i ) ;
rank: 166
score: 98.736865234375
patch: . return true ; } return true ; }
rank: 166
score: 98.73478560014205
patch: return false ; contains CaMeL Any ( cs ) ;
rank: 166
score: 98.69664171006944
patch: CaMeL Exception return true ; return null ;
rank: 166
score: 98.69393920898438
patch: return is ; return false ; }
rank: 166
score: 98.46039690290179
patch: . this . return true ;
rank: 166
score: 98.40085856119792
patch: CaMeL do . return ; = true ;
rank: 167
score: 99.0260760967548
patch: return search CaMeL Chars [ search CaMeL Length ] != ch ;
rank: 167
score: 99.00265984786184
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( cs , search CaMeL Length ) ;
rank: 167
score: 98.98676409040179
patch: return search CaMeL Chars [ j ] . append ( ch ) ;
rank: 167
score: 98.73528374565973
patch: if ( true ) break ; } }
rank: 167
score: 98.69649251302083
patch: return true ; ; if return true ;
rank: 167
score: 98.69017791748047
patch: return ; return false ; } }
rank: 167
score: 98.4007568359375
patch: return ) ; return true ;
rank: 168
score: 99.02600815716912
patch: return Array CaMeL Utils . is CaMeL True ( cs , search CaMeL Chars ) ;
rank: 168
score: 98.8308993252841
patch: return return cs . is CaMeL Empty ( ) ;
rank: 168
score: 98.73333740234375
patch: return [ j ] == ch ;
rank: 168
score: 98.73305053710938
patch: t = true ; return true ; } }
rank: 168
score: 98.68981255425348
patch: return null ; } else return false ;
rank: 168
score: 98.40033637152777
patch: return 0 + true ; return false ;
rank: 169
score: 99.001953125
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars , i ) ;
rank: 169
score: 98.98617733226104
patch: return super . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 169
score: 98.8303973858173
patch: if ( cs CaMeL Length >= search CaMeL Chars . length )
rank: 169
score: 98.73328314887152
patch: return is CaMeL Empty ( j ) ;
rank: 169
score: 98.73240831163194
patch: return true ? true : false ; }
rank: 169
score: 98.69580756293402
patch: CaMeL List . true ; return true ;
rank: 169
score: 98.68964494977679
patch: return ; * * * /
rank: 169
score: 98.4582290649414
patch: return true ; else return true ;
rank: 170
score: 99.02533365885417
patch: return contains CaMeL Any ( search CaMeL Chars , search CaMeL Length ) ;
rank: 170
score: 99.00189678485577
patch: return ch . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 170
score: 98.98589797247024
patch: return search CaMeL Chars [ j ] . equals ( cs . char CaMeL At ( j ) ) ;
rank: 170
score: 98.82809244791666
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , false ) ;
rank: 170
score: 98.69566345214844
patch: return true ; return null true ;
rank: 170
score: 98.68946184430804
patch: return ; return false ; }
rank: 170
score: 98.45783996582031
patch: return true ; else break ; }
rank: 170
score: 98.39957682291667
patch: CaMeL List ( true ; return $NUMBER$ ;
rank: 171
score: 98.9855244954427
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 171
score: 98.82776692708333
patch: if ( ! Array CaMeL Utils . is CaMeL Empty ( ch ) )
rank: 171
score: 98.73172336154514
patch: a = true ; return true ; }
rank: 171
score: 98.72864532470703
patch: return false ; else return true ;
rank: 171
score: 98.69560546875
patch: CaMeL Number return true ; } return true ;
rank: 171
score: 98.6867446899414
patch: return ; } else return false ;
rank: 171
score: 98.45755004882812
patch: f = true ; break ; }
rank: 171
score: 98.39805094401042
patch: return true ; return ; if true ;
rank: 172
score: 99.02197265625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j
rank: 172
score: 99.00115607766544
patch: return Char CaMeL Utils . contains CaMeL Any ( ch , search CaMeL Chars ) ;
rank: 172
score: 98.9854736328125
patch: ch = cs . char CaMeL At ( j ) ;
rank: 172
score: 98.73132934570313
patch: return is CaMeL Empty ? false : true ;
rank: 172
score: 98.69551391601563
patch: CaMeL Exception return true ; if return false ;
rank: 172
score: 98.45707702636719
patch: = null ; return true ; }
rank: 172
score: 98.39708794487848
patch: return false ; ; if return true ;
rank: 173
score: 99.0218734741211
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length ) ;
rank: 173
score: 99.00100226151316
patch: return search CaMeL Chars [ j ] == ch . get CaMeL Class CaMeL Name ( ) ;
rank: 173
score: 98.98539225260417
patch: return search CaMeL Chars [ j ] . substring ( search CaMeL Chars . length ) ;
rank: 173
score: 98.826513671875
patch: return search CaMeL Length < search CaMeL Length ;
rank: 173
score: 98.73046875
patch: CaMeL true = true ; break ; }
rank: 173
score: 98.72463989257812
patch: return ( false && true ) ;
rank: 173
score: 98.69500732421875
patch: CaMeL List true return null ; return true ;
rank: 173
score: 98.39684295654297
patch: return 0 . ; = true ;
rank: 174
score: 99.02184340533088
patch: return Array CaMeL Utils . search CaMeL Chars ( cs , search CaMeL Chars ) ;
rank: 174
score: 99.00079024465461
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs , i ) ;
rank: 174
score: 98.98520132211539
patch: return search CaMeL Chars [ j ] . run ( ) ;
rank: 174
score: 98.8255106608073
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 174
score: 98.7300537109375
patch: return true ; } System . arraycopy ( ;
rank: 174
score: 98.69481201171875
patch: CaMeL Error return true ; } return false ;
rank: 174
score: 98.68501499720982
patch: return is CaMeL Empty true ;
rank: 174
score: 98.4527359008789
patch: b = true ; return true ;
rank: 174
score: 98.39451599121094
patch: return is ( ; return true ;
rank: 175
score: 99.021484375
patch: return search CaMeL Chars . equals ( search CaMeL Chars ) ;
rank: 175
score: 99.000732421875
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , cs , ch ) ;
rank: 175
score: 98.82370827414773
patch: return return ch . is CaMeL Empty ( ) ;
rank: 175
score: 98.72826385498047
patch: m = ; return true ; }
rank: 175
score: 98.72232666015626
patch: return ch . [ j ] == ch ;
rank: 175
score: 98.69452667236328
patch: return null ; ; return true ;
rank: 175
score: 98.68443603515625
patch: return true ; break ; } } return ;
rank: 175
score: 98.4525146484375
patch: $NUMBER$ . return false ;
rank: 175
score: 98.39439561631944
patch: return 0 . true ; return false ;
rank: 176
score: 99.02132975260416
patch: return contains CaMeL Any ( cs CaMeL Length , search CaMeL Chars ) ;
rank: 176
score: 98.98485649956598
patch: return contains CaMeL Any ( cs . char CaMeL At ( j ) , ch ) ;
rank: 176
score: 98.82318115234375
patch: if ( search CaMeL Chars . length > search CaMeL Length ) {
rank: 176
score: 98.72747802734375
patch: return ( true ) ; } }
rank: 176
score: 98.69438171386719
patch: CaMeL Exception ; return true ; }
rank: 176
score: 98.68436889648437
patch: CaMeL Builder . return ( true ) ; }
rank: 176
score: 98.39371744791667
patch: CaMeL List ( false ) ; return ;
rank: 177
score: 98.99976303998162
patch: return false && Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 177
score: 98.98377574573864
patch: return null + search CaMeL Chars [ j ] ;
rank: 177
score: 98.82283238002232
patch: return ( search CaMeL Chars [ j ] == ch ) ; }
rank: 177
score: 98.72657470703125
patch: return Boolean . value CaMeL Of ( ; }
rank: 177
score: 98.7213134765625
patch: return ( false ) ;
rank: 177
score: 98.69358995225694
patch: return false ; ; ; return false ;
rank: 177
score: 98.45220947265625
patch: CaMeL ; return true ; } ;
rank: 177
score: 98.39311981201172
patch: return true ; ; = true ;
rank: 178
score: 98.99965306332237
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { return false ;
rank: 178
score: 98.98335193452381
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Object ( ) ;
rank: 178
score: 98.822021484375
patch: if ( j <= search CaMeL Chars . length ) {
rank: 178
score: 98.72093370225694
patch: Plane return true ; return true ; }
rank: 178
score: 98.69336547851563
patch: CaMeL Range ( true ) ; return true ;
rank: 178
score: 98.68363952636719
patch: return true ; } if ; }
rank: 178
score: 98.45210266113281
patch: = true ; break ; } ;
rank: 178
score: 98.3926010131836
patch: return return $NUMBER$ ; return true ;
rank: 179
score: 99.01971435546875
patch: return contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 179
score: 98.98330543154762
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL Empty ( ) ;
rank: 179
score: 98.82182965959821
patch: if ( search CaMeL Length < Array CaMeL Utils . length ) {
rank: 179
score: 98.7265380859375
patch: return ! is CaMeL Empty ( ; } }
rank: 179
score: 98.7203702059659
patch: return is CaMeL Empty ( [ i ] ) ;
rank: 179
score: 98.68255615234375
patch: return false ; } else return false ; }
rank: 179
score: 98.45206451416016
patch: j = true ; break ; }
rank: 179
score: 98.39234754774306
patch: CaMeL ch = true ; return $NUMBER$ ;
rank: 180
score: 99.01921530330883
patch: return ( search CaMeL Chars . char CaMeL At ( i ) == ch ) ;
rank: 180
score: 98.98307531020221
patch: return ! search CaMeL Chars [ j ] . contains CaMeL Any ( ch ) ;
rank: 180
score: 98.72520616319444
patch: return true ; } } } return ;
rank: 180
score: 98.71915690104167
patch: return is CaMeL Empty ( i ) ;
rank: 180
score: 98.68008422851562
patch: return false ; } } if return false ;
rank: 180
score: 98.45193917410714
patch: CaMeL ; break ; } }
rank: 180
score: 98.39219665527344
patch: return 0 ; for return true ;
rank: 181
score: 99.01834309895834
patch: return is CaMeL Empty ( search CaMeL Chars , search CaMeL Length ) ;
rank: 181
score: 98.98300405649039
patch: return super . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 181
score: 98.82107979910714
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars
rank: 181
score: 98.72395155164931
patch: if ( true ) return true ; }
rank: 181
score: 98.69105834960938
patch: return false ; return false ; return false ;
rank: 181
score: 98.67977142333984
patch: return true ; while return true ;
rank: 181
score: 98.45184326171875
patch: CaMeL ; break ;
rank: 182
score: 99.01637178308823
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , $STRING$ ) ;
rank: 182
score: 98.99615009014423
patch: return true && search CaMeL Chars [ j ] == ch ;
rank: 182
score: 98.82056477864583
patch: return ( Array CaMeL Utils . is CaMeL Empty ( cs ) ) ;
rank: 182
score: 98.68971557617188
patch: CaMeL Error return true ; if return true ;
rank: 182
score: 98.4516830444336
patch: = this . true ; break ;
rank: 182
score: 98.39126586914062
patch: return 0 . ; return true ;
rank: 183
score: 99.01555841619319
patch: return cs . contains CaMeL Any ( cs ) ;
rank: 183
score: 98.98082139756944
patch: return ch . contains ( ch ) ;
rank: 183
score: 98.81892903645833
patch: return ! is CaMeL Empty ( search CaMeL Chars [ j ] ) ;
rank: 183
score: 98.7225830078125
patch: return is CaMeL Empty ( ch , false ;
rank: 183
score: 98.7151870727539
patch: return ( false || false ) ;
rank: 183
score: 98.68966674804688
patch: CaMeL Range . return true ; return false ;
rank: 183
score: 98.67770385742188
patch: return false ; } } if return true ;
rank: 183
score: 98.44682094029018
patch: CaMeL return true ; break ;
rank: 183
score: 98.3912582397461
patch: return ! $NUMBER$ ; return true ;
rank: 184
score: 98.99539184570312
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars ;
rank: 184
score: 98.8187764485677
patch: if ( is CaMeL Empty ( search CaMeL Chars ) )
rank: 184
score: 98.72126007080078
patch: g = true ; return true ;
rank: 184
score: 98.68867797851563
patch: CaMeL Range return true ; if return true ;
rank: 184
score: 98.6764892578125
patch: CaMeL State . return true ; return false ;
rank: 184
score: 98.44677734375
patch: token = true ; break ; }
rank: 184
score: 98.39059448242188
patch: return next ; { return true ;
rank: 185
score: 98.97948455810547
patch: return contains CaMeL Any ( ch , search CaMeL Chars [ j ] ) ;
rank: 185
score: 98.7211669921875
patch: return true ; } } return true ; }
rank: 185
score: 98.711181640625
patch: Plane return is CaMeL Empty ( ch ) ;
rank: 185
score: 98.68791368272569
patch: CaMeL Null return true ; return false ;
rank: 185
score: 98.6747802734375
patch: return true ; if ; return false ; }
rank: 185
score: 98.4467544555664
patch: scanner = true ; break ; }
rank: 185
score: 98.38945007324219
patch: return true ; return - $NUMBER$ ;
rank: 186
score: 99.01426786534927
patch: return Array CaMeL Utils . is CaMeL Empty ( cs CaMeL Length , ch ) ;
rank: 186
score: 98.9947868795956
patch: return ! ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 186
score: 98.81786092122395
patch: if ( cs CaMeL Length >= cs CaMeL Length ) {
rank: 186
score: 98.72061767578126
patch: return true ; } else { return true ;
rank: 186
score: 98.70855158025569
patch: return 0 + search CaMeL Chars [ j ] ;
rank: 186
score: 98.68746948242188
patch: CaMeL Exception = true ; for return true ;
rank: 186
score: 98.67227172851562
patch: return false ; } else if return false ;
rank: 186
score: 98.44500732421875
patch: CaMeL Enum true = true ;
rank: 186
score: 98.38923645019531
patch: CaMeL -= ) ; return true ;
rank: 187
score: 98.97841389973958
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 187
score: 98.70844377790179
patch: return false ; true ; }
rank: 187
score: 98.68743218315973
patch: CaMeL Exception return true ; while true ;
rank: 187
score: 98.67164916992188
patch: return true ; } else if return true ;
rank: 187
score: 98.44452667236328
patch: scan = true ; break ; }
rank: 187
score: 98.38872528076172
patch: return 0 ; ; return 1 ;
rank: 188
score: 98.99364124644886
patch: return ! ch . is CaMeL Empty ( ) ;
rank: 188
score: 98.97797241210938
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars [ j ] ) ;
rank: 188
score: 98.81552358774039
patch: throw new Illegal CaMeL State CaMeL Exception ( , $STRING$ ) ;
rank: 188
score: 98.70543323863636
patch: return true ; contains CaMeL Any ( cs ) ;
rank: 188
score: 98.68709106445313
patch: return true ; ; ; if return true ;
rank: 188
score: 98.44093540736607
patch: $NUMBER$ . return false ; }
rank: 188
score: 98.3875961303711
patch: CaMeL do = true ; true ;
rank: 189
score: 99.0122821514423
patch: return is CaMeL Empty ( search CaMeL Chars , ch ) ;
rank: 189
score: 98.99329331341912
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , true ) ;
rank: 189
score: 98.97635226779514
patch: return cs . contains CaMeL Any ( cs , search CaMeL Chars [ j ] ) ;
rank: 189
score: 98.70527787642045
patch: return search CaMeL Chars [ j ] = ch ;
rank: 189
score: 98.4389419555664
patch: &= true * / return true ;
rank: 189
score: 98.3856201171875
patch: return false ; ; true ;
rank: 190
score: 99.01172637939453
patch: return Math . is CaMeL Empty ( search CaMeL Chars [ j ] ) ;
rank: 190
score: 98.99269732306985
patch: return ! ! search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 190
score: 98.811865234375
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ;
rank: 190
score: 98.71964518229167
patch: return true ; break ; } } ;
rank: 190
score: 98.68616333007813
patch: CaMeL List . true true ; return false ;
rank: 190
score: 98.66902160644531
patch: return is ; } return true ;
rank: 190
score: 98.43694305419922
patch: return true ; i -- ; }
rank: 190
score: 98.38557652064732
patch: return false ; ; return ;
rank: 191
score: 99.01166848575367
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length , cs ) ;
rank: 191
score: 98.99144744873047
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars ,
rank: 191
score: 98.97601996527777
patch: return this . search CaMeL Chars [ j ] . contains CaMeL Any ( ch ) ;
rank: 191
score: 98.7196044921875
patch: CaMeL ch = true ; return true ; }
rank: 191
score: 98.68522135416667
patch: CaMeL value = true ; return true ;
rank: 191
score: 98.66893768310547
patch: return ; return true ; } }
rank: 191
score: 98.43646240234375
patch: ok = true ; break ; }
rank: 192
score: 98.9757792154948
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 192
score: 98.71879272460937
patch: if ( true ) { return true ; }
rank: 192
score: 98.6997958096591
patch: return search CaMeL Chars [ i ] != ch ;
rank: 192
score: 98.68446180555556
patch: CaMeL Range = true ; if true ;
rank: 192
score: 98.66879611545139
patch: return return is CaMeL Empty ( true ;
rank: 192
score: 98.43583461216518
patch: ? * / return true ;
rank: 192
score: 98.38451385498047
patch: return false ; ; return ; /
rank: 193
score: 99.0102180032169
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs , ch ) ;
rank: 193
score: 98.98991313733552
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { return true ;
rank: 193
score: 98.71822781032986
patch: r = true ; return true ; }
rank: 193
score: 98.68414306640625
patch: CaMeL Number = true ; if return false ;
rank: 193
score: 98.66831970214844
patch: return true ; } catch true ;
rank: 193
score: 98.43518829345703
patch: = true / * return true ;
rank: 193
score: 98.38430786132812
patch: return ! true ; return false ;
rank: 194
score: 99.00962320963542
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars , ) ;
rank: 194
score: 98.98953407689145
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( cs , 0 ) ;
rank: 194
score: 98.81015625
patch: switch ( search CaMeL Chars [ j ] )
rank: 194
score: 98.71764458550348
patch: t = true ; return false ; }
rank: 194
score: 98.69905229048295
patch: return search CaMeL Chars [ j ] == ) ;
rank: 194
score: 98.68403625488281
patch: CaMeL Range ( return true ) ;
rank: 194
score: 98.66775512695312
patch: return is CaMeL Sealed ( true ) ; }
rank: 194
score: 98.43451799665179
patch: . return true ; } ;
rank: 194
score: 98.38423919677734
patch: return 0 ; ; return $NUMBER$ ;
rank: 195
score: 99.00897894965277
patch: return return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ) ;
rank: 195
score: 98.98952229817708
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At (
rank: 195
score: 98.97356708233173
patch: return search CaMeL Chars [ j ] . trim ( ) ;
rank: 195
score: 98.81002197265624
patch: return ( true ;
rank: 195
score: 98.71746063232422
patch: return true ; } if ( ;
rank: 195
score: 98.69776611328125
patch: search CaMeL Chars [ j ] = false ;
rank: 195
score: 98.68366088867188
patch: CaMeL Range = true ; } return true ;
rank: 195
score: 98.66738552517361
patch: return true ; } ; return false ;
rank: 195
score: 98.4332046508789
patch: throw new Error ( $STRING$ ) ;
rank: 195
score: 98.38227844238281
patch: return - ) ; return 1 ;
rank: 196
score: 99.0088752297794
patch: return cs . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 196
score: 98.97335379464286
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) . is CaMeL Empty ( ) ;
rank: 196
score: 98.8100077311198
patch: f = cs . char CaMeL At ( i ) ;
rank: 196
score: 98.71741485595703
patch: c = true ; return false ;
rank: 196
score: 98.6968994140625
patch: ( search CaMeL Chars [ i ] ) ;
rank: 196
score: 98.68290405273437
patch: CaMeL Range true return null ; return true ;
rank: 196
score: 98.66709899902344
patch: return null ; } } return ;
rank: 196
score: 98.43291473388672
patch: buffer = true ; return true ;
rank: 196
score: 98.38077545166016
patch: return $NUMBER$ ; ; return true ;
rank: 197
score: 99.00860236672794
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , cs CaMeL Length ) ;
rank: 197
score: 98.98861355251736
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs . char CaMeL At (
rank: 197
score: 98.97196138822116
patch: return search CaMeL Chars [ j ] == null . ch ;
rank: 197
score: 98.8093731219952
patch: return Array CaMeL Utils . is CaMeL Empty ( ) ; }
rank: 197
score: 98.7158432006836
patch: return true ; } } ; ;
rank: 197
score: 98.69666544596355
patch: Plane return false ; }
rank: 197
score: 98.68246799045139
patch: CaMeL Exception = true ; if true ;
rank: 197
score: 98.43212890625
patch: buffer [ j ] = true ;
rank: 197
score: 98.37982940673828
patch: return == 1 ; return true ;
rank: 198
score: 99.00803509880515
patch: return ( Array CaMeL Utils . search CaMeL Chars [ j ] == ch ) ;
rank: 198
score: 98.98785759420956
patch: return true || Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 198
score: 98.97190259850544
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( cs . char CaMeL At ( j ) ) ;
rank: 198
score: 98.80895057091347
patch: if ( search CaMeL Chars . length < cs CaMeL Length )
rank: 198
score: 98.71515502929688
patch: return true . boolean CaMeL Value = true ;
rank: 198
score: 98.69561212713069
patch: return is CaMeL Empty ( j , ch ) ;
rank: 198
score: 98.68228488498264
patch: CaMeL Range [ ] true return true ;
rank: 198
score: 98.66502685546875
patch: return true ; } } if ; return ;
rank: 198
score: 98.43164825439453
patch: ( true , true , true ;
rank: 198
score: 98.37870025634766
patch: return - ) ; return false ;
rank: 199
score: 98.97181396484375
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( ch ) ;
rank: 199
score: 98.68186442057292
patch: CaMeL List . append ( true ) ;
rank: 199
score: 98.66452026367188
patch: return null ; } else if ;
rank: 199
score: 98.43093872070312
patch: CaMeL return true ; ;
rank: 199
score: 98.37850952148438
patch: return false ; ; return $NUMBER$ ;
rank: 200
score: 98.80861409505208
patch: pos = cs . char CaMeL At ( i ) ;
rank: 200
score: 98.69467995383523
patch: return is CaMeL Empty ( cs ) ; } }
rank: 200
score: 98.68176947699652
patch: CaMeL List . contains ( true ) ;
rank: 200
score: 98.6639404296875
patch: return false ; } if ; return true ;
rank: 200
score: 98.430908203125
patch: . return true ; } true ;
rank: 200
score: 98.37832302517361
patch: return 0 . 0 ; return false ;
rank: 201
score: 99.00605604383681
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars ;
rank: 201
score: 98.9852294921875
patch: return search CaMeL Chars [ j ] . contains ( cs ) ;
rank: 201
score: 98.971728515625
patch: return this . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 201
score: 98.80816095525569
patch: if ( is CaMeL Empty ( cs ) ) {
rank: 201
score: 98.69329223632812
patch: return is CaMeL Empty ( cs ) ) ;
rank: 201
score: 98.6812235514323
patch: return new && true ;
rank: 201
score: 98.66014099121094
patch: return false ; if return false ;
rank: 201
score: 98.43089076450893
patch: $NUMBER$ ; return true ; }
rank: 201
score: 98.3782450358073
patch: return 0 ; true ;
rank: 202
score: 98.97015935724431
patch: return Array CaMeL Utils . contains ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 202
score: 98.80779559795673
patch: if ( search CaMeL Length == search CaMeL Chars . length )
rank: 202
score: 98.71037292480469
patch: return true ; } ; } ;
rank: 202
score: 98.69259643554688
patch: return new int [ ] { ch
rank: 202
score: 98.68009033203126
patch: return false ; return null ; return false ;
rank: 202
score: 98.65977647569444
patch: return false ; } } if true ;
rank: 202
score: 98.42967006138393
patch: = false ; break ; }
rank: 202
score: 98.37570190429688
patch: return false ; return - 0 ;
rank: 203
score: 99.00495461856617
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ; } }
rank: 203
score: 98.9699462890625
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] . contains CaMeL Any ( ch ) ;
rank: 203
score: 98.7100830078125
patch: return true true ; } }
rank: 203
score: 98.69135131835938
patch: return ch . equals ( ch ) ; }
rank: 203
score: 98.37566375732422
patch: ( 0 ) ; return true ;
rank: 204
score: 99.0045166015625
patch: return contains CaMeL Any ( search CaMeL Chars , ch ) ;
rank: 204
score: 98.96947303185097
patch: return search CaMeL Chars [ j ] . clear ( ) ;
rank: 204
score: 98.80637613932292
patch: return ( cs CaMeL Length >= cs CaMeL Length ) ;
rank: 204
score: 98.70958862304687
patch: return is CaMeL Empty ( ; } ; }
rank: 204
score: 98.6905517578125
patch: Plane return true ; }
rank: 204
score: 98.67845458984375
patch: CaMeL Exception = true ; } return false ;
rank: 204
score: 98.65876770019531
patch: return true ; } for true ;
rank: 204
score: 98.42806243896484
patch: server = true ; return true ;
rank: 204
score: 98.37543402777777
patch: return ; { return ; = true ;
rank: 205
score: 99.00442504882812
patch: return ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 205
score: 98.98337965745192
patch: return cs . contains CaMeL Any ( cs , ch ) ;
rank: 205
score: 98.80608661358173
patch: if ( search CaMeL Length > search CaMeL Chars . length )
rank: 205
score: 98.708740234375
patch: m = true ; return true ; } }
rank: 205
score: 98.6781234741211
patch: return false ; true return false ;
rank: 205
score: 98.65854220920139
patch: return false ; } catch return false ;
rank: 205
score: 98.4272689819336
patch: ( true , true , false )
rank: 205
score: 98.37494659423828
patch: return 0 ; ; return null ;
rank: 206
score: 99.00422498914931
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , cs . char CaMeL
rank: 206
score: 98.96902598505434
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 206
score: 98.80553327287946
patch: return ! return true ; }
rank: 206
score: 98.70765991210938
patch: return is CaMeL Blank ( ch ) ; }
rank: 206
score: 98.6779052734375
patch: CaMeL Range = return true ; return false ;
rank: 206
score: 98.42623901367188
patch: ret = true ; return true ;
rank: 206
score: 98.37458147321429
patch: return false ; return ; {
rank: 207
score: 98.98212028952206
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , name ) ;
rank: 207
score: 98.96884987571023
patch: return cs . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 207
score: 98.80439897017045
patch: if ( search CaMeL Chars . length > 0 )
rank: 207
score: 98.70700412326389
patch: return false ; } return true ; }
rank: 207
score: 98.68929443359374
patch: return cs . equals ( ch ) ; }
rank: 207
score: 98.677490234375
patch: return true ; return true ; true ;
rank: 207
score: 98.65794677734375
patch: return is CaMeL Empty ( true ; return ;
rank: 207
score: 98.42520577566964
patch: . char ch = true ;
rank: 207
score: 98.37422010633681
patch: return 0 ; return false ; break ;
rank: 208
score: 99.00091911764706
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , 0 ) ;
rank: 208
score: 98.98141140407986
patch: return Char CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 208
score: 98.80353338068181
patch: if ( j >= search CaMeL Chars . length )
rank: 208
score: 98.70631917317708
patch: return is CaMeL Empty ( ; } }
rank: 208
score: 98.68893432617188
patch: contains [ j ] = false ;
rank: 208
score: 98.67726643880208
patch: return new && true ; return true ;
rank: 208
score: 98.65762668185764
patch: . return false ; } return false ;
rank: 208
score: 98.42515563964844
patch: . return false ; } break ;
rank: 208
score: 98.37252807617188
patch: return is ( true ) ; ;
rank: 209
score: 98.96818033854167
patch: return ( this . search CaMeL Chars [ j ] == ch ) ;
rank: 209
score: 98.70573120117187
patch: return true ; } else { break ; }
rank: 209
score: 98.68874289772727
patch: return search CaMeL Chars [ j ] != null ;
rank: 209
score: 98.67595825195312
patch: CaMeL Number return true ; } return false ;
rank: 209
score: 98.65749782986111
patch: return return false ; } return false ;
rank: 209
score: 98.37251499720982
patch: return false ; return $STRING$ ;
rank: 210
score: 99.0005215731534
patch: return Array CaMeL Utils . contains ( cs ) ;
rank: 210
score: 98.98053337545956
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , search CaMeL Length ) ;
rank: 210
score: 98.96814643012152
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] . contains ( ch ) ;
rank: 210
score: 98.80137282151442
patch: if ( search CaMeL Chars . length <= cs CaMeL Length )
rank: 210
score: 98.70406494140624
patch: return true ; } ; } return true ;
rank: 210
score: 98.68707275390625
patch: Plane return is CaMeL Empty ( cs ) ;
rank: 210
score: 98.65740288628473
patch: return return true ; } } return ;
rank: 210
score: 98.42481994628906
patch: . return false ; return false ;
rank: 210
score: 98.37147352430556
patch: return true ; true ; return true ;
rank: 211
score: 98.97955681295956
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs , ch ) ;
rank: 211
score: 98.96753991168478
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 211
score: 98.80113002232143
patch: if ( cs . to CaMeL Lower CaMeL Case ( ) ) {
rank: 211
score: 98.70315551757812
patch: return true ; default : return false ; }
rank: 211
score: 98.68651123046875
patch: return is CaMeL Empty ( ch ) ) ;
rank: 211
score: 98.67042371961806
patch: return true ; ; if return false ;
rank: 211
score: 98.65643988715277
patch: CaMeL Error . return ( true ) ;
rank: 211
score: 98.42291259765625
patch: peer = true ; return true ;
rank: 211
score: 98.37125396728516
patch: CaMeL += $NUMBER$ ; return true ;
rank: 212
score: 99.00007629394531
patch: return search CaMeL Chars . get ( ch ) . contains ( ch ) ;
rank: 212
score: 98.97889811197916
patch: return true . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 212
score: 98.96676025390624
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , search CaMeL Chars [ j ] ) ;
rank: 212
score: 98.7991192157452
patch: return ( cs . char CaMeL At ( search CaMeL Chars .
rank: 212
score: 98.68554077148437
patch: return $STRING$ . is CaMeL Empty ( ) ;
rank: 212
score: 98.66846466064453
patch: CaMeL List . true return false ;
rank: 212
score: 98.65602111816406
patch: return return true ; break ; }
rank: 212
score: 98.42276000976562
patch: r = true ; return true ;
rank: 212
score: 98.37091064453125
patch: return 0 ; while true ;
rank: 213
score: 98.99801296657986
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars . char CaMeL
rank: 213
score: 98.97838416466347
patch: return Array CaMeL Utils . contains ( ch , ch ) ;
rank: 213
score: 98.96652456430289
patch: return ( search CaMeL Chars [ i ] == ch ) ;
rank: 213
score: 98.79904174804688
patch: if ( is . is CaMeL Empty ( ) ) {
rank: 213
score: 98.70016140407986
patch: return true ; } break ; } }
rank: 213
score: 98.68488103693181
patch: return search CaMeL Chars [ i ] >= ch ;
rank: 213
score: 98.66724243164063
patch: CaMeL Exception return true ; ; return false ;
rank: 213
score: 98.654833984375
patch: return null ; }
rank: 213
score: 98.37046813964844
patch: return false ; return - false ;
rank: 214
score: 98.99742216222427
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , 1 ) ;
rank: 214
score: 98.9775390625
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , ch , ch ) ;
rank: 214
score: 98.96620396205357
patch: return $STRING$ . equals ( search CaMeL Chars [ j ] ) ;
rank: 214
score: 98.798779296875
patch: return ( cs . char CaMeL At ( 0 ) == ch ) ;
rank: 214
score: 98.70010986328126
patch: return true ; * / return true ; }
rank: 214
score: 98.68468128551136
patch: return search CaMeL Chars [ j ] == this ;
rank: 214
score: 98.66708984375
patch: CaMeL Range true return true ; return false ;
rank: 214
score: 98.65451049804688
patch: return true ; } / * return false ;
rank: 214
score: 98.42176818847656
patch: cached = true ; break ; }
rank: 214
score: 98.37006378173828
patch: CaMeL List ( ) . true ;
rank: 215
score: 98.99658203125
patch: return search CaMeL Chars [ j ] == ch ; } }
rank: 215
score: 98.96614074707031
patch: return ! search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 215
score: 98.69926452636719
patch: return true ; ; } break ;
rank: 215
score: 98.68201904296875
patch: Plane return search CaMeL Chars [ j ] ;
rank: 215
score: 98.66690673828126
patch: CaMeL List . true true ; return true ;
rank: 215
score: 98.6544189453125
patch: return is true return false ; }
rank: 215
score: 98.42146301269531
patch: . return is CaMeL Empty ( ;
rank: 215
score: 98.36990017361111
patch: return size != 0 ; return true ;
rank: 216
score: 98.99567057291667
patch: return ( Array CaMeL Utils . is CaMeL Empty ( ch ) ) ;
rank: 216
score: 98.9771728515625
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Lower CaMeL Case ( ) ;
rank: 216
score: 98.96572875976562
patch: return ( cs == ch ) ;
rank: 216
score: 98.79715670072116
patch: return search CaMeL Length < search CaMeL Chars . length ; }
rank: 216
score: 98.69900512695312
patch: return ! is CaMeL Empty ( return ) ;
rank: 216
score: 98.68007590553977
patch: return ! search CaMeL Chars [ j ] ; }
rank: 216
score: 98.66617584228516
patch: return new return ( true ) ;
rank: 216
score: 98.65362548828125
patch: return is CaMeL Whitespace ( true ) ;
rank: 216
score: 98.42057037353516
patch: reader = true ; return true ;
rank: 216
score: 98.36808776855469
patch: ( false ) ; return 1 ;
rank: 217
score: 98.99418809678819
patch: return search CaMeL Chars [ search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 217
score: 98.97687844669117
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , $STRING$ ) ;
rank: 217
score: 98.79643903459821
patch: int search CaMeL Length = search CaMeL Chars . length - 1 ;
rank: 217
score: 98.69883219401042
patch: return true ; ; } return false ;
rank: 217
score: 98.67972140842014
patch: return false ; } j ++ ; }
rank: 217
score: 98.66588677300348
patch: CaMeL Process . return ( true ) ;
rank: 217
score: 98.36771392822266
patch: return return ; { return true ;
rank: 218
score: 98.97639545641448
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( search CaMeL Chars , i ) ;
rank: 218
score: 98.96420627170139
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Length ) ;
rank: 218
score: 98.79551344651442
patch: return search CaMeL Length < search CaMeL Chars . length ) ;
rank: 218
score: 98.67963409423828
patch: return ( false || true ) ;
rank: 218
score: 98.66571723090277
patch: CaMeL Range true return this . true ;
rank: 218
score: 98.42035784040179
patch: = false ; return true ;
rank: 218
score: 98.36729213169643
patch: return ; { return false ;
rank: 219
score: 98.99319458007812
patch: return search CaMeL Chars [ i ] == ch ) ;
rank: 219
score: 98.9762824563419
patch: return search CaMeL Chars [ j ] != ch . to CaMeL String ( ) ;
rank: 219
score: 98.96382962740384
patch: return search CaMeL Chars [ j ] == ch . null ;
rank: 219
score: 98.79493204752605
patch: return is CaMeL Empty ( search CaMeL Chars ) ; }
rank: 219
score: 98.69833713107639
patch: return is CaMeL Empty ( true ; }
rank: 219
score: 98.6655517578125
patch: return true ; true ; if return false ;
rank: 219
score: 98.42025320870536
patch: CaMeL State . return true ;
rank: 220
score: 98.99229079026442
patch: return search CaMeL Chars . is CaMeL Empty ( ) ; }
rank: 220
score: 98.97617059004934
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( true , cs ) ;
rank: 220
score: 98.9628269361413
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 220
score: 98.7948974609375
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , 0 ) ;
rank: 220
score: 98.67900390625
patch: return this . is CaMeL Empty ( ) ;
rank: 220
score: 98.66539306640625
patch: return this . true ; ; return null ;
rank: 220
score: 98.65224880642361
patch: CaMeL State . return true ; } }
rank: 220
score: 98.41751098632812
patch: chars [ j ] = true ;
rank: 221
score: 98.99207899305556
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) return false ;
rank: 221
score: 98.96240234375
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) == ch ;
rank: 221
score: 98.79339599609375
patch: if ( search CaMeL Length == cs CaMeL Length ) {
rank: 221
score: 98.66525607638889
patch: CaMeL Range < ] : return true ;
rank: 221
score: 98.65184783935547
patch: return false ; } } true ;
rank: 221
score: 98.41706085205078
patch: p = return true ; break ;
rank: 221
score: 98.36593191964286
patch: return ; = return true ;
rank: 222
score: 98.9758633700284
patch: return ch . contains CaMeL Any ( cs ) ;
rank: 222
score: 98.96228637695313
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars [ i ] ) ;
rank: 222
score: 98.79320068359375
patch: Assert . is CaMeL True ( true ) ;
rank: 222
score: 98.69393920898438
patch: return true ; } } ) ;
rank: 222
score: 98.6755615234375
patch: cs = search CaMeL Chars [ j ] ;
rank: 222
score: 98.66505262586806
patch: CaMeL Error = true ; return null ;
rank: 222
score: 98.65117730034723
patch: return is CaMeL Blank ( true ) ;
rank: 222
score: 98.41696602957589
patch: [ j ] = true ;
rank: 222
score: 98.36589050292969
patch: return 0 + true ; break ;
rank: 223
score: 98.99055311414931
patch: return search CaMeL Chars . get ( ch ) . contains ( search CaMeL Chars ) ;
rank: 223
score: 98.97565056295956
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( cs , ch ) ;
rank: 223
score: 98.96224271334134
patch: return cs . char CaMeL At ( j ) != ch ;
rank: 223
score: 98.79275076729911
patch: if ( Array CaMeL Utils . is CaMeL Empty ( ) ) {
rank: 223
score: 98.69380493164063
patch: return ! is CaMeL Empty ( ch , ;
rank: 223
score: 98.66456821986607
patch: CaMeL Number true return true ;
rank: 223
score: 98.41493225097656
patch: ( true , false , true )
rank: 223
score: 98.36538357204861
patch: return 0 ; ; ; return true ;
rank: 224
score: 98.99018205915179
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [
rank: 224
score: 98.97514792049633
patch: return Char CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , ch ) ;
rank: 224
score: 98.79258375901442
patch: if ( search CaMeL Chars . length > cs CaMeL Length )
rank: 224
score: 98.67356178977273
patch: return false ; contains CaMeL Any ( ch ) ;
rank: 224
score: 98.66400756835938
patch: CaMeL Boolean = true ; if return true ;
rank: 224
score: 98.4146499633789
patch: return false ; if ( true )
rank: 224
score: 98.36387125651042
patch: return 0 ; return 1 ; break ;
rank: 225
score: 98.97482096354166
patch: return ch . contains CaMeL Any ( ch , search CaMeL Chars ) ;
rank: 225
score: 98.79256766183036
patch: byte CaMeL Value = cs . char CaMeL At ( j ) ;
rank: 225
score: 98.69137234157986
patch: b = true ; break ; } }
rank: 225
score: 98.64875793457031
patch: return null ; } } if ;
rank: 225
score: 98.4142837524414
patch: formatter = true ; return true ;
rank: 225
score: 98.36285400390625
patch: CaMeL += ( return ) true ; ;
rank: 226
score: 98.9898193359375
patch: return this . search CaMeL Chars [ cs CaMeL Length ] == ch ;
rank: 226
score: 98.97479607077206
patch: return Array CaMeL Utils . contains CaMeL Any ( cs CaMeL Length , ch ) ;
rank: 226
score: 98.96148390997024
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . is CaMeL Empty ( ) ;
rank: 226
score: 98.79201096754808
patch: if ( Array CaMeL Utils . is CaMeL Empty ( cs CaMeL
rank: 226
score: 98.68959045410156
patch: return true ; default : break ;
rank: 226
score: 98.66869354248047
patch: return this . return false ; }
rank: 226
score: 98.66330295138889
patch: return true ; ; else return true ;
rank: 226
score: 98.64874267578125
patch: return is CaMeL Empty && true ; } }
rank: 226
score: 98.41357421875
patch: n = true ; break ; }
rank: 226
score: 98.36097063337054
patch: return false ; return ; ;
rank: 227
score: 98.98931525735294
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , cs CaMeL Length ) ;
rank: 227
score: 98.96142578125
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . to CaMeL String ( ) ;
rank: 227
score: 98.79086538461539
patch: if ( cs CaMeL Length == search CaMeL Chars . length )
rank: 227
score: 98.68956298828125
patch: CaMeL true = true ; break ; } }
rank: 227
score: 98.66863335503473
patch: return false ; } return false ; }
rank: 227
score: 98.66326904296875
patch: CaMeL Range = true ; return true ; }
rank: 227
score: 98.64810519748264
patch: return true ; } * * * /
rank: 227
score: 98.41263580322266
patch: validate = true ; return true ;
rank: 227
score: 98.35939534505208
patch: CaMeL List ( return ) ; return ;
rank: 228
score: 98.97223864103618
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . next ) ;
rank: 228
score: 98.96048736572266
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( $STRING$ ) ;
rank: 228
score: 98.79017130533855
patch: if ( ! search CaMeL Chars [ j ] ) {
rank: 228
score: 98.66844940185547
patch: return false ; / * * /
rank: 228
score: 98.663134765625
patch: CaMeL Range ( true ) ; return false ;
rank: 228
score: 98.64771185980902
patch: CaMeL List true = true ; return ;
rank: 228
score: 98.41218566894531
patch: image = true ; break ; }
rank: 228
score: 98.35855102539062
patch: return size ; ; return true ;
rank: 229
score: 98.98902180989583
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Length ) ;
rank: 229
score: 98.97098795572917
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars 1 , ch ) ;
rank: 229
score: 98.96046849300987
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars . length ;
rank: 229
score: 98.68766276041667
patch: return true ; } if ( true ;
rank: 229
score: 98.66802106584821
patch: return ( return true ) ;
rank: 229
score: 98.66300964355469
patch: CaMeL Range true return true ; ;
rank: 229
score: 98.6474365234375
patch: return this . true ; return false ; }
rank: 229
score: 98.41217803955078
patch: $NUMBER$ . return ( true ) ;
rank: 229
score: 98.35788981119792
patch: return true ; return ;
rank: 230
score: 98.98893737792969
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars ) ; }
rank: 230
score: 98.9596435546875
patch: return Array CaMeL Utils . equals ( cs , cs . char CaMeL At ( j ) ) ;
rank: 230
score: 98.78800455729167
patch: return search CaMeL Chars [ j ] == ch ) {
rank: 230
score: 98.66538783482143
patch: Plane return return true ; }
rank: 230
score: 98.66206868489583
patch: return this . return ( true ) ;
rank: 230
score: 98.64723714192708
patch: return is CaMeL Alive ( true ) ;
rank: 230
score: 98.41159057617188
patch: meta = true ; return true ;
rank: 230
score: 98.35776095920139
patch: CaMeL do = true ; return ; {
rank: 231
score: 98.97062683105469
patch: return ! search CaMeL Chars [ j ] . contains CaMeL Any ( ) ;
rank: 231
score: 98.95901621942934
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Not CaMeL Empty ( ) ;
rank: 231
score: 98.7864990234375
patch: if ( search CaMeL Chars . length < search CaMeL Length )
rank: 231
score: 98.66149291992187
patch: CaMeL Exception return true ; ; return true ;
rank: 231
score: 98.64722442626953
patch: return true ; for ; * /
rank: 231
score: 98.41072082519531
patch: buffer = true ; break ; }
rank: 231
score: 98.35750325520833
patch: CaMeL List ( ) ; return ; {
rank: 232
score: 98.98636881510417
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Length ) ;
rank: 232
score: 98.9590087890625
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , search CaMeL Chars [ j ] ) ;
rank: 232
score: 98.68556518554688
patch: CaMeL true = true ; return false ; }
rank: 232
score: 98.6642578125
patch: return new int [ ] { cs CaMeL Length
rank: 232
score: 98.66138458251953
patch: CaMeL Exception true ; return false ;
rank: 232
score: 98.64682006835938
patch: return is CaMeL Supported ( true ) ; }
rank: 232
score: 98.41065216064453
patch: |= true ; return true ; }
rank: 232
score: 98.35633002387152
patch: CaMeL Char CaMeL Set ( true ) ;
rank: 233
score: 98.970458984375
patch: return Array CaMeL Utils . contains CaMeL Any ( true , ch ) ;
rank: 233
score: 98.95878770616319
patch: return contains CaMeL Any ( cs , cs . char CaMeL At ( j ) ) ;
rank: 233
score: 98.78533935546875
patch: addr = cs . char CaMeL At ( i ) ;
rank: 233
score: 98.68528747558594
patch: return ( true , true ) ;
rank: 233
score: 98.66417846679687
patch: s = search CaMeL Chars [ j ] ;
rank: 233
score: 98.66065131293402
patch: CaMeL List . equals ( true ) ;
rank: 233
score: 98.64661407470703
patch: return true ; } / * ;
rank: 233
score: 98.41010284423828
patch: filter = true ; break ; }
rank: 234
score: 98.95870267427884
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] ;
rank: 234
score: 98.78505859375
patch: if ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ,
rank: 234
score: 98.66301618303571
patch: return ( false ) ; }
rank: 234
score: 98.66063774956598
patch: CaMeL List true return this . true ;
rank: 234
score: 98.6464335123698
patch: return false ; } ;
rank: 234
score: 98.4092788696289
patch: item = true ; return true ;
rank: 234
score: 98.35594940185547
patch: return return ) ; return false ;
rank: 235
score: 98.98529730902777
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , char CaMeL At ;
rank: 235
score: 98.95854048295455
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , cs . char CaMeL At ( j ) ) ;
rank: 235
score: 98.78431114783653
patch: if ( ! search CaMeL Chars [ j ] == ch )
rank: 235
score: 98.68502371651786
patch: return true return true ; }
rank: 235
score: 98.6613037109375
patch: search CaMeL Chars [ i ] = cs ;
rank: 235
score: 98.66040649414063
patch: CaMeL List true return true ; return true ;
rank: 235
score: 98.64640808105469
patch: return null ;
rank: 235
score: 98.40913391113281
patch: CaMeL ; if ( true ) ;
rank: 235
score: 98.3546142578125
patch: return 0 . 0 - true ;
rank: 236
score: 98.98480987548828
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars ,
rank: 236
score: 98.95849609375
patch: return cs . contains CaMeL Any ( ch , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 236
score: 98.78390737680289
patch: if ( cs CaMeL Length < search CaMeL Chars . length )
rank: 236
score: 98.66105651855469
patch: return false ; i ++ ; }
rank: 236
score: 98.66031494140626
patch: CaMeL Range = true ; while return true ;
rank: 236
score: 98.64581298828125
patch: return is CaMeL Empty ( true ; } }
rank: 236
score: 98.40828704833984
patch: CaMeL true ; return true ; }
rank: 236
score: 98.3545913696289
patch: return size ; { return true ;
rank: 237
score: 98.966845703125
patch: return Char CaMeL Utils . contains CaMeL Any ( ch , ch ) ;
rank: 237
score: 98.78368268694196
patch: if ( ! ! cs . is CaMeL Empty ( ) ) {
rank: 237
score: 98.68362087673611
patch: . return true ; } break ; }
rank: 237
score: 98.65994262695312
patch: return false ; true ; } }
rank: 237
score: 98.65950520833333
patch: CaMeL List . ; if return true ;
rank: 237
score: 98.64532470703125
patch: return is CaMeL Empty ; return null ;
rank: 237
score: 98.40567452566964
patch: = new ; return true ;
rank: 238
score: 98.9840087890625
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars [
rank: 238
score: 98.9664306640625
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars ) ; }
rank: 238
score: 98.95814005533855
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 238
score: 98.68324110243056
patch: cr = true ; return true ; }
rank: 238
score: 98.65986633300781
patch: return this . return true ; }
rank: 238
score: 98.65924072265625
patch: return true ; return null ; true ;
rank: 238
score: 98.6443359375
patch: return false ; } else { return false ;
rank: 238
score: 98.40447126116071
patch: item = true ; break ;
rank: 238
score: 98.35334014892578
patch: CaMeL do = ; return true ;
rank: 239
score: 98.98378619025735
patch: return search CaMeL Chars [ cs CaMeL Length ] < search CaMeL Chars . length ;
rank: 239
score: 98.96617024739584
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , true ) ;
rank: 239
score: 98.682568359375
patch: return true ; } else if ( ; }
rank: 239
score: 98.65959821428571
patch: return false ; } } }
rank: 239
score: 98.65869140625
patch: CaMeL Number = true ; while return true ;
rank: 239
score: 98.64404975043402
patch: return true ; if return false ; }
rank: 239
score: 98.40241350446429
patch: . return false ; break ;
rank: 239
score: 98.35319010416667
patch: return false ; return false ; break ;
rank: 240
score: 98.98321533203125
patch: return is CaMeL Empty ( cs . char CaMeL At ( i ) ) ;
rank: 240
score: 98.96580505371094
patch: return ch . contains CaMeL Any ( search CaMeL Chars [ i ] ) ;
rank: 240
score: 98.68102349175348
patch: z = true ; return true ; }
rank: 240
score: 98.65957641601562
patch: ch = true ; return false ;
rank: 240
score: 98.6583480834961
patch: return null ; return false ; ;
rank: 240
score: 98.40046037946429
patch: ( ; return true ) ;
rank: 240
score: 98.35274505615234
patch: return ; { return - 1 ;
rank: 241
score: 98.98314073350694
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars _
rank: 241
score: 98.9644546508789
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs , ch ) ;
rank: 241
score: 98.9577969637784
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , cs . char CaMeL At ( j ) ) ;
rank: 241
score: 98.67901611328125
patch: return true return true ; } }
rank: 241
score: 98.65831298828125
patch: CaMeL Range true = true ; return true ;
rank: 241
score: 98.64379272460937
patch: return is CaMeL Empty return true ; } ;
rank: 241
score: 98.39485386439732
patch: [ ] return true ; }
rank: 241
score: 98.35258265904018
patch: return size ; return true ;
rank: 242
score: 98.98313275505515
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars + ch ) ;
rank: 242
score: 98.95767647879464
patch: return search CaMeL Chars [ j ] . equals ( $STRING$ ) ;
rank: 242
score: 98.78206961495536
patch: return Array CaMeL Utils . contains ( search CaMeL Chars ) ; }
rank: 242
score: 98.67881774902344
patch: . return true ; } } ;
rank: 242
score: 98.65828450520833
patch: CaMeL Category . return ( true ) ;
rank: 242
score: 98.65618896484375
patch: return false ; j ++ ;
rank: 242
score: 98.64344024658203
patch: return is ; return true ; }
rank: 242
score: 98.39152308872768
patch: &= true ; return true ;
rank: 242
score: 98.35177612304688
patch: return == true ; return true ;
rank: 243
score: 98.96392144097223
patch: return Array CaMeL Utils . is CaMeL Empty ( cs ) . contains ( ch ) ;
rank: 243
score: 98.9565899188702
patch: return search CaMeL Chars [ j ] . clone ( ) ;
rank: 243
score: 98.78156389508929
patch: return Array CaMeL Utils . is CaMeL Empty ( true ) ; }
rank: 243
score: 98.67863464355469
patch: return ! is CaMeL Empty ; }
rank: 243
score: 98.6579345703125
patch: CaMeL Null ( true ) ; return false ;
rank: 243
score: 98.65555826822917
patch: return true ; } j ++ ; }
rank: 243
score: 98.64276733398438
patch: return true ; } } else return false ;
rank: 243
score: 98.39088948567708
patch: CaMeL Enum return true ;
rank: 243
score: 98.34929741753473
patch: CaMeL List ( ) ; return ; ;
rank: 244
score: 98.98250325520833
patch: return search CaMeL Chars . to CaMeL String ( ) ;
rank: 244
score: 98.96389431423611
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) return true ;
rank: 244
score: 98.9565493935033
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . run ( ) ;
rank: 244
score: 98.78136335100446
patch: if ( ! search CaMeL Chars . is CaMeL Empty ( ) )
rank: 244
score: 98.67859564887152
patch: return ; } } } return false ;
rank: 244
score: 98.65792410714286
patch: CaMeL Range return return true ;
rank: 244
score: 98.64081682477679
patch: return is ; return false ;
rank: 244
score: 98.38997105189732
patch: * / if ( true )
rank: 244
score: 98.34870910644531
patch: return return true ; return false ;
rank: 245
score: 98.95644996279762
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars [ i ] ) ;
rank: 245
score: 98.78124060997597
patch: if ( search CaMeL Chars . length < search CaMeL Chars .
rank: 245
score: 98.67848714192708
patch: . true * / return true ; }
rank: 245
score: 98.65724690755208
patch: return false ; return true ; true ;
rank: 245
score: 98.65251922607422
patch: contains [ j ] = ch ;
rank: 245
score: 98.64012993706598
patch: return ; * * * * * /
rank: 245
score: 98.38986642020089
patch: s = true ; break ;
rank: 245
score: 98.34748077392578
patch: return is ; ; return true ;
rank: 246
score: 98.95505593039773
patch: return search CaMeL Chars [ j ] != $STRING$ ;
rank: 246
score: 98.78047398158482
patch: return ! Array CaMeL Utils . contains ( search CaMeL Chars ) ;
rank: 246
score: 98.65720912388393
patch: CaMeL List . return true ;
rank: 246
score: 98.65052141462054
patch: Plane return return false ; }
rank: 246
score: 98.638720703125
patch: return true ; } } ; return false ;
rank: 246
score: 98.3469009399414
patch: return false ; ; if return ;
rank: 247
score: 98.9546127319336
patch: return ! search CaMeL Chars [ j ] . to CaMeL Object ( ) ;
rank: 247
score: 98.78004557291666
patch: return ( cs . char CaMeL At ( j ) == ch ) {
rank: 247
score: 98.65614624023438
patch: CaMeL List . ; else { return true ;
rank: 247
score: 98.64829508463542
patch: return cs [ i ] == ch ;
rank: 247
score: 98.6382827758789
patch: return ; } if return true ;
rank: 247
score: 98.34616088867188
patch: return true ; return return true ;
rank: 248
score: 98.98113458806819
patch: return is CaMeL Empty ( search CaMeL Length ) ;
rank: 248
score: 98.96124626608456
patch: return cs . contains CaMeL Any ( cs , search CaMeL Chars . length ) ;
rank: 248
score: 98.780029296875
patch: if ( search CaMeL Chars . length <= search CaMeL Length )
rank: 248
score: 98.67795817057292
patch: return ; } } } return true ;
rank: 248
score: 98.65585666232639
patch: CaMeL List != null ? return true ;
rank: 248
score: 98.64694649832589
patch: return false ; i ++ ;
rank: 248
score: 98.63792419433594
patch: return true ; } / * /
rank: 248
score: 98.38451276506696
patch: return false ; } else {
rank: 248
score: 98.34612274169922
patch: return ! true ; return 1 ;
rank: 249
score: 98.98053337545956
patch: return search CaMeL Chars [ search CaMeL Chars . size ( ) ] == ch ;
rank: 249
score: 98.96123589409723
patch: return Array CaMeL Utils . contains CaMeL Any ( ( Char CaMeL Sequence ) cs ) ;
rank: 249
score: 98.9541015625
patch: return Array CaMeL Utils . equals ( cs , search CaMeL Chars [ j ] ) ;
rank: 249
score: 98.77991739908855
patch: expr = cs . char CaMeL At ( i ) ;
rank: 249
score: 98.67733764648438
patch: return false ; ; }
rank: 249
score: 98.65554809570312
patch: return false ; ; ; if return true ;
rank: 249
score: 98.64363316127232
patch: Plane { return false ; }
rank: 249
score: 98.6371337890625
patch: return false ; } if ; return false ;
rank: 249
score: 98.38170514787946
patch: b = true ; break ;
rank: 249
score: 98.34561593191964
patch: return 1 ; return true ;
rank: 250
score: 98.98010971966912
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs , true ) ;
rank: 250
score: 98.96098327636719
patch: return cs . contains CaMeL Any ( search CaMeL Chars [ i ] ) ;
rank: 250
score: 98.95406765407986
patch: return cs . contains CaMeL Any ( ch , search CaMeL Chars [ j ] ) ;
rank: 250
score: 98.77972412109375
patch: if ( cs . char CaMeL At ( i ) == ch )
rank: 250
score: 98.67725481305804
patch: c = ; return true ;
rank: 250
score: 98.64215850830078
patch: ch = true ; return true ;
rank: 250
score: 98.63700561523437
patch: return true ; } * / return false ;
rank: 250
score: 98.37922886439732
patch: state = true ; break ;
rank: 250
score: 98.34524536132812
patch: ( true ) ; return false ;
rank: 251
score: 98.96084255642361
patch: return Array CaMeL Utils . is CaMeL Empty ( ( Char CaMeL Sequence ) cs ) ;
rank: 251
score: 98.95404343377976
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . length ) ;
rank: 251
score: 98.77968186598558
patch: if ( ! ch . is CaMeL Empty ( ) ) {
rank: 251
score: 98.67383490668402
patch: CaMeL ; do { return true ; }
rank: 251
score: 98.65519409179687
patch: CaMeL List . ; else { return false ;
rank: 251
score: 98.64198521205357
patch: Plane { return true ; }
rank: 251
score: 98.6361083984375
patch: return true ; } catch ; }
rank: 251
score: 98.37656075613839
patch: . char CaMeL At ( ;
rank: 251
score: 98.3448257446289
patch: CaMeL Builder ( ; return true ;
rank: 252
score: 98.97952974759616
patch: return contains CaMeL Any ( search CaMeL Chars , cs ) ;
rank: 252
score: 98.96080729166667
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] != ch ;
rank: 252
score: 98.77877103365384
patch: return ( is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 252
score: 98.67375183105469
patch: p = true ; return false ;
rank: 252
score: 98.65504673549107
patch: CaMeL List return return true ;
rank: 252
score: 98.63487548828125
patch: return true ; } / * * * /
rank: 252
score: 98.37568010602679
patch: . return true ; true ;
rank: 252
score: 98.34388224283855
patch: return 0 . true ;
rank: 253
score: 98.9607292624081
patch: return Array CaMeL Utils . contains CaMeL Any ( true , search CaMeL Chars ) ;
rank: 253
score: 98.95362490699405
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , i ) ;
rank: 253
score: 98.7777850811298
patch: return Math . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 253
score: 98.67336600167411
patch: p = ; return true ;
rank: 253
score: 98.65438079833984
patch: return false ; return null true ;
rank: 253
score: 98.64079938616071
patch: return false ; / * /
rank: 253
score: 98.37535400390625
patch: if ( true )
rank: 253
score: 98.34383392333984
patch: ; { return ; = true ;
rank: 254
score: 98.9779803936298
patch: return search CaMeL Chars [ j ] == search CaMeL Chars ;
rank: 254
score: 98.96071905838816
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . name ) ;
rank: 254
score: 98.77731323242188
patch: target = cs . char CaMeL At ( j ) ;
rank: 254
score: 98.67260064019098
patch: . * / return true ; } }
rank: 254
score: 98.65424194335938
patch: CaMeL Exception = true ; return false ; ;
rank: 254
score: 98.63451470269098
patch: return is CaMeL Equals ( true ) ;
rank: 254
score: 98.34351942274306
patch: CaMeL List ( ) ; true ; ;
rank: 255
score: 98.9776278409091
patch: return search CaMeL Chars . add ( ch ) ;
rank: 255
score: 98.96047634548611
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars , ) ;
rank: 255
score: 98.95294952392578
patch: return search CaMeL Chars [ j ] . starts CaMeL With ( ch ) ;
rank: 255
score: 98.77651977539062
patch: return ( true . is CaMeL Empty ( ) ) ;
rank: 255
score: 98.6712646484375
patch: return true ; } ++ true ;
rank: 255
score: 98.65416717529297
patch: CaMeL Range [ ; return true ;
rank: 255
score: 98.63690185546875
patch: Plane return return true ;
rank: 255
score: 98.63436453683036
patch: return false ; } if ;
rank: 255
score: 98.37116350446429
patch: ret = true ; break ;
rank: 256
score: 98.97754669189453
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , search CaMeL Chars ,
rank: 256
score: 98.96040613511029
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , 1 ) ;
rank: 256
score: 98.77642415364583
patch: System . if ( search CaMeL Chars [ j ] == ch ) {
rank: 256
score: 98.67090521918402
patch: . return true ; return true ; }
rank: 256
score: 98.63424072265624
patch: return true ; } if return true ; }
rank: 256
score: 98.37071010044643
patch: f = true ; break ;
rank: 256
score: 98.34248182508681
patch: CaMeL += ( true ) ; return ;
rank: 257
score: 98.96017937911184
patch: return Array CaMeL Utils . contains ( search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 257
score: 98.95194868607955
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 257
score: 98.77618408203125
patch: if ( cs . char CaMeL At ( j ) == ch )
rank: 257
score: 98.65255398220486
patch: CaMeL Range = false ; return true ;
rank: 257
score: 98.63401794433594
patch: return is CaMeL Empty return true ;
rank: 257
score: 98.63280487060547
patch: return true ; / * * /
rank: 257
score: 98.36943708147321
patch: val = true ; break ;
rank: 257
score: 98.34100341796875
patch: return false + true ;
rank: 258
score: 98.97500949435764
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ) ) ;
rank: 258
score: 98.95964612458882
patch: return ( true && Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 258
score: 98.95154339334239
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 258
score: 98.77567232572116
patch: if ( cs . length < search CaMeL Chars . length )
rank: 258
score: 98.6694107055664
patch: return true ; } * / ;
rank: 258
score: 98.63387298583984
patch: return false ; } * * /
rank: 258
score: 98.63255310058594
patch: return false ; j ++ ; }
rank: 258
score: 98.36781529017857
patch: . return this . true ;
rank: 258
score: 98.34079996744792
patch: return 0 ; true ; return true ;
rank: 259
score: 98.97494686351104
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ cs CaMeL Length
rank: 259
score: 98.95034450954861
patch: return is CaMeL Empty ( cs , cs . char CaMeL At ( j ) ) ;
rank: 259
score: 98.77560221354166
patch: return ( is . char CaMeL At ( j ) == ch ) ;
rank: 259
score: 98.650146484375
patch: CaMeL List true ; return true ;
rank: 259
score: 98.63317108154297
patch: return false ; } if return ;
rank: 259
score: 98.36680385044643
patch: . char value = true ;
rank: 259
score: 98.34031846788194
patch: return size != true ; return false ;
rank: 260
score: 98.97460219439338
patch: return search CaMeL Chars . get ( ch ) . to CaMeL String ( ) ;
rank: 260
score: 98.9586669921875
patch: return search CaMeL Chars [ search CaMeL Chars . length ] == ch ;
rank: 260
score: 98.77440795898437
patch: return ! is CaMeL Empty ( cs ) ;
rank: 260
score: 98.64901123046874
patch: CaMeL List . return ( true ) ; ;
rank: 260
score: 98.63252563476563
patch: CaMeL List return true ; return false ; }
rank: 260
score: 98.36672537667411
patch: . return Boolean . TRUE ;
rank: 260
score: 98.33902994791667
patch: CaMeL List ( true != true ) ;
rank: 261
score: 98.97406768798828
patch: return search CaMeL Chars [ search CaMeL Chars . char CaMeL At ( i )
rank: 261
score: 98.94919162326389
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j ) != ch ;
rank: 261
score: 98.7735595703125
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ,
rank: 261
score: 98.66531032986111
patch: manifest = true ; return true ; }
rank: 261
score: 98.64876980251736
patch: CaMeL value = true ; return false ;
rank: 261
score: 98.36588541666667
patch: = this . true ;
rank: 261
score: 98.33881378173828
patch: CaMeL List ( true ) ; ;
rank: 262
score: 98.97399088541667
patch: return contains CaMeL Any ( cs , search CaMeL Chars , ch ) ;
rank: 262
score: 98.77353737571023
patch: return ( cs . contains ( ch ) ) ;
rank: 262
score: 98.66415744357639
patch: control = true ; return true ; }
rank: 262
score: 98.648681640625
patch: CaMeL Number = true ; else return true ;
rank: 262
score: 98.6303939819336
patch: CaMeL Thread . return ( true ;
rank: 262
score: 98.36212158203125
patch: return true ; j ++ ;
rank: 262
score: 98.3377914428711
patch: return != $NUMBER$ ; return true ;
rank: 263
score: 98.97397085336539
patch: return search CaMeL Chars [ j ] == ch ; break ;
rank: 263
score: 98.94849795386905
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) . is CaMeL Empty ( ) ;
rank: 263
score: 98.77152876420455
patch: result = cs . is CaMeL Empty ( ) ;
rank: 263
score: 98.66302490234375
patch: CaMeL true . return true ; }
rank: 263
score: 98.64808485243056
patch: CaMeL Number = false ; return true ;
rank: 263
score: 98.62997775607639
patch: return true ; else return false ; }
rank: 263
score: 98.62975311279297
patch: return ! false ; return false ;
rank: 263
score: 98.36172921316964
patch: renderer = true ; break ;
rank: 263
score: 98.33708360460069
patch: CaMeL do . add ( true ) ;
rank: 264
score: 98.97325642903645
patch: return cs CaMeL Length - search CaMeL Chars . length ;
rank: 264
score: 98.95777045355902
patch: return Array CaMeL Utils . Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ,
rank: 264
score: 98.771484375
patch: return ( Char CaMeL Sequence ) search CaMeL Chars [ j ] ;
rank: 264
score: 98.66134982638889
patch: m = true ; return false ; }
rank: 264
score: 98.64735107421875
patch: return true ; return true ; return null ;
rank: 264
score: 98.62988959418402
patch: CaMeL List true = true ; break ;
rank: 264
score: 98.62898254394531
patch: return ( return true ) ; }
rank: 264
score: 98.36140659877232
patch: &= true ; break ; }
rank: 264
score: 98.33652072482639
patch: return false ; true ; return false ;
rank: 265
score: 98.97324625651042
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ] ) ;
rank: 265
score: 98.95773315429688
patch: return true . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 265
score: 98.94809139476104
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Length ) ;
rank: 265
score: 98.66056823730469
patch: return true ; ; } else {
rank: 265
score: 98.64684380425348
patch: CaMeL Range [ ] true return false ;
rank: 265
score: 98.6296875
patch: return return true ; } } return true ;
rank: 265
score: 98.62535603841145
patch: Plane return return false ;
rank: 265
score: 98.35996791294643
patch: [ ] true = true ;
rank: 266
score: 98.9725112915039
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == ch ) ;
rank: 266
score: 98.95767415364584
patch: return Array CaMeL Utils . is CaMeL Empty ( true , ch ) ;
rank: 266
score: 98.94806780133929
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . is CaMeL Empty ( ) ;
rank: 266
score: 98.76886393229167
patch: if ( cs . search CaMeL Chars [ j ] == ch ) {
rank: 266
score: 98.65852864583333
patch: profile = true ; return true ; }
rank: 266
score: 98.62888793945312
patch: return true ; } else { return ; }
rank: 266
score: 98.62522888183594
patch: return new String ( ch ) ;
rank: 266
score: 98.35657755533855
patch: . return ! true ;
rank: 266
score: 98.33580780029297
patch: CaMeL List ( ; return ; /
rank: 267
score: 98.97244466145834
patch: return contains CaMeL Any ( search CaMeL Chars , cs CaMeL Length ) ;
rank: 267
score: 98.95721076516544
patch: return Array CaMeL Utils . is CaMeL Instance ( cs , search CaMeL Chars ) ;
rank: 267
score: 98.9475985440341
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars [ i ] ) ;
rank: 267
score: 98.76871431790866
patch: return ( cs . char CaMeL At ( search CaMeL Length ;
rank: 267
score: 98.6573486328125
patch: return ! ( true ) ; }
rank: 267
score: 98.64630805121527
patch: CaMeL Range true ; if return true ;
rank: 267
score: 98.62855224609375
patch: return false ; } * * * * /
rank: 267
score: 98.62503814697266
patch: return true ; true ; } }
rank: 267
score: 98.3550516764323
patch: return true && true ;
rank: 267
score: 98.33431243896484
patch: return false ; ; return ; *
rank: 268
score: 98.97203776041667
patch: return search CaMeL Chars . char CaMeL At ( j ) == ch ;
rank: 268
score: 98.95592322716347
patch: return Array CaMeL Utils . contains CaMeL Any ( ch ) ;
rank: 268
score: 98.94738188244048
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) . to CaMeL String ( ) ;
rank: 268
score: 98.7686767578125
patch: if ( Array CaMeL Utils . is CaMeL Empty ( cs
rank: 268
score: 98.65680609809027
patch: cp = true ; return true ; }
rank: 268
score: 98.64452446831598
patch: return this . true ; return null ;
rank: 268
score: 98.62835693359375
patch: return false ; if return true ;
rank: 268
score: 98.62202284071181
patch: return value [ j ] == ch ;
rank: 268
score: 98.33405303955078
patch: return false ; return true ; else
rank: 269
score: 98.94732375372024
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars . length ) ;
rank: 269
score: 98.76851399739583
patch: return cs . char CaMeL At ( search CaMeL Length ) == ch ;
rank: 269
score: 98.65610080295139
patch: return true ; } } else if ;
rank: 269
score: 98.643310546875
patch: CaMeL Null return true ;
rank: 269
score: 98.62763214111328
patch: return true ; } if ; ;
rank: 269
score: 98.33132934570312
patch: return 0 ; ; ;
rank: 270
score: 98.9716327373798
patch: try { return search CaMeL Chars [ j ] == ch ;
rank: 270
score: 98.95428145559211
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs , search CaMeL Chars ) ;
rank: 270
score: 98.947265625
patch: return value . equals ( search CaMeL Chars [ j ] ) ;
rank: 270
score: 98.76817737926136
patch: if ( search CaMeL Length >= search CaMeL Length )
rank: 270
score: 98.6555404663086
patch: return ch != null && true ;
rank: 270
score: 98.64263237847223
patch: CaMeL String = true ; return false ;
rank: 270
score: 98.62638854980469
patch: return true ; } * * ;
rank: 270
score: 98.33128356933594
patch: return true ; ; return $NUMBER$ ;
rank: 271
score: 98.95417616102431
patch: return Array CaMeL Utils . Array CaMeL Utils . contains ( search CaMeL Chars ) ; }
rank: 271
score: 98.94654676649306
patch: return super . contains CaMeL Any ( cs , search CaMeL Chars [ j ] ) ;
rank: 271
score: 98.64223225911458
patch: CaMeL j = true ; return true ;
rank: 271
score: 98.62626139322917
patch: CaMeL Thread . return true ; } }
rank: 271
score: 98.62158966064453
patch: return false ; } } break ;
rank: 271
score: 98.34812709263393
patch: . return false ; } }
rank: 271
score: 98.33123779296875
patch: return ~ ) ; return true ;
rank: 272
score: 98.97091238839286
patch: return this . search CaMeL Chars [ j ] == ch ) ;
rank: 272
score: 98.95317639802632
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars , i ) ;
rank: 272
score: 98.94627075195312
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars . length ) ;
rank: 272
score: 98.76781354631696
patch: if ( cs . to CaMeL Char CaMeL Array ( ) ) {
rank: 272
score: 98.65359497070312
patch: return ; } return true ; }
rank: 272
score: 98.64192708333333
patch: CaMeL i = true ; return true ;
rank: 272
score: 98.62617797851563
patch: return true ; break ; } return true ;
rank: 272
score: 98.61897277832031
patch: contains [ i ] = true ;
rank: 272
score: 98.34782191685268
patch: = null ; break ; }
rank: 272
score: 98.33053588867188
patch: return 0 ; return - $NUMBER$ ;
rank: 273
score: 98.95294189453125
patch: return ( ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 273
score: 98.76775716145833
patch: return ( Char CaMeL Sequence ) cs . is CaMeL Empty ( ) ;
rank: 273
score: 98.6531005859375
patch: p = true ;
rank: 273
score: 98.6407699584961
patch: CaMeL List true ; return false ;
rank: 273
score: 98.62610626220703
patch: return ; = true ; break ;
rank: 273
score: 98.344482421875
patch: if ( true ) {
rank: 273
score: 98.33024597167969
patch: return != true ; return true ;
rank: 274
score: 98.95213407628677
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars + 1 ) ;
rank: 274
score: 98.65003797743056
patch: image = true ; return true ; }
rank: 274
score: 98.63898383246527
patch: CaMeL List . ; return true ; ;
rank: 274
score: 98.62606811523438
patch: return return false ; } } return false ;
rank: 274
score: 98.3441162109375
patch: return true ( true ) ;
rank: 274
score: 98.32866668701172
patch: return ; = true ; return ;
rank: 275
score: 98.9698127297794
patch: return Array CaMeL Utils . is CaMeL True ( search CaMeL Chars , ch ) ;
rank: 275
score: 98.94361877441406
patch: return contains CaMeL Any ( search CaMeL Chars [ j ] == ch ) ;
rank: 275
score: 98.76629231770833
patch: return ( ch . char CaMeL At ( i ) == ch ) ;
rank: 275
score: 98.6500015258789
patch: return true ; ; } * /
rank: 275
score: 98.63847520616319
patch: return get CaMeL Property ( true ) ;
rank: 275
score: 98.62594604492188
patch: return is CaMeL True return false ; } ;
rank: 275
score: 98.34125627790179
patch: . return i == true ;
rank: 275
score: 98.32841491699219
patch: return 0 . 0 ; break ;
rank: 276
score: 98.96845559512867
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , j ) ;
rank: 276
score: 98.94294539741848
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ] ) ) ;
rank: 276
score: 98.76556396484375
patch: name = cs . char CaMeL At ( i ) ;
rank: 276
score: 98.64845784505208
patch: return $STRING$ . equals ( true ) ;
rank: 276
score: 98.63770294189453
patch: return null ; ; return false ;
rank: 276
score: 98.62513427734375
patch: return is CaMeL Empty return false ; } ;
rank: 276
score: 98.61785888671875
patch: return false ; else return false ; }
rank: 276
score: 98.34059361049107
patch: CaMeL return true ; } }
rank: 276
score: 98.3271255493164
patch: CaMeL |= true ; return true ;
rank: 277
score: 98.96729278564453
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , char CaMeL
rank: 277
score: 98.9500503540039
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [
rank: 277
score: 98.94288940429688
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 277
score: 98.76518419053819
patch: if ( search CaMeL Length >= 0 )
rank: 277
score: 98.64704725477431
patch: . return is CaMeL Empty ( ch ;
rank: 277
score: 98.32695770263672
patch: CaMeL |= ( return ) true ;
rank: 278
score: 98.96721540178571
patch: return is CaMeL Empty ( search CaMeL Chars [ i ] ) ;
rank: 278
score: 98.94966848273026
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars , j ) ;
rank: 278
score: 98.76499586838942
patch: if ( search CaMeL Chars . length == search CaMeL Length )
rank: 278
score: 98.62381591796876
patch: return is CaMeL Empty ( false ) ; }
rank: 278
score: 98.33632405598958
patch: return true return true ;
rank: 278
score: 98.32621256510417
patch: return 0 . 0 ; return 1 ;
rank: 279
score: 98.76312255859375
patch: if ( i >= search CaMeL Chars . length ) {
rank: 279
score: 98.62371215820312
patch: return is CaMeL Equals ( true , true ;
rank: 279
score: 98.6124267578125
patch: return false ; ch = true ;
rank: 279
score: 98.33285958426339
patch: $NUMBER$ * / return false ;
rank: 279
score: 98.32562255859375
patch: ( false ) ; return $NUMBER$ ;
rank: 280
score: 98.96688138521634
patch: return is CaMeL Empty ( cs , cs CaMeL Length ) ;
rank: 280
score: 98.94915450246711
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , [ j ] ) ;
rank: 280
score: 98.9421322471217
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . next ( ) ;
rank: 280
score: 98.7630615234375
patch: if ( search CaMeL Chars . length == search CaMeL Chars .
rank: 280
score: 98.64306640625
patch: return true ; this . return true ;
rank: 280
score: 98.63450792100694
patch: return null ; return this . true ;
rank: 280
score: 98.61229790581598
patch: return search CaMeL Chars [ j ] ==
rank: 280
score: 98.33277384440105
patch: . char return true ;
rank: 280
score: 98.32550048828125
patch: CaMeL ~ ) ; return true ;
rank: 281
score: 98.96638488769531
patch: return search CaMeL Chars [ j ] . contains ( search CaMeL Chars ) ;
rank: 281
score: 98.7627704326923
patch: return ch . search CaMeL Chars [ j ] == ch ;
rank: 281
score: 98.64241536458333
patch: CaMeL ch = true ; break ; }
rank: 281
score: 98.63414171006944
patch: CaMeL List . return ( return ) ;
rank: 281
score: 98.60826280381944
patch: return ch [ j ] == ch ;
rank: 281
score: 98.33260672433036
patch: parser = true ; break ;
rank: 281
score: 98.32502746582031
patch: ( false ; { return true ;
rank: 282
score: 98.94097900390625
patch: return search CaMeL Chars [ i ] . contains CaMeL Any ( ch ) ;
rank: 282
score: 98.76162719726562
patch: if ( search CaMeL Length > search CaMeL Length ) {
rank: 282
score: 98.63996717664931
patch: return is CaMeL Empty [ i ] ;
rank: 282
score: 98.63284640842014
patch: return new && true ; return false ;
rank: 282
score: 98.6226577758789
patch: return ; } if return false ;
rank: 282
score: 98.60798645019531
patch: return return false ; return false ;
rank: 282
score: 98.33172607421875
patch: . this . return false ;
rank: 282
score: 98.3240737915039
patch: CaMeL += 1 ; return true ;
rank: 283
score: 98.96599578857422
patch: return contains CaMeL Any ( cs . char CaMeL At ( i ) ) ;
rank: 283
score: 98.76156412760416
patch: return Array CaMeL Utils . is CaMeL Empty ( cs ) ; } }
rank: 283
score: 98.63957383897569
patch: return true ; } else if true ;
rank: 283
score: 98.63226318359375
patch: CaMeL List true return false ;
rank: 283
score: 98.6221923828125
patch: return is CaMeL Interrupted ( true ) ;
rank: 283
score: 98.60580444335938
patch: Plane return return true ; } }
rank: 283
score: 98.33149065290179
patch: CaMeL Enum . return true ;
rank: 283
score: 98.3228530883789
patch: CaMeL Thread ( ; return true ;
rank: 284
score: 98.94011579241071
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . to CaMeL String ( ) ;
rank: 284
score: 98.7614501953125
patch: return ( cs . char CaMeL At ( j ) != ch ) ;
rank: 284
score: 98.63939666748047
patch: return true ; ; } } }
rank: 284
score: 98.63203938802083
patch: CaMeL char = true ; return true ;
rank: 284
score: 98.62210083007812
patch: return false ; } if return false ; }
rank: 284
score: 98.60563829210069
patch: return this . return false ; } }
rank: 284
score: 98.32242160373264
patch: return 0 ; ; ; = true ;
rank: 285
score: 98.96555739182692
patch: return contains CaMeL Any ( i , search CaMeL Chars ) ;
rank: 285
score: 98.94719989483173
patch: return ch . contains CaMeL Any ( cs , ch ) ;
rank: 285
score: 98.93997325067934
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 285
score: 98.76088460286458
patch: if ( search CaMeL Chars . length >= 0 ) {
rank: 285
score: 98.63833957248264
patch: return true ? false : false ; }
rank: 285
score: 98.63186306423611
patch: return false ; ; else return true ;
rank: 285
score: 98.62196655273438
patch: CaMeL Runtime . return ( true ) ; }
rank: 285
score: 98.60394965277777
patch: return this . return true ; } }
rank: 285
score: 98.32938929966518
patch: * / return false ; }
rank: 285
score: 98.32240295410156
patch: return true ; ; return ; /
rank: 286
score: 98.94694249770221
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , $NUMBER$ ) ;
rank: 286
score: 98.93941824776786
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 286
score: 98.76079767400569
patch: if ( search CaMeL Length <= search CaMeL Length )
rank: 286
score: 98.63743591308594
patch: return true ; } ++ i ;
rank: 286
score: 98.63098822699652
patch: CaMeL List . add ( true ) ;
rank: 286
score: 98.62191772460938
patch: CaMeL State . return ( true ;
rank: 286
score: 98.6027587890625
patch: return ! false ;
rank: 286
score: 98.32930210658482
patch: . ; return true ; }
rank: 286
score: 98.32197401258681
patch: return 0 ; return ; return true ;
rank: 287
score: 98.96383463541666
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars
rank: 287
score: 98.76047770182292
patch: byte = cs . char CaMeL At ( i ) ;
rank: 287
score: 98.63741726345486
patch: return true ; break ; } } }
rank: 287
score: 98.62158203125
patch: return is CaMeL Defined ( true ) ; }
rank: 287
score: 98.32849993024554
patch: = ( ; return true ;
rank: 287
score: 98.32181549072266
patch: return return 1 ; return 1 ;
rank: 288
score: 98.96304141773896
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ; break ;
rank: 288
score: 98.9467414407169
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == ch . length ;
rank: 288
score: 98.93866373697917
patch: return ! ch . equals ( search CaMeL Chars [ j ] ) ;
rank: 288
score: 98.7596923828125
patch: return ( ch . char CaMeL At ( j ) == ch ) ;
rank: 288
score: 98.63738250732422
patch: return true ; } true ; }
rank: 288
score: 98.6298828125
patch: CaMeL Exception true ; return true ;
rank: 288
score: 98.62061225043402
patch: return ; ; } } return true ;
rank: 288
score: 98.59920828683036
patch: return is [ j ] ;
rank: 288
score: 98.32767159598214
patch: binding = true ; break ;
rank: 288
score: 98.32166883680556
patch: CaMeL += ( true ) ; true ;
rank: 289
score: 98.96258903952206
patch: return search CaMeL Chars [ search CaMeL Chars . length - 1 ] == ch ;
rank: 289
score: 98.94547526041667
patch: return null . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 289
score: 98.75957845052083
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . next ) ;
rank: 289
score: 98.636474609375
patch: return is CaMeL Empty ( ch , ;
rank: 289
score: 98.62981305803571
patch: return this . true ; ;
rank: 289
score: 98.59898546006944
patch: return super . contains ( ch ) ;
rank: 289
score: 98.32441057477679
patch: return false ; } true ;
rank: 289
score: 98.32145860460069
patch: CaMeL List ( ) ; ; true ;
rank: 290
score: 98.93857985276442
patch: return search CaMeL Chars [ j ] == ch . $STRING$ ;
rank: 290
score: 98.7589999112216
patch: if ( j < search CaMeL Chars . length )
rank: 290
score: 98.63644070095486
patch: socket = true ; return true ; }
rank: 290
score: 98.62827845982143
patch: CaMeL Exception true return true ;
rank: 290
score: 98.59850202287946
patch: return true ; / * /
rank: 290
score: 98.32269287109375
patch: . equals ( true )
rank: 290
score: 98.31987653459821
patch: return ; { return null ;
rank: 291
score: 98.94535006009616
patch: return search CaMeL Chars [ j ] < search CaMeL Length ;
rank: 291
score: 98.93853759765625
patch: return this . search CaMeL Chars [ j ] . contains ( ch ) ;
rank: 291
score: 98.75807883522727
patch: if ( j == search CaMeL Chars . length )
rank: 291
score: 98.62818739149306
patch: CaMeL Throwable = true ; return true ;
rank: 291
score: 98.59588623046875
patch: return true ; i ++ ;
rank: 291
score: 98.32049560546875
patch: [ ; return true ; }
rank: 291
score: 98.3192138671875
patch: CaMeL ch ( ; = true ;
rank: 292
score: 98.93798217773437
patch: return = search CaMeL Chars [ j ] ;
rank: 292
score: 98.75806603064903
patch: int ch = cs . char CaMeL At ( i ) ;
rank: 292
score: 98.62730189732143
patch: CaMeL Number return true ; ;
rank: 292
score: 98.61846923828125
patch: return ; = true ; }
rank: 292
score: 98.59444427490234
patch: set [ j ] = true ;
rank: 292
score: 98.32002766927083
patch: { return true ; }
rank: 292
score: 98.31915961371527
patch: return 0 ; break ; if true ;
rank: 293
score: 98.96204552283653
patch: return search CaMeL Chars . get ( ch ) == ch ;
rank: 293
score: 98.94471028645833
patch: return true . contains CaMeL Any ( ch , search CaMeL Chars ) ;
rank: 293
score: 98.93738471137152
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ i ] ) ;
rank: 293
score: 98.75801595052083
patch: if ( search CaMeL Length < cs . length ) {
rank: 293
score: 98.63554551866319
patch: m = true ; break ; } }
rank: 293
score: 98.62718200683594
patch: CaMeL List true return true ; ;
rank: 293
score: 98.61841583251953
patch: return ; } else return true ;
rank: 293
score: 98.59326934814453
patch: return ! false ; return true ;
rank: 293
score: 98.31932721819196
patch: = null ; return true ;
rank: 293
score: 98.31910705566406
patch: return true ; return - 0 ;
rank: 294
score: 98.94408162434895
patch: return ! ! ch . is CaMeL Empty ( ) ;
rank: 294
score: 98.93641572840073
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) == ch ;
rank: 294
score: 98.75767008463542
patch: return ( i == search CaMeL Chars . length ) ;
rank: 294
score: 98.63502332899306
patch: CaMeL true [ i ] = true ;
rank: 294
score: 98.62615966796875
patch: CaMeL Exception = null ; return true ;
rank: 294
score: 98.61829969618056
patch: CaMeL List . return true ; } }
rank: 294
score: 98.31743512834821
patch: return true ; ; true ;
rank: 295
score: 98.94384047564338
patch: return ch . contains CaMeL Any ( cs , search CaMeL Chars . length ) ;
rank: 295
score: 98.93624674479166
patch: return search CaMeL Chars [ j ] == ch . search CaMeL Chars ;
rank: 295
score: 98.75742885044643
patch: int search CaMeL Length = search CaMeL Chars . length ( ) ;
rank: 295
score: 98.63481987847223
patch: pt = true ; return true ; }
rank: 295
score: 98.6261215209961
patch: CaMeL Range ( ; return true ;
rank: 295
score: 98.61659545898438
patch: return ; * * * * * * /
rank: 295
score: 98.31734466552734
patch: return is true ; return true ;
rank: 296
score: 98.93597966974431
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , cs ) ;
rank: 296
score: 98.75723031850961
patch: if ( search CaMeL Chars . length != cs CaMeL Length )
rank: 296
score: 98.63460964626736
patch: color = true ; return true ; }
rank: 296
score: 98.62506103515625
patch: CaMeL Exception true return true ; }
rank: 296
score: 98.61658477783203
patch: return true ; } = true ;
rank: 296
score: 98.59149169921875
patch: return super . contains ( cs ) ;
rank: 296
score: 98.31729125976562
patch: CaMeL List ( ; return ; {
rank: 296
score: 98.31597900390625
patch: . append ( true ) ;
rank: 297
score: 98.96064309512867
patch: return search CaMeL Chars [ cs CaMeL Length ] . contains CaMeL Any ( ) ;
rank: 297
score: 98.93583170572917
patch: return ! search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) ;
rank: 297
score: 98.7571309407552
patch: result = cs . char CaMeL At ( i ) ;
rank: 297
score: 98.63408745659723
patch: return true ; } } } else {
rank: 297
score: 98.62437608506944
patch: CaMeL System . true ; return true ;
rank: 297
score: 98.31691487630208
patch: CaMeL List ( false ) ; true ;
rank: 298
score: 98.96053314208984
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars . char CaMeL
rank: 298
score: 98.9418475811298
patch: return cs . contains CaMeL Any ( ch , ch ) ;
rank: 298
score: 98.9353256225586
patch: return contains CaMeL Any ( cs , search CaMeL Chars [ i ] ) ;
rank: 298
score: 98.756982421875
patch: if ( search CaMeL Length < 1 ) {
rank: 298
score: 98.63372802734375
patch: f = true ; break ; } }
rank: 298
score: 98.62364959716797
patch: CaMeL Range true true return false ;
rank: 298
score: 98.61613464355469
patch: return false ; for return false ;
rank: 298
score: 98.59108189174107
patch: return this . return false ;
rank: 298
score: 98.31680297851562
patch: ( false ) ; return null ;
rank: 299
score: 98.95979139539931
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , cs ) ;
rank: 299
score: 98.94073016826923
patch: return false && search CaMeL Chars [ j ] == ch ;
rank: 299
score: 98.93461277173913
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs , cs . char CaMeL At ( j ) ) ;
rank: 299
score: 98.63340928819444
patch: ch = true ; return true ; }
rank: 299
score: 98.62289089626736
patch: CaMeL Object = true ; return false ;
rank: 299
score: 98.59058295355902
patch: return false ; else return true ; }
rank: 299
score: 98.31645202636719
patch: return - 1 ; return 1 ;
rank: 299
score: 98.3126220703125
patch: . return false ; ;
rank: 300
score: 98.95955716646634
patch: return search CaMeL Chars . get ( j ) == ch ;
rank: 300
score: 98.75592041015625
patch: return ! Array CaMeL Utils . is CaMeL Empty ( true ) ;
rank: 300
score: 98.63208685980902
patch: cs = true ; return true ; }
rank: 300
score: 98.61521606445312
patch: return false ; break ; } return false ;
rank: 300
score: 98.31637573242188
patch: CaMeL return ) ; return ; {
rank: 300
score: 98.31133161272321
patch: if ; return true ; }
rank: 301
score: 98.9339266690341
patch: return this . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 301
score: 98.75568033854167
patch: if ( Char CaMeL Sequence . is CaMeL Empty ( ch ) ) {
rank: 301
score: 98.63143157958984
patch: p = ; return false ; }
rank: 301
score: 98.62236022949219
patch: CaMeL Range true true return true ;
rank: 301
score: 98.61517944335938
patch: return is CaMeL Alive ( true ) ; }
rank: 301
score: 98.58709716796875
patch: Plane return return false ; } }
rank: 301
score: 98.31581115722656
patch: return false ; ; ; return ;
rank: 301
score: 98.31120082310268
patch: . / * return true ;
rank: 302
score: 98.93973482572116
patch: return true . search CaMeL Chars [ j ] == ch ;
rank: 302
score: 98.93379934210526
patch: return search CaMeL Chars [ j ] . trim ( ) . to CaMeL String ( ) ;
rank: 302
score: 98.75535074869792
patch: v = cs . char CaMeL At ( j ) ;
rank: 302
score: 98.6312484741211
patch: t = true ; return false ;
rank: 302
score: 98.621337890625
patch: CaMeL Number return true ; return null ;
rank: 302
score: 98.61492919921875
patch: return is CaMeL Empty ( true true ;
rank: 302
score: 98.58612060546875
patch: { return false ; }
rank: 302
score: 98.3145751953125
patch: return is != 0 ; return false ;
rank: 302
score: 98.30472237723214
patch: CaMeL return is CaMeL Empty ;
rank: 303
score: 98.95902252197266
patch: if ( search CaMeL Chars . length 1 < search CaMeL Chars . length )
rank: 303
score: 98.939453125
patch: return search CaMeL Chars [ i ] == ch . to CaMeL String ( ) ;
rank: 303
score: 98.93353562127976
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , j ) ;
rank: 303
score: 98.75518798828125
patch: return ( ! search CaMeL Chars [ j ] == ch ) ;
rank: 303
score: 98.6312255859375
patch: return true ; ; ; } }
rank: 303
score: 98.62120710100446
patch: CaMeL Number = return true ;
rank: 303
score: 98.61485799153645
patch: return ; * * /
rank: 303
score: 98.58504813058036
patch: return ! return false ; }
rank: 303
score: 98.31449672154018
patch: CaMeL += ( true ) ;
rank: 303
score: 98.30437360491071
patch: . return 0 == true ;
rank: 304
score: 98.95871310763889
patch: return return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ch ) ;
rank: 304
score: 98.93338216145834
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == $STRING$ ;
rank: 304
score: 98.75506591796875
patch: if ( search CaMeL Chars [ j ] != ch )
rank: 304
score: 98.63094753689236
patch: d = true ; return true ; }
rank: 304
score: 98.6208724975586
patch: CaMeL Range true return true ; }
rank: 304
score: 98.61471993582589
patch: return ; ; return false ;
rank: 304
score: 98.58396911621094
patch: return true ; ch = true ;
rank: 304
score: 98.3140869140625
patch: CaMeL List ( true == true ) ;
rank: 304
score: 98.30277506510417
patch: . is return true ;
rank: 305
score: 98.95856071920956
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars [ j
rank: 305
score: 98.93802584134616
patch: return Array CaMeL Utils . contains ( cs , cs ) ;
rank: 305
score: 98.75358276367187
patch: if ( search CaMeL Length == 0 ) {
rank: 305
score: 98.62049018012152
patch: CaMeL Exception true return this . true ;
rank: 305
score: 98.61456298828125
patch: return true ; } } if return ;
rank: 305
score: 98.31343841552734
patch: return return 1 ; return false ;
rank: 305
score: 98.30189732142857
patch: return true && true ; }
rank: 306
score: 98.75179850260416
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) {
rank: 306
score: 98.62994384765625
patch: . return false ; break ; } }
rank: 306
score: 98.62041558159723
patch: CaMeL List = true ; return false ;
rank: 306
score: 98.61447143554688
patch: CaMeL State . true return true ; } }
rank: 306
score: 98.58343505859375
patch: return false ; ch ++ ; }
rank: 306
score: 98.3018798828125
patch: m = return true ;
rank: 307
score: 98.95808410644531
patch: return search CaMeL Chars [ search CaMeL Chars . length 1 ] == ch ;
rank: 307
score: 98.93296983506944
patch: return search CaMeL Chars [ j ] . char CaMeL At ( i ) == ch ;
rank: 307
score: 98.75093587239583
patch: return ( cs . char CaMeL At ( i ) == ch ) {
rank: 307
score: 98.6297607421875
patch: return true ; ; ; }
rank: 307
score: 98.62033420138889
patch: CaMeL Range return true ; return null ;
rank: 307
score: 98.61376342773437
patch: return is CaMeL Empty ; return true ; ;
rank: 307
score: 98.31295013427734
patch: return true ; return - false ;
rank: 307
score: 98.30141194661458
patch: . if ( true )
rank: 308
score: 98.9575439453125
patch: return cs . contains CaMeL Any ( cs , search CaMeL Length ) ;
rank: 308
score: 98.93736049107143
patch: return search CaMeL Chars [ j ] == search CaMeL Chars ) ;
rank: 308
score: 98.62017144097223
patch: CaMeL Boolean return true ; return true ;
rank: 308
score: 98.61321258544922
patch: return is CaMeL Empty return false ;
rank: 308
score: 98.58098493303571
patch: Plane return true ; } }
rank: 308
score: 98.31108262803819
patch: return false ; return new return true ;
rank: 309
score: 98.95736694335938
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ; ;
rank: 309
score: 98.93151274181548
patch: return search CaMeL Chars [ j ] . append ( cs . char CaMeL At ( j ) ) ;
rank: 309
score: 98.75086558948864
patch: while ( j < search CaMeL Chars . length )
rank: 309
score: 98.61958821614583
patch: return super . true ; return true ;
rank: 309
score: 98.61264474051339
patch: return ; return true ; }
rank: 309
score: 98.58043561662946
patch: return this . return true ;
rank: 309
score: 98.30106026785714
patch: CaMeL return true ; true ;
rank: 310
score: 98.95688763786765
patch: return search CaMeL Chars [ search CaMeL Chars . char CaMeL At ( j ) ;
rank: 310
score: 98.93141575863487
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . close ( ) ;
rank: 310
score: 98.7500732421875
patch: return ( cs CaMeL Length >= search CaMeL Chars . length ) ; }
rank: 310
score: 98.62508816189236
patch: return true ; ; } } * /
rank: 310
score: 98.61949811662946
patch: CaMeL Exception true return false ;
rank: 310
score: 98.61122349330357
patch: return return $NUMBER$ == true ;
rank: 310
score: 98.57705252511161
patch: Plane return false ; } }
rank: 310
score: 98.30936431884766
patch: return != ) ; return false ;
rank: 311
score: 98.95556640625
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , true ) ;
rank: 311
score: 98.93103608630952
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ] ) ) ;
rank: 311
score: 98.7500732421875
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , } ) ;
rank: 311
score: 98.62480163574219
patch: return true ; break true ; }
rank: 311
score: 98.61913384331598
patch: CaMeL Class return true ; return true ;
rank: 311
score: 98.60796356201172
patch: return false ; } return null ;
rank: 311
score: 98.30887603759766
patch: CaMeL List ( ) ; return ;
rank: 311
score: 98.29880196707589
patch: r = true ; break ;
rank: 312
score: 98.955322265625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ; return false ;
rank: 312
score: 98.93436925551471
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Char ( ) ;
rank: 312
score: 98.93095397949219
patch: return ( ch != ch ) ;
rank: 312
score: 98.74959309895833
patch: return ( j >= search CaMeL Chars . length ) ;
rank: 312
score: 98.62444390190973
patch: return true ; } while ( true )
rank: 312
score: 98.61874728732639
patch: return true ; return false ; true ;
rank: 312
score: 98.60773468017578
patch: return false ; break ; } ;
rank: 312
score: 98.57678985595703
patch: return return false ; return true ;
rank: 312
score: 98.30875941685268
patch: return ; . return true ;
rank: 312
score: 98.29850551060268
patch: . return false ; } ;
rank: 313
score: 98.95503065321181
patch: return is CaMeL Empty ( search CaMeL Chars . char CaMeL At ( ch ) ) ;
rank: 313
score: 98.93281824448529
patch: return true + search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 313
score: 98.93025425502232
patch: return true . equals ( search CaMeL Chars [ j ] ) ;
rank: 313
score: 98.7492342862216
patch: if ( i == search CaMeL Chars . length )
rank: 313
score: 98.61819118923611
patch: CaMeL arraycopy = true ; return true ;
rank: 313
score: 98.60718790690105
patch: return null ; } }
rank: 313
score: 98.57447645399306
patch: return false ; } i ++ ; }
rank: 313
score: 98.3074722290039
patch: return return ) ; return 1 ;
rank: 313
score: 98.29755510602679
patch: . return true && true ;
rank: 314
score: 98.95501708984375
patch: return search CaMeL Chars . get ( cs . char CaMeL At ( j ) ) ;
rank: 314
score: 98.93263596754808
patch: return true || search CaMeL Chars [ j ] == ch ;
rank: 314
score: 98.92987615411931
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars [ j ] ) ;
rank: 314
score: 98.7492167154948
patch: return ! cs . is CaMeL Empty ( ) ; }
rank: 314
score: 98.62422010633681
patch: return true ; } else { break ;
rank: 314
score: 98.61814880371094
patch: CaMeL Thread . true return true ;
rank: 314
score: 98.57436794704861
patch: return char CaMeL At ( j ) ;
rank: 314
score: 98.30693054199219
patch: return false ; for return true ;
rank: 314
score: 98.29636056082589
patch: . append ( ch ) ;
rank: 315
score: 98.95445341222427
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars , ;
rank: 315
score: 98.74911499023438
patch: if ( cs CaMeL Length == cs CaMeL Length ) {
rank: 315
score: 98.62384033203125
patch: b = ; return true ; }
rank: 315
score: 98.61795043945312
patch: CaMeL System . ; return true ;
rank: 315
score: 98.57256401909723
patch: return size [ j ] == ch ;
rank: 315
score: 98.30675506591797
patch: return 0 ; public return true ;
rank: 316
score: 98.95440118963069
patch: return search CaMeL Chars [ 0 ] == ch ;
rank: 316
score: 98.93241613051471
patch: return Char CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars ) ;
rank: 316
score: 98.92908393012152
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( cs , ch ) ;
rank: 316
score: 98.74824829101563
patch: if ( is CaMeL Empty ( cs ) )
rank: 316
score: 98.6237564086914
patch: return true ; } count ++ ;
rank: 316
score: 98.61701965332031
patch: CaMeL List . return ( ) ;
rank: 316
score: 98.6050796508789
patch: return true ; } catch ; ;
rank: 316
score: 98.30644395616319
patch: return size == true ; return true ;
rank: 316
score: 98.29558454241071
patch: fg = true ; break ;
rank: 317
score: 98.95433044433594
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) ; }
rank: 317
score: 98.9319709329044
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] )
rank: 317
score: 98.927978515625
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs . char CaMeL At ( i ) ) ;
rank: 317
score: 98.747802734375
patch: if ( search CaMeL Length > cs CaMeL Length )
rank: 317
score: 98.61691284179688
patch: CaMeL Null ( ; return false ;
rank: 317
score: 98.60414632161458
patch: return is CaMeL Empty ( return true ;
rank: 317
score: 98.57054307725694
patch: return search CaMeL Length [ j ] ;
rank: 317
score: 98.30636257595486
patch: return true ; return false ; break ;
rank: 317
score: 98.29380580357143
patch: CaMeL true ; return true ;
rank: 318
score: 98.95386420355902
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , ch ) ; }
rank: 318
score: 98.93104463465073
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , value ) ;
rank: 318
score: 98.927880859375
patch: return ! ch . equals ( ch ) ;
rank: 318
score: 98.74729567307692
patch: if ( search CaMeL Chars [ j ] == cs ) {
rank: 318
score: 98.62324523925781
patch: s = ; return true ; }
rank: 318
score: 98.61623806423611
patch: CaMeL System . return ( true ) ;
rank: 318
score: 98.56954193115234
patch: return false ; } } } }
rank: 318
score: 98.30597795758929
patch: return true ; return $STRING$ ;
rank: 318
score: 98.29031808035714
patch: $NUMBER$ . ? return true ;
rank: 319
score: 98.95359700520834
patch: return search CaMeL Chars . get ( cs , search CaMeL Chars ) ;
rank: 319
score: 98.92760120738636
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 319
score: 98.74708658854166
patch: return ( cs . to CaMeL Lower CaMeL Case ( ) == ) ;
rank: 319
score: 98.62245008680556
patch: return true ; } true = true ;
rank: 319
score: 98.61583794487848
patch: return false ; ; if return false ;
rank: 319
score: 98.60382758246527
patch: return is CaMeL Empty && true ; }
rank: 319
score: 98.56889512803819
patch: return return false ; } j ++ ;
rank: 319
score: 98.30541120256696
patch: return ; { return 1 ;
rank: 319
score: 98.28958565848214
patch: . * / return false ;
rank: 320
score: 98.95313936121323
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( cs , cs ) ;
rank: 320
score: 98.92755998883929
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL True ( ) ;
rank: 320
score: 98.74708048502605
patch: return ( true ; }
rank: 320
score: 98.62154134114583
patch: return true ; default : return true ;
rank: 320
score: 98.61570909288194
patch: CaMeL Range = true ; while true ;
rank: 320
score: 98.60369110107422
patch: return true ; for true ; }
rank: 320
score: 98.56877136230469
patch: return ( false ) ; } }
rank: 320
score: 98.3044204711914
patch: return 0 . 0 return true ;
rank: 320
score: 98.28847830636161
patch: scanner = true ; break ;
rank: 321
score: 98.95270244891827
patch: return Array CaMeL Utils . is CaMeL True ( cs ) ;
rank: 321
score: 98.92748209635417
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) ;
rank: 321
score: 98.74679361979166
patch: return Array CaMeL Utils . is CaMeL Empty ( true , true ) ;
rank: 321
score: 98.62120361328125
patch: c = true ;
rank: 321
score: 98.603515625
patch: return is ; return true ;
rank: 321
score: 98.3043212890625
patch: return false + true ; return true ;
rank: 321
score: 98.28753662109375
patch: . char next = true ;
rank: 322
score: 98.95198567708333
patch: return Array CaMeL Utils . is CaMeL Empty ( cs ) . contains ( cs ) ;
rank: 322
score: 98.92705688476562
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 322
score: 98.62040201822917
patch: CaMeL ; if ( true ) break ;
rank: 322
score: 98.60245513916016
patch: return ; ; return false ; }
rank: 322
score: 98.56349182128906
patch: return [ i ] == ch ;
rank: 322
score: 98.30410766601562
patch: CaMeL Builder ( ; = true ;
rank: 322
score: 98.28732735770089
patch: CaMeL Builder . return false ;
rank: 323
score: 98.92698669433594
patch: return search CaMeL Chars [ j ] . replace CaMeL Chars [ j ] ;
rank: 323
score: 98.92549641927083
patch: return Char CaMeL Utils . contains CaMeL Any ( cs , cs ) ;
rank: 323
score: 98.74604627821181
patch: if ( search CaMeL Length < 0 )
rank: 323
score: 98.62037489149306
patch: return true . equals ( ch ) ;
rank: 323
score: 98.61452229817708
patch: CaMeL append return true ; return true ;
rank: 323
score: 98.60060628255208
patch: return return false ; } return true ;
rank: 323
score: 98.30367606026786
patch: return true ; return ; {
rank: 323
score: 98.28581891741071
patch: . if ( true ) {
rank: 324
score: 98.92619522758152
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL Lower CaMeL Case ( ) ;
rank: 324
score: 98.74527180989584
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs ) ; }
rank: 324
score: 98.61256917317708
patch: CaMeL Null ( true ; return true ;
rank: 324
score: 98.60057830810547
patch: CaMeL List return return true ; }
rank: 324
score: 98.56136745876736
patch: return return true ; } j ++ ;
rank: 324
score: 98.30286407470703
patch: return 1 ; ; return true ;
rank: 324
score: 98.2843017578125
patch: |= true ; return true ;
rank: 325
score: 98.94919996995192
patch: return is CaMeL Empty ( j , search CaMeL Chars ) ;
rank: 325
score: 98.92612915039062
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] == ch ) ;
rank: 325
score: 98.7445556640625
patch: if ( Character . is CaMeL Empty ( search CaMeL Chars ) ) {
rank: 325
score: 98.61780463324652
patch: return is CaMeL Empty ( true , ;
rank: 325
score: 98.61064317491319
patch: CaMeL List != true ; return true ;
rank: 325
score: 98.60013834635417
patch: return true ; this . return false ;
rank: 325
score: 98.55881754557292
patch: return false ; * /
rank: 325
score: 98.28410993303571
patch: . return is CaMeL Empty ;
rank: 326
score: 98.94908728966347
patch: return contains CaMeL Any ( ch , search CaMeL Length ) ;
rank: 326
score: 98.9239501953125
patch: return ch != $STRING$ . is CaMeL Empty ( ) ;
rank: 326
score: 98.61053466796875
patch: CaMeL Iterator = true ; return true ;
rank: 326
score: 98.55740695529514
patch: return true ; else return true ; }
rank: 326
score: 98.3017578125
patch: CaMeL do return ; = true ;
rank: 326
score: 98.2821044921875
patch: CaMeL true ? return true ;
rank: 327
score: 98.94851505055146
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , name ) ;
rank: 327
score: 98.92548217773438
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] . length ) ;
rank: 327
score: 98.92381940569196
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ch ) ;
rank: 327
score: 98.74436732700893
patch: result = Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 327
score: 98.61671447753906
patch: g = ; return true ; }
rank: 327
score: 98.61015319824219
patch: return true ; return true ; {
rank: 327
score: 98.55724419487848
patch: ch = true ; return false ; }
rank: 327
score: 98.30173746744792
patch: return is ( true ; return true ;
rank: 327
score: 98.27969796316964
patch: return ! ( true ) ;
rank: 328
score: 98.94849350873162
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , value ) ;
rank: 328
score: 98.92514870383523
patch: return Array CaMeL Utils . equals ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 328
score: 98.7432861328125
patch: result = Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars
rank: 328
score: 98.61670600043402
patch: admin = true ; return true ; }
rank: 328
score: 98.60976833767361
patch: CaMeL Object . return ( true ) ;
rank: 328
score: 98.30168805803571
patch: return $NUMBER$ ; return false ;
rank: 328
score: 98.27911376953125
patch: w = true ; break ;
rank: 329
score: 98.9482754794034
patch: return contains CaMeL Any ( search CaMeL Length ) ;
rank: 329
score: 98.74305216471355
patch: if ( cs CaMeL Length >= search CaMeL Length ) {
rank: 329
score: 98.61626434326172
patch: return false ? true : true ;
rank: 329
score: 98.60933430989583
patch: return false ; return null ; true ;
rank: 329
score: 98.59850396050348
patch: return true ; } if ; return ;
rank: 329
score: 98.30153401692708
patch: return 0 == true ; return true ;
rank: 329
score: 98.27549235026042
patch: = true && true ;
rank: 330
score: 98.94811293658088
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars
rank: 330
score: 98.92018479567308
patch: return ch . contains CaMeL Any ( ch , ch ) ;
rank: 330
score: 98.74281819661458
patch: if ( search CaMeL Length == search CaMeL Length ) {
rank: 330
score: 98.61598205566406
patch: . return true ; } ; }
rank: 330
score: 98.6092529296875
patch: CaMeL Exception true return false ; }
rank: 330
score: 98.59706624348958
patch: return true ; } catch return true ;
rank: 330
score: 98.54973602294922
patch: return new char [ ] { ch
rank: 330
score: 98.27498081752232
patch: ok = true ; break ;
rank: 331
score: 98.94740923713235
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs , cs ) ;
rank: 331
score: 98.91808268229167
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == cs ;
rank: 331
score: 98.74266560872395
patch: if ( search CaMeL Chars [ i ] == ch )
rank: 331
score: 98.61563546316964
patch: t ; return true ; }
rank: 331
score: 98.60901641845703
patch: CaMeL Number ( return true ) ;
rank: 331
score: 98.59681919642857
patch: return null ; break ; }
rank: 331
score: 98.29964447021484
patch: CaMeL List ( ; return ; ;
rank: 331
score: 98.274072265625
patch: $NUMBER$ return true ;
rank: 332
score: 98.947265625
patch: return cs . contains ( cs , search CaMeL Chars ) ;
rank: 332
score: 98.91770582932692
patch: return search CaMeL Chars [ j ] . contains ( ) ;
rank: 332
score: 98.61543104383681
patch: rt = true ; return true ; }
rank: 332
score: 98.59566497802734
patch: return false ; while return false ;
rank: 332
score: 98.54945203993056
patch: return true ; } i ++ ; }
rank: 332
score: 98.2994384765625
patch: return ) ; ; return true ;
rank: 332
score: 98.27325439453125
patch: . float true = true ;
rank: 333
score: 98.94711303710938
patch: return search CaMeL Chars [ j ) ] == ch ;
rank: 333
score: 98.74188232421875
patch: return return Array CaMeL Utils . is CaMeL Empty ( ch ) ;
rank: 333
score: 98.61473846435547
patch: $NUMBER$ . return true ; } }
rank: 333
score: 98.60810682508681
patch: CaMeL Range = null ; return true ;
rank: 333
score: 98.59312438964844
patch: CaMeL State . return true ; }
rank: 333
score: 98.272216796875
patch: token = true ; break ;
rank: 334
score: 98.9470947265625
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , j ) ;
rank: 334
score: 98.92335094105114
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [ j ] , ch ) ;
rank: 334
score: 98.7415020282452
patch: return Array CaMeL Utils . is CaMeL Empty ( i ) ;
rank: 334
score: 98.61471993582589
patch: return false ; } } ;
rank: 334
score: 98.60731336805556
patch: CaMeL Number = true ; while true ;
rank: 334
score: 98.59243435329861
patch: return is true ; } return false ;
rank: 334
score: 98.54897054036458
patch: return false ; this . return false ;
rank: 334
score: 98.29737684461806
patch: CaMeL Iterator ( true ) ; return ;
rank: 334
score: 98.27118791852679
patch: return true . return true ;
rank: 335
score: 98.92277257582721
patch: return ( search CaMeL Chars . char CaMeL At ( j ) != ch ) ;
rank: 335
score: 98.91555989583334
patch: return true && Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 335
score: 98.7411376953125
patch: return Array CaMeL Utils . is CaMeL Empty ( [ i ] ) ;
rank: 335
score: 98.61457824707031
patch: CaMeL Enum . return true ; }
rank: 335
score: 98.60661315917969
patch: CaMeL Range . true return true ;
rank: 335
score: 98.59156036376953
patch: return ; ;
rank: 335
score: 98.54866027832031
patch: Plane { return true ; } }
rank: 335
score: 98.2973403930664
patch: return ! 1 ; return 1 ;
rank: 335
score: 98.27108328683036
patch: CaMeL true . return true ;
rank: 336
score: 98.94655474494485
patch: return ( search CaMeL Chars . char CaMeL At ( ch ) == ch ) ;
rank: 336
score: 98.92267523871527
patch: return ( cs . char CaMeL At ( j ) . equals ( ch ) ) ;
rank: 336
score: 98.91527506510417
patch: return ch . contains CaMeL Any ( cs , search CaMeL Length ) ;
rank: 336
score: 98.74087088448661
patch: return ! ( search CaMeL Chars [ j ] == ch ) ;
rank: 336
score: 98.61456298828125
patch: . return ( true ) ; } }
rank: 336
score: 98.59146554129464
patch: return is return true ; }
rank: 336
score: 98.54795837402344
patch: return true ; ch ++ ; }
rank: 336
score: 98.29722086588542
patch: CaMeL do . return ( true ; :
rank: 336
score: 98.27010672433036
patch: return ! is CaMeL Empty ;
rank: 337
score: 98.94651285807292
patch: return search CaMeL Chars . get ( ch ) . contains CaMeL Any ( ch ) ;
rank: 337
score: 98.92255316840277
patch: return cs . contains CaMeL Any ( search CaMeL Chars [ j ] , ch ) ;
rank: 337
score: 98.91456821986607
patch: cs . contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 337
score: 98.74080657958984
patch: if ( ch == ch ) {
rank: 337
score: 98.61455426897321
patch: return true ; } ; ;
rank: 337
score: 98.60603332519531
patch: CaMeL Class ( ; return true ;
rank: 337
score: 98.59130181206598
patch: CaMeL Builder . return return true ; }
rank: 337
score: 98.54695638020833
patch: return count [ j ] == ch ;
rank: 337
score: 98.29676818847656
patch: return 0 . 0 : true ;
rank: 337
score: 98.26955159505208
patch: CaMeL true return true ;
rank: 338
score: 98.92158435639881
patch: return search CaMeL Chars [ j ] . get CaMeL Field ( ) . is CaMeL Empty ( ) ;
rank: 338
score: 98.914501953125
patch: return Char CaMeL Utils . is CaMeL Empty ( cs , ch ) ;
rank: 338
score: 98.61331515842014
patch: g = true ; return false ; }
rank: 338
score: 98.60505022321429
patch: CaMeL Exception ; return false ;
rank: 338
score: 98.59096272786458
patch: return true ; if return true ; }
rank: 338
score: 98.54633246527777
patch: return class [ j ] == ch ;
rank: 338
score: 98.29648263113839
patch: return false ; true ; ;
rank: 338
score: 98.26863606770833
patch: $NUMBER$ ; return true ;
rank: 339
score: 98.94478665865384
patch: return search CaMeL Chars [ char CaMeL At ] == ch ;
rank: 339
score: 98.92110443115234
patch: if ( search CaMeL Chars [ j ] == ch ) { return false ;
rank: 339
score: 98.91429850260417
patch: return search CaMeL Chars [ i ] . contains CaMeL Any ( ) ;
rank: 339
score: 98.73948317307692
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , i ) ;
rank: 339
score: 98.61279296875
patch: . return true ; ; } }
rank: 339
score: 98.60203552246094
patch: CaMeL List . true = true ;
rank: 339
score: 98.58993869357639
patch: return true ; } else = true ;
rank: 339
score: 98.5438003540039
patch: result = true ; return false ;
rank: 339
score: 98.29523383246527
patch: return false ; ; ; = true ;
rank: 339
score: 98.2678955078125
patch: ? return true ;
rank: 340
score: 98.94452582465277
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars [
rank: 340
score: 98.92030962775735
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( ch ) ; }
rank: 340
score: 98.91346232096355
patch: return search CaMeL Chars [ j ] == cs ) ;
rank: 340
score: 98.73902384440105
patch: f = cs . char CaMeL At ( j ) ;
rank: 340
score: 98.61278533935547
patch: return true ; } else break ;
rank: 340
score: 98.60147857666016
patch: CaMeL List true return null ; ;
rank: 340
score: 98.294677734375
patch: ( return ) ; return true ;
rank: 340
score: 98.26710728236607
patch: . return 1 == true ;
rank: 341
score: 98.94405110677083
patch: return Array CaMeL Utils . is CaMeL Not CaMeL Empty ( search CaMeL Chars ) ; }
rank: 341
score: 98.738818359375
patch: return ( ) ;
rank: 341
score: 98.61265733506944
patch: . return true ; } } else {
rank: 341
score: 98.60106658935547
patch: CaMeL List true return true ; }
rank: 341
score: 98.58945719401042
patch: return null ; } if return false ;
rank: 341
score: 98.54325866699219
patch: return true ; } } } }
rank: 341
score: 98.29447174072266
patch: return - 1 ; return false ;
rank: 341
score: 98.26661900111607
patch: loop = true ; break ;
rank: 342
score: 98.94384765625
patch: try { return Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 342
score: 98.92020089285714
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , cs ) ;
rank: 342
score: 98.91227504185268
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( )
rank: 342
score: 98.61250305175781
patch: z = true ; return true ;
rank: 342
score: 98.6006851196289
patch: CaMeL List true true return false ;
rank: 342
score: 98.58886040581598
patch: return true ; while return false ; }
rank: 342
score: 98.5419692993164
patch: Plane { return false ; } }
rank: 342
score: 98.29360961914062
patch: return ~ 1 ; return true ;
rank: 342
score: 98.26622663225446
patch: = true , return true ;
rank: 343
score: 98.94358473557692
patch: return is CaMeL Empty ( search CaMeL Chars , cs ) ;
rank: 343
score: 98.91219075520833
patch: return search CaMeL Chars [ j ] == ch . trim ( ) ;
rank: 343
score: 98.73828125
patch: return ch . char CaMeL At ( j ) == ch ;
rank: 343
score: 98.61229112413194
patch: c = true ; break true ; }
rank: 343
score: 98.60009087456598
patch: CaMeL Class return true ; return false ;
rank: 343
score: 98.58811442057292
patch: CaMeL List true return true ; } }
rank: 343
score: 98.54061889648438
patch: return Boolean . false ;
rank: 343
score: 98.29338073730469
patch: return ; = true ; ; ;
rank: 343
score: 98.26439208984375
patch: return true true ;
rank: 344
score: 98.94326443142361
patch: return search CaMeL Chars . get ( ch ) . contains CaMeL Any ( cs ) ;
rank: 344
score: 98.92003813244048
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) . is CaMeL Empty ( ) ;
rank: 344
score: 98.73788686899039
patch: String ch = cs . char CaMeL At ( i ) ;
rank: 344
score: 98.61187065972223
patch: return Boolean . value CaMeL Of ( ;
rank: 344
score: 98.5994873046875
patch: CaMeL Range return true ; ;
rank: 344
score: 98.58809407552083
patch: return true ; } if ; * /
rank: 344
score: 98.53959825303819
patch: return this [ j ] == ch ;
rank: 344
score: 98.29269409179688
patch: return ; = ; return ; /
rank: 344
score: 98.26425606863839
patch: return true ; j -- ;
rank: 345
score: 98.94298299153645
patch: return contains CaMeL Any ( cs , search CaMeL Chars ,
rank: 345
score: 98.73707164417614
patch: if ( j <= search CaMeL Chars . length )
rank: 345
score: 98.61094156901042
patch: cb = true ; return true ; }
rank: 345
score: 98.59915500217014
patch: CaMeL append return true ; return false ;
rank: 345
score: 98.58799235026042
patch: return is CaMeL Empty ( true ; ;
rank: 345
score: 98.53863525390625
patch: contains [ j ] return true ;
rank: 345
score: 98.29226684570312
patch: return size != true ;
rank: 345
score: 98.26154436383929
patch: CaMeL State true = true ;
rank: 346
score: 98.91869439019098
patch: return is CaMeL Empty ( cs . char CaMeL At ( j ) , ch ) ;
rank: 346
score: 98.91033528645833
patch: cs . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 346
score: 98.73599679129464
patch: if ( search CaMeL Chars [ j ] == ch ) break ;
rank: 346
score: 98.61040581597223
patch: channel = true ; return true ; }
rank: 346
score: 98.59662543402777
patch: CaMeL Enum = true ; return false ;
rank: 346
score: 98.58795844184027
patch: return true ; return false ; } ;
rank: 346
score: 98.53837076822917
patch: return false ; cs CaMeL Length ++ ;
rank: 346
score: 98.29214913504464
patch: return true ; return ; ;
rank: 346
score: 98.26149204799107
patch: n = true ; break ;
rank: 347
score: 98.94286295572917
patch: return Array CaMeL Utils . contains ( cs , cs CaMeL Length ) ;
rank: 347
score: 98.91834077380952
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) . to CaMeL String ( ) ;
rank: 347
score: 98.91022198016827
patch: return null && search CaMeL Chars [ j ] == ch ;
rank: 347
score: 98.73567338423295
patch: return cs . is CaMeL Empty ( ) ) ;
rank: 347
score: 98.60930633544922
patch: return ( true ) ; ; }
rank: 347
score: 98.59642028808594
patch: CaMeL List true true return true ;
rank: 347
score: 98.58753967285156
patch: return ; * * * * ;
rank: 347
score: 98.53662109375
patch: return ! false ; }
rank: 347
score: 98.29182434082031
patch: return false ; ; return 1 ;
rank: 347
score: 98.26052420479911
patch: . get CaMeL Instance ( ;
rank: 348
score: 98.94274030412946
patch: return this . search CaMeL Chars [ j ] == ch ; }
rank: 348
score: 98.91787719726562
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars [ i ] ) ;
rank: 348
score: 98.73562622070312
patch: return ( is CaMeL Empty ( ) ) ;
rank: 348
score: 98.60907660590277
patch: . return true ; } } * /
rank: 348
score: 98.59600151909723
patch: CaMeL Number = true ; if true ;
rank: 348
score: 98.58734130859375
patch: CaMeL List . return true ; }
rank: 348
score: 98.53642054966518
patch: return Boolean . false ; }
rank: 348
score: 98.29113006591797
patch: return 0 ; return true ; ;
rank: 349
score: 98.94252522786458
patch: return search CaMeL Chars . get ( search CaMeL Chars [ j ] ) == ch ;
rank: 349
score: 98.91741388494319
patch: return true + search CaMeL Chars [ j ] ;
rank: 349
score: 98.90779331752232
patch: return search CaMeL Chars [ cs CaMeL Length ] == ch ) ;
rank: 349
score: 98.60763549804688
patch: return ; }
rank: 349
score: 98.59593963623047
patch: CaMeL List . iterator return false ;
rank: 349
score: 98.58603244357639
patch: return true ; } } if false ;
rank: 349
score: 98.53585052490234
patch: return false ; } / * /
rank: 349
score: 98.29045952690973
patch: return ! != true ; return true ;
rank: 349
score: 98.259521484375
patch: CaMeL Object true = true ;
rank: 350
score: 98.94136047363281
patch: return search CaMeL Chars [ j ]
rank: 350
score: 98.90673014322917
patch: return Array CaMeL Utils . is CaMeL Instance ( cs , ch ) ;
rank: 350
score: 98.73427512428977
patch: return cs . search CaMeL Chars [ j ] ;
rank: 350
score: 98.60658772786458
patch: bp = true ; return true ; }
rank: 350
score: 98.59513346354167
patch: CaMeL Exception = false ; return null ;
rank: 350
score: 98.58558654785156
patch: return ; * / return false ;
rank: 350
score: 98.53311920166016
patch: return return false ; } break ;
rank: 350
score: 98.290283203125
patch: return true ; ; return ;
rank: 350
score: 98.25819614955357
patch: . is return true ; }
rank: 351
score: 98.91651068793402
patch: return null . equals ( ch ) ;
rank: 351
score: 98.90631103515625
patch: return Array CaMeL Utils . contains CaMeL Any ( cs ) ; }
rank: 351
score: 98.60658482142857
patch: return true ; / * ;
rank: 351
score: 98.59372287326389
patch: CaMeL Enum . return ( true ) ;
rank: 351
score: 98.58495330810547
patch: return true ; } catch return ;
rank: 351
score: 98.28988211495536
patch: ( false ; return true ;
rank: 351
score: 98.25604248046875
patch: if ( ! true ) {
rank: 352
score: 98.73410470145089
patch: return ( cs . char CaMeL At ( ) == ch ) ;
rank: 352
score: 98.60561794704861
patch: CaMeL ; if ( true ) continue ;
rank: 352
score: 98.593017578125
patch: CaMeL Exception return true ; for true ;
rank: 352
score: 98.58452690972223
patch: return true ; } else if ; }
rank: 352
score: 98.25441487630208
patch: Utilities . return true ;
rank: 353
score: 98.90386352539062
patch: return ch . contains CaMeL Any ( ) ;
rank: 353
score: 98.73380220853366
patch: if ( ch == search CaMeL Chars [ j ] ) {
rank: 353
score: 98.60506184895833
patch: return ! true ; } return true ;
rank: 353
score: 98.58441162109375
patch: return true ; } } catch ;
rank: 353
score: 98.530029296875
patch: return ! return false ; } }
rank: 353
score: 98.2894515991211
patch: return false ; return new true ;
rank: 353
score: 98.25423758370536
patch: tx = true ; break ;
rank: 354
score: 98.93925645616319
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length ) return false ;
rank: 354
score: 98.91610054347827
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 354
score: 98.90222981770833
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , $STRING$ ) ;
rank: 354
score: 98.733642578125
patch: if ( search CaMeL Length < Array CaMeL Utils . length )
rank: 354
score: 98.59260777064732
patch: CaMeL Number true return false ;
rank: 354
score: 98.28910997178819
patch: CaMeL do . return ( true ; {
rank: 354
score: 98.25354875837054
patch: . return null == true ;
rank: 355
score: 98.93922932942708
patch: return search CaMeL Chars [ j ] == ch ; ;
rank: 355
score: 98.9159923735119
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs . to CaMeL String ( ) ) ;
rank: 355
score: 98.73131214488636
patch: if ( is CaMeL Empty ( ch ) ) {
rank: 355
score: 98.60352434430804
patch: p ; return true ; }
rank: 355
score: 98.58355034722223
patch: return true ; } } return null ;
rank: 355
score: 98.28904724121094
patch: return matches ; ; return true ;
rank: 355
score: 98.2530517578125
patch: scan = true ; break ;
rank: 356
score: 98.93844943576389
patch: return search CaMeL Chars [ cs . char CaMeL At ( j ) ] == ch ;
rank: 356
score: 98.91546020507812
patch: return ( search CaMeL Chars . char CaMeL At ( j ) . equals ( ch ) ) ;
rank: 356
score: 98.89917805989583
patch: return Array CaMeL Utils . contains ( cs , search CaMeL Length ) ;
rank: 356
score: 98.73130289713542
patch: throw new Illegal CaMeL Argument CaMeL Exception ( i ) ;
rank: 356
score: 98.5908432006836
patch: return true ; return - $STRING$ ;
rank: 356
score: 98.52742004394531
patch: result = false ; return false ;
rank: 356
score: 98.28821563720703
patch: CaMeL ; = true ; true ;
rank: 356
score: 98.25165666852679
patch: focus = true ; break ;
rank: 357
score: 98.89905657087054
patch: return search CaMeL Chars [ j ] . contains ( $STRING$ ) ;
rank: 357
score: 98.73126220703125
patch: return ( is . is CaMeL Empty ( ) ) ;
rank: 357
score: 98.60264078776042
patch: return true ; ; } } else {
rank: 357
score: 98.59047444661458
patch: CaMeL append = true ; return true ;
rank: 357
score: 98.58245171440973
patch: return is ; } } return false ;
rank: 357
score: 98.52723911830357
patch: return false ; ch ++ ;
rank: 357
score: 98.28816223144531
patch: return 0 . 0 == true ;
rank: 358
score: 98.91502685546875
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . contains ( ch ) ;
rank: 358
score: 98.60196685791016
patch: return true ; } else { ;
rank: 358
score: 98.59046766493056
patch: CaMeL Number return true ; if true ;
rank: 358
score: 98.58241780598958
patch: return null ; } else return true ;
rank: 358
score: 98.52687581380208
patch: return chars [ j ] == ch ;
rank: 358
score: 98.28804779052734
patch: return false ; ; return ; ;
rank: 358
score: 98.24685232979911
patch: ( true , true ) ;
rank: 359
score: 98.91487844366776
patch: return search CaMeL Chars [ j ] == search CaMeL Chars . to CaMeL String ( ) ;
rank: 359
score: 98.89860026041667
patch: return ch == $STRING$ . is CaMeL Empty ( ) ;
rank: 359
score: 98.730810546875
patch: if ( j >= search CaMeL Length ) {
rank: 359
score: 98.60177951388889
patch: . return is CaMeL Empty ( ; }
rank: 359
score: 98.5904541015625
patch: CaMeL List . return ( true ; ;
rank: 359
score: 98.58169555664062
patch: return ; ; } } return ;
rank: 359
score: 98.5244140625
patch: contains [ j ] = true ; }
rank: 359
score: 98.28742980957031
patch: ( true ) ; return 1 ;
rank: 359
score: 98.24529157366071
patch: if true ; break ; }
rank: 360
score: 98.93694709329044
patch: return search CaMeL Chars [ search CaMeL Chars . char CaMeL At ( j ) ]
rank: 360
score: 98.91466703869048
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , ch ) ;
rank: 360
score: 98.73037484975961
patch: if ( Character . is CaMeL Empty ( ch ) ) {
rank: 360
score: 98.60176595052083
patch: return is CaMeL Empty [ j ] ;
rank: 360
score: 98.58885192871094
patch: CaMeL Range true return null ; ;
rank: 360
score: 98.58163452148438
patch: return is CaMeL Empty && true ;
rank: 360
score: 98.28688049316406
patch: return is ; { return true ;
rank: 360
score: 98.24498639787946
patch: $NUMBER$ . ; break ; }
rank: 361
score: 98.89724496694711
patch: return this . search CaMeL Chars [ i ] == ch ;
rank: 361
score: 98.73000662667411
patch: else if ( search CaMeL Chars [ j ] == ch ) {
rank: 361
score: 98.58879743303571
patch: CaMeL Number return return true ;
rank: 361
score: 98.28679741753473
patch: return true ; true ; return false ;
rank: 361
score: 98.24465506417411
patch: . char true = true ;
rank: 362
score: 98.91452026367188
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( i ) ) ;
rank: 362
score: 98.72965181790866
patch: return Array CaMeL Utils . is CaMeL Empty ( $STRING$ ) ;
rank: 362
score: 98.60042572021484
patch: a = true ; return true ;
rank: 362
score: 98.58879089355469
patch: return new true ; return true ;
rank: 362
score: 98.52145385742188
patch: contains [ j ] return false ;
rank: 362
score: 98.28669956752232
patch: return is ( 0 ) ;
rank: 362
score: 98.24322509765625
patch: CaMeL ; return true ; ;
rank: 363
score: 98.91435241699219
patch: return is CaMeL Empty ( search CaMeL Chars [ j ] , ch ) ;
rank: 363
score: 98.89622395833334
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , i ) ;
rank: 363
score: 98.72891939603366
patch: if ( search CaMeL Chars . length <= search CaMeL Chars .
rank: 363
score: 98.59976196289062
patch: t ; return true ; } }
rank: 363
score: 98.58875868055556
patch: CaMeL j = true ; return false ;
rank: 363
score: 98.57632446289062
patch: return false ; } if ; }
rank: 363
score: 98.52104356553819
patch: return ( true && false ) ; }
rank: 363
score: 98.28627522786458
patch: return ; { return true ; break ;
rank: 363
score: 98.24285016741071
patch: CaMeL return true ; ; }
rank: 364
score: 98.91419813368056
patch: return search CaMeL Chars [ j ] . char CaMeL At ( cs CaMeL Length ) ;
rank: 364
score: 98.89588216145833
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , i ) ;
rank: 364
score: 98.59893798828125
patch: logger = true ; return true ; }
rank: 364
score: 98.57463073730469
patch: return is true ; break ; }
rank: 364
score: 98.28475189208984
patch: return true ; ; if return ;
rank: 364
score: 98.24120221819196
patch: . return ! true ; }
rank: 365
score: 98.91377397017045
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs . char CaMeL At ( i ) ) ;
rank: 365
score: 98.89524147727273
patch: return cs == search CaMeL Chars [ j ] ;
rank: 365
score: 98.72794886997768
patch: return return ( search CaMeL Chars [ j ] == ch ) ;
rank: 365
score: 98.59760284423828
patch: return true && true ; } }
rank: 365
score: 98.57431369357639
patch: . . . return true ; } }
rank: 365
score: 98.51968383789062
patch: return return true ; } break ;
rank: 365
score: 98.2842025756836
patch: return ; return ; return 0 ;
rank: 365
score: 98.24100167410714
patch: return true ; default * /
rank: 366
score: 98.934765625
patch: return search CaMeL Chars [ cs CaMeL Length ] == search CaMeL Length ;
rank: 366
score: 98.72764369419643
patch: throw new Illegal CaMeL Argument CaMeL Exception ( [ i ] ) ;
rank: 366
score: 98.59674072265625
patch: return true ; break ; } ; }
rank: 366
score: 98.58746337890625
patch: CaMeL Boolean return true ; return false ;
rank: 366
score: 98.57402801513672
patch: return ; = true ; } }
rank: 366
score: 98.51883951822917
patch: return ( true && true ) ; }
rank: 366
score: 98.28414154052734
patch: return - ) ; return 0 ;
rank: 366
score: 98.239990234375
patch: Utilities . return true ; }
rank: 367
score: 98.93456092247597
patch: return search CaMeL Chars [ cs CaMeL Length ] < ch ;
rank: 367
score: 98.72749633789063
patch: if ( search CaMeL Length <= 1 ) {
rank: 367
score: 98.59670681423611
patch: ( true ) . return true ; }
rank: 367
score: 98.58702596028645
patch: CaMeL Error = true ;
rank: 367
score: 98.57237243652344
patch: return is CaMeL True return false ;
rank: 367
score: 98.51822916666667
patch: return ! return false ;
rank: 367
score: 98.28412628173828
patch: CaMeL List ( true true ) ;
rank: 367
score: 98.2391866048177
patch: $NUMBER$ ? return true ;
rank: 368
score: 98.72672526041667
patch: return cs . is CaMeL Empty ( ) ; break ;
rank: 368
score: 98.59666612413194
patch: return true ; } else break ; }
rank: 368
score: 98.58676486545139
patch: CaMeL Class . return ( true ) ;
rank: 368
score: 98.5720926920573
patch: return is return true ;
rank: 368
score: 98.28334045410156
patch: return false ; return ( true ;
rank: 368
score: 98.23698207310268
patch: . return return true ; }
rank: 369
score: 98.93287568933823
patch: return ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Length ) ) ;
rank: 369
score: 98.91250128495066
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . clear ( ) ;
rank: 369
score: 98.72645920973558
patch: if ( search CaMeL Chars . length != search CaMeL Length )
rank: 369
score: 98.59315321180556
patch: return false ; ; } return true ;
rank: 369
score: 98.58610026041667
patch: return true ; ; else return false ;
rank: 369
score: 98.51744079589844
patch: return return false ; } } }
rank: 369
score: 98.28319549560547
patch: return ( ) ; return true ;
rank: 369
score: 98.23629324776786
patch: . return $NUMBER$ == true ;
rank: 370
score: 98.93283260569854
patch: return Array CaMeL Utils . is CaMeL Empty ( cs CaMeL Length , cs ) ;
rank: 370
score: 98.72644653320313
patch: if ( is CaMeL Empty ( ) ) {
rank: 370
score: 98.59288024902344
patch: return ( ch == $STRING$ ) ;
rank: 370
score: 98.58580186631944
patch: CaMeL Boolean = true ; return null ;
rank: 370
score: 98.28272840711806
patch: return is != true ; return true ;
rank: 370
score: 98.23616245814732
patch: [ ; if ( true )
rank: 371
score: 98.9120861235119
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars [ j ] ) ;
rank: 371
score: 98.72621372767857
patch: return search CaMeL Length < search CaMeL Chars . length - 1 ;
rank: 371
score: 98.59247589111328
patch: return ( ch == true ) ;
rank: 371
score: 98.58413357204861
patch: CaMeL Class = true ; return true ;
rank: 371
score: 98.51447889539931
patch: return false [ j ] == ch ;
rank: 371
score: 98.28264617919922
patch: return ! ) ; return false ;
rank: 372
score: 98.91200358072916
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) ;
rank: 372
score: 98.72611177884616
patch: throw new Illegal CaMeL Argument CaMeL Exception ( . i ) ;
rank: 372
score: 98.58346896701389
patch: CaMeL Exception = true ; for true ;
rank: 372
score: 98.57000732421875
patch: return ; / * * * /
rank: 372
score: 98.5135726928711
patch: return false ; } ch ++ ;
rank: 372
score: 98.28205023871527
patch: CaMeL Thread ( true ) ; return ;
rank: 373
score: 98.92930501302084
patch: return is CaMeL Empty ( cs , search CaMeL Chars , ch ) ;
rank: 373
score: 98.72590855189732
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ; }
rank: 373
score: 98.58143446180556
patch: CaMeL List . true return true ; ;
rank: 373
score: 98.51338958740234
patch: return return true ; } } }
rank: 373
score: 98.28148057725694
patch: return 0 ; break ; return true ;
rank: 373
score: 98.23529924665179
patch: bp = true ; break ;
rank: 374
score: 98.9290771484375
patch: return search CaMeL Chars . equals ( cs ) ;
rank: 374
score: 98.91163465711806
patch: return this . contains CaMeL Any ( cs , search CaMeL Chars [ j ] ) ;
rank: 374
score: 98.88399251302083
patch: return || search CaMeL Chars [ j ] == ch ;
rank: 374
score: 98.72531127929688
patch: return ( ch . is CaMeL Empty ( ) ) ;
rank: 374
score: 98.58123779296875
patch: CaMeL List return true ; return null ;
rank: 374
score: 98.56892225477431
patch: return true ; } return false ; ;
rank: 374
score: 98.51224093967014
patch: try { return true ; } * /
rank: 374
score: 98.27999441964286
patch: return 0 + return 1 ;
rank: 374
score: 98.23488362630208
patch: CaMeL true = false ;
rank: 375
score: 98.91124267578125
patch: return search CaMeL Chars [ j ] == search CaMeL Chars . char CaMeL At ( j ) ;
rank: 375
score: 98.88394165039062
patch: return search CaMeL Chars [ j ] != ch ) ;
rank: 375
score: 98.72484241832386
patch: if ( cs CaMeL Length >= cs CaMeL Length )
rank: 375
score: 98.59117974175348
patch: return is CaMeL Blank ( ch ) ;
rank: 375
score: 98.58083767361111
patch: return false ; return false ; true ;
rank: 375
score: 98.56745741102431
patch: return ; ; } if return false ;
rank: 375
score: 98.27802276611328
patch: return 0 + true ; true ;
rank: 375
score: 98.23485456194196
patch: j = true ; break ;
rank: 376
score: 98.92853142233456
patch: return ( search CaMeL Chars . char CaMeL At ( j ) == null ) ;
rank: 376
score: 98.91074440696023
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] . search CaMeL Chars ) ;
rank: 376
score: 98.72450764973958
patch: return ( search CaMeL Length < cs CaMeL Length ) ;
rank: 376
score: 98.58921813964844
patch: . return true ; continue ; }
rank: 376
score: 98.58072916666667
patch: CaMeL Error return true ; return null ;
rank: 376
score: 98.56711154513889
patch: return return true ; } } if ;
rank: 376
score: 98.50792694091797
patch: return is [ j ] ; }
rank: 376
score: 98.27717420789931
patch: return 0 ; return $NUMBER$ ; break ;
rank: 376
score: 98.23212541852679
patch: return true ; else break ;
rank: 377
score: 98.9103473165761
patch: return search CaMeL Chars [ j ] . char CaMeL At ( cs . char CaMeL At ( j ) ) ;
rank: 377
score: 98.88306603064903
patch: return search CaMeL Chars [ j ] == ch . class ;
rank: 377
score: 98.72444661458333
patch: return cs . is CaMeL Empty ( ) + 1 ;
rank: 377
score: 98.58804660373264
patch: return true ; / * return true ;
rank: 377
score: 98.57852511935764
patch: return true ; ; catch return true ;
rank: 377
score: 98.56684027777777
patch: return ; ; } else return false ;
rank: 377
score: 98.5076904296875
patch: return ch [ i ] == ch ;
rank: 377
score: 98.2770004272461
patch: CaMeL = false ; return true ;
rank: 377
score: 98.23080880301339
patch: cached = true ; break ;
rank: 378
score: 98.9273681640625
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , start ) ;
rank: 378
score: 98.91025954026442
patch: return ( search CaMeL Chars [ j ] == $STRING$ ) ;
rank: 378
score: 98.88294396033653
patch: return true . contains CaMeL Any ( cs , ch ) ;
rank: 378
score: 98.58748372395833
patch: return true ; } } } * /
rank: 378
score: 98.27675955636161
patch: return ; { return $NUMBER$ ;
rank: 378
score: 98.23069545200893
patch: return is CaMeL Empty ; }
rank: 379
score: 98.88262469951923
patch: return search CaMeL Chars [ j ] == ch + ch ;
rank: 379
score: 98.72430419921875
patch: pos = cs . char CaMeL At ( j ) ;
rank: 379
score: 98.57823181152344
patch: CaMeL List . return true ; ;
rank: 379
score: 98.56622314453125
patch: return is CaMeL Empty ; ;
rank: 379
score: 98.50442165798611
patch: return ( true || false ) ; }
rank: 379
score: 98.27639770507812
patch: return ! return ; return true ;
rank: 379
score: 98.22902134486607
patch: . get CaMeL Default ( ;
rank: 380
score: 98.9270881204044
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars + j ) ;
rank: 380
score: 98.90985576923077
patch: return search CaMeL Chars [ j ] == null . null ;
rank: 380
score: 98.72415161132812
patch: return ( search CaMeL Length >= cs CaMeL Length ) ;
rank: 380
score: 98.58680071149554
patch: m = ; return true ;
rank: 380
score: 98.57775115966797
patch: return true ; ; ; else {
rank: 380
score: 98.56621636284723
patch: return true ; } else if return ;
rank: 380
score: 98.50263977050781
patch: return new Object [ ] { ch
rank: 380
score: 98.27630615234375
patch: ( false ) ; return ;
rank: 380
score: 98.22829182942708
patch: . ; break ; }
rank: 381
score: 98.92664292279412
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) + ch ;
rank: 381
score: 98.90972028459821
patch: return null . contains ( search CaMeL Chars [ j ] ) ;
rank: 381
score: 98.88091571514423
patch: return false || search CaMeL Chars [ j ] == ch ;
rank: 381
score: 98.72356708233173
patch: if ( Array CaMeL Utils . is CaMeL Empty ( ) )
rank: 381
score: 98.58653259277344
patch: return ! true ; } ; }
rank: 381
score: 98.57712131076389
patch: CaMeL Number [ ] true = true ;
rank: 381
score: 98.56595611572266
patch: return return true ; } * /
rank: 381
score: 98.50257025824652
patch: return value [ i ] == ch ;
rank: 381
score: 98.27523040771484
patch: return true ; return true ; else
rank: 382
score: 98.925341796875
patch: return contains CaMeL Any ( cs , search CaMeL Chars , j ) ;
rank: 382
score: 98.909326171875
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars [ j ] ) ;
rank: 382
score: 98.72354830228366
patch: return ! Array CaMeL Utils . is CaMeL Empty ( ) ;
rank: 382
score: 98.58621215820312
patch: return true ; } } * ;
rank: 382
score: 98.57672119140625
patch: CaMeL i = true ; return false ;
rank: 382
score: 98.56581115722656
patch: return is CaMeL True ( true ;
rank: 382
score: 98.50226508246527
patch: return ( false && false ) ; }
rank: 383
score: 98.9093017578125
patch: return ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 383
score: 98.8796895345052
patch: return && search CaMeL Chars [ j ] == ch ;
rank: 383
score: 98.723388671875
patch: return ch . char CaMeL At ( i ) == ch ;
rank: 383
score: 98.57614474826389
patch: CaMeL Null return true ; return null ;
rank: 383
score: 98.56509060329861
patch: return true ; } / * * /
rank: 383
score: 98.50168863932292
patch: return false ; i ++ ; } }
rank: 383
score: 98.27323913574219
patch: CaMeL ch = true ; true ;
rank: 383
score: 98.22718157087054
patch: rt = true ; break ;
rank: 384
score: 98.87839762369792
patch: return ! search CaMeL Chars [ j ] != ch ;
rank: 384
score: 98.58523220486111
patch: b = true ; return false ; }
rank: 384
score: 98.57556830512152
patch: CaMeL Exception return false ; return true ;
rank: 384
score: 98.56488037109375
patch: return false ; while return true ;
rank: 384
score: 98.50146484375
patch: old [ j ] = true ;
rank: 384
score: 98.27191925048828
patch: return true ; ; return ; *
rank: 384
score: 98.22641427176339
patch: return ( ! true ) ;
rank: 385
score: 98.9242694561298
patch: return contains CaMeL Any ( ch , cs CaMeL Length ) ;
rank: 385
score: 98.9091564360119
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . to CaMeL String ( ) ;
rank: 385
score: 98.72250366210938
patch: if ( 0 == search CaMeL Chars . length ) {
rank: 385
score: 98.58493041992188
patch: g = true ; break ; }
rank: 385
score: 98.5755386352539
patch: return new && ( true ) ;
rank: 385
score: 98.56478542751736
patch: return true ; if ; return false ;
rank: 385
score: 98.50043402777777
patch: return true [ j ] == ch ;
rank: 385
score: 98.2718276977539
patch: CaMeL List ( true ) ; true
rank: 385
score: 98.22640555245536
patch: inst = true ; break ;
rank: 386
score: 98.72246759588069
patch: return cs . is CaMeL Empty ( ) true ;
rank: 386
score: 98.58401828342014
patch: s = true ; return false ; }
rank: 386
score: 98.57329644097223
patch: return true ; ; ; if true false
rank: 386
score: 98.56373426649306
patch: CaMeL List return ; return false ; }
rank: 386
score: 98.50020926339286
patch: return { return false ; }
rank: 386
score: 98.27149963378906
patch: return == $NUMBER$ ; return true ;
rank: 386
score: 98.22596232096355
patch: CaMeL Builder return true ;
rank: 387
score: 98.92047588641827
patch: return is CaMeL Empty ( search CaMeL Chars , j ) ;
rank: 387
score: 98.90821748621323
patch: return ( search CaMeL Chars [ j ] . is CaMeL Empty ( ) ) ;
rank: 387
score: 98.87730916341145
patch: return search CaMeL Chars [ j ] < ch ) ;
rank: 387
score: 98.72198486328125
patch: if ( cs CaMeL Length < cs CaMeL Length ) {
rank: 387
score: 98.58357747395833
patch: return true ; } } * / ;
rank: 387
score: 98.57305908203125
patch: CaMeL Number ; return true ;
rank: 387
score: 98.56293487548828
patch: return ; / * return true ;
rank: 387
score: 98.49922688802083
patch: Plane { return true ;
rank: 387
score: 98.27137756347656
patch: return ; = ; return 0 ;
rank: 387
score: 98.22586495535714
patch: CaMeL System . return true ;
rank: 388
score: 98.9203632061298
patch: return search CaMeL Chars [ cs CaMeL Length ] > 0 ;
rank: 388
score: 98.90773703835227
patch: return true . contains CaMeL Any ( ch ) ;
rank: 388
score: 98.72191365559895
patch: while ( j < search CaMeL Chars . length ) {
rank: 388
score: 98.58315700954861
patch: p = ; ; return true ; }
rank: 388
score: 98.57302420479911
patch: CaMeL Range ( true ) ;
rank: 388
score: 98.56291198730469
patch: return null ; break ; } }
rank: 388
score: 98.49794006347656
patch: logger . { return false ; }
rank: 388
score: 98.27127838134766
patch: return size != true ; break ;
rank: 388
score: 98.22496686662946
patch: comp = true ; break ;
rank: 389
score: 98.91836983816964
patch: return ( search CaMeL Chars . char CaMeL At ( j ) ;
rank: 389
score: 98.9076904296875
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , search CaMeL Chars [ i ] ) ;
rank: 389
score: 98.87216421274039
patch: return cs . contains CaMeL Any ( cs , cs ) ;
rank: 389
score: 98.58264923095703
patch: . return true ; } else {
rank: 389
score: 98.57265799386161
patch: CaMeL Exception = return true ;
rank: 389
score: 98.56283908420139
patch: CaMeL State . true return true ; }
rank: 389
score: 98.49493408203125
patch: return false ; { return false ; }
rank: 389
score: 98.27064514160156
patch: return next ; ; return true ;
rank: 389
score: 98.22454833984375
patch: . synchronized ( this ) {
rank: 390
score: 98.91738552517361
patch: return contains CaMeL Any ( j ) ;
rank: 390
score: 98.90766834077381
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . contains CaMeL Any ( ) ;
rank: 390
score: 98.72107950846355
patch: return return is CaMeL Empty ( search CaMeL Chars ) ;
rank: 390
score: 98.58251190185547
patch: profile = true ; return true ;
rank: 390
score: 98.57221221923828
patch: CaMeL Category . true return true ;
rank: 390
score: 98.56215122767857
patch: return ; ; return true ;
rank: 390
score: 98.49459499782986
patch: return ! false ; return false ; }
rank: 390
score: 98.26904296875
patch: return & true ; return true ;
rank: 390
score: 98.22432454427083
patch: if ( ! true )
rank: 391
score: 98.90686616443452
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Supported ( ) ;
rank: 391
score: 98.72093370225694
patch: return ( Char CaMeL Sequence ) true ;
rank: 391
score: 98.58213806152344
patch: CaMeL System . return true ; }
rank: 391
score: 98.57135009765625
patch: CaMeL Exception = true ; break ; }
rank: 391
score: 98.56210666232639
patch: return true ; } catch ; * /
rank: 391
score: 98.26832071940105
patch: return 0 && true ;
rank: 391
score: 98.22249930245536
patch: return true ; count -- ;
rank: 392
score: 98.90657348632813
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . equals ( ch ) ;
rank: 392
score: 98.7206280048077
patch: if ( ! Array CaMeL Utils . is CaMeL Empty ( cs
rank: 392
score: 98.58197784423828
patch: f = ; return true ; }
rank: 392
score: 98.57085503472223
patch: CaMeL List . true ; return false ;
rank: 392
score: 98.49451555524554
patch: return { return true ; }
rank: 392
score: 98.26688058035714
patch: CaMeL List ( false ) ;
rank: 392
score: 98.22062465122768
patch: |= true ; break ; }
rank: 393
score: 98.90561147836539
patch: return search CaMeL Chars [ j ] == ch . name ;
rank: 393
score: 98.8690185546875
patch: search CaMeL Chars [ j ] == ch ;
rank: 393
score: 98.72049654447116
patch: byte ch = cs . char CaMeL At ( j ) ;
rank: 393
score: 98.5819091796875
patch: CaMeL true = true ; return false ;
rank: 393
score: 98.57031928168402
patch: CaMeL FALSE = true ; return true ;
rank: 393
score: 98.5616455078125
patch: return true ; } catch ;
rank: 393
score: 98.26678466796875
patch: ( 0 ; return true ;
rank: 393
score: 98.22024100167411
patch: . return false ; true ;
rank: 394
score: 98.90559387207031
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) ; }
rank: 394
score: 98.72028057391827
patch: if ( ! ! cs . is CaMeL Empty ( ) )
rank: 394
score: 98.56781768798828
patch: CaMeL Range true return false ; ;
rank: 394
score: 98.49241420200893
patch: Plane ! return false ; }
rank: 394
score: 98.26527404785156
patch: CaMeL *= true ; return true ;
rank: 394
score: 98.22017415364583
patch: * / return false ;
rank: 395
score: 98.91357421875
patch: return contains CaMeL Any ( cs CaMeL Length ) ;
rank: 395
score: 98.9055404663086
patch: if ( search CaMeL Chars [ j ] == ch ) { return true ;
rank: 395
score: 98.71926047585227
patch: if ( search CaMeL Chars [ j ] ) {
rank: 395
score: 98.58128356933594
patch: . return true ; } * /
rank: 395
score: 98.56771511501736
patch: CaMeL Error return true ; if true ;
rank: 395
score: 98.55976867675781
patch: return ; / * return false ;
rank: 395
score: 98.49231719970703
patch: contains [ i ] = false ;
rank: 395
score: 98.26487513950893
patch: return false ; ; ; ;
rank: 395
score: 98.22011893136161
patch: if ( true == true )
rank: 396
score: 98.91269155649039
patch: return search CaMeL Chars . equals ( cs , ch ) ;
rank: 396
score: 98.86299954927884
patch: return ( search CaMeL Chars [ j ] < ch ) ;
rank: 396
score: 98.7188212076823
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , ) ;
rank: 396
score: 98.58098687065973
patch: log = true ; return true ; }
rank: 396
score: 98.56602647569444
patch: return true ; return ( true ) ;
rank: 396
score: 98.55861409505208
patch: CaMeL List return return return true ; }
rank: 396
score: 98.49058024088542
patch: Plane { return false ;
rank: 396
score: 98.26475524902344
patch: return - ) ; return $NUMBER$ ;
rank: 397
score: 98.9123046875
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , [
rank: 397
score: 98.86193237304687
patch: return ( search CaMeL Chars [ j ] ;
rank: 397
score: 98.7187744140625
patch: return ( cs . Char CaMeL Sequence ) ;
rank: 397
score: 98.57988823784723
patch: . return is CaMeL Empty ( ) ;
rank: 397
score: 98.55859375
patch: return true ; } for return false ;
rank: 397
score: 98.26470947265625
patch: return next true ; return true ;
rank: 397
score: 98.21798706054688
patch: CaMeL ch = true ;
rank: 398
score: 98.91169877485795
patch: return contains CaMeL Any ( ch , cs ) ;
rank: 398
score: 98.8618876139323
patch: cs . search CaMeL Chars [ j ] = ch ;
rank: 398
score: 98.71857158954327
patch: return Array CaMeL Utils . is CaMeL Empty ( 0 ) ;
rank: 398
score: 98.56543840680804
patch: CaMeL Range . return true ;
rank: 398
score: 98.48899841308594
patch: result = true ; return true ;
rank: 398
score: 98.26465606689453
patch: return ! 1 ; return false ;
rank: 398
score: 98.21745082310268
patch: $NUMBER$ ; return false ; }
rank: 399
score: 98.91103690011161
patch: return search CaMeL Chars [ cs CaMeL Length ] == ch ; }
rank: 399
score: 98.86166616586539
patch: return true . contains CaMeL Any ( ch , ch ) ;
rank: 399
score: 98.71828206380208
patch: if ( i != search CaMeL Chars . length ) {
rank: 399
score: 98.5797119140625
patch: return true ; count ++ ; }
rank: 399
score: 98.56460571289062
patch: CaMeL Exception ; return false ; }
rank: 399
score: 98.55773247612848
patch: CaMeL List . return return true ; }
rank: 399
score: 98.48866271972656
patch: ch [ j ] = ch ;
rank: 399
score: 98.26416778564453
patch: return length ; ; return true ;
rank: 399
score: 98.21452985491071
patch: if ( true && true )
rank: 400
score: 98.9037577311198
patch: contains = cs . char CaMeL At ( j ) ;
rank: 400
score: 98.86121544471153
patch: return search CaMeL Chars [ j ] & ch . length ;
rank: 400
score: 98.717529296875
patch: return cs . is CaMeL Empty ( ) false ;
rank: 400
score: 98.57954237196181
patch: f = true ; return false ; }
rank: 400
score: 98.56442260742188
patch: return new ! ( true ) ;
rank: 400
score: 98.55596923828125
patch: return true ; * * * /
rank: 400
score: 98.48837716238839
patch: { return false ; } }
rank: 400
score: 98.2132568359375
patch: . return Boolean . FALSE ;
rank: 401
score: 98.91061636117789
patch: return search CaMeL Chars [ cs CaMeL Length ] == cs ;
rank: 401
score: 98.86001352163461
patch: return true + search CaMeL Chars [ j ] == ch ;
rank: 401
score: 98.71742757161458
patch: if ( ! is CaMeL Empty ( cs ) ) {
rank: 401
score: 98.57933892144098
patch: return true ; } } / * ;
rank: 401
score: 98.56302897135417
patch: return true ; return null ; break ;
rank: 401
score: 98.55590142144098
patch: CaMeL List true ; return false ; }
rank: 401
score: 98.48836263020833
patch: Plane ! return false ;
rank: 401
score: 98.26301574707031
patch: CaMeL return ) ; return false ;
rank: 401
score: 98.21316092354911
patch: CaMeL return true ; } ;
rank: 402
score: 98.85706583658855
patch: return true + ch . to CaMeL String ( ) ;
rank: 402
score: 98.7168438251202
patch: if ( search CaMeL Chars . length > search CaMeL Length )
rank: 402
score: 98.56279645647321
patch: CaMeL Null ( true ) ;
rank: 402
score: 98.5551986694336
patch: return ; ? return false ; }
rank: 402
score: 98.48822784423828
patch: return ! return true ; } }
rank: 402
score: 98.26259068080357
patch: CaMeL List ( return ) ;
rank: 402
score: 98.21206229073661
patch: image = true ; break ;
rank: 403
score: 98.90267181396484
patch: return ( search CaMeL Chars [ j ] . equals ( ch ) ) ;
rank: 403
score: 98.71642049153645
patch: return ( cs CaMeL Length < cs CaMeL Length ) ;
rank: 403
score: 98.56246948242188
patch: CaMeL Exception = ; return false ;
rank: 403
score: 98.55431450737848
patch: CaMeL Error ; return false ; } }
rank: 403
score: 98.48816680908203
patch: return new int [ ] { j
rank: 403
score: 98.26216634114583
patch: return ; { true ;
rank: 403
score: 98.21155657087054
patch: = this ; break ; }
rank: 404
score: 98.90917154947917
patch: return contains CaMeL Any ( cs , search CaMeL Chars , cs ) ;
rank: 404
score: 98.90199346127717
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . trim ( ) ) ;
rank: 404
score: 98.8570087139423
patch: return Array CaMeL Utils . contains ( ch , cs ) ;
rank: 404
score: 98.57864718967014
patch: = true ; return true ; } }
rank: 404
score: 98.56224907769098
patch: CaMeL Throwable = true ; return false ;
rank: 404
score: 98.55366346571181
patch: return null ; } if return true ;
rank: 404
score: 98.48605685763889
patch: return ( ( char ) ch ) ;
rank: 404
score: 98.26036071777344
patch: return start ; ; return true ;
rank: 405
score: 98.90173921130952
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] , ch ) ;
rank: 405
score: 98.85590069110577
patch: return null || search CaMeL Chars [ j ] == ch ;
rank: 405
score: 98.57770538330078
patch: rt = true ; return true ;
rank: 405
score: 98.56196424696181
patch: CaMeL Exception = null ; return false ;
rank: 405
score: 98.55331856863839
patch: return true ; while true ;
rank: 405
score: 98.48565673828125
patch: return false ; * * * /
rank: 405
score: 98.25952911376953
patch: return == ) ; return false ;
rank: 405
score: 98.211181640625
patch: return true ; if ( ;
rank: 406
score: 98.90777180989583
patch: return ( search CaMeL Chars [ cs CaMeL Length ] == ch ) ;
rank: 406
score: 98.85525277944711
patch: return this . search CaMeL Chars [ j ] != ch ;
rank: 406
score: 98.71497691761364
patch: if ( is . is CaMeL Empty ( ) )
rank: 406
score: 98.5618667602539
patch: return false ; return true ; {
rank: 406
score: 98.55305989583333
patch: CaMeL Runtime . return true ; } }
rank: 406
score: 98.25899832589286
patch: return false ; while true ;
rank: 406
score: 98.21048409598214
patch: border = true ; break ;
rank: 407
score: 98.90099225725446
patch: return true . contains ( search CaMeL Chars [ j ] ) ;
rank: 407
score: 98.85439453125
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 407
score: 98.71497521033653
patch: if ( search CaMeL Chars [ j ] == $STRING$ ) {
rank: 407
score: 98.57738579644098
patch: ret = true ; return true ; }
rank: 407
score: 98.56181335449219
patch: return true ; return ( true ;
rank: 407
score: 98.552978515625
patch: return true ; } } else ;
rank: 407
score: 98.2587890625
patch: return false ; ; return $STRING$ ;
rank: 407
score: 98.20645577566964
patch: CaMeL Enum true = false ;
rank: 408
score: 98.907470703125
patch: return return contains CaMeL Any ( cs , search CaMeL Chars ) ;
rank: 408
score: 98.90092387952302
patch: return contains CaMeL Any ( cs , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 408
score: 98.8543368252841
patch: return ch . contains CaMeL Any ( $STRING$ ) ;
rank: 408
score: 98.71444936899039
patch: if ( search CaMeL Chars . length >= search CaMeL Chars .
rank: 408
score: 98.57689751519098
patch: return is CaMeL Empty ( ; } ;
rank: 408
score: 98.56151580810547
patch: CaMeL Range = true ; break ;
rank: 408
score: 98.55296495225694
patch: . set true ; return false ; }
rank: 408
score: 98.48326958550348
patch: return ( false && true ) ; }
rank: 408
score: 98.25789642333984
patch: return 0 . $NUMBER$ + true ;
rank: 408
score: 98.20641217912946
patch: node = true ; break ;
rank: 409
score: 98.90729631696429
patch: return contains CaMeL Any ( cs , search CaMeL Chars ) ; }
rank: 409
score: 98.90079345703126
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . add ( ch ) ;
rank: 409
score: 98.85399451622597
patch: return ( search CaMeL Chars [ j ] == cs ) ;
rank: 409
score: 98.71402994791667
patch: if ( search CaMeL Length <= 0 )
rank: 409
score: 98.5768814086914
patch: . return true ; } } }
rank: 409
score: 98.56088256835938
patch: CaMeL Range ; return true ; }
rank: 409
score: 98.55274963378906
patch: return false ; } catch true ;
rank: 409
score: 98.25788225446429
patch: ; return ; = true ;
rank: 409
score: 98.20383998325893
patch: t = true && true ;
rank: 410
score: 98.900341796875
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . equals ( ch ) ;
rank: 410
score: 98.85349343039773
patch: return search CaMeL Chars [ cs CaMeL Length ] ;
rank: 410
score: 98.71250406901042
patch: return cs . is CaMeL Empty ( ) || true ;
rank: 410
score: 98.57686614990234
patch: z = true ; break ; }
rank: 410
score: 98.56065368652344
patch: CaMeL Range ; return true ; ;
rank: 410
score: 98.5523681640625
patch: return null ; } else return ;
rank: 410
score: 98.48302350725446
patch: return true ; ch ++ ;
rank: 410
score: 98.25627899169922
patch: ( true ; { return true ;
rank: 410
score: 98.20362345377605
patch: return ; break ; }
rank: 411
score: 98.90029009650735
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) != ch ;
rank: 411
score: 98.85329965444711
patch: return true + cs . char CaMeL At ( j ) ;
rank: 411
score: 98.71159057617187
patch: return ( cs CaMeL Length >= 0 ) ;
rank: 411
score: 98.57649993896484
patch: c = ; return false ; }
rank: 411
score: 98.48272705078125
patch: return i [ j ] == ch ;
rank: 411
score: 98.20327758789062
patch: $NUMBER$ return true ; }
rank: 412
score: 98.90711321149554
patch: return contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ,
rank: 412
score: 98.90017700195312
patch: return ! ch . contains ( ch ) ;
rank: 412
score: 98.57614474826389
patch: return true ; * / return true ;
rank: 412
score: 98.56044006347656
patch: CaMeL List return return return true ;
rank: 412
score: 98.55200958251953
patch: return ; * / return true ;
rank: 412
score: 98.48198590959821
patch: { return true ; } }
rank: 412
score: 98.25462341308594
patch: return && true ; return true ;
rank: 412
score: 98.20299421037946
patch: model = true ; break ;
rank: 413
score: 98.90015869140625
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . equals ( ch ) ;
rank: 413
score: 98.71089680989583
patch: if ( search CaMeL Chars . length == 1 ) {
rank: 413
score: 98.57602267795139
patch: return true ; } ++ i ; }
rank: 413
score: 98.56031629774306
patch: CaMeL out = true ; return true ;
rank: 413
score: 98.55084991455078
patch: return is true return true ; }
rank: 413
score: 98.48193359375
patch: return ( true || true ) ; }
rank: 413
score: 98.25382995605469
patch: return return true ; return 1 ;
rank: 413
score: 98.20228794642857
patch: control = true ; break ;
rank: 414
score: 98.90667255108173
patch: return contains CaMeL Any ( search CaMeL Chars , j ) ;
rank: 414
score: 98.90012770432692
patch: return this . search CaMeL Chars [ j ] == $STRING$ ;
rank: 414
score: 98.710205078125
patch: if ( search CaMeL Length > 0 )
rank: 414
score: 98.55948638916016
patch: return this . return true ; ;
rank: 414
score: 98.55064392089844
patch: CaMeL Thread . return true ; }
rank: 414
score: 98.48133087158203
patch: Plane * * / return true ;
rank: 414
score: 98.20227922712054
patch: popup = true ; break ;
rank: 415
score: 98.90009998139881
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . name ) ;
rank: 415
score: 98.85055776742789
patch: return search CaMeL Chars [ j ] == ch + $STRING$ ;
rank: 415
score: 98.71007283528645
patch: if ( ! ch . is CaMeL Empty ( ) )
rank: 415
score: 98.55057101779514
patch: return return null ; } return false ;
rank: 415
score: 98.48118082682292
patch: return ! true ; return false ; }
rank: 415
score: 98.25313023158482
patch: CaMeL List ( ; return ;
rank: 415
score: 98.20152064732143
patch: result = true ; break ;
rank: 416
score: 98.90621243990384
patch: return search CaMeL Chars ( cs , search CaMeL Chars ) ;
rank: 416
score: 98.89979771205357
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) ) ; }
rank: 416
score: 98.70896402994792
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 416
score: 98.57527378627232
patch: 64 . return true ; }
rank: 416
score: 98.55895124162946
patch: CaMeL Error return true ; ;
rank: 416
score: 98.55056762695312
patch: return ; } } if true ;
rank: 416
score: 98.48031277126736
patch: return 0 [ j ] == ch ;
rank: 416
score: 98.25288391113281
patch: return 0 ; } return true ;
rank: 417
score: 98.9044658954327
patch: return search CaMeL Chars [ cs CaMeL Length ] >= ch ;
rank: 417
score: 98.899462890625
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars search CaMeL Chars ) ;
rank: 417
score: 98.84858842329545
patch: return null . contains CaMeL Any ( ch ) ;
rank: 417
score: 98.70862926136364
patch: return cs . is CaMeL Empty ( cs ) ;
rank: 417
score: 98.5745849609375
patch: ep = true ; return true ; }
rank: 417
score: 98.558837890625
patch: return false ; ; catch return true ;
rank: 417
score: 98.25204467773438
patch: return true ; ; return 1 ;
rank: 417
score: 98.19856770833333
patch: p = return true ;
rank: 418
score: 98.90400041852679
patch: return search CaMeL Chars [ cs CaMeL Length ] != ch ) ;
rank: 418
score: 98.89922540838069
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . contains CaMeL Any ( ch ) ;
rank: 418
score: 98.8482998934659
patch: return false + search CaMeL Chars [ j ] ;
rank: 418
score: 98.70818622295673
patch: if ( cs . starts CaMeL With ( ch ) ) {
rank: 418
score: 98.57406616210938
patch: ch = true ; break ; }
rank: 418
score: 98.55874197823661
patch: return new && return true ;
rank: 418
score: 98.54927825927734
patch: return true ; while true ; }
rank: 418
score: 98.1973876953125
patch: operator = true ; break ;
rank: 419
score: 98.9038818359375
patch: return Array CaMeL Utils . search CaMeL Chars ( cs , cs ) ;
rank: 419
score: 98.89912494860198
patch: return ( true || Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ) ) ;
rank: 419
score: 98.70731977982955
patch: return search CaMeL Length < cs CaMeL Length ; }
rank: 419
score: 98.57402038574219
patch: p ; return true ; } }
rank: 419
score: 98.55835723876953
patch: CaMeL Exception ; return true ; ;
rank: 419
score: 98.54912651909723
patch: return true ; } else { return ;
rank: 419
score: 98.47822570800781
patch: return false ; } ++ j ;
rank: 419
score: 98.25125122070312
patch: CaMeL += 0 ; return true ;
rank: 419
score: 98.19694010416667
patch: CaMeL State return true ;
rank: 420
score: 98.90372140066964
patch: return contains CaMeL Any ( search CaMeL Chars [ i ] ) ;
rank: 420
score: 98.89893863075658
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars . length ) ;
rank: 420
score: 98.70611572265625
patch: return Array CaMeL Utils . is CaMeL Empty ( cs CaMeL
rank: 420
score: 98.5582275390625
patch: return true ; return true true ;
rank: 420
score: 98.47740936279297
patch: Plane * / return false ; }
rank: 420
score: 98.25071498325893
patch: CaMeL List ( ) ; ;
rank: 420
score: 98.19686453683036
patch: CaMeL ; * return true ;
rank: 421
score: 98.9032958984375
patch: return search CaMeL Chars [ cs CaMeL Length ] == search CaMeL Chars ;
rank: 421
score: 98.89884679457721
patch: return search CaMeL Chars [ j ] . substring ( search CaMeL Chars . length ;
rank: 421
score: 98.705859375
patch: return ( cs . to CaMeL String ( )
rank: 421
score: 98.57217068142361
patch: return true ; ; } break ; }
rank: 421
score: 98.55760362413194
patch: CaMeL Error = false ; return true ;
rank: 421
score: 98.54884556361607
patch: return is return false ; }
rank: 421
score: 98.47627258300781
patch: return true ; } ch ++ ;
rank: 421
score: 98.24855550130208
patch: return 0 . 0 ;
rank: 421
score: 98.19600423177083
patch: ( return true ) ;
rank: 422
score: 98.90311686197917
patch: return contains CaMeL Any ( cs , cs , search CaMeL Chars ) ;
rank: 422
score: 98.89854431152344
patch: return search CaMeL Chars [ j ] . matches ( search CaMeL Chars ) ;
rank: 422
score: 98.8430419921875
patch: return search CaMeL Chars [ j ] false ;
rank: 422
score: 98.70547485351562
patch: return cs . char CaMeL At ( search CaMeL Length ;
rank: 422
score: 98.57206508091518
patch: c ; return true ; }
rank: 422
score: 98.55607774522569
patch: CaMeL Range [ ; if return true ;
rank: 422
score: 98.54851616753473
patch: CaMeL List return true ; break ; }
rank: 422
score: 98.47624206542969
patch: return false ; } else { }
rank: 422
score: 98.24842071533203
patch: CaMeL ch ( ; return true ;
rank: 422
score: 98.19374302455357
patch: version = true ; break ;
rank: 423
score: 98.89806019176136
patch: return ch != search CaMeL Chars [ j ] ;
rank: 423
score: 98.8425625887784
patch: return ! ! search CaMeL Chars [ j ] ;
rank: 423
score: 98.57201470269098
patch: impl = true ; return true ; }
rank: 423
score: 98.55552673339844
patch: CaMeL Range . return ( true ;
rank: 423
score: 98.54835340711806
patch: return ; * * / return false ;
rank: 423
score: 98.4758071899414
patch: Plane * * / return false ;
rank: 423
score: 98.24748992919922
patch: return 0 ; return return true ;
rank: 423
score: 98.19289725167411
patch: CaMeL true return true ; }
rank: 424
score: 98.89794921875
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . get ( j ) ) ;
rank: 424
score: 98.84225698617789
patch: return ch . contains CaMeL Any ( cs , cs ) ;
rank: 424
score: 98.70369779146634
patch: if ( cs . to CaMeL Lower CaMeL Case ( ) )
rank: 424
score: 98.57195281982422
patch: d = true ; return true ;
rank: 424
score: 98.55433654785156
patch: CaMeL Exception ( ; return true ;
rank: 424
score: 98.54806518554688
patch: return return ; } return false ;
rank: 424
score: 98.47493489583333
patch: if ( search CaMeL Chars [ j ]
rank: 424
score: 98.24740600585938
patch: return != ) ; return 1 ;
rank: 425
score: 98.90141078404018
patch: return ! this . search CaMeL Chars [ j ] == ch ;
rank: 425
score: 98.8975341796875
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == search CaMeL Chars [ j ] ;
rank: 425
score: 98.70272827148438
patch: return ! is . is CaMeL Empty ( ) ; }
rank: 425
score: 98.57168579101562
patch: return false ; } } * /
rank: 425
score: 98.54728190104167
patch: return is true ; } return true ;
rank: 425
score: 98.24681091308594
patch: CaMeL Array CaMeL List ( ) ;
rank: 426
score: 98.90047781808036
patch: return search CaMeL Chars . is CaMeL Empty ( ) ; } }
rank: 426
score: 98.89723802649456
patch: return this . search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 426
score: 98.84193772536058
patch: return cs . contains CaMeL Any ( [ j ] ) ;
rank: 426
score: 98.70241292317708
patch: if ( j > search CaMeL Chars . length ) {
rank: 426
score: 98.5537109375
patch: return true ; return false true ;
rank: 426
score: 98.54708099365234
patch: return false ; } for true ;
rank: 426
score: 98.47458321707589
patch: return ( return false ) ;
rank: 426
score: 98.24641418457031
patch: ( true ) ; return $NUMBER$ ;
rank: 426
score: 98.19203404017857
patch: CaMeL return false ; break ;
rank: 427
score: 98.9001973470052
patch: try { cs . char CaMeL At ( j ) ;
rank: 427
score: 98.8969955444336
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( name ) ;
rank: 427
score: 98.70220392400569
patch: if ( cs . equals ( ch ) ) {
rank: 427
score: 98.57078334263393
patch: return true ; } continue ;
rank: 427
score: 98.54707845052083
patch: return false ; } ; return false ;
rank: 427
score: 98.47437879774306
patch: return return false ; return false ; }
rank: 427
score: 98.24639892578125
patch: return 1 ; return false ;
rank: 428
score: 98.89987618582589
patch: return search CaMeL Chars [ j ] == ch ; return false ;
rank: 428
score: 98.89661322699652
patch: return search CaMeL Chars [ j ] == ch . search CaMeL Chars [ j ] ;
rank: 428
score: 98.84112079326923
patch: return search CaMeL Chars [ j ] instanceof Char CaMeL Sequence ;
rank: 428
score: 98.70163198617789
patch: return ( cs . is CaMeL Empty ( ) ) ; }
rank: 428
score: 98.57065836588542
patch: ? * / return true ; } }
rank: 428
score: 98.55290985107422
patch: CaMeL System . ; return false ;
rank: 428
score: 98.54605538504464
patch: return is true return false ;
rank: 428
score: 98.47433810763889
patch: return false ; j ++ ; } }
rank: 428
score: 98.18968854631696
patch: return - 1 == true ;
rank: 429
score: 98.8992919921875
patch: return search CaMeL Length - search CaMeL Chars . length ; }
rank: 429
score: 98.84059651692708
patch: return ! search CaMeL Chars [ i ] == ch ;
rank: 429
score: 98.70073908025569
patch: return Array CaMeL Utils . contains ( ch ) ;
rank: 429
score: 98.57010323660714
patch: this . return true ; }
rank: 429
score: 98.55178493923611
patch: CaMeL List . iterator return true ; ;
rank: 429
score: 98.54500579833984
patch: return true ; for true * /
rank: 429
score: 98.47301374162946
patch: return is [ i ] ;
rank: 429
score: 98.24565778459821
patch: return ! true ; return ;
rank: 429
score: 98.18800862630208
patch: . switch ( true )
rank: 430
score: 98.83913352272727
patch: return search CaMeL Chars [ j ] . true ;
rank: 430
score: 98.70021409254808
patch: if ( search CaMeL Chars . length != search CaMeL Chars .
rank: 430
score: 98.56928846571181
patch: p = true ; i ++ ; }
rank: 430
score: 98.55166625976562
patch: return new true ; return false ;
rank: 430
score: 98.54498969184027
patch: return false ; if return false ; }
rank: 430
score: 98.24547576904297
patch: CaMeL List ( ; return ; :
rank: 430
score: 98.18798828125
patch: env = return true ;
rank: 431
score: 98.89873798076923
patch: return ( search CaMeL Chars . char CaMeL At ( j )
rank: 431
score: 98.89550103081598
patch: return cs . contains CaMeL Any ( cs , search CaMeL Chars [ i ] ) ;
rank: 431
score: 98.83865121694711
patch: return search CaMeL Chars [ j ] == ch . start ;
rank: 431
score: 98.69980875651042
patch: if ( cs CaMeL Length > cs CaMeL Length ) {
rank: 431
score: 98.569091796875
patch: buffer = true ; return true ; }
rank: 431
score: 98.55130004882812
patch: return false ; return return false ;
rank: 431
score: 98.47108459472656
patch: Plane * / return true ; }
rank: 431
score: 98.24540710449219
patch: return ~ true ; return false ;
rank: 431
score: 98.18724714006696
patch: if ( ; break ; }
rank: 432
score: 98.89549618675595
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL Array ( ) ;
rank: 432
score: 98.6994295987216
patch: if ( search CaMeL Length < cs . length )
rank: 432
score: 98.56903754340277
patch: data = true ; return true ; }
rank: 432
score: 98.55044555664062
patch: CaMeL Builder . return ( true ;
rank: 432
score: 98.54408264160156
patch: return true ; while ; * /
rank: 432
score: 98.47053527832031
patch: old [ i ] = true ;
rank: 432
score: 98.24517822265625
patch: ( $NUMBER$ ) ; return true ;
rank: 432
score: 98.18709019252232
patch: complete = true ; break ;
rank: 433
score: 98.89825439453125
patch: return contains CaMeL Any ( search CaMeL Chars ) ; }
rank: 433
score: 98.89529758029514
patch: return this . search CaMeL Chars [ j ] == search CaMeL Chars [ j ] ;
rank: 433
score: 98.69915771484375
patch: return ( cs CaMeL Length >= search CaMeL Length ) ;
rank: 433
score: 98.55029296875
patch: CaMeL Error true ; return false ;
rank: 433
score: 98.46897888183594
patch: result = false ; return true ;
rank: 433
score: 98.24508666992188
patch: CaMeL |= false ; return true ;
rank: 433
score: 98.18697102864583
patch: $NUMBER$ ; break ; }
rank: 434
score: 98.89745279947917
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == null ;
rank: 434
score: 98.89527085248162
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) == ch ;
rank: 434
score: 98.69888305664062
patch: addr = cs . char CaMeL At ( j ) ;
rank: 434
score: 98.5660629272461
patch: socket = true ; return true ;
rank: 434
score: 98.54997253417969
patch: CaMeL Exception = true ; break ;
rank: 434
score: 98.5438461303711
patch: return ; = return true ; }
rank: 434
score: 98.46635437011719
patch: return * * * * * /
rank: 434
score: 98.24460274832589
patch: return length ; return true ;
rank: 434
score: 98.18654087611607
patch: [ 0 ] = true ;
rank: 435
score: 98.89453125
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , $STRING$ ) ;
rank: 435
score: 98.83330829326923
patch: return search CaMeL Chars [ j ] != ch . length ;
rank: 435
score: 98.69874064127605
patch: return Array CaMeL Utils . is CaMeL Empty ( cs ,
rank: 435
score: 98.56604875837054
patch: return false ; } ; }
rank: 435
score: 98.54899766710069
patch: return false ; ; ; if true false
rank: 435
score: 98.54375542534723
patch: return true ; } } = true ;
rank: 435
score: 98.46395874023438
patch: return { return false ; } }
rank: 435
score: 98.24435860770089
patch: return 0 + true ; ;
rank: 435
score: 98.18533761160714
patch: filter = true ; break ;
rank: 436
score: 98.69853515625
patch: if ( cs CaMeL Length >= 0 ) {
rank: 436
score: 98.56564331054688
patch: return true ; break ; ; }
rank: 436
score: 98.46385192871094
patch: return { return true ; } }
rank: 436
score: 98.18426513671875
patch: . return return true ;
rank: 437
score: 98.89371948242187
patch: return this . search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars ) ;
rank: 437
score: 98.83280123197116
patch: return search CaMeL Chars [ j ] >= ch . length ;
rank: 437
score: 98.69835486778847
patch: return is [ j ] . is CaMeL Empty ( ) ;
rank: 437
score: 98.56476508246527
patch: p = true ; break true ; }
rank: 437
score: 98.54851616753473
patch: return true ; return true ; } ;
rank: 437
score: 98.54281955295139
patch: CaMeL List . true return true ; }
rank: 437
score: 98.46359252929688
patch: cs = true ; return false ;
rank: 437
score: 98.24357604980469
patch: CaMeL ( ) ; return ; {
rank: 437
score: 98.18416922433036
patch: ? * / return false ;
rank: 438
score: 98.69826253255208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ch ) ;
rank: 438
score: 98.56475151909723
patch: return true ; default : return false ;
rank: 438
score: 98.54851616753473
patch: return false ; return ( true ) ;
rank: 438
score: 98.46353149414062
patch: return ( return false ) ; }
rank: 438
score: 98.24297223772321
patch: ( false ) ; true ;
rank: 438
score: 98.1834716796875
patch: return true == true ;
rank: 439
score: 98.89553397042411
patch: return search CaMeL Chars [ cs CaMeL Length ) ] == ch ;
rank: 439
score: 98.89349365234375
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ i ] , ch ) ;
rank: 439
score: 98.69774373372395
patch: if ( ch == search CaMeL Chars . length ) {
rank: 439
score: 98.56406947544643
patch: return false ; ; } }
rank: 439
score: 98.54804229736328
patch: return false ; return true true ;
rank: 439
score: 98.54257202148438
patch: . set ; return true ; }
rank: 439
score: 98.24295806884766
patch: return 0 . 1 + true ;
rank: 439
score: 98.18307931082589
patch: cp = true ; break ;
rank: 440
score: 98.89349006204044
patch: return ! search CaMeL Chars [ j ] . contains CaMeL Any ( cs ) ;
rank: 440
score: 98.83005593039773
patch: return search CaMeL Chars [ j ] != ch _
rank: 440
score: 98.5632095336914
patch: return ch == null || true ;
rank: 440
score: 98.46258544921875
patch: return * * / return false ;
rank: 440
score: 98.24264526367188
patch: CaMeL Thread ( ; = true ;
rank: 440
score: 98.18282645089286
patch: [ i ] = true ;
rank: 441
score: 98.8939208984375
patch: return search CaMeL Chars [ search CaMeL Chars . length - 1
rank: 441
score: 98.89332885742188
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ j ] == ch ) ;
rank: 441
score: 98.82958984375
patch: if ( search CaMeL Chars ) return true ;
rank: 441
score: 98.69681803385417
patch: return ( ch . to CaMeL String ( ) ) ;
rank: 441
score: 98.56180572509766
patch: g = true ; return false ;
rank: 441
score: 98.54151153564453
patch: CaMeL List return ; return false ;
rank: 441
score: 98.46003723144531
patch: ch = false ; return false ;
rank: 441
score: 98.24208068847656
patch: return size != true ; return ;
rank: 441
score: 98.18272181919643
patch: spec = true ; break ;
rank: 442
score: 98.89305962456598
patch: return super . contains CaMeL Any ( cs , search CaMeL Chars [ i ] ) ;
rank: 442
score: 98.89247436523438
patch: return search CaMeL Length - cs CaMeL Length ;
rank: 442
score: 98.69651285807292
patch: expr = cs . char CaMeL At ( j ) ;
rank: 442
score: 98.56167263454861
patch: pa = true ; return true ; }
rank: 442
score: 98.54737854003906
patch: CaMeL Range true return false ; }
rank: 442
score: 98.54075792100694
patch: return return is ; } return false ;
rank: 442
score: 98.45968627929688
patch: [ j ] return false ; }
rank: 442
score: 98.182373046875
patch: if ; break ; }
rank: 443
score: 98.8930331143466
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , $STRING$ ) ;
rank: 443
score: 98.89222063337054
patch: return ch . add ( search CaMeL Chars [ j ] ) ;
rank: 443
score: 98.82169966264205
patch: Multisearch CaMeL Chars [ j ] = ch ;
rank: 443
score: 98.6962421123798
patch: if ( search CaMeL Length < search CaMeL Chars . ) {
rank: 443
score: 98.54653591579861
patch: CaMeL Thread . true ; return true ;
rank: 443
score: 98.54032135009766
patch: CaMeL Error return true ; } }
rank: 443
score: 98.45799037388393
patch: return return return false ; }
rank: 443
score: 98.24080403645833
patch: return 0 . false ;
rank: 443
score: 98.18154471261161
patch: } else if ( true )
rank: 444
score: 98.89303152901786
patch: try { ch = cs . char CaMeL At ( j ) ;
rank: 444
score: 98.89209923377403
patch: return search CaMeL Chars . get ( j ) != ch ;
rank: 444
score: 98.56087239583333
patch: ch = true ; break ; } }
rank: 444
score: 98.54649353027344
patch: return true ; return return false ;
rank: 444
score: 98.45780726841518
patch: Plane ! return true ; }
rank: 444
score: 98.2407455444336
patch: return 0 . 0 | true ;
rank: 444
score: 98.18089076450893
patch: act = true ; break ;
rank: 445
score: 98.89302978515624
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ j ] , cs ) ;
rank: 445
score: 98.53871663411458
patch: . set ; return true ; } }
rank: 445
score: 98.45738728841145
patch: return Boolean . true ;
rank: 445
score: 98.2405776977539
patch: return is != 0 ; return ;
rank: 445
score: 98.17990112304688
patch: CaMeL ; if ( ;
rank: 446
score: 98.69382546164773
patch: return cs . is CaMeL Empty ( ) ; ;
rank: 446
score: 98.56015353732639
patch: return true ; } } i ++ ;
rank: 446
score: 98.53857421875
patch: return true ; while return true ; }
rank: 446
score: 98.24012756347656
patch: return 0 . 0 , true ;
rank: 446
score: 98.17960902622768
patch: return true return false ; }
rank: 447
score: 98.89242553710938
patch: return search CaMeL Chars [ j ] . equals ( search CaMeL Length ) ;
rank: 447
score: 98.68848765980114
patch: return Array CaMeL Utils . is CaMeL Empty ( cs
rank: 447
score: 98.55990600585938
patch: p = ; break ; } }
rank: 447
score: 98.45669119698661
patch: return Boolean . true ; }
rank: 447
score: 98.17943464006696
patch: $NUMBER$ * return true ; }
rank: 448
score: 98.89239501953125
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] , cs ) ;
rank: 448
score: 98.68826904296876
patch: if ( search CaMeL Chars [ j ] ==
rank: 448
score: 98.55928039550781
patch: return true ; } } } ;
rank: 448
score: 98.54476928710938
patch: return new && ( return ) ;
rank: 448
score: 98.4554443359375
patch: return * * / return true ;
rank: 448
score: 98.2396469116211
patch: CaMeL Range ( ; = true ;
rank: 448
score: 98.17898123604911
patch: peer = true ; break ;
rank: 449
score: 98.68775024414063
patch: if ( search CaMeL Length >= 1 ) {
rank: 449
score: 98.55895317925348
patch: c = true ; i ++ ; }
rank: 449
score: 98.54452514648438
patch: CaMeL Range [ ] return false ;
rank: 449
score: 98.53709581163194
patch: return ; ; } if return true ;
rank: 449
score: 98.451904296875
patch: [ j ] return true ; }
rank: 449
score: 98.23835754394531
patch: return ; return ; = 0 ;
rank: 449
score: 98.17817034040179
patch: v = true ; break ;
rank: 450
score: 98.8104248046875
patch: return value . is CaMeL Empty ( ) ;
rank: 450
score: 98.68766645951705
patch: return is . is CaMeL Empty ( ) ; }
rank: 450
score: 98.55850219726562
patch: return true ; } } while ;
rank: 450
score: 98.53655327690973
patch: return return false ; } } return ;
rank: 450
score: 98.45151192801339
patch: return ! false ; } }
rank: 450
score: 98.23784637451172
patch: return ; return ; return ; /
rank: 450
score: 98.17715018136161
patch: $NUMBER$ float true = true ;
rank: 451
score: 98.88762958233173
patch: return search CaMeL Chars [ cs CaMeL Length ] != null ;
rank: 451
score: 98.686865234375
patch: if ( cs CaMeL Length == 0 ) {
rank: 451
score: 98.55847846137152
patch: return true ; } return true ; ;
rank: 451
score: 98.54208034939236
patch: CaMeL Builder . true ; return true ;
rank: 451
score: 98.5363540649414
patch: return is CaMeL True return true ;
rank: 451
score: 98.23765055338542
patch: return 0 == true ;
rank: 451
score: 98.17703683035714
patch: CaMeL ; break ; default :
rank: 452
score: 98.89169311523438
patch: return search CaMeL Chars [ j ] . starts CaMeL With ( $STRING$ ) ;
rank: 452
score: 98.55830891927083
patch: xform = true ; return true ; }
rank: 452
score: 98.53620147705078
patch: return 0 ; } return false ;
rank: 452
score: 98.45037841796875
patch: Plane [ j ] return true ;
rank: 452
score: 98.23648071289062
patch: return is return 0 ; break ;
rank: 452
score: 98.17701067243304
patch: m = true ; * /
rank: 453
score: 98.8916015625
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == ch ; }
rank: 453
score: 98.88676313920455
patch: return cs . contains ( search CaMeL Chars ) ;
rank: 453
score: 98.8037442294034
patch: Multisearch CaMeL Chars [ j ] == ch ;
rank: 453
score: 98.55828179253473
patch: dispatcher = true ; return true ; }
rank: 453
score: 98.54109700520833
patch: CaMeL Exception = true ; if true true
rank: 453
score: 98.53616672092014
patch: CaMeL List true ; if return false ;
rank: 453
score: 98.44908650716145
patch: Plane ! return true ;
rank: 453
score: 98.23636627197266
patch: return true ; ; ; return ;
rank: 453
score: 98.1757303873698
patch: = false ; break ;
rank: 454
score: 98.68150745738636
patch: if ( search CaMeL Chars . length >= 0 )
rank: 454
score: 98.55777994791667
patch: z = true ; break ; } }
rank: 454
score: 98.53616333007812
patch: return ; ; } }
rank: 454
score: 98.44871520996094
patch: return Boolean . false ; } }
rank: 454
score: 98.23627471923828
patch: return is ( return true ) ;
rank: 454
score: 98.17522321428571
patch: player = true ; break ;
rank: 455
score: 98.80044555664062
patch: search CaMeL Chars [ j ] return true ;
rank: 455
score: 98.54024251302083
patch: return true ; return ; return false ;
rank: 455
score: 98.53594970703125
patch: return ; = true ; break ; }
rank: 455
score: 98.44861711774554
patch: return false ; * * /
rank: 455
score: 98.23625837053571
patch: return 0 + return true ;
rank: 455
score: 98.1737569173177
patch: CaMeL Character return true ;
rank: 456
score: 98.89107840401786
patch: return ( search CaMeL Chars . char CaMeL At ( j ) . is CaMeL Empty ( ) ) ;
rank: 456
score: 98.8848407451923
patch: return search CaMeL Chars [ j ] == cs CaMeL Length ;
rank: 456
score: 98.6791104403409
patch: if ( search CaMeL Length == cs CaMeL Length )
rank: 456
score: 98.55712890625
patch: return return true ; } ; }
rank: 456
score: 98.44841003417969
patch: return ( true , false ) ;
rank: 456
score: 98.23534393310547
patch: return 0 ; return - 0 ;
rank: 456
score: 98.17110770089286
patch: tag = true ; break ;
rank: 457
score: 98.8909912109375
patch: return cs . contains CaMeL Any ( ch , search CaMeL Chars [ i ] ) ;
rank: 457
score: 98.88292518028847
patch: return search CaMeL Chars [ j ] == ch ; * /
rank: 457
score: 98.67824096679688
patch: return ( cs . value == ch ) ;
rank: 457
score: 98.55709075927734
patch: color = true ; break ; }
rank: 457
score: 98.53436957465277
patch: return false ; } * * * /
rank: 457
score: 98.44610595703125
patch: Plane return ( false ) ;
rank: 457
score: 98.23511505126953
patch: CaMeL do = true ; return ;
rank: 457
score: 98.17047991071429
patch: . equals ( true ) ;
rank: 458
score: 98.89097836143092
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ; }
rank: 458
score: 98.55683135986328
patch: return true ; } } false ;
rank: 458
score: 98.5380630493164
patch: CaMeL Range . ; return true ;
rank: 458
score: 98.23490687779018
patch: return 0 ; ; true ;
rank: 458
score: 98.16980852399554
patch: meta = true ; break ;
rank: 459
score: 98.8908923921131
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , cs . to CaMeL String ( ) ) ;
rank: 459
score: 98.88270060221355
patch: return is CaMeL Empty ( cs , search CaMeL Chars ,
rank: 459
score: 98.55617947048611
patch: return true ; } ; } * /
rank: 459
score: 98.537744140625
patch: return null ; ;
rank: 459
score: 98.53390163845486
patch: return null ; return true ; } }
rank: 459
score: 98.44523402622768
patch: return return return true ; }
rank: 459
score: 98.23447672526042
patch: return true + true ;
rank: 460
score: 98.89085557725694
patch: return Array CaMeL Utils . contains ( search CaMeL Chars [ j ] == ch ) ;
rank: 460
score: 98.79084916548295
patch: return search CaMeL Chars [ i ] < ch ;
rank: 460
score: 98.6721524325284
patch: if ( search CaMeL Length < search CaMeL Chars .
rank: 460
score: 98.55612618582589
patch: t = ; return true ;
rank: 460
score: 98.53746202256944
patch: CaMeL List . ; return true ; }
rank: 460
score: 98.44428253173828
patch: contains [ j ] = cs ;
rank: 460
score: 98.23301696777344
patch: CaMeL List ( ) . return ;
rank: 460
score: 98.16805594308036
patch: seen = true ; break ;
rank: 461
score: 98.881591796875
patch: return ( search CaMeL Chars [ j ] == null ) ;
rank: 461
score: 98.79060502485795
patch: return search CaMeL Chars [ j ] == ch )
rank: 461
score: 98.5548095703125
patch: p = ; return true ; } }
rank: 461
score: 98.53727213541667
patch: CaMeL Range = true ; if true true
rank: 461
score: 98.53148651123047
patch: return return false ; break ; }
rank: 461
score: 98.44427490234375
patch: return ( return return true ) ;
rank: 461
score: 98.23287963867188
patch: CaMeL List ( ) ;
rank: 461
score: 98.16789027622768
patch: lookup = true ; break ;
rank: 462
score: 98.89048073508523
patch: return contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) , ch ) ;
rank: 462
score: 98.78988308376736
patch: ( search CaMeL Chars [ j ] )
rank: 462
score: 98.55455186631944
patch: return true ; } else { ; }
rank: 462
score: 98.53716362847223
patch: CaMeL List . ; return false ; ;
rank: 462
score: 98.53145345052083
patch: CaMeL Error ; return true ; } }
rank: 462
score: 98.44380950927734
patch: cs = true ; return true ;
rank: 462
score: 98.23243059430804
patch: return ; = return 1 ;
rank: 462
score: 98.167724609375
patch: parser = true ;
rank: 463
score: 98.88994891826923
patch: return Array CaMeL Utils . equals ( cs , cs ) ;
rank: 463
score: 98.78920676491477
patch: return search CaMeL Chars [ i ] == cs ;
rank: 463
score: 98.66933371803977
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 463
score: 98.55429416232639
patch: return true ; default : break ; }
rank: 463
score: 98.53633626302083
patch: return false ; ; else return false ;
rank: 463
score: 98.531005859375
patch: return return true ; break ;
rank: 463
score: 98.44286346435547
patch: old [ j ] = ch ;
rank: 463
score: 98.23184204101562
patch: return 0 ; ; if return ;
rank: 463
score: 98.16755894252232
patch: if ( ; return true )
rank: 464
score: 98.66893310546875
patch: return ( search CaMeL Length > 0 ) ;
rank: 464
score: 98.55348714192708
patch: g = true ; break ; } }
rank: 464
score: 98.53015814887152
patch: return true ; return false ; } else
rank: 464
score: 98.23159790039062
patch: return false ; ; return ; {
rank: 464
score: 98.16680908203125
patch: ? return true ; }
rank: 465
score: 98.66803533380681
patch: return ch . is CaMeL Empty ( cs ) ;
rank: 465
score: 98.553466796875
patch: return ! true ; ; }
rank: 465
score: 98.53548431396484
patch: CaMeL Number true ; return false ;
rank: 465
score: 98.530029296875
patch: return return null ; }
rank: 465
score: 98.44017791748047
patch: return true ; } else { }
rank: 465
score: 98.23100280761719
patch: CaMeL -- . ; return true ;
rank: 465
score: 98.16586739676339
patch: m = true : true ;
rank: 466
score: 98.88984818892045
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , cs . char CaMeL At ( i ) ) ;
rank: 466
score: 98.87662760416667
patch: try { search CaMeL Chars [ j ] = ch ;
rank: 466
score: 98.78114624023438
patch: return search CaMeL Chars [ j ] ++ ;
rank: 466
score: 98.66767035590277
patch: Assert . is CaMeL Empty ( ) ;
rank: 466
score: 98.55345916748047
patch: manifest = true ; return true ;
rank: 466
score: 98.53497314453125
patch: CaMeL Range ; return false ;
rank: 466
score: 98.52999114990234
patch: return return true ; } return ;
rank: 466
score: 98.44001770019531
patch: return false ; { return false ;
rank: 466
score: 98.23092651367188
patch: CaMeL = true ; return ; {
rank: 466
score: 98.16460309709821
patch: CaMeL ; * / break ;
rank: 467
score: 98.8896125344669
patch: return search CaMeL Chars [ j ] . char CaMeL At ( cs . length ;
rank: 467
score: 98.87635216346153
patch: return search CaMeL Chars [ cs CaMeL Length ] <= ch ;
rank: 467
score: 98.66759144176136
patch: return search CaMeL Length < search CaMeL Length ; }
rank: 467
score: 98.55259874131944
patch: r = true ; break ; } }
rank: 467
score: 98.53448486328125
patch: CaMeL Number ( ; return true ;
rank: 467
score: 98.52997504340277
patch: return ; * * * return true ;
rank: 467
score: 98.43942260742188
patch: old [ j ] = cs ;
rank: 467
score: 98.23088836669922
patch: return ! ) ; return 1 ;
rank: 467
score: 98.16190011160714
patch: . return i < true ;
rank: 468
score: 98.88959503173828
patch: return search CaMeL Chars [ j ] . trim ( ) . length ++ ;
rank: 468
score: 98.87388258713942
patch: return this . search CaMeL Chars [ j ] == null ;
rank: 468
score: 98.55239529079861
patch: return true true ; } return true ;
rank: 468
score: 98.53335910373264
patch: return true ; return true ; ; ;
rank: 468
score: 98.5298080444336
patch: return ; ; return true ; }
rank: 468
score: 98.43850708007812
patch: return ( ! true ) ; }
rank: 468
score: 98.2308349609375
patch: return false ; return return 1 ;
rank: 468
score: 98.16190011160714
patch: buffer = true ; break ;
rank: 469
score: 98.87354625355114
patch: return search CaMeL Chars . contains ( cs ) ;
rank: 469
score: 98.7799560546875
patch: return search CaMeL Chars [ j ] ) ;
rank: 469
score: 98.55225372314453
patch: return ; } return false ; }
rank: 469
score: 98.53306579589844
patch: CaMeL List return return true ; ;
rank: 469
score: 98.52966986762152
patch: return false ; } if ( true ;
rank: 469
score: 98.43817138671875
patch: return return return false ; } }
rank: 469
score: 98.23079681396484
patch: return 0 + ; return true ;
rank: 469
score: 98.16061837332589
patch: re = true ; break ;
rank: 470
score: 98.88900756835938
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) . equals ( ch ) ;
rank: 470
score: 98.87272338867187
patch: return return contains CaMeL Any ( cs ) ;
rank: 470
score: 98.77897505326705
patch: return ch == search CaMeL Chars [ i ] ;
rank: 470
score: 98.66581587357955
patch: if ( ! search CaMeL Chars [ j ] )
rank: 470
score: 98.55220031738281
patch: cp = true ; break ; }
rank: 470
score: 98.53302764892578
patch: CaMeL Number [ ] return true ;
rank: 470
score: 98.52919006347656
patch: return false ; for ; * /
rank: 470
score: 98.43805694580078
patch: ch = false ; return true ;
rank: 470
score: 98.23075866699219
patch: return is ( ; = true ;
rank: 470
score: 98.15886579241071
patch: scale = true ; break ;
rank: 471
score: 98.88899369673295
patch: assert search CaMeL Chars [ j ] == ch ;
rank: 471
score: 98.87250225360577
patch: return search CaMeL Chars [ cs CaMeL Length ] == $STRING$ ;
rank: 471
score: 98.66553751627605
patch: return return return true ;
rank: 471
score: 98.55216979980469
patch: cr = true ; return true ;
rank: 471
score: 98.53207736545139
patch: CaMeL Range = true ; for true ;
rank: 471
score: 98.52872043185764
patch: return ; } if ; return false ;
rank: 471
score: 98.43529510498047
patch: contains [ i ] = ch ;
rank: 471
score: 98.23058319091797
patch: return true ; ; return ; ;
rank: 471
score: 98.1573994954427
patch: return true ; continue ;
rank: 472
score: 98.8889493075284
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( i ) , ch ) ;
rank: 472
score: 98.871826171875
patch: return is CaMeL Empty ( i , search CaMeL Chars ) ;
rank: 472
score: 98.77123006184895
patch: try { return true ;
rank: 472
score: 98.55193328857422
patch: c ; return true ; } }
rank: 472
score: 98.53192138671875
patch: return false ; return - $STRING$ ;
rank: 472
score: 98.52859497070312
patch: return true ; } throw true ;
rank: 472
score: 98.22955322265625
patch: return 0 . ; return 0 ;
rank: 472
score: 98.15673828125
patch: $NUMBER$ * return true ;
rank: 473
score: 98.76960893110795
patch: return ( ! search CaMeL Chars [ j ] ;
rank: 473
score: 98.66338500976562
patch: if ( is CaMeL Empty ( ch ) )
rank: 473
score: 98.55131700303819
patch: quit = true ; return true ; }
rank: 473
score: 98.53125
patch: CaMeL Range [ ] return true ; }
rank: 473
score: 98.4321060180664
patch: return true ; } ++ j ;
rank: 473
score: 98.22952270507812
patch: ( false ) ; return ; {
rank: 474
score: 98.88877650669643
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Sealed ( ) ;
rank: 474
score: 98.87099609375
patch: return contains CaMeL Any ( cs , ) ;
rank: 474
score: 98.7689208984375
patch: return cs . contains CaMeL Any ( ) ;
rank: 474
score: 98.6631591796875
patch: return = true ;
rank: 474
score: 98.53078884548611
patch: CaMeL Range return true ; if true ;
rank: 474
score: 98.52838134765625
patch: return true ; } return ; ;
rank: 474
score: 98.43109893798828
patch: return true . return false ; }
rank: 474
score: 98.22924041748047
patch: CaMeL List ( true return ) ;
rank: 474
score: 98.15532575334821
patch: m = true && true ;
rank: 475
score: 98.88850911458333
patch: return search CaMeL Chars [ j ] . get CaMeL Instance ( ) . is CaMeL Empty ( ) ;
rank: 475
score: 98.7680996981534
patch: return search CaMeL Chars [ j ] & $STRING$ ;
rank: 475
score: 98.55088975694444
patch: return true ; } } while true ;
rank: 475
score: 98.52958679199219
patch: CaMeL Number true ; return true ;
rank: 475
score: 98.52833557128906
patch: return return && true ; } }
rank: 475
score: 98.43092346191406
patch: return return return true ; } }
rank: 475
score: 98.22903006417411
patch: return true ; true ; ;
rank: 476
score: 98.88838123139881
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . trim ( ) ) ;
rank: 476
score: 98.8697509765625
patch: return search CaMeL Chars [ cs CaMeL Length ] == null ;
rank: 476
score: 98.76720081676136
patch: return ( search CaMeL Chars [ j ] ) ;
rank: 476
score: 98.66098854758523
patch: if ( cs CaMeL Length == cs CaMeL Length )
rank: 476
score: 98.52923583984375
patch: CaMeL Number true return null ;
rank: 476
score: 98.43075561523438
patch: bytes [ j ] = ch ;
rank: 476
score: 98.22792053222656
patch: CaMeL do . add return true ;
rank: 476
score: 98.15388706752232
patch: . return super . true ;
rank: 477
score: 98.88780302159927
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . value ;
rank: 477
score: 98.660888671875
patch: if ( ! is CaMeL Empty ( ) ) {
rank: 477
score: 98.54988606770833
patch: color = true ; break ; } }
rank: 477
score: 98.52749294704861
patch: return 0 ; } } return false ;
rank: 477
score: 98.43016815185547
patch: return new String ( cs ) ;
rank: 477
score: 98.15384347098214
patch: Detected = true ; break ;
rank: 478
score: 98.86829552283653
patch: switch ( cs . char CaMeL At ( j ) ) {
rank: 478
score: 98.54927280970982
patch: return ! true ; } ;
rank: 478
score: 98.52718777126736
patch: CaMeL Builder . true return true ; }
rank: 478
score: 98.52693176269531
patch: CaMeL Runtime . true return true ;
rank: 478
score: 98.4298324584961
patch: value [ j ] = ch ;
rank: 478
score: 98.22718048095703
patch: return - ) ; return null ;
rank: 478
score: 98.15183803013393
patch: ( ; return false ) ;
rank: 479
score: 98.88770294189453
patch: return search CaMeL Chars [ j ] == search CaMeL Chars [ i ] ;
rank: 479
score: 98.86806077223558
patch: return search CaMeL Chars [ cs CaMeL Length ] != $STRING$ ;
rank: 479
score: 98.76094193892045
patch: return search CaMeL Chars [ j ] . contains CaMeL
rank: 479
score: 98.54901801215277
patch: return ( true , true ) ; }
rank: 479
score: 98.52690124511719
patch: CaMeL Error true ; return true ;
rank: 479
score: 98.42710876464844
patch: return false ; ) return false ;
rank: 479
score: 98.22709655761719
patch: return return 1 ; return 0 ;
rank: 479
score: 98.151123046875
patch: . return ~ true ;
rank: 480
score: 98.88716634114583
patch: return search CaMeL Chars [ j ] ( ch ) ;
rank: 480
score: 98.86801382211539
patch: return search CaMeL Chars . get ( ch ) != null ;
rank: 480
score: 98.75867919921875
patch: if ( search CaMeL Chars ) return false ;
rank: 480
score: 98.6582275390625
patch: if ( search CaMeL Length > 1 ) {
rank: 480
score: 98.54883575439453
patch: return i < search CaMeL Length ;
rank: 480
score: 98.52657741970486
patch: . = true ; return false ; }
rank: 480
score: 98.52565002441406
patch: return false ; return false true ;
rank: 480
score: 98.22698974609375
patch: CaMeL += ( return ) ) ;
rank: 480
score: 98.15029471261161
patch: ts = true ; break ;
rank: 481
score: 98.88709174262152
patch: return cs . contains CaMeL Any ( search CaMeL Chars [ j ] == ch ) ;
rank: 481
score: 98.54867892795139
patch: raw = true ; return true ; }
rank: 481
score: 98.52616373697917
patch: return false ; } } } return ;
rank: 481
score: 98.52540588378906
patch: return true ; return 0 ; ;
rank: 481
score: 98.42572021484375
patch: return false ; } } ) ;
rank: 481
score: 98.22658865792411
patch: return false . return true ;
rank: 481
score: 98.14963204520089
patch: [ ] return false ; }
rank: 482
score: 98.88685825892857
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . value ) ;
rank: 482
score: 98.7537109375
patch: return search CaMeL Chars [ j ] true ;
rank: 482
score: 98.65411931818181
patch: ret = cs . is CaMeL Empty ( ) ;
rank: 482
score: 98.54834662543402
patch: a = true ; break ; } }
rank: 482
score: 98.5260009765625
patch: return true ; for ; * * /
rank: 482
score: 98.52492268880208
patch: CaMeL Range = true ; break ; }
rank: 482
score: 98.4237289428711
patch: return is [ i ] ; }
rank: 482
score: 98.22615051269531
patch: return 0 . get : true ;
rank: 482
score: 98.14962332589286
patch: . return false ; ; }
rank: 483
score: 98.88677300347223
patch: return Array CaMeL Utils . contains ( cs , search CaMeL Chars [ i ] ) ;
rank: 483
score: 98.86636117788461
patch: return search CaMeL Chars [ j ] == search CaMeL Chars [
rank: 483
score: 98.74698893229167
patch: return true . contains ( ch ) ;
rank: 483
score: 98.54795837402344
patch: c = ; break ; } }
rank: 483
score: 98.52583143446181
patch: return ; } } if return true ;
rank: 483
score: 98.52448272705078
patch: CaMeL Range = return ) true ;
rank: 483
score: 98.22494506835938
patch: return true ; return new true ;
rank: 483
score: 98.14950997488839
patch: = true ; break true ;
rank: 484
score: 98.88675265842014
patch: return search CaMeL Chars [ j ] . length < search CaMeL Chars . length ; }
rank: 484
score: 98.745556640625
patch: return $NUMBER$ . is CaMeL Empty ( ) ;
rank: 484
score: 98.65312056107955
patch: return j < search CaMeL Chars . length ; }
rank: 484
score: 98.54784393310547
patch: f = true ; return false ;
rank: 484
score: 98.52574920654297
patch: return false ; } / * ;
rank: 484
score: 98.52358669704861
patch: return true ; true if return true ;
rank: 484
score: 98.22489929199219
patch: return ! true ; return 0 ;
rank: 484
score: 98.14920479910714
patch: rule = true ; break ;
rank: 485
score: 98.88645306755515
patch: return search CaMeL Chars [ j ] . iterator ( ) . next ( ) ;
rank: 485
score: 98.74170532226563
patch: return ! search CaMeL Chars [ i ] ;
rank: 485
score: 98.52311706542969
patch: return false ; ; ; else {
rank: 485
score: 98.4228286743164
patch: character [ j ] = ch ;
rank: 485
score: 98.22474670410156
patch: return return ) ; return 0 ;
rank: 485
score: 98.14903913225446
patch: retval = true ; break ;
rank: 486
score: 98.885986328125
patch: return contains CaMeL Any ( ch , search CaMeL Chars [ i ] ) ;
rank: 486
score: 98.86388050426136
patch: return contains ( cs , search CaMeL Chars ) ;
rank: 486
score: 98.5465087890625
patch: factory = true ; return true ; }
rank: 486
score: 98.52510070800781
patch: return is return true ; } }
rank: 486
score: 98.52280680338542
patch: CaMeL Range . return ( true ; {
rank: 486
score: 98.4217529296875
patch: Plane [ j ] return false ;
rank: 486
score: 98.223388671875
patch: CaMeL do = ; = true ;
rank: 486
score: 98.14884730747768
patch: = return true ; break ;
rank: 487
score: 98.65223911830357
patch: return return ( true ) ;
rank: 487
score: 98.52499050564236
patch: return ; } } if return false ;
rank: 487
score: 98.4206314086914
patch: old [ i ] = ch ;
rank: 487
score: 98.22280883789062
patch: return is ( true 1 ) ;
rank: 487
score: 98.14852905273438
patch: parser = return true ;
rank: 488
score: 98.88487548828125
patch: return contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 488
score: 98.54548645019531
patch: 64 . return true ; } }
rank: 488
score: 98.52462768554688
patch: return null ; } else
rank: 488
score: 98.52161516462054
patch: CaMeL Error return true ; }
rank: 488
score: 98.22264099121094
patch: return - $NUMBER$ ; return 1 ;
rank: 488
score: 98.14847237723214
patch: $NUMBER$ ? return true ; }
rank: 489
score: 98.88473171657986
patch: return contains CaMeL Any ( cs . char CaMeL At ( j ) , cs ) ;
rank: 489
score: 98.73388671875
patch: return search CaMeL Chars [ j ] { ch
rank: 489
score: 98.65204467773438
patch: if ( ch == cs CaMeL Length ) {
rank: 489
score: 98.52450222439236
patch: return true ; } ; return true ;
rank: 489
score: 98.52109781901042
patch: CaMeL Range true return true ; break ;
rank: 489
score: 98.41555350167411
patch: return false ; false ; }
rank: 489
score: 98.22148895263672
patch: CaMeL List ( return true ) ;
rank: 489
score: 98.14736502511161
patch: Utilities . return false ; }
rank: 490
score: 98.88466282894737
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . clone ( ) ;
rank: 490
score: 98.86243614783653
patch: return search CaMeL Chars [ j ] == ch ) ; }
rank: 490
score: 98.729345703125
patch: return true + search CaMeL Chars [ j ]
rank: 490
score: 98.65166681463069
patch: if ( search CaMeL Chars . length == ) {
rank: 490
score: 98.54476928710938
patch: channel = true ; return true ;
rank: 490
score: 98.52449544270833
patch: return ; } if ; return true ;
rank: 490
score: 98.5210189819336
patch: CaMeL Class true ; return true ;
rank: 490
score: 98.41081891741071
patch: return true ; * * /
rank: 490
score: 98.22142028808594
patch: return 0 . 0 != true ;
rank: 490
score: 98.14639718191964
patch: return false return true ; }
rank: 491
score: 98.88454302619485
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . length ;
rank: 491
score: 98.86151592548077
patch: return contains CaMeL Any ( cs CaMeL Length , ch ) ;
rank: 491
score: 98.7270736694336
patch: return true && ch == ch ;
rank: 491
score: 98.65163352272727
patch: if ( i >= search CaMeL Chars . length )
rank: 491
score: 98.54464721679688
patch: bp = true ; break ; }
rank: 491
score: 98.52445475260417
patch: return true ; } } return $NUMBER$ ;
rank: 491
score: 98.5210189819336
patch: return true ; return false ; {
rank: 491
score: 98.40764508928571
patch: Plane return ( true ) ;
rank: 491
score: 98.22024536132812
patch: CaMeL List ( return ) ; ;
rank: 491
score: 98.146044921875
patch: t = true ;
rank: 492
score: 98.88437906901042
patch: return contains CaMeL Any ( cs , search CaMeL Chars [ j ] , ch ) ;
rank: 492
score: 98.86014556884766
patch: return contains CaMeL Any ( ) ;
rank: 492
score: 98.72306060791016
patch: return true && ch != ch ;
rank: 492
score: 98.54463704427083
patch: return true ; } } break ; }
rank: 492
score: 98.52385711669922
patch: return false ; } catch ; }
rank: 492
score: 98.52079264322917
patch: return true ; ; ; if true ;
rank: 492
score: 98.40731375558036
patch: Plane * / return false ;
rank: 492
score: 98.21994018554688
patch: return 0 ; return true ; else
rank: 493
score: 98.88383152173913
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) , ) ;
rank: 493
score: 98.52352566189236
patch: return return null ; } return true ;
rank: 493
score: 98.51975504557292
patch: return false ; return true ; } ;
rank: 493
score: 98.40329996744792
patch: return false ; false ;
rank: 493
score: 98.21757507324219
patch: return 0 . ; + true ;
rank: 493
score: 98.144775390625
patch: setting = true ; break ;
rank: 494
score: 98.85915902944711
patch: return ch . contains ( cs , search CaMeL Chars ) ;
rank: 494
score: 98.64934539794922
patch: return Array CaMeL Utils . true ;
rank: 494
score: 98.54448699951172
patch: control = true ; return true ;
rank: 494
score: 98.52334933810764
patch: return this . true ; break ; }
rank: 494
score: 98.51908874511719
patch: CaMeL Error true return true ; }
rank: 494
score: 98.40241350446429
patch: Plane * / return true ;
rank: 494
score: 98.21632385253906
patch: return false ; return ; return ;
rank: 494
score: 98.14436848958333
patch: . ? return true ;
rank: 495
score: 98.88294741981908
patch: return ( cs . char CaMeL At ( j ) . is CaMeL Empty ( ) ) ;
rank: 495
score: 98.64898681640625
patch: if ( ch == ch )
rank: 495
score: 98.54436577690973
patch: j = true ; return true ; }
rank: 495
score: 98.52316623263889
patch: CaMeL List return return true ; } }
rank: 495
score: 98.5178451538086
patch: CaMeL Thread . true return false ;
rank: 495
score: 98.21605682373047
patch: return 0 ; ; return ; /
rank: 496
score: 98.88230298913044
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) ) ; }
rank: 496
score: 98.71478949652777
patch: return null . contains ( ch ) ;
rank: 496
score: 98.6471923828125
patch: if ( j < search CaMeL Length ) {
rank: 496
score: 98.54389953613281
patch: return true ; } true * /
rank: 496
score: 98.52238633897569
patch: return is ; } } return true ;
rank: 496
score: 98.51773410373264
patch: return false ; return true ; ; ;
rank: 496
score: 98.38592529296875
patch: Plane return false ; true ;
rank: 496
score: 98.2160415649414
patch: CaMeL do . public return true ;
rank: 496
score: 98.14347330729167
patch: CaMeL return false ; ;
rank: 497
score: 98.88217502170139
patch: return search CaMeL Chars [ j ] . char CaMeL At ( 0 ) == ch ;
rank: 497
score: 98.85713704427083
patch: return Array CaMeL Utils . search CaMeL Chars [ j ]
rank: 497
score: 98.64701704545455
patch: if ( ! is CaMeL Empty ( cs ) )
rank: 497
score: 98.5176773071289
patch: CaMeL String ( ; return true ;
rank: 497
score: 98.2155532836914
patch: return size != true ; true ;
rank: 497
score: 98.14345877511161
patch: $NUMBER$ . return true ; ;
rank: 498
score: 98.85584435096153
patch: return search CaMeL Chars [ cs CaMeL Length ] > ch ;
rank: 498
score: 98.6458740234375
patch: return Math . is CaMeL Empty ( cs ) ;
rank: 498
score: 98.54273139105902
patch: inst = true ; return true ; }
rank: 498
score: 98.52101135253906
patch: return false ; } if ; ;
rank: 498
score: 98.51712799072266
patch: CaMeL Exception return true ; } ;
rank: 498
score: 98.38466099330357
patch: ( [ j ] ) ;
rank: 498
score: 98.2139892578125
patch: CaMeL *= ( return ) true ;
rank: 498
score: 98.14338902064732
patch: cf = true ; break ;
rank: 499
score: 98.8553466796875
patch: return is CaMeL Empty ( ch , cs ) ;
rank: 499
score: 98.69315883091518
patch: return ( char ) true ;
rank: 499
score: 98.5422592163086
patch: return true ; } ; } }
rank: 499
score: 98.52092827690973
patch: return is true ; return false ; }
rank: 499
score: 98.5164794921875
patch: CaMeL Range true = true ;
rank: 499
score: 98.38325718470982
patch: return cs [ j ] ;
rank: 499
score: 98.21290806361607
patch: ( true ; return true ;
rank: 499
score: 98.14265950520833
patch: = true || true ;
rank: 500
score: 98.88155110677083
patch: return search CaMeL Chars [ j ] . get CaMeL Length ( ) ;
rank: 500
score: 98.85530911959134
patch: return search CaMeL Chars [ cs CaMeL Length ] = ch ;
rank: 500
score: 98.6447420987216
patch: return is CaMeL Empty ( cs , true ) ;
rank: 500
score: 98.54180230034723
patch: return true ; } if ( ! ;
rank: 500
score: 98.51584879557292
patch: return new || true ; return true ;
rank: 500
score: 98.37316022600446
patch: return this . ! false ;
rank: 500
score: 98.21266174316406
patch: return ~ true ; return 1 ;
rank: 500
score: 98.14222935267857
patch: . ? return true ; }
rank: 501
score: 98.88131893382354
patch: return search CaMeL Chars [ j ] == $STRING$ . to CaMeL String ( ) ;
rank: 501
score: 98.689697265625
patch: if ( true ) { return true ;
rank: 501
score: 98.51572091238839
patch: CaMeL List return true ; ;
rank: 501
score: 98.1420389811198
patch: this . return true ;
rank: 502
score: 98.88084827769886
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 502
score: 98.85312124399039
patch: return cs . equals ( cs , search CaMeL Chars ) ;
rank: 502
score: 98.68606567382812
patch: return null ? true : true ;
rank: 502
score: 98.6433438387784
patch: if ( cs . length ( ) == 0 )
rank: 502
score: 98.51523166232639
patch: CaMeL List . return ( false ; {
rank: 502
score: 98.36664690290179
patch: Plane else return false ; }
rank: 502
score: 98.21227264404297
patch: return false ; return ++ true ;
rank: 502
score: 98.14024135044643
patch: removed = true ; break ;
rank: 503
score: 98.88028658353366
patch: return search CaMeL Chars [ j ] , search CaMeL Length ;
rank: 503
score: 98.64302978515624
patch: return ( cs . search CaMeL Chars ) ;
rank: 503
score: 98.52008819580078
patch: return return true ; } else {
rank: 503
score: 98.51458062065973
patch: return true ; return null == true ;
rank: 503
score: 98.36601911272321
patch: return true ; false ; }
rank: 503
score: 98.21175384521484
patch: return - 1 ; return 0 ;
rank: 503
score: 98.1400634765625
patch: s = true ;
rank: 504
score: 98.88025512695313
patch: return Array CaMeL Utils . is CaMeL Empty ( ch , search CaMeL Chars [ i ] ) ;
rank: 504
score: 98.85117750901442
patch: return search CaMeL Chars [ cs CaMeL Length ] > 1 ;
rank: 504
score: 98.6426010131836
patch: return ( ch != null ) ;
rank: 504
score: 98.54110717773438
patch: color = true ; return true ;
rank: 504
score: 98.51940155029297
patch: return is return is CaMeL Empty ;
rank: 504
score: 98.36590576171875
patch: Plane return true ; true ;
rank: 504
score: 98.21175384521484
patch: return false ; ; ; true ;
rank: 504
score: 98.13997977120536
patch: p = true && true ;
rank: 505
score: 98.88020629882813
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] , $STRING$ ) ;
rank: 505
score: 98.84991455078125
patch: return contains ( search CaMeL Chars [ j ] ) ;
rank: 505
score: 98.54007720947266
patch: if ( true ; break ; }
rank: 505
score: 98.51842583550348
patch: return true ; } * * * ;
rank: 505
score: 98.51408386230469
patch: return true ; return null ; {
rank: 505
score: 98.21170806884766
patch: return 0 . 0 / true ;
rank: 505
score: 98.13967459542411
patch: c = true && true ;
rank: 506
score: 98.87998744419643
patch: return search CaMeL Chars [ j ] . to CaMeL Object ( ) . is CaMeL Empty ( ) ;
rank: 506
score: 98.53951263427734
patch: d = true ; break ; }
rank: 506
score: 98.513916015625
patch: CaMeL List . size return true ;
rank: 506
score: 98.36266217912946
patch: return ) return false ; }
rank: 506
score: 98.21115112304688
patch: CaMeL += ) ) ; true ;
rank: 506
score: 98.13856724330357
patch: CaMeL ; break ; } ;
rank: 507
score: 98.87981305803571
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Integer ( ) ;
rank: 507
score: 98.53946685791016
patch: CaMeL Character . return true ; }
rank: 507
score: 98.51722547743056
patch: return true ; * / return false ;
rank: 507
score: 98.513427734375
patch: CaMeL Object . true return true ;
rank: 507
score: 98.36240931919643
patch: ( ) return false ; }
rank: 507
score: 98.21048736572266
patch: return ! $NUMBER$ ; return 1 ;
rank: 507
score: 98.1376953125
patch: rv = true ; break ;
rank: 508
score: 98.87973504317434
patch: return search CaMeL Chars [ j ] . iterator ( ) . has CaMeL Next ( ) ;
rank: 508
score: 98.84668986002605
patch: return contains CaMeL Any ( cs , search CaMeL Chars [
rank: 508
score: 98.53937530517578
patch: return return true ; } } ;
rank: 508
score: 98.35800606863839
patch: return $NUMBER$ . false ; }
rank: 508
score: 98.13760811941964
patch: return true ; i -- ;
rank: 509
score: 98.8793881064967
patch: return ( Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars ) ) ;
rank: 509
score: 98.63811577690973
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 509
score: 98.53928629557292
patch: c = true ; ; break ; }
rank: 509
score: 98.51656087239583
patch: return null ; } catch return false ;
rank: 509
score: 98.51215955946181
patch: return null ; ; ; return true ;
rank: 509
score: 98.35562569754464
patch: return this . ! true ;
rank: 509
score: 98.2100601196289
patch: CaMeL do . return true ; ;
rank: 509
score: 98.13656616210938
patch: ; return true ; }
rank: 510
score: 98.8791271391369
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . start ) ;
rank: 510
score: 98.65498860677083
patch: return ch . add ( ch ) ;
rank: 510
score: 98.63792724609375
patch: if ( i == cs CaMeL Length ) {
rank: 510
score: 98.53870391845703
patch: profile = true ; break ; }
rank: 510
score: 98.5119400024414
patch: CaMeL List true return false ; ;
rank: 510
score: 98.20997619628906
patch: return ! true ; return ; {
rank: 510
score: 98.13650948660714
patch: found = true ; break ;
rank: 511
score: 98.87891787574405
patch: return search CaMeL Chars [ j ] . get CaMeL Field ( ) . to CaMeL String ( ) ;
rank: 511
score: 98.84176635742188
patch: return search CaMeL Chars [ j ++ ] == ch ;
rank: 511
score: 98.65456136067708
patch: return true . true ;
rank: 511
score: 98.63685913085938
patch: if ( search CaMeL Chars [ j ) {
rank: 511
score: 98.53807237413194
patch: dr = true ; return true ; }
rank: 511
score: 98.51598358154297
patch: return true ; } else * /
rank: 511
score: 98.51143391927083
patch: CaMeL Builder . return ( true ; {
rank: 511
score: 98.35382952008929
patch: return return false ; break ;
rank: 511
score: 98.20938110351562
patch: return ; return ; if true ;
rank: 511
score: 98.13618687220982
patch: pi = true ; break ;
rank: 512
score: 98.65370008680556
patch: return value . equals ( ch ) ;
rank: 512
score: 98.53805881076389
patch: registry = true ; return true ; }
rank: 512
score: 98.51590983072917
patch: return true ; break ; } return ;
rank: 512
score: 98.51071166992188
patch: CaMeL Range [ ; return false ;
rank: 512
score: 98.35178920200893
patch: Plane else return true ; }
rank: 512
score: 98.20875767299107
patch: CaMeL Iterator ( true ) ;
rank: 513
score: 98.878662109375
patch: return cs . contains CaMeL Any ( ch ) ; }
rank: 513
score: 98.63576049804688
patch: int search CaMeL Length = search CaMeL Length ;
rank: 513
score: 98.51590728759766
patch: return true ; } ; return ;
rank: 513
score: 98.5097885131836
patch: return this . return ( true ;
rank: 513
score: 98.35059465680804
patch: return return ( false ) ;
rank: 513
score: 98.20720563616071
patch: return 0 ; return ; {
rank: 513
score: 98.13605608258929
patch: m = true || true ;
rank: 514
score: 98.83839721679688
patch: return search CaMeL Chars . close ( ) ;
rank: 514
score: 98.65011257595486
patch: return ch . equals ( cs ) ;
rank: 514
score: 98.6348164876302
patch: return ( ) ; }
rank: 514
score: 98.53732299804688
patch: cp = true ; return true ;
rank: 514
score: 98.51537322998047
patch: return true ; } += true ;
rank: 514
score: 98.3479512532552
patch: return $NUMBER$ . false ;
rank: 514
score: 98.20683288574219
patch: return true ; ; return $STRING$ ;
rank: 514
score: 98.13441685267857
patch: p = true || true ;
rank: 515
score: 98.87847028459821
patch: return search CaMeL Chars [ j ] . equals ( null ) ;
rank: 515
score: 98.64705403645833
patch: return ch . contains ( cs ) ;
rank: 515
score: 98.63463134765625
patch: if ( cs . equals ( ch ) )
rank: 515
score: 98.5362548828125
patch: return false ? false : true ;
rank: 515
score: 98.51486545138889
patch: . return true ; return false ; }
rank: 515
score: 98.50908745659723
patch: CaMeL Error = true ; while true ;
rank: 515
score: 98.34754435221355
patch: return true ; false ;
rank: 515
score: 98.20683070591518
patch: return 0 ; return $STRING$ ;
rank: 515
score: 98.13371930803571
patch: tc = true ; break ;
rank: 516
score: 98.83465021306819
patch: return true . is CaMeL Empty ( ) ; }
rank: 516
score: 98.63456420898437
patch: if ( j <= search CaMeL Length ) {
rank: 516
score: 98.5362319946289
patch: rt = true ; break ; }
rank: 516
score: 98.34524972098214
patch: return ( ! false ) ;
rank: 516
score: 98.20645141601562
patch: return false ; ; return ; :
rank: 516
score: 98.13345336914062
patch: CaMeL Pair return true ;
rank: 517
score: 98.87774047851562
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ i ] , ch ) ;
rank: 517
score: 98.64122517903645
patch: return ch != null ;
rank: 517
score: 98.63206787109375
patch: result += search CaMeL Chars [ j ] ;
rank: 517
score: 98.5142593383789
patch: . set true ; return false ;
rank: 517
score: 98.50868055555556
patch: CaMeL Range true return true ; true ;
rank: 517
score: 98.34486607142857
patch: Plane try { return true ;
rank: 517
score: 98.20643615722656
patch: return ; { return true ; ;
rank: 517
score: 98.13339233398438
patch: t = return true ;
rank: 518
score: 98.87718563988095
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . to CaMeL Object ( ) ;
rank: 518
score: 98.64058430989583
patch: ch = search CaMeL Chars [ j ]
rank: 518
score: 98.63055419921875
patch: return cs . contains ( cs ) ;
rank: 518
score: 98.50844900948661
patch: CaMeL Null return true ; ;
rank: 518
score: 98.3436279296875
patch: ! return false ; }
rank: 518
score: 98.20622253417969
patch: return 0 ; return true ; }
rank: 518
score: 98.13308279854911
patch: CaMeL ; j ++ ; }
rank: 519
score: 98.87700653076172
patch: return search CaMeL Chars [ j ] . char CaMeL At ( 0 ) ;
rank: 519
score: 98.63031616210938
patch: if ( cs CaMeL Length > 0 ) {
rank: 519
score: 98.53504774305556
patch: molecule = true ; return true ; }
rank: 519
score: 98.5129165649414
patch: CaMeL List return ; return true ;
rank: 519
score: 98.50802273220486
patch: return true ; true out = true ;
rank: 519
score: 98.33852713448661
patch: [ j ] return false ;
rank: 519
score: 98.20569719587054
patch: return ) ; return false ;
rank: 519
score: 98.13283865792411
patch: thread = true ; break ;
rank: 520
score: 98.87698184742646
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] == search CaMeL Chars ;
rank: 520
score: 98.638427734375
patch: return false . contains ( ch ) ;
rank: 520
score: 98.3372090657552
patch: return return return false ;
rank: 520
score: 98.20567321777344
patch: return return $NUMBER$ ; return 1 ;
rank: 520
score: 98.13250732421875
patch: ( true , true )
rank: 521
score: 98.87655029296874
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) . equals ( ch ) ;
rank: 521
score: 98.62882080078126
patch: return ( cs CaMeL Length == 0 ) ;
rank: 521
score: 98.53499348958333
patch: p = null ; return true ; }
rank: 521
score: 98.51212310791016
patch: return true ; } return ; }
rank: 521
score: 98.5076904296875
patch: CaMeL Exception { return true ; }
rank: 521
score: 98.33558000837054
patch: return true . false ; }
rank: 521
score: 98.20514678955078
patch: return 0 . 0 && true ;
rank: 521
score: 98.13167027064732
patch: . double true = true ;
rank: 522
score: 98.87577514648437
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] + ch ) ;
rank: 522
score: 98.63734266493056
patch: return ( search CaMeL Chars [ j ]
rank: 522
score: 98.62823486328125
patch: return Array CaMeL Utils . true ; }
rank: 522
score: 98.53461456298828
patch: return ! true ; } } ;
rank: 522
score: 98.5118408203125
patch: return false ; } else if true ;
rank: 522
score: 98.50762939453125
patch: CaMeL Number = return ) true ;
rank: 522
score: 98.33375767299107
patch: return false ; } false ;
rank: 522
score: 98.20330047607422
patch: return 0 ; return - false ;
rank: 522
score: 98.13131713867188
patch: Utilities . return false ;
rank: 523
score: 98.82855224609375
patch: return ( search CaMeL Chars [ j ) ;
rank: 523
score: 98.632080078125
patch: return false && ch == ch ;
rank: 523
score: 98.6265380859375
patch: return ( search CaMeL Length >= 0 ) ;
rank: 523
score: 98.53457302517361
patch: iv = true ; return true ; }
rank: 523
score: 98.51121012369792
patch: return null ; return false ; } }
rank: 523
score: 98.50753021240234
patch: CaMeL Thread . ; return true ;
rank: 523
score: 98.20272391183036
patch: return - ) ; return ;
rank: 523
score: 98.13079223632812
patch: f = true ;
rank: 524
score: 98.6298599243164
patch: return false && ch != ch ;
rank: 524
score: 98.62573852539063
patch: v = search CaMeL Chars [ j ] ;
rank: 524
score: 98.53418731689453
patch: admin = true ; return true ;
rank: 524
score: 98.5111796061198
patch: return is return false ;
rank: 524
score: 98.50741238064236
patch: CaMeL Exception = false ; while true ;
rank: 524
score: 98.33043561662946
patch: [ j ] return true ;
rank: 524
score: 98.20204162597656
patch: return 0 + 0 + true ;
rank: 524
score: 98.13036092122395
patch: . equals ( ch )
rank: 525
score: 98.87505340576172
patch: return is CaMeL Empty ( cs , search CaMeL Chars [ i ] ) ;
rank: 525
score: 98.62561713324652
patch: switch ( search CaMeL Chars . length )
rank: 525
score: 98.50953020368304
patch: return return && true ; }
rank: 525
score: 98.50724792480469
patch: CaMeL Exception = return ) true ;
rank: 525
score: 98.33008684430804
patch: ( ) return true ; }
rank: 525
score: 98.20077950613839
patch: return is != 0 ; ;
rank: 525
score: 98.13013567243304
patch: rect = true ; break ;
rank: 526
score: 98.8750332919034
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars [ i ] ) ;
rank: 526
score: 98.82523970170455
patch: return contains CaMeL Any ( j , ch ) ;
rank: 526
score: 98.50714789496527
patch: CaMeL Error = true ; if true ;
rank: 526
score: 98.32932826450893
patch: return ) return true ; }
rank: 526
score: 98.20071411132812
patch: return ; = true ; ; /
rank: 526
score: 98.12989153180804
patch: env = true ; break ;
rank: 527
score: 98.87483938116776
patch: return search CaMeL Chars [ j ] . add ( search CaMeL Chars [ j ] ) ;
rank: 527
score: 98.82490234375
patch: return search CaMeL Length - search CaMeL Length ;
rank: 527
score: 98.624755859375
patch: if ( j >= cs CaMeL Length ) {
rank: 527
score: 98.60635375976562
patch: return null ? false : true ;
rank: 527
score: 98.53314208984375
patch: c = null ; return true ; }
rank: 527
score: 98.50857543945312
patch: return null ; break ;
rank: 527
score: 98.50632731119792
patch: CaMeL Exception true return true ; break ;
rank: 527
score: 98.32904663085938
patch: { return false ;
rank: 527
score: 98.12820870535714
patch: . float true = false ;
rank: 528
score: 98.87476870888158
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ i ] ) ;
rank: 528
score: 98.60624694824219
patch: return search CaMeL Chars [ } ;
rank: 528
score: 98.53227403428819
patch: portlet = true ; return true ; }
rank: 528
score: 98.50853135850694
patch: CaMeL Builder return true ; return false ;
rank: 528
score: 98.50597381591797
patch: CaMeL Range [ ] = true ;
rank: 528
score: 98.32877197265626
patch: { return true ;
rank: 528
score: 98.19937896728516
patch: return 0 . 1 ; break ;
rank: 528
score: 98.12732805524554
patch: key = true ; break ;
rank: 529
score: 98.87444513494319
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars [ j ] , ch ) ;
rank: 529
score: 98.82293146306819
patch: search CaMeL Chars [ j ] ( ch ) ;
rank: 529
score: 98.53202056884766
patch: a = ; return true ; }
rank: 529
score: 98.5057144165039
patch: CaMeL System . true return true ;
rank: 529
score: 98.32504272460938
patch: throw null ; }
rank: 529
score: 98.19920349121094
patch: return false ; return false ; else
rank: 530
score: 98.8210693359375
patch: return is CaMeL Empty ( cs , ) ;
rank: 530
score: 98.60439046223958
patch: if ( true ) { return false ;
rank: 530
score: 98.53169759114583
patch: cp = true ; break ; } }
rank: 530
score: 98.50836181640625
patch: CaMeL List return ; return true ; }
rank: 530
score: 98.50550842285156
patch: CaMeL Exception ( ; return false ;
rank: 530
score: 98.32425362723214
patch: return ( ! ch ) ;
rank: 530
score: 98.19837951660156
patch: return 0 . 0 || true ;
rank: 530
score: 98.12529645647321
patch: = true ; } else {
rank: 531
score: 98.87411159939236
patch: return this . search CaMeL Chars [ j ] . contains CaMeL Any ( cs ) ;
rank: 531
score: 98.60287136501736
patch: return search CaMeL Chars [ j ] .
rank: 531
score: 98.53150939941406
patch: log = true ; return true ;
rank: 531
score: 98.50834825303819
patch: CaMeL Thread return true ; return false ;
rank: 531
score: 98.50447845458984
patch: CaMeL Range ( ; return false ;
rank: 531
score: 98.1979471842448
patch: return 0 | true ;
rank: 531
score: 98.12459019252232
patch: ( true , false ) ;
rank: 532
score: 98.87395368303571
patch: return Boolean . equals ( search CaMeL Chars [ j ] ) ;
rank: 532
score: 98.81580810546875
patch: return search CaMeL Chars [ ] == ch ;
rank: 532
score: 98.61907958984375
patch: return ( ch == null ) ;
rank: 532
score: 98.53069390190973
patch: CaMeL ; if ( ; break ; }
rank: 532
score: 98.50802273220486
patch: return is CaMeL Empty || true ; }
rank: 532
score: 98.50346544053819
patch: return true ; ; catch return false ;
rank: 532
score: 98.32262311662946
patch: return true . return false ;
rank: 532
score: 98.19761439732143
patch: return true ; ; ; ;
rank: 532
score: 98.12444196428571
patch: try { return true ; }
rank: 533
score: 98.8739501953125
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars . i ) ;
rank: 533
score: 98.6190673828125
patch: if ( j == search CaMeL Length ) {
rank: 533
score: 98.59751892089844
patch: return ch == ch && true ;
rank: 533
score: 98.50797526041667
patch: return true ; for return false ; }
rank: 533
score: 98.50251007080078
patch: CaMeL Class true ; return false ;
rank: 533
score: 98.31940569196429
patch: return * / return false ;
rank: 533
score: 98.19712829589844
patch: return ; { return - true ;
rank: 533
score: 98.1231689453125
patch: $NUMBER$ ; if ( true )
rank: 534
score: 98.87380981445312
patch: return search CaMeL Chars [ j ] . search CaMeL Chars [ i ] ;
rank: 534
score: 98.61786499023438
patch: return cs . is CaMeL Empty ( ) {
rank: 534
score: 98.5972900390625
patch: return ch == ch + ch ;
rank: 534
score: 98.5303955078125
patch: jvm = true ; return true ; }
rank: 534
score: 98.50596788194444
patch: return false ; } catch return true ;
rank: 534
score: 98.50142669677734
patch: CaMeL Null true ; return true ;
rank: 534
score: 98.196533203125
patch: return false ; true ; return ;
rank: 534
score: 98.1223856608073
patch: fg = return true ;
rank: 535
score: 98.87367942116477
patch: return ( true && Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ) ;
rank: 535
score: 98.811962890625
patch: return this . search CaMeL Chars [ j ]
rank: 535
score: 98.59375762939453
patch: System . is CaMeL Empty ( )
rank: 535
score: 98.5299301147461
patch: c = true ; i ++ ;
rank: 535
score: 98.50579155815973
patch: CaMeL Builder return return true ; } }
rank: 535
score: 98.5008544921875
patch: CaMeL Exception = false ;
rank: 535
score: 98.3067626953125
patch: Plane throw false ; }
rank: 535
score: 98.1954116821289
patch: CaMeL += true ; return ; {
rank: 535
score: 98.12161254882812
patch: [ ] return false ;
rank: 536
score: 98.87350463867188
patch: return search CaMeL Chars [ j ] , search CaMeL Chars [ j ] ;
rank: 536
score: 98.61654324001736
patch: if ( is CaMeL Empty ( ) )
rank: 536
score: 98.50547790527344
patch: CaMeL Error return false ; } }
rank: 536
score: 98.50081961495536
patch: CaMeL List ; return true ;
rank: 536
score: 98.30481974283855
patch: return true . false ;
rank: 536
score: 98.19437662760417
patch: return 0 != true ;
rank: 536
score: 98.12102399553571
patch: CaMeL ; break true ; }
rank: 537
score: 98.59164428710938
patch: return ( ch != $STRING$ ) ;
rank: 537
score: 98.52950710720486
patch: return ! true ; break ; } }
rank: 537
score: 98.50518798828125
patch: return return is return true ; }
rank: 537
score: 98.50045013427734
patch: CaMeL Number = true ; break ;
rank: 537
score: 98.30247279575893
patch: Plane return false ; break ;
rank: 537
score: 98.19413248697917
patch: return false . true ;
rank: 537
score: 98.1204121907552
patch: . ; return true ;
rank: 538
score: 98.8729831861413
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] . contains ( search CaMeL Chars [ j ] ) ;
rank: 538
score: 98.61586303710938
patch: if ( search CaMeL Length != 0 ) {
rank: 538
score: 98.5903091430664
patch: return ( ch == cs ) ;
rank: 538
score: 98.52867126464844
patch: logger = true ; return false ;
rank: 538
score: 98.50499810112848
patch: return true ; } } } if ;
rank: 538
score: 98.49989318847656
patch: CaMeL Range = return return true ;
rank: 538
score: 98.30104282924107
patch: return true + false ; }
rank: 538
score: 98.12002563476562
patch: , return true ; }
rank: 539
score: 98.87260298295455
patch: return ( true || Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ) ;
rank: 539
score: 98.61528184678819
patch: if ( search CaMeL Length == 0 )
rank: 539
score: 98.5285873413086
patch: t = ; return false ; }
rank: 539
score: 98.49974907769098
patch: CaMeL Exception true return false ; break ;
rank: 539
score: 98.30061558314732
patch: return false ; continue ; }
rank: 539
score: 98.193359375
patch: ( false ) ; ; true ;
rank: 539
score: 98.11976841517857
patch: return true ; return ; }
rank: 540
score: 98.8723781419837
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL Not CaMeL Empty ( ) ;
rank: 540
score: 98.50435638427734
patch: return ; , * * * /
rank: 540
score: 98.49872589111328
patch: CaMeL Category . return ( true ;
rank: 540
score: 98.30024937220982
patch: return * / return true ;
rank: 540
score: 98.19227600097656
patch: return $NUMBER$ ; return - 1 ;
rank: 540
score: 98.11956787109375
patch: op = true ; break ;
rank: 541
score: 98.87222144717262
patch: return is CaMeL Empty ( search CaMeL Chars [ j ] . char CaMeL At ( j ) ) ;
rank: 541
score: 98.5883560180664
patch: if ( false ) return true ;
rank: 541
score: 98.52808380126953
patch: return true ; if ( true ;
rank: 541
score: 98.5042495727539
patch: return is ; ; return false ;
rank: 541
score: 98.49715847439236
patch: return true ; true else return true ;
rank: 541
score: 98.29588099888393
patch: CaMeL ] return true ; }
rank: 541
score: 98.19181060791016
patch: return 0 . 0 ? true ;
rank: 542
score: 98.80144708806819
patch: return contains CaMeL Any ( cs , search CaMeL Chars
rank: 542
score: 98.61240844726562
patch: return ( cs CaMeL Length > 0 ) ;
rank: 542
score: 98.58661566840277
patch: ( search CaMeL Chars [ i ] )
rank: 542
score: 98.52806854248047
patch: return ! ; } return true ;
rank: 542
score: 98.50387912326389
patch: return true ; } } else return ;
rank: 542
score: 98.49715423583984
patch: CaMeL List ( ; return false ;
rank: 542
score: 98.29495849609376
patch: Plane throw false ;
rank: 542
score: 98.19175502232143
patch: return size != true ; ;
rank: 542
score: 98.11781529017857
patch: CaMeL return return true ; }
rank: 543
score: 98.87152654474431
patch: return search CaMeL Chars [ j ] != true ;
rank: 543
score: 98.80078125
patch: return search CaMeL Chars . clear ( ) ;
rank: 543
score: 98.58512660435268
patch: return true ? return true ;
rank: 543
score: 98.52685546875
patch: return is ? true : true ;
rank: 543
score: 98.50385284423828
patch: return null ; if return false ;
rank: 543
score: 98.4969711303711
patch: CaMeL Range . true = true ;
rank: 543
score: 98.29273332868304
patch: return cs [ i ] ;
rank: 543
score: 98.19159807477679
patch: return $NUMBER$ ; return 1 ;
rank: 543
score: 98.11771937779018
patch: &= true ; return false ;
rank: 544
score: 98.87148813100961
patch: return ( search CaMeL Chars [ j ] , ch ) ;
rank: 544
score: 98.79984907670455
patch: return contains CaMeL Any ( [ j ] ) ;
rank: 544
score: 98.61063842773437
patch: if ( i == search CaMeL Length ) {
rank: 544
score: 98.49636404854911
patch: CaMeL Exception true return null ;
rank: 544
score: 98.29166085379464
patch: return true ; } false ;
rank: 544
score: 98.18994140625
patch: CaMeL return ( true ) ; ;
rank: 544
score: 98.11717878069196
patch: cell = true ; break ;
rank: 545
score: 98.87113131009616
patch: return search CaMeL Chars [ j ] == ch . true ;
rank: 545
score: 98.79972700639205
patch: return contains CaMeL Any ( j , cs ) ;
rank: 545
score: 98.60928955078126
patch: ret = search CaMeL Chars [ j ] ;
rank: 545
score: 98.57676866319444
patch: return search CaMeL Chars [ cs CaMeL Length
rank: 545
score: 98.52506510416667
patch: r = true ; return false ; }
rank: 545
score: 98.50339084201389
patch: return false ; } if ; return ;
rank: 545
score: 98.49609375
patch: return false ; ; ; if true ;
rank: 545
score: 98.29149169921875
patch: ch = true ;
rank: 545
score: 98.11705671037946
patch: evaluator = true ; break ;
rank: 546
score: 98.87105102539063
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , ) ;
rank: 546
score: 98.60918317522321
patch: return true ; } } else
rank: 546
score: 98.57388305664062
patch: return false ? true : false ;
rank: 546
score: 98.4945576985677
patch: CaMeL append return true ;
rank: 546
score: 98.18875558035714
patch: return false ; return this ;
rank: 546
score: 98.11613246372768
patch: m = this . true ;
rank: 547
score: 98.87104877672698
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars , i ) ;
rank: 547
score: 98.50331624348958
patch: return true ; } / * return ;
rank: 547
score: 98.49448939732143
patch: CaMeL Number return true ; }
rank: 547
score: 98.28964669363839
patch: ! return false ; } }
rank: 547
score: 98.18841552734375
patch: return 0 . return 1 ;
rank: 547
score: 98.11594935825893
patch: CaMeL return false ; } }
rank: 548
score: 98.87089611235119
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Interface ( ) ;
rank: 548
score: 98.60575358072917
patch: return = true ; }
rank: 548
score: 98.56803894042969
patch: throw new Exception ( $STRING$ ) ;
rank: 548
score: 98.50285339355469
patch: CaMeL List true return false ; }
rank: 548
score: 98.49429660373264
patch: CaMeL Number = true ; for true ;
rank: 548
score: 98.28879220145089
patch: return false + false ; }
rank: 548
score: 98.18825276692708
patch: return size != 0 ;
rank: 548
score: 98.11589704241071
patch: file = true ; break ;
rank: 549
score: 98.8707275390625
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) ;
rank: 549
score: 98.56266276041667
patch: return ch != ch ;
rank: 549
score: 98.52254486083984
patch: return true ; } ; ; }
rank: 549
score: 98.50282505580357
patch: CaMeL Thread . return true ;
rank: 549
score: 98.4940414428711
patch: CaMeL Exception ( return true ) ;
rank: 549
score: 98.28872244698661
patch: return * * * * /
rank: 549
score: 98.18325369698661
patch: CaMeL String ( true ) ;
rank: 549
score: 98.11576625279018
patch: previous = true ; break ;
rank: 550
score: 98.52247450086806
patch: logger = true ; return false ; }
rank: 550
score: 98.50272623697917
patch: return true ; } } ; return ;
rank: 550
score: 98.4931411743164
patch: CaMeL Range true return null ; }
rank: 550
score: 98.18260846819196
patch: return return 1 ; break ;
rank: 550
score: 98.1156717936198
patch: = true return true ;
rank: 551
score: 98.87043108258929
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Array ( ) ;
rank: 551
score: 98.79542125355114
patch: return contains CaMeL Any ( cs , true ) ;
rank: 551
score: 98.59667290581598
patch: break && j < search CaMeL Length ;
rank: 551
score: 98.50212944878473
patch: return ! true ; } return false ;
rank: 551
score: 98.49311065673828
patch: CaMeL Null true ; return false ;
rank: 551
score: 98.28533935546875
patch: return true + false ;
rank: 551
score: 98.17841448102679
patch: return 0 . != 1 ;
rank: 551
score: 98.11474609375
patch: 32 . return true ;
rank: 552
score: 98.87039620535714
patch: return contains CaMeL Any ( search CaMeL Chars [ j ] . char CaMeL At ( j ) ) ;
rank: 552
score: 98.59351942274306
patch: return is [ j ] == ch ;
rank: 552
score: 98.55939483642578
patch: return true || ch != ch ;
rank: 552
score: 98.50205993652344
patch: CaMeL State . true return true ;
rank: 552
score: 98.49196951729911
patch: CaMeL Exception { return true ;
rank: 552
score: 98.2847900390625
patch: ! return true ; }
rank: 552
score: 98.17597307477679
patch: return != ) ; return ;
rank: 552
score: 98.11260986328125
patch: [ ] true = false ;
rank: 553
score: 98.87038352272727
patch: return contains CaMeL Any ( cs . char CaMeL At ( j ) . to CaMeL String ( ) ) ;
rank: 553
score: 98.58925374348958
patch: return is . true ;
rank: 553
score: 98.55729166666667
patch: return false . false ;
rank: 553
score: 98.5012435913086
patch: . . . return true ; }
rank: 553
score: 98.49191623263889
patch: CaMeL Boolean = true ; if true ;
rank: 553
score: 98.28455200195313
patch: result = true ;
rank: 553
score: 98.17544991629464
patch: CaMeL Builder ( true ) ;
rank: 553
score: 98.11184692382812
patch: 64 . return true ;
rank: 554
score: 98.58866373697917
patch: return ! ! true ;
rank: 554
score: 98.55574544270833
patch: return ch == $STRING$ ;
rank: 554
score: 98.52133517795139
patch: conn = true ; return true ; }
rank: 554
score: 98.50123426649306
patch: . . . return false ; } }
rank: 554
score: 98.49191623263889
patch: return true ; return true ; try ;
rank: 554
score: 98.28390066964286
patch: return false && false ; }
rank: 554
score: 98.17432512555804
patch: return start ; return true ;
rank: 554
score: 98.10799734933036
patch: = true * / true ;
rank: 555
score: 98.87012780230978
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) . is CaMeL Empty ( ) ;
rank: 555
score: 98.78611061789773
patch: return cs . contains ( cs , ch ) ;
rank: 555
score: 98.55563354492188
patch: return ch != false . true ;
rank: 555
score: 98.52131652832031
patch: return is CaMeL Empty ( ; ;
rank: 555
score: 98.501220703125
patch: return true ; } for return true ;
rank: 555
score: 98.49191284179688
patch: CaMeL Number true return true ; }
rank: 555
score: 98.28364780970982
patch: CaMeL ] return false ; }
rank: 555
score: 98.17423793247768
patch: return 0 , return 1 ;
rank: 555
score: 98.10788399832589
patch: . is CaMeL Empty ( ;
rank: 556
score: 98.87012780230978
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars [ j ] , ch ) ;
rank: 556
score: 98.58661760602679
patch: return cs . true ; }
rank: 556
score: 98.52120361328124
patch: return ; } }
rank: 556
score: 98.50071716308594
patch: return false ; } * * ;
rank: 556
score: 98.49169921875
patch: return true ; true catch return true ;
rank: 556
score: 98.28045654296875
patch: ( ) return false ;
rank: 556
score: 98.17398507254464
patch: return matches ; return true ;
rank: 556
score: 98.10714285714286
patch: sprite = true ; break ;
rank: 557
score: 98.86969757080078
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( null ) ;
rank: 557
score: 98.58559841579861
patch: if ( search CaMeL Length < 1 )
rank: 557
score: 98.52104356553819
patch: d = true ; break ; } }
rank: 557
score: 98.49939643012152
patch: CaMeL return [ i ] = true ;
rank: 557
score: 98.4910888671875
patch: CaMeL Runtime . return ( true ; {
rank: 557
score: 98.28032575334821
patch: return false . false ; }
rank: 557
score: 98.173828125
patch: ( true ) ; return ;
rank: 557
score: 98.10630580357143
patch: . true return true ; }
rank: 558
score: 98.86937366832386
patch: return Array CaMeL Utils . contains ( cs , cs . char CaMeL At ( j ) , ch ) ;
rank: 558
score: 98.783935546875
patch: return ( cs . char CaMeL At ( j )
rank: 558
score: 98.52017974853516
patch: z = ; return true ; }
rank: 558
score: 98.49918365478516
patch: return return && return true ; }
rank: 558
score: 98.4908447265625
patch: return new return true ;
rank: 558
score: 98.27805001395089
patch: Plane return true ; break ;
rank: 558
score: 98.17122105189732
patch: return return ) ; return ;
rank: 558
score: 98.10294886997768
patch: extension = true ; break ;
rank: 559
score: 98.86918559827302
patch: return search CaMeL Chars [ j ] . append ( search CaMeL Chars [ j ] ) ;
rank: 559
score: 98.58212280273438
patch: if ( ch != null ) {
rank: 559
score: 98.54646301269531
patch: return true || ch == ch ;
rank: 559
score: 98.51982116699219
patch: return is ? false : true ;
rank: 559
score: 98.4991226196289
patch: return null ; if return true ;
rank: 559
score: 98.4903564453125
patch: CaMeL Process . ; return true ;
rank: 559
score: 98.27640206473214
patch: return false ; } System .
rank: 559
score: 98.16895548502605
patch: return is != 0 ;
rank: 559
score: 98.0930684407552
patch: . return true true ;
rank: 560
score: 98.869140625
patch: return super . contains CaMeL Any ( cs , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 560
score: 98.58001708984375
patch: return ( boolean ) true ;
rank: 560
score: 98.489990234375
patch: CaMeL Exception true true return false ;
rank: 560
score: 98.2760721842448
patch: return false ; System .
rank: 560
score: 98.16729736328125
patch: CaMeL Thread ( true ) ;
rank: 561
score: 98.77703857421875
patch: return contains CaMeL Any ( i ) ;
rank: 561
score: 98.57906087239583
patch: if ( search CaMeL Length < ) {
rank: 561
score: 98.53905487060547
patch: return ch == $STRING$ + ch ;
rank: 561
score: 98.51917182074652
patch: book = true ; return true ; }
rank: 561
score: 98.4989013671875
patch: return return is true ; }
rank: 561
score: 98.48991394042969
patch: CaMeL Range . return true ; ;
rank: 561
score: 98.27568708147321
patch: return true . true ; }
rank: 561
score: 98.16695731026786
patch: return next ; return true ;
rank: 561
score: 98.08709716796875
patch: = null ; break ;
rank: 562
score: 98.86880347842262
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 562
score: 98.57842407226562
patch: b return true ;
rank: 562
score: 98.53819274902344
patch: return ch != true . true ;
rank: 562
score: 98.48988560267857
patch: CaMeL Error true return true ;
rank: 562
score: 98.275146484375
patch: return false ; break true ;
rank: 562
score: 98.08451334635417
patch: m = true ; }
rank: 563
score: 98.86865234375
patch: return search CaMeL Chars [ j ] == null . true ;
rank: 563
score: 98.77402954101562
patch: return search CaMeL Chars [ cs CaMeL Length ]
rank: 563
score: 98.57809787326389
patch: if ( cs CaMeL Length == 0 )
rank: 563
score: 98.49777221679688
patch: return true ; } throw null ;
rank: 563
score: 98.48986138237848
patch: return true ; true ; if true false
rank: 563
score: 98.27098737444196
patch: return false + true ; }
rank: 563
score: 98.16624232700893
patch: return - ) ; true ;
rank: 563
score: 98.0841064453125
patch: return true || true ;
rank: 564
score: 98.86841837565105
patch: try { search CaMeL Chars [ j ] == ch ;
rank: 564
score: 98.5778096516927
patch: return cs . true ;
rank: 564
score: 98.53533935546875
patch: return cs != null ;
rank: 564
score: 98.5186767578125
patch: $NUMBER$ return true ; } }
rank: 564
score: 98.49767303466797
patch: return this . is CaMeL Empty ;
rank: 564
score: 98.4885025024414
patch: CaMeL Builder . true return true ;
rank: 564
score: 98.27071126302083
patch: return false + false ;
rank: 564
score: 98.16597202845982
patch: return 0 . return true ;
rank: 564
score: 98.08235677083333
patch: ) return true ; }
rank: 565
score: 98.86798095703125
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars , ch ) ;
rank: 565
score: 98.766259765625
patch: search CaMeL Chars [ j ] return false ;
rank: 565
score: 98.51827239990234
patch: this . return true ; } }
rank: 565
score: 98.49679129464286
patch: return return is ; } }
rank: 565
score: 98.48822021484375
patch: CaMeL Range . true return false ;
rank: 565
score: 98.26993233816964
patch: return false ; count ++ ;
rank: 565
score: 98.16510009765625
patch: return ch ; return true ;
rank: 565
score: 98.0781962076823
patch: &= true && true ;
rank: 566
score: 98.86796431107955
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) . length ) ;
rank: 566
score: 98.76500244140625
patch: return boolean . is CaMeL Empty ( ) ;
rank: 566
score: 98.53262329101562
patch: if ( false ) return false ;
rank: 566
score: 98.51756456163194
patch: t = ; return true ; } }
rank: 566
score: 98.49671766493056
patch: return is CaMeL Empty true ; } }
rank: 566
score: 98.48617553710938
patch: CaMeL Boolean = true ;
rank: 566
score: 98.2680419921875
patch: ! return false ;
rank: 566
score: 98.16456821986607
patch: CaMeL += ( ) ) ;
rank: 566
score: 98.07748413085938
patch: . return ( true ;
rank: 567
score: 98.86761474609375
patch: return ( char ) search CaMeL Chars [ j ] ;
rank: 567
score: 98.53196716308594
patch: try { return ch == ch ;
rank: 567
score: 98.49665069580078
patch: return false ; } = true ;
rank: 567
score: 98.48542022705078
patch: CaMeL List . return ( false ;
rank: 567
score: 98.26722208658855
patch: true return false ; }
rank: 567
score: 98.16417585100446
patch: CaMeL |= ( true ) ;
rank: 568
score: 98.86715359157986
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( ch , ch ) ;
rank: 568
score: 98.51734754774306
patch: B = true ; return true ; }
rank: 568
score: 98.49648030598958
patch: return true ; for return true ; }
rank: 568
score: 98.48471069335938
patch: CaMeL Range return return true ; ;
rank: 568
score: 98.26648821149554
patch: return false && true ; }
rank: 568
score: 98.16389683314732
patch: return 0 ; true ; ;
rank: 568
score: 98.0750020345052
patch: . right return true ;
rank: 569
score: 98.86687677556819
patch: return $STRING$ == search CaMeL Chars [ j ] ;
rank: 569
score: 98.7581787109375
patch: return contains CaMeL Any ( true ) ;
rank: 569
score: 98.56803385416667
patch: return return is CaMeL Empty ( ) ;
rank: 569
score: 98.53057861328125
patch: return true + ch == ch ;
rank: 569
score: 98.51719665527344
patch: if ( ; break ; } }
rank: 569
score: 98.49647521972656
patch: return null ; else return false ;
rank: 569
score: 98.26576741536458
patch: Plane return ! true ;
rank: 569
score: 98.15568324497768
patch: return 0 ; return ; ;
rank: 569
score: 98.07293701171875
patch: m = return false ;
rank: 570
score: 98.8668701171875
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] . value ) ;
rank: 570
score: 98.56709120008681
patch: return ( Char CaMeL Sequence ) cs ;
rank: 570
score: 98.52855682373047
patch: return null ? true : false ;
rank: 570
score: 98.5171890258789
patch: . true ; return true ; }
rank: 570
score: 98.4840087890625
patch: CaMeL List = true ;
rank: 570
score: 98.26448277064732
patch: return true + true ; }
rank: 570
score: 98.15561349051339
patch: return - 1 ; break ;
rank: 570
score: 98.07144165039062
patch: , return true ;
rank: 571
score: 98.5257339477539
patch: return false ? false : false ;
rank: 571
score: 98.4957275390625
patch: return false ; for true ; }
rank: 571
score: 98.07037353515625
patch: return true == false ;
rank: 572
score: 98.86682739257813
patch: return ( search CaMeL Chars [ j ] . char CaMeL At ( j ) == ch ) ;
rank: 572
score: 98.566650390625
patch: if ( search CaMeL Chars ) {
rank: 572
score: 98.52555084228516
patch: return ch != false . false ;
rank: 572
score: 98.49567413330078
patch: return is CaMeL Empty || true ;
rank: 572
score: 98.48326110839844
patch: CaMeL List == ; return true ;
rank: 572
score: 98.26199776785714
patch: ! { return false ; }
rank: 572
score: 98.15248325892857
patch: return is , return true ;
rank: 572
score: 98.06918334960938
patch: CaMeL return ! true ;
rank: 573
score: 98.74981079101562
patch: return cs CaMeL Length - cs CaMeL Length ;
rank: 573
score: 98.56316460503473
patch: if ( cs CaMeL Length >= 0 )
rank: 573
score: 98.51953125
patch: return true ? return false ;
rank: 573
score: 98.51673889160156
patch: b = true ; return false ;
rank: 573
score: 98.4831771850586
patch: CaMeL Exception true return true ; ;
rank: 573
score: 98.261474609375
patch: System . return false ; }
rank: 573
score: 98.1524658203125
patch: return name ; return true ;
rank: 573
score: 98.06893920898438
patch: return false return true ;
rank: 574
score: 98.56279754638672
patch: if ( ch == $STRING$ ) {
rank: 574
score: 98.51864624023438
patch: return ch != $STRING$ + ch ;
rank: 574
score: 98.5167236328125
patch: adapter = true ; return true ; }
rank: 574
score: 98.49549102783203
patch: CaMeL return ( return true ) ;
rank: 574
score: 98.48272705078125
patch: CaMeL Exception = true ; try {
rank: 574
score: 98.25736781529018
patch: contains * / return false ;
rank: 574
score: 98.15107073102679
patch: CaMeL ch = true ; ;
rank: 574
score: 98.06844075520833
patch: CaMeL Process return true ;
rank: 575
score: 98.8665187669837
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . to CaMeL Object ( ) ) ;
rank: 575
score: 98.72010803222656
patch: Plane = true ; return false ;
rank: 575
score: 98.56276448567708
patch: b return true ; }
rank: 575
score: 98.51663208007812
patch: cb = true ; return true ;
rank: 575
score: 98.51202392578125
patch: return ch != true . false ;
rank: 575
score: 98.49500868055556
patch: return false ; } else = true ;
rank: 575
score: 98.48038330078126
patch: return true ; true
rank: 575
score: 98.25412423270089
patch: System . return true ; }
rank: 575
score: 98.06651814778645
patch: return true = true ;
rank: 576
score: 98.8658935546875
patch: return Array CaMeL Utils . search CaMeL Chars [ j ] . contains CaMeL Any ( cs ) ;
rank: 576
score: 98.56220160590277
patch: if ( j >= search CaMeL Length )
rank: 576
score: 98.51654730902777
patch: workspace = true ; return true ; }
rank: 576
score: 98.50908660888672
patch: return ch != null || true ;
rank: 576
score: 98.49488067626953
patch: return return is CaMeL Empty true ;
rank: 576
score: 98.15086146763393
patch: CaMeL List ( ) ; true
rank: 576
score: 98.06484985351562
patch: ( true , true ;
rank: 577
score: 98.86577405427632
patch: return ( search CaMeL Chars [ j ] . to CaMeL String ( ) == ch ) ;
rank: 577
score: 98.71490478515625
patch: Plane = true ; return true ;
rank: 577
score: 98.56157090928819
patch: if ( search CaMeL Length <= 1 )
rank: 577
score: 98.51645914713542
patch: return true ; ; } if ( ;
rank: 577
score: 98.50698852539062
patch: return null && ch == ch ;
rank: 577
score: 98.49456024169922
patch: return true ; * * * ;
rank: 577
score: 98.4796142578125
patch: CaMeL Class return true ;
rank: 577
score: 98.25171770368304
patch: contains * / return true ;
rank: 577
score: 98.15010288783482
patch: ( true ) ; true ;
rank: 577
score: 98.05745442708333
patch: return Boolean . TRUE ;
rank: 578
score: 98.86539035373264
patch: return search CaMeL Chars [ j ] . char CaMeL At ( i ) != ch ;
rank: 578
score: 98.71200900607639
patch: return cs . add ( ch ) ;
rank: 578
score: 98.51612006293402
patch: s = true ; break ; } }
rank: 578
score: 98.49336242675781
patch: return false ; } catch ; ;
rank: 578
score: 98.4791259765625
patch: CaMeL List . true = false ;
rank: 578
score: 98.25120035807292
patch: CaMeL Object return true ;
rank: 578
score: 98.14877319335938
patch: return is return 0 ;
rank: 578
score: 98.0570068359375
patch: c = return true ;
rank: 579
score: 98.56019810267857
patch: if ( ch != null )
rank: 579
score: 98.51530626085069
patch: finder = true ; return true ; }
rank: 579
score: 98.50438690185547
patch: return search CaMeL Length > 1 ;
rank: 579
score: 98.49258422851562
patch: return is CaMeL Empty ; return ;
rank: 579
score: 98.47889709472656
patch: CaMeL List != ; return true ;
rank: 579
score: 98.14739990234375
patch: return 0 . 1 ;
rank: 579
score: 98.0543924967448
patch: is return true ; }
rank: 580
score: 98.86518787202381
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Type ( ) ;
rank: 580
score: 98.55959065755208
patch: while ( j < search CaMeL Length )
rank: 580
score: 98.50363159179688
patch: return null && ch != ch ;
rank: 580
score: 98.49252658420139
patch: CaMeL List true return false ; } }
rank: 580
score: 98.47774505615234
patch: CaMeL Class ( ; return false ;
rank: 580
score: 98.2506103515625
patch: result = false ;
rank: 580
score: 98.14505440848214
patch: CaMeL List ( ) return ;
rank: 581
score: 98.86485595703125
patch: return search CaMeL Chars [ j ] . equals ( cs . to CaMeL String ( ) ) ;
rank: 581
score: 98.55911690848214
patch: return is . true ; }
rank: 581
score: 98.50302124023438
patch: return true && ch != $STRING$ ;
rank: 581
score: 98.49242485894098
patch: return return true ; return false ; }
rank: 581
score: 98.47725677490234
patch: return false ; return 0 ; ;
rank: 581
score: 98.25034005301339
patch: return false . return false ;
rank: 581
score: 98.14329310825893
patch: return ! return != true ;
rank: 581
score: 98.0533447265625
patch: scanner = true ;
rank: 582
score: 98.86468796502976
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ] ) ) ;
rank: 582
score: 98.55455525716145
patch: return ! return ; }
rank: 582
score: 98.51306830512152
patch: image = true ; break ; } }
rank: 582
score: 98.5025634765625
patch: return ch == ch : true ;
rank: 582
score: 98.49239349365234
patch: return true ; break ; } else
rank: 582
score: 98.47708892822266
patch: return true ; return null ; true
rank: 582
score: 98.14316231863839
patch: CaMeL do = true ; ;
rank: 582
score: 98.05303955078125
patch: CaMeL return return true ;
rank: 583
score: 98.86445756392045
patch: return Array CaMeL Utils . equals ( cs , cs . char CaMeL At ( j ) , ch ) ;
rank: 583
score: 98.55250379774306
patch: if ( ! search CaMeL Length ) {
rank: 583
score: 98.49756876627605
patch: try { return false ;
rank: 583
score: 98.49216715494792
patch: return is true ; }
rank: 583
score: 98.24893624441964
patch: return true && false ; }
rank: 583
score: 98.14264787946429
patch: CaMeL do . throw true ;
rank: 583
score: 98.0498555501302
patch: return true return false ;
rank: 584
score: 98.86444382440476
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Array ( ) ;
rank: 584
score: 98.51247829861111
patch: j = true ; break ; } }
rank: 584
score: 98.4971211751302
patch: return ch != $STRING$ ;
rank: 584
score: 98.49196951729911
patch: return ; } } return ;
rank: 584
score: 98.47685023716518
patch: CaMeL Number ( true ) ;
rank: 584
score: 98.24785505022321
patch: Plane ( return true ) ;
rank: 584
score: 98.14185442243304
patch: return next ( true ) ;
rank: 584
score: 98.04978434244792
patch: return filter . true ;
rank: 585
score: 98.86444382440476
patch: return search CaMeL Chars [ i ] . contains CaMeL Any ( search CaMeL Chars [ j ] ) ;
rank: 585
score: 98.54742431640625
patch: return cs . true ; } }
rank: 585
score: 98.51192220052083
patch: score = true ; return true ; }
rank: 585
score: 98.49505615234375
patch: return ( true ) && true ;
rank: 585
score: 98.49188910590277
patch: return false ; } if ; * /
rank: 585
score: 98.47667694091797
patch: CaMeL Number true return true ; ;
rank: 585
score: 98.24754842122395
patch: return false && false ;
rank: 585
score: 98.13931710379464
patch: return - ) ; break ;
rank: 585
score: 98.04960327148437
patch: : return true ;
rank: 586
score: 98.8643465909091
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars . get ( j ) ) ;
rank: 586
score: 98.51188151041667
patch: skipped = true ; return true ; }
rank: 586
score: 98.49365997314453
patch: return cs != false . true ;
rank: 586
score: 98.49170684814453
patch: return ; ? return true ; }
rank: 586
score: 98.47584533691406
patch: CaMeL Range true return return true ;
rank: 586
score: 98.24727085658482
patch: return $NUMBER$ . true ; }
rank: 586
score: 98.13854108537946
patch: return 1 ; return 1 ;
rank: 586
score: 98.0447285970052
patch: = Boolean . TRUE ;
rank: 587
score: 98.51167297363281
patch: s = true ; return false ;
rank: 587
score: 98.49310302734375
patch: return ch == ch - 1 ;
rank: 587
score: 98.49158393012152
patch: return false ; if return true ; }
rank: 587
score: 98.47451782226562
patch: CaMeL Exception return false ;
rank: 587
score: 98.24666922433036
patch: ! return true ; } }
rank: 587
score: 98.136962890625
patch: ; { return true ;
rank: 587
score: 98.04263305664062
patch: CaMeL ; j ++ ;
rank: 588
score: 98.86362092391305
patch: return cs . contains CaMeL Any ( search CaMeL Chars [ j ] . char CaMeL At ( j ) ) ;
rank: 588
score: 98.68459743923611
patch: return cs . equals ( cs ) ;
rank: 588
score: 98.54183959960938
patch: switch ( ch )
rank: 588
score: 98.49138047960069
patch: return false ; } } if return ;
rank: 588
score: 98.47451782226562
patch: CaMeL Exception true return false ; ;
rank: 588
score: 98.24600219726562
patch: ( ) return true ;
rank: 588
score: 98.13607352120536
patch: return ! ) ; return ;
rank: 588
score: 98.03905232747395
patch: . true return true ;
rank: 589
score: 98.86354466488487
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars . ) ;
rank: 589
score: 98.47374471028645
patch: return ! true ; ;
rank: 589
score: 98.13467843191964
patch: return return true ; return ;
rank: 589
score: 98.03822835286458
patch: if true return true ;
rank: 590
score: 98.8635021391369
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 590
score: 98.53861490885417
patch: else return true ; }
rank: 590
score: 98.49130249023438
patch: return null ; return null ; }
rank: 590
score: 98.47935485839844
patch: return true && ch == $STRING$ ;
rank: 590
score: 98.47354125976562
patch: return new || true ;
rank: 590
score: 98.24440220424107
patch: ! this . return false ;
rank: 590
score: 98.0350341796875
patch: . is return false ;
rank: 591
score: 98.86345471833882
patch: return search CaMeL Chars [ j ] . equals ( search CaMeL Chars [ i ] ) ;
rank: 591
score: 98.66716851128473
patch: return contains ( cs , ch ) ;
rank: 591
score: 98.53832244873047
patch: return cs CaMeL Length == 0 ;
rank: 591
score: 98.490966796875
patch: return true ; } ( return false ;
rank: 591
score: 98.47931671142578
patch: return ch == $STRING$ : true ;
rank: 591
score: 98.4717025756836
patch: CaMeL Runtime . return ( true ;
rank: 591
score: 98.2435302734375
patch: Plane try { return false ;
rank: 591
score: 98.03439331054688
patch: ( ; break ; }
rank: 592
score: 98.8634366122159
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) . length ) ;
rank: 592
score: 98.6661376953125
patch: return search CaMeL Chars [ j
rank: 592
score: 98.53462219238281
patch: return search CaMeL Length >= 0 ;
rank: 592
score: 98.50994194878473
patch: m = null ; return true ; }
rank: 592
score: 98.4905014038086
patch: CaMeL Builder return return true ; }
rank: 592
score: 98.47879028320312
patch: return ch != null + ch ;
rank: 592
score: 98.47130584716797
patch: ( this ) ; return true ;
rank: 592
score: 98.13011823381696
patch: return false ; return ; /
rank: 592
score: 98.03070068359375
patch: = ( true ) ;
rank: 593
score: 98.86322576349431
patch: return cs . contains CaMeL Any ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 593
score: 98.50986056857639
patch: ret = true ; break ; } }
rank: 593
score: 98.4882583618164
patch: return null ; } break ; }
rank: 593
score: 98.47734832763672
patch: return false || ch != ch ;
rank: 593
score: 98.4700927734375
patch: CaMeL List . append return true ;
rank: 593
score: 98.12928989955357
patch: return ! true ; true ;
rank: 594
score: 98.86320415296052
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars , j ) ;
rank: 594
score: 98.50916883680556
patch: c = ; ; return true ; }
rank: 594
score: 98.48795863560268
patch: return true ; } * ;
rank: 594
score: 98.47665405273438
patch: return ( search CaMeL Chars ) ;
rank: 594
score: 98.24278767903645
patch: Plane else return false ;
rank: 594
score: 98.12849644252232
patch: CaMeL Range ( return ) ;
rank: 594
score: 98.029296875
patch: CaMeL return true true ;
rank: 595
score: 98.8631924715909
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . ends CaMeL With ( $STRING$ ) ;
rank: 595
score: 98.53114149305556
patch: return ( cs . char CaMeL At (
rank: 595
score: 98.50887722439236
patch: renderer = true ; return true ; }
rank: 595
score: 98.48770141601562
patch: return true ; break ; break ;
rank: 595
score: 98.46956634521484
patch: CaMeL Thread . return true ; ;
rank: 595
score: 98.24213518415179
patch: true return false ; } }
rank: 595
score: 98.12673950195312
patch: return ; return 0 ;
rank: 595
score: 98.0272216796875
patch: is true = true ;
rank: 596
score: 98.86314290364584
patch: return ( true && search CaMeL Chars [ j ] == ch ) ;
rank: 596
score: 98.65918840680804
patch: contains CaMeL Any return true ;
rank: 596
score: 98.48701695033482
patch: return ; / * * /
rank: 596
score: 98.46891784667969
patch: CaMeL Exception return true ; break ;
rank: 596
score: 98.46781921386719
patch: return cs != false . false ;
rank: 596
score: 98.24126325334821
patch: ; return false ; } }
rank: 596
score: 98.12669154575893
patch: return ; { return 0 ;
rank: 597
score: 98.86311141304348
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars . to CaMeL Object ( ) ) ;
rank: 597
score: 98.65884835379464
patch: return contains ( cs ) ;
rank: 597
score: 98.52948869977679
patch: switch ( search CaMeL Length )
rank: 597
score: 98.48640950520833
patch: return true ; } return return false ;
rank: 597
score: 98.46829986572266
patch: CaMeL Object ( return true ) ;
rank: 597
score: 98.46525573730469
patch: return ch == ch || true ;
rank: 597
score: 98.24094645182292
patch: return - false ; }
rank: 597
score: 98.02322998046876
patch: ) return true ;
rank: 598
score: 98.8629150390625
patch: return super . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 598
score: 98.65557183159723
patch: return contains CaMeL Any ( } ) ;
rank: 598
score: 98.52830505371094
patch: return ch ;
rank: 598
score: 98.50808715820312
patch: return true return false ; } }
rank: 598
score: 98.48629421657986
patch: return true ; if ; return true ;
rank: 598
score: 98.46820831298828
patch: CaMeL String ( return true ) ;
rank: 598
score: 98.46306501116071
patch: return ( char ) false ;
rank: 598
score: 98.24061802455357
patch: return false ; true true ;
rank: 598
score: 98.12559000651042
patch: CaMeL do = true ;
rank: 598
score: 98.01886596679688
patch: is return true ;
rank: 599
score: 98.86279296875
patch: return super . contains CaMeL Any ( cs , cs ) ;
rank: 599
score: 98.65155707465277
patch: return search CaMeL Chars ( cs ) ;
rank: 599
score: 98.52698516845703
patch: return search CaMeL Length == 0 ;
rank: 599
score: 98.50792778862848
patch: return true ; ; break ; } }
rank: 599
score: 98.4862060546875
patch: CaMeL Thread return true ;
rank: 599
score: 98.4681396484375
patch: CaMeL Enum true return true ;
rank: 599
score: 98.46249825613839
patch: return true && return true ;
rank: 599
score: 98.23912556966145
patch: return ) return false ;
rank: 599
score: 98.12451171875
patch: return ; = ; true ;
rank: 599
score: 98.01698811848958
patch: [ ; return true ;
rank: 600
score: 98.50788116455078
patch: ( ) . return true ; }
rank: 600
score: 98.48540496826172
patch: return is CaMeL Empty true ; }
rank: 600
score: 98.46800013950893
patch: CaMeL String true return true ;
rank: 600
score: 98.46048990885417
patch: return false && true ;
rank: 600
score: 98.1241455078125
patch: CaMeL do . return $NUMBER$ ;
rank: 600
score: 98.01145629882812
patch: \ return true ;
rank: 601
score: 98.52471923828125
patch: if ( j >= 0 ) {
rank: 601
score: 98.50782012939453
patch: pt = true ; break ; }
rank: 601
score: 98.48455047607422
patch: return null ; else return true ;
rank: 601
score: 98.4671401977539
patch: return true ; true return null ;
rank: 601
score: 98.23785400390625
patch: Plane return ! false ;
rank: 601
score: 98.12218366350446
patch: return true ; return this ;
rank: 602
score: 98.862451171875
patch: return Array CaMeL Utils . contains ( cs , search CaMeL Chars [ j ] , ch ) ;
rank: 602
score: 98.6490987141927
patch: return search CaMeL Chars ;
rank: 602
score: 98.52420043945312
patch: boolean is CaMeL Empty = true ;
rank: 602
score: 98.48401557074652
patch: return true ; } } * * /
rank: 602
score: 98.46682739257812
patch: return true ; return false ; else
rank: 602
score: 98.4583969116211
patch: return false || ch == ch ;
rank: 602
score: 98.2366434733073
patch: true return true ; }
rank: 602
score: 98.12113734654018
patch: return is ( return ) ;
rank: 602
score: 98.01055908203125
patch: m = true ; ;
rank: 603
score: 98.8623046875
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ;
rank: 603
score: 98.50680881076389
patch: clazz = true ; return true ; }
rank: 603
score: 98.48292371961806
patch: return is CaMeL Sealed return true ; }
rank: 603
score: 98.46532440185547
patch: CaMeL Range . iterator return true ;
rank: 603
score: 98.45750427246094
patch: for ( int j = 0 )
rank: 603
score: 98.12110246930804
patch: return $NUMBER$ ; return $NUMBER$ ;
rank: 603
score: 98.01024373372395
patch: $NUMBER$ return false ; }
rank: 604
score: 98.86211867559524
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars , i ) ;
rank: 604
score: 98.64196014404297
patch: if ( search CaMeL Chars [ j
rank: 604
score: 98.517578125
patch: if ( ch == cs CaMeL Length )
rank: 604
score: 98.50679779052734
patch: impl = true ; return true ;
rank: 604
score: 98.46432495117188
patch: return ! true ; return null ;
rank: 604
score: 98.45347595214844
patch: return cs != true . true ;
rank: 604
score: 98.23142700195312
patch: return - false ;
rank: 604
score: 98.12083217075893
patch: CaMeL return ) ; return ;
rank: 604
score: 98.0095947265625
patch: fg = true ;
rank: 605
score: 98.86174982244319
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( i ) , ch ) ;
rank: 605
score: 98.51725006103516
patch: return is . true ; } }
rank: 605
score: 98.50663926866319
patch: return true ; } ++ true ; }
rank: 605
score: 98.46385955810547
patch: CaMeL Class ( return true ) ;
rank: 605
score: 98.45215606689453
patch: return ch != null . true ;
rank: 605
score: 98.23141043526786
patch: logger . return false ; }
rank: 605
score: 98.11722819010417
patch: return 0 + 0 ;
rank: 605
score: 98.0093485514323
patch: return i < true ;
rank: 606
score: 98.86099446614584
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j )
rank: 606
score: 98.50611029730902
patch: p = new true ; return true ;
rank: 606
score: 98.4815673828125
patch: return false ; while return false ; }
rank: 606
score: 98.46343994140625
patch: return true ; return true ; true
rank: 606
score: 98.23112269810268
patch: Plane this return true ; }
rank: 606
score: 98.11655099051339
patch: CaMeL sum . return true ;
rank: 606
score: 98.00823974609375
patch: env = true ;
rank: 607
score: 98.86093284970238
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars [ j ] ) ;
rank: 607
score: 98.51410590277777
patch: if ( search CaMeL Length >= 1 )
rank: 607
score: 98.48146057128906
patch: CaMeL Thread return return true ; }
rank: 607
score: 98.46233367919922
patch: CaMeL Number true true return false ;
rank: 607
score: 98.23020426432292
patch: Plane else return true ;
rank: 607
score: 98.11449432373047
patch: return $NUMBER$ ;
rank: 607
score: 98.0079345703125
patch: = ; break ; }
rank: 608
score: 98.86072887073864
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [ i ] , ch ) ;
rank: 608
score: 98.63589138454861
patch: return true . contains ( cs ) ;
rank: 608
score: 98.5126953125
patch: result return true ;
rank: 608
score: 98.50526428222656
patch: a = true ; break ; }
rank: 608
score: 98.48124694824219
patch: return false ; } catch return ;
rank: 608
score: 98.46158599853516
patch: CaMeL Exception return true ; ; ;
rank: 608
score: 98.44734700520833
patch: return true : true ;
rank: 608
score: 98.22823079427083
patch: Plane / return false ;
rank: 608
score: 98.11300223214286
patch: return 0 ; ; ; ;
rank: 608
score: 98.00651041666667
patch: return true & true ;
rank: 609
score: 98.85951861213235
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) == ch ;
rank: 609
score: 98.62831115722656
patch: return ( search CaMeL Chars [ j
rank: 609
score: 98.51212310791016
patch: return search CaMeL Length > 0 ;
rank: 609
score: 98.50503200954861
patch: c = ; return true ; } }
rank: 609
score: 98.48072645399306
patch: return true ; } if true * /
rank: 609
score: 98.46118927001953
patch: CaMeL Enum . true return true ;
rank: 609
score: 98.44403839111328
patch: return ch != null == ch ;
rank: 609
score: 98.11194719587054
patch: return equals ( true ) ;
rank: 609
score: 98.00532836914063
patch: of return true ;
rank: 610
score: 98.62566266741071
patch: return contains ( ch ) ;
rank: 610
score: 98.50318060980902
patch: if ( true ) break ; } ;
rank: 610
score: 98.48027886284723
patch: return true ; true } return false ;
rank: 610
score: 98.46102469308036
patch: CaMeL Object true return true ;
rank: 610
score: 98.22545369466145
patch: ; return false ; }
rank: 610
score: 98.11076136997768
patch: return 0 . != true ;
rank: 610
score: 98.0051778157552
patch: f = return true ;
rank: 611
score: 98.8594280740489
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , search CaMeL Chars ) ;
rank: 611
score: 98.50113254123264
patch: CaMeL ; return true ; } } }
rank: 611
score: 98.48014322916667
patch: return true ; } if ( false ;
rank: 611
score: 98.46102142333984
patch: CaMeL Process . return ( true ;
rank: 611
score: 98.44241333007812
patch: try { return ch != ch ;
rank: 611
score: 98.2253926595052
patch: return { return true ;
rank: 611
score: 98.10707310267857
patch: return $NUMBER$ ; return null ;
rank: 611
score: 98.0035909016927
patch: return i == true ;
rank: 612
score: 98.85921630859374
patch: return is CaMeL Empty ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 612
score: 98.61886935763889
patch: return contains ( ch , ch ) ;
rank: 612
score: 98.50090874565973
patch: state = true ; return true ; }
rank: 612
score: 98.21969604492188
patch: return true ; System .
rank: 612
score: 98.10525948660714
patch: ( ) ; return true ;
rank: 612
score: 98.00356038411458
patch: &= true ; break ;
rank: 613
score: 98.85879516601562
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( null ) ;
rank: 613
score: 98.50071885850694
patch: world = true ; return true ; }
rank: 613
score: 98.4791259765625
patch: return true ; } else ;
rank: 613
score: 98.46031188964844
patch: return new is ( return ) ;
rank: 613
score: 98.44141387939453
patch: return Array CaMeL Utils . contains CaMeL
rank: 613
score: 98.21851603190105
patch: return { return false ;
rank: 613
score: 98.10517229352679
patch: CaMeL ! ( true ) ;
rank: 613
score: 98.00184122721355
patch: &= true || true ;
rank: 614
score: 98.85865420386905
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , 0 ) ;
rank: 614
score: 98.61289978027344
patch: return search CaMeL Chars [ j )
rank: 614
score: 98.50594075520833
patch: result return true ; }
rank: 614
score: 98.46029663085938
patch: CaMeL Category . true return false ;
rank: 614
score: 98.4389877319336
patch: return cs != true . false ;
rank: 614
score: 98.21728515625
patch: return ! ! false ;
rank: 614
score: 98.10501534598214
patch: CaMeL do ; return true ;
rank: 614
score: 98.00060017903645
patch: = this ; break ;
rank: 615
score: 98.85844116210937
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . append ( ch ) ;
rank: 615
score: 98.61161973741319
patch: return search CaMeL Chars [ search CaMeL Length
rank: 615
score: 98.49962022569444
patch: packet = true ; return true ; }
rank: 615
score: 98.47842746310764
patch: CaMeL Builder . return true ; } else
rank: 615
score: 98.21640014648438
patch: return $NUMBER$ . true ;
rank: 615
score: 98.10381469726562
patch: return return ) ;
rank: 615
score: 97.9999287923177
patch: renderer = return true ;
rank: 616
score: 98.85834703947368
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( ) ;
rank: 616
score: 98.49919976128473
patch: return false ; } } if ( ;
rank: 616
score: 98.4783935546875
patch: return this . true ; } }
rank: 616
score: 98.46012115478516
patch: CaMeL Range return return return true ;
rank: 616
score: 98.43646240234375
patch: return ch == cs ;
rank: 616
score: 98.10304478236607
patch: CaMeL char ( true ) ;
rank: 616
score: 97.99983723958333
patch: * / break ; }
rank: 617
score: 98.85819868607955
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , cs ) ;
rank: 617
score: 98.49904378255208
patch: client = true ; return true ; }
rank: 617
score: 98.4582290649414
patch: CaMeL List != true return true ;
rank: 617
score: 98.43638392857143
patch: return false ? return true ;
rank: 617
score: 98.21207682291667
patch: Plane / return true ;
rank: 617
score: 98.10017613002232
patch: return 0 && return true ;
rank: 617
score: 97.9998067220052
patch: CaMeL true return false ;
rank: 618
score: 98.85802691915761
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars . to CaMeL Object ( ) ) ;
rank: 618
score: 98.60354614257812
patch: return search CaMeL Chars [
rank: 618
score: 98.49803331163194
patch: return false ? true : true ; }
rank: 618
score: 98.4780044555664
patch: return ! true ; break ; }
rank: 618
score: 98.45783996582031
patch: CaMeL Error true return false ; }
rank: 618
score: 98.43193054199219
patch: return search CaMeL Chars [ i ]
rank: 618
score: 98.09965006510417
patch: return 0 ; return ;
rank: 618
score: 97.99346923828125
patch: CaMeL ; * /
rank: 619
score: 98.85797674005681
patch: return search CaMeL Chars [ j ] instanceof String ;
rank: 619
score: 98.4990005493164
patch: return ( ch == false ) ;
rank: 619
score: 98.49794514973958
patch: return true ; else break ; } }
rank: 619
score: 98.47749159071181
patch: return false ; ; } return false ;
rank: 619
score: 98.21075439453125
patch: throw null ;
rank: 619
score: 98.09834507533482
patch: return size != 0 ; ;
rank: 619
score: 97.9929911295573
patch: $NUMBER$ ; return false ;
rank: 620
score: 98.85791015625
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . starts CaMeL With ( ch ) ;
rank: 620
score: 98.42179361979167
patch: return cs == ch ;
rank: 620
score: 98.20878092447917
patch: CaMeL Object return false ;
rank: 620
score: 98.09744698660714
patch: return ; = ; return ;
rank: 621
score: 98.85755004882813
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars ) ; }
rank: 621
score: 98.47549438476562
patch: return null ; } } else {
rank: 621
score: 98.45680236816406
patch: CaMeL List . equals return true ;
rank: 621
score: 98.207763671875
patch: return ) return true ;
rank: 621
score: 98.09696451822917
patch: CaMeL List ( ) .
rank: 621
score: 97.99127197265625
patch: * return true ; }
rank: 622
score: 98.85741024925595
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL Sealed ( ) ;
rank: 622
score: 98.47493489583333
patch: return true true ; } return false ;
rank: 622
score: 98.45657348632812
patch: CaMeL Process . true return true ;
rank: 622
score: 98.41436767578125
patch: return null ? return true ;
rank: 622
score: 98.20733642578125
patch: return true && false ;
rank: 622
score: 98.09401448567708
patch: return ; return ; /
rank: 622
score: 97.98971557617188
patch: state = true ;
rank: 623
score: 98.85702694163604
patch: return ch . equals ( cs . char CaMeL At ( j ) ) ; }
rank: 623
score: 98.59162902832031
patch: return ch != null - 1 ;
rank: 623
score: 98.49010358537946
patch: ? return true ; } }
rank: 623
score: 98.47470431857639
patch: return false ; return false ; } ;
rank: 623
score: 98.45594787597656
patch: CaMeL Exception * ; return true ;
rank: 623
score: 98.20404052734375
patch: throw null ; } }
rank: 623
score: 98.09139578683036
patch: CaMeL += ) ; return ;
rank: 623
score: 97.9896240234375
patch: . equals ( true ;
rank: 624
score: 98.58932931082589
patch: contains CaMeL Any return false ;
rank: 624
score: 98.48695591517857
patch: p = ; break ; }
rank: 624
score: 98.47458224826389
patch: return true ; } for ; * /
rank: 624
score: 98.41099330357143
patch: return true && ! true ;
rank: 624
score: 98.20380859375
patch: ! return true ;
rank: 624
score: 98.09014892578125
patch: return Math ; return true ;
rank: 624
score: 97.98662719726562
patch: the return true ;
rank: 625
score: 98.85673191236413
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL Upper CaMeL Case ( ) ;
rank: 625
score: 98.47811889648438
patch: return ! ;
rank: 625
score: 98.09000069754464
patch: CaMeL do = true ; true
rank: 625
score: 97.98382568359375
patch: ? return false ; }
rank: 626
score: 98.8564685639881
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) . to CaMeL Object ( ) ;
rank: 626
score: 98.47405133928571
patch: return return null ; } }
rank: 626
score: 98.4556655883789
patch: return new true ; return null ;
rank: 626
score: 98.19785563151042
patch: Plane throw true ; }
rank: 626
score: 98.08921595982143
patch: return ; return ; return ;
rank: 626
score: 97.98286946614583
patch: . value = true ;
rank: 627
score: 98.85642311789773
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , search CaMeL Chars [ j ] , ch ) ;
rank: 627
score: 98.47584533691406
patch: return cs . return true ; }
rank: 627
score: 98.47336832682292
patch: return true ; } if return null ;
rank: 627
score: 98.45561218261719
patch: CaMeL Error ; return true ; }
rank: 627
score: 98.08901541573661
patch: return return ) ; break ;
rank: 627
score: 97.98142700195312
patch: meta = true ;
rank: 628
score: 98.58449096679688
patch: true return true ;
rank: 628
score: 98.47552490234375
patch: 16 . return true ; }
rank: 628
score: 98.47280544704861
patch: return ; * * / return true ;
rank: 628
score: 98.19378662109375
patch: Plane this return true ;
rank: 628
score: 98.08878580729167
patch: return - ) ; ;
rank: 628
score: 97.9808349609375
patch: return Boolean . FALSE ;
rank: 629
score: 98.85606166294643
patch: return search CaMeL Chars [ j ] . equals ( cs . char CaMeL At ( i ) ) ;
rank: 629
score: 98.47501918247768
patch: c = ; break ; }
rank: 629
score: 98.4739761352539
patch: return cs ;
rank: 629
score: 98.47259521484375
patch: return false ; if ; return false ;
rank: 629
score: 98.4554214477539
patch: CaMeL List != null || true ;
rank: 629
score: 98.38797433035714
patch: return ! ch == ch ;
rank: 629
score: 98.08877999441964
patch: return false ; return name ;
rank: 629
score: 97.97664388020833
patch: &= this . true ;
rank: 630
score: 98.85567016601563
patch: return search CaMeL Chars [ j ] . substring ( search CaMeL Chars . length . length ) ;
rank: 630
score: 98.47484479631696
patch: CaMeL Character . return true ;
rank: 630
score: 98.47251674107143
patch: return ( true ; } }
rank: 630
score: 98.47115071614583
patch: return false ; } return false ; ;
rank: 630
score: 98.45502471923828
patch: CaMeL List true return null ; }
rank: 630
score: 98.38589041573661
patch: try { ch = true ;
rank: 630
score: 98.18815104166667
patch: return [ j ] ;
rank: 630
score: 97.97566528320313
patch: $NUMBER$ return false ;
rank: 631
score: 98.85558551290761
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 631
score: 98.47333635602679
patch: g = true ; break ;
rank: 631
score: 98.4710693359375
patch: return return is return true ;
rank: 631
score: 98.45428466796875
patch: CaMeL Error ( ; return true ;
rank: 631
score: 98.38333129882812
patch: return ch != false ;
rank: 631
score: 98.08830915178571
patch: return == ) ; return ;
rank: 631
score: 97.97213745117188
patch: ( true , false )
rank: 632
score: 98.4710693359375
patch: return true ; } return ( true ;
rank: 632
score: 98.46763305664062
patch: return ! return ;
rank: 632
score: 98.45296478271484
patch: return false ; return false ; {
rank: 632
score: 98.17760213216145
patch: Plane this return false ;
rank: 632
score: 98.08805629185268
patch: return this ; return true ;
rank: 632
score: 97.9695332845052
patch: if ( true ) ;
rank: 633
score: 98.5787124633789
patch: return ( ch boolean ) true ;
rank: 633
score: 98.47031656901042
patch: return true ; } / * * ;
rank: 633
score: 98.45281982421875
patch: CaMeL Null ( return true ) ;
rank: 633
score: 98.0878397623698
patch: return length != true ;
rank: 633
score: 97.96905517578125
patch: ret = true ;
rank: 634
score: 98.85507347470238
patch: return search CaMeL Chars [ j ] . get CaMeL Field ( ) . contains CaMeL Any ( ) ;
rank: 634
score: 98.46919080946181
patch: return false ; } else if ; }
rank: 634
score: 98.46518961588542
patch: return ; } ; }
rank: 634
score: 98.46265869140625
patch: this return true ;
rank: 634
score: 98.45234898158482
patch: CaMeL Range ; return null ;
rank: 634
score: 98.36945452008929
patch: return false ? return false ;
rank: 634
score: 98.17586263020833
patch: ch return true ; }
rank: 634
score: 98.08734130859375
patch: return return ) ; ;
rank: 634
score: 97.96896362304688
patch: . return ( ; }
rank: 635
score: 98.8548251065341
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] . trim ( ) ) ;
rank: 635
score: 98.46909877232143
patch: return true ; break ; ;
rank: 635
score: 98.46070207868304
patch: CaMeL ; if ( true ;
rank: 635
score: 98.460205078125
patch: this return true ; }
rank: 635
score: 98.45232391357422
patch: CaMeL Exception true return null ; }
rank: 635
score: 98.36717006138393
patch: } else { return true ;
rank: 635
score: 98.17570190429687
patch: Plane throw true ;
rank: 635
score: 98.08502197265625
patch: CaMeL do . add true ;
rank: 635
score: 97.965234375
patch: b = true ;
rank: 636
score: 98.85463169642857
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) . to CaMeL Object ( ) ;
rank: 636
score: 98.46885463169643
patch: return return true ; } else
rank: 636
score: 98.46034545898438
patch: return ! ; }
rank: 636
score: 98.45863850911458
patch: result = true ; }
rank: 636
score: 98.45133209228516
patch: return false ; return true ; true
rank: 636
score: 98.36690848214286
patch: return true ? ! true ;
rank: 636
score: 98.17471313476562
patch: CaMeL ] return true ;
rank: 636
score: 98.08466448102679
patch: CaMeL ~ ( true ) ;
rank: 636
score: 97.9622090657552
patch: : return true ; }
rank: 637
score: 98.85452706473214
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , ) ;
rank: 637
score: 98.46778021918402
patch: return true ; } else return null ;
rank: 637
score: 98.45844377790179
patch: return return true ; ; }
rank: 637
score: 98.45068359375
patch: return this ; return null ; ;
rank: 637
score: 98.3619384765625
patch: return true && return false ;
rank: 637
score: 98.17401123046875
patch: this return false ; }
rank: 637
score: 98.0843505859375
patch: return - && return true ;
rank: 637
score: 97.9605712890625
patch: in return true ;
rank: 638
score: 98.46729871961806
patch: return true ; } finally return false ;
rank: 638
score: 98.45757184709821
patch: 1 . return true ; }
rank: 638
score: 98.4562744140625
patch: return ch ; }
rank: 638
score: 98.17368570963542
patch: ch return false ; }
rank: 638
score: 98.08054896763393
patch: return is ( false ) ;
rank: 638
score: 97.96051025390625
patch: CaMeL return null ; }
rank: 639
score: 98.8545166015625
patch: return contains CaMeL Any ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 639
score: 98.56866455078125
patch: return ch == true . false ;
rank: 639
score: 98.45526123046875
patch: return ( } ) ;
rank: 639
score: 98.4482421875
patch: return new is true || true ;
rank: 639
score: 98.35671561104911
patch: return false && return true ;
rank: 639
score: 98.1729736328125
patch: CaMeL Number return false ;
rank: 639
score: 98.08054896763393
patch: return TRUE ; return true ;
rank: 639
score: 97.95783081054688
patch: CaMeL return null ;
rank: 640
score: 98.85438755580357
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . to CaMeL Object ( ) ;
rank: 640
score: 98.46633475167411
patch: return ; ? return false ;
rank: 640
score: 98.45464215959821
patch: f = ; return true ;
rank: 640
score: 98.45356096540179
patch: if ( ch == $STRING$ )
rank: 640
score: 98.44775390625
patch: CaMeL String = true ;
rank: 640
score: 98.1630147298177
patch: return false - false ;
rank: 640
score: 98.08019147600446
patch: return 0 , return true ;
rank: 641
score: 98.85418231670673
patch: return search CaMeL Chars [ j ] == null . $STRING$ ;
rank: 641
score: 98.55587005615234
patch: return cs . close ( ) ;
rank: 641
score: 98.46517605251736
patch: return true ; } if return $NUMBER$ ;
rank: 641
score: 98.45291137695312
patch: return ( cs != null ) ;
rank: 641
score: 98.44770812988281
patch: return true ; ; ; ; ;
rank: 641
score: 98.3544921875
patch: return ch != true ;
rank: 641
score: 98.0789794921875
patch: return - $NUMBER$ ; break ;
rank: 641
score: 97.95405883789063
patch: = return true ;
rank: 642
score: 98.85399712456598
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( cs CaMeL Length ) ;
rank: 642
score: 98.46439615885417
patch: return true ; * * * * /
rank: 642
score: 98.45362200055804
patch: return true ; * / ;
rank: 642
score: 98.447509765625
patch: return this . true ; true ;
rank: 642
score: 98.3534444173177
patch: return true : false ;
rank: 642
score: 98.16189575195312
patch: CaMeL ] return false ;
rank: 642
score: 98.07837785993304
patch: CaMeL return ( true ; ;
rank: 642
score: 97.9534683227539
patch: &= true ;
rank: 643
score: 98.85395893297698
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ) ;
rank: 643
score: 98.55176544189453
patch: return ch != null . false ;
rank: 643
score: 98.46334499782986
patch: return false ; } } if false ;
rank: 643
score: 98.45293317522321
patch: b = ; return true ;
rank: 643
score: 98.44684709821429
patch: CaMeL Exception return return true ;
rank: 643
score: 98.07820347377232
patch: return 0 ; break ; ;
rank: 643
score: 97.95094807942708
patch: . switch ( ch )
rank: 644
score: 98.85389468544408
patch: return search CaMeL Chars [ j ] . substring ( search CaMeL Chars . length 1 ) ;
rank: 644
score: 98.44949340820312
patch: return is . false ;
rank: 644
score: 98.44598388671875
patch: CaMeL Exception true true return true ;
rank: 644
score: 98.07742745535714
patch: CaMeL return ( ) ; ;
rank: 644
score: 97.949365234375
patch: ? return false ;
rank: 645
score: 98.85350399925595
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL False ( ) ;
rank: 645
score: 98.54730224609375
patch: return ch . close ( ) ;
rank: 645
score: 98.46211751302083
patch: return ; ? return false ; } }
rank: 645
score: 98.4457015991211
patch: CaMeL Range . return true ; }
rank: 645
score: 98.35035923549107
patch: return ( byte ) true ;
rank: 645
score: 98.1433614095052
patch: return true - false ;
rank: 645
score: 98.07726178850446
patch: return ; return true ; ;
rank: 645
score: 97.94284057617188
patch: return true ; } true
rank: 646
score: 98.8531494140625
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Length ) ;
rank: 646
score: 98.54704284667969
patch: return ch == ch . true ;
rank: 646
score: 98.46202256944444
patch: return ; * * * return false ;
rank: 646
score: 98.4482650756836
patch: if ( ch != $STRING$ ) {
rank: 646
score: 98.44539097377232
patch: CaMeL Error ; return true ;
rank: 646
score: 98.34904261997768
patch: return search CaMeL Chars ) ;
rank: 646
score: 98.07679239908855
patch: return return true ; ;
rank: 646
score: 97.94259643554688
patch: CaMeL char = true ;
rank: 647
score: 98.85302734375
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Instance ( ) ;
rank: 647
score: 98.45186070033482
patch: return true ; } / ;
rank: 647
score: 98.44514465332031
patch: CaMeL List [ ; return true ;
rank: 647
score: 98.44435337611607
patch: g = ; return true ;
rank: 647
score: 98.34857177734375
patch: return false || true ;
rank: 647
score: 97.94247436523438
patch: if ; return true ;
rank: 648
score: 98.85277210582386
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , true ) ;
rank: 648
score: 98.44987269810268
patch: return null ; } else {
rank: 648
score: 98.44514973958333
patch: return return ! true ;
rank: 648
score: 98.4449691772461
patch: CaMeL Builder . return true ; ;
rank: 648
score: 98.3473612467448
patch: return false : true ;
rank: 648
score: 98.13743286132812
patch: return this ; }
rank: 648
score: 98.07454427083333
patch: return 0 return true ;
rank: 648
score: 97.9420674641927
patch: default return true ; }
rank: 649
score: 98.53575134277344
patch: return ( ch boolean ) false ;
rank: 649
score: 98.44938441685268
patch: return ; ; } * /
rank: 649
score: 98.44485037667411
patch: if ( ch == null )
rank: 649
score: 98.44412231445312
patch: CaMeL Range = return true ; ;
rank: 649
score: 98.1347900390625
patch: return 0 ; }
rank: 649
score: 98.07407924107143
patch: CaMeL ch ( true ) ;
rank: 649
score: 97.93936157226562
patch: \ return true ; }
rank: 650
score: 98.53289031982422
patch: return ch == search CaMeL Chars ;
rank: 650
score: 98.44921875
patch: . set ; return true ;
rank: 650
score: 98.44381713867188
patch: return true ; true * * /
rank: 650
score: 98.44111851283482
patch: a ; return true ; }
rank: 650
score: 98.13294474283855
patch: return * * * /
rank: 650
score: 98.07185581752232
patch: CaMeL do . return false ;
rank: 650
score: 97.93904622395833
patch: = true : true ;
rank: 651
score: 98.85226922286184
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars , i ) ;
rank: 651
score: 98.44651576450893
patch: return is true return true ;
rank: 651
score: 98.44346618652344
patch: return this . return null ; ;
rank: 651
score: 98.4402567545573
patch: t return true ; }
rank: 651
score: 98.43627057756696
patch: z = true ; break ;
rank: 651
score: 98.334228515625
patch: return false && ! true ;
rank: 651
score: 98.12974853515625
patch: true return false ;
rank: 651
score: 98.07120186941964
patch: return is , return 1 ;
rank: 651
score: 97.93759155273438
patch: def = return true ;
rank: 652
score: 98.85224066840277
patch: return contains CaMeL Any ( cs . char CaMeL At ( j ) == ch ) ;
rank: 652
score: 98.52622985839844
patch: return ch == true . true ;
rank: 652
score: 98.44283294677734
patch: CaMeL List . j return true ;
rank: 652
score: 98.32881382533482
patch: return true || return true ;
rank: 652
score: 98.07064819335938
patch: return size == true ;
rank: 652
score: 97.93731689453125
patch: return true ; case ;
rank: 653
score: 98.85201590401786
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . get CaMeL Value ( ) ;
rank: 653
score: 98.44617571149554
patch: return is CaMeL Empty ) ;
rank: 653
score: 98.44261169433594
patch: return true ; return null ; current
rank: 653
score: 98.43527657645089
patch: switch ( ch ) { }
rank: 653
score: 98.32750447591145
patch: return null && true ;
rank: 653
score: 98.12389119466145
patch: cs return true ; }
rank: 653
score: 98.069580078125
patch: CaMeL Object ( true ) ;
rank: 653
score: 97.93628946940105
patch: CaMeL return ( true ;
rank: 654
score: 98.85192340353261
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars [ j ] ) ;
rank: 654
score: 98.44601004464286
patch: return return $NUMBER$ ; } }
rank: 654
score: 98.44186401367188
patch: ( this ) ; return false ;
rank: 654
score: 98.43311418805804
patch: return ( ch == ) ;
rank: 654
score: 98.43250383649554
patch: return true || true ; }
rank: 654
score: 98.06943184988839
patch: return false + true ; ;
rank: 654
score: 97.93277994791667
patch: final return true ; }
rank: 655
score: 98.85166015625
patch: return Array CaMeL Utils . contains ( cs , cs . char CaMeL At ( i ) ) ;
rank: 655
score: 98.51575469970703
patch: return ch == ch . false ;
rank: 655
score: 98.44035993303571
patch: CaMeL Range return true true ;
rank: 655
score: 98.43024553571429
patch: return is . false ; }
rank: 655
score: 98.32421875
patch: if ( ) return true ;
rank: 655
score: 98.12174479166667
patch: return - true ; }
rank: 655
score: 98.06926618303571
patch: CaMeL List ( ) . true
rank: 655
score: 97.93045043945312
patch: $NUMBER$ . ? * /
rank: 656
score: 98.85154371995192
patch: return ! search CaMeL Chars [ j ] . length ++ ;
rank: 656
score: 98.43179757254464
patch: ? * return true ; }
rank: 656
score: 98.42740478515626
patch: else return true ;
rank: 656
score: 98.32187325613839
patch: if ( search CaMeL Chars [
rank: 656
score: 98.06883893694196
patch: return return && return true ;
rank: 656
score: 97.92990112304688
patch: = true , break ;
rank: 657
score: 98.85154030539773
patch: return Array CaMeL Utils . contains ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 657
score: 98.44061889648438
patch: return is true ;
rank: 657
score: 98.43783133370536
patch: CaMeL -- ; return true ;
rank: 657
score: 98.43101283482143
patch: . return true true ; }
rank: 657
score: 98.42381940569196
patch: return ch . true ; }
rank: 657
score: 98.32150268554688
patch: return cs != false ;
rank: 657
score: 98.1149190266927
patch: cs return false ; }
rank: 657
score: 98.06729561941964
patch: return return $NUMBER$ ; break ;
rank: 657
score: 97.92922973632812
patch: |= true ; break ;
rank: 658
score: 98.44043840680804
patch: return return true ; } ;
rank: 658
score: 98.43040248325893
patch: p = ; return false ;
rank: 658
score: 98.32027762276786
patch: return ! ch != ch ;
rank: 658
score: 98.11362711588542
patch: return cs CaMeL Length ;
rank: 658
score: 98.0672098795573
patch: return ; return $NUMBER$ ;
rank: 658
score: 97.92783610026042
patch: is true = false ;
rank: 659
score: 98.85118519176136
patch: return Array CaMeL Utils . equals ( search CaMeL Chars , search CaMeL Chars . get ( j ) ) ;
rank: 659
score: 98.43221028645833
patch: CaMeL String return true ;
rank: 659
score: 98.42030843098958
patch: return ch ; } }
rank: 659
score: 98.29336111886161
patch: return ch == ch ) ;
rank: 659
score: 98.11306762695312
patch: return is == false ;
rank: 659
score: 98.06720842633929
patch: return true ; return ; /
rank: 659
score: 97.92725626627605
patch: CaMeL j = true ;
rank: 660
score: 98.85106312144886
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , true ) ;
rank: 660
score: 98.43924386160714
patch: return null ; } * /
rank: 660
score: 98.42827497209821
patch: CaMeL Error true return false ;
rank: 660
score: 98.42591203962054
patch: ? ; return true ; }
rank: 660
score: 98.42027936662946
patch: break . return true ; }
rank: 660
score: 98.1118876139323
patch: ) return false ; }
rank: 660
score: 98.06348528180804
patch: return false . return 1 ;
rank: 660
score: 97.92681884765625
patch: CaMeL ; break true ;
rank: 661
score: 98.85093470982143
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Name ( ) ;
rank: 661
score: 98.42449951171875
patch: s ; return true ; }
rank: 661
score: 98.11103057861328
patch: return this ;
rank: 661
score: 98.06266566685268
patch: CaMeL ch . return true ;
rank: 661
score: 97.92394002278645
patch: ( true , false ;
rank: 662
score: 98.8505328634511
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) . is CaMeL Not CaMeL Empty ( ) ;
rank: 662
score: 98.49947357177734
patch: Plane = false ; return false ;
rank: 662
score: 98.4359130859375
patch: return false ; } catch ;
rank: 662
score: 98.42584228515625
patch: CaMeL Exception = true ; }
rank: 662
score: 98.2731424967448
patch: return this == ch ;
rank: 662
score: 98.10828653971355
patch: return search CaMeL Length ;
rank: 662
score: 97.92305501302083
patch: CaMeL decode = true ;
rank: 663
score: 98.42169189453125
patch: return true true ; ; }
rank: 663
score: 98.27139718191964
patch: return ch == ch ; }
rank: 663
score: 98.10452270507812
patch: return false ; / /
rank: 663
score: 98.05785260881696
patch: return != ) ; true ;
rank: 663
score: 97.92277018229167
patch: of return true ; }
rank: 664
score: 98.85039605034723
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( cs , cs ) ;
rank: 664
score: 98.43376813616071
patch: . . . return true ;
rank: 664
score: 98.42403738839286
patch: CaMeL Class ( true ) ;
rank: 664
score: 98.41986083984375
patch: return ! ; } }
rank: 664
score: 98.26971435546875
patch: return cs != true ;
rank: 664
score: 98.10362548828125
patch: cs = true ;
rank: 664
score: 98.05729457310268
patch: return ; { true ; ;
rank: 664
score: 97.922216796875
patch: . equals ( ;
rank: 665
score: 98.84969075520833
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) ) ) ;
rank: 665
score: 98.40372721354167
patch: return ch . true ;
rank: 665
score: 98.10098266601562
patch: return this ; } }
rank: 665
score: 98.05718122209821
patch: return ! ) ; true ;
rank: 666
score: 98.84941270616319
patch: return ( ! search CaMeL Chars [ j ] . is CaMeL Empty ( ) ) ;
rank: 666
score: 98.49369812011719
patch: return ch != true + ch ;
rank: 666
score: 98.4232421875
patch: return false ; true
rank: 666
score: 98.26527622767857
patch: return ! ch != null ;
rank: 666
score: 98.05703735351562
patch: return 0 || true ;
rank: 666
score: 97.92149861653645
patch: . synchronized ( this )
rank: 667
score: 98.8493884858631
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars . char CaMeL At ( j ) ,
rank: 667
score: 98.49090576171875
patch: return search CaMeL Length 1 ++ ;
rank: 667
score: 98.42183140345982
patch: CaMeL String true return null ;
rank: 667
score: 98.41769845145089
patch: return ; ? return true ;
rank: 667
score: 98.4020263671875
patch: t return true ;
rank: 667
score: 98.26304117838542
patch: return ch == null ;
rank: 667
score: 98.09998575846355
patch: CaMeL Class return false ;
rank: 667
score: 98.05667114257812
patch: return return != true ;
rank: 667
score: 97.921044921875
patch: cached = true ;
rank: 668
score: 98.49039459228516
patch: Plane = false ; return true ;
rank: 668
score: 98.41761125837054
patch: CaMeL Error return false ; }
rank: 668
score: 98.26204136439732
patch: return ch != null ; }
rank: 668
score: 98.09906005859375
patch: return false ; continue ;
rank: 668
score: 98.05476597377232
patch: return 1 ; return $NUMBER$ ;
rank: 668
score: 97.91921997070312
patch: c = true ? ;
rank: 669
score: 98.84910278320312
patch: return is CaMeL Empty ( cs , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 669
score: 98.48854064941406
patch: return ch != false + ch ;
rank: 669
score: 98.42159598214286
patch: CaMeL Exception ; return null ;
rank: 669
score: 98.41612897600446
patch: return ; * return true ;
rank: 669
score: 98.41209193638393
patch: s = ; return true ;
rank: 669
score: 98.40130615234375
patch: return contains CaMeL Any ;
rank: 669
score: 98.26200648716518
patch: return ( search CaMeL Chars [
rank: 669
score: 98.05150495256696
patch: return ! != true ; ;
rank: 669
score: 97.91648559570312
patch: so return true ;
rank: 670
score: 98.84853644120066
patch: return search CaMeL Chars [ j ] . contains ( search CaMeL Chars [ i ] ) ;
rank: 670
score: 98.48464965820312
patch: return true } } return false ;
rank: 670
score: 98.42104666573661
patch: return this ; return null ;
rank: 670
score: 98.41441127232143
patch: return true ; true * /
rank: 670
score: 98.41205705915179
patch: ( ; return true ; }
rank: 670
score: 98.40095738002232
patch: return cs . return true ;
rank: 670
score: 98.05095563616071
patch: return - 1 ; return ;
rank: 670
score: 97.91494750976562
patch: CaMeL return ( ; }
rank: 671
score: 98.84852666440217
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( cs . char CaMeL At ( i ) ) ;
rank: 671
score: 98.48441314697266
patch: return ch != false - 1 ;
rank: 671
score: 98.42018345424107
patch: CaMeL Class true return true ;
rank: 671
score: 98.4129638671875
patch: return null ; } return ;
rank: 671
score: 98.39971923828125
patch: return cs ; }
rank: 671
score: 98.25834147135417
patch: return ch > false ;
rank: 671
score: 98.09632568359375
patch: return - true ;
rank: 671
score: 97.91492919921875
patch: = true ; }
rank: 672
score: 98.84847219366776
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) . get ( ) ;
rank: 672
score: 98.4181416829427
patch: CaMeL Boolean return true ;
rank: 672
score: 98.25546264648438
patch: return ch != 0 ;
rank: 672
score: 98.04898507254464
patch: return return ) ; true ;
rank: 672
score: 97.91364135742188
patch: model = true ;
rank: 673
score: 98.84845842633929
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . contains CaMeL Any ( ) ;
rank: 673
score: 98.41135951450893
patch: CaMeL Exception = true ; ;
rank: 673
score: 98.41114153180804
patch: return ; * * * ;
rank: 673
score: 98.40751429966518
patch: c = ; return false ;
rank: 673
score: 98.0924784342448
patch: Plane . return true ;
rank: 673
score: 97.91240234375
patch: tree = true ;
rank: 674
score: 98.84829477163461
patch: return search CaMeL Chars [ j ] == ch . false ;
rank: 674
score: 98.41083635602679
patch: return new && true ; ;
rank: 674
score: 98.40958077566964
patch: return return || true ; }
rank: 674
score: 98.09194946289062
patch: ret = false ;
rank: 674
score: 98.04757690429688
patch: return $NUMBER$ + true ;
rank: 674
score: 97.91124471028645
patch: . is CaMeL Empty ;
rank: 675
score: 98.84766787574405
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , cs , search CaMeL Chars ) ;
rank: 675
score: 98.4814224243164
patch: return ( cs == cs ) ;
rank: 675
score: 98.40925816127232
patch: CaMeL return [ i ] ;
rank: 675
score: 98.40885707310268
patch: CaMeL Object . return true ;
rank: 675
score: 98.39352852957589
patch: if ( return true ) {
rank: 675
score: 98.09116617838542
patch: return ( return true ;
rank: 675
score: 98.04621233258929
patch: ( false != true ) ;
rank: 675
score: 97.90939331054688
patch: return false true ;
rank: 676
score: 98.84759842722039
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars , j ) ;
rank: 676
score: 98.4792709350586
patch: return ch != true - 1 ;
rank: 676
score: 98.407470703125
patch: CaMeL Number true = true ;
rank: 676
score: 98.40653773716518
patch: return ; * return false ;
rank: 676
score: 98.39272635323661
patch: b . return true ; }
rank: 676
score: 98.08982340494792
patch: return false || false ;
rank: 676
score: 98.04471261160714
patch: return false ; if true ;
rank: 677
score: 98.84745861235119
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . is CaMeL True ( ) ;
rank: 677
score: 98.47809600830078
patch: return ch == search CaMeL Length ;
rank: 677
score: 98.40716552734375
patch: CaMeL Object = true ;
rank: 677
score: 98.398193359375
patch: return true true ; } ;
rank: 677
score: 98.241943359375
patch: return ch > true ;
rank: 677
score: 98.08892822265625
patch: Plane . return false ;
rank: 677
score: 98.04388427734375
patch: return false ; return return ;
rank: 678
score: 98.84693492542614
patch: return Array CaMeL Utils . contains CaMeL Any ( ch , cs . char CaMeL At ( i ) ) ;
rank: 678
score: 98.40424455915179
patch: return return $NUMBER$ & true ;
rank: 678
score: 98.39705984933036
patch: ch = true ; break ;
rank: 678
score: 98.08754475911458
patch: return true ? true ;
rank: 678
score: 98.04290771484375
patch: return false ; return start ;
rank: 678
score: 97.90672810872395
patch: CaMeL ; return ; }
rank: 679
score: 98.8467129794034
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , null ) ;
rank: 679
score: 98.47576141357422
patch: return this . search CaMeL Chars ;
rank: 679
score: 98.40499877929688
patch: CaMeL value return true ;
rank: 679
score: 98.39685930524554
patch: return true ; count ++ ;
rank: 679
score: 98.23369140625
patch: ret return true ;
rank: 679
score: 98.08723958333333
patch: return false - true ;
rank: 679
score: 98.04188755580357
patch: CaMeL ch = true ; true
rank: 679
score: 97.90474243164063
patch: server = true ;
rank: 680
score: 98.84660034179687
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . equals ( $STRING$ ) ;
rank: 680
score: 98.40495954241071
patch: CaMeL Range return true ; }
rank: 680
score: 98.40106201171875
patch: return ; } } if ;
rank: 680
score: 98.23223876953125
patch: return is = true ;
rank: 680
score: 98.04142543247768
patch: CaMeL try . return true ;
rank: 680
score: 97.90374755859375
patch: . while ( true )
rank: 681
score: 98.84639892578124
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . equals ( $STRING$ ) ;
rank: 681
score: 98.47087860107422
patch: return cs CaMeL Length > 0 ;
rank: 681
score: 98.40079171316964
patch: CaMeL Category . return true ;
rank: 681
score: 98.39215087890625
patch: return ! is ; }
rank: 681
score: 98.22902425130208
patch: return null || true ;
rank: 681
score: 98.0847676595052
patch: return false ? true ;
rank: 681
score: 98.04139055524554
patch: CaMeL ! ( return ) ;
rank: 681
score: 97.90291341145833
patch: is return false ; }
rank: 682
score: 98.84633091517857
patch: return Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars , j ) ;
rank: 682
score: 98.40048653738839
patch: CaMeL Class true return null ;
rank: 682
score: 98.39019775390625
patch: return false true ; }
rank: 682
score: 98.38541085379464
patch: return contains CaMeL Any ; }
rank: 682
score: 98.22438557942708
patch: return false : false ;
rank: 682
score: 98.08369954427083
patch: return return false ; ;
rank: 682
score: 98.03870500837054
patch: return ! true ; ; ;
rank: 683
score: 98.84632457386364
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . contains CaMeL Any ( cs ) ;
rank: 683
score: 98.40034702845982
patch: CaMeL String true return false ;
rank: 683
score: 98.3988037109375
patch: return is ; break ; }
rank: 683
score: 98.3836669921875
patch: return ch = true ;
rank: 683
score: 98.07984415690105
patch: Plane count = true ;
rank: 683
score: 98.03806849888393
patch: return is return != ) ;
rank: 683
score: 97.8970438639323
patch: body return true ; }
rank: 684
score: 98.84619140625
patch: return contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ] ) ) ;
rank: 684
score: 98.40001569475446
patch: CaMeL Exception = return false ;
rank: 684
score: 98.39539591471355
patch: return is CaMeL True ;
rank: 684
score: 98.38885498046875
patch: color = true ; break ;
rank: 684
score: 98.22190551757812
patch: result return false ;
rank: 684
score: 98.07980346679688
patch: return return null ;
rank: 684
score: 98.03746686662946
patch: CaMeL do = return true ;
rank: 684
score: 97.89572143554688
patch: ; return true ;
rank: 685
score: 98.84588623046875
patch: return Array CaMeL Utils . equals ( cs , search CaMeL Chars [ j ] , ch ) ;
rank: 685
score: 98.39503987630208
patch: CaMeL Error return false ;
rank: 685
score: 98.21732584635417
patch: return ch != $NUMBER$ ;
rank: 685
score: 98.0780537923177
patch: return * * true ;
rank: 685
score: 98.03724888392857
patch: return is != true ; ;
rank: 685
score: 97.89542643229167
patch: . equals ( $STRING$ )
rank: 686
score: 98.8458584872159
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) == ch ) ;
rank: 686
score: 98.39801025390625
patch: CaMeL Number return return false ;
rank: 686
score: 98.37736002604167
patch: return cs ; } }
rank: 686
score: 98.21730346679688
patch: return true false ;
rank: 686
score: 98.07676188151042
patch: return ch == true ;
rank: 686
score: 98.03655133928571
patch: return 0 ; ; return ;
rank: 686
score: 97.8948262532552
patch: synchronized ( this ) {
rank: 687
score: 98.84528142755681
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . contains CaMeL Any ( ch ) ;
rank: 687
score: 98.38795689174107
patch: return true ; for true ;
rank: 687
score: 98.38208879743304
patch: m ; return true ; }
rank: 687
score: 98.21139526367188
patch: return true != true ;
rank: 687
score: 98.03592354910714
patch: return $NUMBER$ ; return 0 ;
rank: 687
score: 97.89395751953126
patch: buffer = true ;
rank: 688
score: 98.844677734375
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . equals ( $STRING$ ) ;
rank: 688
score: 98.03572300502232
patch: CaMeL List ( ; true ;
rank: 688
score: 97.893310546875
patch: which return true ; }
rank: 689
score: 98.84445057744566
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ) ;
rank: 689
score: 98.391845703125
patch: CaMeL Thread . return null ;
rank: 689
score: 98.38755289713542
patch: return ; ; } else
rank: 689
score: 98.37481689453125
patch: state return true ; }
rank: 689
score: 98.2058614095052
patch: return cs == cs ;
rank: 689
score: 98.07522583007812
patch: Plane ! throw null ;
rank: 689
score: 98.0350341796875
patch: return next return true ;
rank: 689
score: 97.89225260416667
patch: the return true ; }
rank: 690
score: 98.84408714657738
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Instance ( ) ;
rank: 690
score: 98.3914082845052
patch: return new ! true ;
rank: 690
score: 98.38487897600446
patch: . is return false ; }
rank: 690
score: 98.37538364955357
patch: Tools . return true ; }
rank: 690
score: 98.36797223772321
patch: return ( char ) ch ;
rank: 690
score: 98.03499058314732
patch: CaMeL do ( true ) ;
rank: 690
score: 97.89122314453125
patch: * return true ;
rank: 691
score: 98.84395926339286
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , count ) ;
rank: 691
score: 98.39064243861607
patch: CaMeL Object ; return true ;
rank: 691
score: 98.38435581752232
patch: return null ; } break ;
rank: 691
score: 98.36573282877605
patch: return ch == false ;
rank: 691
score: 98.19618733723958
patch: cs . return true ;
rank: 691
score: 98.0742696126302
patch: static return true ; }
rank: 691
score: 98.03313337053571
patch: CaMeL atan ( true ) ;
rank: 691
score: 97.89025268554687
patch: j = true ;
rank: 692
score: 98.843505859375
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars . length ( ) ;
rank: 692
score: 98.38944789341518
patch: CaMeL Object true return null ;
rank: 692
score: 98.3841552734375
patch: return true ; } finally
rank: 692
score: 98.37404087611607
patch: . * return true ; }
rank: 692
score: 98.19474283854167
patch: return this != ch ;
rank: 692
score: 98.02951485770089
patch: CaMeL ~ ( return ) ;
rank: 692
score: 97.8873779296875
patch: return ~ true ;
rank: 693
score: 98.8434170809659
patch: return search CaMeL Chars [ j ] . get CaMeL Instance ( ) . contains CaMeL Any ( ch ) ;
rank: 693
score: 98.43181501116071
patch: return search CaMeL Length 1 ;
rank: 693
score: 98.37373570033482
patch: that ; return true ; }
rank: 693
score: 98.0731201171875
patch: ch = true ; }
rank: 693
score: 97.885986328125
patch: comp = true ;
rank: 694
score: 98.84315074573864
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) ; }
rank: 694
score: 98.38136509486607
patch: return ; ; break ; }
rank: 694
score: 98.35767473493304
patch: return = true ; } }
rank: 694
score: 98.02793375651042
patch: CaMeL sum = true ;
rank: 694
score: 97.88541259765626
patch: output = true ;
rank: 695
score: 98.8427734375
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . is CaMeL Not CaMeL Empty ( ) ;
rank: 695
score: 98.38620431082589
patch: CaMeL Number ; return false ;
rank: 695
score: 98.37956019810268
patch: return return is CaMeL True ;
rank: 695
score: 98.35743204752605
patch: return cs return true ;
rank: 695
score: 98.18650309244792
patch: return true | true ;
rank: 695
score: 98.02646891276042
patch: return 0 , true ;
rank: 695
score: 97.88375244140624
patch: . ; break ;
rank: 696
score: 98.84241832386364
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) . contains CaMeL Any ( ch ) ;
rank: 696
score: 98.38471330915179
patch: CaMeL Boolean true return true ;
rank: 696
score: 98.37937418619792
patch: return return $NUMBER$ ; }
rank: 696
score: 98.35741170247395
patch: ret = true ; }
rank: 696
score: 98.07130940755208
patch: ch = ! true ;
rank: 696
score: 98.02579171316964
patch: ( 0 != true ) ;
rank: 696
score: 97.88274536132812
patch: my return true ;
rank: 697
score: 98.38370768229167
patch: CaMeL arraycopy return true ;
rank: 697
score: 98.36426798502605
patch: p = true ; ;
rank: 697
score: 98.35713413783482
patch: if ( j >= 0 )
rank: 697
score: 97.88246459960938
patch: return true ) ;
rank: 698
score: 98.8419879415761
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . size ( ) ) ;
rank: 698
score: 98.38296944754464
patch: CaMeL Enum ; return true ;
rank: 698
score: 98.36343819754464
patch: return true ? true : ;
rank: 698
score: 98.35696847098214
patch: return ! true ; break ;
rank: 698
score: 98.17062377929688
patch: ( cs , ch )
rank: 698
score: 98.07070922851562
patch: else return false ; }
rank: 698
score: 98.02485874720982
patch: return 0 == true ; ;
rank: 698
score: 97.88099365234375
patch: image = true ;
rank: 699
score: 98.84187455610795
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , null ) ;
rank: 699
score: 98.37687377929687
patch: return ; * /
rank: 699
score: 98.36294991629464
patch: area . return true ; }
rank: 699
score: 98.35511997767857
patch: return ( ) ; } }
rank: 699
score: 98.07005818684895
patch: return true ; / /
rank: 699
score: 98.02336774553571
patch: CaMeL ; = true ; ;
rank: 700
score: 98.84174138849431
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) == ch ) ;
rank: 700
score: 98.37968226841518
patch: CaMeL Exception ( true ) ;
rank: 700
score: 98.35086059570312
patch: if ( return true )
rank: 700
score: 98.06913248697917
patch: return 0 ; } }
rank: 700
score: 98.0225830078125
patch: return size == 0 ;
rank: 700
score: 97.87567749023438
patch: def = true ;
rank: 701
score: 98.39997209821429
patch: return true ; } ) ;
rank: 701
score: 98.37935093470982
patch: CaMeL Object true return false ;
rank: 701
score: 98.36150251116071
patch: 32 . return true ; }
rank: 701
score: 98.34965297154018
patch: switch ( cs CaMeL Length )
rank: 701
score: 98.02059936523438
patch: return 0 . $NUMBER$ ;
rank: 702
score: 98.8403957201087
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Short CaMeL Value ( ) ;
rank: 702
score: 98.37904575892857
patch: CaMeL Iterator true return true ;
rank: 702
score: 98.361328125
patch: c = true ; ;
rank: 702
score: 98.34674072265625
patch: b return return true ;
rank: 702
score: 98.16000366210938
patch: return is == ch ;
rank: 702
score: 98.0685323079427
patch: return ( ch ) ;
rank: 702
score: 98.01999337332589
patch: CaMeL List ( $NUMBER$ ) ;
rank: 703
score: 98.84025065104167
patch: return search CaMeL Chars [ j ] . get CaMeL Method ( ) . contains CaMeL Any ( ) ;
rank: 703
score: 98.37883649553571
patch: CaMeL String ; return true ;
rank: 703
score: 98.36872209821429
patch: CaMeL Thread return true ; }
rank: 703
score: 98.36050851004464
patch: t = ; break ; }
rank: 703
score: 98.06789143880208
patch: return this && true ;
rank: 703
score: 98.01962280273438
patch: return ! return 0 ;
rank: 703
score: 97.87259674072266
patch: . return ;
rank: 704
score: 98.37251499720982
patch: CaMeL Exception = return ) ;
rank: 704
score: 98.36852155412946
patch: return is CaMeL Empty return ;
rank: 704
score: 98.35696847098214
patch: CaMeL ; true = true ;
rank: 704
score: 98.1556396484375
patch: cs return true ;
rank: 704
score: 98.01839773995536
patch: CaMeL sum = true ; true
rank: 704
score: 97.8712890625
patch: r = true ;
rank: 705
score: 98.83967391304348
patch: return Array CaMeL Utils . contains ( search CaMeL Chars [ j ] . char CaMeL At ( j ) ) ;
rank: 705
score: 98.39498465401786
patch: return search CaMeL Chars [ }
rank: 705
score: 98.36775716145833
patch: return is ; } }
rank: 705
score: 98.35201590401786
patch: return false ; ; } ;
rank: 705
score: 98.34548514229911
patch: if ( true ) return ;
rank: 705
score: 98.14339192708333
patch: return ch != null )
rank: 705
score: 98.065185546875
patch: return ch + true ;
rank: 705
score: 98.01826985677083
patch: return return 1 ; ;
rank: 705
score: 97.87025146484375
patch: token = true ;
rank: 706
score: 98.8387784090909
patch: return contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) , cs ) ;
rank: 706
score: 98.36669049944196
patch: CaMeL Exception return false ; ;
rank: 706
score: 98.35198974609375
patch: return true ; ; * /
rank: 706
score: 98.34457397460938
patch: break ; } }
rank: 706
score: 98.01809256417411
patch: return 0 . true ; ;
rank: 706
score: 97.86827392578125
patch: scale = true ;
rank: 707
score: 98.8386867357337
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Not CaMeL True ( ) ;
rank: 707
score: 98.39306640625
patch: return true ) return false ;
rank: 707
score: 98.36540876116071
patch: CaMeL append return true ; ;
rank: 707
score: 98.36481584821429
patch: CaMeL List true = true ;
rank: 707
score: 98.34860665457589
patch: z = ; return true ;
rank: 707
score: 98.34222412109375
patch: return true false ; }
rank: 707
score: 98.13660685221355
patch: return ch != 1 ;
rank: 707
score: 98.06430053710938
patch: return ch + false ;
rank: 707
score: 98.01708984375
patch: return ; return ; ;
rank: 707
score: 97.86810302734375
patch: return ; break ;
rank: 708
score: 98.83860085227273
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . contains CaMeL Any ( ch ) ;
rank: 708
score: 98.38956124441964
patch: return return ch == ch ;
rank: 708
score: 98.36432756696429
patch: return true ; else return ;
rank: 708
score: 98.36319405691964
patch: CaMeL Error true return null ;
rank: 708
score: 98.34783935546875
patch: return ( true ) ; ;
rank: 708
score: 98.34207589285714
patch: return ! ! true ; }
rank: 708
score: 98.06361897786458
patch: return is > true ;
rank: 708
score: 98.0162353515625
patch: CaMeL read ( true ) ;
rank: 708
score: 97.86435546875
patch: node = true ;
rank: 709
score: 98.83830915178571
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Id ( ) ;
rank: 709
score: 98.3641357421875
patch: return ; ; } return ;
rank: 709
score: 98.36240931919643
patch: CaMeL Exception return return false ;
rank: 709
score: 98.13254801432292
patch: return search CaMeL Chars }
rank: 709
score: 98.01484026227679
patch: CaMeL -= ( true ) ;
rank: 709
score: 97.86422119140624
patch: version return true ;
rank: 710
score: 98.83782087053571
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . contains CaMeL Any ( ) ;
rank: 710
score: 98.38699776785714
patch: try { return return true ;
rank: 710
score: 98.36325509207589
patch: return is ; return null ;
rank: 710
score: 98.36204310825893
patch: CaMeL Number return true true ;
rank: 710
score: 98.34056745256696
patch: if ( ch == false )
rank: 710
score: 98.0609130859375
patch: return true - true ;
rank: 710
score: 98.01399448939732
patch: CaMeL += ( ) true ;
rank: 710
score: 97.85614013671875
patch: |= true ;
rank: 711
score: 98.83782087053571
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Equals ( ) ;
rank: 711
score: 98.38047572544643
patch: return ( search CaMeL Chars ;
rank: 711
score: 98.3624267578125
patch: return is CaMeL Defined ;
rank: 711
score: 98.36026436941964
patch: CaMeL Null true return true ;
rank: 711
score: 98.34424700055804
patch: 64 return true ; } }
rank: 711
score: 98.34035237630208
patch: return return ( true ;
rank: 711
score: 98.13077799479167
patch: return true || false ;
rank: 711
score: 98.06001790364583
patch: cs = return true ;
rank: 711
score: 98.01254272460938
patch: return 0 + false ;
rank: 711
score: 97.85553588867188
patch: value return true ;
rank: 712
score: 98.83759099786931
patch: return ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars , search CaMeL Chars . length ) ;
rank: 712
score: 98.35982840401786
patch: CaMeL Class true return false ;
rank: 712
score: 98.13023885091145
patch: return null . true ;
rank: 712
score: 98.05821533203125
patch: return $NUMBER$ ; }
rank: 712
score: 98.00935872395833
patch: return ; + true ;
rank: 712
score: 97.84832153320312
patch: n = true ;
rank: 713
score: 98.8371814546131
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , ch , search CaMeL Chars ) ;
rank: 713
score: 98.35907854352679
patch: CaMeL Runtime . return true ;
rank: 713
score: 98.35618373325893
patch: CaMeL Null true return null ;
rank: 713
score: 98.34333147321429
patch: return ; } break ; }
rank: 713
score: 98.3385518391927
patch: this ! return true ;
rank: 713
score: 98.0579121907552
patch: System . return false ;
rank: 713
score: 98.00604248046875
patch: CaMeL return ( ) ;
rank: 713
score: 97.8472900390625
patch: = false ;
rank: 714
score: 98.8369473544034
patch: return ch < search CaMeL Chars [ j ] ;
rank: 714
score: 98.35881696428571
patch: CaMeL List return true ; }
rank: 714
score: 98.35403878348214
patch: CaMeL Exception return false ; }
rank: 714
score: 98.34254673549107
patch: d = true ; break ;
rank: 714
score: 98.33651733398438
patch: impl return true ; }
rank: 714
score: 98.1293233235677
patch: if ( search CaMeL Chars
rank: 714
score: 98.05784098307292
patch: return ch : false ;
rank: 714
score: 98.0048319498698
patch: return ; return 1 ;
rank: 714
score: 97.84684448242187
patch: renderer = true ;
rank: 715
score: 98.83672540838069
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j ) , false ) ;
rank: 715
score: 98.34190150669643
patch: b ; return true ; }
rank: 715
score: 98.33483014787946
patch: if ( true ) { }
rank: 715
score: 98.12564086914062
patch: return null == ch ;
rank: 715
score: 98.0046875
patch: return - ) ;
rank: 715
score: 97.84637451171875
patch: system = true ;
rank: 716
score: 98.836669921875
patch: return search CaMeL Chars [ j ] == name ;
rank: 716
score: 98.355224609375
patch: return ; } return null ;
rank: 716
score: 98.34129987444196
patch: CaMeL ; . return true ;
rank: 716
score: 98.33462524414062
patch: f return true ; }
rank: 716
score: 98.118896484375
patch: return ch == $NUMBER$ ;
rank: 716
score: 98.05594889322917
patch: static return false ; }
rank: 716
score: 97.99751790364583
patch: return false ; ; /
rank: 716
score: 97.844091796875
patch: $NUMBER$ ; break ;
rank: 717
score: 98.83593139648437
patch: return cs . size ( ) > 0 ;
rank: 717
score: 98.35422770182292
patch: return ; } break ;
rank: 717
score: 98.35305350167411
patch: CaMeL Class return return true ;
rank: 717
score: 98.34969656808036
patch: search CaMeL Chars return true ;
rank: 717
score: 98.34061976841518
patch: is ; return true ; }
rank: 717
score: 98.33421107700893
patch: if ( search CaMeL Length <
rank: 717
score: 98.1174825032552
patch: return is != null ;
rank: 717
score: 98.05328369140625
patch: return return ! false ;
rank: 717
score: 97.99566650390625
patch: return return == true ;
rank: 717
score: 97.84334106445313
patch: formatter = true ;
rank: 718
score: 98.83587937127976
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) . contains CaMeL Any ( ) ;
rank: 718
score: 98.35383823939732
patch: return false ; } else ;
rank: 718
score: 98.1168721516927
patch: return true - 1 ;
rank: 718
score: 98.05235595703125
patch: this return false ;
rank: 718
score: 97.99398803710938
patch: return 0 - true ;
rank: 718
score: 97.84103393554688
patch: token return true ;
rank: 719
score: 98.83543812144886
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , false ) ;
rank: 719
score: 98.35281372070312
patch: return null ; } ;
rank: 719
score: 98.35055106026786
patch: CaMeL Range = true ; }
rank: 719
score: 98.34489222935268
patch: return return search CaMeL Chars ;
rank: 719
score: 98.33121490478516
patch: break ; }
rank: 719
score: 98.0507100423177
patch: logger . return false ;
rank: 719
score: 97.9922119140625
patch: return return 1 ;
rank: 719
score: 97.8400650024414
patch: . * /
rank: 720
score: 98.83538263494319
patch: return Array CaMeL Utils . is CaMeL Empty ( cs . char CaMeL At ( j + 1 ) ) ;
rank: 720
score: 98.35281372070312
patch: return true ; while ;
rank: 720
score: 98.35041155133929
patch: CaMeL List return true true ;
rank: 720
score: 98.3438212076823
patch: return ( cs ) ;
rank: 720
score: 98.33846609933036
patch: logger = ; return true ;
rank: 720
score: 98.33114624023438
patch: b . return true ;
rank: 720
score: 98.11629231770833
patch: return true + ch ;
rank: 720
score: 98.04972330729167
patch: System . return true ;
rank: 720
score: 97.99154663085938
patch: return 0 ; ; /
rank: 720
score: 97.83834228515624
patch: at return true ;
rank: 721
score: 98.83510520241477
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . contains CaMeL Any ( ch ) ;
rank: 721
score: 98.3382059733073
patch: 16 . return true ;
rank: 721
score: 98.1138203938802
patch: return false != true ;
rank: 721
score: 98.04857381184895
patch: return true ? false ;
rank: 721
score: 97.98640950520833
patch: CaMeL do return true ;
rank: 721
score: 97.83516235351563
patch: item = true ;
rank: 722
score: 98.83280613111413
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , search CaMeL Length ) ;
rank: 722
score: 98.34809221540179
patch: CaMeL Enum true return null ;
rank: 722
score: 98.337890625
patch: a = true ; break ;
rank: 722
score: 98.10589599609375
patch: return null : true ;
rank: 722
score: 98.04789225260417
patch: throw null . * /
rank: 722
score: 97.9845682779948
patch: return ! != true ;
rank: 722
score: 97.82747802734374
patch: body return true ;
rank: 723
score: 98.83091669497283
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars search CaMeL Chars [ j ] ) ;
rank: 723
score: 98.34885951450893
patch: CaMeL Object return return true ;
rank: 723
score: 98.34620884486607
patch: CaMeL Range = true ; else
rank: 723
score: 98.33921595982143
patch: return true ) return true ;
rank: 723
score: 98.3271993001302
patch: s return true ; }
rank: 723
score: 98.10223388671875
patch: return false + ch ;
rank: 723
score: 98.0471903483073
patch: ch = ! false ;
rank: 723
score: 97.82255249023437
patch: so return false ;
rank: 724
score: 98.82933508831522
patch: return Array CaMeL Utils . is CaMeL Empty ( cs , cs . char CaMeL At ( j ] ) ) ;
rank: 724
score: 98.34529331752232
patch: CaMeL Range . return false ;
rank: 724
score: 98.33918980189732
patch: Plane != false return true ;
rank: 724
score: 98.3259785970052
patch: false return true ; }
rank: 724
score: 98.04671223958333
patch: Plane return false ; ;
rank: 724
score: 97.97552490234375
patch: return - != 0 ;
rank: 724
score: 97.81793212890625
patch: rt = true ;
rank: 725
score: 98.82930131392045
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [ j ] == ch ) ;
rank: 725
score: 98.34735979352679
patch: return return ! true ; }
rank: 725
score: 98.34371512276786
patch: CaMeL Boolean ; return true ;
rank: 725
score: 98.32979329427083
patch: switch ( ch ) {
rank: 725
score: 98.32411411830357
patch: switch ( j ) { }
rank: 725
score: 98.0465596516927
patch: contains return false ; }
rank: 725
score: 97.9749247233073
patch: return ; = 0 ;
rank: 726
score: 98.82786976207386
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars [ j ] , search CaMeL Chars ) ;
rank: 726
score: 98.34710693359375
patch: return is true ; } }
rank: 726
score: 98.34217180524554
patch: CaMeL Exception { return false ;
rank: 726
score: 98.04601033528645
patch: return ch : true ;
rank: 726
score: 97.9706522623698
patch: return ; . true ;
rank: 726
score: 97.811083984375
patch: loop = true ;
rank: 727
score: 98.82761452414773
patch: return $STRING$ != search CaMeL Chars [ j ] ;
rank: 727
score: 98.3453369140625
patch: return return is return false ;
rank: 727
score: 98.33483014787946
patch: . return true ; * /
rank: 727
score: 98.32334391276042
patch: Plane > return true ;
rank: 727
score: 98.09385986328125
patch: return false false ;
rank: 727
score: 98.04567464192708
patch: CaMeL List return false ;
rank: 727
score: 97.9704081217448
patch: CaMeL ch return true ;
rank: 727
score: 97.80933227539063
patch: browser = true ;
rank: 728
score: 98.82707075639205
patch: return cs . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 728
score: 98.34302629743304
patch: return is true ; * /
rank: 728
score: 98.33893694196429
patch: CaMeL Null ; return true ;
rank: 728
score: 98.33285522460938
patch: return true ; default :
rank: 728
score: 98.3229736328125
patch: state return true ;
rank: 728
score: 98.04502360026042
patch: ( return false ) ;
rank: 728
score: 97.96815999348958
patch: CaMeL do . true ;
rank: 728
score: 97.80552978515625
patch: is return false ;
rank: 729
score: 98.82639382102273
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , cs . char CaMeL At ( i ) ) ;
rank: 729
score: 98.34282575334821
patch: . set ; return false ;
rank: 729
score: 98.33832659040179
patch: CaMeL Class return true ; ;
rank: 729
score: 98.33236258370536
patch: cb = true ; break ;
rank: 729
score: 98.3225809733073
patch: return return = true ;
rank: 729
score: 98.30823625837054
patch: return ch != - 1 ;
rank: 729
score: 97.96805826822917
patch: return length != 0 ;
rank: 729
score: 97.80370483398437
patch: default return true ;
rank: 730
score: 98.82627175071023
patch: return cs . contains CaMeL Any ( ch , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 730
score: 98.34249441964286
patch: return true ; while ; }
rank: 730
score: 98.33766392299107
patch: CaMeL Boolean true return false ;
rank: 730
score: 98.3224589029948
patch: return ( ; } }
rank: 730
score: 98.30791364397321
patch: Plane != false return false ;
rank: 730
score: 98.04176839192708
patch: return / * * /
rank: 730
score: 97.96589660644531
patch: return 1 ;
rank: 730
score: 97.79926147460938
patch: peer = true ;
rank: 731
score: 98.33725992838542
patch: CaMeL Enum = true ;
rank: 731
score: 98.3214111328125
patch: return ( ) true ;
rank: 731
score: 98.08828735351562
patch: Plane = true ;
rank: 731
score: 97.96117146809895
patch: return is != true ;
rank: 731
score: 97.79808349609375
patch: . return ; }
rank: 732
score: 98.8260498046875
patch: return Array CaMeL Utils . contains CaMeL Any ( cs . char CaMeL At ( j ) , name ) ;
rank: 732
score: 98.34061104910714
patch: . . return true ; }
rank: 732
score: 98.33705357142857
patch: CaMeL Enum true return false ;
rank: 732
score: 98.3212158203125
patch: return ( ; }
rank: 732
score: 98.08826700846355
patch: return true != false ;
rank: 732
score: 97.9591573079427
patch: return is == 0 ;
rank: 732
score: 97.79616088867188
patch: CaMeL ; return ;
rank: 733
score: 98.8254061612216
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . get ( i ) ) ;
rank: 733
score: 98.33941650390625
patch: return ; } * * /
rank: 733
score: 98.33668736049107
patch: CaMeL List . return null ;
rank: 733
score: 98.331298828125
patch: CaMeL true . return false ;
rank: 733
score: 98.29762486049107
patch: return ( true false ) ;
rank: 733
score: 98.082080078125
patch: ret return false ;
rank: 733
score: 97.95900472005208
patch: ( ; return true ;
rank: 733
score: 97.79598388671874
patch: field return true ;
rank: 734
score: 98.824951171875
patch: return search CaMeL Chars [ j ] . char CaMeL At ( search CaMeL Chars . length ) == ch ;
rank: 734
score: 98.33665974934895
patch: return new true ; ;
rank: 734
score: 98.32945905412946
patch: p = ; continue ; }
rank: 734
score: 98.31776936848958
patch: break . return true ;
rank: 734
score: 98.0811767578125
patch: return false | true ;
rank: 734
score: 98.03733317057292
patch: return this ? false ;
rank: 734
score: 97.795361328125
patch: which return true ;
rank: 735
score: 98.82448508522727
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars [ j ] , cs ) ;
rank: 735
score: 98.33808244977679
patch: return ; break ; } }
rank: 735
score: 98.3344014485677
patch: CaMeL read return true ;
rank: 735
score: 98.3177490234375
patch: if ( search CaMeL Length >=
rank: 735
score: 98.07924397786458
patch: return cs == $STRING$ ;
rank: 735
score: 98.03676350911458
patch: result = false ; }
rank: 735
score: 97.95748901367188
patch: return ; return ;
rank: 735
score: 97.79423828125
patch: manifest = true ;
rank: 736
score: 98.33702741350446
patch: return false ; } * ;
rank: 736
score: 98.32772391183036
patch: p = true ; ; }
rank: 736
score: 98.31735229492188
patch: return ( false ; }
rank: 736
score: 98.03615315755208
patch: return null && false ;
rank: 736
score: 97.95712280273438
patch: return $NUMBER$ ; break ;
rank: 736
score: 97.79240112304687
patch: ok = true ;
rank: 737
score: 98.8217440518466
patch: return search CaMeL Chars [ j ] . get CaMeL Field ( ) . contains CaMeL Any ( ch ) ;
rank: 737
score: 98.336181640625
patch: . . . return false ;
rank: 737
score: 98.33336385091145
patch: CaMeL value = true ;
rank: 737
score: 98.31665910993304
patch: return ( int ) true ;
rank: 737
score: 98.0354715983073
patch: return [ i ] ;
rank: 737
score: 97.95492553710938
patch: return - != true ;
rank: 737
score: 97.79126586914063
patch: file = true ;
rank: 738
score: 98.82100053267045
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars . get ( j ) ) ;
rank: 738
score: 98.33322579520089
patch: return new || return true ;
rank: 738
score: 98.31597028459821
patch: return false ; } } else
rank: 738
score: 98.28333536783855
patch: Plane = true ; }
rank: 738
score: 98.07755126953126
patch: return ) false ;
rank: 738
score: 97.95395914713542
patch: return ! ) ; ;
rank: 738
score: 97.7904296875
patch: any return true ;
rank: 739
score: 98.8206203294837
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , cs . char CaMeL At ( j ] ) ) ;
rank: 739
score: 98.334716796875
patch: CaMeL return ( return true ;
rank: 739
score: 98.32400948660714
patch: Mapper . return true ; }
rank: 739
score: 98.31540352957589
patch: if ( ch == cs )
rank: 739
score: 98.0762227376302
patch: return cs != ch ;
rank: 739
score: 98.0341796875
patch: return this ? true ;
rank: 739
score: 97.95369466145833
patch: return return && true ;
rank: 739
score: 97.7889404296875
patch: s return true ;
rank: 740
score: 98.81982421875
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . to CaMeL String (
rank: 740
score: 98.33292061941964
patch: CaMeL Iterator true return false ;
rank: 740
score: 98.32342529296875
patch: return true ; default : ;
rank: 740
score: 98.31440952845982
patch: return ( true + ) ;
rank: 740
score: 98.07433064778645
patch: return ch == 1 ;
rank: 740
score: 97.94607543945312
patch: return - 1 ; ;
rank: 740
score: 97.78720092773438
patch: . break ;
rank: 741
score: 98.33251953125
patch: CaMeL Byte return true ;
rank: 741
score: 98.27891322544643
patch: Plane return ch == ch ;
rank: 741
score: 98.07171630859375
patch: return this . false ;
rank: 741
score: 98.03306070963542
patch: return false false ; }
rank: 741
score: 97.94317626953125
patch: return ! == true ;
rank: 741
score: 97.7853271484375
patch: . break ; }
rank: 742
score: 98.81826782226562
patch: return ch . size ( ) > 0 ;
rank: 742
score: 98.33193533761161
patch: return false ; break ; ;
rank: 742
score: 98.33147321428571
patch: CaMeL Boolean true return null ;
rank: 742
score: 98.32062639508929
patch: m = ; return false ;
rank: 742
score: 98.2777811686198
patch: switch ( cs ) {
rank: 742
score: 98.06671142578125
patch: return cs == true ;
rank: 742
score: 98.03172810872395
patch: return * return false ;
rank: 742
score: 97.94131469726562
patch: return size return true ;
rank: 742
score: 97.78467407226563
patch: control = true ;
rank: 743
score: 98.81818953804348
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars , cs CaMeL Length ) ;
rank: 743
score: 98.33040945870536
patch: CaMeL Number return return null ;
rank: 743
score: 98.3187255859375
patch: 64 return true ; }
rank: 743
score: 98.03165283203126
patch: ; return false ;
rank: 743
score: 97.94087727864583
patch: return length == true ;
rank: 743
score: 97.782177734375
patch: logger = true ;
rank: 744
score: 98.8162151834239
patch: return Array CaMeL Utils . contains CaMeL Any ( cs , search CaMeL Chars . char CaMeL At ( j ) ;
rank: 744
score: 98.33006940569196
patch: CaMeL Range . return null ;
rank: 744
score: 98.32965959821429
patch: return return null ; break ;
rank: 744
score: 98.06571655273437
patch: do return true ;
rank: 744
score: 98.0309346516927
patch: contains return true ; }
rank: 744
score: 97.93958536783855
patch: return ; = false ;
rank: 744
score: 97.77947998046875
patch: return is ; }
rank: 745
score: 98.81587550951087
patch: return Array CaMeL Utils . contains ( search CaMeL Chars , search CaMeL Chars . to CaMeL Object ( ) ) ;
rank: 745
score: 98.32949393136161
patch: return null ; } if ;
rank: 745
score: 98.32745361328125
patch: CaMeL Iterator return true ;
rank: 745
score: 98.30793980189732
patch: return ! ! return true ;
rank: 745
score: 98.0309346516927
patch: cs = return false ;
rank: 745
score: 97.93939208984375
patch: CaMeL ; = true ;
rank: 745
score: 97.77940063476562
patch: validate = true ;
rank: 746
score: 98.8148777173913
patch: return Array CaMeL Utils . contains CaMeL Any ( search CaMeL Chars , search CaMeL Chars . length , ch ) ;
rank: 746
score: 98.30774943033855
patch: c return true ; }
rank: 746
score: 98.02821858723958
patch: return false ? false ;
rank: 746
score: 97.93845621744792
patch: return ! return 1 ;
rank: 746
score: 97.77625732421875
patch: session = true ;
rank: 747
score: 98.81462296195652
patch: if ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [ j ] ) ) { return false ;
rank: 747
score: 98.32890101841518
patch: return return false ; } else
rank: 747
score: 98.27094377790179
patch: return search CaMeL Chars [ i
rank: 747
score: 98.04496256510417
patch: return ch == 0 ;
rank: 747
score: 98.02737426757812
patch: Plane count = false ;
rank: 747
score: 97.9383036295573
patch: return 1 + true ;
rank: 747
score: 97.776123046875
patch: inst = true ;
rank: 748
score: 98.81435759171195
patch: return search CaMeL Chars [ j ] . contains CaMeL Any ( search CaMeL Chars [ j ] == ch ) ;
rank: 748
score: 98.32849993024554
patch: CaMeL Thread return return true ;
rank: 748
score: 98.30490548270089
patch: b return true ; } }
rank: 748
score: 98.27059500558036
patch: search CaMeL Chars [ j ]
rank: 748
score: 98.04313151041667
patch: return false == true ;
rank: 748
score: 98.0272216796875
patch: return $NUMBER$ ; } }
rank: 748
score: 97.93117268880208
patch: return ; return ; _
rank: 748
score: 97.77455444335938
patch: table return true ;
rank: 749
score: 98.81434215198864
patch: ! search CaMeL Chars [ j ] == ch ;
rank: 749
score: 98.32754080636161
patch: return ; ; } if ;
rank: 749
score: 98.2891337076823
patch: return true ? ; }
rank: 749
score: 98.04288736979167
patch: return value == ch ;
rank: 749
score: 98.02625528971355
patch: Plane return true ; ;
rank: 749
score: 97.92410278320312
patch: return - != 1 ;
rank: 749
score: 97.77444458007812
patch: does return true ;
rank: 750
score: 98.81360394021739
patch: return ! Array CaMeL Utils . is CaMeL Empty ( cs , cs . char CaMeL At ( i ) ) ;
rank: 750
score: 98.30278669084821
patch: if ( ch != $STRING$ )
rank: 750
score: 98.28690592447917
patch: return ; } else {
rank: 750
score: 98.03548177083333
patch: return cs != null )
rank: 750
score: 98.02618408203125
patch: Plane ch = true ;
rank: 750
score: 97.91994222005208
patch: return true ; ; /
rank: 750
score: 97.7743896484375
patch: player = true ;
rank: 751
score: 98.32366943359375
patch: CaMeL Range { return true ;
rank: 751
score: 98.28487141927083
patch: return ; } * /
rank: 751
score: 98.2545654296875
patch: return search CaMeL Chars
rank: 751
score: 98.02604370117187
patch: Plane return null ;
rank: 751
score: 97.91562906901042
patch: return - == true ;
rank: 751
score: 97.773583984375
patch: should return true ;
rank: 752
score: 98.80982055664063
patch: return return search CaMeL Chars [ j ] ;
rank: 752
score: 98.32529122488839
patch: CaMeL Builder return true ; }
rank: 752
score: 98.32355608258929
patch: return new is ( ) ;
rank: 752
score: 98.30194702148438
patch: f return true ;
rank: 752
score: 97.91441853841145
patch: return ; { return ;
rank: 752
score: 97.77193603515624
patch: was return true ;
rank: 753
score: 98.80674438476562
patch: return ! cs . contains ( ch ) ;
rank: 753
score: 98.32463727678571
patch: . set return true ; }
rank: 753
score: 98.32352120535714
patch: CaMeL Class ; return true ;
rank: 753
score: 98.29600830078125
patch: } return true ;
rank: 753
score: 98.28181966145833
patch: return ! ( ; }
rank: 753
score: 98.24165852864583
patch: Plane $NUMBER$ return true ;
rank: 753
score: 98.02329508463542
patch: return false ; } {
rank: 753
score: 97.771484375
patch: : return false ;
rank: 754
score: 98.80375532670455
patch: ! search CaMeL Chars [ j ] = ch ;
rank: 754
score: 98.322998046875
patch: CaMeL Range is return true ;
rank: 754
score: 98.29295857747395
patch: / ch return true ;
rank: 754
score: 98.28013102213542
patch: t ; return true ;
rank: 754
score: 98.02304077148438
patch: return i != 0 ;
rank: 754
score: 98.01449584960938
patch: contains return true ;
rank: 754
score: 97.90877278645833
patch: return ; = ; ;
rank: 754
score: 97.77024536132812
patch: log = true ;
rank: 755
score: 98.8020751953125
patch: return ! cs . equals ( ch ) ;
rank: 755
score: 98.32339913504464
patch: return return ; return true ;
rank: 755
score: 98.29018147786458
patch: m return true ; }
rank: 755
score: 98.28006998697917
patch: return true ; * ;
rank: 755
score: 98.0216776529948
patch: { ch = true ;
rank: 755
score: 97.99364013671875
patch: false return true ;
rank: 755
score: 97.90712483723958
patch: return next != 0 ;
rank: 755
score: 97.76907958984376
patch: connector = true ;
rank: 756
score: 98.32204764229911
patch: CaMeL Error ; return false ;
rank: 756
score: 98.28939208984374
patch: return ( false ;
rank: 756
score: 98.02109781901042
patch: return false ; * ;
rank: 756
score: 97.97996215820312
patch: ch return true ;
rank: 756
score: 97.90261840820312
patch: CaMeL += ) ) ;
rank: 756
score: 97.76661376953125
patch: return true ; default
rank: 757
score: 98.32180786132812
patch: CaMeL Range = false ;
rank: 757
score: 98.28285725911458
patch: ret return true ; }
rank: 757
score: 98.27679443359375
patch: ? * return true ;
rank: 757
score: 98.2374267578125
patch: Plane > return false ;
rank: 757
score: 98.02067057291667
patch: return is == true ;
rank: 757
score: 97.89581298828125
patch: CaMeL capacity = true ;
rank: 757
score: 97.762255859375
patch: will return true ;
rank: 758
score: 98.32145182291667
patch: return return is true ;
rank: 758
score: 98.32080078125
patch: CaMeL Process . return true ;
rank: 758
score: 98.27915445963542
patch: v return true ; }
rank: 758
score: 98.23429361979167
patch: return ch > 0 ;
rank: 758
score: 97.89487711588542
patch: return ! 1 ; ;
rank: 758
score: 97.76094970703124
patch: repository = true ;
rank: 759
score: 98.3214111328125
patch: return ; , * * /
rank: 759
score: 98.32064383370536
patch: CaMeL Thread . return false ;
rank: 759
score: 98.0172119140625
patch: return ch ? true ;
rank: 759
score: 97.9714126586914
patch: return true }
rank: 759
score: 97.8944091796875
patch: return - && true ;
rank: 759
score: 97.7596435546875
patch: socket = true ;
rank: 760
score: 98.27828369140624
patch: return ! ch ;
rank: 760
score: 98.0167236328125
patch: Plane break return true ;
rank: 760
score: 97.8933614095052
patch: CaMeL return ) ; ;
rank: 760
score: 97.75598754882813
patch: final return true ;
rank: 761
score: 98.31991141183036
patch: return ; } else return ;
rank: 761
score: 98.31881277901786
patch: return this . return null ;
rank: 761
score: 98.27813720703125
patch: return ( ;
rank: 761
score: 98.01611328125
patch: return is > false ;
rank: 761
score: 97.96846313476563
patch: return ) true ;
rank: 761
score: 97.89207967122395
patch: return return != 0 ;
rank: 761
score: 97.75597534179687
patch: props = true ;
rank: 762
score: 98.31987653459821
patch: return ; } } * /
rank: 762
score: 98.31870814732143
patch: CaMeL List ; return null ;
rank: 762
score: 98.2749735514323
patch: if ( false ) {
rank: 762
score: 98.2632548014323
patch: return true true ; ;
rank: 762
score: 98.01400756835938
patch: continue return true ; }
rank: 762
score: 97.96515502929688
patch: else return false ;
rank: 762
score: 97.88823699951172
patch: return ) ;
rank: 762
score: 97.7557144165039
patch: $NUMBER$ * /
rank: 763
score: 98.31947544642857
patch: return return ; ; } }
rank: 763
score: 98.31756591796875
patch: CaMeL char return true ;
rank: 763
score: 98.21097819010417
patch: return true = false ;
rank: 763
score: 98.01370849609376
patch: ch return false ;
rank: 763
score: 97.964111328125
patch: return null false ;
rank: 763
score: 97.88789876302083
patch: return ch ; break ;
rank: 763
score: 97.75444946289062
patch: = true ; ;
rank: 764
score: 98.31694684709821
patch: CaMeL Range && return true ;
rank: 764
score: 97.95095825195312
patch: return true )
rank: 764
score: 97.88545735677083
patch: return 0 + 1 ;
rank: 765
score: 98.31802804129464
patch: return return 0 == true ;
rank: 765
score: 98.31649344308036
patch: CaMeL Number = return false ;
rank: 765
score: 98.26922607421875
patch: impl return true ;
rank: 765
score: 97.88492838541667
patch: return return $NUMBER$ ; ;
rank: 765
score: 97.7525390625
patch: tag return true ;
rank: 766
score: 98.31735665457589
patch: return is true ; break ;
rank: 766
score: 98.31623186383929
patch: CaMeL Thread true return true ;
rank: 766
score: 97.93377075195312
patch: set return true ;
rank: 766
score: 97.88339233398438
patch: return != ) ; ;
rank: 766
score: 97.74722290039062
patch: used return true ;
rank: 767
score: 98.31696428571429
patch: return true ; while ; ;
rank: 767
score: 98.31611851283482
patch: CaMeL Range return return null ;
rank: 767
score: 98.26698811848958
patch: return cs . false ;
rank: 767
score: 98.00990804036458
patch: } return false ; }
rank: 767
score: 97.93240966796876
patch: return == ch ;
rank: 767
score: 97.8793436686198
patch: return ~ true ; ;
rank: 767
score: 97.74251098632813
patch: clipped = true ;
rank: 768
score: 98.31569126674107
patch: return return is CaMeL Defined ;
rank: 768
score: 98.31491524832589
patch: CaMeL ++ ; return true ;
rank: 768
score: 97.87474568684895
patch: return length == 0 ;
rank: 768
score: 97.74222412109376
patch: ts = true ;
rank: 769
score: 98.31517682756696
patch: return is CaMeL Sealed ( ;
rank: 769
score: 98.3140869140625
patch: CaMeL Range = true ; ;
rank: 769
score: 97.87471516927083
patch: return 0 . ; ;
rank: 769
score: 97.74217529296875
patch: focus = true ;
rank: 770
score: 98.31471761067708
patch: return ; / * /
rank: 770
score: 98.31043352399554
patch: CaMeL Enum return true ; ;
rank: 770
score: 98.25789388020833
patch: return = true ; ;
rank: 770
score: 98.23790486653645
patch: c ; return true ;
rank: 770
score: 97.91978149414062
patch: return - 1 ;
rank: 770
score: 97.87442016601562
patch: return count != 0 ;
rank: 770
score: 97.74185791015626
patch: $NUMBER$ . * /
rank: 771
score: 98.30998883928571
patch: CaMeL j = return true ;
rank: 771
score: 98.18370564778645
patch: result = return true ;
rank: 771
score: 97.91520385742187
patch: static return true ;
rank: 771
score: 97.87434895833333
patch: return ; return ; :
rank: 771
score: 97.74110107421875
patch: version = true ;
rank: 772
score: 98.31396484375
patch: return return ; return false ;
rank: 772
score: 98.30991908482143
patch: CaMeL Exception return true true ;
rank: 772
score: 98.25382486979167
patch: return contains ( ) ;
rank: 772
score: 97.74099731445312
patch: key = true ;
rank: 773
score: 98.31278483072917
patch: return ;
rank: 773
score: 98.25372314453125
patch: break : return true ;
rank: 773
score: 98.23707071940105
patch: return true . ; }
rank: 773
score: 97.87042236328125
patch: return ! && true ;
rank: 773
score: 97.73929443359376
patch: compiler = true ;
rank: 774
score: 98.30630057198661
patch: CaMeL List ; return false ;
rank: 774
score: 97.87152099609375
patch: Any return true ;
rank: 774
score: 97.87012939453125
patch: return $NUMBER$ ; ;
rank: 774
score: 97.7392578125
patch: filter = true ;
rank: 775
score: 98.3095703125
patch: . set return true ;
rank: 775
score: 98.30475725446429
patch: CaMeL Range true = null ;
rank: 775
score: 98.24620564778645
patch: p return true ; }
rank: 775
score: 98.23443603515625
patch: return ! ; ; }
rank: 775
score: 98.1627909342448
patch: Plane $NUMBER$ return false ;
rank: 775
score: 98.00113525390626
patch: return * * /
rank: 775
score: 97.8695780436198
patch: return 0 + null ;
rank: 775
score: 97.73787841796874
patch: lookup = true ;
rank: 776
score: 98.30455525716145
patch: CaMeL Iterator = true ;
rank: 776
score: 98.2420145670573
patch: if ( ch == )
rank: 776
score: 98.22976684570312
patch: return ; } ;
rank: 776
score: 98.000244140625
patch: return cs == false ;
rank: 776
score: 97.86761474609375
patch: false return false ;
rank: 776
score: 97.73483276367188
patch: cp = true ;
rank: 777
score: 98.30853271484375
patch: return is ; break ;
rank: 777
score: 98.30351039341518
patch: return true ; return value ;
rank: 777
score: 98.2418212890625
patch: return { true ; }
rank: 777
score: 98.22701009114583
patch: return i > 0 ;
rank: 777
score: 97.99822998046875
patch: continue return false ; }
rank: 777
score: 97.86478271484376
patch: } return false ;
rank: 777
score: 97.8637186686198
patch: return 0 == 0 ;
rank: 777
score: 97.73432006835938
patch: need return true ;
rank: 778
score: 98.30335344587054
patch: CaMeL Category . return null ;
rank: 778
score: 98.2376708984375
patch: b ! return true ;
rank: 778
score: 98.22416178385417
patch: t = true ; ;
rank: 778
score: 98.15536499023438
patch: } } return false ;
rank: 778
score: 97.8615214029948
patch: CaMeL mid = true ;
rank: 778
score: 97.85728759765625
patch: return . true ;
rank: 778
score: 97.733740234375
patch: temp = true ;
rank: 779
score: 98.30759974888393
patch: return true ; for ; }
rank: 779
score: 98.30106898716518
patch: CaMeL List . return false ;
rank: 779
score: 98.23690795898438
patch: switch ( j )
rank: 779
score: 98.22249348958333
patch: return ; } } ;
rank: 779
score: 97.97638549804688
patch: ) return false ;
rank: 779
score: 97.854296875
patch: contains return false ;
rank: 779
score: 97.73348999023438
patch: prev = true ;
rank: 780
score: 98.30728585379464
patch: return false ; } / ;
rank: 780
score: 98.2982177734375
patch: CaMeL Class . return true ;
rank: 780
score: 98.23215738932292
patch: return ! ( ) ;
rank: 780
score: 98.22203369140625
patch: g = true ;
rank: 780
score: 97.97380981445312
patch: ch = false ;
rank: 780
score: 97.85720825195312
patch: ( ; = true ;
rank: 780
score: 97.73299560546874
patch: CaMeL return ( ;
rank: 781
score: 98.30637904575893
patch: return is true return null ;
rank: 781
score: 98.29720052083333
patch: CaMeL Range = null ;
rank: 781
score: 98.15376790364583
patch: return contains CaMeL Any (
rank: 781
score: 97.97249145507813
patch: cs = cs ;
rank: 781
score: 97.85045776367187
patch: return null true ;
rank: 781
score: 97.73275756835938
patch: value = true ;
rank: 782
score: 98.2959493001302
patch: CaMeL j return true ;
rank: 782
score: 98.23070271809895
patch: return cs : true ;
rank: 782
score: 97.85532633463542
patch: return count != true ;
rank: 782
score: 97.73070678710937
patch: grid = true ;
rank: 783
score: 98.66090223524306
patch: += search CaMeL Chars [ j ] ;
rank: 783
score: 98.30521937779018
patch: return is true ; return ;
rank: 783
score: 98.29312569754464
patch: CaMeL value return true ; ;
rank: 783
score: 98.23004150390625
patch: return return ( ) ;
rank: 783
score: 98.14699300130208
patch: return ( search CaMeL Chars
rank: 783
score: 97.96314086914063
patch: return * true ;
rank: 783
score: 97.85203043619792
patch: return 0 . ; /
rank: 783
score: 97.84417724609375
patch: return || true ;
rank: 783
score: 97.73045654296875
patch: = ~ true ;
rank: 784
score: 98.30467878069196
patch: return is true * * /
rank: 784
score: 98.29061453683036
patch: CaMeL Iterator return return true ;
rank: 784
score: 98.23004150390625
patch: target return true ; }
rank: 784
score: 98.21165974934895
patch: 1 . return true ;
rank: 784
score: 97.85164388020833
patch: CaMeL do . break ;
rank: 784
score: 97.842529296875
patch: do return false ;
rank: 784
score: 97.73039245605469
patch: = null ;
rank: 785
score: 98.30196707589286
patch: return is CaMeL True return ;
rank: 785
score: 98.28683035714286
patch: CaMeL Exception = true ; else
rank: 785
score: 98.22938028971355
patch: return ! ch ; }
rank: 785
score: 98.21162923177083
patch: 16 return true ; }
rank: 785
score: 97.9495361328125
patch: cs return false ;
rank: 785
score: 97.84916178385417
patch: break ; return true ;
rank: 785
score: 97.73001708984376
patch: tag = true ;
rank: 786
score: 98.30097307477679
patch: return ; . return false ;
rank: 786
score: 98.28667340959821
patch: CaMeL Thread true return null ;
rank: 786
score: 98.22774251302083
patch: } return true ; }
rank: 786
score: 98.20811971028645
patch: return ; } } }
rank: 786
score: 97.94674682617188
patch: return 1 ; }
rank: 786
score: 97.8470458984375
patch: } { return true ;
rank: 786
score: 97.72888793945313
patch: val = true ;
rank: 787
score: 98.28515625
patch: CaMeL Float true return true ;
rank: 787
score: 98.22621663411458
patch: } } return true ;
rank: 787
score: 98.2032470703125
patch: return ( ch ; }
rank: 787
score: 97.84670003255208
patch: return is ( ) ;
rank: 787
score: 97.728369140625
patch: user = true ;
rank: 788
score: 98.29720052083333
patch: return ; * * ;
rank: 788
score: 98.28481619698661
patch: CaMeL Range = return false ;
rank: 788
score: 98.2255147298177
patch: handler return true ; }
rank: 788
score: 98.20198567708333
patch: return i >= $NUMBER$ ;
rank: 788
score: 97.94505004882812
patch: return / * /
rank: 788
score: 97.84642537434895
patch: return return != 1 ;
rank: 788
score: 97.83131103515625
patch: return true } }
rank: 788
score: 97.72628173828124
patch: * / break ;
rank: 789
score: 98.29475911458333
patch: return ; } if ;
rank: 789
score: 98.28453717912946
patch: CaMeL Number = true ; else
rank: 789
score: 97.94337158203125
patch: return $STRING$ ; }
rank: 789
score: 97.84586588541667
patch: return name return true ;
rank: 789
score: 97.72613525390625
patch: zone = true ;
rank: 790
score: 98.64373779296875
patch: return is CaMeL True ( ch ) ;
rank: 790
score: 98.28261893136161
patch: CaMeL Error return return true ;
rank: 790
score: 98.22109375
patch: return is . ;
rank: 790
score: 97.72445068359374
patch: if true * /
rank: 791
score: 98.28116280691964
patch: CaMeL Range return return false ;
rank: 791
score: 98.22100830078125
patch: break true ; } }
rank: 791
score: 98.19769287109375
patch: return i >= true ;
rank: 791
score: 98.13271077473958
patch: return ch > 1 ;
rank: 791
score: 97.84177652994792
patch: ; else return true ;
rank: 791
score: 97.812939453125
patch: return true ? ch
rank: 791
score: 97.72383422851563
patch: emit = true ;
rank: 792
score: 98.63570404052734
patch: return ( $STRING$ == ch ) ;
rank: 792
score: 98.28038678850446
patch: CaMeL Object = return true ;
rank: 792
score: 98.22030029296874
patch: m return true ;
rank: 792
score: 98.1957295735677
patch: p ; return true ;
rank: 792
score: 97.84097290039062
patch: return size != 1 ;
rank: 793
score: 98.27944946289062
patch: return new is true ;
rank: 793
score: 98.27133178710938
patch: return is CaMeL Supported ;
rank: 793
score: 98.12803955078125
patch: al return true ;
rank: 793
score: 97.93489837646484
patch: return $STRING$ ;
rank: 793
score: 97.84055582682292
patch: return false ; ; true
rank: 793
score: 97.81029510498047
patch: return false }
rank: 794
score: 98.27938406808036
patch: CaMeL Object . return null ;
rank: 794
score: 98.26381429036458
patch: return new true ; }
rank: 794
score: 98.21993408203124
patch: c return true ;
rank: 794
score: 98.18951416015625
patch: return true * ; }
rank: 794
score: 97.8389892578125
patch: return - true ; ;
rank: 794
score: 97.8035888671875
patch: try { break ;
rank: 794
score: 97.72054443359374
patch: could return true ;
rank: 795
score: 98.27923583984375
patch: CaMeL Range = return null ;
rank: 795
score: 98.26158650716145
patch: return $NUMBER$ == true ;
rank: 795
score: 98.21846516927083
patch: break = true ; }
rank: 795
score: 97.83811442057292
patch: ( false ) ; ;
rank: 796
score: 98.27837262834821
patch: return ; ; return null ;
rank: 796
score: 98.26121012369792
patch: return ; ; return ;
rank: 796
score: 97.91123046875
patch: ( ch ) ;
rank: 796
score: 97.83755493164062
patch: return is != false ;
rank: 796
score: 97.71774291992188
patch: complete = true ;
rank: 797
score: 98.27734375
patch: return true ; true ; {
rank: 797
score: 98.21549479166667
patch: res return true ; }
rank: 797
score: 98.11568196614583
patch: search CaMeL Chars [ j
rank: 797
score: 97.83610026041667
patch: return $NUMBER$ return true ;
rank: 797
score: 97.79285888671875
patch: return && true ;
rank: 797
score: 97.71405029296875
patch: date = true ;
rank: 798
score: 98.27711704799107
patch: CaMeL try ; return true ;
rank: 798
score: 98.26017252604167
patch: return is ; * /
rank: 798
score: 98.18642171223958
patch: return ~ true ; }
rank: 798
score: 98.11545817057292
patch: break ? return true ;
rank: 798
score: 97.90257568359375
patch: Plane break true ;
rank: 798
score: 97.83450317382812
patch: return 0 ; System ;
rank: 798
score: 97.79270629882812
patch: found return true ;
rank: 798
score: 97.71354370117187
patch: previous = true ;
rank: 799
score: 98.25599975585938
patch: return ; ; }
rank: 799
score: 98.21519978841145
patch: do return true ; }
rank: 799
score: 98.18548583984375
patch: return true ) ; }
rank: 799
score: 97.71273193359374
patch: . return ( ;
rank: 800
score: 98.27620152064732
patch: CaMeL Range = true true ;
rank: 800
score: 97.83414713541667
patch: return - == 0 ;
rank: 800
score: 97.78933715820312
patch: return false )
rank: 800
score: 97.71241455078125
patch: connection = true ;
rank: 801
score: 98.61116027832031
patch: return ( true ) || true ;
rank: 801
score: 98.25437418619792
patch: return is CaMeL Alive ;
rank: 801
score: 97.8336690266927
patch: return ! return ) ;
rank: 801
score: 97.77054443359376
patch: Accessible return true ;
rank: 801
score: 97.71183471679687
patch: Detected = true ;
rank: 802
score: 98.27490234375
patch: CaMeL String return return true ;
rank: 802
score: 98.11079915364583
patch: return ch >= 0 ;
rank: 802
score: 97.83115234375
patch: return return $NUMBER$ ;
rank: 802
score: 97.77022705078124
patch: return ! null ;
rank: 802
score: 97.71119995117188
patch: scan = true ;
rank: 803
score: 98.6009750366211
patch: return ch instanceof char [ ] ;
rank: 803
score: 98.27483258928571
patch: CaMeL String return true ; ;
rank: 803
score: 98.25308227539062
patch: return is CaMeL Sealed ;
rank: 803
score: 98.20849609375
patch: return . true ; }
rank: 803
score: 98.18213907877605
patch: . return ; } }
rank: 803
score: 98.10629272460938
patch: break ? return false ;
rank: 803
score: 97.82919311523438
patch: return ! $NUMBER$ ; ;
rank: 803
score: 97.76392822265625
patch: ch = cs ;
rank: 804
score: 98.60029602050781
patch: return ( ch instanceof String ) ;
rank: 804
score: 98.24637858072917
patch: return is CaMeL Numeric ;
rank: 804
score: 98.20699055989583
patch: return 1 ; } }
rank: 804
score: 97.82809448242188
patch: return ) + true ;
rank: 804
score: 97.76264038085938
patch: contains = true ;
rank: 804
score: 97.70851440429688
patch: just return true ;
rank: 805
score: 98.59757995605469
patch: return ch == ch . ch ;
rank: 805
score: 98.27056884765625
patch: return super . true ;
rank: 805
score: 98.24530029296875
patch: . . return true ;
rank: 805
score: 98.206787109375
patch: return contains = true ;
rank: 805
score: 97.85709228515626
patch: return = false ;
rank: 805
score: 97.82590738932292
patch: return $NUMBER$ ; true ;
rank: 805
score: 97.76158447265625
patch: match return true ;
rank: 805
score: 97.70689086914062
patch: if return true ;
rank: 806
score: 98.26590576171876
patch: return new true ;
rank: 806
score: 98.2445068359375
patch: return is ;
rank: 806
score: 98.17026774088542
patch: 1 return true ; }
rank: 806
score: 97.82588704427083
patch: return - $NUMBER$ ; ;
rank: 806
score: 97.76124267578125
patch: tmp return true ;
rank: 806
score: 97.70484619140625
patch: surface = true ;
rank: 807
score: 98.58582305908203
patch: return null + ch == ch ;
rank: 807
score: 98.26104736328125
patch: CaMeL Exception = null ;
rank: 807
score: 98.24441528320312
patch: return ; ; } ;
rank: 807
score: 98.20580037434895
patch: state ! return true ;
rank: 807
score: 97.8257344563802
patch: return null + true ;
rank: 807
score: 97.70135498046875
patch: tx = true ;
rank: 808
score: 98.2568359375
patch: CaMeL Throwable = true ;
rank: 808
score: 98.24354044596355
patch: return return is ; }
rank: 808
score: 98.20554606119792
patch: return ch && true ;
rank: 808
score: 98.16933186848958
patch: return i > true ;
rank: 808
score: 97.84412841796875
patch: return == false ;
rank: 808
score: 97.82568359375
patch: return ; return ; {
rank: 808
score: 97.75816040039062
patch: s return false ;
rank: 808
score: 97.70086669921875
patch: , return false ;
rank: 809
score: 98.25581868489583
patch: CaMeL i return true ;
rank: 809
score: 98.24146525065105
patch: return is true * /
rank: 809
score: 98.20346069335938
patch: exception return true ; }
rank: 809
score: 98.16632080078125
patch: Tools . return true ;
rank: 809
score: 97.82405598958333
patch: return size return 0 ;
rank: 809
score: 97.70042724609375
patch: attach = true ;
rank: 810
score: 98.57257080078125
patch: return ( value == ch ) ;
rank: 810
score: 98.2538553873698
patch: return new return false ;
rank: 810
score: 98.23598225911458
patch: return true ; if ;
rank: 810
score: 98.20330810546875
patch: return ! ( true ;
rank: 810
score: 98.16531372070312
patch: return this . ; }
rank: 810
score: 98.08450317382812
patch: return false return false ;
rank: 810
score: 97.82377115885417
patch: return 0 return 0 ;
rank: 810
score: 97.74185791015626
patch: set return false ;
rank: 810
score: 97.69906616210938
patch: subroutine = true ;
rank: 811
score: 98.23398844401042
patch: return return || true ;
rank: 811
score: 97.83221435546875
patch: return ( this ;
rank: 811
score: 97.82363891601562
patch: return length ; break ;
rank: 811
score: 97.738671875
patch: Multireturn true ;
rank: 811
score: 97.6988525390625
patch: schema = true ;
rank: 812
score: 98.24810791015625
patch: true { return true ;
rank: 812
score: 98.19762573242187
patch: v return true ;
rank: 812
score: 98.16265869140625
patch: return ( ch == ;
rank: 812
score: 97.69825439453125
patch: queued = true ;
rank: 813
score: 98.23824055989583
patch: return new && false ;
rank: 813
score: 98.19390258789062
patch: break true ; }
rank: 813
score: 97.82122802734375
patch: return ; = $NUMBER$ ;
rank: 813
score: 97.73087768554687
patch: Plane = false ;
rank: 813
score: 97.69414672851562
patch: sb = true ;
rank: 814
score: 98.2306416829427
patch: return return ; } }
rank: 814
score: 98.19188232421875
patch: switch ( cs )
rank: 814
score: 97.82117716471355
patch: return matches return 0 ;
rank: 814
score: 97.81915283203125
patch: static return false ;
rank: 814
score: 97.69296875
patch: controller = true ;
rank: 815
score: 98.2259012858073
patch: return false ; while ;
rank: 815
score: 98.22097778320312
patch: CaMeL Throwable return true ;
rank: 815
score: 98.07993570963542
patch: result = return false ;
rank: 815
score: 97.812158203125
patch: return this false ;
rank: 815
score: 97.72783203125
patch: return ! break ;
rank: 815
score: 97.69187622070312
patch: retval = true ;
rank: 816
score: 98.2250264485677
patch: return ; } return ;
rank: 816
score: 98.17750854492188
patch: return return ; }
rank: 816
score: 98.07894897460938
patch: return length > 0 ;
rank: 816
score: 97.72505187988281
patch: throw false ;
rank: 816
score: 97.69046020507812
patch: m = null ;
rank: 817
score: 98.22500610351562
patch: return ; || true ;
rank: 817
score: 98.21898396809895
patch: return ; return null ;
rank: 817
score: 98.1727783203125
patch: target return true ;
rank: 817
score: 97.81913248697917
patch: return matches return true ;
rank: 817
score: 97.72317504882812
patch: try return true ;
rank: 817
score: 97.68997802734376
patch: evaluator = true ;
rank: 818
score: 98.22210693359375
patch: return false ; } finally
rank: 818
score: 98.21896362304688
patch: return null ; ; ;
rank: 818
score: 98.15249633789062
patch: return ! ! ; }
rank: 818
score: 97.79343872070312
patch: Plane break false ;
rank: 818
score: 97.716748046875
patch: return - 0 ;
rank: 818
score: 97.6885986328125
patch: removed = true ;
rank: 819
score: 98.22085571289062
patch: return ; return ; }
rank: 819
score: 98.21726481119792
patch: CaMeL Number = false ;
rank: 819
score: 98.16683959960938
patch: break = true ;
rank: 819
score: 98.15121459960938
patch: return true ; / ;
rank: 819
score: 97.81265258789062
patch: return is return ) ;
rank: 819
score: 97.79075927734375
patch: contains = false ;
rank: 819
score: 97.68859100341797
patch: ? * /
rank: 820
score: 98.55164337158203
patch: return this . ch == ch ;
rank: 820
score: 98.2103271484375
patch: return true ; true *
rank: 820
score: 97.81083170572917
patch: return size != false ;
rank: 820
score: 97.78925170898438
patch: return . false ;
rank: 820
score: 97.71537475585937
patch: return ( ch ;
rank: 820
score: 97.68739013671875
patch: thread = true ;
rank: 821
score: 98.20819091796875
patch: CaMeL Class = true ;
rank: 821
score: 98.15283203125
patch: p return true ;
rank: 821
score: 97.81076049804688
patch: return equals != 0 ;
rank: 821
score: 97.7885498046875
patch: return FALSE ; }
rank: 821
score: 97.687158203125
patch: used = true ;
rank: 822
score: 98.20962524414062
patch: return is CaMeL Whitespace ;
rank: 822
score: 98.20225016276042
patch: CaMeL arraycopy = true ;
rank: 822
score: 98.1478271484375
patch: break ;
rank: 822
score: 98.06331380208333
patch: return false = true ;
rank: 822
score: 97.78522338867188
patch: / return false ;
rank: 822
score: 97.68687133789062
patch: email = true ;
rank: 823
score: 97.776953125
patch: Plane throw null ;
rank: 823
score: 97.70440063476562
patch: cached return true ;
rank: 823
score: 97.686572265625
patch: popup = true ;
rank: 824
score: 98.54180908203125
patch: return ( null == ch ) ;
rank: 824
score: 98.20180257161458
patch: return is true break ;
rank: 824
score: 98.19952392578125
patch: CaMeL out return true ;
rank: 824
score: 98.14432779947917
patch: return true && ; }
rank: 824
score: 98.14391479492187
patch: handler return true ;
rank: 824
score: 97.7029541015625
patch: return null ? true
rank: 824
score: 97.68612670898438
patch: = true ) ;
rank: 825
score: 98.19512939453125
patch: return this . return ;
rank: 825
score: 98.18949381510417
patch: CaMeL Category return true ;
rank: 825
score: 98.14329223632812
patch: res return true ;
rank: 825
score: 97.80703735351562
patch: return != 1 ; ;
rank: 825
score: 97.77097778320312
patch: return case false ;
rank: 825
score: 97.70155639648438
patch: return false } }
rank: 825
score: 97.685107421875
patch: update = true ;
rank: 826
score: 98.53882598876953
patch: assert ( ch == ch ) ;
rank: 826
score: 98.14275512695312
patch: if ( ch ==
rank: 826
score: 98.14156087239583
patch: return i >= ; }
rank: 826
score: 98.04441324869792
patch: return is CaMeL Empty (
rank: 826
score: 97.80474853515625
patch: return $NUMBER$ ; ; ;
rank: 826
score: 97.76937255859374
patch: return false ; {
rank: 826
score: 97.68242797851562
patch: = ; break ;
rank: 827
score: 98.13949584960938
patch: . * return true ;
rank: 827
score: 97.80454508463542
patch: return ) ; true ;
rank: 827
score: 97.7639404296875
patch: l = true ;
rank: 827
score: 97.69710693359374
patch: if ( ch !=
rank: 827
score: 97.68135986328124
patch: service = true ;
rank: 828
score: 98.53567504882812
patch: return ( $STRING$ != ch ) ;
rank: 828
score: 98.18813069661458
patch: return is ; return ;
rank: 828
score: 98.1768798828125
patch: CaMeL append = true ;
rank: 828
score: 98.13943481445312
patch: b = true ; ;
rank: 828
score: 97.80031331380208
patch: return ; = 1 ;
rank: 828
score: 97.69622192382812
patch: return true & false
rank: 828
score: 97.681201171875
patch: writer = true ;
rank: 829
score: 98.1729024251302
patch: return new is ) ;
rank: 829
score: 98.13916015625
patch: c = true ; }
rank: 829
score: 98.12577514648437
patch: break + 1 ;
rank: 829
score: 97.79954020182292
patch: return 0 != 0 ;
rank: 829
score: 97.76065673828126
patch: ! throw null ;
rank: 829
score: 97.6784423828125
patch: border = true ;
rank: 830
score: 98.17237345377605
patch: return new true true ;
rank: 830
score: 98.13861083984375
patch: p = true ; }
rank: 830
score: 97.79878743489583
patch: return && return true ;
rank: 830
score: 97.68222045898438
patch: ( cs )
rank: 830
score: 97.6782958984375
patch: running = true ;
rank: 831
score: 98.18320719401042
patch: return ; , * /
rank: 831
score: 98.1721700032552
patch: CaMeL Float return true ;
rank: 831
score: 98.13845825195312
patch: area . return true ;
rank: 831
score: 98.12078247070312
patch: v = true ;
rank: 831
score: 97.7976582845052
patch: return ! != 0 ;
rank: 831
score: 97.76016845703126
patch: c = cs ;
rank: 831
score: 97.6743896484375
patch: carry = true ;
rank: 832
score: 98.52733612060547
patch: return ch == ch . $STRING$ ;
rank: 832
score: 98.11296997070312
patch: exception return true ;
rank: 832
score: 97.7972412109375
patch: return 0 & true ;
rank: 832
score: 97.75645751953125
patch: break return false ;
rank: 832
score: 97.67244262695313
patch: LF = true ;
rank: 833
score: 98.1798604329427
patch: return return ) ; }
rank: 833
score: 98.13265991210938
patch: return true ; default ;
rank: 833
score: 98.10584716796875
patch: found = true ;
rank: 833
score: 97.79514567057292
patch: return 0 = true ;
rank: 833
score: 97.7529296875
patch: continue return true ;
rank: 833
score: 97.67130126953126
patch: matcher = true ;
rank: 833
score: 97.65521240234375
patch: return null )
rank: 834
score: 98.52466583251953
patch: return ( cs == $STRING$ ) ;
rank: 834
score: 98.17748006184895
patch: return return ; * /
rank: 834
score: 98.16300455729167
patch: CaMeL List . true ;
rank: 834
score: 98.12923177083333
patch: return ! ; } ;
rank: 834
score: 97.7936503092448
patch: return false + 0 ;
rank: 834
score: 97.67109375
patch: tm = true ;
rank: 835
score: 98.16224161783855
patch: CaMeL i = true ;
rank: 835
score: 97.79220581054688
patch: return - == 1 ;
rank: 835
score: 97.75155639648438
patch: break return true ;
rank: 835
score: 97.67078247070313
patch: bp = true ;
rank: 835
score: 97.56986999511719
patch: throw true ;
rank: 836
score: 98.1761474609375
patch: return ; ; break ;
rank: 836
score: 98.1614501953125
patch: CaMeL Range true ;
rank: 836
score: 98.09556274414062
patch: if ( false )
rank: 836
score: 97.79015096028645
patch: return 1 . true ;
rank: 836
score: 97.75108642578125
patch: return false ; else
rank: 836
score: 97.50581359863281
patch: throw $NUMBER$ ?
rank: 837
score: 98.52215576171875
patch: return ch == ch ; } }
rank: 837
score: 98.15882364908855
patch: return new return ) ;
rank: 837
score: 98.09542236328124
patch: logger return true ;
rank: 837
score: 97.67034912109375
patch: distribution = true ;
rank: 837
score: 97.50373840332031
patch: result ++ ;
rank: 838
score: 98.16680908203125
patch: CaMeL set return true ;
rank: 838
score: 98.07053833007812
patch: return break ; }
rank: 838
score: 97.78488159179688
patch: ( false ) ;
rank: 838
score: 97.74765014648438
patch: return * /
rank: 838
score: 97.669873046875
patch: rule = true ;
rank: 839
score: 98.51617431640625
patch: return ch == ch . null ;
rank: 839
score: 98.1566874186198
patch: return null ; true ;
rank: 839
score: 98.05968017578125
patch: / return true ;
rank: 839
score: 97.66851196289062
patch: setting = true ;
rank: 840
score: 98.16253662109375
patch: return return is ; ;
rank: 840
score: 98.05806884765624
patch: switch ( i )
rank: 840
score: 97.66637573242187
patch: cell = true ;
rank: 840
score: 97.47451782226562
patch: ( ch )
rank: 841
score: 98.05202026367188
patch: return true : ;
rank: 841
score: 97.78004964192708
patch: return ! return $NUMBER$ ;
rank: 841
score: 97.666064453125
patch: . if ( ;
rank: 841
score: 97.4519271850586
patch: continue true ;
rank: 842
score: 98.50904846191406
patch: return ( name == ch ) ;
rank: 842
score: 98.1573486328125
patch: return null ; return ;
rank: 842
score: 98.116455078125
patch: return ! is true ;
rank: 842
score: 97.77982788085937
patch: CaMeL return ) ;
rank: 842
score: 97.66587524414062
patch: operator = true ;
rank: 842
score: 97.44780731201172
patch: } break ;
rank: 843
score: 98.1559346516927
patch: return true ; true }
rank: 843
score: 98.11574300130208
patch: return true , true ;
rank: 843
score: 97.77825927734375
patch: return == ) ; ;
rank: 843
score: 97.74259643554687
patch: w = true ;
rank: 843
score: 97.66583251953125
patch: ( return true )
rank: 844
score: 98.15453084309895
patch: return false ; true *
rank: 844
score: 98.04464111328124
patch: buffer return true ;
rank: 844
score: 97.77823893229167
patch: return false ; ; else
rank: 844
score: 97.741455078125
patch: method return false ;
rank: 844
score: 97.66419677734375
patch: act = true ;
rank: 845
score: 98.1544901529948
patch: CaMeL read = true ;
rank: 845
score: 98.1521708170573
patch: ( ; return false ;
rank: 845
score: 98.11508178710938
patch: if ( true ; }
rank: 845
score: 98.04402465820313
patch: break false ; }
rank: 845
score: 97.77757568359375
patch: return 1 ; ;
rank: 845
score: 97.73981323242188
patch: continue return false ;
rank: 845
score: 97.66107177734375
patch: block = true ;
rank: 845
score: 97.42767333984375
patch: return break ;
rank: 846
score: 98.49211120605469
patch: return cs . length > 0 ;
rank: 846
score: 98.15367635091145
patch: CaMeL FALSE = true ;
rank: 846
score: 98.15028889973958
patch: return return 0 ; }
rank: 846
score: 98.04358520507813
patch: return cs . ;
rank: 846
score: 97.77534993489583
patch: return is , true ;
rank: 846
score: 97.73655395507812
patch: m = cs ;
rank: 846
score: 97.66033325195312
patch: cb = true ;
rank: 846
score: 97.42747497558594
patch: assert true ;
rank: 847
score: 98.49177551269531
patch: return / * ch == ch ;
rank: 847
score: 98.15308634440105
patch: CaMeL List != null ;
rank: 847
score: 98.03720092773438
patch: return ! cs ;
rank: 847
score: 97.77475992838542
patch: return 0 . FALSE ;
rank: 847
score: 97.73350219726562
patch: Plane return this ;
rank: 847
score: 97.65977172851562
patch: binding = true ;
rank: 847
score: 97.4265365600586
patch: throw 1 ;
rank: 848
score: 98.49032592773438
patch: return ( cs instanceof String ) ;
rank: 848
score: 98.14278157552083
patch: return true ; for true
rank: 848
score: 98.03695068359374
patch: get return true ;
rank: 848
score: 97.9048583984375
patch: al return false ;
rank: 848
score: 97.77339680989583
patch: return return == 0 ;
rank: 848
score: 97.73114013671875
patch: end = true ;
rank: 848
score: 97.658740234375
patch: test = true ;
rank: 848
score: 97.42160034179688
patch: return FALSE ;
rank: 849
score: 98.48834991455078
patch: return ch . length > 0 ;
rank: 849
score: 98.15133666992188
patch: return this != null ;
rank: 849
score: 98.14101155598958
patch: return ; && true ;
rank: 849
score: 97.77108764648438
patch: CaMeL sum return true ;
rank: 849
score: 97.73111572265626
patch: return ++ i ;
rank: 849
score: 97.65729370117188
patch: st = true ;
rank: 850
score: 98.48506164550781
patch: return ( ch != true ) ;
rank: 850
score: 98.14979044596355
patch: return this != true ;
rank: 850
score: 98.03369750976563
patch: return ( ch ==
rank: 850
score: 97.7692362467448
patch: CaMeL size = true ;
rank: 850
score: 97.6533935546875
patch: reader = true ;
rank: 851
score: 98.48480224609375
patch: return ( cs == null ) ;
rank: 851
score: 98.13915405273437
patch: return return is ;
rank: 851
score: 98.10711669921875
patch: area return true ; }
rank: 851
score: 98.02777099609375
patch: break true ;
rank: 851
score: 97.7677714029948
patch: return ; = ; /
rank: 851
score: 97.72872924804688
patch: return false ) ;
rank: 851
score: 97.65304565429688
patch: tds = true ;
rank: 851
score: 97.35906219482422
patch: ! break ;
rank: 852
score: 98.0265869140625
patch: return ! } }
rank: 852
score: 97.7675069173177
patch: return 1 ; break ;
rank: 852
score: 97.65217895507813
patch: rect = true ;
rank: 852
score: 97.34822082519531
patch: return ch !=
rank: 853
score: 98.14212036132812
patch: return true ; ; else
rank: 853
score: 98.10597737630208
patch: return ( ; ; }
rank: 853
score: 98.018408203125
patch: connection return true ;
rank: 853
score: 97.76566569010417
patch: return 0 . $STRING$ ;
rank: 853
score: 97.3410873413086
patch: System != false
rank: 854
score: 98.13697306315105
patch: CaMeL equals return true ;
rank: 854
score: 98.13458251953125
patch: return is true ; ;
rank: 854
score: 98.10542805989583
patch: return i >= 0 ;
rank: 854
score: 98.016552734375
patch: e return true ;
rank: 854
score: 97.76507568359375
patch: CaMeL filter = true ;
rank: 854
score: 97.72127685546874
patch: Basic return false ;
rank: 854
score: 97.65128173828126
patch: ctx = true ;
rank: 854
score: 97.32783508300781
patch: try { true
rank: 855
score: 98.43324497767857
patch: return ch != ch ; }
rank: 855
score: 98.10457356770833
patch: MAXIMUM : return true ;
rank: 855
score: 97.76449584960938
patch: ; { return false ;
rank: 855
score: 97.71793823242187
patch: Plane / * /
rank: 855
score: 97.65084228515624
patch: if ( true ;
rank: 855
score: 97.32305145263672
patch: return { ch
rank: 856
score: 98.41794840494792
patch: return $STRING$ == ch ;
rank: 856
score: 98.13321940104167
patch: CaMeL Exception return null ;
rank: 856
score: 98.12703450520833
patch: return is return ; ;
rank: 856
score: 98.10421752929688
patch: ? ; return true ;
rank: 856
score: 97.76300048828125
patch: ; ; return true ;
rank: 856
score: 97.71317138671876
patch: Any return false ;
rank: 856
score: 97.6499267578125
patch: or return true ;
rank: 856
score: 97.32128143310547
patch: if ( }
rank: 857
score: 98.41221400669643
patch: return return ch != ch ;
rank: 857
score: 98.13147989908855
patch: CaMeL Null return false ;
rank: 857
score: 98.12582397460938
patch: return is CaMeL Primitive ;
rank: 857
score: 98.0994873046875
patch: return ; ; ; }
rank: 857
score: 98.00610961914063
patch: finally return true ;
rank: 857
score: 97.7622578938802
patch: return matches != 0 ;
rank: 857
score: 97.71188354492188
patch: return return 0 ;
rank: 857
score: 97.6498779296875
patch: cus = true ;
rank: 857
score: 97.31131744384766
patch: return value ;
rank: 858
score: 98.13051350911458
patch: return ( is ) ;
rank: 858
score: 98.1245829264323
patch: return && true ; }
rank: 858
score: 97.76160685221355
patch: return length && true ;
rank: 858
score: 97.64948120117188
patch: ( ) * /
rank: 858
score: 97.30470275878906
patch: ch ++ ;
rank: 859
score: 98.40393938337054
patch: return ch != ch ) ;
rank: 859
score: 98.12464396158855
patch: CaMeL ! return true ;
rank: 859
score: 98.1238505045573
patch: return ; ; * /
rank: 859
score: 98.094482421875
patch: return i < ; }
rank: 859
score: 98.00224609375
patch: data return true ;
rank: 859
score: 97.70701293945312
patch: end = false ;
rank: 860
score: 97.99888305664062
patch: e = true ;
rank: 860
score: 97.75978597005208
patch: CaMeL += ) ] ;
rank: 860
score: 97.70601806640624
patch: return $NUMBER$ false ;
rank: 860
score: 97.64266357421874
patch: if ; break ;
rank: 861
score: 98.12154134114583
patch: CaMeL Pair = true ;
rank: 861
score: 98.1153055826823
patch: CaMeL Runtime return true ;
rank: 861
score: 97.99844970703126
patch: return boolean true ;
rank: 861
score: 97.75907389322917
patch: return read return true ;
rank: 861
score: 97.64151611328126
patch: spec = true ;
rank: 861
score: 97.28667449951172
patch: continue false ;
rank: 862
score: 98.12010701497395
patch: true { return false ;
rank: 862
score: 98.0936279296875
patch: return ! contains ; }
rank: 862
score: 97.99738159179688
patch: return true ? ;
rank: 862
score: 97.75795491536458
patch: return true ; ; true
rank: 862
score: 97.70126342773438
patch: Multireturn false ;
rank: 862
score: 97.64144287109374
patch: namespace = true ;
rank: 862
score: 97.28287506103516
patch: else break ;
rank: 863
score: 98.11683146158855
patch: return return ) true ;
rank: 863
score: 98.11204020182292
patch: return ; } } else
rank: 863
score: 98.0904541015625
patch: return is ; ; }
rank: 863
score: 97.98751068115234
patch: return ! }
rank: 863
score: 97.84589233398438
patch: log return true ;
rank: 863
score: 97.75779215494792
patch: CaMeL catch return ) ;
rank: 863
score: 97.69961547851562
patch: return 0 false ;
rank: 863
score: 97.6414306640625
patch: sample = true ;
rank: 864
score: 98.3928731282552
patch: / / return true ;
rank: 864
score: 98.11663818359375
patch: CaMeL native return true ;
rank: 864
score: 98.11149088541667
patch: return return ; ; }
rank: 864
score: 98.08660888671875
patch: / * return true ;
rank: 864
score: 97.8427978515625
patch: search CaMeL Chars [
rank: 864
score: 97.7538553873698
patch: return size ; break ;
rank: 864
score: 97.699560546875
patch: method return true ;
rank: 864
score: 97.64024658203125
patch: Lisp = true ;
rank: 864
score: 97.26873016357422
patch: System != true
rank: 865
score: 98.11569213867188
patch: CaMeL out = true ;
rank: 865
score: 97.84147338867187
patch: search CaMeL Chars .
rank: 865
score: 97.75045776367188
patch: return size && true ;
rank: 865
score: 97.69727783203125
patch: b = false ;
rank: 865
score: 97.6385009765625
patch: root = true ;
rank: 866
score: 98.11246744791667
patch: CaMeL Error = false ;
rank: 866
score: 97.98116455078124
patch: b return false ;
rank: 866
score: 97.75026448567708
patch: return size ; ; ;
rank: 866
score: 97.69686279296874
patch: Basic return true ;
rank: 866
score: 97.63729858398438
patch: timer = true ;
rank: 866
score: 97.24314880371094
patch: return ( (
rank: 867
score: 97.75022379557292
patch: return arraycopy return true ;
rank: 867
score: 97.69487915039062
patch: return * false ;
rank: 867
score: 97.63582763671874
patch: gui = true ;
rank: 868
score: 98.10910034179688
patch: return false ; if ;
rank: 868
score: 98.08139038085938
patch: return true ^ true ;
rank: 868
score: 97.97076416015625
patch: color return true ;
rank: 868
score: 97.74984741210938
patch: return ; return FALSE ;
rank: 868
score: 97.6922119140625
patch: Plane * * /
rank: 868
score: 97.63450927734375
patch: bin = true ;
rank: 868
score: 97.2223612467448
patch: break ?
rank: 869
score: 98.10745239257812
patch: CaMeL byte return true ;
rank: 869
score: 98.08067016601562
patch: return true * /
rank: 869
score: 97.97022705078125
patch: break && true ;
rank: 869
score: 97.81957397460937
patch: update return true ;
rank: 869
score: 97.69193115234376
patch: return ^ false ;
rank: 869
score: 97.63385620117188
patch: annos = true ;
rank: 869
score: 97.22025299072266
patch: throw 0 ;
rank: 870
score: 98.1070556640625
patch: CaMeL FALSE return true ;
rank: 870
score: 98.1051737467448
patch: CaMeL List return return ;
rank: 870
score: 97.96702880859375
patch: object return true ;
rank: 870
score: 97.79649047851562
patch: log return false ;
rank: 870
score: 97.74525960286458
patch: return ; return ; *
rank: 870
score: 97.690625
patch: return == true ;
rank: 870
score: 97.633154296875
patch: fm = true ;
rank: 870
score: 97.21529388427734
patch: return ch .
rank: 871
score: 98.10458374023438
patch: return ; , break ;
rank: 871
score: 98.07427978515625
patch: return ; } true ;
rank: 871
score: 97.96207885742187
patch: return is $NUMBER$ ;
rank: 871
score: 97.74498494466145
patch: return == 1 ; ;
rank: 871
score: 97.6890869140625
patch: tmp = true ;
rank: 871
score: 97.63142700195313
patch: JNI = true ;
rank: 872
score: 97.9619140625
patch: r return true ;
rank: 872
score: 97.74436442057292
patch: return is ; ; ;
rank: 872
score: 97.68828125
patch: return ++ j ;
rank: 872
score: 97.63082275390624
patch: display = true ;
rank: 872
score: 97.19354248046875
patch: ( true )
rank: 873
score: 98.102294921875
patch: CaMeL TRUE = true ;
rank: 873
score: 98.07159423828125
patch: || return true ; }
rank: 873
score: 97.9611083984375
patch: return { true ;
rank: 873
score: 97.62904052734375
patch: $NUMBER$ ? * /
rank: 873
score: 97.1899642944336
patch: return continue ;
rank: 874
score: 98.0998291015625
patch: return true ; else
rank: 874
score: 97.77874145507812
patch: assert return true ;
rank: 874
score: 97.74343872070312
patch: return ; = null ;
rank: 874
score: 97.6843505859375
patch: return this true ;
rank: 874
score: 97.62823486328125
patch: = true true ;
rank: 874
score: 97.1820297241211
patch: LOG != null
rank: 875
score: 98.10018920898438
patch: return ( true ; ;
rank: 875
score: 97.9572265625
patch: break . break ;
rank: 875
score: 97.74308268229167
patch: } ; return true ;
rank: 875
score: 97.68361206054688
patch: m = false ;
rank: 875
score: 97.62811889648438
patch: cur = true ;
rank: 875
score: 97.17963409423828
patch: throw 0 ?
rank: 876
score: 98.06807454427083
patch: && return true ; }
rank: 876
score: 97.74181111653645
patch: return equals return 0 ;
rank: 876
score: 97.68156127929687
patch: return continue ; }
rank: 876
score: 97.6274658203125
patch: &= true * /
rank: 877
score: 98.09635416666667
patch: this . return false ;
rank: 877
score: 98.06702270507813
patch: return ! is ;
rank: 877
score: 97.73744710286458
patch: return return == 1 ;
rank: 877
score: 97.68035888671875
patch: answer = true ;
rank: 877
score: 97.62627563476562
patch: . ; * /
rank: 878
score: 98.09572347005208
patch: return ; / * ;
rank: 878
score: 98.06325276692708
patch: return true * / ;
rank: 878
score: 97.9544921875
patch: return ! ! ;
rank: 878
score: 97.73714192708333
patch: CaMeL protected return true ;
rank: 878
score: 97.62625732421876
patch: original = true ;
rank: 878
score: 97.16584014892578
patch: return ! ch
rank: 879
score: 98.09544881184895
patch: CaMeL Range return false ;
rank: 879
score: 97.95444946289062
patch: return ! ) ;
rank: 879
score: 97.73701985677083
patch: return 1 ; true ;
rank: 879
score: 97.67945556640625
patch: throw false ; }
rank: 879
score: 97.62588500976562
patch: elt = true ;
rank: 879
score: 97.16229248046875
patch: return ) )
rank: 880
score: 98.30511474609375
patch: return null + ch ;
rank: 880
score: 98.09420776367188
patch: return new is ( ;
rank: 880
score: 97.73648071289062
patch: ; if return true ;
rank: 880
score: 97.62431030273437
patch: owner = true ;
rank: 880
score: 97.1611557006836
patch: return 0 )
rank: 881
score: 98.29915364583333
patch: return $STRING$ != ch ;
rank: 881
score: 98.09017944335938
patch: CaMeL name return true ;
rank: 881
score: 98.0477783203125
patch: z = true ;
rank: 881
score: 97.7355244954427
patch: return - != ) ;
rank: 881
score: 97.1229960123698
patch: return )
rank: 882
score: 98.09243774414062
patch: return is true * ;
rank: 882
score: 98.08665974934895
patch: CaMeL List != true ;
rank: 882
score: 97.945458984375
patch: val return true ;
rank: 882
score: 97.73549397786458
patch: return contains return 0 ;
rank: 882
score: 97.7305908203125
patch: error return true ;
rank: 882
score: 97.623291015625
patch: char = true ;
rank: 882
score: 97.04148356119792
patch: if (
rank: 883
score: 98.09175618489583
patch: return $NUMBER$ & true ;
rank: 883
score: 98.0822041829427
patch: return new return null ;
rank: 883
score: 98.03272705078125
patch: 64 return true ;
rank: 883
score: 97.944384765625
patch: System . break ;
rank: 883
score: 97.73531494140624
patch: return ) ; ;
rank: 883
score: 97.7303955078125
patch: process return true ;
rank: 883
score: 97.62310791015625
patch: font = true ;
rank: 883
score: 96.96036783854167
patch: break false
rank: 884
score: 98.28158569335938
patch: return is != ch ;
rank: 884
score: 98.08135986328125
patch: return new is false ;
rank: 884
score: 97.94349365234375
patch: expr return true ;
rank: 884
score: 97.73504638671875
patch: ( true ) ; ;
rank: 884
score: 97.62063598632812
patch: *= true ;
rank: 884
score: 96.80423990885417
patch: return true
rank: 885
score: 98.08773803710938
patch: . return null ; }
rank: 885
score: 97.94055938720703
patch: return return ;
rank: 885
score: 97.73426310221355
patch: return return & true ;
rank: 885
score: 97.7253173828125
patch: throw return true ;
rank: 885
score: 97.673486328125
patch: return true ; {
rank: 885
score: 97.62009887695312
patch: . true * /
rank: 885
score: 96.80385335286458
patch: return }
rank: 886
score: 98.2782694498698
patch: Multics return true ;
rank: 886
score: 98.08663940429688
patch: return return ( return ;
rank: 886
score: 97.67300415039062
patch: return case true ;
rank: 886
score: 97.61867065429688
patch: menu = true ;
rank: 886
score: 96.79022216796875
patch: LOG .
rank: 887
score: 98.0747782389323
patch: CaMeL Exception true return ;
rank: 887
score: 98.019873046875
patch: profile = true ;
rank: 887
score: 97.933837890625
patch: throw : * /
rank: 887
score: 96.74269612630208
patch: try {
rank: 888
score: 98.07423909505208
patch: CaMeL matches return true ;
rank: 888
score: 98.01827392578124
patch: d = true ;
rank: 888
score: 97.93239135742188
patch: node return true ;
rank: 888
score: 97.7292709350586
patch: return ; {
rank: 888
score: 97.717919921875
patch: error return false ;
rank: 888
score: 97.67188110351563
patch: Plane ! break ;
rank: 888
score: 97.61824340820313
patch: msg = true ;
rank: 888
score: 96.74203491210938
patch: ++ ;
rank: 889
score: 98.26991780598958
patch: / / return false ;
rank: 889
score: 98.08461507161458
patch: return is CaMeL Interrupted ;
rank: 889
score: 97.9319580078125
patch: res = true ;
rank: 889
score: 97.7276611328125
patch: return $NUMBER$ && true ;
rank: 889
score: 97.71580505371094
patch: return true ?
rank: 889
score: 97.61708984375
patch: cmp = true ;
rank: 889
score: 96.71553548177083
patch: break )
rank: 890
score: 98.07045491536458
patch: CaMeL byte = true ;
rank: 890
score: 97.990576171875
patch: a = true ;
rank: 890
score: 97.93157958984375
patch: switch ( true )
rank: 890
score: 97.72684733072917
patch: return size ; true ;
rank: 890
score: 97.66608276367188
patch: ( cs ) ;
rank: 890
score: 97.61676025390625
patch: workspace = true ;
rank: 890
score: 96.69020589192708
patch: break true
rank: 891
score: 98.06992594401042
patch: return this == true ;
rank: 891
score: 97.93080444335938
patch: return ) ; }
rank: 891
score: 97.72683715820312
patch: return - != $NUMBER$ ;
rank: 891
score: 97.71513061523437
patch: statement return true ;
rank: 891
score: 97.66356811523437
patch: ! / * /
rank: 891
score: 97.6149658203125
patch: . return is ;
rank: 891
score: 96.67708333333333
patch: Plane _
rank: 892
score: 97.92747802734375
patch: buf return true ;
rank: 892
score: 97.72664388020833
patch: return next return 0 ;
rank: 892
score: 97.66195678710938
patch: return false ; )
rank: 892
score: 97.6146240234375
patch: || true * /
rank: 892
score: 96.66097005208333
patch: ( )
rank: 893
score: 98.0793965657552
patch: return is CaMeL Equals ;
rank: 893
score: 97.92618408203126
patch: return ( cs CaMeL
rank: 893
score: 97.7060546875
patch: Thread return true ;
rank: 893
score: 97.61439819335938
patch: toffset = true ;
rank: 893
score: 96.65519205729167
patch: } }
rank: 894
score: 98.06637573242188
patch: CaMeL Exception throw true ;
rank: 894
score: 97.97359619140624
patch: Channel return true ;
rank: 894
score: 97.92539672851562
patch: byte return true ;
rank: 894
score: 97.719189453125
patch: return - $NUMBER$ ;
rank: 894
score: 97.70427856445312
patch: Array CaMeL Utils .
rank: 894
score: 97.65900268554688
patch: return false * /
rank: 894
score: 97.61341552734375
patch: ( true ) ;
rank: 894
score: 96.64140319824219
patch: }
rank: 895
score: 98.07430013020833
patch: return is return null ;
rank: 895
score: 97.96629028320312
patch: return ! ( ;
rank: 895
score: 97.92363891601562
patch: if ( ) {
rank: 895
score: 97.613330078125
patch: enabled = true ;
rank: 895
score: 97.59657287597656
patch: Plane break ;
rank: 895
score: 96.61568196614583
patch: return (
rank: 896
score: 97.69764404296875
patch: return ! 1 ;
rank: 896
score: 97.6118896484375
patch: login = true ;
rank: 896
score: 96.61063639322917
patch: return false
rank: 897
score: 98.07420857747395
patch: return null ; * /
rank: 897
score: 98.0572001139323
patch: CaMeL name = true ;
rank: 897
score: 97.92330322265624
patch: exception = true ;
rank: 897
score: 97.69498901367187
patch: logger return false ;
rank: 897
score: 97.61102294921875
patch: CaMeL return ; }
rank: 897
score: 97.49464416503906
patch: return * ;
rank: 897
score: 96.5274429321289
patch: !
rank: 898
score: 98.07351684570312
patch: return is ; } else
rank: 898
score: 97.92197875976562
patch: return true ] ;
rank: 898
score: 97.69168701171876
patch: warn return true ;
rank: 898
score: 97.6905029296875
patch: return ; true ;
rank: 898
score: 97.60970458984374
patch: fs = true ;
rank: 898
score: 96.50518798828125
patch: Plane )
rank: 899
score: 98.23379516601562
patch: return in == ch ;
rank: 899
score: 97.9152099609375
patch: throw ! true ;
rank: 899
score: 97.60677490234374
patch: ; break ; }
rank: 899
score: 96.4739990234375
patch: CaMeL Builder
rank: 900
score: 97.94698486328124
patch: 16 return true ;
rank: 900
score: 97.60538330078126
patch: impl = true ;
rank: 900
score: 96.43670654296875
patch: CaMeL Type
rank: 901
score: 98.07058715820312
patch: return is CaMeL Enum ;
rank: 901
score: 98.04200236002605
patch: CaMeL reverse return true ;
rank: 901
score: 97.60497436523437
patch: override = true ;
rank: 901
score: 96.41492716471355
patch: ! !
rank: 902
score: 98.0692647298177
patch: return is CaMeL Blank ;
rank: 902
score: 97.66690063476562
patch: return != ) ;
rank: 902
score: 97.60157470703125
patch: ev = true ;
rank: 902
score: 96.40932210286458
patch: return null
rank: 903
score: 98.03387451171875
patch: CaMeL iterator return true ;
rank: 903
score: 97.90939331054688
patch: new return true ;
rank: 903
score: 97.5992431640625
patch: render = true ;
rank: 903
score: 97.40011596679688
patch: Plane
rank: 903
score: 96.39856974283855
patch: logger .
rank: 904
score: 98.03294881184895
patch: CaMeL Range true return ;
rank: 904
score: 97.9092529296875
patch: return ( cs .
rank: 904
score: 97.64014282226563
patch: return false . ;
rank: 904
score: 97.59786376953124
patch: remote = true ;
rank: 904
score: 96.39791870117188
patch: result !
rank: 905
score: 98.03206380208333
patch: CaMeL sleep return true ;
rank: 905
score: 97.90328369140624
patch: read return true ;
rank: 905
score: 97.6222900390625
patch: return ! $NUMBER$ ;
rank: 905
score: 97.595166015625
patch: xml = true ;
rank: 905
score: 96.35695393880208
patch: break .
rank: 906
score: 98.03060913085938
patch: CaMeL Number = null ;
rank: 906
score: 97.902099609375
patch: this = true ;
rank: 906
score: 97.61463928222656
patch: CaMeL do .
rank: 906
score: 97.59313354492187
patch: ( ; * /
rank: 906
score: 96.34869384765625
patch: throw !
rank: 907
score: 98.0299784342448
patch: CaMeL abs return true ;
rank: 907
score: 97.90030517578126
patch: d return true ;
rank: 907
score: 97.59310302734374
patch: blob = true ;
rank: 907
score: 97.36595153808594
patch: contains * /
rank: 907
score: 96.3448486328125
patch: return this
rank: 908
score: 98.19386800130208
patch: return ch != cs ;
rank: 908
score: 98.02913411458333
patch: CaMeL close return true ;
rank: 908
score: 97.89992065429688
patch: super return true ;
rank: 908
score: 97.63397216796875
patch: return } }
rank: 908
score: 97.5998291015625
patch: ; return $NUMBER$ ;
rank: 908
score: 97.59262084960938
patch: tok = true ;
rank: 908
score: 97.353271484375
patch: break false ;
rank: 908
score: 96.29142252604167
patch: continue ?
rank: 909
score: 98.06130981445312
patch: return 0 ; } else
rank: 909
score: 97.90735473632813
patch: return ! ; ;
rank: 909
score: 97.59115600585938
patch: collection = true ;
rank: 909
score: 97.57442016601563
patch: return ; ; ;
rank: 909
score: 97.346435546875
patch: return TRUE ;
rank: 909
score: 96.28126017252605
patch: cs )
rank: 910
score: 98.02869669596355
patch: CaMeL next return true ;
rank: 910
score: 97.5900390625
patch: boot = true ;
rank: 910
score: 97.56239013671875
patch: return == ) ;
rank: 910
score: 97.3344955444336
patch: Plane * /
rank: 910
score: 96.24881998697917
patch: return !
rank: 911
score: 98.0607666015625
patch: return is ; ;
rank: 911
score: 98.02823893229167
patch: CaMeL synchronized return true ;
rank: 911
score: 97.58850708007813
patch: seen = true ;
rank: 911
score: 97.56155395507812
patch: CaMeL do . ;
rank: 911
score: 97.30986785888672
patch: return true .
rank: 911
score: 96.21180216471355
patch: break &&
rank: 912
score: 98.02295532226563
patch: CaMeL List true ;
rank: 912
score: 97.89917602539063
patch: pt = true ;
rank: 912
score: 97.89368896484375
patch: handle return true ;
rank: 912
score: 97.5855712890625
patch: dp = true ;
rank: 912
score: 97.5594482421875
patch: return Math ;
rank: 912
score: 97.29754638671875
patch: return false .
rank: 912
score: 96.21067301432292
patch: continue ;
rank: 913
score: 98.17877197265625
patch: return ch > null ;
rank: 913
score: 98.05921427408855
patch: . . return false ;
rank: 913
score: 97.88999633789062
patch: cr = true ;
rank: 913
score: 97.58465576171875
patch: transport = true ;
rank: 913
score: 97.54739379882812
patch: return true . ;
rank: 913
score: 96.19655354817708
patch: throw ?
rank: 914
score: 98.17403157552083
patch: return ch <= ch ;
rank: 914
score: 97.88214111328125
patch: color = true ;
rank: 914
score: 97.58441772460938
patch: install = true ;
rank: 914
score: 97.5403076171875
patch: return != 1 ;
rank: 914
score: 96.16387939453125
patch: result
rank: 915
score: 98.05881754557292
patch: return is CaMeL Instance ;
rank: 915
score: 97.8895263671875
patch: break ( ) ;
rank: 915
score: 97.58404541015625
patch: cal = true ;
rank: 915
score: 97.53299560546876
patch: return ~ ) ;
rank: 915
score: 95.94034576416016
patch: else
rank: 916
score: 98.16505940755208
patch: return ch > ch ;
rank: 916
score: 97.889306640625
patch: if ( } }
rank: 916
score: 97.87216796875
patch: dispatcher = true ;
rank: 916
score: 97.23758951822917
patch: Plane !
rank: 916
score: 95.81700134277344
patch: do
rank: 917
score: 98.01846313476562
patch: CaMeL Range true true ;
rank: 917
score: 97.40122985839844
patch: return / /
rank: 917
score: 95.74842071533203
patch: {
rank: 918
score: 98.05063883463542
patch: CaMeL set return false ;
rank: 918
score: 98.01816813151042
patch: return null != true ;
rank: 918
score: 97.58099365234375
patch: db = true ;
rank: 918
score: 97.4903076171875
patch: return ; { ;
rank: 918
score: 95.63702392578125
patch: return
rank: 919
score: 98.05015055338542
patch: CaMeL Thread return ; ;
rank: 919
score: 97.88551025390625
patch: return contains ; }
rank: 919
score: 97.57762451171875
patch: lump = true ;
rank: 919
score: 97.48452758789062
patch: return 0 . ;
rank: 919
score: 97.2223892211914
patch: true * /
rank: 919
score: 95.55904388427734
patch: false
rank: 920
score: 98.0172627766927
patch: return new is null ;
rank: 920
score: 97.88526000976563
patch: return return ( ;
rank: 920
score: 97.5761474609375
patch: container = true ;
rank: 920
score: 97.21235656738281
patch: / * /
rank: 920
score: 95.53018188476562
patch: s
rank: 921
score: 98.13736979166667
patch: return null != ch ;
rank: 921
score: 98.01305135091145
patch: CaMeL Float = true ;
rank: 921
score: 97.85213012695313
patch: channel = true ;
rank: 921
score: 97.575537109375
patch: entity = true ;
rank: 921
score: 97.47509765625
patch: return ~ 1 ;
rank: 921
score: 97.35457611083984
patch: return false ?
rank: 921
score: 95.52954864501953
patch: ret
rank: 922
score: 98.0370849609375
patch: return return ; ;
rank: 922
score: 97.8833251953125
patch: source return true ;
rank: 922
score: 97.845751953125
patch: 1 return true ;
rank: 922
score: 97.57269287109375
patch: work = true ;
rank: 922
score: 97.34080505371094
patch: return contains ;
rank: 922
score: 95.47052001953125
patch: true
rank: 923
score: 98.02855224609375
patch: return ; * ;
rank: 923
score: 97.88311767578125
patch: return ( cs ;
rank: 923
score: 97.57237548828125
patch: cnt = true ;
rank: 923
score: 97.46139526367188
patch: return name ;
rank: 923
score: 97.17012786865234
patch: return this .
rank: 923
score: 95.38903045654297
patch: ;
rank: 924
score: 98.02744140625
patch: CaMeL List return ;
rank: 924
score: 98.00899251302083
patch: CaMeL ? return true ;
rank: 924
score: 97.46011962890626
patch: return == 1 ;
rank: 924
score: 97.15787506103516
patch: is * /
rank: 924
score: 95.31375122070312
patch: )
rank: 925
score: 98.02706298828124
patch: CaMeL Error return ;
rank: 925
score: 97.81995849609375
patch: ep = true ;
rank: 925
score: 97.57183227539062
patch: ef = true ;
rank: 925
score: 97.45904541015625
patch: return 0 ; /
rank: 925
score: 95.23973083496094
patch: b
rank: 926
score: 98.02097778320312
patch: CaMeL Thread return ;
rank: 926
score: 97.87650146484376
patch: z return true ;
rank: 926
score: 97.81756591796875
patch: data = true ;
rank: 926
score: 97.56881713867188
patch: body = true ;
rank: 926
score: 97.45694580078126
patch: CaMeL ( ) ;
rank: 926
score: 97.30701446533203
patch: return / ;
rank: 926
score: 97.15644073486328
patch: throw * /
rank: 926
score: 95.15951538085938
patch: static
rank: 927
score: 97.87533569335938
patch: o return true ;
rank: 927
score: 97.81040649414062
patch: if ( ! ;
rank: 927
score: 97.56785278320312
patch: native = true ;
rank: 927
score: 95.13902282714844
patch: continue
rank: 928
score: 97.9435302734375
patch: return this ; ;
rank: 928
score: 97.8071044921875
patch: return ! contains ;
rank: 928
score: 97.56723022460938
patch: sum = true ;
rank: 928
score: 97.44494018554687
patch: return 0 ; try
rank: 928
score: 95.09099578857422
patch: break
rank: 929
score: 94.96243286132812
patch: Object
rank: 930
score: 97.87100219726562
patch: match = true ;
rank: 930
score: 97.52436828613281
patch: &= false ;
rank: 930
score: 97.43878173828125
patch: return Character ;
rank: 930
score: 94.93302917480469
patch: Any
rank: 931
score: 97.98265991210937
patch: return ; } else
rank: 931
score: 97.911865234375
patch: return null ; true
rank: 931
score: 97.87069702148438
patch: sb return true ;
rank: 931
score: 97.4959716796875
patch: $NUMBER$ . ;
rank: 931
score: 97.2484359741211
patch: return / }
rank: 931
score: 96.8745829264323
patch: Plane }
rank: 931
score: 94.92652130126953
patch: check
rank: 932
score: 97.87061767578125
patch: break || true ;
rank: 932
score: 97.794384765625
patch: graphics = true ;
rank: 932
score: 97.49510955810547
patch: += true ;
rank: 932
score: 97.24418640136719
patch: Plane == true
rank: 932
score: 96.78502400716145
patch: Plane /
rank: 932
score: 94.90098571777344
patch: Thread
rank: 933
score: 97.89268798828125
patch: CaMeL Class true ;
rank: 933
score: 97.79432373046875
patch: p = ; ;
rank: 933
score: 97.48655700683594
patch: CaMeL return ;
rank: 933
score: 97.42088012695312
patch: ( return ) ;
rank: 933
score: 96.6859639485677
patch: CaMeL Object
rank: 933
score: 94.8671875
patch: trace
rank: 934
score: 97.88853759765625
patch: CaMeL Exception true ;
rank: 934
score: 97.8682373046875
patch: throw ch ; }
rank: 934
score: 97.79183959960938
patch: c = null ;
rank: 934
score: 97.43916829427083
patch: * /
rank: 934
score: 97.41731567382813
patch: return ; = ;
rank: 934
score: 97.20940399169922
patch: return true {
rank: 934
score: 94.86544799804688
patch: final
rank: 935
score: 97.8823013305664
patch: CaMeL Exception ;
rank: 935
score: 97.867578125
patch: switch ( 0 )
rank: 935
score: 94.80117797851562
patch: this
rank: 936
score: 97.85971069335938
patch: throw ch ;
rank: 936
score: 97.85546875
patch: CaMeL Exception = ;
rank: 936
score: 97.78526611328125
patch: factory = true ;
rank: 936
score: 97.4125
patch: return name ; ;
rank: 936
score: 97.38507843017578
patch: if ( ;
rank: 936
score: 97.19754028320312
patch: true try {
rank: 936
score: 96.60367838541667
patch: Plane System
rank: 936
score: 94.72972106933594
patch: java
rank: 937
score: 97.91484985351562
patch: CaMeL Object return ;
rank: 937
score: 97.83614501953124
patch: CaMeL Number true ;
rank: 937
score: 97.40068359375
patch: return TRUE ; ;
rank: 937
score: 97.36749267578125
patch: CaMeL break ;
rank: 937
score: 94.71241760253906
patch: line
rank: 938
score: 97.400146484375
patch: return & true ;
rank: 938
score: 97.34388732910156
patch: CaMeL true ;
rank: 938
score: 96.59356689453125
patch: Plane this
rank: 938
score: 94.69830322265625
patch: a
rank: 939
score: 97.39842529296875
patch: return Math ; ;
rank: 939
score: 97.31315104166667
patch: CaMeL ;
rank: 939
score: 94.63594055175781
patch: method
rank: 940
score: 97.87177734375
patch: return ; / ;
rank: 940
score: 97.78538208007812
patch: CaMeL List . ;
rank: 940
score: 97.73777770996094
patch: return char ;
rank: 940
score: 97.28352355957031
patch: = true ,
rank: 940
score: 96.5467529296875
patch: System .
rank: 940
score: 94.62132263183594
patch: i
rank: 941
score: 97.87034912109375
patch: return true ; try
rank: 941
score: 97.77515258789063
patch: return i ; }
rank: 941
score: 97.39208374023437
patch: return 0 ; iterator
rank: 941
score: 94.58184814453125
patch: found
rank: 942
score: 97.86860961914063
patch: . return ; ;
rank: 942
score: 97.78056640625
patch: CaMeL Null ( ;
rank: 942
score: 97.77481689453126
patch: admin = true ;
rank: 942
score: 97.6534652709961
patch: return = ;
rank: 942
score: 97.391259765625
patch: return next true ;
rank: 942
score: 97.27410888671875
patch: *= $NUMBER$ ;
rank: 942
score: 97.14579010009766
patch: return { }
rank: 942
score: 96.5330810546875
patch: true false
rank: 942
score: 94.52198791503906
patch: exc
rank: 943
score: 97.77640991210937
patch: CaMeL Range ( ;
rank: 943
score: 97.65176391601562
patch: break ? ;
rank: 943
score: 97.14311218261719
patch: return cs CaMeL
rank: 943
score: 94.5010986328125
patch: c
rank: 944
score: 97.7710205078125
patch: CaMeL Exception return ;
rank: 944
score: 97.38251953125
patch: return ; . ;
rank: 944
score: 97.27018737792969
patch: $NUMBER$ . ?
rank: 944
score: 97.13729858398438
patch: if ( {
rank: 944
score: 96.4541727701823
patch: CaMeL Array
rank: 944
score: 94.49368286132812
patch: z
rank: 945
score: 97.7582763671875
patch: raw = true ;
rank: 945
score: 97.6170654296875
patch: if ( )
rank: 945
score: 97.37489624023438
patch: return ) return ;
rank: 945
score: 97.26626586914062
patch: m = ;
rank: 945
score: 97.12596638997395
patch: Plane .
rank: 945
score: 94.48499298095703
patch: flags
rank: 946
score: 97.8406005859375
patch: . return null ;
rank: 946
score: 97.760400390625
patch: CaMeL List ( ;
rank: 946
score: 97.75677490234375
patch: registry = true ;
rank: 946
score: 97.37080688476563
patch: return != $NUMBER$ ;
rank: 946
score: 97.25394439697266
patch: . char ;
rank: 946
score: 94.47088623046875
patch: org
rank: 947
score: 97.83441772460938
patch: CaMeL State return ;
rank: 947
score: 97.7560546875
patch: p = null ;
rank: 947
score: 97.5814437866211
patch: switch ( )
rank: 947
score: 94.46568298339844
patch: Accessible
rank: 948
score: 97.36954345703126
patch: CaMeL += ) ;
rank: 948
score: 97.23817443847656
patch: CaMeL continue ;
rank: 948
score: 94.46322631835938
patch: impl
rank: 949
score: 97.74962158203125
patch: Checker return true ;
rank: 949
score: 97.36776123046874
patch: CaMeL |= ) ;
rank: 949
score: 97.23527526855469
patch: * * /
rank: 949
score: 96.38948567708333
patch: true true
rank: 949
score: 94.44100952148438
patch: in
rank: 950
score: 97.79644775390625
patch: return is return ;
rank: 950
score: 97.744677734375
patch: Raster return true ;
rank: 950
score: 97.72544555664062
patch: CaMeL Error true ;
rank: 950
score: 97.51338195800781
patch: return is }
rank: 950
score: 97.36610107421875
patch: return matches true ;
rank: 950
score: 97.23161315917969
patch: ( true ;
rank: 950
score: 96.36117553710938
patch: CaMeL Class
rank: 950
score: 94.43206787109375
patch: set
rank: 951
score: 97.7958984375
patch: return true ; do
rank: 951
score: 97.72333984375
patch: CaMeL Range true true
rank: 951
score: 97.49425506591797
patch: break : ;
rank: 951
score: 97.36534423828125
patch: return ch ; ;
rank: 951
score: 97.2225112915039
patch: |= false ;
rank: 951
score: 96.35755411783855
patch: / /
rank: 951
score: 94.428955078125
patch: init
rank: 952
score: 97.73475341796875
patch: molecule = true ;
rank: 952
score: 97.72127685546874
patch: CaMeL List true true
rank: 952
score: 97.49302673339844
patch: } else {
rank: 952
score: 97.36333618164062
patch: ; return 0 ;
rank: 952
score: 96.89475504557292
patch: continue .
rank: 952
score: 96.34298706054688
patch: CaMeL ]
rank: 952
score: 94.41998291015625
patch: bad
rank: 953
score: 97.78589477539063
patch: CaMeL return $NUMBER$ ;
rank: 953
score: 97.710400390625
patch: CaMeL String true ;
rank: 953
score: 97.49291229248047
patch: break $NUMBER$ ;
rank: 953
score: 97.20221710205078
patch: || true ;
rank: 953
score: 96.33619181315105
patch: true !
rank: 953
score: 94.41414642333984
patch: .
rank: 954
score: 97.76912231445313
patch: CaMeL Builder return ;
rank: 954
score: 97.72650756835938
patch: quit = true ;
rank: 954
score: 97.3586669921875
patch: return 0 true ;
rank: 954
score: 97.20134735107422
patch: \ * /
rank: 954
score: 96.87060546875
patch: Plane [
rank: 954
score: 96.31825764973958
patch: Plane ?
rank: 954
score: 94.40715026855469
patch: Error
rank: 955
score: 97.76671752929687
patch: CaMeL Class return ;
rank: 955
score: 97.70279541015626
patch: CaMeL Null true ;
rank: 955
score: 97.18917846679688
patch: ^= true ;
rank: 955
score: 96.28452555338542
patch: Plane *
rank: 955
score: 94.39125061035156
patch: expr
rank: 956
score: 97.71932373046874
patch: adapter = true ;
rank: 956
score: 97.47850799560547
patch: return Array CaMeL
rank: 956
score: 97.18090057373047
patch: = ( ;
rank: 956
score: 96.2822977701823
patch: return {
rank: 956
score: 94.37989807128906
patch: node
rank: 957
score: 97.71678466796875
patch: pa = true ;
rank: 957
score: 97.68587036132813
patch: CaMeL Class ( ;
rank: 957
score: 97.1808853149414
patch: . equals ;
rank: 957
score: 94.37023162841797
patch: bytes
rank: 958
score: 97.7143798828125
patch: return true && ;
rank: 958
score: 97.18040466308594
patch: ) * /
rank: 958
score: 94.36167907714844
patch: tmp
rank: 959
score: 97.85711669921875
patch: ! return null ;
rank: 959
score: 97.73663330078125
patch: CaMeL return 0 ;
rank: 959
score: 97.67340698242188
patch: CaMeL Object true ;
rank: 959
score: 97.4642562866211
patch: break ch ;
rank: 959
score: 97.33529052734374
patch: return != true ;
rank: 959
score: 97.17160034179688
patch: ; break ;
rank: 959
score: 96.6445821126302
patch: Asserts .
rank: 959
score: 96.26308186848958
patch: ch :
rank: 959
score: 94.35645294189453
patch: match
rank: 960
score: 97.73516082763672
patch: return is true
rank: 960
score: 97.67315673828125
patch: CaMeL Enum true ;
rank: 960
score: 97.45640563964844
patch: break = ;
rank: 960
score: 97.33297119140624
patch: CaMeL = true ;
rank: 960
score: 97.16822814941406
patch: if true ;
rank: 960
score: 96.26034545898438
patch: s :
rank: 960
score: 94.35421752929688
patch: output
rank: 961
score: 97.70733032226562
patch: queue = true ;
rank: 961
score: 97.44000244140625
patch: break [ ;
rank: 961
score: 97.24452209472656
patch: CaMeL do ;
rank: 961
score: 97.14915466308594
patch: *= false ;
rank: 961
score: 96.25684611002605
patch: contains :
rank: 961
score: 94.35130310058594
patch: record
rank: 962
score: 97.66635131835938
patch: ( this ) ;
rank: 962
score: 97.22561645507812
patch: return ; .
rank: 962
score: 97.1449483235677
patch: ( ;
rank: 962
score: 96.24088541666667
patch: Plane return
rank: 962
score: 94.35054016113281
patch: state
rank: 963
score: 97.7152587890625
patch: return null ; else
rank: 963
score: 97.70369873046874
patch: skipped = true ;
rank: 963
score: 97.3867416381836
patch: return i ;
rank: 963
score: 97.13753509521484
patch: $NUMBER$ ( ;
rank: 963
score: 96.38534545898438
patch: buf .
rank: 963
score: 96.2353515625
patch: return *
rank: 963
score: 94.34292602539062
patch: (
rank: 964
score: 97.6999267578125
patch: return this . ;
rank: 964
score: 97.37876892089844
patch: break ( ;
rank: 964
score: 97.20716094970703
patch: return length ;
rank: 964
score: 96.28653971354167
patch: -- ;
rank: 964
score: 96.22765096028645
patch: Multich
rank: 964
score: 94.34178161621094
patch: off
rank: 965
score: 97.37110900878906
patch: b return ;
rank: 965
score: 97.12870025634766
patch: = this ;
rank: 965
score: 96.22701009114583
patch: Plane in
rank: 965
score: 96.21929931640625
patch: cs [
rank: 965
score: 94.33926391601562
patch: default
rank: 966
score: 97.64073181152344
patch: CaMeL Range ;
rank: 966
score: 97.36669921875
patch: return j ;
rank: 966
score: 97.12606811523438
patch: . true ;
rank: 966
score: 96.2241923014323
patch: true this
rank: 966
score: 96.21602376302083
patch: Plane >
rank: 966
score: 94.33837890625
patch: peer
rank: 967
score: 97.69954833984374
patch: score = true ;
rank: 967
score: 97.68961791992187
patch: return false ; try
rank: 967
score: 97.63770751953125
patch: return is ) ;
rank: 967
score: 97.3594970703125
patch: continue ; }
rank: 967
score: 97.12091064453125
patch: . ;
rank: 967
score: 94.32464599609375
patch: Token
rank: 968
score: 97.80849609375
patch: return is null ;
rank: 968
score: 97.69517822265625
patch: . true ; ;
rank: 968
score: 97.67938232421875
patch: return $NUMBER$ true ;
rank: 968
score: 97.62470703125
patch: true return null ;
rank: 968
score: 97.3506851196289
patch: return { ;
rank: 968
score: 97.11884307861328
patch: value * /
rank: 968
score: 96.21151733398438
patch: break }
rank: 968
score: 94.30681610107422
patch: Node
rank: 969
score: 97.69490966796874
patch: return true * ;
rank: 969
score: 97.34846496582031
patch: ( ) ;
rank: 969
score: 97.11367797851562
patch: yet * /
rank: 969
score: 97.05342102050781
patch: return ] ;
rank: 969
score: 94.29993438720703
patch: int
rank: 970
score: 97.69474487304687
patch: area return true ;
rank: 970
score: 97.611572265625
patch: return value ; ;
rank: 970
score: 97.09191131591797
patch: != null ?
rank: 970
score: 94.2952880859375
patch: component
rank: 971
score: 97.58570098876953
patch: CaMeL Number ;
rank: 971
score: 97.32485961914062
patch: ! true ;
rank: 971
score: 97.09117889404297
patch: CaMeL true .
rank: 971
score: 96.9945068359375
patch: return NULL ;
rank: 971
score: 94.28224182128906
patch: Variable
rank: 972
score: 97.59252166748047
patch: return ; ?
rank: 972
score: 97.53265380859375
patch: return new ;
rank: 972
score: 97.32145690917969
patch: return return }
rank: 972
score: 97.08626556396484
patch: CaMeL Enum ;
rank: 972
score: 94.28137969970703
patch: the
rank: 973
score: 97.55601501464844
patch: p = ;
rank: 973
score: 97.496826171875
patch: return get ;
rank: 973
score: 97.08547973632812
patch: = true )
rank: 973
score: 96.87664794921875
patch: return matches ;
rank: 973
score: 94.2717056274414
patch: first
rank: 974
score: 97.48484802246094
patch: CaMeL Exception true
rank: 974
score: 97.08512878417969
patch: of * /
rank: 974
score: 96.9246826171875
patch: } else
rank: 974
score: 96.85122680664062
patch: ( ) .
rank: 974
score: 95.2868881225586
patch: /
rank: 974
score: 94.2657699584961
patch: info
rank: 975
score: 97.34786987304688
patch: return filter ;
rank: 975
score: 97.06769561767578
patch: words * /
rank: 975
score: 96.84379577636719
patch: CaMeL ++ ;
rank: 975
score: 94.26469421386719
patch: List
rank: 976
score: 97.06361389160156
patch: t = true
rank: 976
score: 96.83722686767578
patch: return padding ;
rank: 976
score: 94.25621032714844
patch: Parser
rank: 977
score: 97.35871887207031
patch: CaMeL Error ;
rank: 977
score: 97.25335693359375
patch: return in ;
rank: 977
score: 97.0588150024414
patch: static * /
rank: 977
score: 96.83013916015625
patch: return ; /
rank: 977
score: 95.02519989013672
patch: al
rank: 977
score: 94.25421142578125
patch: addr
rank: 978
score: 97.43203735351562
patch: c = ;
rank: 978
score: 97.15234375
patch: return ; true
rank: 978
score: 96.82811482747395
patch: break :
rank: 978
score: 96.82383728027344
patch: return size ;
rank: 978
score: 94.7530517578125
patch: ,
rank: 978
score: 94.25216674804688
patch: no
rank: 979
score: 97.36634826660156
patch: . ; ;
rank: 979
score: 97.14964294433594
patch: return equals ;
rank: 979
score: 96.82012176513672
patch: ; true ;
rank: 979
score: 94.24852752685547
patch: Script
rank: 980
score: 97.23112487792969
patch: CaMeL -- ;
rank: 980
score: 97.13721466064453
patch: CaMeL Error true
rank: 980
score: 96.90940348307292
patch: = true
rank: 980
score: 96.8170166015625
patch: CaMeL sum .
rank: 980
score: 94.72775268554688
patch: t
rank: 980
score: 94.24067687988281
patch: out
rank: 981
score: 97.32656860351562
patch: return read ;
rank: 981
score: 97.13639831542969
patch: return ; :
rank: 981
score: 96.88393147786458
patch: $NUMBER$ ;
rank: 981
score: 96.8150634765625
patch: return Boolean ;
rank: 981
score: 96.6714579264323
patch: } )
rank: 981
score: 94.63423156738281
patch: boolean
rank: 981
score: 94.23263549804688
patch: Character
rank: 982
score: 96.77035522460938
patch: return start ;
rank: 982
score: 96.64768473307292
patch: return ch
rank: 982
score: 94.54646301269531
patch: code
rank: 982
score: 94.23106384277344
patch: block
rank: 983
score: 97.15603637695312
patch: CaMeL Exception {
rank: 983
score: 96.76941680908203
patch: return Short ;
rank: 983
score: 96.5776875813802
patch: if true
rank: 983
score: 94.22211456298828
patch: Configuration
rank: 984
score: 97.11397552490234
patch: CaMeL Null ;
rank: 984
score: 96.76666259765625
patch: return Double ;
rank: 984
score: 96.55904134114583
patch: http :
rank: 984
score: 94.49061584472656
patch: handler
rank: 984
score: 94.21426391601562
patch: character
rank: 985
score: 97.10564422607422
patch: CaMeL Class ;
rank: 985
score: 96.5412089029948
patch: / }
rank: 985
score: 96.53421020507812
patch: $NUMBER$ .
rank: 985
score: 94.21153259277344
patch: data
rank: 986
score: 97.26484680175781
patch: ( ; ;
rank: 986
score: 96.73027801513672
patch: return Integer ;
rank: 986
score: 96.466552734375
patch: = ;
rank: 986
score: 94.49362182617188
patch: logger
rank: 986
score: 94.42703247070312
patch: Sequence
rank: 986
score: 94.20980072021484
patch: file
rank: 987
score: 97.05762481689453
patch: return EMPTY ;
rank: 987
score: 96.72503662109375
patch: CaMeL matches .
rank: 987
score: 96.52133178710938
patch: return cs
rank: 987
score: 96.46632893880208
patch: . ?
rank: 987
score: 94.20384979248047
patch: String
rank: 988
score: 97.05298614501953
patch: CaMeL Object ;
rank: 988
score: 96.71831512451172
patch: CaMeL -- .
rank: 988
score: 94.2027587890625
patch: Stream
rank: 989
score: 97.24441528320312
patch: t = ;
rank: 989
score: 96.71601104736328
patch: CaMeL Builder ;
rank: 989
score: 96.4576416015625
patch: ! }
rank: 989
score: 94.40095520019531
patch: and
rank: 989
score: 94.3798828125
patch: thread
rank: 989
score: 94.19607543945312
patch: ignore
rank: 990
score: 97.03864288330078
patch: CaMeL String ;
rank: 990
score: 96.71460723876953
patch: return super ;
rank: 990
score: 96.38357543945312
patch: != null
rank: 990
score: 94.37554168701172
patch: type
rank: 990
score: 94.18889617919922
patch: stream
rank: 991
score: 96.70660400390625
patch: return INSTANCE ;
rank: 991
score: 96.32296752929688
patch: * ;
rank: 991
score: 96.11682891845703
patch: try
rank: 991
score: 94.87513732910156
patch: finally
rank: 991
score: 94.37362670898438
patch: buffer
rank: 991
score: 94.18548583984375
patch: retval
rank: 992
score: 97.17253112792969
patch: return reverse ;
rank: 992
score: 97.00473022460938
patch: CaMeL arraycopy ;
rank: 992
score: 96.70631408691406
patch: CaMeL ; .
rank: 992
score: 96.46022542317708
patch: result =
rank: 992
score: 96.32239786783855
patch: $NUMBER$ ?
rank: 993
score: 96.99992370605469
patch: CaMeL List ;
rank: 993
score: 96.30087280273438
patch: if ;
rank: 993
score: 94.35575103759766
patch: _
rank: 993
score: 94.15984344482422
patch: field
rank: 994
score: 96.6636734008789
patch: CaMeL try .
rank: 994
score: 96.2666524251302
patch: . true
rank: 994
score: 94.32536315917969
patch: tree
rank: 994
score: 94.30593872070312
patch: names
rank: 994
score: 94.15817260742188
patch: config
rank: 994
score: 94.04463958740234
patch: parent
rank: 995
score: 96.96749877929688
patch: CaMeL Boolean ;
rank: 995
score: 96.65142822265625
patch: CaMeL Thread ;
rank: 995
score: 94.32179260253906
patch: source
rank: 995
score: 94.14669799804688
patch: Method
rank: 996
score: 96.95584106445312
patch: CaMeL Range true
rank: 996
score: 96.65113830566406
patch: return ; ,
rank: 996
score: 96.463134765625
patch: ? ;
rank: 996
score: 94.14167022705078
patch: register
rank: 997
score: 94.28424072265625
patch: table
rank: 997
score: 94.19947052001953
patch: exception
rank: 997
score: 94.1412124633789
patch: Record
rank: 998
score: 96.18338012695312
patch: true {
rank: 998
score: 95.81679280598958
patch: ; {
rank: 998
score: 95.03205108642578
patch: search
rank: 998
score: 94.2747573852539
patch: Array
rank: 998
score: 94.13444519042969
patch: ae
rank: 999
score: 96.14932250976562
patch: true ;
rank: 999
score: 95.7997334798177
patch: ; true
rank: 999
score: 94.26945495605469
patch: ?
rank: 999
score: 94.12879943847656
patch: loop
rank: 1000
score: 94.12226867675781
patch: frame
rank: 1000
score: 93.62678527832031
patch: model
