rank: 1
score: 99.80321502685547
patch: return false ;
rank: 1
score: 99.77610270182292
patch: break ;
rank: 1
score: 99.63350677490234
patch: break ; }
rank: 1
score: 99.48519897460938
patch: return false ; } }
rank: 1
score: 99.33462185329861
patch: return block . is CaMeL Function ) ;
rank: 2
score: 99.55795288085938
patch: return true ;
rank: 2
score: 99.43576049804688
patch: return true ; }
rank: 2
score: 99.38259887695312
patch: return break ; } }
rank: 2
score: 99.301513671875
patch: if ( block . is CaMeL Function ) {
rank: 2
score: 99.27437337239583
patch: else { break ; }
rank: 2
score: 99.21075439453125
patch: if break ; break ;
rank: 3
score: 99.42020874023437
patch: return false ; }
rank: 3
score: 99.3730712890625
patch: return block . is CaMeL Function ( ) ;
rank: 3
score: 99.25148010253906
patch: return false ; } } break ;
rank: 3
score: 99.1866455078125
patch: finally { break ; }
rank: 3
score: 99.15419921875
patch: if ; break ;
rank: 4
score: 99.37384440104167
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 4
score: 99.24561309814453
patch: return false ; } catch break ;
rank: 4
score: 99.1584228515625
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 4
score: 99.14814453125
patch: finally { break ;
rank: 4
score: 99.12711791992187
patch: break ; break ;
rank: 5
score: 99.34920043945313
patch: return ( block . is CaMeL Function ) ;
rank: 5
score: 99.2486083984375
patch: return break ; }
rank: 5
score: 99.24364362444196
patch: return false ; } break ;
rank: 5
score: 99.1934585571289
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 5
score: 99.08079528808594
patch: if break ;
rank: 6
score: 99.34318991268383
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 6
score: 99.33369954427083
patch: if ( block . is CaMeL Function ) { break ;
rank: 6
score: 99.23690185546874
patch: break ; } ;
rank: 6
score: 99.19283040364583
patch: break ; } break ;
rank: 6
score: 99.12937927246094
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 6
score: 99.12627563476562
patch: else { break ;
rank: 6
score: 99.01167805989583
patch: if ; { break ;
rank: 7
score: 99.31911010742188
patch: return ref . is CaMeL Function ( ) ;
rank: 7
score: 99.3148681640625
patch: return block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 7
score: 99.23195103236607
patch: break ; } } break ;
rank: 7
score: 99.16729736328125
patch: return ref . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 7
score: 99.1611328125
patch: break ; } * /
rank: 7
score: 99.14140319824219
patch: return break ;
rank: 7
score: 99.11685180664062
patch: break ; break ; }
rank: 7
score: 99.00088065011161
patch: if ; break ; break ;
rank: 8
score: 99.20649065290179
patch: return false ; } else {
rank: 8
score: 99.15482003348214
patch: break ; } if ( ;
rank: 8
score: 99.09585135323661
patch: break ; } break ; }
rank: 8
score: 99.09244537353516
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 8
score: 99.0921630859375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 9
score: 99.26659438189338
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 9
score: 99.1913553873698
patch: return ; ; } }
rank: 9
score: 99.14866536458334
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 9
score: 99.14844859730114
patch: return block . is CaMeL Function $NUMBER$ ( ) ;
rank: 9
score: 99.07826585036058
patch: t = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 9
score: 98.92315673828125
patch: break ; if break ;
rank: 10
score: 99.26593487079327
patch: ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 10
score: 99.23248760516827
patch: if ( block . is CaMeL Function ) { return false ;
rank: 10
score: 99.1890360514323
patch: return true ; } }
rank: 10
score: 99.12324662642045
patch: return block . is CaMeL Function 1 ( ) ;
rank: 10
score: 99.11809747869319
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 10
score: 99.074462890625
patch: break ; ;
rank: 10
score: 98.91633823939732
patch: break ; if ; break ;
rank: 11
score: 99.263232421875
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 11
score: 99.21238356370192
patch: block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 11
score: 99.1880111694336
patch: return false ; } break ; }
rank: 11
score: 99.1075668334961
patch: break ; } } return false ;
rank: 11
score: 99.103515625
patch: return ( block . is CaMeL Function ( ) ) ;
rank: 11
score: 99.0675048828125
patch: break ; } else {
rank: 11
score: 99.05281372070313
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 11
score: 98.99952697753906
patch: break ; break ; if break ;
rank: 12
score: 99.1767349243164
patch: return break ; } } break ;
rank: 12
score: 99.09781646728516
patch: break ; } else { break ;
rank: 12
score: 99.06496018629808
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 12
score: 99.03542258522727
patch: break && block . is CaMeL Function ( ) ;
rank: 12
score: 98.96031842912946
patch: break ; } if break ;
rank: 12
score: 98.90268380301339
patch: break ; ; if break ;
rank: 13
score: 99.23402506510416
patch: return block . is CaMeL Function || block . is CaMeL Function ) ;
rank: 13
score: 99.18580457899306
patch: return ref . is CaMeL Function ) ;
rank: 13
score: 99.15216064453125
patch: return break ; } break ;
rank: 13
score: 99.0784024325284
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; }
rank: 13
score: 99.03192138671875
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 13
score: 99.03151633522727
patch: return ( ! block . is CaMeL Function ) ;
rank: 13
score: 98.95802525111607
patch: else { break ; } }
rank: 13
score: 98.86656842912946
patch: if break ; ; break ;
rank: 14
score: 99.23231090198864
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 14
score: 99.10513305664062
patch: throw super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 14
score: 99.06849670410156
patch: return ; }
rank: 14
score: 99.06158447265625
patch: return block . is CaMeL Function ) ; }
rank: 14
score: 99.02304077148438
patch: return block . is CaMeL Function ( ) + false ;
rank: 14
score: 99.014892578125
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;
rank: 14
score: 98.85216267903645
patch: if false ; break ;
rank: 15
score: 99.22628348214286
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 15
score: 99.1446533203125
patch: return false ; break ; }
rank: 15
score: 99.00206409801136
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 15
score: 99.00014426491477
patch: return block . is CaMeL Function ( ) ; }
rank: 15
score: 98.93074035644531
patch: break ; break ; } break ;
rank: 16
score: 99.22547978940217
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 16
score: 99.13174438476562
patch: throw new Illegal CaMeL Argument CaMeL Exception break ;
rank: 16
score: 99.12619253305289
patch: block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 16
score: 99.05508188100961
patch: result = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 16
score: 98.99537242542614
patch: break || block . is CaMeL Function ( ) ;
rank: 17
score: 99.12867228190105
patch: return null ; } }
rank: 17
score: 99.12061982996323
patch: result = block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 17
score: 99.06764914772727
patch: block = block . get CaMeL Parent ( ) ;
rank: 17
score: 99.0457763671875
patch: throw new Illegal CaMeL State CaMeL Exception ( ; }
rank: 17
score: 98.99265358664773
patch: return block . is CaMeL Function ( ) ) ;
rank: 17
score: 98.9873934659091
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 17
score: 98.90806361607143
patch: break ; } break ; ;
rank: 17
score: 98.8395004272461
patch: if ; = break ; break ;
rank: 18
score: 99.22063849954044
patch: block . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 18
score: 99.10946655273438
patch: return break ; } break ; }
rank: 18
score: 99.05441284179688
patch: return super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 18
score: 99.04294057992789
patch: res = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 18
score: 99.04245334201389
patch: break ; } else { break ; }
rank: 18
score: 98.99143473307292
patch: return block . is CaMeL Function ( ) + true ;
rank: 18
score: 98.9563876065341
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ;
rank: 18
score: 98.82959856305804
patch: if break ; break ; ;
rank: 19
score: 99.10580444335938
patch: break ; } else if break ;
rank: 19
score: 99.04056222098214
patch: break ; default : break ;
rank: 19
score: 99.03557880108173
patch: tmp = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 19
score: 98.9451016512784
patch: target = block . get CaMeL Target ( ) ;
rank: 19
score: 98.89837646484375
patch: catch false ; break ;
rank: 20
score: 99.21910903033088
patch: return super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 20
score: 99.03981526692708
patch: break ; } if ( block . ;
rank: 20
score: 99.03223595252403
patch: n = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 20
score: 98.97650701349431
patch: return block . is CaMeL Function ) + false ;
rank: 20
score: 98.9390869140625
patch: return true ; } break ;
rank: 20
score: 98.89771525065105
patch: break ; for break ;
rank: 20
score: 98.79119873046875
patch: return ; { break ;
rank: 21
score: 99.21869659423828
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 21
score: 99.0920181274414
patch: return break ; } catch break ;
rank: 21
score: 99.02451735276442
patch: prev = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 21
score: 99.00932965959821
patch: if ( ; break ; }
rank: 21
score: 98.89512634277344
patch: else { break ; } break ;
rank: 21
score: 98.77960205078125
patch: if ; = break ;
rank: 22
score: 99.21715291341145
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 22
score: 99.09709337022569
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 22
score: 99.09085845947266
patch: break ; } } if break ;
rank: 22
score: 99.00667724609374
patch: break ; } }
rank: 22
score: 98.9617919921875
patch: return block . is CaMeL Function ( ) : false ;
rank: 22
score: 98.89325823102679
patch: break ; for break ; ;
rank: 22
score: 98.75315856933594
patch: if ; break ; if break ;
rank: 23
score: 99.21282958984375
patch: return block . get CaMeL Parent ( ) != null ;
rank: 23
score: 99.08713600852273
patch: result = block . is CaMeL Function ( ) ;
rank: 23
score: 99.08186340332031
patch: return null ; } catch break ;
rank: 23
score: 99.03118133544922
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ( ) ;
rank: 23
score: 99.01481119791667
patch: table . if ( block . is CaMeL Function ) {
rank: 23
score: 99.00454275948661
patch: break ; } * break ;
rank: 23
score: 98.94646661931819
patch: return block . is CaMeL Function ) + true ;
rank: 23
score: 98.919287109375
patch: throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 23
score: 98.88385009765625
patch: return false ; break ; if break ;
rank: 23
score: 98.74837917751736
patch: if break ; break ; if break ;
rank: 24
score: 99.21084449404762
patch: block . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 24
score: 99.08241031044408
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block . is CaMeL Function ) ;
rank: 24
score: 99.078857421875
patch: return false ; } return false ;
rank: 24
score: 99.02727864583333
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref ) ;
rank: 24
score: 99.01101684570312
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref ) ;
rank: 24
score: 98.94582297585227
patch: return ref . is CaMeL Function 1 ( ) ;
rank: 24
score: 98.88331909179688
patch: try { break ;
rank: 24
score: 98.8723477450284
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ; }
rank: 24
score: 98.74171447753906
patch: if break ; break ; break ;
rank: 25
score: 99.20902506510417
patch: return ( block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 25
score: 99.07984076605902
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 25
score: 99.0661849975586
patch: return false ; break ; } }
rank: 25
score: 98.9442138671875
patch: return ref . is CaMeL Function $NUMBER$ ( ) ;
rank: 25
score: 98.88133893694196
patch: else { break ; } ;
rank: 25
score: 98.8704501065341
patch: body = block . get CaMeL Parent ( ) ;
rank: 25
score: 98.73180280412946
patch: return false ; if break ;
rank: 26
score: 99.20797596807066
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 26
score: 99.06498209635417
patch: return false ; } else
rank: 26
score: 98.9734774502841
patch: switch ( block . get CaMeL Type ( ) )
rank: 26
score: 98.93562455610795
patch: return block . is CaMeL Function ( ) false ;
rank: 26
score: 98.86680908203125
patch: throw new Illegal CaMeL State CaMeL Exception ; }
rank: 26
score: 98.72049967447917
patch: return ; = break ;
rank: 27
score: 99.20770554315476
patch: return block . is CaMeL Function && block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 27
score: 99.07387869698661
patch: if ( block . is CaMeL Function ( ) ) { break ;
rank: 27
score: 99.05729457310268
patch: return break ; break ; }
rank: 27
score: 99.01837565104167
patch: block . is CaMeL Function && block . is CaMeL Function ( ) ;
rank: 27
score: 98.9915438565341
patch: { if ( block . is CaMeL Function ) {
rank: 27
score: 98.9704818725586
patch: break ; } / * break ;
rank: 27
score: 98.9276835123698
patch: break || block . is CaMeL Function ) { break ;
rank: 27
score: 98.8757832845052
patch: return false ; break ;
rank: 27
score: 98.86489035866477
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 27
score: 98.71058146158855
patch: if $NUMBER$ ; break ;
rank: 28
score: 99.20053280101104
patch: return super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref ) ;
rank: 28
score: 99.07382381663604
patch: return is CaMeL Function ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 28
score: 99.04866790771484
patch: return false ; } } else {
rank: 28
score: 98.96998814174107
patch: break ; } return false ;
rank: 28
score: 98.92432657877605
patch: break && block . is CaMeL Function ) { break ;
rank: 28
score: 98.87528991699219
patch: break ; ; ; if break ;
rank: 28
score: 98.85769653320312
patch: break false ; }
rank: 28
score: 98.70948137555804
patch: break ; break ; break ;
rank: 29
score: 99.20022715692934
patch: return block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 29
score: 99.07195081208882
patch: block = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 29
score: 99.0321044921875
patch: return false ; } } if break ;
rank: 29
score: 99.00857747395834
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ;
rank: 29
score: 98.99010291466347
patch: t = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 29
score: 98.95399058948864
patch: System . out . println ( $STRING$ break ) ;
rank: 29
score: 98.91639293323864
patch: return ! block . is CaMeL Function ( ) ;
rank: 29
score: 98.86882672991071
patch: value = break || break ;
rank: 29
score: 98.8541488647461
patch: break false ;
rank: 29
score: 98.70772298177083
patch: if ; ; break ;
rank: 30
score: 99.19632975260417
patch: return ref . is CaMeL Function && block . is CaMeL Function ) ;
rank: 30
score: 99.06878983347039
patch: block = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 30
score: 99.02668980189732
patch: return null ; } else {
rank: 30
score: 99.00794219970703
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ( ) ;
rank: 30
score: 98.98876081194196
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 30
score: 98.91233132102273
patch: break || ( block . is CaMeL Function ) ;
rank: 30
score: 98.86331612723214
patch: value = break && break ;
rank: 30
score: 98.69720458984375
patch: if break ; if break ;
rank: 31
score: 99.19402204241071
patch: ref = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 31
score: 99.06449068509616
patch: q = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 31
score: 99.02423095703125
patch: return true ; } } break ;
rank: 31
score: 99.00203704833984
patch: return ref . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 31
score: 98.98843149038461
patch: found = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 31
score: 98.90675862630208
patch: return block . is CaMeL Function $NUMBER$ 1 ( ) ;
rank: 31
score: 98.8609619140625
patch: break ; ; ;
rank: 31
score: 98.68875122070312
patch: if ; break ; ;
rank: 32
score: 99.18936820652173
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 32
score: 99.06102905273437
patch: return ( ref . is CaMeL Function ) ;
rank: 32
score: 99.02276611328125
patch: return false ; } } }
rank: 32
score: 98.98592435396634
patch: tmp = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 32
score: 98.93889508928571
patch: break ; } else break ;
rank: 32
score: 98.90425618489583
patch: return block . is CaMeL Function ( ) . false ;
rank: 32
score: 98.85951450892857
patch: break ; ; return false ;
rank: 32
score: 98.83845658735795
patch: target = block . get CaMeL Parent ( ) ;
rank: 33
score: 99.04937422902961
patch: q = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 33
score: 99.0208740234375
patch: return break ; } } if break ;
rank: 33
score: 98.98202749399039
patch: result = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 33
score: 98.93491821289062
patch: break ; ; }
rank: 33
score: 98.90413041548295
patch: return ( block . is CaMeL Function ) ) ;
rank: 33
score: 98.85879080636161
patch: break ; if break ; }
rank: 33
score: 98.83254172585227
patch: block = block . get CaMeL Parent ( ; }
rank: 33
score: 98.67830984933036
patch: break ; ; = break ;
rank: 34
score: 99.18775475543478
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 34
score: 99.01988874162946
patch: return break ; } else {
rank: 34
score: 98.97581990559895
patch: return block . is CaMeL Function ) ; } else {
rank: 34
score: 98.93440246582031
patch: break ; default : break ; }
rank: 34
score: 98.89642888849431
patch: return block . is CaMeL Function ) : false ;
rank: 34
score: 98.85612487792969
patch: else { break ; break ; }
rank: 34
score: 98.83246404474431
patch: node = block . get CaMeL Parent ( ) ;
rank: 34
score: 98.67607116699219
patch: break ; if break ; break ;
rank: 35
score: 99.1874667080966
patch: ref = block . get CaMeL Parent ( ) ;
rank: 35
score: 99.04840766059027
patch: return is CaMeL Function ( block ) ;
rank: 35
score: 99.01392364501953
patch: return ; ; } } break ;
rank: 35
score: 98.98005022321429
patch: return true ; } else {
rank: 35
score: 98.93055419921875
patch: break ; } else { return false ; }
rank: 35
score: 98.8951416015625
patch: break && ( block . is CaMeL Function ) ;
rank: 35
score: 98.85319301060268
patch: break ; ; break ; }
rank: 35
score: 98.82589111328124
patch: throw new Illegal CaMeL Argument CaMeL Exception ; }
rank: 35
score: 98.67579868861607
patch: return * break ; break ;
rank: 36
score: 99.18741280691964
patch: return block . get CaMeL Basic CaMeL Block ( ) != null ;
rank: 36
score: 99.04580891927084
patch: block . is CaMeL Function = block . is CaMeL Function ( ) ;
rank: 36
score: 98.97939453125
patch: block . is CaMeL Function || block . is CaMeL Function ( ) ;
rank: 36
score: 98.96662248883929
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ;
rank: 36
score: 98.929638671875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 36
score: 98.89439808238636
patch: return block . is CaMeL Function ( false ) ;
rank: 36
score: 98.65693664550781
patch: break ; if ; = break ;
rank: 37
score: 99.18663024902344
patch: return ( block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 37
score: 99.03827868009868
patch: ref = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 37
score: 99.01213243272569
patch: return false ; } } return false ;
rank: 37
score: 98.97636274857955
patch: return ( block . is CaMeL Function ) ; }
rank: 37
score: 98.9655428799716
patch: if ( ! block . is CaMeL Function ) {
rank: 37
score: 98.89170328776042
patch: if ( node . is CaMeL Function ) { break ;
rank: 37
score: 98.85103062220982
patch: break ; } catch break ;
rank: 37
score: 98.65650939941406
patch: throw break ;
rank: 38
score: 99.186279296875
patch: return block . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 38
score: 99.00933159722223
patch: return break ; } } return false ;
rank: 38
score: 98.9641357421875
patch: result = block . is CaMeL Function ) ;
rank: 38
score: 98.92164916992188
patch: throw new Illegal CaMeL State CaMeL Exception ( ;
rank: 38
score: 98.889892578125
patch: return block . is CaMeL Function ( ) . break ;
rank: 38
score: 98.84861246744792
patch: else { break ; ;
rank: 38
score: 98.65633138020833
patch: break ; ; if break ; break ;
rank: 39
score: 99.00907679966518
patch: return null ; } break ;
rank: 39
score: 98.97185516357422
patch: return block . is CaMeL Function && block . is CaMeL Function ( ) ;
rank: 39
score: 98.96219889322917
patch: current CaMeL Parent = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 39
score: 98.91426086425781
patch: break ; } } return true ;
rank: 39
score: 98.88710530598958
patch: return ( block . is CaMeL Function ) + false ;
rank: 39
score: 98.84776000976562
patch: return false ; ;
rank: 39
score: 98.65477837456598
patch: if ; break ; if ; break ;
rank: 40
score: 99.18373209635416
patch: is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 40
score: 99.0301513671875
patch: return get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 40
score: 99.00882393973214
patch: return false ; } finally {
rank: 40
score: 98.88593084161931
patch: block . is CaMeL Function = false ; break ;
rank: 40
score: 98.84455871582031
patch: break ; ; } if break ;
rank: 40
score: 98.81086869673295
patch: scope = block . get CaMeL Scope ( ) ;
rank: 40
score: 98.65442766462054
patch: if ; break ; System ;
rank: 41
score: 99.18355305989583
patch: block . is CaMeL Function = block . get CaMeL Parent ( ) ;
rank: 41
score: 99.00320434570312
patch: throw new Illegal CaMeL State CaMeL Exception break ;
rank: 41
score: 98.95974496694711
patch: curr = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 41
score: 98.95448996803977
patch: return block . is CaMeL Function ) ; } }
rank: 41
score: 98.88553873697917
patch: return ref . is CaMeL Function ( ) + false ;
rank: 41
score: 98.8398208618164
patch: break ; } break ; break ;
rank: 41
score: 98.80650024414062
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 41
score: 98.65352085658482
patch: return ; if ; break ;
rank: 42
score: 99.1809612771739
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block . get CaMeL Parent ( ) ) ;
rank: 42
score: 99.00101470947266
patch: break ; } } return break ;
rank: 42
score: 98.90579659598214
patch: break ; } } * /
rank: 42
score: 98.83462960379464
patch: finally { break ; } ;
rank: 42
score: 98.8028564453125
patch: break = block . get CaMeL Parent ( ) ;
rank: 42
score: 98.65072195870536
patch: if ; if ; break ;
rank: 43
score: 99.17727179276316
patch: ref = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 43
score: 98.95485026041666
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ) ;
rank: 43
score: 98.8758877840909
patch: block . is CaMeL Function = true ; break ;
rank: 43
score: 98.83165740966797
patch: else { break ; if break ;
rank: 43
score: 98.80122514204545
patch: body = block . get CaMeL Parent ( ; }
rank: 43
score: 98.63885498046875
patch: / if break ; break ;
rank: 44
score: 99.1757175611413
patch: return block . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 44
score: 99.02366236636513
patch: loop = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 44
score: 98.95199819711539
patch: body = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 44
score: 98.89876011439732
patch: break ; } } else {
rank: 44
score: 98.87484130859374
patch: return block . is CaMeL Empty ( ) ;
rank: 44
score: 98.82355608258929
patch: break ; if break ; ;
rank: 44
score: 98.79670854048295
patch: target = block . get CaMeL Target ( ; }
rank: 44
score: 98.63658989800348
patch: break ; break ; } if break ;
rank: 45
score: 99.17566636029412
patch: return block . equals ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 45
score: 99.02341822574013
patch: loop = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 45
score: 98.99797712053571
patch: return ; ; } break ;
rank: 45
score: 98.94774451622597
patch: arg = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 45
score: 98.86686197916667
patch: return ref . is CaMeL Function ( ) + true ;
rank: 45
score: 98.8189697265625
patch: else { break ; } if break ;
rank: 45
score: 98.63556586371527
patch: break ; break ; if ; break ;
rank: 46
score: 99.1755879720052
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 46
score: 99.022705078125
patch: this . block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 46
score: 98.9946060180664
patch: return break ; } return false ;
rank: 46
score: 98.92915482954545
patch: return ref . is CaMeL Function ( ) ; }
rank: 46
score: 98.89017486572266
patch: break ; } if ( ! ;
rank: 46
score: 98.81599644252232
patch: break ; ; } break ;
rank: 46
score: 98.63536241319444
patch: break ; if break ; if break ;
rank: 47
score: 99.17510022615132
patch: is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 47
score: 99.0194803873698
patch: if ( ref . is CaMeL Function ) { break ;
rank: 47
score: 98.94556342230902
patch: if ( block . is CaMeL Function )
rank: 47
score: 98.88993696732955
patch: System . err . println ( $STRING$ break ) ;
rank: 47
score: 98.86350504557292
patch: return block . is CaMeL Function CaMeL Type ( ) ;
rank: 47
score: 98.81583077566964
patch: finally { break ; } }
rank: 47
score: 98.78534807477679
patch: return true ; break ; }
rank: 47
score: 98.63340541294643
patch: if ; = break ; ;
rank: 48
score: 99.1718517485119
patch: return block . is CaMeL Function && block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 48
score: 99.0191714638158
patch: block = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 48
score: 98.9423076923077
patch: item = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 48
score: 98.92778778076172
patch: return block . is CaMeL Function || block . is CaMeL Function ( ) ;
rank: 48
score: 98.86228249289773
patch: return block . is CaMeL Function ( ) true ;
rank: 48
score: 98.8125
patch: finally { break ; if break ;
rank: 48
score: 98.63017926897321
patch: break ; break ; if ;
rank: 49
score: 99.16817434210526
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) . is CaMeL Function ;
rank: 49
score: 98.98902893066406
patch: return false ; } return break ;
rank: 49
score: 98.93580627441406
patch: result = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 49
score: 98.87758091517857
patch: return true ; } * /
rank: 49
score: 98.86154174804688
patch: return ( block . is CaMeL Function ) + true ;
rank: 49
score: 98.80916050502232
patch: break ; break ; } ;
rank: 50
score: 99.16569010416667
patch: return block . get CaMeL Parent ( ) . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 50
score: 98.98751831054688
patch: return null ; } break ; }
rank: 50
score: 98.93480506310097
patch: arg = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 50
score: 98.87550862630208
patch: throw new break ; }
rank: 50
score: 98.85264078776042
patch: return block . is CaMeL Function $NUMBER$ $NUMBER$ ( ) ;
rank: 50
score: 98.80728149414062
patch: try { break ; } break ;
rank: 50
score: 98.77940877278645
patch: return true ; ; }
rank: 50
score: 98.62847137451172
patch: if ; if break ; break ;
rank: 51
score: 99.16511840820313
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Parent ( ) ) ;
rank: 51
score: 98.98286946614583
patch: return false ; } finally
rank: 51
score: 98.934326171875
patch: expr = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 51
score: 98.91927083333333
patch: return $STRING$ . equals ( block . get CaMeL Parent ( ) ) ;
rank: 51
score: 98.87157331194196
patch: break ; } return true ;
rank: 51
score: 98.8521728515625
patch: block . is CaMeL Function = false ; return false ;
rank: 51
score: 98.80583190917969
patch: finally { break ; break ; }
rank: 51
score: 98.7758056640625
patch: throw new Unsupported CaMeL Operation CaMeL Exception ; }
rank: 51
score: 98.6280008951823
patch: if ; break ; /
rank: 52
score: 99.16437844669117
patch: ref . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 52
score: 98.93326509915866
patch: item = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 52
score: 98.86461292613636
patch: switch ( ref . get CaMeL Type ( ) )
rank: 52
score: 98.85115189985795
patch: return block . is CaMeL Function 0 ( ) ;
rank: 52
score: 98.77351684570313
patch: throw new Runtime CaMeL Exception ( break ) ;
rank: 52
score: 98.62363891601562
patch: if break ; break ; if ; break ;
rank: 53
score: 99.16404030539773
patch: return block . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 53
score: 99.01548936631944
patch: return ( block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ) ;
rank: 53
score: 98.97541046142578
patch: return true ; } catch break ;
rank: 53
score: 98.93147786458333
patch: LOG . if ( block . is CaMeL Function ) {
rank: 53
score: 98.9131591796875
patch: block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 53
score: 98.8484395345052
patch: return block . is CaMeL Function ( ) - false ;
rank: 53
score: 98.80031331380208
patch: catch break ; break ; if break ;
rank: 53
score: 98.7703348795573
patch: return false ; ; }
rank: 53
score: 98.61904907226562
patch: break ; if ; ; break ;
rank: 54
score: 99.01445456112133
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 54
score: 98.96607208251953
patch: return break ; break ; } }
rank: 54
score: 98.93092698317308
patch: res = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 54
score: 98.91029459635416
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ref ) ;
rank: 54
score: 98.85502485795455
patch: switch ( block . get CaMeL Type ( ) ;
rank: 54
score: 98.84820556640625
patch: return block . is CaMeL Function ? false : false ;
rank: 54
score: 98.79715983072917
patch: break ; } break ; } break ;
rank: 54
score: 98.61431884765625
patch: return ; if break ;
rank: 55
score: 99.16278366815476
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Parent ( ) ) ;
rank: 55
score: 98.96375383649554
patch: return break ; } } }
rank: 55
score: 98.93057250976562
patch: switch ( block . is CaMeL Function ) {
rank: 55
score: 98.90487670898438
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) ; }
rank: 55
score: 98.85500081380208
patch: return true ; } ;
rank: 55
score: 98.84746759588069
patch: return ! ( block . is CaMeL Function ) ;
rank: 55
score: 98.793701171875
patch: break ; } break ; if break ;
rank: 55
score: 98.61140950520833
patch: break ; if ; break ; break ;
rank: 56
score: 99.16273716517857
patch: ref . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 56
score: 99.01107083834134
patch: if ( ! block . is CaMeL Function ) { break ;
rank: 56
score: 98.9577865600586
patch: break ; } } catch break ;
rank: 56
score: 98.92993977864583
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) . break ;
rank: 56
score: 98.90310872395834
patch: return ref . is CaMeL Function || block . is CaMeL Function ) ;
rank: 56
score: 98.85227272727273
patch: throw new Assertion CaMeL Error ( $STRING$ ) ; }
rank: 56
score: 98.84738991477273
patch: return ref . is CaMeL Function ( ) ) ;
rank: 56
score: 98.78872680664062
patch: break ; out . println break ;
rank: 56
score: 98.74613037109376
patch: throw new Assertion CaMeL Error ( $STRING$ ) ;
rank: 56
score: 98.60831996372768
patch: do if break ; break ;
rank: 57
score: 99.16221552309783
patch: block . is CaMeL Function = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 57
score: 98.9547119140625
patch: return null ; } } break ;
rank: 57
score: 98.92861703725961
patch: o = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 57
score: 98.90209197998047
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) ; }
rank: 57
score: 98.85118950737848
patch: break ; } ; } return false ;
rank: 57
score: 98.84393310546875
patch: block . is CaMeL Function = true ; return false ;
rank: 57
score: 98.78226318359376
patch: else break ; }
rank: 58
score: 99.16183471679688
patch: return block . is CaMeL Function && ( block . is CaMeL Function ) ;
rank: 58
score: 99.00335693359375
patch: if ( this . block . is CaMeL Function ) { break ;
rank: 58
score: 98.95228576660156
patch: return false ; } if break ;
rank: 58
score: 98.89923967633929
patch: return ref . get CaMeL Basic CaMeL Block ( ) != null ;
rank: 58
score: 98.85055977957589
patch: break ; } } finally {
rank: 58
score: 98.738427734375
patch: throw new Null CaMeL Pointer CaMeL Exception ( ;
rank: 58
score: 98.60607038225446
patch: return if break ; break ;
rank: 59
score: 99.16007133152173
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ref . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 59
score: 98.92355581430289
patch: n = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 59
score: 98.84232003348214
patch: break ; } } return ;
rank: 59
score: 98.8360595703125
patch: return ( ref . is CaMeL Function ( ) ) ;
rank: 59
score: 98.77642822265625
patch: break ; break ; ;
rank: 60
score: 99.15987723214286
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) . is CaMeL Function ) ;
rank: 60
score: 98.94601440429688
patch: return false ; } } return ;
rank: 60
score: 98.92304992675781
patch: return block . is CaMeL Function ;
rank: 60
score: 98.8979263305664
patch: block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 60
score: 98.84094916449652
patch: break ; } if ( ref . ;
rank: 60
score: 98.83210893110795
patch: return ( block . is CaMeL Function ) false ;
rank: 60
score: 98.76891411675348
patch: logger . append ( $STRING$ ; break ;
rank: 60
score: 98.59963553292411
patch: } if break ; break ;
rank: 61
score: 99.15932745682566
patch: return block . is CaMeL Function . is CaMeL Function && block . is CaMeL Function ) ;
rank: 61
score: 98.94561767578125
patch: return break ; } } else {
rank: 61
score: 98.8401123046875
patch: break ; case Basic CaMeL Block . FUNCTION :
rank: 61
score: 98.76598358154297
patch: finally { break ; } break ;
rank: 61
score: 98.59782409667969
patch: return ; if break ; break ;
rank: 62
score: 99.15685317095588
patch: return block . equals ( ref . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 62
score: 98.99928635817308
patch: is CaMeL Function = block . is CaMeL Function ( ) ;
rank: 62
score: 98.94497680664062
patch: return true ; } break ; }
rank: 62
score: 98.9191162109375
patch: break ; } else
rank: 62
score: 98.895166015625
patch: block . get CaMeL Parent ( ) . is CaMeL Function ( ) ;
rank: 62
score: 98.83700125558036
patch: break ; * break ; }
rank: 62
score: 98.82846069335938
patch: return block . is CaMeL Function ( ) - true ;
rank: 62
score: 98.7305908203125
patch: throw new Assertion CaMeL Error ( $STRING$ ;
rank: 62
score: 98.59611511230469
patch: break ; ; if ; break ;
rank: 63
score: 99.15575009300595
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) . is CaMeL Function ;
rank: 63
score: 98.99923502604166
patch: if ( block . is CaMeL Function ( ) ) { return false ;
rank: 63
score: 98.9443588256836
patch: return false ; } } if ;
rank: 63
score: 98.9174053485577
patch: log . { if ( block . is CaMeL Function ) {
rank: 63
score: 98.8939208984375
patch: return ( block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 63
score: 98.83465021306819
patch: ref = block . get CaMeL Reference ( ) ;
rank: 63
score: 98.82830255681819
patch: return block . is CaMeL Function ) { break ;
rank: 63
score: 98.76256452287946
patch: break ; for break ; }
rank: 63
score: 98.71911010742187
patch: break . to CaMeL String ( ) ; }
rank: 63
score: 98.59555489676339
patch: if ; { if break ;
rank: 64
score: 99.15548270089286
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 64
score: 98.99915907118056
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) { break ;
rank: 64
score: 98.94389125279018
patch: break ; break ; } }
rank: 64
score: 98.89097243088942
patch: ref = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 64
score: 98.82623291015625
patch: break ; } * / ;
rank: 64
score: 98.8246358235677
patch: return false && block . is CaMeL Function ( ) ;
rank: 64
score: 98.76054164341518
patch: catch false ; break ; }
rank: 64
score: 98.71849907769098
patch: throw new Runtime CaMeL Exception ( ; }
rank: 64
score: 98.59487479073661
patch: if ; * / break ;
rank: 65
score: 99.154541015625
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function || block . is CaMeL Function ) ;
rank: 65
score: 98.942333984375
patch: return false ; } finally { break ; }
rank: 65
score: 98.91480712890625
patch: if ( ref . is CaMeL Function ) {
rank: 65
score: 98.89066314697266
patch: return ( block . is CaMeL Function || block . is CaMeL Function ) ;
rank: 65
score: 98.82029030539773
patch: return block . . is CaMeL Function ( ) ;
rank: 65
score: 98.71558837890625
patch: System . out . println ( $STRING$ ) ;
rank: 65
score: 98.58047921316964
patch: try if break ; break ;
rank: 66
score: 99.15398406982422
patch: break ; } block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 66
score: 98.99763997395833
patch: if ( block . is CaMeL Local ) { break ;
rank: 66
score: 98.93468366350446
patch: return false ; } catch ;
rank: 66
score: 98.91464233398438
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( true ) ;
rank: 66
score: 98.89065551757812
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ; }
rank: 66
score: 98.81853569878473
patch: for ( Basic CaMeL Block block = block
rank: 66
score: 98.75514439174107
patch: else { break ; break ;
rank: 66
score: 98.71067301432292
patch: break - 1 ; }
rank: 66
score: 98.57608795166016
patch: break ; if ; { break ;
rank: 67
score: 99.15347055288461
patch: is CaMeL Function = block . get CaMeL Parent ( ) ;
rank: 67
score: 98.98548648231908
patch: q = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 67
score: 98.93321228027344
patch: return break ; } } if ;
rank: 67
score: 98.91428786057692
patch: expression = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 67
score: 98.88956705729167
patch: return block . is CaMeL Function ( ) ; } }
rank: 67
score: 98.8209228515625
patch: break ; } } if ( ;
rank: 67
score: 98.81776012073864
patch: return block . is CaMeL Function ( ) 1 ;
rank: 67
score: 98.70804443359376
patch: throw new Internal CaMeL Error ( $STRING$ ) ;
rank: 67
score: 98.57501831054688
patch: break ; break ; if ; if break ;
rank: 68
score: 99.15304432744566
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 68
score: 98.98495965254934
patch: block = ref . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 68
score: 98.93238067626953
patch: return ; ; } break ; }
rank: 68
score: 98.91062233664773
patch: else if ( block . is CaMeL Function ) {
rank: 68
score: 98.88902282714844
patch: return get CaMeL Basic CaMeL Block ( block ) . is CaMeL Function ) ;
rank: 68
score: 98.81919167258523
patch: throw new Internal CaMeL Error ( $STRING$ ) ; }
rank: 68
score: 98.8162841796875
patch: return block . is CaMeL Function $NUMBER$ ) ;
rank: 68
score: 98.75474548339844
patch: break ; } ; if break ;
rank: 68
score: 98.57339913504464
patch: if break ; for break ;
rank: 69
score: 98.98434012276786
patch: return is CaMeL Function ) ;
rank: 69
score: 98.90760633680556
patch: return block . is CaMeL Function ) {
rank: 69
score: 98.81914728338069
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 69
score: 98.8156026204427
patch: return ( block . is CaMeL Function ) . break ;
rank: 69
score: 98.7538070678711
patch: finally { this . break ; }
rank: 70
score: 99.15091145833334
patch: block . next = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 70
score: 98.9826327237216
patch: block . is CaMeL Function ( ) ; break ;
rank: 70
score: 98.93113878038194
patch: return false ; } } return break ;
rank: 70
score: 98.90726412259616
patch: node = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 70
score: 98.81587982177734
patch: break ; } else { return ;
rank: 70
score: 98.81536187065973
patch: return block . is CaMeL Function ( )
rank: 70
score: 98.75110735212054
patch: value = break ; break ;
rank: 70
score: 98.68861694335938
patch: throw new Assertion CaMeL Error ( ) ; }
rank: 70
score: 98.57127380371094
patch: return ; = break ; break ;
rank: 71
score: 99.1506580171131
patch: return block . get CaMeL Parent ( ) . is CaMeL Function || block . is CaMeL Function ) ;
rank: 71
score: 98.98157677283653
patch: else if ( block . is CaMeL Function ) { break ;
rank: 71
score: 98.93099636501736
patch: return false ; } else if break ;
rank: 71
score: 98.90648803710937
patch: if ( block . is CaMeL Local ) {
rank: 71
score: 98.88717651367188
patch: block . is CaMeL Function && block . is CaMeL Function ) { break ;
rank: 71
score: 98.81512451171875
patch: return ref . is CaMeL Function ( ) : false ;
rank: 71
score: 98.8117342862216
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ;
rank: 71
score: 98.74935574001736
patch: catch false ; break ; if break ;
rank: 71
score: 98.68824598524306
patch: return true ; } } return false ;
rank: 71
score: 98.57079206194196
patch: return * break ; / /
rank: 72
score: 99.15029296875
patch: return block . equals ( block . get CaMeL Parent ( ) ) ;
rank: 72
score: 98.97575827205883
patch: return is CaMeL Function ( ref . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 72
score: 98.91990661621094
patch: return ; ; } catch break ;
rank: 72
score: 98.90595245361328
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 72
score: 98.88699106069711
patch: return $STRING$ . equals ( block . is CaMeL Function ) ;
rank: 72
score: 98.81431070963542
patch: result . add ( block . is CaMeL Function ) ;
rank: 72
score: 98.81023559570312
patch: break ; } else { return true ; }
rank: 72
score: 98.74818638392857
patch: break ; } return break ;
rank: 72
score: 98.6859130859375
patch: throw new Null CaMeL Pointer CaMeL Exception ; }
rank: 73
score: 99.14841627038044
patch: block . next = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 73
score: 98.9756721047794
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; }
rank: 73
score: 98.91782052176339
patch: return null ; break ; }
rank: 73
score: 98.90562086838942
patch: v = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 73
score: 98.81358846028645
patch: return block . is CaMeL Function ( ) : true ;
rank: 73
score: 98.74799455915179
patch: } else { break ; }
rank: 73
score: 98.68217637803819
patch: throw new Internal CaMeL Error ( $STRING$ ;
rank: 73
score: 98.56813267299107
patch: if break ; } break ;
rank: 74
score: 99.14664359714673
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref . get CaMeL Parent ( ) ) ;
rank: 74
score: 98.9755795127467
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref . is CaMeL Function ) ;
rank: 74
score: 98.91754913330078
patch: return false ; } return true ;
rank: 74
score: 98.90552696814903
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) .
rank: 74
score: 98.88284737723214
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 74
score: 98.8127950032552
patch: return ( block . is CaMeL Function ) : false ;
rank: 74
score: 98.80898030598958
patch: break ; } } else { break ;
rank: 74
score: 98.74321153428819
patch: return true ; break ; if break ;
rank: 74
score: 98.67299397786458
patch: return break ; ; }
rank: 74
score: 98.56772286551339
patch: return ; { if break ;
rank: 75
score: 99.1449664572011
patch: is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 75
score: 98.9732666015625
patch: block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 75
score: 98.9043960571289
patch: t = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 75
score: 98.88133951822917
patch: block . is CaMeL Function && ( block . is CaMeL Function ) ;
rank: 75
score: 98.8116787997159
patch: return && block . is CaMeL Function ( ) ;
rank: 75
score: 98.8064676920573
patch: break ; } } ;
rank: 75
score: 98.7371826171875
patch: logger . out . println break break ;
rank: 75
score: 98.56423950195312
patch: if ; break ; } break ;
rank: 76
score: 98.90094463641827
patch: prev = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 76
score: 98.87939453125
patch: block . is CaMeL Function || block . is CaMeL Function ) { break ;
rank: 76
score: 98.81048583984375
patch: return block . is CaMeL Function 1 1 ( ) ;
rank: 76
score: 98.80182647705078
patch: break ; } if ( block ;
rank: 76
score: 98.73069254557292
patch: finally { break ; ;
rank: 76
score: 98.66756184895833
patch: result = break ; }
rank: 76
score: 98.56382242838542
patch: if false ; break ; if break ;
rank: 77
score: 98.97160259046052
patch: r = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 77
score: 98.91215684678819
patch: return break ; } } return break ;
rank: 77
score: 98.90003380408653
patch: exception = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 77
score: 98.87543279474431
patch: return ref . is CaMeL Function ) ; } }
rank: 77
score: 98.80898215553977
patch: return return block . is CaMeL Function ( ) ;
rank: 77
score: 98.72734239366319
patch: return false ; break ; System . ;
rank: 77
score: 98.5630594889323
patch: if null ; break ;
rank: 78
score: 99.14258626302083
patch: return block . is CaMeL Function && ref . is CaMeL Function ) ;
rank: 78
score: 98.9664306640625
patch: if ( this . block . is CaMeL Function ) { return false ;
rank: 78
score: 98.8990009014423
patch: state = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 78
score: 98.87265625
patch: return ref . get CaMeL Class ( ) . is CaMeL Function ) ;
rank: 78
score: 98.80848277698864
patch: return ref . is CaMeL Function ( ) false ;
rank: 78
score: 98.72653634207589
patch: break ; this . break ;
rank: 78
score: 98.56166076660156
patch: } break ;
rank: 79
score: 99.14253162202381
patch: block . is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 79
score: 98.96380145733173
patch: q = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 79
score: 98.90976291232639
patch: this . break ; } } break ;
rank: 79
score: 98.89794921875
patch: table = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 79
score: 98.87177068536931
patch: q = block . get CaMeL Parent ( ) ;
rank: 79
score: 98.79597778320313
patch: break ; } if ( block . get ;
rank: 79
score: 98.72647857666016
patch: break ; } finally { break ;
rank: 79
score: 98.5616455078125
patch: break ; if ; break ; if break ;
rank: 80
score: 99.14188232421876
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) . is CaMeL Function ) ;
rank: 80
score: 98.90892028808594
patch: break ; } else return break ;
rank: 80
score: 98.87017059326172
patch: return ref . is CaMeL Function && block . is CaMeL Function ( ) ;
rank: 80
score: 98.8048807779948
patch: return block . is CaMeL Function ) { return false ;
rank: 80
score: 98.79512939453124
patch: break ; } else { throw new ; }
rank: 80
score: 98.72563171386719
patch: break ; ; else { break ;
rank: 80
score: 98.55902099609375
patch: if $NUMBER$ ; break ; break ;
rank: 81
score: 98.96319580078125
patch: block . is CaMeL Function = block . is CaMeL Function ) ;
rank: 81
score: 98.90812683105469
patch: return false ; } else if ;
rank: 81
score: 98.89696326622597
patch: found = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 81
score: 98.86912434895834
patch: return ref . get CaMeL Method ( ) . is CaMeL Function ) ;
rank: 81
score: 98.80258178710938
patch: return block . is CaMeL Function ( ) - 1 ;
rank: 81
score: 98.7928466796875
patch: System . out . println ( $STRING$ break ; }
rank: 81
score: 98.7248026529948
patch: else ; break ; }
rank: 81
score: 98.6585693359375
patch: System . err . println ( $STRING$ ) ;
rank: 81
score: 98.553955078125
patch: System ; break ;
rank: 82
score: 99.13823385799633
patch: block . is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 82
score: 98.9625244140625
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) { return false ;
rank: 82
score: 98.9072265625
patch: return break ; } } return ;
rank: 82
score: 98.86710611979167
patch: block . is CaMeL Function || ( block . is CaMeL Function ) ;
rank: 82
score: 98.80130004882812
patch: return ( ! ! block . is CaMeL Function ) ;
rank: 82
score: 98.79155137803819
patch: break ; } } this . break ;
rank: 82
score: 98.72258843315973
patch: return false ; break ; } break ;
rank: 82
score: 98.65834350585938
patch: throw new Runtime CaMeL Exception ( $STRING$ + ;
rank: 82
score: 98.55191802978516
patch: if false ; break ; break ;
rank: 83
score: 99.13788713727679
patch: return block . is CaMeL Function && block . is CaMeL Function ;
rank: 83
score: 98.9603207236842
patch: ref = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 83
score: 98.89671912560097
patch: scope = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 83
score: 98.86708762428977
patch: result = block . get CaMeL Parent ( ) ;
rank: 83
score: 98.80126953125
patch: return ( node . is CaMeL Function ) ;
rank: 83
score: 98.79126993815105
patch: return false ; } ;
rank: 83
score: 98.72194998604911
patch: try { break ; ; ;
rank: 83
score: 98.65350341796875
patch: return ! break ; }
rank: 83
score: 98.54533386230469
patch: return * break ; / break ;
rank: 84
score: 99.13714890252976
patch: is CaMeL Function = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 84
score: 98.95982360839844
patch: block . get CaMeL Basic CaMeL Block ( ) . add ( block ) ;
rank: 84
score: 98.89634352463942
patch: it = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 84
score: 98.86676025390625
patch: return ( block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ) ;
rank: 84
score: 98.80064900716145
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ;
rank: 84
score: 98.78951687282986
patch: break ; case Basic CaMeL Block . ;
rank: 84
score: 98.54142930772569
patch: break ; } if break ; break ;
rank: 85
score: 99.13620476973684
patch: block . is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 85
score: 98.89851379394531
patch: throw new Runtime CaMeL Exception break ;
rank: 85
score: 98.86426890980114
patch: if ( block . is CaMeL Function ) break ;
rank: 85
score: 98.79710693359375
patch: return block . is CaMeL Function ) false ;
rank: 85
score: 98.78900756835938
patch: break ; } else { break ; } }
rank: 85
score: 98.71954345703125
patch: while false ; break ;
rank: 85
score: 98.64739990234375
patch: break compare CaMeL To ( break ) ;
rank: 85
score: 98.54004669189453
patch: if ; break ; break ; }
rank: 86
score: 99.13605414496527
patch: return block . is CaMeL Function && block . get CaMeL Parent ( ) != null ;
rank: 86
score: 98.95954047309027
patch: block = ( Basic CaMeL Block ) block . get CaMeL Basic CaMeL Block ( ) ;
rank: 86
score: 98.89347017728366
patch: c = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 86
score: 98.8890380859375
patch: break ; } else if break ; }
rank: 86
score: 98.86410522460938
patch: return ( block . is CaMeL Function ) ; } }
rank: 86
score: 98.795849609375
patch: return block . is CaMeL Interface ( ) ;
rank: 86
score: 98.71761745876736
patch: break ; } break ; for break ;
rank: 86
score: 98.54003034319196
patch: if ; break ; / /
rank: 87
score: 99.13602878736413
patch: return super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block . get CaMeL Parent ( ) ) ;
rank: 87
score: 98.89127604166667
patch: list . if ( block . is CaMeL Function ) {
rank: 87
score: 98.88555908203125
patch: return ; ; break ; }
rank: 87
score: 98.79428932883523
patch: return block . is CaMeL Function ) - true ;
rank: 87
score: 98.77818714488636
patch: return true ; } else { return false ; }
rank: 87
score: 98.71712917751736
patch: logger . out . println break false ;
rank: 87
score: 98.64598253038194
patch: throw new Illegal CaMeL State CaMeL Exception ;
rank: 87
score: 98.5385513305664
patch: break ; break ; if ; {
rank: 88
score: 99.1350430575284
patch: return block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 88
score: 98.95233475534539
patch: q = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 88
score: 98.88870239257812
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( false ) ;
rank: 88
score: 98.88289794921874
patch: return false ; } else { break ; }
rank: 88
score: 98.79354858398438
patch: return ( this . block . is CaMeL Function ) ;
rank: 88
score: 98.77592250279018
patch: break ; ; } else {
rank: 88
score: 98.71701049804688
patch: try { break ; }
rank: 88
score: 98.64143371582031
patch: throw new Runtime CaMeL Exception ( ;
rank: 88
score: 98.53623962402344
patch: break ; if ; if break ;
rank: 89
score: 98.95149739583333
patch: result = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 89
score: 98.87838745117188
patch: return null ; break ; } }
rank: 89
score: 98.79322398792614
patch: return ( block . is CaMeL Function ( ) ;
rank: 89
score: 98.77428327287946
patch: return false ; } * /
rank: 89
score: 98.71523030598958
patch: return null ; break ; if break ;
rank: 89
score: 98.53540717230902
patch: break ; break ; if break ; }
rank: 90
score: 99.1328125
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) + false ;
rank: 90
score: 98.88561248779297
patch: if ( block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) {
rank: 90
score: 98.87668185763889
patch: return false ; } else return false ;
rank: 90
score: 98.86066080729167
patch: return ref . get CaMeL Reference ( ) . is CaMeL Function ) ;
rank: 90
score: 98.79231400923295
patch: return block . is CaMeL Function ) - false ;
rank: 90
score: 98.7740811434659
patch: switch ( ref . get CaMeL Type ( ) ;
rank: 90
score: 98.70862688337054
patch: break ; break ; / ;
rank: 90
score: 98.52876499720982
patch: break ; } ; break ;
rank: 91
score: 98.94901899857955
patch: block . is CaMeL Function ) { return false ;
rank: 91
score: 98.8854229266827
patch: attr = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 91
score: 98.8579610188802
patch: return ref . get CaMeL Parent ( ) != null ;
rank: 91
score: 98.7916592684659
patch: return block . is CaMeL Function ) * * /
rank: 91
score: 98.76922607421875
patch: break ; } ; ;
rank: 91
score: 98.70835658482143
patch: else { return false ; }
rank: 91
score: 98.52239118303571
patch: if ; = ; break ;
rank: 92
score: 98.8833477313702
patch: o = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 92
score: 98.8760986328125
patch: return false ; } finally ;
rank: 92
score: 98.85591125488281
patch: block = ( Basic CaMeL Block ) block . get CaMeL Parent ( ) ;
rank: 92
score: 98.7894287109375
patch: break && ! block . is CaMeL Function ( ) ;
rank: 92
score: 98.63202514648438
patch: break . get CaMeL Target ( ) ; }
rank: 92
score: 98.5213623046875
patch: break ; ; if break ; if break ;
rank: 93
score: 99.128662109375
patch: return ref . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 93
score: 98.94595497532895
patch: block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . break ;
rank: 93
score: 98.88328334263393
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ref ) ;
rank: 93
score: 98.7885409268466
patch: return block . is CaMeL Function { return false ;
rank: 93
score: 98.76570638020833
patch: throw new Interrupted CaMeL Exception ( ) ;
rank: 93
score: 98.70703996930804
patch: break ; ; return true ;
rank: 93
score: 98.62939453125
patch: this . break ; }
rank: 94
score: 99.1269890280331
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) . break ;
rank: 94
score: 98.88295200892857
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ) ;
rank: 94
score: 98.87197875976562
patch: return null ; }
rank: 94
score: 98.85502485795455
patch: o = block . get CaMeL Parent ( ) ;
rank: 94
score: 98.76418235085227
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 94
score: 98.70479038783482
patch: finally { new break ; }
rank: 94
score: 98.62864379882812
patch: System . out . println ( break ) ;
rank: 94
score: 98.51955159505208
patch: return * break ; /
rank: 95
score: 99.12656037703805
patch: ref . next = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 95
score: 98.88287353515625
patch: rs . if ( block . is CaMeL Function ) {
rank: 95
score: 98.86982073102679
patch: break ; } else if ;
rank: 95
score: 98.85276442307692
patch: return get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 95
score: 98.785888671875
patch: System . out . println ( ) ; return false ;
rank: 95
score: 98.76387532552083
patch: break ; } if ;
rank: 95
score: 98.69832356770833
patch: break { break ; }
rank: 95
score: 98.51931762695312
patch: break ; ; / if break ;
rank: 96
score: 99.12522786458334
patch: ref . next = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 96
score: 98.94271850585938
patch: return ; } block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 96
score: 98.88125610351562
patch: return block . is CaMeL Function && block . is CaMeL Function ) ; }
rank: 96
score: 98.8695297241211
patch: break ; } else return false ;
rank: 96
score: 98.8522216796875
patch: -- ref . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 96
score: 98.78574440696023
patch: return block . is CaMeL Function ( $STRING$ ) ;
rank: 96
score: 98.76319231305804
patch: break ; } this . ;
rank: 96
score: 98.69744873046875
patch: break ; ; catch break ;
rank: 96
score: 98.62367248535156
patch: throw new Runtime CaMeL Exception ; }
rank: 96
score: 98.51885986328125
patch: if ; { break ; break ;
rank: 97
score: 99.12486165364584
patch: ref . is CaMeL Function = block . get CaMeL Parent ( ) ;
rank: 97
score: 98.94123391544117
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 97
score: 98.8812255859375
patch: tmp = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 97
score: 98.86531066894531
patch: return break ; } return break ;
rank: 97
score: 98.85118001302084
patch: return ref . equals ( block . get CaMeL Parent ( ) ) ;
rank: 97
score: 98.78570556640625
patch: return block . is CaMeL Function ( ) _
rank: 97
score: 98.76047585227273
patch: if ( ! Boolean . TRUE . equals ( ;
rank: 97
score: 98.69640435112848
patch: while break ; break ; if break ;
rank: 97
score: 98.62295968191964
patch: break false ; } break ;
rank: 97
score: 98.51717703683036
patch: else if break ; break ;
rank: 98
score: 98.87844613882211
patch: p = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 98
score: 98.86507415771484
patch: return false ; } } else ;
rank: 98
score: 98.84990900213069
patch: block = ref . get CaMeL Parent ( ) ;
rank: 98
score: 98.69491916232639
patch: break ; } break ; while break ;
rank: 98
score: 98.61909484863281
patch: result = true ; break ; }
rank: 98
score: 98.51577758789062
patch: if ; break ; }
rank: 99
score: 99.12350802951389
patch: is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 99
score: 98.93865966796875
patch: return get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 99
score: 98.87796783447266
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) . return false ;
rank: 99
score: 98.84654235839844
patch: result = block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ) ;
rank: 99
score: 98.78450927734374
patch: return block . is CaMeL Sealed ( ) ;
rank: 99
score: 98.7578837076823
patch: return ; } * /
rank: 99
score: 98.69451032366071
patch: return false ; while break ;
rank: 100
score: 99.12229322350544
patch: return ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 100
score: 98.93863932291667
patch: return block . get CaMeL Method ( ) . is CaMeL Function ) ;
rank: 100
score: 98.87778883713942
patch: rs = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 100
score: 98.86306326729911
patch: return false ; } } else
rank: 100
score: 98.84110514322917
patch: return ref . is CaMeL Function ( ) ; } }
rank: 100
score: 98.75149875217014
patch: return true ; } this . break ;
rank: 100
score: 98.69368489583333
patch: catch false ; break ; } break ;
rank: 100
score: 98.6126708984375
patch: logger . info ( $STRING$ ) ;
rank: 100
score: 98.51299438476562
patch: break ; break ; if ; { break ;
rank: 101
score: 99.12194242931548
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function . is CaMeL Function ) ;
rank: 101
score: 98.938232421875
patch: block = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 101
score: 98.87752532958984
patch: end CaMeL Block ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 101
score: 98.85626220703125
patch: return false ; } else break ;
rank: 101
score: 98.78099568684895
patch: return block . is CaMeL Function ( ) . true ;
rank: 101
score: 98.75145467122395
patch: break ; } ; }
rank: 101
score: 98.69062805175781
patch: break ; break ; System . ;
rank: 101
score: 98.61233181423611
patch: Thread . sleep ( $NUMBER$ ) ; }
rank: 101
score: 98.51234436035156
patch: return * break ; if break ;
rank: 102
score: 98.8772723858173
patch: node = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 102
score: 98.85249837239583
patch: return break ; } else
rank: 102
score: 98.83956909179688
patch: result = block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 102
score: 98.77980735085227
patch: return ref . is CaMeL Function ) + false ;
rank: 102
score: 98.75056966145833
patch: throw new Internal CaMeL Error ( ; }
rank: 102
score: 98.68922642299107
patch: break ; try { break ;
rank: 102
score: 98.61212158203125
patch: block = block . get CaMeL Parent ; }
rank: 102
score: 98.509765625
patch: if ; break ; if ;
rank: 103
score: 99.12172154017857
patch: return ref . is CaMeL Function && block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 103
score: 98.87725067138672
patch: res = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 103
score: 98.84518868582589
patch: return false ; } else ;
rank: 103
score: 98.83883666992188
patch: return ref . is CaMeL Function ) ; }
rank: 103
score: 98.7781649502841
patch: return block . is CaMeL Function ) ? break ;
rank: 103
score: 98.68704833984376
patch: value = break ;
rank: 103
score: 98.61111014229911
patch: throw new ; } break ;
rank: 103
score: 98.50963592529297
patch: if ; break ; throw break ;
rank: 104
score: 99.121240234375
patch: is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 104
score: 98.93562316894531
patch: return block . get CaMeL Method ( ) . is CaMeL Function ( ) ;
rank: 104
score: 98.87657063802084
patch: ! block . get CaMeL Parent ( ) . is CaMeL Function ) {
rank: 104
score: 98.83579799107143
patch: if ( block . is CaMeL Function ) { return false ; }
rank: 104
score: 98.7767001065341
patch: return ( block . is CaMeL Function ( ) )
rank: 104
score: 98.74744330512152
patch: break ; } block = block . ;
rank: 104
score: 98.60717010498047
patch: result = block . break ; }
rank: 104
score: 98.50848388671875
patch: return true ; if break ;
rank: 105
score: 99.12097698709239
patch: return block . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref ) ;
rank: 105
score: 98.84292602539062
patch: return true ; break ; } }
rank: 105
score: 98.83546956380208
patch: if ( block . is CaMeL Function ) return false ;
rank: 105
score: 98.77658913352273
patch: return block . is CaMeL Function ) return false ;
rank: 105
score: 98.68479919433594
patch: else break ; } if break ;
rank: 105
score: 98.5076904296875
patch: if break ; break ; }
rank: 106
score: 99.1201171875
patch: block . is CaMeL Function = ! block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 106
score: 98.93406325120192
patch: if ( ref . is CaMeL Function ) { return false ;
rank: 106
score: 98.87123801491477
patch: table . return block . is CaMeL Function ) ;
rank: 106
score: 98.84187316894531
patch: return true ; } return false ;
rank: 106
score: 98.83541870117188
patch: return ref . get CaMeL Parent ( ) . is CaMeL Empty ( ) ;
rank: 106
score: 98.77620442708333
patch: return false || block . is CaMeL Function ( ) ;
rank: 106
score: 98.68478054470486
patch: logger . err . println break break ;
rank: 106
score: 98.60225830078124
patch: logger . info ( $STRING$ + break ) ;
rank: 106
score: 98.49701690673828
patch: if break ; break ; if ;
rank: 107
score: 99.119677734375
patch: block . is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 107
score: 98.93323567708333
patch: ref . is CaMeL Function = block . is CaMeL Function ( ) ;
rank: 107
score: 98.86896221454327
patch: row = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 107
score: 98.83283025568181
patch: result = ! block . is CaMeL Function ) ;
rank: 107
score: 98.77519087357955
patch: System . out . println ( ) ; break ;
rank: 107
score: 98.74259948730469
patch: break ; } else if ( ;
rank: 107
score: 98.68353271484375
patch: break ; for break ; break ;
rank: 107
score: 98.59981079101563
patch: throw new Assertion CaMeL Error ( $STRING$ ; }
rank: 107
score: 98.49640764508929
patch: if ; System ; break ;
rank: 108
score: 99.11763305664063
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ;
rank: 108
score: 98.9332275390625
patch: return ref . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; }
rank: 108
score: 98.86562674386161
patch: { block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 108
score: 98.83285522460938
patch: return false ; } finally { }
rank: 108
score: 98.741943359375
patch: this . ; return false ; }
rank: 108
score: 98.68352399553571
patch: break ; case break ; ;
rank: 108
score: 98.59742431640625
patch: body = block . get CaMeL Parent ; }
rank: 108
score: 98.49595424107143
patch: return ; ; if break ;
rank: 109
score: 99.11526925223214
patch: return block . is CaMeL Function || block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 109
score: 98.93306477864583
patch: if ( block . is CaMeL Declaration ) { break ;
rank: 109
score: 98.86534534801136
patch: prev = block . get CaMeL Parent ( ) ;
rank: 109
score: 98.83238002232143
patch: break ; } } if ;
rank: 109
score: 98.82405229048295
patch: e = block . get CaMeL Parent ( ) ;
rank: 109
score: 98.7747802734375
patch: return block . is CaMeL Function ( ] ) ;
rank: 109
score: 98.74073375355114
patch: System . err . println ( $STRING$ break ; }
rank: 109
score: 98.67911202566964
patch: finally { break ; break ;
rank: 109
score: 98.59674750434027
patch: buf . append ( break ) ; }
rank: 109
score: 98.49581146240234
patch: return n ; println ; break ;
rank: 110
score: 99.11363525390625
patch: if ( block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) { break ;
rank: 110
score: 98.93288748604911
patch: block = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 110
score: 98.86397298177083
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 110
score: 98.83057403564453
patch: return break ; } if break ;
rank: 110
score: 98.82371520996094
patch: break ; } block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 110
score: 98.77474975585938
patch: return ( block . is CaMeL Function ) - false ;
rank: 110
score: 98.49564906529018
patch: if false ; if break ;
rank: 111
score: 98.86395670572917
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ; break ;
rank: 111
score: 98.83048248291016
patch: return false ; } catch ; }
rank: 111
score: 98.82186686197916
patch: return $STRING$ . equals ( block . is CaMeL Function ( ) ) ;
rank: 111
score: 98.77446954900569
patch: return || block . is CaMeL Function ( ) ;
rank: 111
score: 98.73702663845486
patch: break ; ; } else { break ;
rank: 111
score: 98.67410714285714
patch: break ; break ; * /
rank: 111
score: 98.5950927734375
patch: throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 111
score: 98.4946797688802
patch: if true ; break ;
rank: 112
score: 99.11255992542614
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && block . is CaMeL Function ;
rank: 112
score: 98.93177795410156
patch: return block . get CaMeL Class ( ) . is CaMeL Function ( ) ;
rank: 112
score: 98.8638446514423
patch: current CaMeL Parent = block . get CaMeL Parent ( ) ;
rank: 112
score: 98.82979329427083
patch: return break ; } else if break ;
rank: 112
score: 98.8204574584961
patch: return ref . is CaMeL Function || block . is CaMeL Function ( ) ;
rank: 112
score: 98.77385919744319
patch: return false && block . is CaMeL Function ) ;
rank: 112
score: 98.73626030815973
patch: throw new Assertion CaMeL Error ( ; }
rank: 112
score: 98.67399088541667
patch: break ; logger . println break false ;
rank: 112
score: 98.59503173828125
patch: this . break = true ; break ; }
rank: 112
score: 98.49409315321181
patch: break ; ; if ; ; break ;
rank: 113
score: 99.11176614200367
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref ) ;
rank: 113
score: 98.93089948381696
patch: if ( ! block . is CaMeL Function ) { return false ;
rank: 113
score: 98.86146129261364
patch: t = block . get CaMeL Parent ( ) ;
rank: 113
score: 98.82977294921875
patch: return break ; } finally { break ; }
rank: 113
score: 98.77182006835938
patch: return block . is CaMeL Function CaMeL Declaration ( ) ;
rank: 113
score: 98.7349853515625
patch: System . out . println ( $STRING$ + block ;
rank: 113
score: 98.67321099175348
patch: ++ break ; break ; if break ;
rank: 113
score: 98.59170193142361
patch: return false ; } } return true ;
rank: 113
score: 98.49395751953125
patch: if break ; else break ;
rank: 114
score: 99.11176409040179
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 114
score: 98.93060772235577
patch: if ( block . is CaMeL Function ) { return true ;
rank: 114
score: 98.86113891601562
patch: while ( block . is CaMeL Function ) {
rank: 114
score: 98.77114868164062
patch: return ref . is CaMeL Function ( ) . break ;
rank: 114
score: 98.73489040798611
patch: break ; } / * * break ;
rank: 114
score: 98.67288547092014
patch: logger . parse ( $STRING$ ; break ;
rank: 114
score: 98.49394880022321
patch: if ( break ; break ;
rank: 115
score: 99.11068870907738
patch: block = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 115
score: 98.92929559004934
patch: c = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 115
score: 98.86105581430289
patch: head = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 115
score: 98.82856096540179
patch: return break ; } } else
rank: 115
score: 98.7710469563802
patch: return ref . is CaMeL Function ( ) . false ;
rank: 115
score: 98.73431396484375
patch: throw new Interrupted CaMeL Exception ( ) ; }
rank: 115
score: 98.67265101841518
patch: result = break || break ;
rank: 116
score: 99.1095958891369
patch: block . next = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 116
score: 98.92868276742789
patch: if ( block . is CaMeL Local ) { return false ;
rank: 116
score: 98.86083984375
patch: form = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 116
score: 98.82720947265625
patch: System . out . println break ; } }
rank: 116
score: 98.81511688232422
patch: result = ( Basic CaMeL Block ) block . get CaMeL Parent ( ) ;
rank: 116
score: 98.7696866122159
patch: return false ( block . is CaMeL Function ) ;
rank: 116
score: 98.733935546875
patch: break ; } block = block . get ;
rank: 116
score: 98.59004041883681
patch: result . add ( break ) ; }
rank: 117
score: 99.10854957217262
patch: return block . is CaMeL Function && ref . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 117
score: 98.92786661783855
patch: if ( block . is CaMeL Function ) { return ;
rank: 117
score: 98.82666015625
patch: return false ; } return ;
rank: 117
score: 98.7677334872159
patch: return block . is CaMeL Function ( ) $NUMBER$ ;
rank: 117
score: 98.67212677001953
patch: return false ; ; if break ;
rank: 117
score: 98.48981323242188
patch: break ; break ; break ; if break ;
rank: 118
score: 99.10846416766827
patch: block . next = block . get CaMeL Parent ( ) ;
rank: 118
score: 98.92783717105263
patch: result = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 118
score: 98.8600845336914
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function _
rank: 118
score: 98.82516818576389
patch: return false ; } } catch break ;
rank: 118
score: 98.81197415865384
patch: if ( block . is CaMeL Function ) { break ; }
rank: 118
score: 98.76655717329545
patch: return ref . is CaMeL Function ) + true ;
rank: 118
score: 98.72913818359375
patch: break ; } if ( block . equals ;
rank: 118
score: 98.66937255859375
patch: out . next ( ; break ;
rank: 118
score: 98.5789566040039
patch: break ; } if ( break )
rank: 118
score: 98.48971993582589
patch: throw break ; } break ;
rank: 119
score: 98.92778778076172
patch: return ; } block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 119
score: 98.85922475961539
patch: z = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 119
score: 98.82516140407986
patch: return true ; } } if break ;
rank: 119
score: 98.81148856026786
patch: return block . is CaMeL Function ) ; } } return true ;
rank: 119
score: 98.76641845703125
patch: return block . is CaMeL Function ( ) == false ;
rank: 119
score: 98.72746276855469
patch: break ; } / * * ;
rank: 119
score: 98.48897705078124
patch: break ; if ; = break ; break ;
rank: 120
score: 99.10659391983695
patch: block . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 120
score: 98.92662556966145
patch: return block . is CaMeL Function ( ) ; break ;
rank: 120
score: 98.85882161458333
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ; }
rank: 120
score: 98.82491048177083
patch: return ; ; } } return false ;
rank: 120
score: 98.76536976207386
patch: break | ( block . is CaMeL Function ) ;
rank: 120
score: 98.72499593098958
patch: break ; } else { return ; }
rank: 120
score: 98.66810438368056
patch: logger . error ( $STRING$ ; break ;
rank: 120
score: 98.57780151367187
patch: logger . info ( $STRING$ ; break ; }
rank: 120
score: 98.48873562282986
patch: if ; = break ; ; break ;
rank: 121
score: 99.10642408288044
patch: ref . is CaMeL Function = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 121
score: 98.82290649414062
patch: return false ; } else return ;
rank: 121
score: 98.81009674072266
patch: block = block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 121
score: 98.76491477272727
patch: return false || block . is CaMeL Function ) ;
rank: 121
score: 98.72498914930556
patch: break ; } ; } return true ;
rank: 121
score: 98.66805013020833
patch: return true ; break ;
rank: 121
score: 98.577734375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$
rank: 121
score: 98.48616536458333
patch: break ; if ; break ; if ;
rank: 122
score: 98.926513671875
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; break ;
rank: 122
score: 98.85850423177084
patch: ! block . is CaMeL Function && block . is CaMeL Function ) {
rank: 122
score: 98.82115342881944
patch: break ; } finally { break ; }
rank: 122
score: 98.76451416015625
patch: return block . is CaMeL Function 1 ) ;
rank: 122
score: 98.72364637586806
patch: return true ; } else { break ;
rank: 122
score: 98.66792297363281
patch: break ; out . next break ;
rank: 122
score: 98.57720269097223
patch: sb . append ( $STRING$ ) ; }
rank: 122
score: 98.48536028180804
patch: if break ; break ; /
rank: 123
score: 99.10592651367188
patch: return block . is CaMeL Function && ! block . is CaMeL Function ) ;
rank: 123
score: 98.92620490579044
patch: ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 123
score: 98.85747821514423
patch: query = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 123
score: 98.81893484933036
patch: { return false ; } }
rank: 123
score: 98.80590057373047
patch: result = block . is CaMeL Function || block . is CaMeL Function ) ;
rank: 123
score: 98.7622403231534
patch: return block . is CaMeL Function ( null ) ;
rank: 123
score: 98.72327769886364
patch: break ; case Basic CaMeL Block . FUNCTION : ;
rank: 123
score: 98.66635131835938
patch: try { break ; ;
rank: 123
score: 98.57575819227431
patch: result . add ( block ) ; }
rank: 123
score: 98.48472595214844
patch: if break ; ; ; break ;
rank: 124
score: 99.10490616508152
patch: return super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref . get CaMeL Parent ( ) ) ;
rank: 124
score: 98.92443084716797
patch: return block . is CaMeL Function ( ) . is CaMeL Function ( ) ;
rank: 124
score: 98.85708383413461
patch: elem = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 124
score: 98.80473981584821
patch: block = ref . get CaMeL Basic CaMeL Block ( ) ; }
rank: 124
score: 98.76163736979167
patch: if ( this . is CaMeL Function ) { break ;
rank: 124
score: 98.72224256727431
patch: break ; } else { return false ;
rank: 124
score: 98.57552083333333
patch: sb . append ( break ) ; }
rank: 124
score: 98.48207397460938
patch: if false ; break ; if ; break ;
rank: 125
score: 99.1048648231908
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) + false ;
rank: 125
score: 98.92301119290866
patch: loop = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 125
score: 98.85702514648438
patch: elements . if ( block . is CaMeL Function ) {
rank: 125
score: 98.81776428222656
patch: return true ; } } else {
rank: 125
score: 98.80422537667411
patch: return ref . get CaMeL Basic CaMeL Block ( ) == null ;
rank: 125
score: 98.76158558238636
patch: return block . is CaMeL Function ) : true ;
rank: 125
score: 98.72089177911931
patch: target = block . get CaMeL Target ( break ;
rank: 125
score: 98.66488647460938
patch: callback . break ( break ) ;
rank: 125
score: 98.57503255208333
patch: list . add ( block ) ; }
rank: 125
score: 98.48118760850694
patch: break ; ; ; if ; break ;
rank: 126
score: 99.10463256835938
patch: return block . is CaMeL Function && block . is CaMeL Function && block . is CaMeL Function ;
rank: 126
score: 98.92209298270089
patch: block . if ( block . is CaMeL Function ) { break ;
rank: 126
score: 98.85645403180804
patch: match ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 126
score: 98.8172607421875
patch: return null ; } finally { break ; }
rank: 126
score: 98.7598368326823
patch: return block . is CaMeL Function 1 $NUMBER$ ( ) ;
rank: 126
score: 98.72017124720982
patch: throw new break $NUMBER$ ; }
rank: 126
score: 98.66476004464286
patch: try { break ; break ;
rank: 126
score: 98.57492404513889
patch: stack . add ( block ) ; }
rank: 126
score: 98.48046875
patch: break ; ; if ; = break ;
rank: 127
score: 99.10450846354166
patch: return block . equals ( ref . get CaMeL Parent ( ) ) ;
rank: 127
score: 98.85427420479911
patch: rblock = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 127
score: 98.75895182291667
patch: return block . is CaMeL Function ( ) + ) ;
rank: 127
score: 98.71555786132812
patch: System . out . println ( $STRING$ break ;
rank: 127
score: 98.48002624511719
patch: if ; ! break ; break ;
rank: 128
score: 98.91988932291666
patch: block . is CaMeL Function = ( block . is CaMeL Function ) ;
rank: 128
score: 98.85391000600961
patch: thread = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 128
score: 98.81426391601562
patch: return false ; } } else return false ;
rank: 128
score: 98.79258034446023
patch: r = block . get CaMeL Parent ( ) ;
rank: 128
score: 98.75740559895833
patch: break && block . is CaMeL Function 1 ( ) ;
rank: 128
score: 98.71196899414062
patch: break ; ; } else { break ; }
rank: 128
score: 98.66330973307292
patch: break ; while break ;
rank: 128
score: 98.56868489583333
patch: report CaMeL Error ( $STRING$ ) ; }
rank: 128
score: 98.47949896918402
patch: break ; ; if break ; if ;
rank: 129
score: 99.10350206163194
patch: return ( ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 129
score: 98.85353781960227
patch: return block . is CaMeL Function ) ; } else
rank: 129
score: 98.81259591238839
patch: return ; ; } else {
rank: 129
score: 98.79217529296875
patch: return is CaMeL Function && block . is CaMeL Function ( ) ;
rank: 129
score: 98.7567471590909
patch: return block . is CaMeL Function [ 0 ] ;
rank: 129
score: 98.66281127929688
patch: break ; ; break ;
rank: 129
score: 98.56624755859374
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$
rank: 130
score: 99.10238792782738
patch: return block . get CaMeL Parent ( ) . get CaMeL Node ( ) . is CaMeL Function ) ;
rank: 130
score: 98.85118103027344
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function {
rank: 130
score: 98.81174926757812
patch: return false ; } else if break ; }
rank: 130
score: 98.79193522135417
patch: else { block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 130
score: 98.75644938151042
patch: block . is CaMeL Function = false ; return true ;
rank: 130
score: 98.71176979758523
patch: throw new Null CaMeL Pointer CaMeL Exception ( ; }
rank: 130
score: 98.66263253348214
patch: else { return break ; }
rank: 130
score: 98.564111328125
patch: this . break = false ; break ; }
rank: 130
score: 98.478271484375
patch: if ; void break ; break ;
rank: 131
score: 98.918701171875
patch: result = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 131
score: 98.85100848858173
patch: b = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 131
score: 98.80976213727679
patch: return break ; } finally {
rank: 131
score: 98.79130859375
patch: result = block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ;
rank: 131
score: 98.75643310546874
patch: return block . is CaMeL Function = false ;
rank: 131
score: 98.71053466796874
patch: return ; } ;
rank: 131
score: 98.66218397352431
patch: if break ; break ; } break ;
rank: 131
score: 98.56346435546875
patch: throw new Runtime CaMeL Exception ( ) ; }
rank: 131
score: 98.47715454101562
patch: if ; break ; if break ; break ;
rank: 132
score: 99.10172119140626
patch: return block . is CaMeL Function && block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 132
score: 98.91864977384868
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ; break ;
rank: 132
score: 98.85004425048828
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( this ) ;
rank: 132
score: 98.79076131184895
patch: block = block . get CaMeL Parent ( ) ; }
rank: 132
score: 98.7537508877841
patch: return block . is CaMeL Function ( true ) ;
rank: 132
score: 98.70893012152777
patch: break ; } } finally { break ;
rank: 132
score: 98.65924750434027
patch: break ; logger . println break ) ;
rank: 132
score: 98.47660319010417
patch: if ; break ; break ; break ;
rank: 133
score: 99.10115913722827
patch: return block . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 133
score: 98.91809760199652
patch: Basic CaMeL Block block = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 133
score: 98.84989107572116
patch: return ( block . is CaMeL Function ) ; } else {
rank: 133
score: 98.80820138113839
patch: return ; ; } } }
rank: 133
score: 98.79060502485795
patch: p = block . get CaMeL Parent ( ) ;
rank: 133
score: 98.75343831380208
patch: break || ! ( block . is CaMeL Function ) ;
rank: 133
score: 98.70331365411931
patch: switch ( block . get CaMeL Id ( ) )
rank: 133
score: 98.65827941894531
patch: break ; ; ; { break ;
rank: 133
score: 98.56231689453125
patch: target = block . get CaMeL Target ( ;
rank: 133
score: 98.47416469029018
patch: if ; { break ; ;
rank: 134
score: 99.09994652157738
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block . get CaMeL Parent ( ) ) ;
rank: 134
score: 98.91808143028847
patch: r = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 134
score: 98.84986223493304
patch: return block . is CaMeL Function || block . is CaMeL Function ;
rank: 134
score: 98.80780901227679
patch: break ; } else { }
rank: 134
score: 98.7889873798077
patch: return ref . equals ( block . is CaMeL Function ) ;
rank: 134
score: 98.7525634765625
patch: return block . is CaMeL Function ) . break ;
rank: 134
score: 98.7030917080966
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ;
rank: 134
score: 98.6579818725586
patch: break ; case break ; break ;
rank: 134
score: 98.5606201171875
patch: break true ; }
rank: 134
score: 98.47345648871527
patch: if break ; break ; for break ;
rank: 135
score: 99.099853515625
patch: return block . get CaMeL Node ( ) . is CaMeL Function ) ;
rank: 135
score: 98.91758219401042
patch: result = ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 135
score: 98.8495342548077
patch: ctor = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 135
score: 98.7886962890625
patch: res = block . get CaMeL Parent ( ) ;
rank: 135
score: 98.75044759114583
patch: return block . is CaMeL Function 1 ;
rank: 135
score: 98.70286865234375
patch: return true ; } else { break ; }
rank: 135
score: 98.65754917689732
patch: else break ; break ; }
rank: 135
score: 98.5604248046875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ;
rank: 135
score: 98.47215576171875
patch: break ; break ; if break ; break ;
rank: 136
score: 98.84808819110577
patch: end = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 136
score: 98.80699157714844
patch: return break ; } return true ;
rank: 136
score: 98.78746686662946
patch: return ref . get CaMeL Parent ( ) instanceof Basic CaMeL Block ;
rank: 136
score: 98.70055042613636
patch: return false ; } else { return false ; }
rank: 136
score: 98.6571273803711
patch: try { break ; if break ;
rank: 136
score: 98.559326171875
patch: report CaMeL Error ( break ) ; }
rank: 136
score: 98.47030639648438
patch: if ; = start ; break ;
rank: 137
score: 99.09946511008523
patch: block . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 137
score: 98.91529676649306
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; * /
rank: 137
score: 98.80624389648438
patch: return break ; } finally
rank: 137
score: 98.74830118815105
patch: break && ! ( block . is CaMeL Function ) ;
rank: 137
score: 98.69828657670455
patch: System . out . println ( $STRING$ + ref ;
rank: 137
score: 98.65435028076172
patch: try { break ; break ; }
rank: 137
score: 98.55901336669922
patch: } else { return false ; }
rank: 137
score: 98.47017415364583
patch: return * break ; / / break ;
rank: 138
score: 99.09935302734375
patch: return block . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) != null ;
rank: 138
score: 98.91526692708334
patch: return block . get CaMeL Class ( ) . is CaMeL Function ) ;
rank: 138
score: 98.84566556490384
patch: expr = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 138
score: 98.80398559570312
patch: this . break ; } } return false ;
rank: 138
score: 98.74822998046875
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 138
score: 98.65223911830357
patch: else { for break ; }
rank: 138
score: 98.55863444010417
patch: logger . info ( $STRING$ ; break ;
rank: 138
score: 98.46976470947266
patch: break ; if ; break ; }
rank: 139
score: 98.91517398231908
patch: result = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 139
score: 98.84398475060097
patch: rs = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 139
score: 98.78321184430804
patch: return ref . equals ( ! block . is CaMeL Function ) ;
rank: 139
score: 98.746826171875
patch: if ( . is CaMeL Function ) { break ;
rank: 139
score: 98.6971435546875
patch: return false ; } this . break ;
rank: 139
score: 98.65043422154018
patch: catch break ; break ; }
rank: 139
score: 98.55813598632812
patch: this . break ; } break ;
rank: 140
score: 99.09872834578805
patch: return block . is CaMeL Function || block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 140
score: 98.91380550986842
patch: cls = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 140
score: 98.84375762939453
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( $STRING$ ) ;
rank: 140
score: 98.77961077008929
patch: if ( block . is CaMeL Function ) { break ; } }
rank: 140
score: 98.74644886363636
patch: return block . is CaMeL Function ) * * ;
rank: 140
score: 98.69364790482955
patch: if ( ! Boolean . value CaMeL Of ( ;
rank: 140
score: 98.65023367745536
patch: break ; ; return break ;
rank: 140
score: 98.5567138671875
patch: result = break ;
rank: 140
score: 98.46884765625
patch: if break ; break ; ; if break ;
rank: 141
score: 99.09854789402173
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function || block . is CaMeL Function ) ;
rank: 141
score: 98.91370307074652
patch: block = ( Basic CaMeL Block ) ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 141
score: 98.8418438251202
patch: att = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 141
score: 98.80329241071429
patch: return null ; } finally {
rank: 141
score: 98.7783447265625
patch: else { block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 141
score: 98.74550374348958
patch: return true && block . is CaMeL Function ( ) ;
rank: 141
score: 98.6934814453125
patch: break ; if ( block . ; }
rank: 141
score: 98.55660671657986
patch: break ; default : return false ; }
rank: 141
score: 98.46872287326389
patch: break ; if ; if ; break ;
rank: 142
score: 99.09665749289773
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) . is CaMeL Function ) ;
rank: 142
score: 98.91317928538604
patch: block = block . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 142
score: 98.84093475341797
patch: n = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 142
score: 98.74534098307292
patch: break ( / * || block . is CaMeL Function )
rank: 142
score: 98.69242858886719
patch: if ( ; else break ; }
rank: 142
score: 98.64818657769098
patch: break ; out . println break ; ;
rank: 142
score: 98.55409071180556
patch: statements . add ( block ) ; }
rank: 142
score: 98.46835327148438
patch: if ; = null ; break ;
rank: 143
score: 99.09634560032895
patch: return block . is CaMeL Function && block . is CaMeL Function . is CaMeL Function ) ;
rank: 143
score: 98.911474609375
patch: return is CaMeL Function ( block . get CaMeL Parent ( ) ) ;
rank: 143
score: 98.84002278645833
patch: return block . get CaMeL Reference ( ) . is CaMeL Function ) ;
rank: 143
score: 98.77396937779018
patch: return get CaMeL Parent ( ) . is CaMeL Function ( ) ;
rank: 143
score: 98.74502563476562
patch: return block . is CaMeL Function ( ) * false ;
rank: 143
score: 98.69212757457386
patch: if ( ! Boolean . TRUE . equals ; }
rank: 143
score: 98.46482631138393
patch: if false ; break ; ;
rank: 144
score: 99.09574620863971
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) + true ;
rank: 144
score: 98.91073172433036
patch: return block . get CaMeL Parent ( ) instanceof Basic CaMeL Block ;
rank: 144
score: 98.83939906529018
patch: Decl ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 144
score: 98.79936981201172
patch: return null ; } return false ;
rank: 144
score: 98.77269635881696
patch: throw new Exception ( ) ;
rank: 144
score: 98.7415059407552
patch: return ( block . is CaMeL Function ) - true ;
rank: 144
score: 98.64541190011161
patch: else { if break ; }
rank: 144
score: 98.54923502604167
patch: return true ; } } return true ;
rank: 144
score: 98.46445041232639
patch: break ; ; if ; if break ;
rank: 145
score: 99.09569634331598
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ; }
rank: 145
score: 98.91008758544922
patch: return ref . is CaMeL Function ( ) . is CaMeL Function ( ) ;
rank: 145
score: 98.83817836216518
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ;
rank: 145
score: 98.79873657226562
patch: return false ; } break ; } break ;
rank: 145
score: 98.7412821451823
patch: break || ! block . is CaMeL Function ( ) ;
rank: 145
score: 98.68990325927734
patch: break ; } } this . ;
rank: 145
score: 98.64459228515625
patch: } break ; break ; if break ;
rank: 145
score: 98.54915161132813
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 145
score: 98.4639892578125
patch: return * break ; / if break ;
rank: 146
score: 99.09551711309524
patch: return block . is CaMeL Function && block . is CaMeL Function || block . is CaMeL Function ) ;
rank: 146
score: 98.9100277549342
patch: try { block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 146
score: 98.83687650240384
patch: token = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 146
score: 98.77250453404018
patch: return block . is CaMeL Function ) ; } } return false ;
rank: 146
score: 98.74051513671876
patch: return return false ;
rank: 146
score: 98.68737030029297
patch: break ; } if ( ; ;
rank: 146
score: 98.64387730189732
patch: else { break ; ; }
rank: 146
score: 98.4615249633789
patch: if break ; ; if break ;
rank: 147
score: 99.09529976222827
patch: return block . is CaMeL Function && ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 147
score: 98.83666120256696
patch: Declaration block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 147
score: 98.7972920735677
patch: return null ; } else
rank: 147
score: 98.77157389322916
patch: return ref . get CaMeL Name ( ) . equals ( $STRING$ ) ;
rank: 147
score: 98.740234375
patch: return block . is CaMeL Function [ 1 ] ;
rank: 147
score: 98.6864346590909
patch: switch ( block . get CaMeL Modifiers ( ) )
rank: 147
score: 98.64381408691406
patch: break ; } try { break ;
rank: 147
score: 98.54868570963542
patch: result = block . ; break ; }
rank: 147
score: 98.46089390345982
patch: break ; ; { break ;
rank: 148
score: 99.09504500679348
patch: return ref . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block . get CaMeL Parent ( ) ) ;
rank: 148
score: 98.83657602163461
patch: attribute = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 148
score: 98.79590606689453
patch: return ; ; } if break ;
rank: 148
score: 98.74010213216145
patch: return false + ( block . is CaMeL Function ) ;
rank: 148
score: 98.68598768446181
patch: return false ; } else { break ;
rank: 148
score: 98.64344787597656
patch: break ; ; / * break ;
rank: 148
score: 98.54793972439236
patch: throw new Assertion CaMeL Error ( ) ;
rank: 148
score: 98.46039690290179
patch: for ; break ; break ;
rank: 149
score: 99.09491325827206
patch: is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 149
score: 98.90601264105902
patch: ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) { break ;
rank: 149
score: 98.8359375
patch: expression = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 149
score: 98.79490661621094
patch: return break ; } else if ;
rank: 149
score: 98.73707071940105
patch: block . is CaMeL Function = true ; return true ;
rank: 149
score: 98.6859130859375
patch: if ( block . ; else break ; }
rank: 149
score: 98.64231654575893
patch: break ; } while break ;
rank: 149
score: 98.54757690429688
patch: break && break ; }
rank: 149
score: 98.45978338068181
patch: if ; break ; if ; break ; break ;
rank: 150
score: 99.09465680803571
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) . is CaMeL Function ;
rank: 150
score: 98.7932373046875
patch: return false ; break ; } break ; }
rank: 150
score: 98.76688639322917
patch: if ( block . is CaMeL Function ( ) ) {
rank: 150
score: 98.73519897460938
patch: return ref . is CaMeL Empty ( ) ;
rank: 150
score: 98.6839266690341
patch: ref = block . get CaMeL Reference ( ; }
rank: 150
score: 98.64170619419643
patch: } finally { break ; }
rank: 150
score: 98.54542759486607
patch: result = true ; break ;
rank: 151
score: 99.09424845377605
patch: return block . get CaMeL Basic CaMeL Block ( ) ;
rank: 151
score: 98.9048360188802
patch: block . is CaMeL Function ( ) ; return false ;
rank: 151
score: 98.79249064127605
patch: return ; ; } else
rank: 151
score: 98.76679338727679
patch: block . is CaMeL Function && block . is CaMeL Function ) {
rank: 151
score: 98.73486328125
patch: return ) && block . is CaMeL Function ( ) ;
rank: 151
score: 98.68361594460227
patch: break ; } System . out . println ( ;
rank: 151
score: 98.64075578962054
patch: catch false ; break ; ;
rank: 151
score: 98.45658111572266
patch: if break ; if ; break ;
rank: 152
score: 99.09387737771739
patch: return ref . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 152
score: 98.83326134314903
patch: next = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 152
score: 98.79216003417969
patch: return false ; } else { }
rank: 152
score: 98.76673302283653
patch: if ( block . is CaMeL Function ( ) ) break ;
rank: 152
score: 98.73480224609375
patch: break && block . is CaMeL Function $NUMBER$ ( ) ;
rank: 152
score: 98.64019775390625
patch: -- break ; break ; if break ;
rank: 152
score: 98.54438612196181
patch: notify CaMeL All ( break ) ; }
rank: 152
score: 98.45621948242187
patch: throw new Runtime CaMeL Exception ; Exception break ;
rank: 153
score: 99.09367231889205
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 153
score: 98.9021747295673
patch: if ( block . is CaMeL Declaration ) { return false ;
rank: 153
score: 98.8326416015625
patch: t = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 153
score: 98.79152134486607
patch: break ; } else return ;
rank: 153
score: 98.76624474158653
patch: return false ; } block . is CaMeL Function ( ) ;
rank: 153
score: 98.73470052083333
patch: break is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ;
rank: 153
score: 98.63693576388889
patch: else { break ; } return false ;
rank: 153
score: 98.54273986816406
patch: return true ; } return true ;
rank: 153
score: 98.45613606770833
patch: return * / break ;
rank: 154
score: 99.0933902138158
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) . is CaMeL Function ) ;
rank: 154
score: 98.90119371916118
patch: loop = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 154
score: 98.8310546875
patch: curr = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 154
score: 98.76429332386364
patch: c = block . get CaMeL Parent ( ) ;
rank: 154
score: 98.73456365411931
patch: return ( block . is CaMeL Function ) true ;
rank: 154
score: 98.68025716145833
patch: break ; default : throw new ; }
rank: 154
score: 98.63398088727679
patch: break ; while break ; ;
rank: 154
score: 98.53873988560268
patch: result = block . break ;
rank: 154
score: 98.4550448330966
patch: if break ; break ; if break ; break ;
rank: 155
score: 98.83085123697917
patch: logger . if ( block . is CaMeL Function ) {
rank: 155
score: 98.76363699776786
patch: Block block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 155
score: 98.73443048650569
patch: return ref . is CaMeL Function ( ) true ;
rank: 155
score: 98.67965698242188
patch: throw new Internal CaMeL Error ( $STRING$ ; }
rank: 155
score: 98.63255479600694
patch: break ; } break ; System . ;
rank: 155
score: 98.53738064236111
patch: contents . add ( break ) ; }
rank: 155
score: 98.45438639322917
patch: if ; break ; try
rank: 156
score: 99.0930111533717
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) . break ;
rank: 156
score: 98.90017520680146
patch: block = block . get CaMeL Parent ( ) . get CaMeL Reference ( ) ;
rank: 156
score: 98.83074481670673
patch: current = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 156
score: 98.78568812779018
patch: this . break ; } }
rank: 156
score: 98.76204223632813
patch: result = block . is CaMeL Function ) .
rank: 156
score: 98.7334493001302
patch: break || block . is CaMeL Function 1 ( ) ;
rank: 156
score: 98.63015407986111
patch: finally { break ; } if break ;
rank: 156
score: 98.53717041015625
patch: throw new Runtime CaMeL Exception ; } break ;
rank: 156
score: 98.45378875732422
patch: break ; break ; = break ;
rank: 157
score: 98.89984893798828
patch: return block . get CaMeL Type ( ) . is CaMeL Function ( ) ;
rank: 157
score: 98.75941975911458
patch: result = block . is CaMeL Function ) + false ;
rank: 157
score: 98.73300170898438
patch: return block . is CaMeL Function = true ;
rank: 157
score: 98.67837524414062
patch: if ( ; return false ; }
rank: 157
score: 98.62906901041667
patch: while break ; break ;
rank: 157
score: 98.5369140625
patch: if ( break ) { return false ; }
rank: 157
score: 98.45365687779018
patch: break ; else if break ;
rank: 158
score: 99.09177468039773
patch: return ref . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ;
rank: 158
score: 98.89962768554688
patch: if ( block . is CaMeL Call ) { break ;
rank: 158
score: 98.83062274639423
patch: table = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 158
score: 98.7841796875
patch: this . break ; } } return break ;
rank: 158
score: 98.7587890625
patch: result = ! block . is CaMeL Function ( ) ;
rank: 158
score: 98.73110961914062
patch: return block . is CaMeL Function is CaMeL Function ) ;
rank: 158
score: 98.6778335571289
patch: if ( ! ; break ; }
rank: 158
score: 98.62803649902344
patch: break ; break ; return false ;
rank: 158
score: 98.45326232910156
patch: break ; ; if break ; }
rank: 159
score: 99.09171549479167
patch: return block . is CaMeL Function || block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 159
score: 98.89960271661931
patch: ret = block . is CaMeL Function ( ) ;
rank: 159
score: 98.83016263521634
patch: scope = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 159
score: 98.7839126586914
patch: return ; ; } return false ;
rank: 159
score: 98.73081461588542
patch: return ref . is CaMeL Function $NUMBER$ 1 ( ) ;
rank: 159
score: 98.62691824776786
patch: else { new break ; }
rank: 159
score: 98.53636678059895
patch: ret = break ; }
rank: 159
score: 98.45243326822917
patch: break ; break ; ; if break ;
rank: 160
score: 99.09029715401786
patch: return ref . is CaMeL Function && block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 160
score: 98.83005934495192
patch: v = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 160
score: 98.75710227272727
patch: try { block . is CaMeL Function ( ) ;
rank: 160
score: 98.7291259765625
patch: return block . is CaMeL Function $NUMBER$ * ( ) ;
rank: 160
score: 98.62646484375
patch: catch break ; break ; System . ;
rank: 160
score: 98.53491973876953
patch: this . break = break ; }
rank: 160
score: 98.45195007324219
patch: break ; if ; break ; ;
rank: 161
score: 99.09021577380952
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && ref . is CaMeL Function ) ;
rank: 161
score: 98.89829799107143
patch: else if ( block . is CaMeL Function ) { return false ;
rank: 161
score: 98.72715250651042
patch: return block . is CaMeL Function ( ) * true ;
rank: 161
score: 98.67439408735795
patch: break ; } else { return false ; } }
rank: 161
score: 98.62613351004464
patch: value = null ; break ;
rank: 162
score: 98.89762798108552
patch: result = ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 162
score: 98.82858276367188
patch: result = ref . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 162
score: 98.78237915039062
patch: return break ; } } else ;
rank: 162
score: 98.75656127929688
patch: return false ; } block . is CaMeL Function ) ;
rank: 162
score: 98.7265292080966
patch: return block . is CaMeL Function ) : break ;
rank: 162
score: 98.672607421875
patch: this . break ; } else { this . ;
rank: 162
score: 98.5301513671875
patch: block = block . get CaMeL Parent ( ;
rank: 162
score: 98.44789428710938
patch: if ; break ; break ; if break ;
rank: 163
score: 99.08949681332237
patch: return ( ! block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 163
score: 98.89747721354166
patch: block . is CaMeL Function = block . is CaMeL Function ; break ;
rank: 163
score: 98.82843780517578
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ; }
rank: 163
score: 98.78162977430556
patch: return ; ; } } if break ;
rank: 163
score: 98.7559814453125
patch: return block . get CaMeL Parent ( ) . equals ( block ) ;
rank: 163
score: 98.72627766927083
patch: return block . is CaMeL Function ? true : false ;
rank: 163
score: 98.67067464192708
patch: if ( block . ; break ; }
rank: 163
score: 98.52986653645833
patch: contents . add ( block ) ; }
rank: 163
score: 98.44720458984375
patch: break ; if ; ;
rank: 164
score: 99.08945534446023
patch: return block . is CaMeL Function || block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 164
score: 98.8970947265625
patch: Basic CaMeL Block block = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 164
score: 98.8281962076823
patch: t . if ( block . is CaMeL Function ) {
rank: 164
score: 98.78084988064236
patch: return false ; } } } break ;
rank: 164
score: 98.75327711838942
patch: return block . is CaMeL Function ) ; } return true ;
rank: 164
score: 98.7261454264323
patch: return ref . is CaMeL Function ( ) : true ;
rank: 164
score: 98.66743687220982
patch: break ; / * break ;
rank: 164
score: 98.52805786132812
patch: throw new Runtime CaMeL Exception ( $STRING$ ; ;
rank: 164
score: 98.44670274522569
patch: return ; = break ; if break ;
rank: 165
score: 99.08941291360294
patch: return block . is CaMeL Function && block . is CaMeL Function ) . break ;
rank: 165
score: 98.89629657451923
patch: return ( ! this . block . is CaMeL Function ) ;
rank: 165
score: 98.78072357177734
patch: return false ; break ; } else
rank: 165
score: 98.75315163352273
patch: sender = block . get CaMeL Parent ( ) ;
rank: 165
score: 98.72440962357955
patch: return return ( block . is CaMeL Function ) ;
rank: 165
score: 98.6664151278409
patch: switch ( block . get CaMeL Type ( ; }
rank: 165
score: 98.62443542480469
patch: break ; break ; break ; }
rank: 165
score: 98.44112820095486
patch: break ; if break ; } break ;
rank: 166
score: 99.0891864483173
patch: ref . next = block . get CaMeL Parent ( ) ;
rank: 166
score: 98.89625549316406
patch: return ref . get CaMeL Class ( ) . is CaMeL Function ( ) ;
rank: 166
score: 98.82666954627403
patch: argument = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 166
score: 98.77994791666667
patch: return null ; } } if break ;
rank: 166
score: 98.72198486328125
patch: return block . is CaMeL Function == true ;
rank: 166
score: 98.66582489013672
patch: break ; } else { continue ;
rank: 166
score: 98.62435913085938
patch: break ; break ; } * *
rank: 166
score: 98.44089762369792
patch: break ; if break ; break ; }
rank: 167
score: 99.08807663690476
patch: return ref . get CaMeL Parent ( ) . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 167
score: 98.89581298828125
patch: result = ( Basic CaMeL Block ) block . get CaMeL Basic CaMeL Block ( ) ;
rank: 167
score: 98.8264911358173
patch: cur = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 167
score: 98.77830674913194
patch: return false ; } else return break ;
rank: 167
score: 98.75267682756696
patch: for ( Basic CaMeL Block block = block . get CaMeL Qualified CaMeL
rank: 167
score: 98.72179158528645
patch: return block . is CaMeL Function ( ) + 1 ;
rank: 167
score: 98.62337820870536
patch: result = break && break ;
rank: 167
score: 98.52415635850694
patch: compare CaMeL To ( break ) ; }
rank: 167
score: 98.44052124023438
patch: return ; break ;
rank: 168
score: 99.08776177300348
patch: return block . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 168
score: 98.8949966430664
patch: return ref . get CaMeL Type ( ) . is CaMeL Function ( ) ;
rank: 168
score: 98.82614571707589
patch: match ( block . get CaMeL Function CaMeL Name ( ) ) ;
rank: 168
score: 98.77520141601562
patch: return false ; } break ; break ; }
rank: 168
score: 98.7205098470052
patch: return ( node . is CaMeL Function ( ) ) ;
rank: 168
score: 98.66378784179688
patch: System . err . println ( $STRING$ break ;
rank: 168
score: 98.62282307942708
patch: case 0 : break ;
rank: 168
score: 98.52235243055556
patch: break . to CaMeL String ( ) ;
rank: 168
score: 98.44023301866319
patch: break ; break ; if ; if ;
rank: 169
score: 99.08756156589673
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && ref . is CaMeL Function ) ;
rank: 169
score: 98.89475504557292
patch: return ref . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; break ;
rank: 169
score: 98.825439453125
patch: ret = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 169
score: 98.77422417534723
patch: return false ; } catch break ; }
rank: 169
score: 98.751953125
patch: block . is CaMeL Function || block . is CaMeL Function ) {
rank: 169
score: 98.72035725911458
patch: return block . is CaMeL Function ( ) - $NUMBER$ ;
rank: 169
score: 98.6637191772461
patch: break ; } this . break ;
rank: 169
score: 98.52105712890625
patch: logger . info ( $STRING$ ) ; }
rank: 169
score: 98.43839263916016
patch: return ; if ; ; break ;
rank: 170
score: 99.08748002485795
patch: return block . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 170
score: 98.89418658088235
patch: block = block . get CaMeL Parent ( ) . is CaMeL Function ( ) ;
rank: 170
score: 98.8252461751302
patch: table . return ( block . is CaMeL Function ) ;
rank: 170
score: 98.77332899305556
patch: return break ; } } catch break ;
rank: 170
score: 98.751513671875
patch: return block . is CaMeL Function ( ) ; } } return true ;
rank: 170
score: 98.71961558948864
patch: try { return block . is CaMeL Function ) ;
rank: 170
score: 98.62252044677734
patch: else { break ; } ; }
rank: 170
score: 98.52058919270833
patch: System . out . println ( $STRING$ ;
rank: 170
score: 98.43769073486328
patch: if ; break ; ; break ;
rank: 171
score: 99.08684430803571
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function || block . is CaMeL Function ) ;
rank: 171
score: 98.8910271139706
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) break ;
rank: 171
score: 98.8243877704327
patch: name = block . get CaMeL Function CaMeL Name ( ) ;
rank: 171
score: 98.77242279052734
patch: return ; ;
rank: 171
score: 98.66242980957031
patch: break ; } ; } break ;
rank: 171
score: 98.62247043185764
patch: out . out . println break false ;
rank: 171
score: 98.51931762695312
patch: break ; } parent . break ;
rank: 171
score: 98.43764241536458
patch: break ; if ; ; if break ;
rank: 172
score: 99.08674701891448
patch: block . is CaMeL Function = block . is CaMeL Function && block . is CaMeL Function ;
rank: 172
score: 98.89097764756944
patch: return ( block . is CaMeL Function && block . is CaMeL Function ( ) ) ;
rank: 172
score: 98.82386192908653
patch: se = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 172
score: 98.77236599392361
patch: return break ; } else return false ;
rank: 172
score: 98.74965122767857
patch: for ( Basic CaMeL Block block = ref . get CaMeL Basic CaMeL
rank: 172
score: 98.71847534179688
patch: return ref . is CaMeL Function ( ) - 1 ;
rank: 172
score: 98.66220092773438
patch: break ; } if ( block . ; ;
rank: 172
score: 98.6221415201823
patch: catch break ; break ;
rank: 172
score: 98.51924896240234
patch: ret = true ; break ; }
rank: 172
score: 98.43692016601562
patch: break ; } if ; break ;
rank: 173
score: 98.89068048650569
patch: ref . is CaMeL Function ( ) ; break ;
rank: 173
score: 98.822998046875
patch: rule = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 173
score: 98.7720947265625
patch: return true ; } } }
rank: 173
score: 98.749267578125
patch: if ( block . is CaMeL Function ( ) ) return false ;
rank: 173
score: 98.71742757161458
patch: return block . is CaMeL Function $NUMBER$ ;
rank: 173
score: 98.65968017578125
patch: break ; } if ( ref . get ;
rank: 173
score: 98.62200164794922
patch: break ; this . break ; }
rank: 173
score: 98.43650124289773
patch: if break ; break ; break ; if break ;
rank: 174
score: 99.08596934442934
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function
rank: 174
score: 98.8902587890625
patch: block . is CaMeL Function = ! block . is CaMeL Function ( ) ;
rank: 174
score: 98.82286834716797
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function CaMeL
rank: 174
score: 98.76973179408482
patch: { return break ; } }
rank: 174
score: 98.7488301595052
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 174
score: 98.71703084309895
patch: return false && ( block . is CaMeL Function ) ;
rank: 174
score: 98.65896606445312
patch: found = true ; break ; }
rank: 174
score: 98.61997477213542
patch: return null ; break ;
rank: 174
score: 98.5152816772461
patch: result = block ; break ; }
rank: 174
score: 98.43477172851563
patch: break ; break ; } / if break ;
rank: 175
score: 99.0859375
patch: ref = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 175
score: 98.82245744977679
patch: Node ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 175
score: 98.7693115234375
patch: return break ; } } else return false ;
rank: 175
score: 98.74847966974431
patch: token = block . get CaMeL Parent ( ) ;
rank: 175
score: 98.71675248579545
patch: return ( ! node . is CaMeL Function ) ;
rank: 175
score: 98.65611049107143
patch: break ; } count ++ ;
rank: 175
score: 98.6181131998698
patch: break ; return false ;
rank: 175
score: 98.51457214355469
patch: success = true ; break ; }
rank: 175
score: 98.43282645089286
patch: if ; break ; this ;
rank: 176
score: 99.08590087890624
patch: return block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) != null ;
rank: 176
score: 98.88948567708333
patch: return ref . is CaMeL Function ( ) ; break ;
rank: 176
score: 98.7691650390625
patch: return false ; break ; break ;
rank: 176
score: 98.7483642578125
patch: return ref . get CaMeL Parent ( ) . equals ( block ) ;
rank: 176
score: 98.71537272135417
patch: break || block . is CaMeL Function $NUMBER$ ( ) ;
rank: 176
score: 98.65610573508523
patch: System . out . println ( $STRING$ + ; }
rank: 176
score: 98.43142361111111
patch: if break ; break ; ; break ;
rank: 177
score: 99.08588409423828
patch: return block . is CaMeL Function || ( block . is CaMeL Function ) ;
rank: 177
score: 98.8889892578125
patch: return ( block . is CaMeL Local ) ;
rank: 177
score: 98.81987762451172
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ; return false ;
rank: 177
score: 98.76845877511161
patch: } break ; } break ;
rank: 177
score: 98.74771822415866
patch: return block . is CaMeL Function ( ) ; } else {
rank: 177
score: 98.71287536621094
patch: return block instanceof Basic CaMeL Block ;
rank: 177
score: 98.65590598366477
patch: break ; System . out . println ( $STRING$ ;
rank: 177
score: 98.6146240234375
patch: break ; value = break ;
rank: 177
score: 98.5126708984375
patch: break compare CaMeL To ( break ) ; }
rank: 177
score: 98.43102155412946
patch: return break ; if break ;
rank: 178
score: 99.08570556640625
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 178
score: 98.88894473805146
patch: ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 178
score: 98.81951434795673
patch: index = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 178
score: 98.74668782552084
patch: for ( Basic CaMeL Block block = ref . get CaMeL Basic CaMeL Block
rank: 178
score: 98.712646484375
patch: return block . is CaMeL Function $NUMBER$ Reference ( ) ;
rank: 178
score: 98.65558416193181
patch: break ; } if ( block . equals ( ;
rank: 178
score: 98.61391872829861
patch: try { break ; } break ; }
rank: 178
score: 98.43046739366319
patch: if break ; break ; if ; ;
rank: 179
score: 99.0855648643092
patch: return block . is CaMeL Function && block . is CaMeL Function ) . is CaMeL Function ;
rank: 179
score: 98.8187255859375
patch: result = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ;
rank: 179
score: 98.76255580357143
patch: return null ; } catch ;
rank: 179
score: 98.71087091619319
patch: return ( block . . is CaMeL Function ) ;
rank: 179
score: 98.6553955078125
patch: break ; } if ( block . ; }
rank: 179
score: 98.61388397216797
patch: else { super . break break ;
rank: 179
score: 98.43038177490234
patch: if ; + break ; break ;
rank: 180
score: 99.08533528645833
patch: return block . get CaMeL Instance ( ) . is CaMeL Function ) ;
rank: 180
score: 98.8184326171875
patch: return ! block . is CaMeL Function ) ;
rank: 180
score: 98.76112583705357
patch: return false ; ; } }
rank: 180
score: 98.74455122514205
patch: b = block . get CaMeL Parent ( ) ;
rank: 180
score: 98.71021617542614
patch: return true ( block . is CaMeL Function ) ;
rank: 180
score: 98.65447387695312
patch: return true ; } else { return false ;
rank: 180
score: 98.61107720269098
patch: / break ; break ; if break ;
rank: 180
score: 98.51135864257813
patch: target = block . get CaMeL Target ; }
rank: 180
score: 98.42967006138393
patch: break ; ; if ; ;
rank: 181
score: 99.08528442382813
patch: block . is CaMeL Function = block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 181
score: 98.88740370008681
patch: result = ( Basic CaMeL Block ) ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 181
score: 98.81842912946429
patch: Decl block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 181
score: 98.75743272569444
patch: this . break ; } break ; }
rank: 181
score: 98.7095438639323
patch: return false || ( block . is CaMeL Function ) ;
rank: 181
score: 98.6533203125
patch: break ; } ; * /
rank: 181
score: 98.61090959821429
patch: return false ; break ; ;
rank: 181
score: 98.5105712890625
patch: target = block . get CaMeL Parent ; }
rank: 181
score: 98.42955780029297
patch: break ; if ; break ; /
rank: 182
score: 99.08480171535327
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Node ( ) . is CaMeL Function ) ;
rank: 182
score: 98.8864013671875
patch: block . if ( block . is CaMeL Function ) { return false ;
rank: 182
score: 98.81817157451923
patch: code = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 182
score: 98.7538818359375
patch: return break ; } break ; } break ;
rank: 182
score: 98.74398803710938
patch: return ref . is CaMeL Function CaMeL Type ( ) ;
rank: 182
score: 98.70945046164773
patch: return block . is CaMeL Function ( ) ? ;
rank: 182
score: 98.61051432291667
patch: logger . out . println break true ;
rank: 182
score: 98.4280517578125
patch: break ; if ; if break ; break ;
rank: 183
score: 99.08415876116071
patch: ref . next = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 183
score: 98.88421630859375
patch: if ( ( block . is CaMeL Function ) ) { break ;
rank: 183
score: 98.81725202287946
patch: return block . is CaMeL Function ) . is CaMeL Function ) ;
rank: 183
score: 98.74307454427084
patch: return ref . get CaMeL Basic CaMeL Block ( ) != null ; }
rank: 183
score: 98.70941162109375
patch: return block . is CaMeL Function ( ) * * ;
rank: 183
score: 98.65018920898437
patch: break ; } } else { return false ;
rank: 183
score: 98.60979546440973
patch: catch break ; break ; } break ;
rank: 183
score: 98.50851440429688
patch: completed = true ; break ; }
rank: 183
score: 98.4279556274414
patch: return false ; if ; break ;
rank: 184
score: 98.88347710503473
patch: return ref . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; * /
rank: 184
score: 98.81716918945312
patch: log . if ( block . is CaMeL Function ) {
rank: 184
score: 98.75236511230469
patch: if ( break ; break ; }
rank: 184
score: 98.74267578125
patch: else { block = block . get CaMeL Parent ( ) ;
rank: 184
score: 98.70845031738281
patch: return ) ;
rank: 184
score: 98.65006880326705
patch: System . out . println ( $STRING$ ) ; }
rank: 184
score: 98.60972086588542
patch: catch true ; break ;
rank: 184
score: 98.42784966362848
patch: break ; ; if ; break ; }
rank: 185
score: 99.08268657483552
patch: ref . is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 185
score: 98.88253079927884
patch: this . block = block . get CaMeL Parent ( ) ;
rank: 185
score: 98.817138671875
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block .
rank: 185
score: 98.75196838378906
patch: return ; ; } } else {
rank: 185
score: 98.74200439453125
patch: result = block . is CaMeL Function ) + true ;
rank: 185
score: 98.70806884765625
patch: return block . is CaMeL Constructor ( ) ;
rank: 185
score: 98.64699009486607
patch: break ; } / * *
rank: 185
score: 98.60833740234375
patch: break ; } break ; try ;
rank: 185
score: 98.50779418945312
patch: node = block . get CaMeL Parent ; }
rank: 185
score: 98.42782931857639
patch: break ; } ; if ; break ;
rank: 186
score: 98.88216400146484
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ; break ;
rank: 186
score: 98.7077128092448
patch: return block != null && block . is CaMeL Function )
rank: 187
score: 99.08115521599265
patch: return ( ! block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 187
score: 98.88196818033855
patch: if ( block . is CaMeL Interface ) { break ;
rank: 187
score: 98.81663161057692
patch: slot = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 187
score: 98.75055609809027
patch: return break ; } } } break ;
rank: 187
score: 98.70641072591145
patch: return block . is CaMeL Function ( ) & true ;
rank: 187
score: 98.64652709960937
patch: return ; } else { return false ; }
rank: 187
score: 98.60514613560268
patch: } break ; if break ;
rank: 187
score: 98.50334167480469
patch: break ; } if ( success )
rank: 187
score: 98.42729840959821
patch: if new break ; break ;
rank: 188
score: 99.08102256373355
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) . is CaMeL Function )
rank: 188
score: 98.88158416748047
patch: return block . get CaMeL Name ( ) . is CaMeL Function ( ) ;
rank: 188
score: 98.81638881138393
patch: Declaration block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 188
score: 98.75003662109376
patch: return false ; break ; } } break ;
rank: 188
score: 98.70601029829545
patch: block . is CaMeL Function = ) ; break ;
rank: 188
score: 98.64475795200893
patch: break ; default : continue ;
rank: 188
score: 98.60486450195313
patch: return true ; ;
rank: 188
score: 98.50189208984375
patch: Collections . sort ( break ) ; }
rank: 188
score: 98.42680528428819
patch: if break ; break ; if ; {
rank: 189
score: 99.0808349609375
patch: return block . get CaMeL Next ( ) . is CaMeL Function ) ;
rank: 189
score: 98.88093397352431
patch: result = block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 189
score: 98.81612454927884
patch: body = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 189
score: 98.74987182617187
patch: return false ; } } else return null ;
rank: 189
score: 98.74126325334821
patch: break ; } block = block . get CaMeL Parent ( ) ;
rank: 189
score: 98.7059834798177
patch: try { return block . is CaMeL Function ( ) ;
rank: 189
score: 98.64433070591518
patch: break ; } / * ;
rank: 189
score: 98.60321723090277
patch: else { break ; } } break ;
rank: 189
score: 98.49891662597656
patch: match = true ; break ; }
rank: 189
score: 98.4264424641927
patch: if ; if break ;
rank: 190
score: 99.08071417557566
patch: return block . is CaMeL Function ) . is CaMeL Function && block . is CaMeL Function ;
rank: 190
score: 98.88036295572917
patch: return block . is CaMeL Function ) : block . is CaMeL Function ;
rank: 190
score: 98.81540151742789
patch: xsp = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 190
score: 98.749267578125
patch: return break ; } catch ;
rank: 190
score: 98.7052001953125
patch: return block . is CaMeL Function == false ;
rank: 190
score: 98.49781036376953
patch: break ; } if ( true )
rank: 190
score: 98.42603648792614
patch: if break ; break ; if ; if break ;
rank: 191
score: 99.07920619419643
patch: is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 191
score: 98.81526402064732
patch: Decl block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 191
score: 98.74896240234375
patch: return break ; break ;
rank: 191
score: 98.73879568917411
patch: return ref . is CaMeL Function ) ; } } return true ;
rank: 191
score: 98.70482288707386
patch: return true && block . is CaMeL Function ) ;
rank: 191
score: 98.64261474609376
patch: System . out . println ( $STRING$ + ;
rank: 191
score: 98.60279083251953
patch: break ; try ; if break ;
rank: 191
score: 98.49777560763889
patch: synchronized ( this ) { break ; }
rank: 191
score: 98.4246826171875
patch: if ; break ; else break ;
rank: 192
score: 99.07900661892361
patch: if ( block . get CaMeL Parent ( ) . is CaMeL Function ) { break ;
rank: 192
score: 98.88006184895833
patch: block = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 192
score: 98.81521371694711
patch: it = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 192
score: 98.74888305664062
patch: return break ; } else { break ; }
rank: 192
score: 98.73851725260417
patch: else { ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 192
score: 98.6424560546875
patch: break ; } ; } return ;
rank: 192
score: 98.59694998604911
patch: break ; break ; * ;
rank: 192
score: 98.49647216796875
patch: if ( break ) { return true ; }
rank: 192
score: 98.42449951171875
patch: throw new break ;
rank: 193
score: 99.07870881453805
patch: block . is CaMeL Function = ref . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 193
score: 98.81287434895833
patch: return block . is CaMeL Function && block . is CaMeL Function ) {
rank: 193
score: 98.73844691685268
patch: for ( Basic CaMeL Block block = ref . get CaMeL Qualified CaMeL
rank: 193
score: 98.70249430338542
patch: block . is CaMeL Function = false ;
rank: 193
score: 98.64215087890625
patch: break ; default : break ; } }
rank: 193
score: 98.59612165178571
patch: / * break ; break ;
rank: 193
score: 98.49424743652344
patch: sb . append ( $STRING$ ) ;
rank: 193
score: 98.42399088541667
patch: if ; = break ; break ; ;
rank: 194
score: 99.07855631510417
patch: return block . is CaMeL Function && ! block . is CaMeL Function )
rank: 194
score: 98.81285095214844
patch: expression = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 194
score: 98.7479248046875
patch: return null ; } else { break ; }
rank: 194
score: 98.73775227864583
patch: block = block . get CaMeL Basic CaMeL Block ( ) ; } }
rank: 194
score: 98.70219116210937
patch: if ( is CaMeL Function ) { break ;
rank: 194
score: 98.64212646484376
patch: break ; } } else { break ; }
rank: 194
score: 98.59573025173611
patch: break ; break ; } System . ;
rank: 194
score: 98.4928970336914
patch: break true ;
rank: 194
score: 98.42373221261161
patch: return $NUMBER$ ; if break ;
rank: 195
score: 99.07853560014205
patch: return ref . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 195
score: 98.87765737680289
patch: return is CaMeL Function && block . is CaMeL Function ) ;
rank: 195
score: 98.81255634014423
patch: logger . { if ( block . is CaMeL Function ) {
rank: 195
score: 98.74757080078125
patch: return break ; } else if break ; }
rank: 195
score: 98.73750523158482
patch: return block . equals ( ! block . is CaMeL Function ) ;
rank: 195
score: 98.70147150213069
patch: return this . block . is CaMeL Function ) ;
rank: 195
score: 98.64182739257812
patch: throw new ; }
rank: 195
score: 98.49283854166667
patch: this . break = true ; break ;
rank: 195
score: 98.42345428466797
patch: break ; break ; if ; ;
rank: 196
score: 99.07802862870066
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) . is CaMeL Function ;
rank: 196
score: 98.81204223632812
patch: collection . if ( block . is CaMeL Function ) {
rank: 196
score: 98.74520534939236
patch: return null ; } } return false ;
rank: 196
score: 98.73356119791667
patch: return block . is CaMeL Function ) ; } else { return true ;
rank: 196
score: 98.70039876302083
patch: return block . is CaMeL Function ? false : true ;
rank: 196
score: 98.59383392333984
patch: this . break ; if break ;
rank: 196
score: 98.49204508463542
patch: if ( ! break )
rank: 196
score: 98.42293972439236
patch: break ; if break ; for break ;
rank: 197
score: 99.07783647017045
patch: return block . is CaMeL Function && ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 197
score: 98.81199544270834
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) {
rank: 197
score: 98.74385833740234
patch: return null ; } return break ;
rank: 197
score: 98.7330322265625
patch: return block . is CaMeL Function ) ; } else { return false ;
rank: 197
score: 98.699658203125
patch: return block . is CaMeL Function ) true ;
rank: 197
score: 98.64132690429688
patch: this . ; return true ; }
rank: 197
score: 98.59358723958333
patch: break ; break ; } return false ;
rank: 197
score: 98.48887634277344
patch: ret = false ; break ; }
rank: 197
score: 98.4198506673177
patch: if 1 ; break ;
rank: 198
score: 99.0771817294034
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ;
rank: 198
score: 98.81186147836539
patch: target = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 198
score: 98.74293518066406
patch: return ; ; break ; } }
rank: 198
score: 98.73276589133523
patch: result = block . is CaMeL Function ) ; }
rank: 198
score: 98.64022391183036
patch: break ; ; } * /
rank: 198
score: 98.59298270089286
patch: else break ; } break ;
rank: 198
score: 98.48851928710937
patch: break ; } break ; } return true ;
rank: 198
score: 98.41929796006944
patch: if break ; ; if ; break ;
rank: 199
score: 99.07682582310268
patch: return block . get CaMeL Basic CaMeL Block ( ) == null ;
rank: 199
score: 98.87441677517361
patch: if ( block . is CaMeL Function && block . is CaMeL Function ) { break ;
rank: 199
score: 98.74129486083984
patch: return break ; break ; } else
rank: 199
score: 98.73230852399554
patch: return ref . get CaMeL Parent ( ) . equals ( ) ;
rank: 199
score: 98.69687721946023
patch: return ref . is CaMeL Function ( false ) ;
rank: 199
score: 98.59229278564453
patch: break ; this . break ; ;
rank: 199
score: 98.48725128173828
patch: break ; } if ( break ;
rank: 199
score: 98.4165267944336
patch: if ; { if ; break ;
rank: 200
score: 99.0764224403783
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) + true ;
rank: 200
score: 98.81103515625
patch: continue ; }
rank: 200
score: 98.73885091145833
patch: return null ; } else if break ;
rank: 200
score: 98.73092041015624
patch: = block . get CaMeL Parent ( ) ;
rank: 200
score: 98.69497341579861
patch: return block . is CaMeL Function ) _
rank: 200
score: 98.59208848741319
patch: break ; out . next ( break ;
rank: 200
score: 98.41596815321181
patch: break ; ; = break ; break ;
rank: 201
score: 98.8102276141827
patch: line = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 201
score: 98.73685302734376
patch: return false ; } } else return break ;
rank: 201
score: 98.73077392578125
patch: result = block . is CaMeL Function ) . true ;
rank: 201
score: 98.69395955403645
patch: return true || block . is CaMeL Function ( ) ;
rank: 201
score: 98.63779994419643
patch: break ; } else { ;
rank: 201
score: 98.59171295166016
patch: break ; break ; while break ;
rank: 201
score: 98.48541259765625
patch: if ( break ) { break ; }
rank: 201
score: 98.415625
patch: if break ; break ; if break ; }
rank: 202
score: 99.07529907226562
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) != null ;
rank: 202
score: 98.87380801930146
patch: for ( Basic CaMeL Block block = ref . get CaMeL Basic CaMeL Block ( )
rank: 202
score: 98.80992780412946
patch: { block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 202
score: 98.73663330078125
patch: return false ; } } finally {
rank: 202
score: 98.72945149739583
patch: return ref . is CaMeL Function ) ; } else {
rank: 202
score: 98.6931864420573
patch: return block . is CaMeL Function ( + 1 ) ;
rank: 202
score: 98.63746643066406
patch: break ; } * / break ;
rank: 202
score: 98.59027099609375
patch: catch break ; ;
rank: 202
score: 98.41544966264205
patch: throw new Runtime CaMeL Exception break ; if break ;
rank: 203
score: 99.07469418174342
patch: return = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 203
score: 98.80910915798611
patch: return block . is CaMeL Function ; }
rank: 203
score: 98.73644409179687
patch: return break ; } break ; break ; }
rank: 203
score: 98.72906087239583
patch: if ( block . is CaMeL Function ) { return false ; } }
rank: 203
score: 98.6930819424716
patch: ref . is CaMeL Function = false ; break ;
rank: 203
score: 98.63710239955357
patch: / * break ; * /
rank: 203
score: 98.59004974365234
patch: break ; break ; } * /
rank: 203
score: 98.48406982421875
patch: break ; } break ; } return false ;
rank: 203
score: 98.41531982421876
patch: break ; if break ; if ; break ;
rank: 204
score: 99.0746337890625
patch: is CaMeL Function = ! block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 204
score: 98.872314453125
patch: return block . is CaMeL Function ) || block . is CaMeL Function ) ;
rank: 204
score: 98.80760955810547
patch: found = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ) ;
rank: 204
score: 98.73577880859375
patch: break ; } } break ; }
rank: 204
score: 98.72879028320312
patch: buf . add ( block . is CaMeL Function ) ;
rank: 204
score: 98.6925760904948
patch: return block . is CaMeL Function ( ) : break ;
rank: 204
score: 98.58968777126736
patch: case 0 : break ; if break ;
rank: 204
score: 98.41415841238839
patch: return * / / break ;
rank: 205
score: 99.07457778033088
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ; }
rank: 205
score: 98.87188720703125
patch: return block . is CaMeL Function ( ) ; * /
rank: 205
score: 98.80758901742789
patch: return block . is CaMeL Function ) . is CaMeL Function ;
rank: 205
score: 98.73512268066406
patch: return null ; } } else {
rank: 205
score: 98.72671508789062
patch: return ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 205
score: 98.6919833096591
patch: return block . is CaMeL Function ) == false ;
rank: 205
score: 98.63666534423828
patch: break ; } else { throw ;
rank: 205
score: 98.58949279785156
patch: break { break ; } break ;
rank: 205
score: 98.48368835449219
patch: finished = true ; break ; }
rank: 205
score: 98.41396658761161
patch: if $NUMBER$ break ; break ;
rank: 206
score: 98.87078387920673
patch: if ( block . is CaMeL Call ) { return false ;
rank: 206
score: 98.80748639787946
patch: Declaration ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 206
score: 98.73362731933594
patch: return false ; } } catch ;
rank: 206
score: 98.72568581321023
patch: result = ref . get CaMeL Parent ( ) ;
rank: 206
score: 98.69047037760417
patch: try { block . is CaMeL Function ) { break ;
rank: 206
score: 98.58921305338542
patch: break ; break ; } catch break ;
rank: 206
score: 98.4819564819336
patch: result = false ; break ; }
rank: 206
score: 98.41322021484375
patch: break ; break ; if ; = break ;
rank: 207
score: 99.07389322916667
patch: return block . get CaMeL Parent ( ) . get CaMeL Type ( ) . is CaMeL Function ) ;
rank: 207
score: 98.87068684895833
patch: try { block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 207
score: 98.80711012620192
patch: answer = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 207
score: 98.73218383789063
patch: return break ; break ; } break ; }
rank: 207
score: 98.6898905436198
patch: return ! ! block . is CaMeL Function ( ) ;
rank: 207
score: 98.41320037841797
patch: if ; = 0 ; break ;
rank: 208
score: 99.07329963235294
patch: return ref . equals ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 208
score: 98.80680025540866
patch: comp = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 208
score: 98.73165283203124
patch: return false ; } } break ; break ;
rank: 208
score: 98.72450474330357
patch: return ref . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ;
rank: 208
score: 98.68855424360795
patch: return true || block . is CaMeL Function ) ;
rank: 208
score: 98.63542344835069
patch: break ; } } if ( ! ;
rank: 208
score: 98.58831024169922
patch: out . break ( break ) ;
rank: 208
score: 98.47974853515625
patch: break ; } if ( block != null )
rank: 208
score: 98.41121826171874
patch: break ; break ; println ; if break ;
rank: 209
score: 99.07284545898438
patch: ref . is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 209
score: 98.86895282451923
patch: return boolean CaMeL Value = block . is CaMeL Function ) ;
rank: 209
score: 98.72838745117187
patch: return true ; } finally { break ; }
rank: 209
score: 98.72390747070312
patch: return ref . get CaMeL Parent ( ) == null ;
rank: 209
score: 98.68691184303977
patch: return block . is CaMeL Function ) + ) ;
rank: 209
score: 98.63504464285714
patch: break ; } } ; ;
rank: 209
score: 98.58751678466797
patch: else { break ; } ; *
rank: 209
score: 98.47927856445312
patch: buffer . append ( $STRING$ ) ;
rank: 209
score: 98.41000027126736
patch: if ; break ; ; if break ;
rank: 210
score: 99.07189178466797
patch: return block . get CaMeL Basic CaMeL Block ( ) instanceof Basic CaMeL Block ;
rank: 210
score: 98.86885209517045
patch: result = ref . is CaMeL Function ( ) ;
rank: 210
score: 98.80450846354167
patch: t = block . get CaMeL Basic CaMeL Block ( ) ; if (
rank: 210
score: 98.72836303710938
patch: } else { break ; } }
rank: 210
score: 98.68677775065105
patch: ( ( Basic CaMeL Block ) block ) . break ;
rank: 210
score: 98.58510044642857
patch: else { break ; } *
rank: 210
score: 98.40966796875
patch: break ; if break ; / /
rank: 211
score: 99.07145182291667
patch: block . is CaMeL Function = block . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 211
score: 98.86806126644737
patch: ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) { return false ;
rank: 211
score: 98.80448091947116
patch: xsp = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 211
score: 98.72803344726563
patch: return break ; } } else return null ;
rank: 211
score: 98.68580118815105
patch: System . err . println ( ) ; return false ;
rank: 211
score: 98.63027954101562
patch: break ; } ; } * /
rank: 211
score: 98.58384486607143
patch: break ; } if false ;
rank: 211
score: 98.47748413085938
patch: break = block . get CaMeL Parent ; }
rank: 211
score: 98.40834554036458
patch: for break ; break ;
rank: 212
score: 99.0706787109375
patch: return block . get CaMeL Root ( ) . is CaMeL Function ) ;
rank: 212
score: 98.86795806884766
patch: Basic CaMeL Block block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 212
score: 98.721923828125
patch: return ( block . is CaMeL Function ) ; } } return true ;
rank: 212
score: 98.68560236150569
patch: ref . is CaMeL Function = true ; break ;
rank: 212
score: 98.62750244140625
patch: break ; } } ; return false ;
rank: 212
score: 98.58382742745536
patch: finally { this . break ;
rank: 212
score: 98.47711181640625
patch: buf . append ( $STRING$ ) ; }
rank: 212
score: 98.4078369140625
patch: if ; = break ; if break ;
rank: 213
score: 99.07060314360119
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ref . get CaMeL Parent ( ) ) ;
rank: 213
score: 98.86763269761029
patch: return block . is CaMeL Function ) && block . is CaMeL Function ( ) ;
rank: 213
score: 98.80324300130208
patch: element . if ( block . is CaMeL Function ) {
rank: 213
score: 98.72586822509766
patch: return break ; } else break ;
rank: 213
score: 98.72169596354166
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; }
rank: 213
score: 98.68535822088069
patch: return ref . is CaMeL Function ) : false ;
rank: 213
score: 98.58335658482143
patch: finally { break ; ; ;
rank: 213
score: 98.47510443793402
patch: logger . error ( $STRING$ ) ; }
rank: 213
score: 98.40714111328126
patch: if ; = break ; break ; break ;
rank: 214
score: 99.07030571831598
patch: return block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 214
score: 98.86750231291118
patch: block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) .
rank: 214
score: 98.80227426382211
patch: ret = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 214
score: 98.72581787109375
patch: this . break ; } } return true ;
rank: 214
score: 98.72153542258523
patch: return ( ref . is CaMeL Function ) ; }
rank: 214
score: 98.68504333496094
patch: result . add ( block ) ;
rank: 214
score: 98.6258544921875
patch: return true ; } } * /
rank: 214
score: 98.58326212565105
patch: catch null ; break ;
rank: 214
score: 98.47477213541667
patch: System . err . println ( $STRING$ ;
rank: 214
score: 98.40457153320312
patch: if ; break ; break ; ;
rank: 215
score: 99.06912667410714
patch: block . next = block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 215
score: 98.86735026041667
patch: loop = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 215
score: 98.80179537259616
patch: k = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 215
score: 98.72146170479911
patch: return block . is CaMeL Function ( ) ; } return true ;
rank: 215
score: 98.62579345703125
patch: break ; } if ( ref ;
rank: 215
score: 98.47392578125
patch: logger . info ( $STRING$ ) ; break ;
rank: 215
score: 98.4037857055664
patch: if ; break ; for break ;
rank: 216
score: 99.0690673828125
patch: return ref . is CaMeL Function && ref . is CaMeL Function ) ;
rank: 216
score: 98.86712091619319
patch: loop = block . get CaMeL Parent ( ) ;
rank: 216
score: 98.72526550292969
patch: break ; } if break ; }
rank: 216
score: 98.68483479817708
patch: return block . is CaMeL Function $NUMBER$ 0 ( ) ;
rank: 216
score: 98.62460763113839
patch: found = true ; break ;
rank: 216
score: 98.58020891462054
patch: else break ; if break ;
rank: 216
score: 98.473388671875
patch: report CaMeL Error ( $STRING$ ) ;
rank: 216
score: 98.40267333984374
patch: if ; break ; if ; break ; }
rank: 217
score: 99.0684814453125
patch: block . is CaMeL Function = ! block . is CaMeL Function ) ;
rank: 217
score: 98.865673828125
patch: block . is CaMeL Function ) { break ;
rank: 217
score: 98.80116624098558
patch: ctor = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 217
score: 98.72003643329327
patch: return block . is CaMeL Function ) ; } return false ;
rank: 217
score: 98.6842041015625
patch: n = block . get CaMeL Parent ( ) ;
rank: 217
score: 98.57932535807292
patch: else { break ; } break ; }
rank: 217
score: 98.47311062282986
patch: return break ; } } return true ;
rank: 217
score: 98.40236118861607
patch: if break ; break ; {
rank: 218
score: 99.06843566894531
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) false ;
rank: 218
score: 98.8655029296875
patch: return is CaMeL Function ( block . get CaMeL Type ( ) ) ;
rank: 218
score: 98.80054582868304
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( false ) ;
rank: 218
score: 98.72293090820312
patch: return break ; break ; break ;
rank: 218
score: 98.71954345703125
patch: return block . get CaMeL Parent ( ) . equals ( ) ;
rank: 218
score: 98.68402099609375
patch: return ( block . is CaMeL Function ) : true ;
rank: 218
score: 98.57891082763672
patch: break ; break ; if false ;
rank: 218
score: 98.40145438058036
patch: public if break ; break ;
rank: 219
score: 99.06778617527173
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Type ( ) . is CaMeL Function ) ;
rank: 219
score: 98.8651631673177
patch: if ( block . is CaMeL Instance ) { break ;
rank: 219
score: 98.8004901592548
patch: proc = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 219
score: 98.68255615234375
patch: return block . is CaMeL Function ( ) * 1 ;
rank: 219
score: 98.6240234375
patch: break ; } / * break ; * /
rank: 219
score: 98.57890973772321
patch: break ; return false ; }
rank: 219
score: 98.4712646484375
patch: node = block . get CaMeL Parent ( ;
rank: 219
score: 98.40116373697917
patch: System ; break ; if ; break ;
rank: 220
score: 98.86480243389423
patch: loop = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 220
score: 98.79982096354166
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( true ) ;
rank: 220
score: 98.72096761067708
patch: return false ; } finally if break ;
rank: 220
score: 98.6820956143466
patch: return block . is CaMeL Function ( ) + ;
rank: 220
score: 98.57783508300781
patch: this . break ; break ; }
rank: 220
score: 98.4707260131836
patch: this . break = true ; }
rank: 220
score: 98.40109252929688
patch: if ; = $NUMBER$ ; break ;
rank: 221
score: 99.06687330163044
patch: return block . get CaMeL Parent ( ) . equals ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 221
score: 98.79981407752403
patch: state = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 221
score: 98.71961975097656
patch: return true ; } } return ;
rank: 221
score: 98.68168501420455
patch: return block . is CaMeL Function $NUMBER$ 1 ) ;
rank: 221
score: 98.62171936035156
patch: break ; default : return false ;
rank: 221
score: 98.57554796006944
patch: break ; out . println break false ;
rank: 221
score: 98.40042114257812
patch: if n != break ; break ;
rank: 222
score: 99.0666568153783
patch: is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 222
score: 98.79953438895089
patch: result = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 222
score: 98.71702473958334
patch: block = ref . get CaMeL Basic CaMeL Block ( ) ; } }
rank: 222
score: 98.67870076497395
patch: return block . is CaMeL Function ) * * * /
rank: 222
score: 98.62138671875
patch: break ; } else { break ; } ;
rank: 222
score: 98.57532755533855
patch: break ; return break ;
rank: 222
score: 98.46932220458984
patch: break ; } if ( false )
rank: 222
score: 98.40027727399554
patch: return * * break ; /
rank: 223
score: 98.86204020182292
patch: if ( block . is CaMeL Declared ) { break ;
rank: 223
score: 98.79883684430804
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( true ) ;
rank: 223
score: 98.7147216796875
patch: result = block . is CaMeL Function ) ) ;
rank: 223
score: 98.6781494140625
patch: return block . is CaMeL True ( ) ;
rank: 223
score: 98.62004937065973
patch: break ; ; } } return false ;
rank: 223
score: 98.57524108886719
patch: break ; case finally { break ;
rank: 223
score: 98.46828002929688
patch: throw new Assertion CaMeL Error ( break ) ;
rank: 223
score: 98.39971245659723
patch: if ; break ; / / break ;
rank: 224
score: 99.0661151592548
patch: is CaMeL Function = ! block . is CaMeL Function ) ;
rank: 224
score: 98.79814453125
patch: result = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 224
score: 98.718017578125
patch: return true ; } finally {
rank: 224
score: 98.71417236328125
patch: for ( Basic CaMeL Block block = block . get CaMeL Basic CaMeL
rank: 224
score: 98.677734375
patch: return block . is CaMeL Function ( ) + $NUMBER$ ;
rank: 224
score: 98.61839463975694
patch: break ; } else { continue ; }
rank: 224
score: 98.57498931884766
patch: break ; break ; if null ;
rank: 224
score: 98.46701049804688
patch: changed = true ; break ; }
rank: 225
score: 99.06549750434027
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 225
score: 98.86101531982422
patch: loop = ( Basic CaMeL Block ) block . get CaMeL Parent ( ) ;
rank: 225
score: 98.79757486979166
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( )
rank: 225
score: 98.71724446614583
patch: return true ; } else
rank: 225
score: 98.71415571732955
patch: result = block . is CaMeL Empty ( ) ;
rank: 225
score: 98.6776123046875
patch: return ref . is CaMeL Function ( ) 1 ;
rank: 225
score: 98.57442474365234
patch: else { break ; return false ;
rank: 225
score: 98.396728515625
patch: break ; break ; if ; if ; break ;
rank: 226
score: 99.06545188210227
patch: ref . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 226
score: 98.86065063476562
patch: return block . is CaMeL Local ( ) ;
rank: 226
score: 98.79710896809895
patch: queue . if ( block . is CaMeL Function ) {
rank: 226
score: 98.71582794189453
patch: return break ; } else return ;
rank: 226
score: 98.67690022786458
patch: break && block . is CaMeL Function ( ) false ;
rank: 226
score: 98.6175048828125
patch: break ; case Basic CaMeL Block . ; }
rank: 226
score: 98.57438151041667
patch: out . next ( ; break ; }
rank: 226
score: 98.46529541015624
patch: return false ; } else { return false ;
rank: 226
score: 98.39666748046875
patch: break ; ; if break ; } break ;
rank: 227
score: 99.06459350585938
patch: return block . equals ( get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ) ;
rank: 227
score: 98.86008126395089
patch: return ; } block = block . get CaMeL Parent ( ) ;
rank: 227
score: 98.79640299479166
patch: n = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 227
score: 98.71521759033203
patch: return true ; } } if ;
rank: 227
score: 98.67572021484375
patch: return block . is CaMeL Function $NUMBER$ ++ ;
rank: 227
score: 98.5733413696289
patch: break ; ; if break ; ;
rank: 227
score: 98.4649658203125
patch: Thread . sleep ( $NUMBER$ ) ;
rank: 227
score: 98.39547293526786
patch: final if break ; break ;
rank: 228
score: 99.0639981356534
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function || block . is CaMeL Function ;
rank: 228
score: 98.85990142822266
patch: block . is CaMeL Function = block . is CaMeL Function ) ; break ;
rank: 228
score: 98.79527869591347
patch: elem = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 228
score: 98.71488952636719
patch: return ; ; } return break ;
rank: 228
score: 98.71238356370192
patch: break } block = block . get CaMeL Parent ( ) ;
rank: 228
score: 98.67482503255208
patch: while ( block . is CaMeL Function ) { break ;
rank: 228
score: 98.61533028738839
patch: if ; break ; } }
rank: 228
score: 98.57268524169922
patch: break break ; } if break ;
rank: 228
score: 98.46469455295139
patch: return true ; } } return break ;
rank: 228
score: 98.39408569335937
patch: break ; if ; break ; break ; }
rank: 229
score: 99.06389054008152
patch: is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 229
score: 98.85928780691964
patch: block . get CaMeL Parent ( ) . add ( block ) ;
rank: 229
score: 98.79520670572917
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( false ) ;
rank: 229
score: 98.71381487165179
patch: return break ; ; } }
rank: 229
score: 98.71231783353366
patch: return ref . get CaMeL Parent ( ) != null ; }
rank: 229
score: 98.67387084960937
patch: result = ! block . is CaMeL Function )
rank: 229
score: 98.61476643880208
patch: if ( break ; }
rank: 229
score: 98.57229178292411
patch: else { for break ; ;
rank: 229
score: 98.46382141113281
patch: success = false ; break ; }
rank: 229
score: 98.39400227864583
patch: break ; if ; = break ; ;
rank: 230
score: 99.06360973011364
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Basic CaMeL Block ( ) ;
rank: 230
score: 98.85919189453125
patch: if ( block . is CaMeL Function || block . is CaMeL Function ) { break ;
rank: 230
score: 98.79464017427884
patch: attr = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 230
score: 98.71160888671875
patch: try { if ( block . is CaMeL Function ) {
rank: 230
score: 98.67372639973958
patch: block . is CaMeL Function = ) ; return false ;
rank: 230
score: 98.61415608723958
patch: return true ; } else { return ;
rank: 230
score: 98.5718994140625
patch: return true ; break ; } break ;
rank: 230
score: 98.46302490234375
patch: break ; case Boolean . TRUE : break ;
rank: 230
score: 98.39393920898438
patch: break ; break ; } if ; break ;
rank: 231
score: 99.0631793478261
patch: ref . is CaMeL Function = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 231
score: 98.85689504523026
patch: block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 231
score: 98.7108154296875
patch: else { return false ;
rank: 231
score: 98.7108154296875
patch: return true ; } return break ;
rank: 231
score: 98.67332967122395
patch: break && block . is CaMeL Function ( ) ; }
rank: 231
score: 98.5712890625
patch: break ; break ; ; ;
rank: 231
score: 98.46298217773438
patch: report CaMeL Error ( $STRING$ + break ) ;
rank: 232
score: 99.06295340401786
patch: return block . is CaMeL Function && block . get CaMeL Node ( ) . is CaMeL Function ) ;
rank: 232
score: 98.7931377704327
patch: decl = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 232
score: 98.70948137555804
patch: Block block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 232
score: 98.61311170789931
patch: return false ; } else { return ;
rank: 232
score: 98.57045200892857
patch: catch ( $STRING$ ; break ;
rank: 233
score: 99.06236165364584
patch: return block . is CaMeL Function || ref . is CaMeL Function ) ;
rank: 233
score: 98.8563232421875
patch: if ( block . is CaMeL Name ) { break ;
rank: 233
score: 98.79273399939903
patch: row = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 233
score: 98.70936802455357
patch: } else if break ; }
rank: 233
score: 98.70838274274554
patch: return ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL
rank: 233
score: 98.6728006998698
patch: return block . is CaMeL Function ( ) + 0 ;
rank: 233
score: 98.61226196289063
patch: break ; } if ( block == null )
rank: 233
score: 98.56783621651786
patch: else { break ; ; ;
rank: 233
score: 98.46031494140625
patch: body = block . get CaMeL Parent ( ;
rank: 233
score: 98.39057074652777
patch: / if break ; break ; break ;
rank: 234
score: 99.06163114659927
patch: ref = block . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 234
score: 98.85516036184211
patch: ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ; break ;
rank: 234
score: 98.79244290865384
patch: cell = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 234
score: 98.70705159505208
patch: break ; } break ; break ; }
rank: 234
score: 98.67279607599431
patch: break && ref . is CaMeL Function ( ) ;
rank: 234
score: 98.61041259765625
patch: break ; } if ( ref . equals ;
rank: 234
score: 98.5667724609375
patch: case 0 : break ; break ;
rank: 234
score: 98.46029663085938
patch: break throws Runtime CaMeL Exception ; }
rank: 234
score: 98.39025006975446
patch: break ; break ; System ;
rank: 235
score: 99.06149471507354
patch: return block . is CaMeL Function && block . is CaMeL Function ) + false ;
rank: 235
score: 98.85435384114584
patch: return is CaMeL Function ( block . get CaMeL Name ( ) ) ;
rank: 235
score: 98.79231092664931
patch: ! block . is CaMeL Function ) {
rank: 235
score: 98.7069091796875
patch: return false ; } else }
rank: 235
score: 98.56639268663194
patch: else { break ; } return break ;
rank: 235
score: 98.460205078125
patch: return false ; ; } break ;
rank: 236
score: 98.79164475661058
patch: c = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 236
score: 98.70663452148438
patch: return null ; } finally
rank: 236
score: 98.70558675130208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 236
score: 98.6725565592448
patch: break || block . is CaMeL Function ( ) false ;
rank: 236
score: 98.60802544487848
patch: return ; } if ( block . ;
rank: 236
score: 98.56614854600694
patch: return break ; break ; if break ;
rank: 236
score: 98.459716796875
patch: System . out . println ( $STRING$ ; }
rank: 236
score: 98.38946533203125
patch: if ; = name ; break ;
rank: 237
score: 99.06092529296875
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) . is CaMeL Function ) ;
rank: 237
score: 98.85171072823661
patch: } else if ( block . is CaMeL Function ) { break ;
rank: 237
score: 98.70494495738636
patch: result = block . is CaMeL Function ) 1 ;
rank: 237
score: 98.5650405883789
patch: break ; break ; for break ;
rank: 237
score: 98.45939127604167
patch: throw new Error ( $STRING$ ) ; }
rank: 237
score: 98.38902587890625
patch: for ; ; ; ; ; ; break ;
rank: 238
score: 98.85163959703948
patch: result = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Value ( ) ;
rank: 238
score: 98.79091233473558
patch: resource = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 238
score: 98.706494140625
patch: break ; } } if break ; break ;
rank: 238
score: 98.70376352163461
patch: return ( block . is CaMeL Function ( ) ) ; }
rank: 238
score: 98.6707051595052
patch: return block . is CaMeL Function 1 * ( ) ;
rank: 238
score: 98.60619506835937
patch: break break ; }
rank: 238
score: 98.56406075613839
patch: else { break break ; }
rank: 238
score: 98.458154296875
patch: throw new Unsupported CaMeL Operation CaMeL Exception break ;
rank: 238
score: 98.38851165771484
patch: / ; break ; if break ;
rank: 239
score: 99.0603915127841
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && block . is CaMeL Function ;
rank: 239
score: 98.79064002403847
patch: previous = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 239
score: 98.70557403564453
patch: return ; ; } } return ;
rank: 239
score: 98.7034442608173
patch: return ref . is CaMeL Function ( ) ; } else {
rank: 239
score: 98.6706210049716
patch: return block . is CaMeL Function block ( ) ;
rank: 239
score: 98.60540161132812
patch: if ( ; } else { break ; }
rank: 239
score: 98.56377410888672
patch: else { break ; } / /
rank: 239
score: 98.45747593470982
patch: return break ; } if ;
rank: 239
score: 98.38752577039931
patch: return ; { break ; if break ;
rank: 240
score: 99.06037248883929
patch: return block . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function
rank: 240
score: 98.79061185396634
patch: addr = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 240
score: 98.70228794642857
patch: return ref . is CaMeL Function ) ; } } return false ;
rank: 240
score: 98.60440063476562
patch: break ; } } this . ; break ;
rank: 240
score: 98.56311713324652
patch: break ; break ; if break ; ;
rank: 240
score: 98.45602756076389
patch: this . break = false ; break ;
rank: 240
score: 98.38743591308594
patch: return * / break ; break ;
rank: 241
score: 99.0597152709961
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) 1 ;
rank: 241
score: 98.7035400390625
patch: break ; } else { return break ; }
rank: 241
score: 98.70107014973958
patch: return this . ! block . is CaMeL Function ) ;
rank: 241
score: 98.6693623860677
patch: break ( / * && block . is CaMeL Function )
rank: 241
score: 98.60368129185268
patch: return ; } * break ;
rank: 241
score: 98.56305803571429
patch: break ; while break ; }
rank: 241
score: 98.45546468098958
patch: buffer . append ( $STRING$ ) ; }
rank: 241
score: 98.38697052001953
patch: System ; break ; if break ;
rank: 242
score: 98.85023498535156
patch: result = block . is CaMeL Function ) . is CaMeL Function ( ) ;
rank: 242
score: 98.7887714092548
patch: decl = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 242
score: 98.7031005859375
patch: return false ; } else return false ; }
rank: 242
score: 98.69989013671875
patch: if ( block . is CaMeL Function ) return true ;
rank: 242
score: 98.6691182454427
patch: return false | ( block . is CaMeL Function ) ;
rank: 242
score: 98.60340118408203
patch: if ( ; break ; } }
rank: 242
score: 98.56271362304688
patch: else { break ; } * /
rank: 242
score: 98.455419921875
patch: if ( break )
rank: 243
score: 99.05961100260417
patch: return block . get CaMeL Type ( ) . is CaMeL Function ) ;
rank: 243
score: 98.78763834635417
patch: VM . return ( block . is CaMeL Function ) ;
rank: 243
score: 98.70297580295139
patch: return false ; } catch ; break ;
rank: 243
score: 98.69950727982955
patch: true || block . is CaMeL Function ( ) ;
rank: 243
score: 98.668701171875
patch: return block . is CaMeL Function ( ) ? false ;
rank: 243
score: 98.60335540771484
patch: break ; } else { ; }
rank: 243
score: 98.56260850694444
patch: catch true ; break ; if break ;
rank: 243
score: 98.45528411865234
patch: result = break ; break ; }
rank: 243
score: 98.38552856445312
patch: if ; ; break ; break ;
rank: 244
score: 99.05949600883152
patch: return block . get CaMeL Parent ( ) . equals ( ref . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 244
score: 98.84854329427084
patch: ref = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 244
score: 98.78717510516827
patch: element = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 244
score: 98.66835530598958
patch: return block . is CaMeL Function ( ) != false ;
rank: 244
score: 98.6029052734375
patch: if ( ! ; }
rank: 244
score: 98.56173706054688
patch: break ; out . next ( ;
rank: 244
score: 98.38539428710938
patch: return * break ;
rank: 245
score: 98.84847005208333
patch: return block . is CaMeL Function ( ) : block . is CaMeL Function ( ) ;
rank: 245
score: 98.6981201171875
patch: return block . is CaMeL Function ) ) ;
rank: 245
score: 98.668212890625
patch: return block . is CaMeL Function ( ) * ;
rank: 245
score: 98.59970703125
patch: if ( ; else { break ; } }
rank: 245
score: 98.5596923828125
patch: case 0 ; break ; if break ;
rank: 245
score: 98.38507080078125
patch: if ; = break ; for break ;
rank: 246
score: 99.05925641741071
patch: return block . get CaMeL Parent ( ) . get CaMeL Class ( ) . is CaMeL Function ) ;
rank: 246
score: 98.84763997395834
patch: loop = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 246
score: 98.78496442522321
patch: Node block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 246
score: 98.70174831814236
patch: return true ; } else if break ;
rank: 246
score: 98.66819254557292
patch: ref . is CaMeL Function = false ; return false ;
rank: 246
score: 98.59930419921875
patch: this . break ; } else { break ;
rank: 246
score: 98.45405796595982
patch: final ; return break ; }
rank: 246
score: 98.38506317138672
patch: return ; { if ; break ;
rank: 247
score: 99.05703337296195
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Parent ( ) ) . return false ;
rank: 247
score: 98.84740339006696
patch: if ( block . is CaMeL Interface ( ) ) { break ;
rank: 247
score: 98.78467814127605
patch: parameters . if ( block . is CaMeL Function ) {
rank: 247
score: 98.70108371310764
patch: break ; } else return break ; }
rank: 247
score: 98.6966552734375
patch: return ( block . is CaMeL Function ) ; } return true ;
rank: 247
score: 98.55935232979911
patch: break ; ; break ; ;
rank: 247
score: 98.45283508300781
patch: } else { return true ; }
rank: 247
score: 98.38301225142045
patch: break ; if ; break ; if ; break ;
rank: 248
score: 99.05694025213069
patch: return ref . get CaMeL Parent ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ;
rank: 248
score: 98.84699164496527
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) return false ;
rank: 248
score: 98.70063127790179
patch: return break ; } return ;
rank: 248
score: 98.69655539772727
patch: return $STRING$ + block . is CaMeL Function ) ;
rank: 248
score: 98.6670430501302
patch: return block . is CaMeL Function ( ) / * /
rank: 248
score: 98.5980712890625
patch: if ( ; }
rank: 248
score: 98.55933295355902
patch: if false ; break ; } break ;
rank: 248
score: 98.45243072509766
patch: this . break = false ; }
rank: 248
score: 98.38258192274306
patch: if ; break ; System ; break ;
rank: 249
score: 99.05667246942934
patch: block . is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 249
score: 98.78338623046875
patch: n = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 249
score: 98.6941630045573
patch: if ( block . is CaMeL Empty ) { break ;
rank: 249
score: 98.66654459635417
patch: return ) || block . is CaMeL Function ( ) ;
rank: 249
score: 98.5972900390625
patch: if ( ; } break ;
rank: 249
score: 98.55905151367188
patch: value ; break ; if break ;
rank: 249
score: 98.45216064453125
patch: result = block . get CaMeL Result ( ;
rank: 250
score: 99.05653381347656
patch: return block . is CaMeL Function = block . get CaMeL Parent ( ) ;
rank: 250
score: 98.78326885516827
patch: caller = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 250
score: 98.69373779296875
patch: return ( block . is CaMeL Empty ) ;
rank: 250
score: 98.66536458333333
patch: return ref . is CaMeL Function $NUMBER$ $NUMBER$ ( ) ;
rank: 250
score: 98.5946044921875
patch: if ( false ) { break ; }
rank: 250
score: 98.55867767333984
patch: finally { break ; } ; }
rank: 251
score: 99.05596923828125
patch: return ! block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 251
score: 98.78318277994792
patch: if ( ( block . is CaMeL Function ) ) {
rank: 251
score: 98.6987548828125
patch: return break ; } } else return break ;
rank: 251
score: 98.69363839285714
patch: Object block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 251
score: 98.6640625
patch: return block . get CaMeL Parent ( ) == null ;
rank: 251
score: 98.59339396158855
patch: break ; ; } ;
rank: 251
score: 98.55867513020833
patch: catch null || break ;
rank: 251
score: 98.38172607421875
patch: if break ; break ; break ; break ;
rank: 252
score: 99.0546630859375
patch: block . is CaMeL Function = ! block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 252
score: 98.84586588541667
patch: return block . is CaMeL Function ( ) && block . is CaMeL Function ( ) ;
rank: 252
score: 98.78293282645089
patch: body = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 252
score: 98.69828796386719
patch: return true ; } if break ;
rank: 252
score: 98.69216482979911
patch: return block . is CaMeL Function ( ) ; } return false ;
rank: 252
score: 98.66402587890624
patch: return block . . is CaMeL Function ) ;
rank: 252
score: 98.59173583984375
patch: break ; default : System . break ; }
rank: 252
score: 98.55841827392578
patch: break ; try { break ; }
rank: 252
score: 98.44880981445313
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$
rank: 252
score: 98.38123430524554
patch: if false ; ; break ;
rank: 253
score: 99.0537109375
patch: break ; } block = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 253
score: 98.84478400735294
patch: return block . is CaMeL Function ) || block . is CaMeL Function ( ) ;
rank: 253
score: 98.78241436298077
patch: binding = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 253
score: 98.69827609592014
patch: return false ; } } else break ;
rank: 253
score: 98.690185546875
patch: return block . get CaMeL Parent ( ) != null ; }
rank: 253
score: 98.66399468315973
patch: return ref . is CaMeL Function ( )
rank: 253
score: 98.44815499441964
patch: final int index = break ;
rank: 253
score: 98.38105119977679
patch: if ; break ; log ;
rank: 254
score: 98.84465789794922
patch: return block . is CaMeL Function ) && block . is CaMeL Function ) ;
rank: 254
score: 98.78231107271634
patch: expression = block . get CaMeL Function CaMeL Name ( ) ;
rank: 254
score: 98.69734954833984
patch: return null ; } else if ;
rank: 254
score: 98.6897684733073
patch: return { return false ;
rank: 254
score: 98.66301935369319
patch: ! block . is CaMeL Function ) { break ;
rank: 254
score: 98.59137725830078
patch: break ; } } else { ;
rank: 254
score: 98.55836995442708
patch: else { break ; } System . ;
rank: 254
score: 98.38081498579545
patch: if ; break ; if break ; if break ;
rank: 255
score: 98.84355163574219
patch: Basic CaMeL Block block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 255
score: 98.781982421875
patch: ; if ( block . is CaMeL Function ) {
rank: 255
score: 98.69676971435547
patch: return ; ; } } if ;
rank: 255
score: 98.66250610351562
patch: if ( block . is CaMeL Function ) { break _
rank: 255
score: 98.5889892578125
patch: break ; } if ( this . ;
rank: 255
score: 98.55817413330078
patch: break { break ; if break ;
rank: 255
score: 98.44583565848214
patch: result = block ; break ;
rank: 255
score: 98.38069152832031
patch: if break ; break ; / /
rank: 256
score: 99.05224609375
patch: block . is CaMeL Function = ! block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 256
score: 98.78196364182692
patch: constructor = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 256
score: 98.69647216796875
patch: return false ; } break ; ;
rank: 256
score: 98.6889981356534
patch: return get CaMeL Basic CaMeL Block ( block ) ;
rank: 256
score: 98.66241455078125
patch: return block . is CaMeL None ( ) ;
rank: 256
score: 98.5875015258789
patch: if ( ; return true ; }
rank: 256
score: 98.55577087402344
patch: else { try ; break ; }
rank: 256
score: 98.44267578125
patch: break ; } Thread . sleep ( $NUMBER$ ;
rank: 256
score: 98.38058035714286
patch: return / * break ; /
rank: 257
score: 99.05216841264205
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Parent ( ) ) . break ;
rank: 257
score: 98.84315490722656
patch: return ; } ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 257
score: 98.78124128069196
patch: switch ( block . get CaMeL Basic CaMeL Block ( ) ) {
rank: 257
score: 98.69521755642361
patch: return false ; } finally = break ;
rank: 257
score: 98.68845621744792
patch: else block = block . get CaMeL Parent ( ) ;
rank: 257
score: 98.66217041015625
patch: return block . is CaMeL Function $NUMBER$ 1 ;
rank: 257
score: 98.58496704101563
patch: break ; } else { break ; ; }
rank: 257
score: 98.55484771728516
patch: else { break ; } else {
rank: 257
score: 98.38009207589286
patch: for ; * / break ;
rank: 258
score: 99.0519686612216
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function = block . is CaMeL Function ;
rank: 258
score: 98.84299603630515
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ; return false ;
rank: 258
score: 98.78121948242188
patch: return block . get CaMeL Basic CaMeL Block ( ) .
rank: 258
score: 98.69468688964844
patch: } else { if break ; }
rank: 258
score: 98.58489990234375
patch: break ; default : ; }
rank: 258
score: 98.55367606026786
patch: break ; ; ; break ;
rank: 258
score: 98.44036865234375
patch: if ( target != null )
rank: 258
score: 98.37982177734375
patch: if ; void break ;
rank: 259
score: 99.05173165457589
patch: ref = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 259
score: 98.84269445082721
patch: block = ref . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 259
score: 98.68228759765626
patch: ( ( Basic CaMeL Block ) block ) .
rank: 259
score: 98.66085815429688
patch: return block . is CaMeL Function ( ) * $NUMBER$ ;
rank: 259
score: 98.58361053466797
patch: return true ; } if ( ;
rank: 259
score: 98.55345323350694
patch: return false ; ; ; if break ;
rank: 259
score: 98.37939453125
patch: break ; ; = break ; if break ;
rank: 260
score: 99.05078125
patch: return block . get CaMeL Parent ( ) . is CaMeL Function )
rank: 260
score: 98.84188842773438
patch: if ( block . is CaMeL Global ) { break ;
rank: 260
score: 98.69285365513393
patch: break ; } } catch ;
rank: 260
score: 98.66017659505208
patch: return ( block . is CaMeL Empty ( ) ) ;
rank: 260
score: 98.58347865513393
patch: throw new break ; } ;
rank: 260
score: 98.43994140625
patch: return false ; } if ;
rank: 260
score: 98.37909545898438
patch: break ; ; / if break ; break ;
rank: 261
score: 99.0504379272461
patch: return ( ref . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 261
score: 98.8416519165039
patch: block . is CaMeL Function = block . is CaMeL Function ; return false ;
rank: 261
score: 98.78069661458333
patch: res = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 261
score: 98.69242095947266
patch: return ; ; } } else ;
rank: 261
score: 98.65981038411458
patch: return ( block . is CaMeL Function ) + ) ;
rank: 261
score: 98.55322943793402
patch: catch false ; break ; System . ;
rank: 261
score: 98.43952287946429
patch: break [ 0 ] ; }
rank: 261
score: 98.37895965576172
patch: if false ;
rank: 262
score: 99.05031174879808
patch: return block . equals ( block . is CaMeL Function ) ;
rank: 262
score: 98.84014423076923
patch: return ( ! block . is CaMeL Function ( ) ) ;
rank: 262
score: 98.7803067294034
patch: return block . is CaMeL Function ) ; break ;
rank: 262
score: 98.692138671875
patch: break ; } else ; }
rank: 262
score: 98.65895589192708
patch: ref . is CaMeL Function = true ; return false ;
rank: 262
score: 98.5816650390625
patch: break ; } this . ; ;
rank: 262
score: 98.55315399169922
patch: catch break ;
rank: 262
score: 98.43826293945312
patch: buf . append ( $STRING$ ) ;
rank: 262
score: 98.37879096137152
patch: break ; if ; break ; / /
rank: 263
score: 99.05025227864583
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) 1 ;
rank: 263
score: 98.83965594951923
patch: if ( block . is CaMeL Declared ) { return false ;
rank: 263
score: 98.77924455915179
patch: Decl ref = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 263
score: 98.69095865885417
patch: return false ; } } if false ;
rank: 263
score: 98.65847778320312
patch: break || block . is CaMeL Function ( ) * /
rank: 263
score: 98.58070678710938
patch: break ; } if ( block . break ;
rank: 263
score: 98.55297173394098
patch: else { break ; } while break ;
rank: 263
score: 98.37864379882812
patch: break ; } if break ; if break ;
rank: 264
score: 99.04978249289773
patch: block . is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 264
score: 98.83956570095486
patch: loop = ( Basic CaMeL Block ) block . get CaMeL Basic CaMeL Block ( ) ;
rank: 264
score: 98.77847055288461
patch: itr = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 264
score: 98.6903076171875
patch: } else { return break ; }
rank: 264
score: 98.65843709309895
patch: return ) && ( block . is CaMeL Function ) ;
rank: 264
score: 98.58065185546874
patch: switch ( block . get CaMeL Type ( ;
rank: 264
score: 98.55276489257812
patch: else { break ; } ; ;
rank: 264
score: 98.43548583984375
patch: throw new Null CaMeL Pointer CaMeL Exception ;
rank: 264
score: 98.37834930419922
patch: if break ; break ; ; /
rank: 265
score: 99.0496826171875
patch: return block . get CaMeL Target ( ) . is CaMeL Function ) ;
rank: 265
score: 98.83934110753677
patch: return block . is CaMeL Function && block . is CaMeL Function ) { break ;
rank: 265
score: 98.77743765024039
patch: e = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 265
score: 98.68959045410156
patch: return break ; } } catch ;
rank: 265
score: 98.6689453125
patch: return block . is CaMeL Empty ( ) ; }
rank: 265
score: 98.65824381510417
patch: return block . is CaMeL Function $NUMBER$ ( ) ; }
rank: 265
score: 98.57988739013672
patch: if ( ; break ; } ;
rank: 265
score: 98.552734375
patch: value = break ) ;
rank: 265
score: 98.43511352539062
patch: if ( break ) { break ; } }
rank: 265
score: 98.37778930664062
patch: if break ; break ; / / break ;
rank: 266
score: 98.8392333984375
patch: return ref . is CaMeL Function ( ) ; * /
rank: 266
score: 98.77687290736607
patch: t = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 266
score: 98.68941824776786
patch: throw new Runtime CaMeL Exception ;
rank: 266
score: 98.665771484375
patch: throw new || block . is CaMeL Function ) ;
rank: 266
score: 98.65699259440105
patch: break && block . is CaMeL Function ( ) * /
rank: 266
score: 98.57943289620536
patch: break ; } ; } ;
rank: 266
score: 98.55272565569196
patch: ++ break ; break ; }
rank: 266
score: 98.43449571397569
patch: throw new Runtime CaMeL Exception ( break ;
rank: 266
score: 98.37710232204861
patch: break ; break ; } break ; }
rank: 267
score: 99.04872349330357
patch: return block . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function
rank: 267
score: 98.77657063802083
patch: return block . is CaMeL Function && block . is CaMeL Local ) ;
rank: 267
score: 98.57924979073661
patch: return true ; continue ; }
rank: 267
score: 98.55253601074219
patch: break ; break ; } false ;
rank: 267
score: 98.43412017822266
patch: sb . append ( break ) ;
rank: 267
score: 98.37693277994792
patch: if break ; break ; break ; }
rank: 268
score: 99.04852701822917
patch: return block . is CaMeL Function && ! block . is CaMeL Function ;
rank: 268
score: 98.68844943576389
patch: return null ; } } return break ;
rank: 268
score: 98.6563720703125
patch: return block . is CaMeL Function ( ) : block
rank: 268
score: 98.57638888888889
patch: break ; } else { return true ;
rank: 268
score: 98.5523681640625
patch: catch new Throwable break ;
rank: 268
score: 98.43375941685268
patch: match = true ; break ;
rank: 268
score: 98.37686593191964
patch: if false ; for break ;
rank: 269
score: 99.04817708333333
patch: return block . get CaMeL Parent ( ) . equals ( block . get CaMeL Parent ( ) ) ;
rank: 269
score: 98.68657575334821
patch: return null ; } } }
rank: 269
score: 98.65627712673611
patch: return block . is CaMeL Function ++ ;
rank: 269
score: 98.55198451450893
patch: break ; break ; / /
rank: 269
score: 98.4337158203125
patch: break - 1 ; } break ;
rank: 269
score: 98.37680489676339
patch: break ; break ; } /
rank: 270
score: 99.04810680042614
patch: ref = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ; }
rank: 270
score: 98.8367984169408
patch: result = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Value ( ) ;
rank: 270
score: 98.77538190569196
patch: Instruction block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 270
score: 98.68648274739583
patch: return break ; } } return null ;
rank: 270
score: 98.66091918945312
patch: return || block . is CaMeL Function ) ;
rank: 270
score: 98.65582885742188
patch: block . is CaMeL Function = false ; }
rank: 270
score: 98.57382541232639
patch: break ; default : System . ; }
rank: 270
score: 98.55169677734375
patch: return ( break ) ;
rank: 270
score: 98.43250528971355
patch: block = break ; }
rank: 270
score: 98.37654113769531
patch: for ; ; ; ; break ;
rank: 271
score: 99.04774876644737
patch: is CaMeL Function = block . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 271
score: 98.83535330636161
patch: return boolean CaMeL Value = block . is CaMeL Function ( ) ;
rank: 271
score: 98.77470703125
patch: t = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ;
rank: 271
score: 98.68545968191964
patch: return ; ; } } else
rank: 271
score: 98.65903542258523
patch: true && block . is CaMeL Function ( ) ;
rank: 271
score: 98.57380676269531
patch: break ; default : continue ; }
rank: 271
score: 98.43132019042969
patch: throw new Error ( $STRING$ ) ;
rank: 271
score: 98.37595040457589
patch: return ; * / break ;
rank: 272
score: 99.0476318359375
patch: is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 272
score: 98.83506266276042
patch: return ! block . is CaMeL Function ) { break ;
rank: 272
score: 98.6844482421875
patch: return break ; } } finally {
rank: 272
score: 98.65798117897727
patch: block = block . is CaMeL Function ( ) ;
rank: 272
score: 98.65460205078125
patch: return block . is CaMeL Function $NUMBER$ ( ) ) ;
rank: 272
score: 98.5726826985677
patch: return ; } break ;
rank: 272
score: 98.55157470703125
patch: return null ; ;
rank: 272
score: 98.42957899305556
patch: break ; } if ( ! break )
rank: 272
score: 98.37546793619792
patch: if $NUMBER$ ; break ; if break ;
rank: 273
score: 99.04744466145833
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) false ;
rank: 273
score: 98.83483168658088
patch: block . is CaMeL Function = block . is CaMeL Function ( ) ; break ;
rank: 273
score: 98.77422626201923
patch: type = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 273
score: 98.6836669921875
patch: return break ; break ; } } break ;
rank: 273
score: 98.65640258789062
patch: return ref . is CaMeL Function ) ) ;
rank: 273
score: 98.55100504557292
patch: } else { break ;
rank: 274
score: 99.04679147820724
patch: is CaMeL Function = ! block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 274
score: 98.83466339111328
patch: synchronized ( block . get CaMeL Basic CaMeL Block ( ) ) { break ;
rank: 274
score: 98.77385602678571
patch: } block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 274
score: 98.68310546875
patch: return break ; } } break ; break ;
rank: 274
score: 98.65406383167614
patch: return block . is CaMeL Function ( $NUMBER$ ) ;
rank: 274
score: 98.65166681463069
patch: throw ! ( block . is CaMeL Function ) ;
rank: 274
score: 98.57198333740234
patch: break ; } if ( success ;
rank: 274
score: 98.55010986328125
patch: break ; } break { break ;
rank: 274
score: 98.4293212890625
patch: this . break = break ;
rank: 274
score: 98.3751553622159
patch: if break ; break ; if ; { break ;
rank: 275
score: 99.04666748046876
patch: return block . is CaMeL Function ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 275
score: 98.83463781020221
patch: block = block . get CaMeL Parent ( ) . get CaMeL Type ( ) ;
rank: 275
score: 98.77239990234375
patch: return block . is CaMeL Local ) ;
rank: 275
score: 98.68135833740234
patch: return break ; } catch ; }
rank: 275
score: 98.6539306640625
patch: return block . equals ( true ) ;
rank: 275
score: 98.57103620256696
patch: throw new break 1 ; }
rank: 275
score: 98.55005560980902
patch: if break ; break ; System . ;
rank: 275
score: 98.42891845703124
patch: target = block . get CaMeL Parent ( ;
rank: 275
score: 98.37489318847656
patch: return ; if ; = break ;
rank: 276
score: 99.04654594089673
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Loop
rank: 276
score: 98.83462524414062
patch: if ( block . is CaMeL Constructor ) { break ;
rank: 276
score: 98.772314453125
patch: found = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 276
score: 98.65392049153645
patch: return block . is CaMeL Function ) : return false ;
rank: 276
score: 98.6502685546875
patch: return { block . is CaMeL Function ( ) ;
rank: 276
score: 98.54958670479911
patch: else { * break ; }
rank: 276
score: 98.42855224609374
patch: final break ; }
rank: 277
score: 99.0463534268466
patch: is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ) . is CaMeL Function ;
rank: 277
score: 98.83438110351562
patch: break ; } ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 277
score: 98.77096121651786
patch: ; block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 277
score: 98.67994995117188
patch: return ; ; }
rank: 277
score: 98.65248616536458
patch: return ref . is CaMeL Function ( ) + 1 ;
rank: 277
score: 98.54880099826389
patch: break ; out . append break false ;
rank: 277
score: 98.4284896850586
patch: compare CaMeL To ( break ) ;
rank: 277
score: 98.37195696149554
patch: return if ; { break ;
rank: 278
score: 99.04620361328125
patch: return block . get CaMeL Parent ( ) . is CaMeL Function || block . is CaMeL Function ;
rank: 278
score: 98.8343734741211
patch: return block . is CaMeL Function ) : block . is CaMeL Function ) ;
rank: 278
score: 98.77044208233173
patch: l = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 278
score: 98.67730712890625
patch: return null ; } catch ; }
rank: 278
score: 98.6521708170573
patch: ! ( block . is CaMeL Function ) { break ;
rank: 278
score: 98.64491965553977
patch: return block . is CaMeL Function ) ; * /
rank: 278
score: 98.56488037109375
patch: break ; } if ( block . has ;
rank: 278
score: 98.5482177734375
patch: break ; } else { if break ;
rank: 278
score: 98.42732456752232
patch: if ( ! break ; }
rank: 278
score: 98.3714599609375
patch: if ; = false ; break ;
rank: 279
score: 99.04606827445652
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Instance ( ) . is CaMeL Function ) ;
rank: 279
score: 98.83429424579327
patch: if ( block . . is CaMeL Function ) { break ;
rank: 279
score: 98.7704326923077
patch: iter = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 279
score: 98.67704772949219
patch: break ; } finally if break ;
rank: 279
score: 98.65198364257813
patch: return block . is CaMeL Resolved ( ) ;
rank: 279
score: 98.56270345052083
patch: break ; default ; }
rank: 279
score: 98.54808807373047
patch: break ; ; else if break ;
rank: 279
score: 98.42674255371094
patch: buf . append ( break ) ;
rank: 280
score: 98.83343505859375
patch: return ref . is CaMeL Function ( ) : block . is CaMeL Function ( ) ;
rank: 280
score: 98.77014973958333
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ; }
rank: 280
score: 98.67670355902777
patch: return false ; } } else return ;
rank: 280
score: 98.65174449573864
patch: return ( ! ref . is CaMeL Function ) ;
rank: 280
score: 98.56254069010417
patch: break ; } / * break ; ;
rank: 280
score: 98.54749298095703
patch: else { break ; return null ;
rank: 280
score: 98.42616271972656
patch: match = false ; break ; }
rank: 281
score: 98.83278982979911
patch: if ( ref . is CaMeL Function ( ) ) { break ;
rank: 281
score: 98.76927771935097
patch: part = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 281
score: 98.67636447482639
patch: return ; ; } } return break ;
rank: 281
score: 98.64945475260417
patch: return is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime (
rank: 281
score: 98.54637799944196
patch: value break ; break ; }
rank: 281
score: 98.3703384399414
patch: for break ;
rank: 282
score: 99.04499162946429
patch: return block . is CaMeL Function && ref . is CaMeL Function && block . is CaMeL Function ) ;
rank: 282
score: 98.83253987630208
patch: block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ; }
rank: 282
score: 98.76859537760417
patch: t = ref . get CaMeL Basic CaMeL Block ( ) ; if (
rank: 282
score: 98.6761703491211
patch: return null ; } } if ;
rank: 282
score: 98.6365633877841
patch: result = block . is CaMeL Function ) false ;
rank: 282
score: 98.559521484375
patch: switch ( block . get CaMeL Type ; }
rank: 282
score: 98.54635959201389
patch: * break ; break ; if break ;
rank: 282
score: 98.4226318359375
patch: block = block . get CaMeL Parent ( )
rank: 282
score: 98.36962890625
patch: break ; break ; println ;
rank: 283
score: 98.767822265625
patch: res = block . is CaMeL Function ) ;
rank: 283
score: 98.675439453125
patch: return false ; } } } return false ;
rank: 283
score: 98.6486307779948
patch: return block . is CaMeL Function $NUMBER$ ( ) false ;
rank: 283
score: 98.559375
patch: switch ; case Basic CaMeL Block . FUNCTION :
rank: 283
score: 98.54624720982143
patch: * break ; } break ;
rank: 283
score: 98.42127821180556
patch: target = block . get CaMeL Target ;
rank: 283
score: 98.36847534179688
patch: if ; break ; break ; } break ;
rank: 284
score: 99.04374556107955
patch: return block . is CaMeL Function && block . get CaMeL Parent ( ) . is CaMeL Function ( ) ;
rank: 284
score: 98.831787109375
patch: return block . get CaMeL Name ( ) . equals ( $STRING$ ) ;
rank: 284
score: 98.76751708984375
patch: Node ref = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 284
score: 98.67529907226563
patch: return ; ; } } else return false ;
rank: 284
score: 98.6481221516927
patch: return block . is CaMeL Function ( ) : block ;
rank: 284
score: 98.5585205078125
patch: ref = block . get CaMeL Reference ( ;
rank: 284
score: 98.54530843098958
patch: break ; break ; } * * /
rank: 284
score: 98.41878836495536
patch: if ; return false ; }
rank: 284
score: 98.36846923828125
patch: break ; break ; ; / if break ;
rank: 285
score: 99.04291381835938
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function )
rank: 285
score: 98.82979329427083
patch: return block . is CaMeL Function ( ) || block . is CaMeL Function ( ) ;
rank: 285
score: 98.76749361478366
patch: retval = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 285
score: 98.67520751953126
patch: return break ; } } if ; break ;
rank: 285
score: 98.64811197916667
patch: break ? block = block . get CaMeL Parent ( )
rank: 285
score: 98.62547810872395
patch: return return false ; }
rank: 285
score: 98.54464721679688
patch: value ; break ; }
rank: 285
score: 98.41669311523438
patch: break = block . get CaMeL Parent ( ;
rank: 285
score: 98.36808268229167
patch: for ; ; ; ; ; break ;
rank: 286
score: 99.0428466796875
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) . is CaMeL Function ) ;
rank: 286
score: 98.82974243164062
patch: return this . block . is CaMeL Function ( ) ;
rank: 286
score: 98.7650615985577
patch: se = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 286
score: 98.67518310546875
patch: break ; } else if break ; break ;
rank: 286
score: 98.6476338704427
patch: return ref . is CaMeL Function ( ) - false ;
rank: 286
score: 98.55613878038194
patch: break ; } else { throw ; }
rank: 286
score: 98.54401991102431
patch: break ; ; / / * break ;
rank: 286
score: 98.41607666015625
patch: report CaMeL Error ( $STRING$ , null ) ;
rank: 286
score: 98.36766221788194
patch: return ; if break ; if break ;
rank: 287
score: 99.04218982514881
patch: return block . get CaMeL Parent ( ) . get CaMeL Reference ( ) . is CaMeL Function ) ;
rank: 287
score: 98.82948704769737
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; } else {
rank: 287
score: 98.64717240767045
patch: System . arraycopy ( block . is CaMeL Function )
rank: 287
score: 98.6239990234375
patch: return && block . is CaMeL Function ) ;
rank: 287
score: 98.54357231987848
patch: break ; this . break ; ; ;
rank: 287
score: 98.41590881347656
patch: if ( break ) break ; }
rank: 287
score: 98.36751302083333
patch: return * break ; break ; break ;
rank: 288
score: 99.041650390625
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ;
rank: 288
score: 98.8293212890625
patch: q = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 288
score: 98.76387532552083
patch: is CaMeL Function = block . is CaMeL Function ) ;
rank: 288
score: 98.64686075846355
patch: return ( block . is CaMeL Function ) * * ;
rank: 288
score: 98.55403900146484
patch: break ; ; } else break ;
rank: 288
score: 98.5428237915039
patch: logger . arraycopy ( break ) ;
rank: 288
score: 98.36684744698661
patch: for break ; if break ;
rank: 289
score: 98.82904052734375
patch: ref . if ( block . is CaMeL Function ) { break ;
rank: 289
score: 98.76380266462054
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL
rank: 289
score: 98.67271423339844
patch: return null ; } finally { }
rank: 289
score: 98.64646218039773
patch: break && node . is CaMeL Function ( ) ;
rank: 289
score: 98.61509399414062
patch: -- ref . get CaMeL Parent ( ) ;
rank: 289
score: 98.55364227294922
patch: break ; } ; if ( ;
rank: 289
score: 98.54258219401042
patch: break ; break ; } if false ;
rank: 289
score: 98.41390991210938
patch: report CaMeL Error ( break ) ;
rank: 289
score: 98.36666434151786
patch: if * break ; break ;
rank: 290
score: 98.82820209703948
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; return false ;
rank: 290
score: 98.76243373325893
patch: table . if ( block . is CaMeL Function ) { break ;
rank: 290
score: 98.67261614118304
patch: return break ; } finally ;
rank: 290
score: 98.64614868164062
patch: return block . is CaMeL Function 1 ( ) ) ;
rank: 290
score: 98.55283203125
patch: if ( ! Boolean . TRUE . equals ;
rank: 290
score: 98.54096984863281
patch: break ; break ; out ; }
rank: 290
score: 98.36614118303571
patch: while ; break ; break ;
rank: 291
score: 98.82799008018092
patch: block = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Type ( ) ;
rank: 291
score: 98.76158796037946
patch: ! block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 291
score: 98.64608764648438
patch: return block . is CaMeL Function ( ) - 0 ;
rank: 291
score: 98.5521240234375
patch: return false ; } if ( ;
rank: 291
score: 98.54051971435547
patch: break ; ; ; return false ;
rank: 291
score: 98.36588911576705
patch: if break ; break ; if ; = break ;
rank: 292
score: 98.82748413085938
patch: if ( block . is CaMeL Get ) { break ;
rank: 292
score: 98.7610332782452
patch: inst = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 292
score: 98.67118072509766
patch: return false ; if break ; }
rank: 292
score: 98.64607747395833
patch: return ( ! block . is CaMeL Function ) ; }
rank: 292
score: 98.53909301757812
patch: break ; ; try { break ;
rank: 293
score: 99.04011674360795
patch: return block . is CaMeL Function . is CaMeL Function && block . get CaMeL Parent ( ) != null ;
rank: 293
score: 98.76040213448661
patch: return block . is CaMeL Function && block . is CaMeL Function _
rank: 293
score: 98.67064666748047
patch: return false ; } catch ; ;
rank: 293
score: 98.64555220170455
patch: return ( block . is CaMeL Function ) 1 ;
rank: 293
score: 98.60379028320312
patch: -- block . get CaMeL Parent ( ) ;
rank: 293
score: 98.53885904947917
patch: break ; } break ; return false ;
rank: 293
score: 98.41140407986111
patch: break false ; } } return false ;
rank: 293
score: 98.36325073242188
patch: break ; return ; if break ;
rank: 294
score: 99.04011366102431
patch: return block . is CaMeL Function || block . get CaMeL Parent ( ) != null ;
rank: 294
score: 98.827392578125
patch: if ( block . is CaMeL New ) { break ;
rank: 294
score: 98.75917271205357
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) .
rank: 294
score: 98.67005004882813
patch: return break ; } else return false ; }
rank: 294
score: 98.64509721235795
patch: return block . is CaMeL Function ( ) * /
rank: 294
score: 98.60287814670139
patch: block . is CaMeL Function ( ) ;
rank: 294
score: 98.55120849609375
patch: break ; } if ( block != null ;
rank: 294
score: 98.53816441127232
patch: value = true ; break ;
rank: 294
score: 98.4113540649414
patch: return true ; ; } break ;
rank: 294
score: 98.361865234375
patch: break ; if break ; / if break ;
rank: 295
score: 99.04000854492188
patch: return ref . is CaMeL Function && ( block . is CaMeL Function ) ;
rank: 295
score: 98.8271728515625
patch: if ( ! this . block . is CaMeL Function ) { break ;
rank: 295
score: 98.75906575520834
patch: prev = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 295
score: 98.6698226928711
patch: return this . break ; } }
rank: 295
score: 98.64404907226563
patch: return block . is CaMeL Function = ) ;
rank: 295
score: 98.60171508789062
patch: return { block . is CaMeL Function ) ;
rank: 295
score: 98.55014038085938
patch: break ; } } * / ;
rank: 295
score: 98.53795030381944
patch: while break ; break ; } break ;
rank: 295
score: 98.41078404017857
patch: position ++ ; break ; }
rank: 295
score: 98.36171177455357
patch: if ; break ; / ;
rank: 296
score: 99.03965541294643
patch: return block . is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 296
score: 98.82676478794643
patch: ref . is CaMeL Function = block . is CaMeL Function ) ;
rank: 296
score: 98.75800432477679
patch: Object ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 296
score: 98.66968383789063
patch: return false ; } else { return break ;
rank: 296
score: 98.64337158203125
patch: return ( block . is CaMeL Function ) ? break ;
rank: 296
score: 98.60130004882812
patch: throw . get CaMeL Exception ( ) ; }
rank: 296
score: 98.5377426147461
patch: break ; out . clear ( ;
rank: 296
score: 98.41063581194196
patch: return Boolean . TRUE ; }
rank: 296
score: 98.36161499023437
patch: if break ; ; if break ; break ;
rank: 297
score: 99.0380859375
patch: return block . is CaMeL Function = block . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 297
score: 98.82552297491776
patch: block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . out ;
rank: 297
score: 98.75663618607955
patch: list . return block . is CaMeL Function ) ;
rank: 297
score: 98.66767035590277
patch: return false ; } break ; break ;
rank: 297
score: 98.64306640625
patch: return ) || ( block . is CaMeL Function ) ;
rank: 297
score: 98.59872436523438
patch: throw new Exception ( $STRING$ ) ;
rank: 297
score: 98.5364761352539
patch: finally { super . break break ;
rank: 297
score: 98.41050720214844
patch: false = true ; break ; }
rank: 297
score: 98.36153411865234
patch: return ; break ; if break ;
rank: 298
score: 99.03807983398437
patch: return block . get CaMeL Parent ( ) . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 298
score: 98.82534450954861
patch: return ref . is CaMeL Function ( ) && block . is CaMeL Function ( ) ;
rank: 298
score: 98.7559814453125
patch: iter = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 298
score: 98.66665649414062
patch: return false ; } } else throw null ;
rank: 298
score: 98.5969970703125
patch: ++ ref . get CaMeL Parent ( ) ;
rank: 298
score: 98.54761962890625
patch: return true ; } else { return ; }
rank: 298
score: 98.53643798828125
patch: break ; } break ; false ;
rank: 298
score: 98.410205078125
patch: break ; } break ; } return break ;
rank: 299
score: 99.037060546875
patch: return block . is CaMeL Function = block . is CaMeL Function ) ;
rank: 299
score: 98.82523386101974
patch: if ( block . is CaMeL Function && block . is CaMeL Function ) { return false ;
rank: 299
score: 98.6427001953125
patch: return true && ( block . is CaMeL Function ) ;
rank: 299
score: 98.54698350694444
patch: break ; } ref = block . ;
rank: 299
score: 98.53639729817708
patch: catch null && break ;
rank: 299
score: 98.40855577256944
patch: logger . info ( $STRING$ + break ;
rank: 299
score: 98.36046491350446
patch: return false ; for break ;
rank: 300
score: 99.03701443142361
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) + false ;
rank: 300
score: 98.75576171875
patch: t = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 300
score: 98.66625213623047
patch: break ; } else = break ;
rank: 300
score: 98.64254760742188
patch: if ( element . is CaMeL Function ) { break ;
rank: 300
score: 98.59349365234375
patch: try { block . is CaMeL Function ) {
rank: 300
score: 98.54683430989583
patch: break ; ; } this . break ;
rank: 300
score: 98.53636169433594
patch: catch false ; break ; } ;
rank: 300
score: 98.40668487548828
patch: logger . error ( $STRING$ ) ;
rank: 301
score: 98.82396024816177
patch: return super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; }
rank: 301
score: 98.7552490234375
patch: tmp = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 301
score: 98.6652099609375
patch: return false ; } } if ; break ;
rank: 301
score: 98.64246715198864
patch: return block . is CaMeL Function ( 1 ) ;
rank: 301
score: 98.58938937717014
patch: throw . get CaMeL Exception ( ) ;
rank: 301
score: 98.5362548828125
patch: return true ; ; if break ;
rank: 301
score: 98.40635681152344
patch: removed = true ; break ; }
rank: 301
score: 98.35990905761719
patch: return ; { break ; break ;
rank: 302
score: 99.03650433084239
patch: return ref . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( block ) ;
rank: 302
score: 98.82323201497395
patch: return ( block . is CaMeL Function ) ; break ;
rank: 302
score: 98.75469563802083
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) {
rank: 302
score: 98.66469997829861
patch: return true ; } else return false ;
rank: 302
score: 98.64225260416667
patch: return block . is CaMeL Function 1 ( ) false ;
rank: 302
score: 98.54522705078125
patch: break ; } else break ; }
rank: 302
score: 98.53614637586806
patch: for break ; break ; if break ;
rank: 302
score: 98.35933061079545
patch: if break ; break ; if ; break ; }
rank: 303
score: 99.0361328125
patch: is CaMeL Function = block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 303
score: 98.82317437065973
patch: return ( block . is CaMeL Function || block . is CaMeL Function ( ) ) ;
rank: 303
score: 98.66450330946181
patch: return break ; } this . break ;
rank: 303
score: 98.64095458984374
patch: return ref . is CaMeL Function ( ) _
rank: 303
score: 98.5447998046875
patch: throw new break ; } }
rank: 303
score: 98.53545464409723
patch: break ; ; break ; } break ;
rank: 303
score: 98.40520629882812
patch: System . err . println ( $STRING$ + ;
rank: 303
score: 98.35907745361328
patch: if ; * / / break ;
rank: 304
score: 99.0357421875
patch: ref . is CaMeL Function = block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 304
score: 98.82312622070313
patch: return ref . is CaMeL Local ( ) ;
rank: 304
score: 98.75351388113839
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ;
rank: 304
score: 98.66356658935547
patch: break ; } } } break ;
rank: 304
score: 98.6407470703125
patch: return false : block . is CaMeL Function ( ) ;
rank: 304
score: 98.57554117838542
patch: block . get CaMeL Parent ( ) .
rank: 304
score: 98.54470486111111
patch: break ; } } / * break ;
rank: 304
score: 98.53545464409723
patch: / * break ; / if break ;
rank: 304
score: 98.4046401977539
patch: break compare CaMeL To ( ; }
rank: 304
score: 98.358642578125
patch: break ; if ; break ; } break ;
rank: 305
score: 99.03533380681819
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) != null ;
rank: 305
score: 98.82246398925781
patch: ref . is CaMeL Function = block . is CaMeL Function ) ; break ;
rank: 305
score: 98.7532958984375
patch: return block . get CaMeL Basic CaMeL Block ( )
rank: 305
score: 98.66278839111328
patch: else { return false ; } }
rank: 305
score: 98.64042154947917
patch: return ref . is CaMeL Function $NUMBER$ * ( ) ;
rank: 305
score: 98.5445327758789
patch: break ; } } ; * /
rank: 305
score: 98.53443254743304
patch: break ; ; else break ;
rank: 305
score: 98.40361328125
patch: return Boolean . TRUE . equals ( break ;
rank: 305
score: 98.35730590820313
patch: result ; break ;
rank: 306
score: 99.035009765625
patch: block . is CaMeL Function = ref . get CaMeL Parent ( ) ;
rank: 306
score: 98.82246229383681
patch: return block . is CaMeL Function && block . is CaMeL Function ) { return false ;
rank: 306
score: 98.75308663504464
patch: break ; } else if ( block . is CaMeL Function ) {
rank: 306
score: 98.66256374782986
patch: } else { return false ; } }
rank: 306
score: 98.54325358072917
patch: break ; } / * break * /
rank: 306
score: 98.53252301897321
patch: value = break && null ;
rank: 306
score: 98.40333387586806
patch: block = block . get CaMeL Parent ;
rank: 306
score: 98.3572006225586
patch: break ; ; / = break ;
rank: 307
score: 99.03475341796874
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) . is CaMeL Function ) ;
rank: 307
score: 98.82200792100694
patch: if ( block . is CaMeL Function ) { block . is CaMeL Function = false ;
rank: 307
score: 98.75265066964286
patch: found = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 307
score: 98.66134643554688
patch: return false ; } } false ;
rank: 307
score: 98.63592529296875
patch: return block . is CaMeL Function { break ;
rank: 307
score: 98.56874389648438
patch: throw ! block . is CaMeL Function ) ;
rank: 307
score: 98.54306030273438
patch: return true ; } } else { break ;
rank: 307
score: 98.40332641601563
patch: return Boolean . value CaMeL Of ( break ;
rank: 307
score: 98.35628933376736
patch: if break ; if break ; break ;
rank: 308
score: 99.03441220238095
patch: is CaMeL Function = ! block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 308
score: 98.82107704564145
patch: ref = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Type ( ) ;
rank: 308
score: 98.75255737304687
patch: if ( node . is CaMeL Function ) {
rank: 308
score: 98.66078016493056
patch: return break ; } else return break ;
rank: 308
score: 98.6336669921875
patch: block . is CaMeL Function = true ; }
rank: 308
score: 98.56849365234375
patch: || block . is CaMeL Function ( ) ;
rank: 308
score: 98.54305594308036
patch: break ; } block = ;
rank: 308
score: 98.53225708007812
patch: else { break ; for break ;
rank: 308
score: 98.40314398871527
patch: break ; } Thread . sleep ( ;
rank: 308
score: 98.35592312282986
patch: break ; break ; if ; / /
rank: 309
score: 98.66022338867188
patch: return false ; } finally if break ; }
rank: 309
score: 98.53165435791016
patch: break ; ; finally { break ;
rank: 309
score: 98.4007080078125
patch: logger . error ( $STRING$ ) ; break ;
rank: 310
score: 99.03377632472827
patch: return ref . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref ) ;
rank: 310
score: 98.82078334263393
patch: if ( block . is CaMeL Local ( ) ) { break ;
rank: 310
score: 98.75223482572116
patch: ie = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 310
score: 98.6600341796875
patch: System . out . println break ; } else
rank: 310
score: 98.63173217773438
patch: return block . is CaMeL Function ) 1 ;
rank: 310
score: 98.56462751116071
patch: return false ; return false ;
rank: 310
score: 98.54199829101563
patch: synchronized ( this ) { break ; } }
rank: 310
score: 98.39984130859375
patch: final break ; } break ;
rank: 310
score: 98.35525512695312
patch: } break ; break ;
rank: 311
score: 99.03374922902961
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) + false ;
rank: 311
score: 98.82077026367188
patch: block . get CaMeL Basic CaMeL Block ( ) . add ( ref ) ;
rank: 311
score: 98.75137329101562
patch: if ( block . is CaMeL Local ( ) ) {
rank: 311
score: 98.65955268012152
patch: break ; } } else return false ;
rank: 311
score: 98.54154459635417
patch: break ; } ; this . break ;
rank: 311
score: 98.53042166573661
patch: if ( false ; break ;
rank: 311
score: 98.3987045288086
patch: return break ; ; } break ;
rank: 311
score: 98.35467529296875
patch: break ; break ; if break ; / /
rank: 312
score: 99.03325946514423
patch: return = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 312
score: 98.82054379111842
patch: block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . log ;
rank: 312
score: 98.75025285993304
patch: return block . get CaMeL Parent ( ) . is CaMeL Function _
rank: 312
score: 98.65941510881696
patch: break ; } if ; }
rank: 312
score: 98.62914360894098
patch: break . is CaMeL Function = false ;
rank: 312
score: 98.5599853515625
patch: return false ; } else { return true ;
rank: 312
score: 98.54052734375
patch: return true ; } } ;
rank: 312
score: 98.53036934988839
patch: index = break ; break ;
rank: 312
score: 98.35436139787946
patch: break ; ; -- break ;
rank: 313
score: 99.03309326171875
patch: return block . is CaMeL Function || block . is CaMeL Function && block . is CaMeL Function ;
rank: 313
score: 98.82013260690789
patch: result = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Name ( ) ;
rank: 313
score: 98.658544921875
patch: return false ; } } else { break ;
rank: 313
score: 98.628662109375
patch: return block . is CaMeL Function ) ? false
rank: 313
score: 98.52953229631696
patch: while false ; break ; ;
rank: 313
score: 98.39768763950893
patch: result = false ; break ;
rank: 313
score: 98.35386439732143
patch: if ; { for break ;
rank: 314
score: 98.8201171875
patch: break ? block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 314
score: 98.74936147836539
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) {
rank: 314
score: 98.65825805664062
patch: return false ; } else { return ; }
rank: 314
score: 98.6253662109375
patch: return ref . is CaMeL Function = true ;
rank: 314
score: 98.55885620117188
patch: return ref . get CaMeL Parent ( ) ;
rank: 314
score: 98.52938406808036
patch: break ; } return null ;
rank: 314
score: 98.39765014648438
patch: logger . error ( $STRING$ + break ) ;
rank: 314
score: 98.35362413194444
patch: break ; break ; break ; break ;
rank: 315
score: 99.03259858630952
patch: return block . is CaMeL Function || block . is CaMeL Function || block . is CaMeL Function ) ;
rank: 315
score: 98.81989489103618
patch: q = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Type ( ) ;
rank: 315
score: 98.74805797230114
patch: curr = block . get CaMeL Parent ( ) ;
rank: 315
score: 98.6579360961914
patch: return break ; } return null ;
rank: 315
score: 98.62520751953124
patch: return ref . is CaMeL Interface ( ) ;
rank: 315
score: 98.529296875
patch: * break ; break ; }
rank: 315
score: 98.39673461914063
patch: System . err . println ( $STRING$ ; }
rank: 315
score: 98.35360281808036
patch: if ; break ; ; ;
rank: 316
score: 99.03255208333333
patch: if ( block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) { return false ;
rank: 316
score: 98.81900827508224
patch: result = block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; break ;
rank: 316
score: 98.7469482421875
patch: } if ( block . is CaMeL Function ) {
rank: 316
score: 98.65694427490234
patch: return ; } } return false ;
rank: 316
score: 98.625048828125
patch: break || block . is CaMeL Function ( )
rank: 316
score: 98.556591796875
patch: block = block . is CaMeL Function ) ;
rank: 316
score: 98.52909851074219
patch: / * break ; / break ;
rank: 316
score: 98.39561244419643
patch: if ( block != null )
rank: 316
score: 98.35340118408203
patch: if ; break ; return break ;
rank: 317
score: 99.03242043887867
patch: return block . is CaMeL Function && block . is CaMeL Function ) + true ;
rank: 317
score: 98.81886643629808
patch: block . is CaMeL Function = block . is CaMeL Function ;
rank: 317
score: 98.65691528320312
patch: throw new Illegal CaMeL Argument CaMeL Exception ; ;
rank: 317
score: 98.55513218470982
patch: throw new Exception ( $STRING$ ;
rank: 317
score: 98.53786795479911
patch: break ; } ; else {
rank: 317
score: 98.52871704101562
patch: break ; ; ; } break ;
rank: 317
score: 98.39537048339844
patch: throw new Runtime CaMeL Exception ( $STRING$
rank: 317
score: 98.35298461914063
patch: if ; break ; if ; if break ;
rank: 318
score: 99.03227306547619
patch: return block . is CaMeL Function && block . is CaMeL Function && ref . is CaMeL Function ) ;
rank: 318
score: 98.81861223493304
patch: loop = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 318
score: 98.74458451704545
patch: tmp = block . get CaMeL Parent ( ) ;
rank: 318
score: 98.65611921037946
patch: } else return false ; }
rank: 318
score: 98.62319946289062
patch: return ref . is CaMeL Sealed ( ) ;
rank: 318
score: 98.55477905273438
patch: return block . is CaMeL Function ) ; ;
rank: 318
score: 98.5372314453125
patch: break ; default : break ; ; }
rank: 318
score: 98.52852630615234
patch: break ; } break ; ; ;
rank: 318
score: 98.39436558314732
patch: return null == break ; }
rank: 318
score: 98.35296630859375
patch: if ; / / break ;
rank: 319
score: 99.0320157137784
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && block . is CaMeL Function )
rank: 319
score: 98.74455122514205
patch: return block . is CaMeL Function ; } else {
rank: 319
score: 98.65589141845703
patch: return null ; } if break ;
rank: 319
score: 98.62105102539063
patch: return block . is CaMeL Alive ( ) ;
rank: 319
score: 98.55427856445313
patch: return ( block . is CaMeL True ) ;
rank: 319
score: 98.5365219116211
patch: break ; } super . break ;
rank: 319
score: 98.5284194946289
patch: break ; if null ; break ;
rank: 319
score: 98.39420166015626
patch: break - 1 ;
rank: 319
score: 98.35289306640625
patch: do if break ;
rank: 320
score: 99.03199598524306
patch: return block . is CaMeL Function . is CaMeL Function && block . is CaMeL Function ;
rank: 320
score: 98.65582275390625
patch: try { break ; } catch break ; }
rank: 320
score: 98.55427381727431
patch: return ref . equals ( block ) ;
rank: 320
score: 98.53646511501736
patch: if ( ; else { break ; }
rank: 320
score: 98.52801513671875
patch: else { break ; } ; {
rank: 320
score: 98.39348754882812
patch: throw new Runtime CaMeL Exception ( break ; }
rank: 320
score: 98.35170288085938
patch: if ; break ; if ; = break ;
rank: 321
score: 99.0318667763158
patch: return false ; } block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 321
score: 98.81781768798828
patch: return block . is CaMeL Function ( ) ; } else { return false ;
rank: 321
score: 98.74286443536931
patch: exception = block . get CaMeL Parent ( ) ;
rank: 321
score: 98.65519409179687
patch: this . break ; } else return break ;
rank: 321
score: 98.617822265625
patch: return return block . is CaMeL Function ) ;
rank: 321
score: 98.54813058035714
patch: return { return false ; }
rank: 321
score: 98.52794647216797
patch: break ; ; * if break ;
rank: 321
score: 98.39301409040179
patch: return null != break ; }
rank: 321
score: 98.3502197265625
patch: return this ; if break ;
rank: 322
score: 99.03106398809524
patch: return block . get CaMeL Node ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 322
score: 98.81772085336539
patch: if ( block . is CaMeL Instance ) { return false ;
rank: 322
score: 98.65419006347656
patch: return false ; } return null ;
rank: 322
score: 98.54677734375
patch: return ref . is CaMeL True ( ) ;
rank: 322
score: 98.53602294921875
patch: break ; * /
rank: 322
score: 98.52789306640625
patch: else { break ; } } }
rank: 322
score: 98.35010375976563
patch: break ; break ; if ; break ; }
rank: 323
score: 98.81721496582031
patch: return block . is CaMeL Function ( ) ; } else { return true ;
rank: 323
score: 98.7411639873798
patch: t = block . get CaMeL Function CaMeL Type ( ) ;
rank: 323
score: 98.6539535522461
patch: return false ; } } else }
rank: 323
score: 98.61652967664931
patch: return block . is CaMeL Function > )
rank: 323
score: 98.54656372070312
patch: return block . get CaMeL Parent ( ) ;
rank: 323
score: 98.53582085503473
patch: break ; } } try { break ;
rank: 323
score: 98.52769470214844
patch: / * break ; if break ;
rank: 323
score: 98.39252580915179
patch: break && ! break ; }
rank: 323
score: 98.34953962053571
patch: if ; logger ; break ;
rank: 324
score: 99.03090598366477
patch: return block . is CaMeL Function && block . is CaMeL Function && block . is CaMeL Empty ( ) ;
rank: 324
score: 98.81715152138158
patch: try { block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 324
score: 98.74072265625
patch: table . if ( block . is CaMeL Function )
rank: 324
score: 98.65346950954861
patch: return false ; } finally { break ;
rank: 324
score: 98.61624145507812
patch: return block . is CaMeL Active ( ) ;
rank: 324
score: 98.53519439697266
patch: break ; } } * break ;
rank: 324
score: 98.52678680419922
patch: finally { break ; return null ;
rank: 324
score: 98.39118957519531
patch: break ; } } return success ;
rank: 324
score: 98.34865025111607
patch: break ; if break ; /
rank: 325
score: 98.81711832682292
patch: result = block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; }
rank: 325
score: 98.739013671875
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) . ;
rank: 325
score: 98.65330505371094
patch: return false ; } * * /
rank: 325
score: 98.61427001953125
patch: break && block . is CaMeL Function ( )
rank: 325
score: 98.53499603271484
patch: break ; / * break ; }
rank: 325
score: 98.52656773158482
patch: while ( false ; break ;
rank: 325
score: 98.39113071986607
patch: if ( target == null )
rank: 325
score: 98.34847005208333
patch: return if ; break ;
rank: 326
score: 99.03055245535714
patch: return block . get CaMeL Type ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 326
score: 98.81678771972656
patch: this . block = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 326
score: 98.73870849609375
patch: res = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 326
score: 98.6531494140625
patch: return null ; } break ; } break ;
rank: 326
score: 98.53452845982143
patch: return false ; continue ; }
rank: 326
score: 98.52500610351562
patch: break { break ;
rank: 326
score: 98.34761047363281
patch: if null ; break ; break ;
rank: 327
score: 99.03054942255434
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Basic CaMeL Block ( ) ) . }
rank: 327
score: 98.81653550091912
patch: block = block . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 327
score: 98.6525146484375
patch: return false ; break ; } return false ;
rank: 327
score: 98.61082153320312
patch: break block . is CaMeL Function ( ) ;
rank: 327
score: 98.52461242675781
patch: else { break ; } * *
rank: 327
score: 98.39005279541016
patch: finished = false ; break ; }
rank: 327
score: 98.3466796875
patch: break ; ; if break ; if ; break ;
rank: 328
score: 98.81638470818015
patch: return ref . is CaMeL Function ) && block . is CaMeL Function ( ) ;
rank: 328
score: 98.73801967075893
patch: break ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 328
score: 98.6524658203125
patch: break ; } else return false ; }
rank: 328
score: 98.6091796875
patch: return ref . is CaMeL Function = false ;
rank: 328
score: 98.53302001953125
patch: break ; } } ; return true ;
rank: 328
score: 98.53231811523438
patch: result = ref . is CaMeL Function ) ;
rank: 328
score: 98.52313232421875
patch: / * break ; } break ;
rank: 328
score: 98.34630669487848
patch: if ; { break ; if break ;
rank: 329
score: 98.81594366776316
patch: block = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Value ( ) ;
rank: 329
score: 98.65184936523437
patch: this . break ; } else return false ;
rank: 329
score: 98.60536499023438
patch: return block . is CaMeL False ( ) ;
rank: 329
score: 98.53240966796875
patch: return ; } if ( ;
rank: 329
score: 98.52973768446181
patch: return ref . equals ( false ) ;
rank: 329
score: 98.5228271484375
patch: else { return null ; }
rank: 329
score: 98.38812255859375
patch: break . get CaMeL Function CaMeL Name ( ;
rank: 329
score: 98.34629313151042
patch: break ; if ; {
rank: 330
score: 99.02965777853261
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function || ref . is CaMeL Function ) ;
rank: 330
score: 98.81541683799342
patch: if ( block . is CaMeL Function || block . is CaMeL Function ) { return false ;
rank: 330
score: 98.65174211774554
patch: return ; ; ; } }
rank: 330
score: 98.60147094726562
patch: return block . is CaMeL Declared ( ) ;
rank: 330
score: 98.53212890625
patch: break ; System . out . println ( ;
rank: 330
score: 98.52273995535714
patch: callback . break break break ;
rank: 330
score: 98.38789198133681
patch: break ; } if ( target . ;
rank: 330
score: 98.34532165527344
patch: break ; if break ; if ;
rank: 331
score: 99.029052734375
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block . get CaMeL Basic CaMeL Block ( ) ) ; }
rank: 331
score: 98.81509219898896
patch: result = block . is CaMeL Function ( ) . is CaMeL Function ( ) ;
rank: 331
score: 98.65168108258929
patch: return break ; } * /
rank: 331
score: 98.60005696614583
patch: return block . is CaMeL Function block ;
rank: 331
score: 98.53102620442708
patch: found = true ; break ; } }
rank: 331
score: 98.52655707465277
patch: return is CaMeL Function ( ref ) ;
rank: 331
score: 98.52261691623264
patch: case break ; break ; if break ;
rank: 331
score: 98.38756561279297
patch: state = break ; break ; }
rank: 331
score: 98.34527587890625
patch: break ; ; if ;
rank: 332
score: 99.0288973721591
patch: ref = ! block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) ;
rank: 332
score: 98.7361572265625
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ; }
rank: 332
score: 98.6515604654948
patch: } else if break ;
rank: 332
score: 98.59970703125
patch: return block . is CaMeL Assigned CaMeL Once CaMeL
rank: 332
score: 98.53021918402777
patch: return true ; } } this . ;
rank: 332
score: 98.5225830078125
patch: catch true ; break ; }
rank: 332
score: 98.38628278459821
patch: success = true ; break ;
rank: 332
score: 98.34466552734375
patch: if break ; break ; / if break ;
rank: 333
score: 99.02863875679348
patch: return block . get CaMeL Basic CaMeL Block ( ) . equals ( block . get CaMeL Parent ( ) ) ;
rank: 333
score: 98.81470743815105
patch: if ( block . is CaMeL Namespace ) { break ;
rank: 333
score: 98.7360595703125
patch: if ( block . is CaMeL Statement ) {
rank: 333
score: 98.651171875
patch: return false ; } } else return true ;
rank: 333
score: 98.59768337673611
patch: return ( block . is CaMeL Function )
rank: 333
score: 98.52941216362848
patch: break ; } } * / break ;
rank: 333
score: 98.52542114257812
patch: return ( block . is CaMeL Interface ) ;
rank: 333
score: 98.52222442626953
patch: else { break ; } } *
rank: 333
score: 98.34432547433036
patch: if ; / ; break ;
rank: 334
score: 99.02861192491319
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ; }
rank: 334
score: 98.81389508928571
patch: if ( block . is CaMeL Empty ( ) ) { break ;
rank: 334
score: 98.73556753305289
patch: switch ( block . is CaMeL Function ) { } else {
rank: 334
score: 98.65075073242187
patch: return null ; break ; } break ; }
rank: 334
score: 98.59766235351563
patch: return block . is CaMeL Undefined ( ) ;
rank: 334
score: 98.52919311523438
patch: break ; } ; else { break ; }
rank: 334
score: 98.5216064453125
patch: while break ; break ; }
rank: 334
score: 98.34414236886161
patch: if ; break ; return ;
rank: 335
score: 99.02840169270833
patch: return block . get CaMeL Instance ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 335
score: 98.81305895353618
patch: result = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Type ( ) ;
rank: 335
score: 98.7355224609375
patch: prev = block . get CaMeL Basic CaMeL Block ( ) ; if (
rank: 335
score: 98.65072631835938
patch: return break ; } finally { }
rank: 335
score: 98.59746704101562
patch: result = block . is CaMeL Function ( )
rank: 335
score: 98.52115207248264
patch: return 0 ; break ; if break ;
rank: 335
score: 98.38401576450893
patch: init ( break ) ; }
rank: 335
score: 98.3438387784091
patch: break ; break ; if break ; if break ;
rank: 336
score: 99.02786690848214
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . is CaMeL Function
rank: 336
score: 98.65039825439453
patch: return null ; } else { }
rank: 336
score: 98.59741889105902
patch: block . is CaMeL Function = true ;
rank: 336
score: 98.52867974175348
patch: break ; } ; / * break ;
rank: 336
score: 98.52105712890625
patch: return false ; try { break ;
rank: 336
score: 98.3438232421875
patch: if break ; break ; ; = break ;
rank: 337
score: 99.02784365699405
patch: is CaMeL Function = ( block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 337
score: 98.73505859375
patch: if ( block . is CaMeL New ) {
rank: 337
score: 98.64947509765625
patch: return break ; } } else break ;
rank: 337
score: 98.59678344726562
patch: return block . is CaMeL Private ( ) ;
rank: 337
score: 98.52095794677734
patch: else { this . break ; }
rank: 337
score: 98.51962619357639
patch: return false ; } else return true ;
rank: 337
score: 98.38316127232143
patch: if ; return true ; }
rank: 337
score: 98.34315999348958
patch: break ; break ; /
rank: 338
score: 99.027783203125
patch: is CaMeL Function = ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 338
score: 98.8118387858073
patch: ref . is CaMeL Function ( ) ; return false ;
rank: 338
score: 98.734130859375
patch: if ( block . ! block . is CaMeL Function ) {
rank: 338
score: 98.64946831597223
patch: return break ; } } if false ;
rank: 338
score: 98.59628295898438
patch: return block . is CaMeL Function > ) ;
rank: 338
score: 98.51902940538194
patch: else { break ; } if false ;
rank: 338
score: 98.38273620605469
patch: this . break = block ; }
rank: 338
score: 98.34288787841797
patch: return count ; println ; break ;
rank: 339
score: 99.02765969669117
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) + false ;
rank: 339
score: 98.81158768503289
patch: loop = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ;
rank: 339
score: 98.73271484375
patch: result = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 339
score: 98.64935302734375
patch: return ; } break ; }
rank: 339
score: 98.59443969726563
patch: return ref . is CaMeL Function $NUMBER$ ) ;
rank: 339
score: 98.5272216796875
patch: break ; } } ; break ;
rank: 339
score: 98.51827566964286
patch: i false ; break ; }
rank: 339
score: 98.51535034179688
patch: return ;
rank: 340
score: 98.73141276041666
patch: res = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ;
rank: 340
score: 98.64842393663194
patch: return break ; break ; } break ;
rank: 340
score: 98.59076538085938
patch: return block . contains CaMeL Function ( ) ;
rank: 340
score: 98.52704620361328
patch: found = false ; break ; }
rank: 340
score: 98.51764526367188
patch: index = break ;
rank: 340
score: 98.38138580322266
patch: ret = break ; break ; }
rank: 340
score: 98.34189860026042
patch: if ; break ; / if break ;
rank: 341
score: 99.02726944633152
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Reference ( ) . is CaMeL Function ) ;
rank: 341
score: 98.64773559570312
patch: return true ; } else if ;
rank: 341
score: 98.58936157226563
patch: return ref . is CaMeL Function ) false ;
rank: 341
score: 98.52694702148438
patch: break ; } break ; } ;
rank: 341
score: 98.51725006103516
patch: finally { super . break ; ;
rank: 341
score: 98.50888497488839
patch: return ) ; } else {
rank: 341
score: 98.38111877441406
patch: completed = false ; break ; }
rank: 341
score: 98.34086608886719
patch: if ; ? break ; break ;
rank: 342
score: 99.02692522321429
patch: return block . get CaMeL Reference ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 342
score: 98.64754231770833
patch: return false ; } } break ; }
rank: 342
score: 98.52606879340277
patch: switch ; case Basic CaMeL Block . ;
rank: 342
score: 98.51654924665179
patch: break ; break ; } *
rank: 342
score: 98.5031229654948
patch: return Boolean . true ;
rank: 342
score: 98.34065246582031
patch: if ; break ; = break ;
rank: 343
score: 99.02692522321429
patch: return ref . is CaMeL Function || block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 343
score: 98.81083409926471
patch: block . get CaMeL Parent ( ) . is CaMeL Function ( ) ; break ;
rank: 343
score: 98.72869403545673
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment = false ;
rank: 343
score: 98.64631483289931
patch: throw new Runtime CaMeL Exception break ; }
rank: 343
score: 98.5866943359375
patch: return ) . is CaMeL Function ( ) ;
rank: 343
score: 98.52392578125
patch: break ; } } finally { break ; }
rank: 343
score: 98.51644461495536
patch: break break ; if break ;
rank: 343
score: 98.38080705915179
patch: break true ; } break ;
rank: 343
score: 98.34064483642578
patch: if ; = break ; ; /
rank: 344
score: 98.72848074776786
patch: result = ref . get CaMeL Basic CaMeL Block ( ) ; }
rank: 344
score: 98.64580620659723
patch: break ; } } break ; break ;
rank: 344
score: 98.5835205078125
patch: return block . is CaMeL Function * true ;
rank: 344
score: 98.5232421875
patch: throw new Illegal CaMeL Access CaMeL Exception ( ;
rank: 344
score: 98.51577322823661
patch: if false ; break ; }
rank: 344
score: 98.49754842122395
patch: return Boolean . false ;
rank: 344
score: 98.3798828125
patch: throw new Runtime CaMeL Exception ( $STRING$ +
rank: 344
score: 98.34059651692708
patch: break ; ; if ; void break ;
rank: 345
score: 99.02672119140625
patch: return block . is CaMeL Function && block . is CaMeL Function || block . is CaMeL Function ;
rank: 345
score: 98.81048583984375
patch: if ( block . is CaMeL Function CaMeL Type ( ) ) { break ;
rank: 345
score: 98.72758265904018
patch: Reference ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 345
score: 98.6447998046875
patch: break ; } finally { break ; } }
rank: 345
score: 98.58162231445313
patch: return block . is CaMeL Normalized ( ) ;
rank: 345
score: 98.52227172851562
patch: break ; } if ( block == null ;
rank: 345
score: 98.51537214006696
patch: value = false ; break ;
rank: 345
score: 98.49739292689732
patch: return false ; } ) ;
rank: 345
score: 98.34026544744319
patch: if ; break ; break ; if ; break ;
rank: 346
score: 99.02631170099431
patch: return ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 346
score: 98.8102294921875
patch: return is CaMeL Function ( block . get CaMeL Class ( ) ) ;
rank: 346
score: 98.72756125710227
patch: item = block . get CaMeL Parent ( ) ;
rank: 346
score: 98.64476318359375
patch: return break ; } } } return false ;
rank: 346
score: 98.5810546875
patch: return block . equals ( false ) ;
rank: 346
score: 98.52061767578125
patch: break ; } if ( block . contains ;
rank: 346
score: 98.51518903459821
patch: while ( true ; break ;
rank: 346
score: 98.49708387586806
patch: break . is CaMeL Function ( ) ;
rank: 346
score: 98.34017605251736
patch: break ; break ; / if break ;
rank: 347
score: 99.02494542738971
patch: is CaMeL Function = block . is CaMeL Function && block . is CaMeL Function ;
rank: 347
score: 98.80933335248162
patch: for ( Basic CaMeL Block block = block . get CaMeL Basic CaMeL Block ( )
rank: 347
score: 98.7262451171875
patch: return block . is CaMeL Function || block . is CaMeL Local ) ;
rank: 347
score: 98.64354858398437
patch: throw new Runtime CaMeL Exception break ; } }
rank: 347
score: 98.58089599609374
patch: return block . is CaMeL Primitive ( ) ;
rank: 347
score: 98.52060953776042
patch: break ; } ; else { break ;
rank: 347
score: 98.51487223307292
patch: break ; case break ;
rank: 347
score: 98.49468994140625
patch: return return true ;
rank: 347
score: 98.37834337022569
patch: break ; default : return true ; }
rank: 347
score: 98.33981323242188
patch: break ; ; = break ; }
rank: 348
score: 99.02491590711806
patch: return ref . is CaMeL Function && block . get CaMeL Parent ( ) != null ;
rank: 348
score: 98.51392279730902
patch: catch null ; break ; if break ;
rank: 348
score: 98.48665364583333
patch: else { return true ;
rank: 348
score: 98.37693568638393
patch: changed = true ; break ;
rank: 348
score: 98.339697265625
patch: return * break ; break ; if break ;
rank: 349
score: 99.02480899586396
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) - 1 ;
rank: 349
score: 98.80868326822916
patch: return is CaMeL Function ( block . is CaMeL Function ( ) ) ;
rank: 349
score: 98.72563032670455
patch: switch ( block . is CaMeL Function ) { }
rank: 349
score: 98.6424331665039
patch: return null ; } return true ;
rank: 349
score: 98.5170654296875
patch: break ; case Basic CaMeL Block . NULL :
rank: 349
score: 98.48344203404018
patch: else { return true ; }
rank: 349
score: 98.33928888494319
patch: if ; break ; break ; } if break ;
rank: 350
score: 98.80865157277961
patch: result = ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Name ( ) ;
rank: 350
score: 98.72542317708333
patch: return ( block . is CaMeL Function ) ; } else
rank: 350
score: 98.64197998046875
patch: return break ; } } if break ; }
rank: 350
score: 98.57875569661458
patch: return block . is CaMeL Function ) )
rank: 350
score: 98.51643880208333
patch: if ( block . ; else break ;
rank: 350
score: 98.51351928710938
patch: logger . parse ( break ) ;
rank: 350
score: 98.48167724609375
patch: return ) ; }
rank: 350
score: 98.37437608506944
patch: break ; } if ( break ) {
rank: 350
score: 98.33921305338542
patch: break ; break ; if break ; /
rank: 351
score: 98.80856759207589
patch: return get CaMeL Class ( ) . is CaMeL Function ( ) ;
rank: 351
score: 98.72467651367188
patch: found = block . is CaMeL Function ) ;
rank: 351
score: 98.64166937934027
patch: return ; ; } else if break ;
rank: 351
score: 98.57590942382812
patch: return block . is CaMeL Function 1 ++ ;
rank: 351
score: 98.51559884207589
patch: break ; count ++ ; }
rank: 351
score: 98.513427734375
patch: break ; ; * / break ;
rank: 351
score: 98.48064507378473
patch: return ( ! is CaMeL Function ) ;
rank: 351
score: 98.3390780362216
patch: return * break ; / if break ; break ;
rank: 352
score: 98.80856662326389
patch: return ref . is CaMeL Function ( ) || block . is CaMeL Function ( ) ;
rank: 352
score: 98.72394205729167
patch: super . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ref .
rank: 352
score: 98.64143202039931
patch: try { break ; } catch break ;
rank: 352
score: 98.57559814453126
patch: return block . is CaMeL Function $NUMBER$ ( )
rank: 352
score: 98.5130615234375
patch: break ; } else { break ; ;
rank: 352
score: 98.47875298394098
patch: return block . equals ( block ) ;
rank: 353
score: 99.02400346235795
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Node ( ) . is CaMeL Function ;
rank: 353
score: 98.8084716796875
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ( ) ; }
rank: 353
score: 98.64102935791016
patch: return false ; } } true ;
rank: 353
score: 98.51443045479911
patch: break ; } if ; ;
rank: 353
score: 98.5127182006836
patch: break ; for null ; break ;
rank: 353
score: 98.47850206163194
patch: return ref . equals ( true ) ;
rank: 353
score: 98.3712158203125
patch: target = break ; }
rank: 354
score: 99.02395968967014
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function != null ;
rank: 354
score: 98.80836838942308
patch: if ( block . is CaMeL Interface ) { return false ;
rank: 354
score: 98.72123209635417
patch: continue ;
rank: 354
score: 98.640966796875
patch: return false ; } else return break ; }
rank: 354
score: 98.57509155273438
patch: return block . is CaMeL Enum ( ) ;
rank: 354
score: 98.51168823242188
patch: break ; break ; return null ;
rank: 354
score: 98.47748480902777
patch: return Boolean . true ; } else {
rank: 354
score: 98.37052917480469
patch: notify CaMeL All ( break ) ;
rank: 354
score: 98.33722478693181
patch: if break ; break ; if ; ; break ;
rank: 355
score: 99.02393740699405
patch: return ref . is CaMeL Function && ref . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 355
score: 98.80795467601104
patch: return block . is CaMeL Function ) : block . is CaMeL Function ( ) ;
rank: 355
score: 98.7210223858173
patch: t = block . get CaMeL Function CaMeL Name ( ) ;
rank: 355
score: 98.51422729492188
patch: return ; } else { return true ; }
rank: 355
score: 98.51130022321429
patch: break ; } break ; *
rank: 355
score: 98.33706325954861
patch: break ; ; if ; break ; /
rank: 356
score: 99.02356487771739
patch: return block . get CaMeL Parent ( ) . get CaMeL Function CaMeL Type ( ) . is CaMeL Function ) ;
rank: 356
score: 98.7208964029948
patch: continue ; } else {
rank: 356
score: 98.63970947265625
patch: } if break ; break ; }
rank: 356
score: 98.5717529296875
patch: return false . is CaMeL Function ( ) ;
rank: 356
score: 98.51402587890625
patch: switch ( ref . get CaMeL Type ( ;
rank: 356
score: 98.51085662841797
patch: finally { break ; for break ;
rank: 356
score: 98.47352600097656
patch: for ( Basic CaMeL Block block =
rank: 356
score: 98.3702392578125
patch: break finally { break ; }
rank: 356
score: 98.3369140625
patch: return / * break ; break ;
rank: 357
score: 99.02347819010417
patch: return block . is CaMeL Function && block . get CaMeL Basic CaMeL Block ( ) ;
rank: 357
score: 98.80771108774039
patch: if ( block . is CaMeL Empty ) { return false ;
rank: 357
score: 98.72067495492789
patch: expr = block . get CaMeL Function CaMeL Name ( ) ;
rank: 357
score: 98.63821847098214
patch: return true ; } catch ;
rank: 357
score: 98.57128295898437
patch: return block . is CaMeL Function 1 ( )
rank: 357
score: 98.51363118489583
patch: break ; ; ; }
rank: 357
score: 98.51082356770833
patch: while false ; break ; if break ;
rank: 357
score: 98.47134399414062
patch: return null ;
rank: 357
score: 98.37001546223958
patch: break . get CaMeL Target ( ) ;
rank: 357
score: 98.33642578125
patch: if n == break ; break ;
rank: 358
score: 99.02330961681548
patch: return block . is CaMeL Function && block . get CaMeL Instance ( ) . is CaMeL Function ) ;
rank: 358
score: 98.80756225585938
patch: return ( block . is CaMeL Declaration ) ;
rank: 358
score: 98.72047642299107
patch: Member ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 358
score: 98.63813781738281
patch: return false ; } } finally ;
rank: 358
score: 98.56832546657986
patch: break . is CaMeL Function = true ;
rank: 358
score: 98.51047770182292
patch: / * ] break ; if break ;
rank: 358
score: 98.36928304036458
patch: report CaMeL Error ( $STRING$ , null ;
rank: 359
score: 99.022705078125
patch: return ( block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) . is CaMeL Function ;
rank: 359
score: 98.72031075613839
patch: { ref = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 359
score: 98.63762664794922
patch: break ; } catch break ; }
rank: 359
score: 98.56727905273438
patch: return block . is CaMeL Function * false ;
rank: 359
score: 98.51135864257813
patch: switch ( ; case Basic CaMeL Block . ;
rank: 359
score: 98.50959995814732
patch: / break ; break ; }
rank: 359
score: 98.3678690592448
patch: break false ; } }
rank: 359
score: 98.33559744698661
patch: if break ; while break ;
rank: 360
score: 98.80692545572917
patch: return block . is CaMeL Function ( ) ; } else { break ;
rank: 360
score: 98.72015380859375
patch: | ( block . is CaMeL Function ) ;
rank: 360
score: 98.63746337890625
patch: return false ; } this . break ; }
rank: 360
score: 98.56661987304688
patch: break . is CaMeL Function 1 ( ) ;
rank: 360
score: 98.51092529296875
patch: break ; } } ) ;
rank: 360
score: 98.50916399274554
patch: this . break ; break ;
rank: 360
score: 98.47005789620536
patch: return false ; return true ;
rank: 360
score: 98.3353271484375
patch: if ; throw break ;
rank: 361
score: 99.02227492559524
patch: return block . get CaMeL Root ( ) . is CaMeL Function && block . is CaMeL Function ) ;
rank: 361
score: 98.80668809678819
patch: return ( block . get CaMeL Function CaMeL Name ( ) . is CaMeL Function ) ;
rank: 361
score: 98.718505859375
patch: return ( block . is CaMeL Function ) . is CaMeL Function ) ;
rank: 361
score: 98.56378784179688
patch: logger . error ( ) ; return false ;
rank: 361
score: 98.510400390625
patch: break ; default :
rank: 361
score: 98.50916205512152
patch: } else { break ; if break ;
rank: 361
score: 98.4677734375
patch: return ( false ) ;
rank: 361
score: 98.36699761284723
patch: break false ; } } return true ;
rank: 361
score: 98.33486106178977
patch: if ; break ; / if break ; break ;
rank: 362
score: 99.02195142663044
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Root ( ) . is CaMeL Function ) ;
rank: 362
score: 98.63671875
patch: return null ; } finally ;
rank: 362
score: 98.5102783203125
patch: break ; } ref = block . get ;
rank: 362
score: 98.5091552734375
patch: break ; try ; break ;
rank: 362
score: 98.36674669053819
patch: break ; } if ( success ) {
rank: 363
score: 98.80645345052083
patch: if ( block . is CaMeL Empty ( ) ) { return false ;
rank: 363
score: 98.7175801595052
patch: result = block . is CaMeL Function ) ; break ;
rank: 363
score: 98.6354248046875
patch: return true ; } } else return false ;
rank: 363
score: 98.50888061523438
patch: break ; ; } return false ;
rank: 363
score: 98.4663594563802
patch: return block != null ;
rank: 363
score: 98.36512102399554
patch: break ; return true ; }
rank: 363
score: 98.33409288194444
patch: if ; = break ; break ; }
rank: 364
score: 99.02118278952206
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) - 0 ;
rank: 364
score: 98.7163818359375
patch: tmp = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 364
score: 98.55869140625
patch: break . is CaMeL Function $NUMBER$ ( ) ;
rank: 364
score: 98.50897216796875
patch: return true ; } this . ;
rank: 364
score: 98.50874837239583
patch: break ; this . break ; break ;
rank: 364
score: 98.45344373914931
patch: return this . is CaMeL Function ) ;
rank: 364
score: 98.36492919921875
patch: body = break ; }
rank: 364
score: 98.33390977647569
patch: break ; if ; = break ; }
rank: 365
score: 99.0205310639881
patch: return block . is CaMeL Function && block . get CaMeL Next ( ) . is CaMeL Function ) ;
rank: 365
score: 98.80621696920956
patch: this . block = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 365
score: 98.63381958007812
patch: return ; ; } break ; break ; }
rank: 365
score: 98.55726928710938
patch: return block . is CaMeL Function 1 1 ;
rank: 365
score: 98.50894165039062
patch: return true ; } else break ;
rank: 365
score: 98.50863211495536
patch: finally { break ; ; }
rank: 365
score: 98.45278494698661
patch: return Boolean . false ; }
rank: 365
score: 98.33384195963542
patch: if ; if ; break ; break ;
rank: 366
score: 99.02030613111413
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ) + false ;
rank: 366
score: 98.80606282552084
patch: if ( block . is CaMeL Function ) { block . is CaMeL Function
rank: 366
score: 98.71593627929687
patch: if ( block . is CaMeL Return ) {
rank: 366
score: 98.63319905598958
patch: return break ; } } else return ;
rank: 366
score: 98.55604858398438
patch: return block . is CaMeL Whitespace ( ) ;
rank: 366
score: 98.50852748325893
patch: return ; } return false ;
rank: 366
score: 98.44972059461806
patch: return Boolean . false ; } else {
rank: 366
score: 98.33348499644886
patch: if ; break ; if break ; break ; }
rank: 367
score: 99.0201416015625
patch: return block . get CaMeL Parent ( ) . is CaMeL Function = block . get CaMeL Parent ( ) ;
rank: 367
score: 98.80602264404297
patch: Block block = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 367
score: 98.55382080078125
patch: return block . is CaMeL Function : false ;
rank: 367
score: 98.50823974609375
patch: this . ; return false ; } ;
rank: 367
score: 98.50821261935764
patch: else { break ; this . break ;
rank: 367
score: 98.44950358072917
patch: return { return true ;
rank: 367
score: 98.36049979073661
patch: return true ; } if ;
rank: 367
score: 98.33345540364583
patch: break ; break ; else if break ;
rank: 368
score: 99.02001953125
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && block . is CaMeL Function
rank: 368
score: 98.8056704872533
patch: ref = block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Value ( ) ;
rank: 368
score: 98.71529947916666
patch: if ( block . is CaMeL Function ) { break ; } else {
rank: 368
score: 98.63274536132812
patch: return false ; break ; } if break ;
rank: 368
score: 98.55374755859376
patch: return block . is CaMeL Function $NUMBER$ $NUMBER$ ;
rank: 368
score: 98.50782606336806
patch: this . ; return false ; } }
rank: 368
score: 98.50755310058594
patch: return false ; while break ; ;
rank: 368
score: 98.3594741821289
patch: changed = false ; break ; }
rank: 368
score: 98.33341979980469
patch: return next ; println ; break ;
rank: 369
score: 99.01987130301339
patch: block . is CaMeL Function = ! block . is CaMeL Function ;
rank: 369
score: 98.71487087673611
patch: result = block . is CaMeL Function ;
rank: 369
score: 98.63267008463542
patch: return false ; } } return null ;
rank: 369
score: 98.5525894165039
patch: return ( is CaMeL Function ) ;
rank: 369
score: 98.50748697916667
patch: catch ( ; break ;
rank: 369
score: 98.50719342912946
patch: if ( ; continue ; }
rank: 369
score: 98.44854058159723
patch: block . is CaMeL Empty ( ) ;
rank: 369
score: 98.35816301618304
patch: match = false ; break ;
rank: 370
score: 99.01984514508929
patch: return block . get CaMeL Parent ( ) . get CaMeL Method ( ) . is CaMeL Function ) ;
rank: 370
score: 98.71484375
patch: arraycopy ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 370
score: 98.63262939453125
patch: return false ; } for break ;
rank: 370
score: 98.55254516601562
patch: return ref . is CaMeL Function 1 ) ;
rank: 370
score: 98.50712076822917
patch: break ; ; break ; if break ;
rank: 370
score: 98.44771902901786
patch: return Boolean . true ; }
rank: 370
score: 98.35799831814236
patch: break ; } } return ! break ;
rank: 370
score: 98.3328628540039
patch: for ; break ; if break ;
rank: 371
score: 98.8041748046875
patch: break ( Basic CaMeL Block ) block . get CaMeL Parent ( ) ;
rank: 371
score: 98.71427408854167
patch: return block . is CaMeL Function ) . is CaMeL Function ( ) ;
rank: 371
score: 98.63224792480469
patch: return null ; } } return ;
rank: 371
score: 98.5515869140625
patch: return block . is CaMeL Function ) ? true
rank: 371
score: 98.50701904296875
patch: break ; } if break ; ;
rank: 371
score: 98.50643310546874
patch: throw new Internal CaMeL Error ( $STRING$ + ;
rank: 371
score: 98.35730743408203
patch: result = block . ; break ;
rank: 371
score: 98.33228556315105
patch: break ; break ; try
rank: 372
score: 99.01852284307066
patch: return ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function
rank: 372
score: 98.80390276227679
patch: loop = ref . get CaMeL Basic CaMeL Block ( ) ; }
rank: 372
score: 98.71421712239584
patch: body = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 372
score: 98.63198416573661
patch: break ; } catch ; }
rank: 372
score: 98.50692313058036
patch: return true ; while break ;
rank: 372
score: 98.50583321707589
patch: found ; return false ; }
rank: 372
score: 98.35709054129464
patch: return block != null ; }
rank: 372
score: 98.33172607421875
patch: break ; ; if ; break ; break ;
rank: 373
score: 99.01792214133523
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ( ) ;
rank: 373
score: 98.71384006076389
patch: -- block . is CaMeL Function ) {
rank: 373
score: 98.63134765625
patch: break ; } finally { }
rank: 373
score: 98.5494384765625
patch: return block . is CaMeL Function return false ;
rank: 373
score: 98.50662667410714
patch: break ; ; return null ;
rank: 373
score: 98.50411376953124
patch: throw new Assertion CaMeL Error ( $STRING$ + ;
rank: 373
score: 98.43783908420139
patch: throw new Security CaMeL Exception ( ) ;
rank: 373
score: 98.33164672851562
patch: break ; if break ; / / break ;
rank: 374
score: 99.01730213994566
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function && ref . is CaMeL Function ) ;
rank: 374
score: 98.80303485576923
patch: return if ( block . is CaMeL Function ) { break ;
rank: 374
score: 98.71329956054687
patch: return ( block . is CaMeL Function ) _
rank: 374
score: 98.50662570529514
patch: / * break break ; if break ;
rank: 374
score: 98.4373779296875
patch: return Basic CaMeL Block . false ; }
rank: 374
score: 98.33147515190973
patch: } if break ; break ; break ;
rank: 375
score: 99.01670927159927
patch: return block . is CaMeL Function && ! ( block . is CaMeL Function ) ;
rank: 375
score: 98.71223588423295
patch: if ( ! ref . is CaMeL Function ) {
rank: 375
score: 98.62980433872768
patch: return break ; } else ;
rank: 375
score: 98.5471435546875
patch: return block . is CaMeL Function ( ) *
rank: 375
score: 98.50653076171875
patch: break ; } catch false ;
rank: 375
score: 98.50052897135417
patch: return true ; * /
rank: 375
score: 98.35520629882812
patch: if break ; }
rank: 375
score: 98.3309555053711
patch: if ; break ; if ; ;
rank: 376
score: 99.01664225260417
patch: block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ;
rank: 376
score: 98.80201009114583
patch: if ( ! block . is CaMeL Function ( ) ) { break ;
rank: 376
score: 98.71210186298077
patch: type = block . get CaMeL Function CaMeL Type ( ) ;
rank: 376
score: 98.54484049479167
patch: ! ( block . is CaMeL Function )
rank: 376
score: 98.50640869140625
patch: for false ; break ;
rank: 376
score: 98.49981689453125
patch: break ; default : throw ;
rank: 376
score: 98.3550033569336
patch: break ; case Boolean . TRUE :
rank: 376
score: 98.3307113647461
patch: return this ;
rank: 377
score: 99.01637865149456
patch: return block . is CaMeL Function && block . equals ( block . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 377
score: 98.80181884765625
patch: if ( block . is CaMeL True ) { break ;
rank: 377
score: 98.7106201171875
patch: return block . is CaMeL Function && block . is CaMeL Statement ) ;
rank: 377
score: 98.62934221540179
patch: return ; } } break ;
rank: 377
score: 98.50640869140625
patch: synchronized break ; break ; if break ;
rank: 377
score: 98.49924142020089
patch: if ( break ; } }
rank: 377
score: 98.43264770507812
patch: return is CaMeL Function ( ) ;
rank: 377
score: 98.35494656032986
patch: return false ; } else if ( ;
rank: 377
score: 98.33040618896484
patch: if ; = * / break ;
rank: 378
score: 99.01588270399306
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function { break ;
rank: 378
score: 98.71049360795455
patch: switch ( ! block . is CaMeL Function ) {
rank: 378
score: 98.6288070678711
patch: return false ; } } * /
rank: 378
score: 98.54065619574652
patch: return block . is CaMeL Function true ;
rank: 378
score: 98.50629425048828
patch: break ; break ; case break ;
rank: 378
score: 98.49913940429687
patch: if ( ! Boolean . TRUE . ; }
rank: 378
score: 98.43174913194444
patch: return ref . equals ( $STRING$ ) ;
rank: 378
score: 98.3302001953125
patch: return out ; println ; break ;
rank: 379
score: 99.0156719501202
patch: block . get CaMeL Parent ( ) . { return false ;
rank: 379
score: 98.80026681082589
patch: is CaMeL Function = ! block . is CaMeL Function ( ) ;
rank: 379
score: 98.71048990885417
patch: -- block . get CaMeL Parent ( ) . is CaMeL Function ) {
rank: 379
score: 98.62874145507813
patch: return false ; } } this . break ;
rank: 379
score: 98.54052734375
patch: return ! block . is CaMeL Function )
rank: 379
score: 98.5062255859375
patch: else { while break ; }
rank: 379
score: 98.43089294433594
patch: throw null ;
rank: 379
score: 98.330029296875
patch: break ; if break ; break ; break ;
rank: 380
score: 99.01506241508152
patch: return block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Next ( ) . is CaMeL Function ) ;
rank: 380
score: 98.79997253417969
patch: block = ( Basic CaMeL Block ) ref . get CaMeL Parent ( ) ;
rank: 380
score: 98.71046665736607
patch: switch ( block . get CaMeL Function CaMeL Name ( ) ) {
rank: 380
score: 98.62833404541016
patch: return false ; while break ; }
rank: 380
score: 98.50609588623047
patch: else { break ; } / ;
rank: 380
score: 98.4294921875
patch: result = false ;
rank: 380
score: 98.35260009765625
patch: result = true ; }
rank: 380
score: 98.32999674479167
patch: break ; break ; } return break ;
rank: 381
score: 99.01476520040761
patch: block . is CaMeL Function = ! block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 381
score: 98.79977651742789
patch: return ! block . is CaMeL Function ) { return false ;
rank: 381
score: 98.70987955729167
patch: result = block . is CaMeL Function ) . is CaMeL Function ) ;
rank: 381
score: 98.62784152560764
patch: return ; ; } else return false ;
rank: 381
score: 98.53551025390625
patch: break ( block . is CaMeL Function ) ;
rank: 381
score: 98.4963607788086
patch: return ; } / * break ;
rank: 381
score: 98.42915852864583
patch: return ref . equals ( ref ) ;
rank: 381
score: 98.35136413574219
patch: return ! break ; } break ;
rank: 381
score: 98.32974679129464
patch: break ; ; ; if ;
rank: 382
score: 99.014306640625
patch: return block . is CaMeL Function ) || block . is CaMeL Function ;
rank: 382
score: 98.70927211216518
patch: return block . is CaMeL Function || block . is CaMeL Function _
rank: 382
score: 98.62752532958984
patch: return true ; } } else ;
rank: 382
score: 98.534423828125
patch: return block . is CaMeL Function )
rank: 382
score: 98.50517926897321
patch: / * * break ; /
rank: 382
score: 98.49630126953124
patch: break ; } if ( ref . ; ;
rank: 383
score: 99.01358695652173
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && this . block . is CaMeL Function ) ;
rank: 383
score: 98.798095703125
patch: loop = block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ) ;
rank: 383
score: 98.70896693638393
patch: end CaMeL Block ( block . get CaMeL Parent ( ) ) ;
rank: 383
score: 98.62567138671875
patch: return null ; } catch break ; }
rank: 383
score: 98.533544921875
patch: break block . is CaMeL Function = false ;
rank: 383
score: 98.50503540039062
patch: while null ; break ;
rank: 383
score: 98.42514377170139
patch: break . get CaMeL Parent ( ) ;
rank: 383
score: 98.34752655029297
patch: result . add ( break ) ;
rank: 383
score: 98.32948811848958
patch: if ; { if break ; break ;
rank: 384
score: 99.01331676136364
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function || block . is CaMeL Function ;
rank: 384
score: 98.70848795572917
patch: return block . is CaMeL Function || block . is CaMeL Function ) {
rank: 384
score: 98.62526245117188
patch: return false ; } } if break ; }
rank: 384
score: 98.5331802368164
patch: break } else { return false ;
rank: 384
score: 98.50440809461806
patch: value break ; break ; if break ;
rank: 384
score: 98.4949462890625
patch: break ; case Basic CaMeL Block . break :
rank: 384
score: 98.42236328125
patch: return return true ; }
rank: 384
score: 98.34681532118056
patch: break ; } if ( ! break ;
rank: 384
score: 98.32900168678977
patch: if false ; break ; if break ; break ;
rank: 385
score: 99.01165364583333
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) )
rank: 385
score: 98.79709694602273
patch: return return ref . is CaMeL Function ( ) ;
rank: 385
score: 98.7078369140625
patch: ++ block . get CaMeL Parent ( ) . is CaMeL Function ) {
rank: 385
score: 98.6249771118164
patch: break ; } } else break ;
rank: 385
score: 98.50431060791016
patch: finally { break ; return false ;
rank: 385
score: 98.34636579241071
patch: break Boolean . TRUE ; }
rank: 385
score: 98.3284912109375
patch: break ; break ; throw break ;
rank: 386
score: 99.01148274739583
patch: return block . get CaMeL Field ( ) . is CaMeL Function ) ;
rank: 386
score: 98.79693603515625
patch: Block block = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 386
score: 98.70748291015624
patch: switch ( ref . is CaMeL Function ) {
rank: 386
score: 98.62493896484375
patch: break ; } else ;
rank: 386
score: 98.5307373046875
patch: result . close ( ) ; return false ;
rank: 386
score: 98.50389862060547
patch: else { break ; } } ;
rank: 386
score: 98.49338785807292
patch: break ; } if ( block == ;
rank: 386
score: 98.41546630859375
patch: return Basic CaMeL Block . true ; }
rank: 386
score: 98.32833862304688
patch: return * break ; if break ; break ;
rank: 387
score: 99.01142578125
patch: return block . is CaMeL Function ) && block . is CaMeL Function ;
rank: 387
score: 98.70745442708333
patch: n = block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ;
rank: 387
score: 98.62471008300781
patch: throw null ; } catch break ;
rank: 387
score: 98.53035481770833
patch: return block . is CaMeL Interface ) ;
rank: 387
score: 98.50389268663194
patch: else { break ; } return true ;
rank: 387
score: 98.49258083767361
patch: break ; } } return false ; ;
rank: 387
score: 98.41305202907986
patch: throw new Exception ( $STRING$ ) ; }
rank: 387
score: 98.34556361607143
patch: break ( block ) ; }
rank: 387
score: 98.32830810546875
patch: return * break ; if ; break ;
rank: 388
score: 99.0107780905331
patch: return block . get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ; }
rank: 388
score: 98.79674353966347
patch: if ( block . is CaMeL New ) { return false ;
rank: 388
score: 98.70674351283482
patch: return block . get CaMeL Parent ( ) . is CaMeL Function {
rank: 388
score: 98.6246337890625
patch: return true ; } finally
rank: 388
score: 98.5302490234375
patch: return block . is CaMeL Function ) ? ;
rank: 388
score: 98.50366889105902
patch: finally { this . break ; } ;
rank: 388
score: 98.40925598144531
patch: return false ; } / * /
rank: 388
score: 98.34546661376953
patch: position ++ ; return true ; }
rank: 388
score: 98.32801055908203
patch: if ; = n ; break ;
rank: 389
score: 99.01036005434783
patch: return block . equals ( block . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ) ;
rank: 389
score: 98.79634602864583
patch: if ( block . is CaMeL Start ) { break ;
rank: 389
score: 98.70633370535714
patch: break block = block . get CaMeL Basic CaMeL Block ( ) ;
rank: 389
score: 98.62346733940973
patch: return break ; } finally if break ;
rank: 389
score: 98.50356038411458
patch: break ; ; / * * break ;
rank: 389
score: 98.40892791748047
patch: return false ; } else { {
rank: 389
score: 98.32795061383929
patch: if ; do if break ;
rank: 390
score: 99.01029636548913
patch: return ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Type ( ) . is CaMeL Function ) ;
rank: 390
score: 98.7961196899414
patch: if ( ! this . block . is CaMeL Function ) { return false ;
rank: 390
score: 98.7044677734375
patch: result = block . get CaMeL Basic CaMeL Block ( ) ; if (
rank: 390
score: 98.6226318359375
patch: break ; } else { if break ; }
rank: 390
score: 98.50286187065973
patch: break ; ; else { break ; }
rank: 390
score: 98.49055698939732
patch: throw new break 0 ; }
rank: 390
score: 98.40888977050781
patch: return is CaMeL Function ) ; }
rank: 390
score: 98.34508056640625
patch: return break ; ;
rank: 390
score: 98.32795061383929
patch: return / ; if break ;
rank: 391
score: 99.00974408318015
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) : false ;
rank: 391
score: 98.79593234592014
patch: if ( block . is CaMeL Function ) { block . is CaMeL Function = true ;
rank: 391
score: 98.70437825520834
patch: n = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 391
score: 98.62187364366319
patch: return null ; } else return break ;
rank: 391
score: 98.51786973741319
patch: is CaMeL Function = false ; break ;
rank: 391
score: 98.5028076171875
patch: break ; } break ; next ;
rank: 391
score: 98.49034966362848
patch: ref = block . ; } else {
rank: 391
score: 98.40818277994792
patch: log ( ) . return false ; }
rank: 391
score: 98.34431966145833
patch: break ; } if ( false ) {
rank: 391
score: 98.32794189453125
patch: result ; break ; if break ;
rank: 392
score: 99.0088778409091
patch: return block . get CaMeL Parent ( ) . is CaMeL Function && block . is CaMeL Function ) ; }
rank: 392
score: 98.79579671223958
patch: if ( block . is CaMeL Constant ) { break ;
rank: 392
score: 98.70338541666666
patch: item = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 392
score: 98.62074110243056
patch: return break ; } break ; break ;
rank: 392
score: 98.50276184082031
patch: break ; break ; } else ;
rank: 392
score: 98.40799289279514
patch: return block . is CaMeL Empty ) ;
rank: 392
score: 98.32753499348958
patch: return false ; if break ; break ;
rank: 393
score: 99.00839412913604
patch: return ( ! block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 393
score: 98.79579162597656
patch: return ref . is CaMeL Function ) && block . is CaMeL Function ) ;
rank: 393
score: 98.70334694602273
patch: ! ( block . is CaMeL Function ) ) {
rank: 393
score: 98.62065887451172
patch: return null ; } else break ;
rank: 393
score: 98.51577322823661
patch: return this . return false ;
rank: 393
score: 98.48860677083333
patch: break ; default : ;
rank: 393
score: 98.40437825520833
patch: return is CaMeL Function ) ; } }
rank: 393
score: 98.3436279296875
patch: break ; } if ( ; break ;
rank: 393
score: 98.32685546875
patch: return * break ; / / if break ;
rank: 394
score: 99.00833565848214
patch: return ref . is CaMeL Function && block . is CaMeL Function ;
rank: 394
score: 98.79547526041667
patch: if ( ( block . is CaMeL Function ) ) { return false ;
rank: 394
score: 98.70269305889423
patch: code = block . get CaMeL Function CaMeL Name ( ) ;
rank: 394
score: 98.513671875
patch: is CaMeL Function = true ; break ;
rank: 394
score: 98.50258091517857
patch: -- break ; break ; }
rank: 394
score: 98.48851182725694
patch: break ; ; } } return true ;
rank: 394
score: 98.40381537543402
patch: return false ; } block . break ;
rank: 394
score: 98.3419698079427
patch: break = break ; }
rank: 394
score: 98.3265047940341
patch: break ; break ; } if break ; break ;
rank: 395
score: 99.00767450747283
patch: return block . get CaMeL Parent ( ) . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( this ) ;
rank: 395
score: 98.7016934481534
patch: found = block . get CaMeL Parent ( ) ;
rank: 395
score: 98.62002563476562
patch: return false ; } finally if ;
rank: 395
score: 98.50320095486111
patch: return ( block is CaMeL Function ) ;
rank: 395
score: 98.50190080915179
patch: / * ] break ; }
rank: 395
score: 98.48820277622768
patch: break ; if ( ; }
rank: 395
score: 98.34191022600446
patch: ret = true ; break ;
rank: 395
score: 98.32642822265625
patch: if ; break ; if ; ; break ;
rank: 396
score: 99.0074462890625
patch: return ref . equals ( ref . get CaMeL Basic CaMeL Block ( ) ) ;
rank: 396
score: 98.79497821514423
patch: while ( block . is CaMeL Function ) { return false ;
rank: 396
score: 98.61941528320312
patch: return ; ; } else { break ; }
rank: 396
score: 98.50128851996527
patch: try { break ; } break ; ;
rank: 396
score: 98.48666381835938
patch: break return false ;
rank: 396
score: 98.40001763237848
patch: return ref . equals ( null ) ;
rank: 396
score: 98.34147135416667
patch: try { break ; } catch ; }
rank: 396
score: 98.32614135742188
patch: if ; ? break ;
rank: 397
score: 99.0064468383789
patch: return block . is CaMeL Function || ! block . is CaMeL Function ) ;
rank: 397
score: 98.79468645368304
patch: try { if ( block . is CaMeL Function ) { break ;
rank: 397
score: 98.70152791341145
patch: return ( ( block . is CaMeL Function ) ) ;
rank: 397
score: 98.6192138671875
patch: return false ; } this . break break ;
rank: 397
score: 98.50115094866071
patch: else ; return break ; }
rank: 397
score: 98.48751068115234
patch: break ; } if ( count ;
rank: 397
score: 98.39708794487848
patch: return false ; } else { try {
rank: 397
score: 98.32575073242188
patch: if ; if break ; break ; break ;
rank: 398
score: 99.00559369255515
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) { break ;
rank: 398
score: 98.70040893554688
patch: switch ( block . is CaMeL Function ) { break ;
rank: 398
score: 98.61920844184027
patch: return break ; } catch break ; }
rank: 398
score: 98.50099690755208
patch: break ; if break ; while break ;
rank: 398
score: 98.47829182942708
patch: return ref . is CaMeL Function 1 ;
rank: 398
score: 98.33922576904297
patch: break false ; } } break ;
rank: 398
score: 98.3255615234375
patch: if ; * ; break ;
rank: 399
score: 99.00509440104166
patch: return block . is CaMeL Function . is CaMeL Function ) + false ;
rank: 399
score: 98.70022583007812
patch: return block . is CaMeL Function ) ; } * /
rank: 399
score: 98.61917724609376
patch: this . break break ; } } break ;
rank: 399
score: 98.50093587239583
patch: super . get CaMeL Next ( ) ;
rank: 399
score: 98.4868392944336
patch: break ; ; } } break ;
rank: 399
score: 98.47543674045139
patch: break . get CaMeL Name ( ) ;
rank: 399
score: 98.39271240234375
patch: { return false ;
rank: 399
score: 98.32548014322917
patch: if ; break ; } if break ;
rank: 400
score: 99.00404459635416
patch: return block . get CaMeL Scope ( ) . is CaMeL Function ) ;
rank: 400
score: 98.79412841796875
patch: return this . ! block . is CaMeL Function ) { break ;
rank: 400
score: 98.61875697544643
patch: return null ; } else ;
rank: 400
score: 98.50084686279297
patch: break ; ; } break ; }
rank: 400
score: 98.48681030273437
patch: break ; } null = block . get ;
rank: 400
score: 98.47209337022569
patch: return block . is CaMeL Function false ;
rank: 400
score: 98.39197455512152
patch: ref . is CaMeL Function ( ) ;
rank: 400
score: 98.33565945095486
patch: if ( true ) return false ; }
rank: 400
score: 98.32509358723958
patch: break ; ; if break ; / /
rank: 401
score: 99.003857421875
patch: return block . is CaMeL Function && block . is CaMeL Function ) )
rank: 401
score: 98.69978841145833
patch: table . if ( block . is CaMeL Local ) {
rank: 401
score: 98.61859130859375
patch: break ; } catch ; break ;
rank: 401
score: 98.5006103515625
patch: value = ( break ) ;
rank: 401
score: 98.48518880208333
patch: if ( ; } else { break ;
rank: 401
score: 98.47201877170139
patch: block . is CaMeL Function = ) ;
rank: 401
score: 98.32498931884766
patch: if 1 ; break ; break ;
rank: 402
score: 99.00263528262867
patch: return ( block . get CaMeL Parent ( ) ) . is CaMeL Function ) ;
rank: 402
score: 98.79334368024554
patch: if ( ! ! block . is CaMeL Function ) { break ;
rank: 402
score: 98.69957682291667
patch: expr = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 402
score: 98.6172607421875
patch: return null ; break ; } } break ;
rank: 402
score: 98.4841079711914
patch: break ; } if ( false ;
rank: 402
score: 98.46747504340277
patch: return ref . is CaMeL Function $NUMBER$ ;
rank: 402
score: 98.39052908761161
patch: return return false ; } }
rank: 402
score: 98.33507537841797
patch: success = break ; break ; }
rank: 402
score: 98.32443237304688
patch: if break ; break ; break ; if ;
rank: 403
score: 99.00241088867188
patch: return ref . is CaMeL Function && ! block . is CaMeL Function ) ;
rank: 403
score: 98.7932861328125
patch: is CaMeL Function = block . is CaMeL Function ( ) ; break ;
rank: 403
score: 98.69922688802083
patch: return block . is CaMeL Function ( ) . is CaMeL Function ) ;
rank: 403
score: 98.61723327636719
patch: return false ; return false ; }
rank: 403
score: 98.50026448567708
patch: else ; break ; } if break ;
rank: 403
score: 98.46700032552083
patch: return block . is CaMeL Function * /
rank: 403
score: 98.39039829799107
patch: throw ( Exception ) false ;
rank: 403
score: 98.32391357421875
patch: return * / break ; /
rank: 404
score: 99.00211334228516
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function )
rank: 404
score: 98.7925555889423
patch: if ( block . is CaMeL Global ) { return false ;
rank: 404
score: 98.69892229352679
patch: q = block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 404
score: 98.6168212890625
patch: return ; ; break ; } break ; }
rank: 404
score: 98.49946594238281
patch: case 0 ? break ; break ;
rank: 404
score: 98.32377485795455
patch: for ; ; ; ; ; ; ; break ;
rank: 405
score: 99.00182342529297
patch: return block . is CaMeL Function && ! ref . is CaMeL Function ) ;
rank: 405
score: 98.792236328125
patch: for ( Basic CaMeL Block block = ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 405
score: 98.69856567382813
patch: return = block . is CaMeL Function ) ;
rank: 405
score: 98.61659545898438
patch: return break ; } this . break ; }
rank: 405
score: 98.49877251519098
patch: catch true ; break ; } break ;
rank: 405
score: 98.48326764787946
patch: throw new break false ; }
rank: 405
score: 98.46613226996527
patch: return block . is CaMeL Declared ) ;
rank: 405
score: 98.38856724330357
patch: return true ; return false ;
rank: 405
score: 98.32327270507812
patch: if this ; break ;
rank: 406
score: 98.7919452373798
patch: if ( block . is CaMeL Function ) { break false ;
rank: 406
score: 98.6984130859375
patch: return block . is CaMeL Function && block . is CaMeL Block ) ;
rank: 406
score: 98.61637878417969
patch: return ; ; } else if ;
rank: 406
score: 98.49781799316406
patch: break ; break ; println break ;
rank: 406
score: 98.48322889539931
patch: break ; } } while ( true )
rank: 406
score: 98.4642105102539
patch: return false ? false : false ;
rank: 406
score: 98.33299424913194
patch: break = block . get CaMeL Parent ;
rank: 406
score: 98.32314627511161
patch: if ; target ; break ;
rank: 407
score: 99.00135149274554
patch: block . get CaMeL Basic CaMeL Block ( ) . return false ;
rank: 407
score: 98.7915283203125
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block ) ; }
rank: 407
score: 98.69771902901786
patch: ! block . get CaMeL Parent ( ) . is CaMeL Function _
rank: 407
score: 98.6159896850586
patch: return break ; } } false ;
rank: 407
score: 98.49715423583984
patch: break ; break ; } else {
rank: 407
score: 98.48189290364583
patch: break ; } null = block . ;
rank: 407
score: 98.46234809027777
patch: break is CaMeL Function ( block ) ;
rank: 407
score: 98.33291965060764
patch: target = block . get CaMeL Parent ;
rank: 408
score: 98.99811662946429
patch: if ( ! block . is CaMeL Function ) { break ; }
rank: 408
score: 98.79142491957721
patch: block . is CaMeL Function = block . is CaMeL Function ) ; return false ;
rank: 408
score: 98.49607340494792
patch: break ; return null ;
rank: 408
score: 98.48161315917969
patch: throw new Assertion CaMeL Error ( ;
rank: 408
score: 98.46133083767361
patch: return block . is CaMeL None ) ;
rank: 408
score: 98.38184950086806
patch: return true ; } else return true ;
rank: 408
score: 98.33285522460938
patch: cancelled = true ; break ; }
rank: 408
score: 98.32271030970982
patch: if ; ; if break ;
rank: 409
score: 98.99760167738971
patch: return block . is CaMeL Function && ( ! block . is CaMeL Function ) ;
rank: 409
score: 98.79129231770834
patch: if ( block . is CaMeL Interface ( ) ) { return false ;
rank: 409
score: 98.61509704589844
patch: return null ; break ; } else
rank: 409
score: 98.49495152064732
patch: if ( true ; break ;
rank: 409
score: 98.48105875651042
patch: if ( ; else throw new ; }
rank: 409
score: 98.46067979600694
patch: return block . is CaMeL False ) ;
rank: 409
score: 98.37849644252232
patch: return is CaMeL Empty ) ;
rank: 409
score: 98.32210286458333
patch: break ; break ; println ; break ;
rank: 410
score: 98.79115397135416
patch: ref . if ( block . is CaMeL Function ) { return false ;
rank: 410
score: 98.69734409877232
patch: get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( ) ; }
rank: 410
score: 98.61451721191406
patch: return break ; } break ; ;
rank: 410
score: 98.49471282958984
patch: else { super . break ; ;
rank: 410
score: 98.48011779785156
patch: break ; } break ; default :
rank: 410
score: 98.45745171440973
patch: return block . is CaMeL Var ) ;
rank: 410
score: 98.33211941189236
patch: node = block . get CaMeL Parent ;
rank: 410
score: 98.32028198242188
patch: } if break ; if break ;
rank: 411
score: 98.9967041015625
patch: return ref . is CaMeL Function || ref . is CaMeL Function ) ;
rank: 411
score: 98.79106309678819
patch: return block . is CaMeL Assigned CaMeL Once CaMeL In CaMeL Lifetime ( ) ; } }
rank: 411
score: 98.69582693917411
patch: t = ref . get CaMeL Basic CaMeL Block ( ) ; }
rank: 411
score: 98.61393907335069
patch: return ; ; } } catch break ;
rank: 411
score: 98.49464416503906
patch: if ( break ) { break ;
rank: 411
score: 98.47999572753906
patch: break ; } ; } else {
rank: 411
score: 98.45743136935764
patch: return ref . is CaMeL Function ++ ;
rank: 411
score: 98.32000732421875
patch: if break ; break ; ; } break ;
rank: 412
score: 98.99627685546875
patch: return block . is CaMeL Function && block . is CaMeL Function ) false ;
rank: 412
score: 98.79078087439903
patch: if ( block . is CaMeL Get ) { return false ;
rank: 412
score: 98.6952392578125
patch: match ( block . is CaMeL Function ) ;
rank: 412
score: 98.6134033203125
patch: return null ; } break ; break ; }
rank: 412
score: 98.49421691894531
patch: break ; } break ; null ;
rank: 412
score: 98.47929551866319
patch: if ( true ) { break ; }
rank: 412
score: 98.45538330078125
patch: return ref . is CaMeL Function ;
rank: 412
score: 98.33055962456598
patch: if ( false ) return false ; }
rank: 412
score: 98.3199462890625
patch: if break ; break ; { break ;
rank: 413
score: 98.99481201171875
patch: ref . equals ( block . get CaMeL Parent ( ) ) ;
rank: 413
score: 98.79056396484376
patch: return block . is CaMeL Declaration ( ) ;
rank: 413
score: 98.69517299107143
patch: return block . is CaMeL Function ) ; } else return false ;
rank: 413
score: 98.61223493303571
patch: return true ; } } else
rank: 413
score: 98.49376569475446
patch: else { break ; } /
rank: 413
score: 98.47868347167969
patch: this . break ; } * /
rank: 413
score: 98.4552510579427
patch: return block == null ;
rank: 413
score: 98.33036586216518
patch: success = false ; break ;
rank: 413
score: 98.31964111328125
patch: break ; if ; break ; if ; ;
rank: 414
score: 98.61215549045139
patch: break ; break ; } } break ;
rank: 414
score: 98.49323187934027
patch: return null ; break ; } break ;
rank: 414
score: 98.47821044921875
patch: ref = block . get ; }
rank: 414
score: 98.45412190755208
patch: return block . is CaMeL Function ( ;
rank: 414
score: 98.35855102539062
patch: for ( Basic CaMeL Block block ;
rank: 414
score: 98.3188143643466
patch: break ; break ; if break ; } break ;
rank: 415
score: 98.9935546875
patch: ref . is CaMeL Function = ! block . is CaMeL Function ) ;
rank: 415
score: 98.78831380208334
patch: } else if ( block . is CaMeL Function ) { return false ;
rank: 415
score: 98.49282497829861
patch: else { break ; } for break ;
rank: 415
score: 98.47807481553819
patch: return true ; } / * break ;
rank: 415
score: 98.45156521267361
patch: result . close ( ) ; break ;
rank: 415
score: 98.32988823784723
patch: result = true ; return false ; }
rank: 415
score: 98.3187026977539
patch: if break ; ; throw break ;
rank: 416
score: 98.61096801757813
patch: return false ; } finally = break ; }
rank: 416
score: 98.4927749633789
patch: value { break ; if break ;
rank: 416
score: 98.47757720947266
patch: throw new Internal CaMeL Error ( ;
rank: 416
score: 98.32917131696429
patch: result = break ; break ;
rank: 416
score: 98.318359375
patch: break ; if ; break ; throw break ;
rank: 417
score: 98.99345128676471
patch: return ref . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function ; }
rank: 417
score: 98.78754425048828
patch: Function block = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 417
score: 98.61092376708984
patch: return false ; else return break ;
rank: 417
score: 98.49262830946181
patch: if null ; break ; if break ;
rank: 417
score: 98.35276794433594
patch: return false ; } } ) ;
rank: 417
score: 98.32893202039931
patch: break false ; } } return break ;
rank: 417
score: 98.31778971354167
patch: break ; if break ; throw break ;
rank: 418
score: 98.7874755859375
patch: return this . ! block . is CaMeL Function ) { return false ;
rank: 418
score: 98.69297485351562
patch: found = false ;
rank: 418
score: 98.61041870117188
patch: return null ; } else if break ; }
rank: 418
score: 98.49128723144531
patch: else { break ; return break ;
rank: 418
score: 98.4774398803711
patch: break ; } } catch ( ;
rank: 418
score: 98.35061209542411
patch: return { return true ; }
rank: 418
score: 98.32884385850694
patch: if ( break ) return false ; }
rank: 418
score: 98.31771511501736
patch: break ; if break ; / break ;
rank: 419
score: 98.99182846966912
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) + true ;
rank: 419
score: 98.69181518554687
patch: result = block . is CaMeL Function ) {
rank: 419
score: 98.61007080078124
patch: return this . break ; } } break ;
rank: 419
score: 98.49079895019531
patch: else { break ; while break ;
rank: 419
score: 98.47702462332589
patch: if ; break ; ; }
rank: 419
score: 98.44317626953125
patch: return Basic CaMeL Block . true ;
rank: 419
score: 98.3451919555664
patch: System . else ( ) ; }
rank: 419
score: 98.3287353515625
patch: count ++ ; break ; }
rank: 419
score: 98.31768243963069
patch: if break ; break ; ; / if break ;
rank: 420
score: 98.78702121310764
patch: result = block . is CaMeL Function ) && block . is CaMeL Function ( ) ;
rank: 420
score: 98.69163004557292
patch: ++ block . is CaMeL Function ) {
rank: 420
score: 98.60968627929688
patch: return false ; } catch ; return false ;
rank: 420
score: 98.49070231119792
patch: finally { break ; } return false ;
rank: 420
score: 98.47615559895833
patch: break ; default : break ; } ;
rank: 420
score: 98.43353271484375
patch: break ? ( Basic CaMeL Block ) block
rank: 420
score: 98.32861328125
patch: false = false ; break ; }
rank: 420
score: 98.3170166015625
patch: if ; { else break ;
rank: 421
score: 98.99142456054688
patch: return ref . get CaMeL Basic CaMeL Block ( ) instanceof Basic CaMeL Block ;
rank: 421
score: 98.78695339626736
patch: loop = ( Basic CaMeL Block ) ref . get CaMeL Basic CaMeL Block ( ) ;
rank: 421
score: 98.69142368861607
patch: return block . get CaMeL Parent ( ) . is CaMeL Function CaMeL
rank: 421
score: 98.60930633544922
patch: if ( false ; break ; }
rank: 421
score: 98.47470092773438
patch: break ; } * ;
rank: 421
score: 98.43283081054688
patch: break } else { return true ;
rank: 421
score: 98.34076799665179
patch: block . is CaMeL Function .
rank: 421
score: 98.32798936631944
patch: break ; } if ( true ) {
rank: 421
score: 98.31674533420139
patch: break ; ; if ; { break ;
rank: 422
score: 98.99026692708334
patch: return ref . get CaMeL Type ( ) . is CaMeL Function ) ;
rank: 422
score: 98.60915701729911
patch: continue ; } break ; }
rank: 422
score: 98.49005126953125
patch: value { break ; }
rank: 422
score: 98.47401936848958
patch: break ; } if ( node . ;
rank: 422
score: 98.43219672309027
patch: logger . error ( ) ; break ;
rank: 422
score: 98.34024047851562
patch: return ( block != null ) ;
rank: 422
score: 98.31658935546875
patch: if ; break ; / break ;
rank: 423
score: 98.78555636935764
patch: return ( block . is CaMeL Function ) && block . is CaMeL Function ( ) ;
rank: 423
score: 98.60875108506944
patch: return true ; } } catch break ;
rank: 423
score: 98.49000767299107
patch: ++ break ; if break ;
rank: 423
score: 98.43096245659723
patch: return ref . is CaMeL Function ) _
rank: 423
score: 98.3370361328125
patch: throw ( Exception ) true ;
rank: 423
score: 98.32696533203125
patch: logger . warning ( $STRING$ ) ;
rank: 423
score: 98.3165283203125
patch: if ; break ; ; if break ; break ;
rank: 424
score: 98.9888054342831
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) - false ;
rank: 424
score: 98.785400390625
patch: return ( block . get CaMeL Parent ( ) . is CaMeL Function ( ) ) ;
rank: 424
score: 98.68984375
patch: if ( block . is CaMeL Block ) {
rank: 424
score: 98.60865020751953
patch: return break ; } else { }
rank: 424
score: 98.48993682861328
patch: break ; break ; return true ;
rank: 424
score: 98.31641981336806
patch: if true ; break ; if break ;
rank: 425
score: 98.9887924194336
patch: return block . is CaMeL Function && block . is CaMeL Function ) 1 ;
rank: 425
score: 98.68966674804688
patch: if ( block . is CaMeL Resolved ( ) ) {
rank: 425
score: 98.60838012695312
patch: return ; ; } finally { break ; }
rank: 425
score: 98.48967742919922
patch: break ; / / * break ;
rank: 425
score: 98.47239854600694
patch: return ; } if ( ref . ;
rank: 425
score: 98.42889404296875
patch: } else { return false ;
rank: 425
score: 98.3302510579427
patch: { return false ; }
rank: 425
score: 98.32481384277344
patch: result = break ; } break ;
rank: 425
score: 98.31622869318181
patch: if false ; break ; break ; if break ;
rank: 426
score: 98.7852783203125
patch: if ( block . is CaMeL Function ( ) ) { return true ;
rank: 426
score: 98.48930358886719
patch: return false ; break ; ; ;
rank: 426
score: 98.47161187065973
patch: return ; } ; } return false ;
rank: 426
score: 98.41951497395833
patch: return block . is CaMeL Function ref ;
rank: 426
score: 98.31590440538194
patch: break ; ; if ; / break ;
rank: 427
score: 98.9878438313802
patch: block . get CaMeL Parent ( ) . return false ;
rank: 427
score: 98.68769666883681
patch: switch ( block . is CaMeL Function )
rank: 427
score: 98.608251953125
patch: return false ; } catch ; break ; }
rank: 427
score: 98.48894391741071
patch: break ; case break ; }
rank: 427
score: 98.46998426649306
patch: return ; } else { break ; }
rank: 427
score: 98.41650390625
patch: break Basic CaMeL Block . false ;
rank: 427
score: 98.32454136439732
patch: break ; } return success ;
rank: 427
score: 98.32260131835938
patch: return return false ; } else {
rank: 428
score: 98.78464918870192
patch: if ( this . is CaMeL Function ) { return false ;
rank: 428
score: 98.68682183159723
patch: || block . is CaMeL Function ) {
rank: 428
score: 98.60821533203125
patch: } break ; break ; }
rank: 428
score: 98.48876081194196
patch: value break ; if break ;
rank: 428
score: 98.46932220458984
patch: result [ 0 ] = true ;
rank: 428
score: 98.32400076729911
patch: if ( ! break ) {
rank: 428
score: 98.3208999633789
patch: return false ; } else if (
rank: 428
score: 98.31557006835938
patch: for ; ; ; ; break ; break ;
rank: 429
score: 98.98675130208333
patch: return block . get CaMeL Declaration ( ) . is CaMeL Function ) ;
rank: 429
score: 98.78432791573661
patch: if ( block . is CaMeL Declaration ( ) ) { break ;
rank: 429
score: 98.68633161272321
patch: return ( block . is CaMeL Function ) . is CaMeL Function ;
rank: 429
score: 98.60784301757812
patch: return true ; } else if break ; }
rank: 429
score: 98.48758273654514
patch: else { break ; } break ; ;
rank: 429
score: 98.46891954210069
patch: this . ; return true ; } }
rank: 429
score: 98.41069878472223
patch: return block . is CaMeL Private ) ;
rank: 429
score: 98.32293701171875
patch: done = true ; break ; }
rank: 429
score: 98.31548200334821
patch: return true ; } ) ;
rank: 429
score: 98.31546020507812
patch: return ; void break ;
rank: 430
score: 98.98645737591912
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) : true ;
rank: 430
score: 98.78379469651442
patch: if ( block . is CaMeL Return ) { return false ;
rank: 430
score: 98.60772705078125
patch: return false ; } } continue ;
rank: 430
score: 98.48729705810547
patch: finally { break ; while break ;
rank: 430
score: 98.40949249267578
patch: return block . is CaMeL Function CaMeL
rank: 430
score: 98.31488800048828
patch: System ; break ; } break ;
rank: 431
score: 98.7833251953125
patch: return ( block . is CaMeL Function ) && block . is CaMeL Function ) ;
rank: 431
score: 98.68233816964286
patch: return block . is CaMeL Function && block . is CaMeL Loop CaMeL
rank: 431
score: 98.60769314236111
patch: return false ; } finally return false ;
rank: 431
score: 98.48616027832031
patch: break ; for break ; ; ;
rank: 431
score: 98.46381293402777
patch: break ; } node = block . ;
rank: 431
score: 98.40853445870536
patch: return this . return true ;
rank: 431
score: 98.31952582465277
patch: body = block . get CaMeL Parent ;
rank: 431
score: 98.31487274169922
patch: if ; = ; ; break ;
rank: 431
score: 98.30896759033203
patch: buf . add ( block ) ;
rank: 432
score: 98.98324381510416
patch: return ref . get CaMeL Next ( ) . is CaMeL Function ) ;
rank: 432
score: 98.68205915178571
patch: n = block . get CaMeL Basic CaMeL Block ( ) ; else
rank: 432
score: 98.60719807942708
patch: return ; ; } } } break ;
rank: 432
score: 98.486083984375
patch: break ; } break ; /
rank: 432
score: 98.40716552734375
patch: block . is CaMeL Function 1 ( )
rank: 432
score: 98.31744384765625
patch: stack . add ( block ) ;
rank: 432
score: 98.31419542100694
patch: break ; ; if ; break ; ;
rank: 433
score: 98.78271484375
patch: if ( block . is CaMeL Return ) { break ;
rank: 433
score: 98.68195452008929
patch: continue ; } else if ( block . is CaMeL Function ) {
rank: 433
score: 98.48583221435547
patch: break ; / else { break ;
rank: 433
score: 98.46362982855902
patch: if ( ; * / break ; }
rank: 433
score: 98.31400553385417
patch: break ; break ; break ; if ;
rank: 433
score: 98.3036880493164
patch: ref . add ( block ) ;
rank: 434
score: 98.98264857700893
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ;
rank: 434
score: 98.78248697916666
patch: block = block . get CaMeL Basic CaMeL Block ( ) ; * /
rank: 434
score: 98.68179321289062
patch: t = block . is CaMeL Function ) ;
rank: 434
score: 98.60657348632813
patch: return false ; } } else if break ;
rank: 434
score: 98.48556518554688
patch: case 0 ; break ; break ;
rank: 434
score: 98.46352810329861
patch: break ; } } else { return ;
rank: 434
score: 98.4005355834961
patch: break . get CaMeL Parent ( )
rank: 434
score: 98.31707763671875
patch: if ( block == null )
rank: 434
score: 98.3127685546875
patch: break ; break ; / / if break ;
rank: 434
score: 98.30313110351562
patch: return ( true ) ;
rank: 435
score: 98.68034532335069
patch: return ref . is CaMeL Function ) {
rank: 435
score: 98.60547553168402
patch: return null ; } else return false ;
rank: 435
score: 98.484619140625
patch: break ; break ; } ; *
rank: 435
score: 98.46270751953125
patch: break ; } / * * ; ;
rank: 435
score: 98.31694793701172
patch: break false ; } return true ;
rank: 435
score: 98.31254272460937
patch: break ; break ; while ; if break ;
rank: 435
score: 98.30093383789062
patch: try { return false ;
rank: 436
score: 98.98152923583984
patch: return block . get CaMeL Parent ( ) . is CaMeL Function { break ;
rank: 436
score: 98.68006243024554
patch: n = ref . get CaMeL Basic CaMeL Block ( ) ; }
rank: 436
score: 98.60527692522321
patch: this . break break ; }
rank: 436
score: 98.48443603515625
patch: else ; ; break ; }
rank: 436
score: 98.46254185267857
patch: found = true ; ; }
rank: 436
score: 98.31681315104167
patch: result = true ; return true ; }
rank: 436
score: 98.31193712022569
patch: break ; if ; { if break ;
rank: 436
score: 98.30001068115234
patch: throw new Exception ( ) ; }
rank: 437
score: 98.6795654296875
patch: match ( block . get CaMeL Parent ( ) ) ;
rank: 437
score: 98.60513305664062
patch: return ; ; } else if break ; }
rank: 437
score: 98.31653510199652
patch: if ( ! break ; break ; }
rank: 437
score: 98.31160111860795
patch: if ; = break ; break ; if break ;
rank: 437
score: 98.2995834350586
patch: return is CaMeL Sealed ( ) ;
rank: 438
score: 98.98053448016827
patch: return block . get CaMeL Basic CaMeL Block ( ) ; }
rank: 438
score: 98.78089904785156
patch: return ref . is CaMeL Function ( ) ; } else { return false ;
rank: 438
score: 98.67891235351563
patch: ! ( block . is CaMeL Function ) {
rank: 438
score: 98.60506863064236
patch: this . break ; } else return ;
rank: 438
score: 98.48382568359375
patch: catch null { break ;
rank: 438
score: 98.46145629882812
patch: return ; } else { break ;
rank: 438
score: 98.3934555053711
patch: return Basic CaMeL Block . false ;
rank: 438
score: 98.31158447265625
patch: if break ; break ; try
rank: 438
score: 98.29146118164063
patch: result = true ;
rank: 439
score: 98.9795673076923
patch: return block . is CaMeL Function . is CaMeL Function ) ;
rank: 439
score: 98.78081403459821
patch: return ; } block = ref . get CaMeL Parent ( ) ;
rank: 439
score: 98.67888793945312
patch: if ( block . is CaMeL Call ) {
rank: 439
score: 98.60503472222223
patch: return false ; } else = break ;
rank: 439
score: 98.46059163411458
patch: return break ; } ;
rank: 439
score: 98.38816833496094
patch: return block . is CaMeL Function -
rank: 439
score: 98.31108940972223
patch: break ; ; = break ; if ;
rank: 439
score: 98.28681291852679
patch: System . else ( ) ;
rank: 440
score: 98.97873104319854
patch: return ( block . is CaMeL Function && ! block . is CaMeL Function ) ;
rank: 440
score: 98.78043910435268
patch: if ( block . . is CaMeL Function ) { return false ;
rank: 440
score: 98.67819649832589
patch: return get CaMeL One CaMeL And CaMeL Only CaMeL Assignment ( block .
rank: 440
score: 98.6037368774414
patch: return null ; } } else ;
rank: 440
score: 98.48268345424107
patch: break ; } for break ;
rank: 440
score: 98.38545227050781
patch: return block . is CaMeL Assigned CaMeL
rank: 440
score: 98.31562805175781
patch: contents . add ( block ) ;
rank: 440
score: 98.31047905815973
patch: break ; if break ; break ; ;
rank: 441
score: 98.97863051470588
patch: return block . is CaMeL Function || block . is CaMeL Function ) + false ;
rank: 441
score: 98.78028453480114
patch: ref . is CaMeL Function ) { return false ;
rank: 441
score: 98.6738789876302
patch: if ( block . is CaMeL Anonymous ( ) ) {
rank: 441
score: 98.46007283528645
patch: break ; continue ; }
rank: 441
score: 98.38374328613281
patch: break Basic CaMeL Block . true ;
rank: 441
score: 98.31431749131944
patch: logger . info ( $STRING$ + block ;
rank: 441
score: 98.31037733289931
patch: return / * break ; / break ;
rank: 442
score: 98.97809914981617
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) + 0 ;
rank: 442
score: 98.6737060546875
patch: result = block . is CaMeL Function ) _
rank: 442
score: 98.4825439453125
patch: break ; ; return false ; }
rank: 442
score: 98.37975202287946
patch: break } else { break ;
rank: 442
score: 98.31338936941964
patch: finished = true ; break ;
rank: 442
score: 98.31006622314453
patch: break ; ; ; = break ;
rank: 442
score: 98.27991485595703
patch: throw * ? false : false ;
rank: 443
score: 98.97771453857422
patch: return ( block . get CaMeL Basic CaMeL Block ( ) != null ) ;
rank: 443
score: 98.77923114483173
patch: return ( ! ( block . is CaMeL Function ) ) ;
rank: 443
score: 98.67360432942708
patch: return block . is CaMeL Function && block . get CaMeL
rank: 443
score: 98.60233764648437
patch: return false ; } finally { false ; }
rank: 443
score: 98.48185221354167
patch: m 0 ; break ; if break ;
rank: 443
score: 98.45942905970982
patch: break ; } ++ count ;
rank: 443
score: 98.30931745256696
patch: return n ; println break ;
rank: 444
score: 98.9773681640625
patch: return ref . is CaMeL Function && ! block . is CaMeL Function )
rank: 444
score: 98.77921142578126
patch: return ( block . is CaMeL Call ) ;
rank: 444
score: 98.67261851917614
patch: next = block . get CaMeL Parent ( ) ;
rank: 444
score: 98.6021728515625
patch: return true ; } return ;
rank: 444
score: 98.4814453125
patch: break ; return break ; }
rank: 444
score: 98.4590352376302
patch: break ; } return ;
rank: 444
score: 98.36561802455357
patch: break * * * * ?
rank: 444
score: 98.31211344401042
patch: final ; break ; }
rank: 444
score: 98.30811225043402
patch: break ; ; } if ; break ;
rank: 444
score: 98.27488490513393
patch: return true ; return true ;
rank: 445
score: 98.97725677490234
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) ) ;
rank: 445
score: 98.67195434570313
patch: if ( this . is CaMeL Function ) {
rank: 445
score: 98.60213797433036
patch: break ; } } false ;
rank: 445
score: 98.48142787388393
patch: while break ; break ; ;
rank: 445
score: 98.45874895368304
patch: found = false ; break ;
rank: 445
score: 98.36252267020089
patch: break * * * * /
rank: 445
score: 98.27249908447266
patch: return { return false ; } }
rank: 446
score: 98.97670676491477
patch: return block . is CaMeL Function ) - 0 ;
rank: 446
score: 98.60140380859374
patch: return false ; } catch break ; break ;
rank: 446
score: 98.48141915457589
patch: else ; break ; } }
rank: 446
score: 98.45761544363839
patch: return false ; } } ;
rank: 446
score: 98.36111450195312
patch: return true ? false : false ;
rank: 446
score: 98.31065368652344
patch: prev = break ; break ; }
rank: 446
score: 98.30784098307292
patch: return * / break ; if break ;
rank: 446
score: 98.27247314453125
patch: return - 1 ;
rank: 447
score: 98.9764045266544
patch: if ( block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function )
rank: 447
score: 98.60093994140625
patch: return true ; } break ; } break ;
rank: 447
score: 98.48097059461806
patch: finally { this . break ; } }
rank: 447
score: 98.45719401041667
patch: if ( ; else return false ; }
rank: 447
score: 98.3604736328125
patch: break ( Basic CaMeL Block ) block
rank: 447
score: 98.31063079833984
patch: contents . add ( break ) ;
rank: 447
score: 98.30775669642857
patch: return * break ; System ;
rank: 447
score: 98.27220662434895
patch: try { return true ;
rank: 448
score: 98.9763916015625
patch: return block . get CaMeL Basic CaMeL Block ( ) . is CaMeL Function
rank: 448
score: 98.66925048828125
patch: if ( block . is CaMeL Anonymous ) {
rank: 448
score: 98.60073852539062
patch: return break ; } } * /
rank: 448
score: 98.48086886935764
patch: finally { break ; if break ; }
rank: 448
score: 98.45655822753906
patch: break ; } } ; return ;
rank: 448
score: 98.35910034179688
patch: return block . is CaMeL Loop CaMeL
rank: 448
score: 98.30731201171875
patch: if ; ! break ;
rank: 448
score: 98.30710274832589
patch: ret = false ; break ;
rank: 448
score: 98.2685546875
patch: return false ; * /
rank: 449
score: 98.77738683363971
patch: if ( block . is CaMeL Function ) { break ; } else { break ;
rank: 449
score: 98.66566975911458
patch: if ( block . is CaMeL New ( ) ) {
rank: 449
score: 98.6006103515625
patch: return ; ; } break ; } break ;
rank: 449
score: 98.48078070746527
patch: break ; break ; } return true ;
rank: 449
score: 98.4549560546875
patch: if ( ! ; break ;
rank: 449
score: 98.33683013916016
patch: log ( ) . return false ;
rank: 449
score: 98.30701555524554
patch: break ; ; throw break ;
rank: 449
score: 98.2637710571289
patch: return ref . equals ( ) ;
rank: 450
score: 98.97608857996323
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) : null ;
rank: 450
score: 98.66519165039062
patch: if ( block . is CaMeL Empty ( ) ) {
rank: 450
score: 98.6000747680664
patch: return null ; break ; break ;
rank: 450
score: 98.48040008544922
patch: break ; break ; } * ;
rank: 450
score: 98.45446099175348
patch: break ; / * break ; * /
rank: 450
score: 98.30628051757813
patch: if ; break ; if ; break ; ;
rank: 450
score: 98.30543736049107
patch: completed = true ; break ;
rank: 450
score: 98.26341756184895
patch: return ; } else {
rank: 451
score: 98.97544167258523
patch: return block . is CaMeL Function ) - 1 ;
rank: 451
score: 98.7765362079327
patch: return block . is CaMeL Function ( ) ; return false ;
rank: 451
score: 98.66349487304687
patch: break ; case Basic CaMeL Block . ) {
rank: 451
score: 98.59984130859375
patch: return break ; } } else throw null ;
rank: 451
score: 98.47991180419922
patch: break ; while break ; break ;
rank: 451
score: 98.33042689732143
patch: break ? true : false ;
rank: 451
score: 98.30461883544922
patch: break ; return ; = break ;
rank: 452
score: 98.7763671875
patch: if ( block . is CaMeL Cast ) { break ;
rank: 452
score: 98.66221788194444
patch: ( block . is CaMeL Function ) {
rank: 452
score: 98.59696655273437
patch: return true ; break ; } break ; }
rank: 452
score: 98.47958374023438
patch: / * break ;
rank: 452
score: 98.32819366455078
patch: return block . equals ( ) ;
rank: 452
score: 98.3042500813802
patch: System ; break ; }
rank: 452
score: 98.26004638671876
patch: return { break ;
rank: 453
score: 98.77621459960938
patch: block . if ( block . is CaMeL Function ( ) ) { break ;
rank: 453
score: 98.59648132324219
patch: } else if break ; break ;
rank: 453
score: 98.47942437065973
patch: / * break ; } if break ;
rank: 453
score: 98.3266092936198
patch: return ref . false ;
rank: 453
score: 98.30413818359375
patch: return * break ; / / /
rank: 453
score: 98.30387878417969
patch: return break ; } if ( ;
rank: 453
score: 98.26000104631696
patch: return this ; } else {
rank: 454
score: 98.97428894042969
patch: return ref . is CaMeL Function || ( block . is CaMeL Function ) ;
rank: 454
score: 98.77595738002232
patch: if ( block . is CaMeL Function ) { block . break ;
rank: 454
score: 98.66187879774306
patch: | block . is CaMeL Function ) {
rank: 454
score: 98.5963846842448
patch: return 0 ; } }
rank: 454
score: 98.47919311523438
patch: this . break ;
rank: 454
score: 98.45311143663194
patch: break ; } if ( block instanceof ;
rank: 454
score: 98.32527160644531
patch: if ( true ) { break ;
rank: 454
score: 98.30380249023438
patch: body = block ; break ; }
rank: 455
score: 98.97390747070312
patch: return ! block . is CaMeL Function && block . is CaMeL Function ) ;
rank: 455
score: 98.77592468261719
patch: return ref . is CaMeL Function ( ) ; } else { return true ;
rank: 455
score: 98.59625854492188
patch: return break ; } } this . break ;
rank: 455
score: 98.4791259765625
patch: value ; break ; } break ;
rank: 455
score: 98.45284016927083
patch: break ; * break ;
rank: 455
score: 98.3243637084961
patch: return false ? false : true ;
rank: 455
score: 98.30343627929688
patch: Collections . sort ( break ) ;
rank: 455
score: 98.30301920572917
patch: break ; ; System ;
rank: 456
score: 98.77493286132812
patch: Function block = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 456
score: 98.66001198508523
patch: return block . is CaMeL Function ) false ; }
rank: 456
score: 98.59624481201172
patch: return false ; } else * /
rank: 456
score: 98.47874620225694
patch: else { super . break break ; }
rank: 456
score: 98.45138888888889
patch: break ; case ; default : break ;
rank: 456
score: 98.31997680664062
patch: return ) ? false : false ;
rank: 456
score: 98.30301242404514
patch: throw new Runtime CaMeL Exception ; Exception (
rank: 456
score: 98.30228969029018
patch: final int start = break ;
rank: 456
score: 98.25434112548828
patch: return true ; } else { {
rank: 457
score: 98.97310965401786
patch: return block . is CaMeL Function && block . is CaMeL Function )
rank: 457
score: 98.77477349175348
patch: return ref . get CaMeL Basic CaMeL Block ( ) . get CaMeL Parent ( ) ;
rank: 457
score: 98.65975613064236
patch: return block . is CaMeL Statement ) ;
rank: 457
score: 98.59540557861328
patch: { return false ; } } }
rank: 457
score: 98.47864641462054
patch: break ; } ++ break ;
rank: 457
score: 98.45052337646484
patch: if ( ; ; break ; }
rank: 457
score: 98.3187255859375
patch: is CaMeL Function = false ;
rank: 457
score: 98.30260467529297
patch: if ; break ; System ; ;
rank: 457
score: 98.25387573242188
patch: System . else ( $STRING$ ) ;
rank: 458
score: 98.97267252604166
patch: return block . get CaMeL Basic CaMeL Block ( ) != null ; }
rank: 458
score: 98.77467447916666
patch: if ( this . ! block . is CaMeL Function ) { break ;
rank: 458
score: 98.65853881835938
patch: if ( block . is CaMeL Constructor ( ) ) {
rank: 458
score: 98.5953598022461
patch: return break ; } } finally ;
rank: 458
score: 98.47820281982422
patch: break ; } break ; / ;
rank: 458
score: 98.31551688058036
patch: break ? false : false ;
rank: 458
score: 98.30256483289931
patch: break ; else if break ; break ;
rank: 458
score: 98.30038452148438
patch: if ( block != null ) {
rank: 458
score: 98.25117710658482
patch: if ( ) { break ;
rank: 459
score: 98.77439528245192
patch: if ( block . is CaMeL Start ) { return false ;
rank: 459
score: 98.59441375732422
patch: { break ; } break ; }
rank: 459
score: 98.4781723022461
patch: break ; break ; } finally ;
rank: 459
score: 98.44961886935764
patch: if ( break ; else break ; }
rank: 459
score: 98.31070709228516
patch: block . is CaMeL Function ( )
rank: 459
score: 98.3022705078125
patch: return false ; } if break ; break ;
rank: 459
score: 98.30027770996094
patch: return false ; return true ; }
rank: 459
score: 98.24991280691964
patch: throw new Error ( ) ;
rank: 460
score: 98.97216796875
patch: if ( ! block . is CaMeL Function ) break ;
rank: 460
score: 98.77386005108173
patch: if ( block . is CaMeL Cast ) { return false ;
rank: 460
score: 98.658203125
patch: if ( element . is CaMeL Function ) {
rank: 460
score: 98.59412638346355
patch: } if break ; }
rank: 460
score: 98.47788492838542
patch: finally { break ; } break ; }
rank: 460
score: 98.44905853271484
patch: return ; } else { return ;
rank: 460
score: 98.30196126302083
patch: if break ; break ; break ; ;
rank: 460
score: 98.24877166748047
patch: throw * ? false : true ;
rank: 461
score: 98.7737704190341
patch: retval = block . is CaMeL Function ( ) ;
rank: 461
score: 98.47783067491319
patch: break ; break ; } break ; ;
rank: 461
score: 98.44860161675348
patch: break ; } else if ( block ;
rank: 461
score: 98.30976213727679
patch: break ( Basic CaMeL Block )
rank: 461
score: 98.30116102430556
patch: break ; break ; / / break ;
rank: 461
score: 98.29978724888393
patch: break - 1 ; } }
rank: 462
score: 98.97176920572916
patch: return block . get CaMeL In ( ) . is CaMeL Function ) ;
rank: 462
score: 98.7736307779948
patch: if ( block . is CaMeL Annotation ) { break ;
rank: 462
score: 98.59326171875
patch: return ; ; } return ;
rank: 462
score: 98.47764756944444
patch: Pos break ; break ; if break ;
rank: 462
score: 98.30101013183594
patch: if ; = 1 ; break ;
rank: 462
score: 98.2440185546875
patch: return true ; } else { }
rank: 463
score: 98.77335357666016
patch: loop = ( Basic CaMeL Block ) ref . get CaMeL Parent ( ) ;
rank: 463
score: 98.65580444335937
patch: ret = block . is CaMeL Function ) ;
rank: 463
score: 98.47731018066406
patch: return false ; break ; } ;
rank: 463
score: 98.44590250651042
patch: / * break * /
rank: 463
score: 98.30424499511719
patch: return block != null - 1 ;
rank: 463
score: 98.30084228515625
patch: break ; if ; ; if ; break ;
rank: 463
score: 98.24293736049107
patch: return ( false ) ; }
rank: 464
score: 98.97113800048828
patch: return block . is CaMeL Function && ! ! block . is CaMeL Function )
rank: 464
score: 98.65489612926136
patch: return block . is CaMeL Local ( ) ; }
rank: 464
score: 98.59284210205078
patch: return false ; ; } else {
rank: 464
score: 98.47684326171876
patch: else break ; ;
rank: 464
score: 98.44589669363839
patch: break ; default break ; }
rank: 464
score: 98.30079956054688
patch: if break ; break ; while ; break ;
rank: 464
score: 98.29826524522569
patch: synchronized ( break ) { break ; }
rank: 464
score: 98.24169921875
patch: throw new Throwable ( ) ;
rank: 465
score: 98.97113800048828
patch: return = block . get CaMeL Parent ( ) . is CaMeL Function ) ;
rank: 465
score: 98.654052734375
patch: t = ref . get CaMeL Parent ( ) ;
rank: 465
score: 98.59259033203125
patch: this . break break ; } }
rank: 465
score: 98.47670200892857
patch: } finally ; break ; }
rank: 465
score: 98.44483100043402
patch: break ; } / * break ; }
rank: 465
score: 98.30042114257813
patch: break ; ; ; if ; if break ;
rank: 465
score: 98.29787772042411
patch: break false ; break ; }
rank: 465
score: 98.24001057942708
patch: return ) ; } }
rank: 466
score: 98.97080891927084
patch: if ( ! block . is CaMeL Function ) { return false ; }
rank: 466
score: 98.77215021306819
patch: return ref . is CaMeL Function ( $STRING$ ) ;
rank: 466
score: 98.65399724786931
patch: state = block . get CaMeL Parent ( ) ;
rank: 466
score: 98.59193725585938
patch: return false ; } } else = break ;
rank: 466
score: 98.47643171037946
patch: catch break ; break ; ;
rank: 466
score: 98.44252232142857
patch: break ; else break ; }
rank: 466
score: 98.30039672851562
patch: if $NUMBER$ ; break ; break ; break ;
rank: 466
score: 98.29775565011161
patch: break false ; break false ;
rank: 467
score: 98.96951114430146
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) - true ;
rank: 467
score: 98.6504239169034
patch: return if ( block . is CaMeL Function ) {
rank: 467
score: 98.4761962890625
patch: break ; break ; } for break ;
rank: 467
score: 98.44247436523438
patch: if ( false ) break ; }
rank: 467
score: 98.30035400390625
patch: if break ; if ; break ; break ;
rank: 467
score: 98.29725646972656
patch: break ; } else return true ;
rank: 467
score: 98.29723358154297
patch: if ( ! is CaMeL Function )
rank: 467
score: 98.23805454799107
patch: return ( ! false ) ;
rank: 468
score: 98.96922392003677
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ) + null ;
rank: 468
score: 98.77152506510417
patch: if ( parent . is CaMeL Function ) { break ;
rank: 468
score: 98.65025745738636
patch: throw if ( block . is CaMeL Function ) {
rank: 468
score: 98.5903564453125
patch: this . break ; } else return true ;
rank: 468
score: 98.4761734008789
patch: finally { value ; break ; }
rank: 468
score: 98.44194793701172
patch: break ; } * break ; }
rank: 468
score: 98.29992065429687
patch: break ; break ; } ; if break ;
rank: 468
score: 98.29489135742188
patch: return block is CaMeL Function ) ;
rank: 468
score: 98.23785400390625
patch: return true ; } / * /
rank: 469
score: 98.96867370605469
patch: return block . is CaMeL Function && ( ref . is CaMeL Function ) ;
rank: 469
score: 98.77141927083333
patch: if ( ref . is CaMeL Function ( ) ) { return false ;
rank: 469
score: 98.59033203125
patch: return break ; } } else }
rank: 469
score: 98.4759521484375
patch: break ; break ; } while break ;
rank: 469
score: 98.44159613715277
patch: if ; } else { break ; }
rank: 469
score: 98.29926300048828
patch: if ; = break ; while ;
rank: 469
score: 98.29596625434027
patch: if ( ! break ) break ; }
rank: 469
score: 98.29432896205357
patch: return ref . return false ;
rank: 469
score: 98.23758370535714
patch: return return true ; } }
rank: 470
score: 98.96826171875
patch: return block . is CaMeL Function = ! block . is CaMeL Function ;
rank: 470
score: 98.6492919921875
patch: return block . is CaMeL Anonymous ( ) ;
rank: 470
score: 98.58976440429687
patch: return break ; } } else return true ;
rank: 470
score: 98.29876098632812
patch: / if break ; break ; if break ;
rank: 470
score: 98.23665945870536
patch: return 0 ; } else {
rank: 471
score: 98.7713623046875
patch: ref . is CaMeL Function = block . is CaMeL Function ( ) ; break ;
rank: 471
score: 98.64923095703125
patch: = block . get CaMeL Parent ( ) . get CaMeL
rank: 471
score: 98.58969116210938
patch: return break ; } else return break ; }
rank: 471
score: 98.43952772352431
patch: return false ; } / * break ;
rank: 471
score: 98.29796142578125
patch: if ; = break ; if ; break ;
rank: 472
score: 98.9676742553711
patch: return block . get CaMeL Parent ( ) . is CaMeL Function != null ;
rank: 472
score: 98.64784934303977
patch: arg = block . get CaMeL Parent ( ) ;
rank: 472
score: 98.58887939453125
patch: return true ; } } else return null ;
rank: 472
score: 98.47525787353516
patch: break ; / / if break ;
rank: 472
score: 98.43897356305804
patch: break ; - 1 ; }
rank: 472
score: 98.29781494140624
patch: break ; if ; = start ; break ;
rank: 472
score: 98.29537527901786
patch: break super . break ; }
rank: 472
score: 98.29007393973214
patch: break Assignment . return false ;
rank: 472
score: 98.23483712332589
patch: buf . run ( ) ;
rank: 473
score: 98.64489067925348
patch: return block . is CaMeL Block ) ;
rank: 473
score: 98.58876037597656
patch: return break ; } } true ;
rank: 473
score: 98.47441948784723
patch: return false ; try ; if break ;
rank: 473
score: 98.29765489366319
patch: return ; if ; break ; break ;
rank: 473
score: 98.2342529296875
patch: throw new ? false : false ;
rank: 474
score: 98.96730041503906
patch: return block . get CaMeL Basic CaMeL Block ( ) . equals ( ) ;
rank: 474
score: 98.7708740234375
patch: if ( ! ( block . is CaMeL Function ) ) { break ;
rank: 474
score: 98.58820452008929
patch: { return true ; } }
rank: 474
score: 98.43866644965277
patch: return ; } else { return false ;
rank: 474
score: 98.29671478271484
patch: if ; break ; break ; /
rank: 474
score: 98.2939453125
patch: removed = true ; break ;
rank: 474
score: 98.28716278076172
patch: return false ? true : false ;
rank: 474
score: 98.23111724853516
patch: System . else ( false ) ;
rank: 475
score: 98.96675109863281
patch: try { return block . get CaMeL Parent ( ) . is CaMeL Function )
rank: 475
score: 98.770654296875
patch: return ref . is CaMeL Function ( ) ; } } return true ;
rank: 475
score: 98.64326615767045
patch: v = block . get CaMeL Parent ( ) ;
rank: 475
score: 98.58818969726562
patch: return break ; } finally if break ; }
rank: 475
score: 98.47399139404297
patch: finally { break ; ; ; }
rank: 475
score: 98.29656982421875
patch: break ; if ; break ; = break ;
rank: 475
score: 98.29384068080357
patch: final int break = break ;
rank: 475
score: 98.2840347290039
patch: break ( Basic CaMeL Block ) ref
rank: 475
score: 98.23092215401786
patch: * ) { return false ;
rank: 476
score: 98.64046020507813
patch: if ( block . is CaMeL Resolved ) {
rank: 476
score: 98.588134765625
patch: if break ; break ; } }
rank: 476
score: 98.47392272949219
patch: break ; } * if break ;
rank: 476
score: 98.43707275390625
patch: target ; return false ; }
rank: 476
score: 98.29648659446023
patch: if break ; break ; ; if ; break ;
rank: 476
score: 98.2923583984375
patch: break ; } catch ( ;
rank: 476
score: 98.22850690569196
patch: break ) { return false ;
rank: 477
score: 98.96619524274554
patch: ref . add ( block . get CaMeL Parent ( ) ) ;
rank: 477
score: 98.6398681640625
patch: if ( block . is CaMeL Live ) {
rank: 477
score: 98.58807983398438
patch: return false ; } finally { return false ;
rank: 477
score: 98.4737548828125
patch: else { break ; } continue ;
rank: 477
score: 98.43660191127232
patch: if ( ; else break ;
rank: 477
score: 98.29560004340277
patch: if false ; break ; for break ;
rank: 477
score: 98.2923355102539
patch: break ; } do { break ;
rank: 477
score: 98.2811279296875
patch: is CaMeL Function . return false ;
rank: 478
score: 98.58792114257812
patch: { return break ; } } }
rank: 478
score: 98.47286987304688
patch: break ; ; break ; } ;
rank: 478
score: 98.43315972222223
patch: return true ; } else if ( ;
rank: 478
score: 98.29557661576705
patch: if ; break ; if ; break ; if ;
rank: 478
score: 98.29214138454861
patch: finished = true ; return true ; }
rank: 478
score: 98.279541015625
patch: return false ; else return false ;
rank: 478
score: 98.22731236049107
patch: return is CaMeL True ) ;
rank: 479
score: 98.96521759033203
patch: return block . get CaMeL Basic CaMeL Block ( ) == null . false ;
rank: 479
score: 98.63920084635417
patch: { block = block . get CaMeL Parent ( ) ;
rank: 479
score: 98.47280544704861
patch: } finally ; break ; if break ;
rank: 479
score: 98.432861328125
patch: result [ 0 ] = false ;
rank: 479
score: 98.294970703125
patch: if break ; ;
rank: 479
score: 98.2920633951823
patch: break = true ; }
rank: 479
score: 98.27842494419643
patch: return ) { return false ;
rank: 480
score: 98.96480305989583
patch: is CaMeL Function = ! block . is CaMeL Function ;
rank: 480
score: 98.6388827237216
patch: elem = block . get CaMeL Parent ( ) ;
rank: 480
score: 98.58766174316406
patch: return false ; } else continue ;
rank: 480
score: 98.47256130642361
patch: catch ) ; break ; if break ;
rank: 480
score: 98.43223063151042
patch: break ; } if ( ! ; ;
rank: 480
score: 98.29489474826389
patch: break ; break ; if ; * /
rank: 480
score: 98.29197692871094
patch: failed = true ; break ; }
rank: 480
score: 98.22435651506696
patch: return - 1 . false ;
rank: 481
score: 98.96359688895089
patch: break ; } block = ref . get CaMeL Parent ( ) ;
rank: 481
score: 98.76970966045673
patch: if ( block . is CaMeL Name ) { return false ;
rank: 481
score: 98.63866424560547
patch: case Basic CaMeL Block . ) {
rank: 481
score: 98.58736843532986
patch: break ; } } else return break ;
rank: 481
score: 98.47210693359375
patch: while true ; break ;
rank: 481
score: 98.29484252929687
patch: break ; ; if break ; break ; }
rank: 481
score: 98.2918192545573
patch: if ( ! break ;
rank: 482
score: 98.96293640136719
patch: return block . is CaMeL Function = ! block . is CaMeL Function ) ;
rank: 482
score: 98.76961576021634
patch: if ( ! ref . is CaMeL Function ) { break ;
rank: 482
score: 98.58723754882813
patch: return false ; break ; break ; } }
rank: 482
score: 98.47122955322266
patch: break ; if false ; break ;
rank: 482
score: 98.43158830915179
patch: this . ; break ; }
rank: 482
score: 98.29475402832031
patch: for ; ; break ; break ;
rank: 482
score: 98.29039001464844
patch: match = break ; break ; }
rank: 483
score: 98.962109375
patch: return block . is CaMeL Function && block . is CaMeL Function ; }
rank: 483
score: 98.63697306315105
patch: if ( block . get CaMeL Basic CaMeL Block ( )
rank: 483
score: 98.58642578125
patch: return true ; } catch ; }
rank: 483
score: 98.47037506103516
patch: break ; } / if break ;
rank: 483
score: 98.43145751953125
patch: break ; } if ( ++ ;
rank: 483
score: 98.29437255859375
patch: } if break ;
rank: 483
score: 98.29009137834821
patch: repaint ( break ) ; }
rank: 483
score: 98.26725006103516
patch: return ref . is CaMeL Function )
rank: 483
score: 98.22013636997768
patch: return ( ! true ) ;
rank: 484
score: 98.96080017089844
patch: return block . is CaMeL Function && block . get CaMeL Parent ( ) ;
rank: 484
score: 98.63691850142045
patch: return ! block . is CaMeL Function ) ; }
rank: 484
score: 98.58609347873264
patch: System . out . println break ; }
rank: 484
score: 98.47026231553819
patch: break ; } break ; return true ;
rank: 484
score: 98.29400634765625
patch: break ; if break ; if ; ;
rank: 484
score: 98.29000091552734
patch: body = break ; break ; }
rank: 484
score: 98.21637834821429
patch: return false ; } ) {
rank: 485
score: 98.96037946428571
patch: block . equals ( block . get CaMeL Parent ( ) ) ;
rank: 485
score: 98.7685905905331
patch: block = block . get CaMeL Parent ( ) . get CaMeL Method ( ) ;
rank: 485
score: 98.63580322265625
patch: retval = block . is CaMeL Function ) ;
rank: 485
score: 98.58554077148438
patch: return false ; else return false ; } }
rank: 485
score: 98.47016143798828
patch: break ; / ; if break ;
rank: 485
score: 98.29362349076705
patch: break ; break ; if break ; break ; }
rank: 485
score: 98.28936767578125
patch: state = break ; break ;
rank: 485
score: 98.26535470145089
patch: result = block . false ;
rank: 486
score: 98.9603515625
patch: return block . is CaMeL Function || ! block . is CaMeL Function ;
rank: 486
score: 98.76811667049633
patch: block . is CaMeL Function = ! block . is CaMeL Function ) ; break ;
rank: 486
score: 98.63559977213542
patch: if ( block . is CaMeL Alive ( ) ) {
rank: 486
score: 98.5847396850586
patch: return true ; } finally { }
rank: 486
score: 98.46988351004464
patch: m 0 ; break ; }
rank: 486
score: 98.42997741699219
patch: break ; } block = block ;
rank: 486
score: 98.29277886284723
patch: break ; break ; if ; continue ;
rank: 486
score: 98.28901672363281
patch: try { break ; } catch ;
rank: 487
score: 98.58409881591797
patch: return ; ; } return true ;
rank: 487
score: 98.46980503627232
patch: ++ break ; } break ;
rank: 487
score: 98.42997233072917
patch: break ; } if ( block ; ;
rank: 487
score: 98.2921142578125
patch: return * * break ; / break ;
rank: 487
score: 98.28712681361607
patch: Assertion CaMeL Error break ; }
rank: 487
score: 98.24932861328125
patch: break * * * /
rank: 487
score: 98.21048409598214
patch: return false ; } / *
rank: 488
score: 98.95751953125
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function ) false ;
rank: 488
score: 98.76804762620192
patch: if ( block . is CaMeL Constructor ) { return false ;
rank: 488
score: 98.63368918678977
patch: scope = block . get CaMeL Parent ( ) ;
rank: 488
score: 98.58346896701389
patch: return break ; } } break ; }
rank: 488
score: 98.46894182477679
patch: value = break || null ;
rank: 488
score: 98.29175914417614
patch: break ; if break ; break ; if break ;
rank: 488
score: 98.2483139038086
patch: break ; else { return false ;
rank: 488
score: 98.21037074497768
patch: throw ( Exception ) null ;
rank: 489
score: 98.76792399088542
patch: if ( block . is CaMeL Statement ) { break ;
rank: 489
score: 98.63287908380681
patch: { if ( ref . is CaMeL Function ) {
rank: 489
score: 98.58343505859375
patch: return true ; } } } break ;
rank: 489
score: 98.4681396484375
patch: break ; out . println break ; }
rank: 489
score: 98.42978922526042
patch: break ; } continue ;
rank: 489
score: 98.29148171164773
patch: throw new Runtime CaMeL Exception ; Exception ( break ;
rank: 489
score: 98.28305053710938
patch: break && break ; } break ;
rank: 489
score: 98.24774169921875
patch: return is CaMeL Function ;
rank: 490
score: 98.95380510602679
patch: block . add ( block . get CaMeL Parent ( ) ) ;
rank: 490
score: 98.7677001953125
patch: break ( Basic CaMeL Block ) block . is CaMeL Function ) ;
rank: 490
score: 98.63240189985795
patch: true ; return block . is CaMeL Function ) ;
rank: 490
score: 98.58311462402344
patch: return break ; } } continue ;
rank: 490
score: 98.46780056423611
patch: break ; } break ; return break ;
rank: 490
score: 98.42910766601562
patch: break ; } } finally { ;
rank: 490
score: 98.29105834960937
patch: break ; break ; if ; ; break ;
rank: 490
score: 98.28299289279514
patch: result = false ; return true ; }
rank: 490
score: 98.24626922607422
patch: return block . is CaMeL Function _
rank: 490
score: 98.20679582868304
patch: throw ( Exception ) block ;
rank: 491
score: 98.76742350260416
patch: ref = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 491
score: 98.63227982954545
patch: return ref . is CaMeL Function ) ; } else
rank: 491
score: 98.58279418945312
patch: return break ; else return false ;
rank: 491
score: 98.4677225748698
patch: break ; synchronized break ;
rank: 491
score: 98.42877197265625
patch: if ( ! ; } break ;
rank: 491
score: 98.29051624644886
patch: if ; break ; / / break ; break ;
rank: 491
score: 98.24506487165179
patch: } else { return true ;
rank: 491
score: 98.20499267578126
patch: break } else {
rank: 492
score: 98.95337785993304
patch: return block . is CaMeL Function = block . is CaMeL Function ;
rank: 492
score: 98.76728515625
patch: if ( block . is CaMeL Local ( ) ) { return false ;
rank: 492
score: 98.63203125
patch: return ( block . is CaMeL Function ) {
rank: 492
score: 98.58211844308036
patch: { return ; ; } }
rank: 492
score: 98.46763392857143
patch: synchronized ( false ; break ;
rank: 492
score: 98.4285659790039
patch: return true ; } * break ;
rank: 492
score: 98.29046630859375
patch: if ; = node ; break ;
rank: 492
score: 98.28172956194196
patch: return ! ! break ; }
rank: 492
score: 98.20444742838542
patch: return Assignment . true ;
rank: 493
score: 98.9506591796875
patch: return block . get CaMeL Parent ( ) . is CaMeL Function ; }
rank: 493
score: 98.76686197916666
patch: return ref . is CaMeL Function ( ) ; } else { break ;
rank: 493
score: 98.6319580078125
patch: expr = block . get CaMeL Parent ( ) ;
rank: 493
score: 98.58180454799107
patch: return ; ; } catch ;
rank: 493
score: 98.46723768446181
patch: break ; } break ; case break ;
rank: 493
score: 98.4281997680664
patch: throw new break - 1 ; }
rank: 493
score: 98.2896484375
patch: if ; = break ; while ; break ;
rank: 493
score: 98.28136444091797
patch: added = true ; break ; }
rank: 493
score: 98.24317932128906
patch: if ( ) { return false ;
rank: 494
score: 98.76682826450893
patch: if ( block . is CaMeL True ( ) ) { break ;
rank: 494
score: 98.63191528320313
patch: & ( block . is CaMeL Function ) ;
rank: 494
score: 98.5816162109375
patch: return break ; break ; } return false ;
rank: 494
score: 98.46694607204861
patch: value = break || break || break ;
rank: 494
score: 98.28959655761719
patch: return max ; println ; break ;
rank: 494
score: 98.28108723958333
patch: break ; default : return break ; }
rank: 494
score: 98.19903564453125
patch: result = block ;
rank: 495
score: 98.9501953125
patch: return block . equals ( ref . is CaMeL Function ) ;
rank: 495
score: 98.76630510602679
patch: return if ( block . is CaMeL Function ) { return false ;
rank: 495
score: 98.63123779296875
patch: if ( vars . is CaMeL Function ) {
rank: 495
score: 98.5810317993164
patch: if break ; } } break ;
rank: 495
score: 98.42696804470486
patch: break ; } * / return true ;
rank: 495
score: 98.28955078125
patch: if break ; break ; ; if ;
rank: 495
score: 98.27908325195312
patch: if ( break ) {
rank: 495
score: 98.19598388671875
patch: return Assignment . false ;
rank: 496
score: 98.7646484375
patch: if ( block . is CaMeL True ) { return false ;
rank: 496
score: 98.630419921875
patch: answer = block . is CaMeL Function ) ;
rank: 496
score: 98.58035278320312
patch: return 0 ; } catch break ;
rank: 496
score: 98.46658325195312
patch: finally ; break ; }
rank: 496
score: 98.42667643229167
patch: break ; } } while ( ; )
rank: 496
score: 98.28948974609375
patch: if break ; ; break ; }
rank: 496
score: 98.27828543526786
patch: break ; } final break ;
rank: 496
score: 98.19343784877232
patch: throw null ; } else {
rank: 497
score: 98.94523402622768
patch: return ref . is CaMeL Function || block . is CaMeL Function ;
rank: 497
score: 98.76463971819196
patch: return block . is CaMeL Function ) ; } else { break ;
rank: 497
score: 98.58003065321181
patch: return false ; break ; } else {
rank: 497
score: 98.46638488769531
patch: break ; ; / else break ;
rank: 497
score: 98.42647007533482
patch: return ; } * / ;
rank: 497
score: 98.28929901123047
patch: if ; break ; break ; else
rank: 497
score: 98.27775355747768
patch: if ( break ) break ;
rank: 498
score: 98.76459612165179
patch: else { if ( block . is CaMeL Function ) { break ;
rank: 498
score: 98.62877308238636
patch: { if ( block . is CaMeL Local ) {
rank: 498
score: 98.57990373883929
patch: } else { return ; }
rank: 498
score: 98.46638488769531
patch: try ; break ; } break ;
rank: 498
score: 98.42601667131696
patch: break ; } count -- ;
rank: 498
score: 98.28922119140626
patch: break ; if break ; } if break ;
rank: 498
score: 98.27694702148438
patch: throw new break ; } break ;
rank: 499
score: 98.9442889873798
patch: is CaMeL Function = ref . get CaMeL Parent ( ) ;
rank: 499
score: 98.62826538085938
patch: ; block = block . get CaMeL Parent ( ) ;
rank: 499
score: 98.5797119140625
patch: return null ; } else { return break ;
rank: 499
score: 98.46601867675781
patch: break ; * / if break ;
rank: 499
score: 98.4257303873698
patch: if ( ; break ;
rank: 499
score: 98.28887939453125
patch: if break ; ; break ; } break ;
rank: 499
score: 98.27681884765624
patch: break ) ; }
rank: 499
score: 98.18703787667411
patch: return $NUMBER$ ; } else {
rank: 500
score: 98.57950168185764
patch: this . break = break ; } }
rank: 500
score: 98.46590169270833
patch: return false ; try { if break ;
rank: 500
score: 98.42532009548611
patch: break ; } * / return false ;
rank: 500
score: 98.28882514105902
patch: break ; if ; ; break ; }
rank: 500
score: 98.27655901227679
patch: logger . info ( $STRING$ ;
rank: 500
score: 98.22398376464844
patch: if ( false ) { break ;
rank: 501
score: 98.6276346842448
patch: return block . is CaMeL Function ) ; } break ;
rank: 501
score: 98.57913208007812
patch: * * * * break ; }
rank: 501
score: 98.46553257533482
patch: catch false ; return false ;
rank: 501
score: 98.42359161376953
patch: break ; } * break ; ;
rank: 501
score: 98.28854370117188
patch: if ; / * / break ;
rank: 501
score: 98.27621459960938
patch: block = break ;
rank: 501
score: 98.18555908203125
patch: else return false ;
rank: 502
score: 98.76295979817708
patch: if ( block . is CaMeL Function ) { continue ;
rank: 502
score: 98.57791900634766
patch: return false ; break ; } finally
rank: 502
score: 98.46534729003906
patch: if break ; break ; ; ;
rank: 502
score: 98.42320033482143
patch: this . break ; } ;
rank: 502
score: 98.2876968383789
patch: return / break ; if break ;
rank: 502
score: 98.2232157389323
patch: return false : false ;
rank: 502
score: 98.18500627790179
patch: return Boolean . null ; }
rank: 503
score: 98.93978445870536
patch: return ( block . get CaMeL Parent ( ) != null ) ;
rank: 503
score: 98.76206461588542
patch: return ( block . is CaMeL Interface ( ) ) ;
rank: 503
score: 98.57789611816406
patch: return true ; } else return ;
rank: 503
score: 98.46514892578125
patch: break ; break ; } / * /
rank: 503
score: 98.42284478081598
patch: return true ; default : return false ;
rank: 503
score: 98.28762817382812
patch: return type ; println ; break ;
rank: 503
score: 98.22263590494792
patch: break + - 1 ;
rank: 503
score: 98.18325805664062
patch: else return false ; }
rank: 504
score: 98.93769182477679
patch: return block . is CaMeL Function && ref . is CaMeL Function ;
rank: 504
score: 98.5776611328125
patch: return false ; } } else throw break ;
rank: 504
score: 98.46509552001953
patch: finally { break ; } * /
rank: 504
score: 98.28742133246527
patch: System ; break ; println ; break ;
rank: 504
score: 98.27407836914062
patch: statements . add ( block ) ;
rank: 504
score: 98.2226333618164
patch: return block . is CaMeL Function *
rank: 505
score: 98.76099650065105
patch: if ( block . is CaMeL All ) { break ;
rank: 505
score: 98.62346055772569
patch: return block . is CaMeL New ) ;
rank: 505
score: 98.46407063802083
patch: break ; } break ; -- break ;
rank: 505
score: 98.421875
patch: if ( ! ; return false ; }
rank: 505
score: 98.28680419921875
patch: result ; break ; if ; break ;
rank: 505
score: 98.22259521484375
patch: return block != null - $NUMBER$ ;
rank: 505
score: 98.17894744873047
patch: return FALSE ;
rank: 506
score: 98.93585759943181
patch: return = block . get CaMeL Parent ( ) ;
rank: 506
score: 98.6230801669034
patch: return block . is CaMeL Function ) true ; }
rank: 506
score: 98.57716587611607
patch: break ; } } true ;
rank: 506
score: 98.42169952392578
patch: if ( ; break ; ; }
rank: 506
score: 98.27223205566406
patch: if ( ! is CaMeL Null )
rank: 506
score: 98.22000885009766
patch: throw $NUMBER$ ? true : false ;
rank: 506
score: 98.17699178059895
patch: return ref != null ;
rank: 507
score: 98.93386606069711
patch: return block . is CaMeL Function ) ? false : false ;
rank: 507
score: 98.76043701171875
patch: if ( block . is CaMeL Function ) { break ; break ;
rank: 507
score: 98.57708062065973
patch: this . break ; break ; } }
rank: 507
score: 98.46365966796876
patch: value ; break ;
rank: 507
score: 98.4209976196289
patch: break ; default : break ; ;
rank: 507
score: 98.286474609375
patch: break ; break ; if break ; if ;
rank: 507
score: 98.1727783203125
patch: throw null ; }
rank: 508
score: 98.62177068536931
patch: break ; return block . is CaMeL Function ) ;
rank: 508
score: 98.576904296875
patch: return false ; break ; else
rank: 508
score: 98.46360948350694
patch: value = break && break || break ;
rank: 508
score: 98.28545379638672
patch: while ; break ; if break ;
rank: 508
score: 98.21728515625
patch: return true ? false : true ;
rank: 508
score: 98.17184448242188
patch: return - 1 ; }
rank: 509
score: 98.931884765625
patch: ref = ref . get CaMeL Parent ( ) ;
rank: 509
score: 98.620361328125
patch: return ref . get CaMeL Basic CaMeL Block ( ) .
rank: 509
score: 98.57666625976563
patch: throw new Runtime CaMeL Exception ( Exception ) ;
rank: 509
score: 98.46318054199219
patch: try { break ; } ; ;
rank: 509
score: 98.41917588975694
patch: return ; } else { return ; }
rank: 509
score: 98.2851806640625
patch: if false ; break ; ; if break ;
rank: 509
score: 98.26975795200893
patch: for ( int ; ; )
rank: 509
score: 98.21681431361607
patch: break ; else return false ;
rank: 509
score: 98.16877092633929
patch: return { { return false ;
rank: 510
score: 98.75888296274039
patch: if ( block . is CaMeL Constant ) { return false ;
rank: 510
score: 98.61965942382812
patch: return block . is CaMeL Function ) ; break ; }
rank: 510
score: 98.5762939453125
patch: return false ; break ; break ; }
rank: 510
score: 98.4627685546875
patch: catch null ; break ; }
rank: 510
score: 98.28476784446023
patch: if ; break ; } if break ; break ;
rank: 510
score: 98.26927185058594
patch: target = break ; break ; }
rank: 510
score: 98.16798618861607
patch: if ( true ) break ;
rank: 511
score: 98.93013822115384
patch: block . get CaMeL Parent ( ) . return false ; }
rank: 511
score: 98.61940307617188
patch: if ( block . is CaMeL Private ) {
rank: 511
score: 98.57545301649306
patch: try { break ; } finally ; }
rank: 511
score: 98.41609409877232
patch: if ( ! ; } }
rank: 511
score: 98.28461371527777
patch: break ; } if ; if break ;
rank: 511
score: 98.26894124348958
patch: break false ; ; }
rank: 512
score: 98.92922537667411
patch: ref . is CaMeL Function = ! block . is CaMeL Function ;
rank: 512
score: 98.61865234375
patch: break && block . is CaMeL Function ) {
rank: 512
score: 98.57525634765625
patch: return break ; } } else { break ;
rank: 512
score: 98.46272277832031
patch: finally { break ; } ; *
rank: 512
score: 98.41603088378906
patch: break ; ; } } * /
rank: 512
score: 98.28394664417614
patch: break ; break ; if ; { break ; }
rank: 512
score: 98.21466064453125
patch: throw $NUMBER$ ? false : true ;
rank: 512
score: 98.16499837239583
patch: result = false ; }
rank: 513
score: 98.758544921875
patch: r = block . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 513
score: 98.6186279296875
patch: case ( block . is CaMeL Function ) {
rank: 513
score: 98.574951171875
patch: } return break ;
rank: 513
score: 98.46267361111111
patch: catch null ; break ; } break ;
rank: 513
score: 98.41595458984375
patch: if ( ; return ; }
rank: 513
score: 98.28360595703126
patch: break ; break ; println ; { break ;
rank: 513
score: 98.26645333426339
patch: result = break ; ; }
rank: 513
score: 98.21409388950893
patch: break + * * * /
rank: 513
score: 98.16435895647321
patch: return is CaMeL Local ) ;
rank: 514
score: 98.92692057291667
patch: ref = block . get CaMeL Parent ( ) ; }
rank: 514
score: 98.6175537109375
patch: item = ref . get CaMeL Parent ( ) ;
rank: 514
score: 98.46263885498047
patch: try { break ; ; ; }
rank: 514
score: 98.28316650390624
patch: if break ; break ; println ; break ;
rank: 514
score: 98.264404296875
patch: ok = true ; break ; }
rank: 514
score: 98.21213204520089
patch: break else { return false ;
rank: 514
score: 98.16372680664062
patch: return { break ; }
rank: 515
score: 98.75758870442708
patch: if ( block . is CaMeL Callable ) { break ;
rank: 515
score: 98.57459106445313
patch: return false ; } } } return break ;
rank: 515
score: 98.46255493164062
patch: value = break ; break ; }
rank: 515
score: 98.41500854492188
patch: break ; } / ;
rank: 515
score: 98.28312174479167
patch: if break ; break ; ; / /
rank: 515
score: 98.26425170898438
patch: break false ; break false ; }
rank: 515
score: 98.21126011439732
patch: is CaMeL Function = true ;
rank: 515
score: 98.16360909598214
patch: return 1 ; } else {
rank: 516
score: 98.7573750813802
patch: ! block . is CaMeL Function ) { return false ;
rank: 516
score: 98.61595323350694
patch: return block . is CaMeL Return ) ;
rank: 516
score: 98.57435913085938
patch: return true ; } break ; break ; }
rank: 516
score: 98.46235002790179
patch: else { ; break ; }
rank: 516
score: 98.41361999511719
patch: return true ; } } finally {
rank: 516
score: 98.28279622395833
patch: return ; if break ; for break ;
rank: 516
score: 98.26407296316964
patch: return this . break ; }
rank: 516
score: 98.21105194091797
patch: break break ;
rank: 516
score: 98.16351318359375
patch: throw new println ( ) ;
rank: 517
score: 98.92533656529018
patch: return ref . get CaMeL Parent ( ) . is CaMeL Function )
rank: 517
score: 98.61588541666667
patch: ++ block . get CaMeL Parent ( ) . get CaMeL
rank: 517
score: 98.57425265842014
patch: return null ; } else { break ;
rank: 517
score: 98.41314697265625
patch: break ; } this . ; }
rank: 517
score: 98.28204900568181
patch: break ; if break ; if break ; break ;
rank: 517
score: 98.26395670572917
patch: for ( ; ; )
rank: 517
score: 98.16212158203125
patch: return ; } }
rank: 518
score: 98.75612967354911
patch: if ( block . is CaMeL Constructor ( ) ) { break ;
rank: 518
score: 98.6153076171875
patch: if ( block . is CaMeL None ) {
rank: 518
score: 98.57408796037946
patch: break ; } } else ;
rank: 518
score: 98.4617691040039
patch: break ; break ; catch break ;
rank: 518
score: 98.28174937855114
patch: if break ; break ; if ; break ; /
rank: 518
score: 98.20989990234375
patch: throw $NUMBER$ ? false : false ;
rank: 518
score: 98.1609598795573
patch: return Boolean . null ;
rank: 519
score: 98.755615234375
patch: if ( block . is CaMeL Function ( ) ) { return ;
rank: 519
score: 98.61492919921875
patch: table . return block . is CaMeL Function ) ; }
rank: 519
score: 98.57357788085938
patch: } break ; }
rank: 519
score: 98.46164957682292
patch: break ; break ; } * * ;
rank: 519
score: 98.28132768110795
patch: if ; break ; if break ; for break ;
rank: 519
score: 98.260498046875
patch: result [ 0 ] = break ;
rank: 519
score: 98.20844268798828
patch: return false ; else return true ;
rank: 520
score: 98.92047588641827
patch: block . get CaMeL Basic CaMeL Block ( ) . break ;
rank: 520
score: 98.75530133928571
patch: if ( block . is CaMeL Name ( ) ) { break ;
rank: 520
score: 98.61484985351562
patch: if ( block . contains CaMeL Function ) {
rank: 520
score: 98.57356092664931
patch: return break ; } catch ; break ;
rank: 520
score: 98.46161651611328
patch: break ; ; return false ; ;
rank: 520
score: 98.28125
patch: if * / break ;
rank: 520
score: 98.2599105834961
patch: boolean success = false ; break ;
rank: 520
score: 98.2081069946289
patch: break . is CaMeL Function ( )
rank: 520
score: 98.15883091517857
patch: return FALSE ; } else {
rank: 521
score: 98.57351684570312
patch: return ; ; } } else return break ;
rank: 521
score: 98.46129608154297
patch: break ; ; / ; break ;
rank: 521
score: 98.41035679408482
patch: if ( ; return false ;
rank: 521
score: 98.28092447916667
patch: break ; break ; while ; break ;
rank: 521
score: 98.207568359375
patch: break + 1 ;
rank: 522
score: 98.917724609375
patch: break ; } ref = block . get CaMeL Parent ( ) ;
rank: 522
score: 98.6138916015625
patch: body = block . get CaMeL Parent ( ) ; }
rank: 522
score: 98.40970865885417
patch: break ; } / * * * ;
rank: 522
score: 98.25946044921875
patch: break return true ; }
rank: 523
score: 98.91214425223214
patch: if ( ! block . is CaMeL Function ) { return true ;
rank: 523
score: 98.75477183948864
patch: loop = ref . get CaMeL Parent ( ) ;
rank: 523
score: 98.61370849609375
patch: result = block . get CaMeL Basic CaMeL Block ) ;
rank: 523
score: 98.460693359375
patch: -- break ; if break ;
rank: 523
score: 98.4096908569336
patch: break ; } } throw new ;
rank: 523
score: 98.28021850585938
patch: if $NUMBER$ ; break ; if ; break ;
rank: 523
score: 98.25918579101562
patch: return true ; return true ; }
rank: 523
score: 98.20034790039062
patch: throw $NUMBER$ ? true : true ;
rank: 523
score: 98.14957972935268
patch: if ( false ) break ;
rank: 524
score: 98.9110107421875
patch: ref . get CaMeL Parent ( ) . { return false ;
rank: 524
score: 98.61280517578125
patch: { if ( block . is CaMeL Function )
rank: 524
score: 98.57215118408203
patch: break break ; } catch break ;
rank: 524
score: 98.46054077148438
patch: break ; break ; } / /
rank: 524
score: 98.40963309151786
patch: break ; } super . ;
rank: 524
score: 98.27950032552083
patch: break ; ; / ; if break ;
rank: 524
score: 98.14935302734375
patch: buf . println ( ) ;
rank: 525
score: 98.75449916294643
patch: if ( block . is CaMeL Constant ( ) ) { break ;
rank: 525
score: 98.57161712646484
patch: return ; ; } else break ;
rank: 525
score: 98.46036202566964
patch: finally { break ; } *
rank: 525
score: 98.40951102120536
patch: found = ; break ; }
rank: 525
score: 98.2787353515625
patch: } if break ; break ; if break ;
rank: 525
score: 98.25828552246094
patch: block = break ; break ; }
rank: 525
score: 98.19723946707589
patch: for ( Basic CaMeL Block 1
rank: 525
score: 98.14864676339286
patch: return { break ; } }
rank: 526
score: 98.90935407366071
patch: block . get CaMeL Parent ( ) . { return false ; }
rank: 526
score: 98.57103729248047
patch: return false ; } break ; else
rank: 526
score: 98.45999145507812
patch: else break ; ; if break ;
rank: 526
score: 98.40888977050781
patch: break ; } } ; finally {
rank: 526
score: 98.27867296006944
patch: break ; if ; println ; break ;
rank: 526
score: 98.19686889648438
patch: return TRUE ? false : false ;
rank: 527
score: 98.57060241699219
patch: return ; ; } else return ;
rank: 527
score: 98.45975494384766
patch: break ; } break ; / /
rank: 527
score: 98.27818714488636
patch: if $NUMBER$ ; break ; break ; if break ;
rank: 527
score: 98.25767517089844
patch: running = true ; break ; }
rank: 527
score: 98.19420623779297
patch: return break ? false : false ;
rank: 528
score: 98.75387369791666
patch: return block . get CaMeL Value ( ) . equals ( $STRING$ ) ;
rank: 528
score: 98.60853271484375
patch: if ( ! block . is CaMeL Function )
rank: 528
score: 98.45935668945313
patch: break = break ;
rank: 528
score: 98.40824890136719
patch: break ; } if ( true ;
rank: 528
score: 98.27733357747395
patch: if name ; break ;
rank: 528
score: 98.25652313232422
patch: list . add ( block ) ;
rank: 528
score: 98.1941909790039
patch: break * * * / ) ;
rank: 528
score: 98.142236328125
patch: { return true ;
rank: 529
score: 98.7533467610677
patch: if ( block . is CaMeL Struct ) { break ;
rank: 529
score: 98.6080830891927
patch: t = block . get CaMeL Parent ( ) ; }
rank: 529
score: 98.57024383544922
patch: return false ; } finally ; }
rank: 529
score: 98.45899309430804
patch: break ; } if true ;
rank: 529
score: 98.40626525878906
patch: throw new Error ( $STRING$ ; }
rank: 529
score: 98.27648315429687
patch: return ; if ; = break ; break ;
rank: 529
score: 98.25479561941964
patch: throw new Error ( $STRING$ ;
rank: 529
score: 98.19417572021484
patch: break ? return false : false ;
rank: 529
score: 98.13951110839844
patch: throw true ;
rank: 530
score: 98.90413724459134
patch: return block . is CaMeL Function && is CaMeL Function ) ;
rank: 530
score: 98.57023620605469
patch: throw null ; } break ; }
rank: 530
score: 98.45893859863281
patch: try { break ; return break ;
rank: 530
score: 98.27623901367187
patch: if break ; break ; if break ; ;
rank: 530
score: 98.2536849975586
patch: removed = false ; break ; }
rank: 530
score: 98.13862827845982
patch: return - 1 . true ;
rank: 531
score: 98.9022216796875
patch: return ref . is CaMeL Function ) . is CaMeL Function ;
rank: 531
score: 98.56919352213542
patch: return null ; } catch ; break ;
rank: 531
score: 98.4587910970052
patch: } finally { break ;
rank: 531
score: 98.27564832899306
patch: return ; = break ; for break ;
rank: 531
score: 98.25260707310268
patch: cleanup ( break ) ; }
rank: 531
score: 98.19061279296875
patch: if ( ! ) { break ;
rank: 531
score: 98.1384785970052
patch: break ; } } }
rank: 532
score: 98.90213716947116
patch: return false ; } return block . is CaMeL Function ) ;
rank: 532
score: 98.56842041015625
patch: return ; ; } finally
rank: 532
score: 98.45827907986111
patch: return false ; break ; for break ;
rank: 532
score: 98.40512424045139
patch: return false ; } if ( ! ;
rank: 532
score: 98.25126647949219
patch: completed = break ; break ; }
rank: 532
score: 98.19044712611607
patch: return ) ? return false ;
rank: 532
score: 98.13367571149554
patch: return $STRING$ ; } else {
rank: 533
score: 98.75286310369319
patch: return ref . is CaMeL Function ) ; break ;
rank: 533
score: 98.60595703125
patch: result = ! block . is CaMeL Function ) {
rank: 533
score: 98.56832885742188
patch: if break ; } break ; }
rank: 533
score: 98.4049072265625
patch: if ( success ) { break ; }
rank: 533
score: 98.27501220703125
patch: if break ; break ; } if break ;
rank: 533
score: 98.25108337402344
patch: break false ; } return false ;
rank: 534
score: 98.60557047526042
patch: return block . is CaMeL Function || block . get CaMeL
rank: 534
score: 98.56747000558036
patch: return ; break ; } }
rank: 534
score: 98.45546177455357
patch: -- break ; } break ;
rank: 534
score: 98.40476481119792
patch: break ; ; } / * break ;
rank: 534
score: 98.27489013671875
patch: else if break ;
rank: 534
score: 98.18466186523438
patch: return block . true ;
rank: 534
score: 98.13175201416016
patch: throw false ;
rank: 535
score: 98.89942515980114
patch: return block . is CaMeL Function ) + 0 ;
rank: 535
score: 98.75094839242789
patch: if ( block . is CaMeL Function ) { { break ;
rank: 535
score: 98.56739044189453
patch: return break ; } break ; else
rank: 535
score: 98.45520891462054
patch: break ; ; if false ;
rank: 535
score: 98.40469796316964
patch: switch ( block ; break ;
rank: 535
score: 98.27421739366319
patch: break ; ; ; if break ; }
rank: 535
score: 98.24952697753906
patch: logger . info ( $STRING$ + ;
rank: 535
score: 98.18145751953125
patch: warn ( $STRING$ ) ;
rank: 535
score: 98.13065185546876
patch: return } else {
rank: 536
score: 98.75054524739583
patch: if ( block . is CaMeL Declaration ( ) ) { return false ;
rank: 536
score: 98.56690325055804
patch: break ; break ; } else
rank: 536
score: 98.45472935267857
patch: } else ; break ; }
rank: 536
score: 98.27399359809027
patch: break ; } if break ; if ;
rank: 536
score: 98.24939836774554
patch: changed = false ; break ;
rank: 536
score: 98.12959798177083
patch: return this . true ;
rank: 537
score: 98.75052083333334
patch: else if ( block . is CaMeL Function ( ) ) { break ;
rank: 537
score: 98.60452270507812
patch: rblock = block . get CaMeL Parent ( ) ;
rank: 537
score: 98.4546890258789
patch: catch false ; break ; ; ;
rank: 537
score: 98.40447998046875
patch: break ; default : System . break ;
rank: 537
score: 98.2735595703125
patch: break ; break ; else
rank: 537
score: 98.24907684326172
patch: changed = break ; break ; }
rank: 537
score: 98.17565046037946
patch: return false ; * * /
rank: 537
score: 98.1274922688802
patch: { return true ; }
rank: 538
score: 98.89513221153847
patch: return block . is CaMeL Function ) ? false : true ;
rank: 538
score: 98.56536865234375
patch: return null ; } } catch break ;
rank: 538
score: 98.45377349853516
patch: else ; break ; } break ;
rank: 538
score: 98.40358189174107
patch: if ; break ; } ;
rank: 538
score: 98.27332763671875
patch: if break ; break ; / * break ;
rank: 538
score: 98.24759347098214
patch: this . break = true ;
rank: 538
score: 98.1756083170573
patch: return ) + 1 ;
rank: 539
score: 98.89479573567708
patch: block . get CaMeL Parent ( ) . { break ;
rank: 539
score: 98.7500469501202
patch: return block . is CaMeL Function ( ) ; } break ;
rank: 539
score: 98.60407049005681
patch: se = block . get CaMeL Parent ( ) ;
rank: 539
score: 98.56472778320312
patch: } else { return ; ; }
rank: 539
score: 98.45371791294643
patch: logger . error break break ;
rank: 539
score: 98.40348985460069
patch: found = false ; break ; } }
rank: 539
score: 98.272705078125
patch: if ; break ; break ; break ; break ;
rank: 539
score: 98.17335001627605
patch: return block . false ;
rank: 539
score: 98.12547956194196
patch: throw ( Exception ) this ;
rank: 540
score: 98.74990844726562
patch: if ( block . is CaMeL Changed ) { break ;
rank: 540
score: 98.6030782063802
patch: } else if ( block . is CaMeL Function ) {
rank: 540
score: 98.56297302246094
patch: return 0 ; } } break ;
rank: 540
score: 98.4525146484375
patch: break ; return false ; ;
rank: 540
score: 98.40318467881944
patch: return break ; } else { break ;
rank: 540
score: 98.27177598741319
patch: break ; ; / if break ; ;
rank: 540
score: 98.1671142578125
patch: block . return false ;
rank: 540
score: 98.12428283691406
patch: return 0 ;
rank: 541
score: 98.89149983723958
patch: ref . get CaMeL Parent ( ) . return false ;
rank: 541
score: 98.60304565429688
patch: if ( block . is CaMeL All ) {
rank: 541
score: 98.56175994873047
patch: return break ; break ; } finally
rank: 541
score: 98.45172797309027
patch: break ; ; ; if break ; ;
rank: 541
score: 98.40201241629464
patch: break ; } } * ;
rank: 541
score: 98.27068481445312
patch: break ; break ; if ; if ; ;
rank: 541
score: 98.24535369873047
patch: if ( block ; break ; }
rank: 541
score: 98.16585286458333
patch: break + * * /
rank: 541
score: 98.11976841517857
patch: if ( ! ) break ;
rank: 542
score: 98.89003342848558
patch: is CaMeL Function = ! ! block . is CaMeL Function )
rank: 542
score: 98.60270552201705
patch: : if ( block . is CaMeL Function ) {
rank: 542
score: 98.4511489868164
patch: try { break ; } else ;
rank: 542
score: 98.40184868706598
patch: return true ; } if ( ! ;
rank: 542
score: 98.2705322265625
patch: if ; break ; ; if ; break ;
rank: 542
score: 98.24435424804688
patch: if ( success ; break ; }
rank: 542
score: 98.16575113932292
patch: return false : true ;
rank: 543
score: 98.7478535970052
patch: if ( block . is CaMeL Add ) { break ;
rank: 543
score: 98.60252888997395
patch: Node ref = block . get CaMeL Parent ( ) ;
rank: 543
score: 98.55970594618056
patch: throw new Runtime CaMeL Exception ; } }
rank: 543
score: 98.45113118489583
patch: else break ; } } if break ;
rank: 543
score: 98.40158517020089
patch: if ; else break ; }
rank: 543
score: 98.27049560546875
patch: try if break ; break ; if break ;
rank: 543
score: 98.1644287109375
patch: break equals ( block ) ;
rank: 543
score: 98.11875406901042
patch: return false ; } {
rank: 544
score: 98.88731971153847
patch: return block . get CaMeL Parent ( ) . is CaMeL Function
rank: 544
score: 98.74784342447917
patch: return ( block . is CaMeL Declaration ( ) ) ;
rank: 544
score: 98.60045776367187
patch: b = block . is CaMeL Function ) ;
rank: 544
score: 98.55888366699219
patch: return break ; return false ; }
rank: 544
score: 98.45095486111111
patch: break ; } else { for break ;
rank: 544
score: 98.4013671875
patch: break ; } else { ++ count ;
rank: 544
score: 98.27040405273438
patch: break ; ; } break ; if break ;
rank: 544
score: 98.2419662475586
patch: break finally { break ; } }
rank: 544
score: 98.16183471679688
patch: ret . return false ;
rank: 544
score: 98.11848667689732
patch: System . else ( ) .
rank: 545
score: 98.5990878018466
patch: current = block . get CaMeL Parent ( ) ;
rank: 545
score: 98.55848039899554
patch: return break ; } else }
rank: 545
score: 98.45083279079861
patch: else { break ; if break ; }
rank: 545
score: 98.26997205946181
patch: if ; break ; break ; if ;
rank: 545
score: 98.1582539876302
patch: return ) : false ;
rank: 546
score: 98.88548787434895
patch: return block . is CaMeL Function ? true : true ;
rank: 546
score: 98.7471172626202
patch: if ( node . is CaMeL Function ) { return false ;
rank: 546
score: 98.5578384399414
patch: break ; } } ( break ;
rank: 546
score: 98.45065743582589
patch: case 0 : break ; ;
rank: 546
score: 98.40039825439453
patch: break ; } else { ++ ;
rank: 546
score: 98.26951090494792
patch: return false ; } if ; break ;
rank: 546
score: 98.24105834960938
patch: resolved = break ; }
rank: 547
score: 98.55685424804688
patch: return ; } } return break ;
rank: 547
score: 98.45057024274554
patch: break ; break ; out ;
rank: 547
score: 98.26936645507813
patch: break ; ; if ; ; if break ;
rank: 547
score: 98.23978424072266
patch: if ( ! break && break )
rank: 547
score: 98.15628051757812
patch: return ref . true ;
rank: 547
score: 98.11395263671875
patch: break ; } else { {
rank: 548
score: 98.88330078125
patch: return get CaMeL Class ( ) . is CaMeL Function ) ;
rank: 548
score: 98.74700520833333
patch: q = ref . get CaMeL Basic CaMeL Block ( ) ; break ;
rank: 548
score: 98.59866943359376
patch: if ( block . is CaMeL Forward ) {
rank: 548
score: 98.55684988839286
patch: return true ; } finally ;
rank: 548
score: 98.45029025607639
patch: value ; break ; } if break ;
rank: 548
score: 98.39855085100446
patch: return ; } this . ;
rank: 548
score: 98.26870727539062
patch: do if break ; break ; if break ;
rank: 548
score: 98.23871721540179
patch: cancelled = true ; break ;
rank: 548
score: 98.15313720703125
patch: return false ; else break ;
rank: 548
score: 98.11356898716518
patch: else { { return false ;
rank: 549
score: 98.88232421875
patch: return block . is CaMeL Function ) + 1 ;
rank: 549
score: 98.74699096679687
patch: return ref . is CaMeL Declaration ( ) ;
rank: 549
score: 98.55648803710938
patch: System . out . println break ;
rank: 549
score: 98.4502182006836
patch: break ; for false ; break ;
rank: 549
score: 98.23867797851562
patch: if ( break ; } break ;
rank: 549
score: 98.1495361328125
patch: break ? false : true ;
rank: 549
score: 98.11294119698661
patch: return is CaMeL Interface ) ;
rank: 550
score: 98.5969950358073
patch: result = block . get CaMeL Basic CaMeL Block ( )
rank: 550
score: 98.55569797092014
patch: return false ; } if break ; }
rank: 550
score: 98.39572579520089
patch: continue ; } if ( ;
rank: 550
score: 98.2659024325284
patch: if ; break ; if ; if ; break ;
rank: 550
score: 98.23849051339286
patch: break false ; } else {
rank: 550
score: 98.1482645670573
patch: return ) - false ;
rank: 551
score: 98.55562591552734
patch: break ; } else } break ;
rank: 551
score: 98.44989013671875
patch: finally { break ; this . break ;
rank: 551
score: 98.39554595947266
patch: break ; ; } * break ;
rank: 551
score: 98.26571655273438
patch: do ; break ;
rank: 551
score: 98.14704241071429
patch: return ref . return true ;
rank: 551
score: 98.10995047433036
patch: return false ; / * /
rank: 552
score: 98.87939453125
patch: return ( block . get CaMeL Basic CaMeL Block ( ) ;
rank: 552
score: 98.74631754557292
patch: if ( block . is CaMeL Var ) { break ;
rank: 552
score: 98.59565873579545
patch: result = block . is CaMeL Function ) true ;
rank: 552
score: 98.55415344238281
patch: break ; } else ; break ;
rank: 552
score: 98.4496841430664
patch: else { break ; } if ;
rank: 552
score: 98.39484998914931
patch: return true ; } if ( block ;
rank: 552
score: 98.26544799804688
patch: if false ; break ; if break ; }
rank: 552
score: 98.23766326904297
patch: break - 1 ; break ; }
rank: 552
score: 98.10823277064732
patch: return false ; } / ?
rank: 553
score: 98.74609375
patch: ret = block . is CaMeL Function ) ; break ;
rank: 553
score: 98.59534801136364
patch: if ( ! block . is CaMeL Local ) {
rank: 553
score: 98.55379231770833
patch: return null ; } finally { break ;
rank: 553
score: 98.44921003069196
patch: / * break break ; }
rank: 553
score: 98.39457484654018
patch: / * break * / ;
rank: 553
score: 98.2654037475586
patch: return $NUMBER$ ;
rank: 553
score: 98.23726109095982
patch: synchronize ( break ) ; }
rank: 553
score: 98.13752092633929
patch: return block != null false ;
rank: 553
score: 98.10666329520089
patch: return false ; } this .
rank: 554
score: 98.74399038461539
patch: if ( block . is CaMeL All ) { return false ;
rank: 554
score: 98.44919840494792
patch: finally { new break ;
rank: 554
score: 98.394287109375
patch: break ; default : return ;
rank: 554
score: 98.26529541015626
patch: return false ; if break ; if break ;
rank: 554
score: 98.23685128348214
patch: break && ( break ) ;
rank: 554
score: 98.10484095982143
patch: return block == null ; }
rank: 555
score: 98.8748309795673
patch: return ref . get CaMeL Basic CaMeL Block ( ) ; }
rank: 555
score: 98.74395751953125
patch: if ( block . is CaMeL Global ( ) ) { break ;
rank: 555
score: 98.59378814697266
patch: return block . is CaMeL Function {
rank: 555
score: 98.44908989800348
patch: break ; this . break ; } ;
rank: 555
score: 98.3936767578125
patch: return ; } ; } * /
rank: 555
score: 98.26264784071181
patch: if ; break ; if break ; }
rank: 555
score: 98.1287333170573
patch: return true : false ;
rank: 555
score: 98.10413614908855
patch: return { throw null ;
rank: 556
score: 98.87406412760417
patch: if ( block . is CaMeL Function ) { System .
rank: 556
score: 98.74357386997768
patch: if ( block . is CaMeL Sealed ( ) ) { break ;
rank: 556
score: 98.5931396484375
patch: else if ( block . is CaMeL Function )
rank: 556
score: 98.55190700954861
patch: break ; } } if ; break ;
rank: 556
score: 98.3930892944336
patch: break ; } while ( ; )
rank: 556
score: 98.26234944661458
patch: if ; else break ;
rank: 556
score: 98.23439025878906
patch: return true ; return false ; }
rank: 556
score: 98.12786865234375
patch: break + - $NUMBER$ ;
rank: 557
score: 98.87346857244319
patch: return block . is CaMeL Function ) + null ;
rank: 557
score: 98.74352213541667
patch: return ref . get CaMeL Value ( ) . equals ( $STRING$ ) ;
rank: 557
score: 98.59278564453125
patch: if ( block . is CaMeL Global ) {
rank: 557
score: 98.55020577566964
patch: * * * break ; }
rank: 557
score: 98.44877624511719
patch: value { break ; } break ;
rank: 557
score: 98.38992745535714
patch: throw new break - 1 ;
rank: 557
score: 98.26054243607955
patch: break ; break ; if ; break ; break ;
rank: 557
score: 98.09562174479167
patch: return - - 1 ;
rank: 558
score: 98.87237079326923
patch: ref . is CaMeL Function = block . is CaMeL Function ;
rank: 558
score: 98.54899597167969
patch: return break ; } * * /
rank: 558
score: 98.44831848144531
patch: value = null ; break ; }
rank: 558
score: 98.38967459542411
patch: if ( ; else ; }
rank: 558
score: 98.26046142578124
patch: if false ; break ; break ; break ;
rank: 558
score: 98.2340087890625
patch: if ( true ) break ; }
rank: 558
score: 98.12405395507812
patch: break else return false ;
rank: 558
score: 98.09529622395833
patch: ) { return false ;
rank: 559
score: 98.742919921875
patch: if ( block . is CaMeL Nullable ) { break ;
rank: 559
score: 98.54888044084821
patch: return false ; } false ;
rank: 559
score: 98.44788469587054
patch: / break ; if break ;
rank: 559
score: 98.38863796657986
patch: break ; } else { throw new ;
rank: 559
score: 98.26015014648438
patch: break ; } break ; / if break ;
rank: 559
score: 98.233642578125
patch: break break ; } break ;
rank: 559
score: 98.1182861328125
patch: break ) return false ;
rank: 559
score: 98.0867919921875
patch: return return return false ;
rank: 560
score: 98.86961012620192
patch: is CaMeL Function = ! ! block . is CaMeL Function ;
rank: 560
score: 98.59159545898437
patch: / && block . is CaMeL Function ) {
rank: 560
score: 98.54844665527344
patch: return false ; for break ; }
rank: 560
score: 98.44776153564453
patch: break ; break ; if true ;
rank: 560
score: 98.38841417100694
patch: break break ; } } return false ;
rank: 560
score: 98.25986056857639
patch: return if break ; break ; break ;
rank: 560
score: 98.23360443115234
patch: break ; value = break ; }
rank: 560
score: 98.11745779854911
patch: return block != null 1 ;
rank: 560
score: 98.0864969889323
patch: * / return false ;
rank: 561
score: 98.86904907226562
patch: block . get CaMeL Parent ( ) . return true ;
rank: 561
score: 98.74137739701705
patch: return is CaMeL Function CaMeL Type ( block ) ;
rank: 561
score: 98.59138627485795
patch: prev = ref . get CaMeL Parent ( ) ;
rank: 561
score: 98.54841613769531
patch: return break ; if break ; }
rank: 561
score: 98.44727325439453
patch: it . out . println break ;
rank: 561
score: 98.38780975341797
patch: break ; } if ( ; }
rank: 561
score: 98.25952826605902
patch: return * break ; try / break ;
rank: 561
score: 98.23340454101563
patch: break && break ;
rank: 561
score: 98.08615112304688
patch: break : return false ;
rank: 562
score: 98.59054565429688
patch: match ( block . is CaMeL Function ) {
rank: 562
score: 98.54827202690973
patch: return false ; ; } } break ;
rank: 562
score: 98.44718424479167
patch: case 0 ? break ;
rank: 562
score: 98.38760375976562
patch: if ( ; * /
rank: 562
score: 98.25916748046875
patch: break ; if ; break ; if ; /
rank: 562
score: 98.10825020926339
patch: return block , false ) ;
rank: 562
score: 98.0777587890625
patch: this . return false ;
rank: 563
score: 98.74135335286458
patch: if ( block . is CaMeL Set ) { break ;
rank: 563
score: 98.59036254882812
patch: if ( is CaMeL Function ) {
rank: 563
score: 98.54808807373047
patch: break ; } finally = break ;
rank: 563
score: 98.38752964564732
patch: break ; } * / }
rank: 563
score: 98.25891723632813
patch: break ; else if break ; if break ;
rank: 563
score: 98.10619099934895
patch: break is CaMeL Function ;
rank: 563
score: 98.07638549804688
patch: return Boolean . FALSE ;
rank: 564
score: 98.74027506510417
patch: if ( block . is CaMeL Anonymous ) { break ;
rank: 564
score: 98.59029541015624
patch: expression = block . is CaMeL Function ) ;
rank: 564
score: 98.54661560058594
patch: return ; ; ; } break ;
rank: 564
score: 98.44693756103516
patch: * * break ; } break ;
rank: 564
score: 98.38750348772321
patch: this . break ; ; }
rank: 564
score: 98.258837890625
patch: return ; = break ; if ; break ;
rank: 564
score: 98.22972760881696
patch: break = block . ; }
rank: 564
score: 98.0717529296875
patch: return ( ) ;
rank: 565
score: 98.8673095703125
patch: block . get CaMeL Parent ( ) . { break ; }
rank: 565
score: 98.58878784179687
patch: if ( block . is CaMeL Alive ) {
rank: 565
score: 98.44687228732639
patch: break ; ; break ; for break ;
rank: 565
score: 98.25867919921875
patch: break ; break ; if ; / / /
rank: 565
score: 98.10295758928571
patch: return block instanceof Function ) ;
rank: 566
score: 98.86620076497395
patch: return block . get CaMeL Root ( ) != null ;
rank: 566
score: 98.73958129882813
patch: return ( block . is CaMeL Instance ) ;
rank: 566
score: 98.54566301618304
patch: return ; ; } else ;
rank: 566
score: 98.44676378038194
patch: case $STRING$ : break ; if break ;
rank: 566
score: 98.38628278459821
patch: result [ 0 ] = ;
rank: 566
score: 98.25806342230902
patch: break ; ; if ; / / /
rank: 566
score: 98.10222516741071
patch: break ; else { break ;
rank: 566
score: 98.068603515625
patch: return false ; else {
rank: 567
score: 98.86365685096153
patch: return block . is CaMeL Function ) ? true : false ;
rank: 567
score: 98.73934232271634
patch: if ( block . is CaMeL Namespace ) { return false ;
rank: 567
score: 98.58687744140624
patch: return block . is CaMeL New ( ) ;
rank: 567
score: 98.54541015625
patch: return ; ; } } finally ;
rank: 567
score: 98.44666399274554
patch: break ; return break ; ;
rank: 567
score: 98.38594563802083
patch: break ; } if ( block != ;
rank: 567
score: 98.25804443359375
patch: break ; } ; if break ; break ;
rank: 567
score: 98.22872924804688
patch: synchronized ( this ; break ; }
rank: 568
score: 98.86324055989583
patch: return block . get CaMeL Reference ( ) != null ;
rank: 568
score: 98.73900756835937
patch: return block . is CaMeL Constant ( ) ;
rank: 568
score: 98.58654106987848
patch: while ( block . is CaMeL Function )
rank: 568
score: 98.54526192801339
patch: else return false ; } }
rank: 568
score: 98.38527425130208
patch: throw new ; } ;
rank: 568
score: 98.25703938802083
patch: if ; / / break ; break ;
rank: 568
score: 98.22711181640625
patch: ret = break ; } break ;
rank: 568
score: 98.09909057617188
patch: break ; * * /
rank: 568
score: 98.06378173828125
patch: throw Boolean . true ;
rank: 569
score: 98.7376708984375
patch: if ( block . is CaMeL False ) { break ;
rank: 569
score: 98.44618733723958
patch: } else ; break ; if break ;
rank: 569
score: 98.38467407226562
patch: break ; ; } if ( ;
rank: 569
score: 98.25639204545455
patch: if break ; break ; if ; break ; ;
rank: 569
score: 98.22623988560268
patch: result = ! break ; }
rank: 570
score: 98.73746431790866
patch: return ref . is CaMeL Function ( ) ; return false ;
rank: 570
score: 98.54403686523438
patch: } return break ; break ; }
rank: 570
score: 98.38455539279514
patch: return ; } / * * break ;
rank: 570
score: 98.25632731119792
patch: return ; { if break ; break ;
rank: 570
score: 98.22494070870536
patch: break ) ; } break ;
rank: 570
score: 98.09820556640625
patch: break + false ;
rank: 570
score: 98.05972290039062
patch: return ref ;
rank: 571
score: 98.7373555501302
patch: if ( block . is CaMeL Property ) { break ;
rank: 571
score: 98.58572726779514
patch: state = Basic CaMeL Block . false ;
rank: 571
score: 98.54373508029514
patch: return null ; } finally if break ;
rank: 571
score: 98.384033203125
patch: throw new break ) ; }
rank: 571
score: 98.2562744140625
patch: return if break ;
rank: 571
score: 98.2225341796875
patch: break = false ; }
rank: 571
score: 98.09591674804688
patch: return block ;
rank: 571
score: 98.0542500813802
patch: return this . false ;
rank: 572
score: 98.86009803185097
patch: { if ( block . is CaMeL Function ) { break ;
rank: 572
score: 98.73733285757211
patch: if ( block . is CaMeL Statement ) { return false ;
rank: 572
score: 98.58491821289063
patch: break || block . is CaMeL Function ) {
rank: 572
score: 98.38397979736328
patch: break ; } } switch ( ;
rank: 572
score: 98.25548706054687
patch: break ; ; ; if break ; break ;
rank: 572
score: 98.22251892089844
patch: break ; target = break ; }
rank: 572
score: 98.09542410714286
patch: result . add ( block ;
rank: 572
score: 98.05142211914062
patch: return 0 ; }
rank: 573
score: 98.7363750751202
patch: if ( block . is CaMeL Callable ) { return false ;
rank: 573
score: 98.54286024305556
patch: } else { return break ; } }
rank: 573
score: 98.44481743706598
patch: finally { super . break break ; }
rank: 573
score: 98.3828353881836
patch: return true ; } * / ;
rank: 573
score: 98.2554443359375
patch: break ; ; if break ; throw break ;
rank: 573
score: 98.22085571289062
patch: ret = block ; break ; }
rank: 573
score: 98.09175327845982
patch: break ? true : true ;
rank: 574
score: 98.85836181640624
patch: return block . get CaMeL Next ( ) ;
rank: 574
score: 98.7355448404948
patch: if ( block . is CaMeL Active ) { break ;
rank: 574
score: 98.5835293856534
patch: return ref . get CaMeL Basic CaMeL Block ( )
rank: 574
score: 98.54273817274306
patch: return false ; } else return null ;
rank: 574
score: 98.44462076822917
patch: break ; } break ; if false ;
rank: 574
score: 98.3814697265625
patch: return true ; } ; ;
rank: 574
score: 98.25416259765625
patch: return ; if break ; break ; break ;
rank: 574
score: 98.22084263392857
patch: List < break : break ;
rank: 574
score: 98.09120396205357
patch: return block is CaMeL Function ;
rank: 574
score: 98.0503641764323
patch: throw Boolean . false ;
rank: 575
score: 98.8582763671875
patch: ref . get CaMeL Parent ( ) . return false ; }
rank: 575
score: 98.58349609375
patch: rs . if ( block . is CaMeL Function )
rank: 575
score: 98.542724609375
patch: return false ; } } finally
rank: 575
score: 98.44454956054688
patch: else break ; } } break ;
rank: 575
score: 98.25399017333984
patch: return ; {
rank: 575
score: 98.04902648925781
patch: return 1 ;
rank: 576
score: 98.73483712332589
patch: if ( block . is CaMeL Primitive ( ) ) { break ;
rank: 576
score: 98.58246404474431
patch: tmp = ref . get CaMeL Parent ( ) ;
rank: 576
score: 98.54237196180556
patch: break ; } } else return null ;
rank: 576
score: 98.44437081473214
patch: } * * / break ;
rank: 576
score: 98.37956407335069
patch: break ; } ; } * break ;
rank: 576
score: 98.25323486328125
patch: if break ; break ; / = break ;
rank: 576
score: 98.2204360961914
patch: return break ; default : break ;
rank: 577
score: 98.85605690696023
patch: return block . is CaMeL Function ) != null ;
rank: 577
score: 98.54129791259766
patch: return false ; } } synchronized ;
rank: 577
score: 98.44432830810547
patch: break ; out . close ( ;
rank: 577
score: 98.37833658854167
patch: ref . break ; }
rank: 577
score: 98.253173828125
patch: break ; if break ; / * break ;
rank: 577
score: 98.21880340576172
patch: final break ;
rank: 577
score: 98.08697509765625
patch: return this . return ;
rank: 578
score: 98.7337137858073
patch: if ( block . is CaMeL Case ) { break ;
rank: 578
score: 98.54070281982422
patch: return break ; else return break ;
rank: 578
score: 98.44347127278645
patch: else { break break ;
rank: 578
score: 98.37825520833333
patch: while ( ; ) { break ; }
rank: 578
score: 98.21828787667411
patch: for ( final ; ; )
rank: 578
score: 98.08656819661458
patch: return ref == null ;
rank: 578
score: 98.04583740234375
patch: return FALSE ; }
rank: 579
score: 98.85496690538194
patch: return block . equals ( null ) ;
rank: 579
score: 98.7334453876202
patch: if ( block . is CaMeL Function ) { return ; }
rank: 579
score: 98.58080444335937
patch: if ( block . is CaMeL Active ) {
rank: 579
score: 98.5404052734375
patch: return break ; } } finally
rank: 579
score: 98.44304656982422
patch: break ; } break ; while ;
rank: 579
score: 98.37799072265625
patch: break ; * break ; } ;
rank: 579
score: 98.25278727213542
patch: if break ; ; /
rank: 579
score: 98.21749877929688
patch: parent . break ; }
rank: 579
score: 98.03929646809895
patch: log ; return false ;
rank: 580
score: 98.73337965745192
patch: if ( block . is CaMeL Add ) { return false ;
rank: 580
score: 98.5797607421875
patch: if ( block . is CaMeL Interface ) {
rank: 580
score: 98.54022216796875
patch: return break ; } finally = break ;
rank: 580
score: 98.44293212890625
patch: else break ; break ; if break ;
rank: 580
score: 98.37714385986328
patch: break ; ; } else { ;
rank: 580
score: 98.25197531960227
patch: if ; break ; if break ; } break ;
rank: 580
score: 98.21733856201172
patch: if ( ! is CaMeL Active )
rank: 580
score: 98.085205078125
patch: break ref ;
rank: 581
score: 98.85316051136364
patch: is CaMeL Function = block . is CaMeL Function ;
rank: 581
score: 98.73330453725961
patch: block = block . get CaMeL Parent ( ) ; break ;
rank: 581
score: 98.5790283203125
patch: table . return block . is CaMeL Function ;
rank: 581
score: 98.54015241350446
patch: continue ; } if break ;
rank: 581
score: 98.44252232142857
patch: / break ; } break ;
rank: 581
score: 98.37430572509766
patch: break ; } } break ; ;
rank: 581
score: 98.25162963867187
patch: return false ; if ; break ; break ;
rank: 581
score: 98.21605573381696
patch: break false ; break true ;
rank: 581
score: 98.08321707589286
patch: break } else { continue ;
rank: 581
score: 98.027587890625
patch: else return true ; }
rank: 582
score: 98.5786865234375
patch: continue ; } else
rank: 582
score: 98.53989955357143
patch: break ; } finally ; }
rank: 582
score: 98.44243028428819
patch: break ; } break ; synchronized break ;
rank: 582
score: 98.37413194444444
patch: return ; } } else { break ;
rank: 582
score: 98.2501220703125
patch: try if break ;
rank: 582
score: 98.07607596261161
patch: break . is CaMeL Function ;
rank: 582
score: 98.02602132161458
patch: return false } else {
rank: 583
score: 98.84882061298077
patch: if ( ! block . is CaMeL Function ) return false ;
rank: 583
score: 98.73324584960938
patch: if ( block . is CaMeL Private ) { break ;
rank: 583
score: 98.57841352982955
patch: node = ref . get CaMeL Parent ( ) ;
rank: 583
score: 98.44194793701172
patch: break ; } break ; * ;
rank: 583
score: 98.37387520926339
patch: break ; } / * /
rank: 583
score: 98.24971313476563
patch: if break ; } if break ; break ;
rank: 583
score: 98.075439453125
patch: result . return false ;
rank: 583
score: 98.02206420898438
patch: throw new null ;
rank: 584
score: 98.84725952148438
patch: return block . get CaMeL Value ( ) != null ;
rank: 584
score: 98.73270670572917
patch: block . is CaMeL Function ( ) ; return true ;
rank: 584
score: 98.57706298828126
patch: return block . is CaMeL Local ) ; }
rank: 584
score: 98.53875732421875
patch: break ; } } else return ;
rank: 584
score: 98.44151088169643
patch: else ; return false ; }
rank: 584
score: 98.37383161272321
patch: if ( ; } * /
rank: 584
score: 98.24942626953126
patch: break ; ; if ; if ; break ;
rank: 584
score: 98.21326293945313
patch: ret = break ;
rank: 584
score: 98.07272774832589
patch: return block . is CaMeL Function
rank: 584
score: 98.0164794921875
patch: return this ; }
rank: 585
score: 98.57703857421875
patch: switch ( block . is CaMeL Local ) {
rank: 585
score: 98.5382308959961
patch: return break ; } for break ;
rank: 585
score: 98.37378607855902
patch: if ( ; else return true ; }
rank: 585
score: 98.24896240234375
patch: if break ; break ; if ; / /
rank: 585
score: 98.21208190917969
patch: resolved = true ; break ; }
rank: 585
score: 98.01541137695312
patch: ex ; return false ;
rank: 586
score: 98.84639485677083
patch: break ; } return block . is CaMeL Function ) ;
rank: 586
score: 98.57698364257813
patch: if ( block . is CaMeL Annotation ) {
rank: 586
score: 98.53777313232422
patch: return break ; while break ; }
rank: 586
score: 98.44085693359375
patch: value = break || break ) ;
rank: 586
score: 98.37288665771484
patch: break ; } ; return false ;
rank: 586
score: 98.24782104492188
patch: if true ; break ; if ; break ;
rank: 586
score: 98.0117899576823
patch: break ; return true ;
rank: 587
score: 98.83717854817708
patch: return block . get CaMeL Length ( ) != null ;
rank: 587
score: 98.730859375
patch: return block . is CaMeL Global ( ) ;
rank: 587
score: 98.57622736150569
patch: exception = block . get CaMeL Next ( ) ;
rank: 587
score: 98.53668891059027
patch: return break ; } } if null ;
rank: 587
score: 98.44058227539062
patch: result ; break ; }
rank: 587
score: 98.24741821289062
patch: if ; break ; if break ; if ;
rank: 587
score: 98.21116638183594
patch: block = block ; break ; }
rank: 587
score: 98.01021575927734
patch: throw 0 ;
rank: 588
score: 98.73061301491477
patch: return ref . is CaMeL Function ( ) $NUMBER$ ;
rank: 588
score: 98.57566528320312
patch: if ( block . is CaMeL Declaration ) {
rank: 588
score: 98.53641764322917
patch: break ; } else = break ; }
rank: 588
score: 98.44056919642857
patch: if null ; break ; ;
rank: 588
score: 98.37138148716518
patch: ref = block . ; }
rank: 588
score: 98.24735717773437
patch: if ; break ; break ; break ; }
rank: 588
score: 98.21044049944196
patch: false = true ; break ;
rank: 588
score: 98.00669555664062
patch: return $NUMBER$ ; }
rank: 589
score: 98.8327969637784
patch: return ( block . get CaMeL Parent ( ) ;
rank: 589
score: 98.57377485795455
patch: list . if ( block . is CaMeL Function )
rank: 589
score: 98.53626166449652
patch: { return false ; } } break ;
rank: 589
score: 98.44010925292969
patch: break ; try ; break ; }
rank: 589
score: 98.37113444010417
patch: break ; ; } }
rank: 589
score: 98.2472811612216
patch: return * break ; / / break ; break ;
rank: 589
score: 98.06827218191964
patch: return block . return false ;
rank: 590
score: 98.83235677083333
patch: return block . get CaMeL Id ( ) != null ;
rank: 590
score: 98.57350463867188
patch: { return block . is CaMeL Function ) ;
rank: 590
score: 98.53620062934027
patch: return true ; } catch break ; }
rank: 590
score: 98.43999481201172
patch: break ; ; break ; break ;
rank: 590
score: 98.37099202473958
patch: break ; } } if ( false )
rank: 590
score: 98.24681599934895
patch: return / * break ;
rank: 590
score: 98.20921325683594
patch: break false ; } break ; }
rank: 590
score: 98.00424194335938
patch: return false ; else
rank: 591
score: 98.8322265625
patch: return block . is CaMeL Function != null ;
rank: 591
score: 98.72861735026042
patch: if ( block . is CaMeL Null ) { break ;
rank: 591
score: 98.5727871981534
patch: expression = block . get CaMeL Parent ( ) ;
rank: 591
score: 98.43987274169922
patch: try { break ; } else {
rank: 591
score: 98.37095133463542
patch: if ( ; else break ; } }
rank: 591
score: 98.24623413085938
patch: if break ; break ; if ; if ;
rank: 591
score: 98.20892333984375
patch: break && ( break ) ; }
rank: 591
score: 98.06602260044643
patch: break * * * * ;
rank: 591
score: 98.00350952148438
patch: return Boolean . TRUE ;
rank: 592
score: 98.830078125
patch: return block . is CaMeL Function ) - $NUMBER$ ;
rank: 592
score: 98.57271728515624
patch: tmp = block . is CaMeL Function ) ;
rank: 592
score: 98.53451102120536
patch: return false ; ; } else
rank: 592
score: 98.43961007254464
patch: catch break ; while break ;
rank: 592
score: 98.36933898925781
patch: break ; } if ( -- ;
rank: 592
score: 98.24412231445312
patch: break ; break ; } if break ; }
rank: 592
score: 98.2080078125
patch: ret = false ; }
rank: 592
score: 98.06467982700893
patch: break ? block : block ;
rank: 592
score: 97.997802734375
patch: return Assignment != null ;
rank: 593
score: 98.727294921875
patch: if ( block . is CaMeL Prototype ) { break ;
rank: 593
score: 98.53400530133929
patch: return ; ; } * /
rank: 593
score: 98.43928745814732
patch: / finally ; break ; }
rank: 593
score: 98.24166870117188
patch: if break ; break ; ; throw break ;
rank: 593
score: 98.06339808872768
patch: for ( Basic CaMeL Block )
rank: 593
score: 97.99542236328125
patch: else return true ;
rank: 594
score: 98.72671508789062
patch: block . is CaMeL Function 1 ( ) ; break ;
rank: 594
score: 98.5709716796875
patch: state = block . is CaMeL Function ) ;
rank: 594
score: 98.43922932942708
patch: else { break ; } ; break ;
rank: 594
score: 98.36867947048611
patch: throw new break ( $STRING$ ) ; }
rank: 594
score: 98.23966841264205
patch: return * break ; / break ; if break ;
rank: 594
score: 98.20797293526786
patch: if ( break != null )
rank: 594
score: 98.06314086914062
patch: break ) { break ;
rank: 594
score: 97.99118041992188
patch: return ( ! ) ;
rank: 595
score: 98.82820268110795
patch: return block . is CaMeL Function ) : null ;
rank: 595
score: 98.72623697916667
patch: if ( block . is CaMeL Block ) { break ;
rank: 595
score: 98.57070090553977
patch: caller = block . get CaMeL Parent ( ) ;
rank: 595
score: 98.53348541259766
patch: return ; ; } } catch ;
rank: 595
score: 98.43917846679688
patch: else { break ; break ; ;
rank: 595
score: 98.36855643136161
patch: if ; ; break ; }
rank: 595
score: 98.23954264322917
patch: if ; break ; return
rank: 595
score: 98.207763671875
patch: this . break = false ;
rank: 595
score: 98.06240408761161
patch: break - * * * /
rank: 595
score: 97.99090576171875
patch: break } return false ;
rank: 596
score: 98.82611083984375
patch: return ( block . is CaMeL Function ) - 1 ;
rank: 596
score: 98.57060546875
patch: return block . is CaMeL Function ; } else
rank: 596
score: 98.43848419189453
patch: finally { break ; } / /
rank: 596
score: 98.36761474609375
patch: result = true ; ; }
rank: 596
score: 98.23883611505681
patch: break ; ; if break ; } if break ;
rank: 596
score: 98.20494079589844
patch: cancelled = false ; break ; }
rank: 596
score: 98.0615743001302
patch: break return false ; }
rank: 596
score: 97.98773193359375
patch: return - * false ;
rank: 597
score: 98.82517311789773
patch: return ref . is CaMeL Function ) - false ;
rank: 597
score: 98.72315063476563
patch: return ( block . is CaMeL Declared ) ;
rank: 597
score: 98.57036798650569
patch: element = block . get CaMeL Parent ( ) ;
rank: 597
score: 98.53186907087054
patch: return true ; } else ;
rank: 597
score: 98.43826729910714
patch: return null ; break ; ;
rank: 597
score: 98.36760602678571
patch: if ( ; return true ;
rank: 597
score: 98.23823686079545
patch: if break ; break ; for break ; break ;
rank: 597
score: 98.20492117745536
patch: done = true ; break ;
rank: 597
score: 98.0615234375
patch: result = block . true ;
rank: 597
score: 97.98667399088542
patch: result = return null ;
rank: 598
score: 98.53178405761719
patch: return ; } else return false ;
rank: 598
score: 98.43824598524306
patch: else { break ; } return null ;
rank: 598
score: 98.36699567522321
patch: break ; } / ; ;
rank: 598
score: 98.23768199573864
patch: for ; ; ; ; ; break ; break ;
rank: 598
score: 98.20452008928571
patch: if ( target == break )
rank: 598
score: 97.98378499348958
patch: return is CaMeL Empty ;
rank: 599
score: 98.82112260298295
patch: return block . is CaMeL Function ) ? true ;
rank: 599
score: 98.7224629720052
patch: return ( false || block . is CaMeL Function ) ;
rank: 599
score: 98.57001287286931
patch: LOG . if ( block . is CaMeL Function )
rank: 599
score: 98.53170776367188
patch: this . break ; } else {
rank: 599
score: 98.43811907087054
patch: value = break && false ;
rank: 599
score: 98.23707164417614
patch: if break ; break ; if ; void break ;
rank: 599
score: 98.20442417689732
patch: break = block . break ;
rank: 599
score: 97.98355102539062
patch: return return break ;
rank: 600
score: 98.7223788174716
patch: return ( block . is CaMeL Function ) $NUMBER$ ;
rank: 600
score: 98.56952582465277
patch: res = block . is CaMeL Function ;
rank: 600
score: 98.53106689453125
patch: return break ; break ; } else {
rank: 600
score: 98.4378662109375
patch: value { break ;
rank: 600
score: 98.36660427517361
patch: break ; ; } else { ; }
rank: 600
score: 98.23679809570312
patch: if ; break ; break ; = break ;
rank: 600
score: 98.05284627278645
patch: return ) - true ;
rank: 600
score: 97.98251342773438
patch: result = return false ;
rank: 601
score: 98.81914728338069
patch: return false ; } block . is CaMeL Function )
rank: 601
score: 98.72153727213542
patch: return ( false && block . is CaMeL Function ) ;
rank: 601
score: 98.5694912997159
patch: t = block . get CaMeL Reference ( ) ;
rank: 601
score: 98.43759155273438
patch: return false ; if break ; ;
rank: 601
score: 98.36647542317708
patch: do { break ; }
rank: 601
score: 98.23679421164773
patch: if break ; break ; if break ; if ;
rank: 601
score: 98.04888916015625
patch: return block != null / *
rank: 602
score: 98.819091796875
patch: return block . is CaMeL Function + false ;
rank: 602
score: 98.72066243489583
patch: if ( block . is CaMeL Forward ) { break ;
rank: 602
score: 98.56941361860795
patch: return block . is CaMeL Function ) ) ; }
rank: 602
score: 98.53041294642857
patch: return null ; } } else
rank: 602
score: 98.43742152622768
patch: finally { for break ; }
rank: 602
score: 98.36607530381944
patch: if ( ; else break ; ; }
rank: 602
score: 98.23665771484374
patch: break ; } if ; break ; break ;
rank: 602
score: 98.20273844401042
patch: result = block ; }
rank: 602
score: 98.04573277064732
patch: break * * * ? block
rank: 602
score: 97.97918701171875
patch: break ( block ) ;
rank: 603
score: 98.71921793619792
patch: return ( block . is CaMeL Local ( ) ) ;
rank: 603
score: 98.52998182508681
patch: break ; } finally if break ; }
rank: 603
score: 98.43740844726562
patch: if false ; break ; ; ;
rank: 603
score: 98.36588832310268
patch: throw new break ++ ; }
rank: 603
score: 98.2365966796875
patch: if ; break ; if break ; while ;
rank: 603
score: 98.20138113839286
patch: break ; if ( break )
rank: 603
score: 97.97855631510417
patch: else { throw null ;
rank: 604
score: 98.81873575846355
patch: return ref . is CaMeL Function ? false : false ;
rank: 604
score: 98.71915893554687
patch: return block . is CaMeL Changed ( ) ;
rank: 604
score: 98.56856079101563
patch: n = block . is CaMeL Function ) ;
rank: 604
score: 98.43734741210938
patch: break ; ; } if false ;
rank: 604
score: 98.36583794487848
patch: result = true ; break ; } }
rank: 604
score: 98.23493041992188
patch: if break ; break ; break ; println ;
rank: 604
score: 98.20090157645089
patch: break && block . ; }
rank: 604
score: 97.97665405273438
patch: return false ) ;
rank: 605
score: 98.71876017252605
patch: return ( block . is CaMeL Constant ( ) ) ;
rank: 605
score: 98.52912902832031
patch: } break ; } return break ;
rank: 605
score: 98.43689727783203
patch: else { break ; ; ; }
rank: 605
score: 98.36580113002232
patch: final ; return false ; }
rank: 605
score: 98.2345458984375
patch: return false ; ; if break ; break ;
rank: 605
score: 97.97650146484375
patch: result ; return false ;
rank: 606
score: 98.71716918945313
patch: return ( block . is CaMeL Global ) ;
rank: 606
score: 98.56731499565973
patch: if ( ! is CaMeL Function ) {
rank: 606
score: 98.43671417236328
patch: catch null || break || break ;
rank: 606
score: 98.2342529296875
patch: if ; break ; / / if break ;
rank: 606
score: 98.04337855747768
patch: break ; } * * /
rank: 606
score: 97.9729715983073
patch: return ( ) ; }
rank: 607
score: 98.71693929036458
patch: ! block . is CaMeL Function ( ) ; break ;
rank: 607
score: 98.5657958984375
patch: if ( block . is CaMeL Function ) { {
rank: 607
score: 98.5283203125
patch: return true ; break ; } else
rank: 607
score: 98.43643188476562
patch: break ; } break ; try {
rank: 607
score: 98.3653564453125
patch: if ( ! Boolean . TRUE . ;
rank: 607
score: 98.2341552734375
patch: break ; if ; = break ; ; /
rank: 607
score: 98.1981201171875
patch: break throws Runtime CaMeL Exception ;
rank: 607
score: 98.04234095982143
patch: break + * * * ?
rank: 607
score: 97.97262573242188
patch: System . return false ;
rank: 608
score: 98.81541951497395
patch: return false ; } return block . is CaMeL Function ;
rank: 608
score: 98.56469116210937
patch: / || block . is CaMeL Function ) {
rank: 608
score: 98.52809651692708
patch: } else return false ;
rank: 608
score: 98.43611145019531
patch: break ; } break ; out ;
rank: 608
score: 98.36446126302083
patch: break ; ; } else { return ;
rank: 608
score: 98.23394220525569
patch: break ; break ; } ; if ; break ;
rank: 608
score: 98.19809395926339
patch: finished = false ; break ;
rank: 608
score: 98.0417989095052
patch: do { return false ;
rank: 608
score: 97.96288045247395
patch: result = ! false ;
rank: 609
score: 98.52794538225446
patch: return false ; } true ;
rank: 609
score: 98.36408233642578
patch: break ; } / * * /
rank: 609
score: 98.2337158203125
patch: break ; if break ; if break ; }
rank: 609
score: 97.9619852701823
patch: return false ; continue ;
rank: 610
score: 98.71610717773437
patch: return ref . is CaMeL Constructor ( ) ;
rank: 610
score: 98.56359185112848
patch: case ( block . is CaMeL Function )
rank: 610
score: 98.43575613839286
patch: break ; for new break ;
rank: 610
score: 98.36365424262152
patch: break ; } ; } if ( ;
rank: 610
score: 98.23344116210937
patch: if ; break ; if ; break ; /
rank: 610
score: 98.19733537946429
patch: while ( block != null )
rank: 610
score: 97.9591064453125
patch: return 1 ; }
rank: 611
score: 98.81468709309895
patch: return ( ! ! ref . is CaMeL Function ) ;
rank: 611
score: 98.7147216796875
patch: return ref . is CaMeL Function ) { break ;
rank: 611
score: 98.52718098958333
patch: return false ; } } synchronized break ;
rank: 611
score: 98.43553161621094
patch: break ; if break ; ; ;
rank: 611
score: 98.36319405691964
patch: found = ; continue ; }
rank: 611
score: 98.23293235085227
patch: break ; break ; println ; if ; break ;
rank: 611
score: 98.19558279854911
patch: result = block . ; }
rank: 611
score: 98.03872244698661
patch: return true ; * * /
rank: 612
score: 98.52666473388672
patch: return false ; } } / ;
rank: 612
score: 98.36235700334821
patch: if ( break ; } ;
rank: 612
score: 98.23277791341145
patch: catch ; { break ;
rank: 612
score: 98.03604736328126
patch: break * * /
rank: 612
score: 97.95606486002605
patch: code ; return false ;
rank: 613
score: 98.81313069661458
patch: if ( type . is CaMeL Function ) { break ;
rank: 613
score: 98.56113891601562
patch: ! block . is CaMeL Function ( ) ;
rank: 613
score: 98.52622767857143
patch: return false ; } } {
rank: 613
score: 98.43540736607143
patch: n = break ; break ;
rank: 613
score: 98.36209542410714
patch: return ; } } * /
rank: 613
score: 98.23228759765625
patch: if ; break ; if ; { break ;
rank: 613
score: 98.19336954752605
patch: ret = true ; }
rank: 613
score: 98.03536551339286
patch: return ref . false ; }
rank: 613
score: 97.9560546875
patch: result ( block ) ;
rank: 614
score: 98.56028053977273
patch: result = block . get CaMeL Reference ( ) ;
rank: 614
score: 98.52558729383681
patch: return null ; } break ; break ;
rank: 614
score: 98.43495178222656
patch: break ; * ; if break ;
rank: 614
score: 98.23194469105114
patch: break ; ; if ; break ; if break ;
rank: 614
score: 98.193359375
patch: if ( break && break )
rank: 614
score: 98.03334263392857
patch: break * * * / )
rank: 614
score: 97.95582275390625
patch: return - $NUMBER$ ;
rank: 615
score: 98.81105735085227
patch: return ref . is CaMeL Function ) - 0 ;
rank: 615
score: 98.71166381835937
patch: return ( block . is CaMeL Name ) ;
rank: 615
score: 98.52541097005208
patch: break ; } } if break ; }
rank: 615
score: 98.43495178222656
patch: else if break ; break ; }
rank: 615
score: 98.3612060546875
patch: if ; break ; } } break ;
rank: 615
score: 98.2314961751302
patch: if ; break ; else
rank: 615
score: 98.1928202311198
patch: super . break ; }
rank: 616
score: 98.8106689453125
patch: return false ; } block . is CaMeL Function ;
rank: 616
score: 98.52534702845982
patch: } else = break ; }
rank: 616
score: 98.434228515625
patch: value = null ;
rank: 616
score: 98.35988362630208
patch: break ; case ; }
rank: 616
score: 98.23125
patch: break ; if ; ; break ; break ;
rank: 616
score: 98.02097574869792
patch: break Basic CaMeL Block ;
rank: 616
score: 97.95259602864583
patch: exception ; return false ;
rank: 617
score: 98.70648803710938
patch: return ( parent . is CaMeL Function ) ;
rank: 617
score: 98.55620783025569
patch: owner = block . get CaMeL Parent ( ) ;
rank: 617
score: 98.52531433105469
patch: if break ; } catch break ;
rank: 617
score: 98.43421936035156
patch: catch break ; } if break ;
rank: 617
score: 98.35982840401786
patch: target = ; break ; }
rank: 617
score: 98.2310791015625
patch: if break ; break ; ; / break ;
rank: 617
score: 98.19133649553571
patch: ret = break ; break ;
rank: 617
score: 98.02077811104911
patch: return ) * * * /
rank: 617
score: 97.95233154296875
patch: throw null ; } }
rank: 618
score: 98.8089932528409
patch: block . get CaMeL Parent ( ) . break ;
rank: 618
score: 98.43389129638672
patch: break ; break ; } / *
rank: 618
score: 98.35954938616071
patch: if ( break ; ; }
rank: 618
score: 98.23081665039062
patch: break ; if ; break ; if ; {
rank: 618
score: 98.02039794921875
patch: break - $NUMBER$ ;
rank: 618
score: 97.95086669921875
patch: throw - 1 ;
rank: 619
score: 98.80861594460227
patch: return block . is CaMeL Function ) ? false ;
rank: 619
score: 98.5557861328125
patch: result = ( block . is CaMeL Function ) ;
rank: 619
score: 98.52415635850694
patch: return true ; } else return break ;
rank: 619
score: 98.433837890625
patch: return false ; break ; / ;
rank: 619
score: 98.35943603515625
patch: answer = true ; break ; }
rank: 619
score: 98.22943670099431
patch: break ; if ; break ; / if break ;
rank: 619
score: 98.19062151227679
patch: report CaMeL Error ( $STRING$ ;
rank: 619
score: 98.01788330078125
patch: break + * /
rank: 619
score: 97.94905598958333
patch: return false . false ;
rank: 620
score: 98.555615234375
patch: return ( block . is CaMeL New ) ;
rank: 620
score: 98.52415466308594
patch: return false ; } finally return ;
rank: 620
score: 98.43319702148438
patch: finally { this . break ; ;
rank: 620
score: 98.22908935546874
patch: break ; if ; break ; / / /
rank: 620
score: 98.18912179129464
patch: result = break ; } }
rank: 620
score: 98.0131327311198
patch: return ) : true ;
rank: 620
score: 97.94863891601562
patch: return false ; this .
rank: 621
score: 98.80735085227273
patch: return block . is CaMeL Function ) == null ;
rank: 621
score: 98.5547607421875
patch: if ( block . is CaMeL Script ) {
rank: 621
score: 98.43259102957589
patch: ++ finally ; break ; }
rank: 621
score: 98.35855102539062
patch: if ; } else { break ;
rank: 621
score: 98.22850952148437
patch: break ; break ; if ; if ; /
rank: 621
score: 98.1888936360677
patch: success = break ; }
rank: 621
score: 98.01284354073661
patch: for ( Basic CaMeL Block block
rank: 622
score: 98.80677490234375
patch: return false ; } block . return false ;
rank: 622
score: 98.55448774857955
patch: index = block . get CaMeL Parent ( ) ;
rank: 622
score: 98.52324676513672
patch: return ; ; if break ; }
rank: 622
score: 98.43093436104911
patch: break ; ; ; * /
rank: 622
score: 98.35840521918402
patch: break ; } } if ( ; ;
rank: 622
score: 98.22847290039063
patch: break ; ; if ; / if break ;
rank: 622
score: 98.1886494954427
patch: break [ 0 ] ;
rank: 622
score: 98.0060323079427
patch: return ) return false ;
rank: 623
score: 98.7004150390625
patch: ref . is CaMeL Function ) { break ;
rank: 623
score: 98.55372314453125
patch: if ( block . is CaMeL Constructor ) {
rank: 623
score: 98.52284240722656
patch: } break ; } catch break ;
rank: 623
score: 98.43081229073661
patch: finally { return false ; }
rank: 623
score: 98.35836791992188
patch: throw new break $NUMBER$ ;
rank: 623
score: 98.2283935546875
patch: throw new Runtime CaMeL Exception ; Exception break ; }
rank: 623
score: 98.00453694661458
patch: return false - false ;
rank: 624
score: 98.804443359375
patch: return ref . is CaMeL Function ) - 1 ;
rank: 624
score: 98.55272081163194
patch: if ( block . is CaMeL Local )
rank: 624
score: 98.52268981933594
patch: break ; ; } catch break ;
rank: 624
score: 98.4296875
patch: else { break ; } / *
rank: 624
score: 98.3575439453125
patch: break ; default : return ; }
rank: 624
score: 98.2282381924716
patch: if break ; ; if ; break ; break ;
rank: 624
score: 98.00174967447917
patch: return ) + $NUMBER$ ;
rank: 624
score: 97.9430643717448
patch: / ? return false ;
rank: 625
score: 98.8041659268466
patch: return block . equals ( is CaMeL Function ) ;
rank: 625
score: 98.5522793856534
patch: form = block . get CaMeL Parent ( ) ;
rank: 625
score: 98.52245330810547
patch: return false ; } finally break ;
rank: 625
score: 98.42908477783203
patch: break ; break ; * break ;
rank: 625
score: 98.22781372070312
patch: if break ; break ; * / break ;
rank: 625
score: 98.18559919084821
patch: Thread . sleep ( $NUMBER$ ;
rank: 625
score: 98.00071207682292
patch: break * * * ?
rank: 626
score: 98.80373128255208
patch: return block . is CaMeL Function ? false = false ;
rank: 626
score: 98.69466552734374
patch: return ( block . is CaMeL Constructor ) ;
rank: 626
score: 98.5517245205966
patch: head = block . get CaMeL Parent ( ) ;
rank: 626
score: 98.52218191964286
patch: return true ; ; } }
rank: 626
score: 98.4290542602539
patch: break ; ; * * break ;
rank: 626
score: 98.35699462890625
patch: result ; return false ; }
rank: 626
score: 98.2276611328125
patch: if ; break ; break ; if break ; }
rank: 626
score: 97.99725341796875
patch: return ref . break ;
rank: 626
score: 97.9414774576823
patch: return false ) ; }
rank: 627
score: 98.55077015269886
patch: part = block . get CaMeL Parent ( ) ;
rank: 627
score: 98.52166748046875
patch: return true ; break ; break ;
rank: 627
score: 98.42811802455357
patch: else { } break ; }
rank: 627
score: 98.3557357788086
patch: break ; / * break * /
rank: 627
score: 98.2271728515625
patch: break ; break ; if ; { if break ;
rank: 627
score: 98.18332926432292
patch: completed = break ; }
rank: 627
score: 97.99580891927083
patch: retval . return false ;
rank: 627
score: 97.94125366210938
patch: return false . true ;
rank: 628
score: 98.802734375
patch: return block . is CaMeL Function ) - null ;
rank: 628
score: 98.5491055575284
patch: resource = block . get CaMeL Parent ( ) ;
rank: 628
score: 98.35565185546875
patch: this . ; return false ;
rank: 628
score: 98.22689819335938
patch: if ; {
rank: 628
score: 97.99461873372395
patch: break / * * ?
rank: 628
score: 97.94032796223958
patch: return return break ; }
rank: 629
score: 98.54886474609376
patch: res = block . is CaMeL Function ) {
rank: 629
score: 98.52143012152777
patch: return false ; } } if null ;
rank: 629
score: 98.42786516462054
patch: try { break break ; }
rank: 629
score: 98.3548355102539
patch: break ; default : throw ; }
rank: 629
score: 98.22672526041667
patch: if ; break ; set
rank: 629
score: 97.99458312988281
patch: break ) {
rank: 630
score: 98.54823996803977
patch: cur = block . get CaMeL Parent ( ) ;
rank: 630
score: 98.521240234375
patch: break ; } } if false ;
rank: 630
score: 98.42716217041016
patch: value { break ; break ; }
rank: 630
score: 98.35470145089286
patch: return ; } else break ;
rank: 630
score: 98.22635904947917
patch: throw break ; break ;
rank: 630
score: 98.1657206217448
patch: changed = break ; }
rank: 630
score: 97.99092407226563
patch: return false false ;
rank: 630
score: 97.93534342447917
patch: throw [ 0 ] ;
rank: 631
score: 98.54798473011364
patch: elements . if ( block . is CaMeL Function )
rank: 631
score: 98.52095540364583
patch: return null ; } } } break ;
rank: 631
score: 98.42686244419643
patch: return true ; break ; ;
rank: 631
score: 98.35372585720486
patch: break ; } } while ( false )
rank: 631
score: 98.22585227272727
patch: break ; if ; break ; if break ; }
rank: 631
score: 98.16314086914062
patch: return ! break ;
rank: 631
score: 97.9347432454427
patch: return ; return false ;
rank: 632
score: 98.79917399088542
patch: return ( block . is CaMeL Function ) - 0 ;
rank: 632
score: 98.68284776475694
patch: return is CaMeL Function ) ; break ;
rank: 632
score: 98.54743041992188
patch: return ( block . is CaMeL Block ) ;
rank: 632
score: 98.51994493272569
patch: break ; } else ; break ; }
rank: 632
score: 98.35364532470703
patch: return false ; } * break ;
rank: 632
score: 98.22559204101563
patch: break ; ; if break ; if ; ;
rank: 632
score: 98.16202799479167
patch: synchronized ( this ) {
rank: 632
score: 97.99073282877605
patch: return true : true ;
rank: 632
score: 97.93136596679688
patch: block . return true ;
rank: 633
score: 98.7965799967448
patch: return block . get CaMeL Line ( ) != null ;
rank: 633
score: 98.6797607421875
patch: block . is CaMeL Function $NUMBER$ ( ) ;
rank: 633
score: 98.54706365411931
patch: binding = block . get CaMeL Parent ( ) ;
rank: 633
score: 98.51909528459821
patch: return 0 ; } break ;
rank: 633
score: 98.35262044270833
patch: found = true ; break ; } ;
rank: 633
score: 98.16012573242188
patch: false = break ; }
rank: 633
score: 97.9874267578125
patch: return false - 1 ;
rank: 633
score: 97.92913818359375
patch: return ) + false ;
rank: 634
score: 98.7959872159091
patch: return ref . is CaMeL Function ) - true ;
rank: 634
score: 98.67824300130208
patch: return is CaMeL Declaration ( block ) ;
rank: 634
score: 98.54691938920455
patch: decl = block . get CaMeL Parent ( ) ;
rank: 634
score: 98.51888602120536
patch: return break ; break ; ;
rank: 634
score: 98.42570277622768
patch: finally { if break ; }
rank: 634
score: 98.35227748325893
patch: break ; * / ; }
rank: 634
score: 98.22537231445312
patch: System ; ; break ;
rank: 634
score: 98.15179443359375
patch: match = break ;
rank: 634
score: 97.92835489908855
patch: warn ; return false ;
rank: 635
score: 98.79563395182292
patch: return block . get CaMeL Count ( ) == 0 ;
rank: 635
score: 98.51884155273437
patch: break ; } finally
rank: 635
score: 98.42567661830357
patch: catch ) ; break ; }
rank: 635
score: 98.35169219970703
patch: break ; default : return true ;
rank: 635
score: 98.22490900213069
patch: break ; break ; } break ; } break ;
rank: 635
score: 98.15120239257813
patch: if ( break ;
rank: 635
score: 97.92715454101562
patch: { { return false ;
rank: 636
score: 98.51857212611607
patch: return ; ; return false ;
rank: 636
score: 98.22413219105114
patch: break ; break ; if ; ; if break ;
rank: 636
score: 98.14937337239583
patch: break ; } do {
rank: 636
score: 97.9267578125
patch: return - $NUMBER$ ; }
rank: 637
score: 98.54512786865234
patch: super . is CaMeL Function ) {
rank: 637
score: 98.42404174804688
patch: break ; } catch break ; ;
rank: 637
score: 98.22337036132812
patch: if break ; break ; if break ; else
rank: 637
score: 98.14644368489583
patch: false = true ; }
rank: 637
score: 97.97398071289062
patch: break return true ;
rank: 637
score: 97.9256083170573
patch: * / return true ;
rank: 638
score: 98.67174072265625
patch: return ( block . is CaMeL Constant ) ;
rank: 638
score: 98.54444469105114
patch: else if ( block . is CaMeL Local ) {
rank: 638
score: 98.51814270019531
patch: return false ; } else false ;
rank: 638
score: 98.42350551060268
patch: else { super . break ;
rank: 638
score: 98.35079956054688
patch: break ; } } / * ;
rank: 638
score: 98.22274169921874
patch: break ; if ; break ; / break ;
rank: 638
score: 98.14407348632812
patch: match = break ; }
rank: 638
score: 97.92502848307292
patch: return false ; } :
rank: 639
score: 98.66917588975694
patch: return block . is CaMeL Declaration ) ;
rank: 639
score: 98.51812744140625
patch: return 0 ; } break ; }
rank: 639
score: 98.35076904296875
patch: / * break ; ; * /
rank: 639
score: 98.22234497070312
patch: if ; { break ; if ; break ;
rank: 639
score: 98.14195760091145
patch: break << $NUMBER$ ; }
rank: 639
score: 97.96353149414062
patch: break ? block = block
rank: 640
score: 98.5440673828125
patch: return ( block . is CaMeL Local ) ; }
rank: 640
score: 98.42346954345703
patch: break ; break ; / / /
rank: 640
score: 98.35072835286458
patch: result . break ; }
rank: 640
score: 98.222265625
patch: if ; break ; if break ; / /
rank: 640
score: 98.14102172851562
patch: finished = break ; }
rank: 641
score: 98.5439453125
patch: return block . is CaMeL Function ) ] ;
rank: 641
score: 98.51804606119792
patch: } else { if break ; } }
rank: 641
score: 98.42074148995536
patch: else { break ; / ;
rank: 641
score: 98.2220458984375
patch: break ; break ; if ; if break ; }
rank: 641
score: 97.91562906901042
patch: return $STRING$ + block ;
rank: 642
score: 98.78871663411458
patch: return block . is CaMeL Function ) + false ; }
rank: 642
score: 98.54387872869319
patch: end = block . get CaMeL Parent ( ) ;
rank: 642
score: 98.51759338378906
patch: } break ; } break ; }
rank: 642
score: 98.4202880859375
patch: break ; println break ; }
rank: 642
score: 98.22158203125
patch: return ; if ; break ; if break ;
rank: 642
score: 98.13693237304688
patch: loop : break ; }
rank: 642
score: 97.91217041015625
patch: break } return true ;
rank: 643
score: 98.78594415838069
patch: try { return ! block . is CaMeL Function )
rank: 643
score: 98.6634521484375
patch: return ( block . is CaMeL Get ) ;
rank: 643
score: 98.51701524522569
patch: return false ; ; } if break ;
rank: 643
score: 98.41980743408203
patch: while false ; break ; ; ;
rank: 643
score: 98.34722900390625
patch: break ; } } / *
rank: 643
score: 98.2205301920573
patch: if 0 ; break ;
rank: 643
score: 98.1357930501302
patch: n = break ; }
rank: 643
score: 97.91070556640625
patch: return - . false ;
rank: 644
score: 98.53906860351563
patch: break ; case Basic CaMeL Block . Loop :
rank: 644
score: 98.51674397786458
patch: continue ; } else { break ; }
rank: 644
score: 98.41966247558594
patch: break { break ; break ; }
rank: 644
score: 98.34703717912946
patch: if ( ; ; break ;
rank: 644
score: 98.22034801136364
patch: break ; if ; = break ; if break ;
rank: 644
score: 98.12740478515624
patch: target = break ;
rank: 644
score: 97.9547831217448
patch: return ) * * /
rank: 644
score: 97.90994873046876
patch: return ref ; }
rank: 645
score: 98.77921919389205
patch: break ; } return block . is CaMeL Function ;
rank: 645
score: 98.53862169053819
patch: if ( block . is CaMeL Function _
rank: 645
score: 98.51673719618056
patch: return ; ; } catch break ; }
rank: 645
score: 98.34676361083984
patch: result [ 0 ] = ; }
rank: 645
score: 98.2202880859375
patch: / ; break ; if break ; break ;
rank: 645
score: 98.12729899088542
patch: boolean success = false ;
rank: 645
score: 97.95182291666667
patch: return false - true ;
rank: 645
score: 97.90903930664062
patch: throw true ; }
rank: 646
score: 98.53392333984375
patch: return ref . is CaMeL Function ) true ;
rank: 646
score: 98.51587592230902
patch: return ; ; } } else return ;
rank: 646
score: 98.41945103236607
patch: else { / break ; }
rank: 646
score: 98.22015935724431
patch: if break ; break ; if / = break ;
rank: 646
score: 98.12366739908855
patch: finished = true ; }
rank: 646
score: 97.94580078125
patch: t . return false ;
rank: 646
score: 97.90899658203125
patch: return $STRING$ ;
rank: 647
score: 98.65911865234375
patch: return ; } else { return true ;
rank: 647
score: 98.51409233940973
patch: return ; ; } } else break ;
rank: 647
score: 98.4181900024414
patch: else { break ; } * ;
rank: 647
score: 98.3462142944336
patch: break ; default : throw new ;
rank: 647
score: 98.22010498046875
patch: if ; = break ; ; if break ;
rank: 647
score: 98.12164306640625
patch: break & break ; }
rank: 647
score: 97.94247436523438
patch: break - * * /
rank: 647
score: 97.9083964029948
patch: return this + false ;
rank: 648
score: 98.53127034505208
patch: break ; case Basic CaMeL Block . )
rank: 648
score: 98.51369222005208
patch: return break ; } } throw null ;
rank: 648
score: 98.41778564453125
patch: break ; if break ; } ;
rank: 648
score: 98.345947265625
patch: break ; * / break ; }
rank: 648
score: 98.22001342773437
patch: else if break ; break ; if break ;
rank: 648
score: 98.1203104654948
patch: break ; } catch ;
rank: 648
score: 97.94237060546875
patch: warn ( ) ;
rank: 649
score: 98.7779208096591
patch: return ref . is CaMeL Function ) : true ;
rank: 649
score: 98.53055419921876
patch: type = block . is CaMeL Function ) ;
rank: 649
score: 98.51299370659723
patch: return break ; } finally { break ;
rank: 649
score: 98.41741943359375
patch: for null ; break ;
rank: 649
score: 98.34517669677734
patch: break ; ; ; } else {
rank: 649
score: 98.21969604492188
patch: break ; ; if break ; if ; {
rank: 649
score: 98.11643473307292
patch: removed = break ; }
rank: 649
score: 97.94090576171875
patch: block . break ;
rank: 650
score: 98.77532958984375
patch: return block . equals ( ref ) ;
rank: 650
score: 98.65544976128473
patch: return ref . is CaMeL Local ) ;
rank: 650
score: 98.5128402709961
patch: return null ; } catch ; ;
rank: 650
score: 98.34368133544922
patch: return ; } if ( block ;
rank: 650
score: 98.21943969726563
patch: break ; break ; break ; if ; {
rank: 650
score: 98.1152852376302
patch: break true ; } }
rank: 650
score: 97.93923950195312
patch: return ) ? break ;
rank: 650
score: 97.90409342447917
patch: try { return break ;
rank: 651
score: 98.65082397460938
patch: return ( block . is CaMeL Return ) ;
rank: 651
score: 98.52735053168402
patch: return ref . is CaMeL Function ; }
rank: 651
score: 98.51226806640625
patch: return false ; } else if false ;
rank: 651
score: 98.4160664876302
patch: ++ break ; break ;
rank: 651
score: 98.34335763113839
patch: switch ( block . ; }
rank: 651
score: 98.2191495028409
patch: if ; break ; if break ; while break ;
rank: 651
score: 98.11469116210938
patch: state = break ;
rank: 651
score: 97.9385986328125
patch: return ) { break ;
rank: 651
score: 97.90316772460938
patch: throw false ; }
rank: 652
score: 98.5120849609375
patch: return break ; ; } } break ;
rank: 652
score: 98.41590881347656
patch: catch break ; ; if break ;
rank: 652
score: 98.34219796316964
patch: cmd = ; break ; }
rank: 652
score: 98.21908569335938
patch: if ; break ; throw
rank: 652
score: 98.11329142252605
patch: break super . break ;
rank: 653
score: 98.64472045898438
patch: return return ref . is CaMeL Function ) ;
rank: 653
score: 98.52026977539063
patch: & ( block . is CaMeL Function ) {
rank: 653
score: 98.51203918457031
patch: return ; ; return false ; }
rank: 653
score: 98.41394805908203
patch: break ; } break ; } }
rank: 653
score: 98.21906072443181
patch: break ; ; if ; if break ; break ;
rank: 653
score: 98.1099853515625
patch: body = break ;
rank: 653
score: 97.9314473470052
patch: break * * * *
rank: 653
score: 97.90221150716145
patch: return true . false ;
rank: 654
score: 98.51763237847223
patch: if ( ref . is CaMeL Function )
rank: 654
score: 98.41313171386719
patch: break ; ; } break ; ;
rank: 654
score: 98.34067208426339
patch: return true ; } ; }
rank: 654
score: 98.2174072265625
patch: break ; ; / if break ; if break ;
rank: 654
score: 98.109375
patch: value = break ; }
rank: 654
score: 97.93129272460938
patch: break + true ;
rank: 654
score: 97.90161743164063
patch: return $STRING$ ; }
rank: 655
score: 98.63472493489583
patch: is CaMeL Function ) { return false ;
rank: 655
score: 98.51611328125
patch: expr = block . is CaMeL Function ) ;
rank: 655
score: 98.51149495442708
patch: return ; ; } } return true ;
rank: 655
score: 98.4128189086914
patch: else break ; } break ; }
rank: 655
score: 98.34061976841518
patch: throw new break null ; }
rank: 655
score: 98.2173828125
patch: break ; ; * if break ; break ;
rank: 655
score: 98.10843912760417
patch: decl = break ; }
rank: 655
score: 97.93075561523438
patch: return true - false ;
rank: 655
score: 97.89784749348958
patch: throw new null ; }
rank: 656
score: 98.63436889648438
patch: return ( block . is CaMeL Start ) ;
rank: 656
score: 98.5154052734375
patch: return block . is CaMeL Function ; break ;
rank: 656
score: 98.41270446777344
patch: break ; try { if break ;
rank: 656
score: 98.33982631138393
patch: throw new break -- ; }
rank: 656
score: 98.21671752929687
patch: / ; break ;
rank: 656
score: 98.10736083984375
patch: Assertion CaMeL Error break ;
rank: 656
score: 97.8975830078125
patch: result = ! break ;
rank: 657
score: 98.51134490966797
patch: return null ; } break ; ;
rank: 657
score: 98.33879852294922
patch: if ( ; else throw ; }
rank: 657
score: 98.21620483398438
patch: if ; break ; / ; if break ;
rank: 657
score: 98.10621134440105
patch: break && ! break ;
rank: 657
score: 97.92093912760417
patch: return ) + 0 ;
rank: 658
score: 98.76489868164063
patch: return false ; } block . return true ;
rank: 658
score: 98.51085747612848
patch: return null ; } } return true ;
rank: 658
score: 98.51017456054687
patch: exception = block . is CaMeL Function ) ;
rank: 658
score: 98.41183471679688
patch: break ; ; ; break ; }
rank: 658
score: 98.33821323939732
patch: break ; case ; default :
rank: 658
score: 98.21605335582386
patch: if break ; break ; if break ; / /
rank: 658
score: 98.10157267252605
patch: break ; } } else
rank: 658
score: 97.91934204101562
patch: return false }
rank: 659
score: 98.62091064453125
patch: block . is CaMeL Function ( ) ; }
rank: 659
score: 98.51009368896484
patch: } else { return ; } }
rank: 659
score: 98.41158294677734
patch: break ; } break ; * /
rank: 659
score: 98.33799235026042
patch: return ; } ; ;
rank: 659
score: 98.21592018821023
patch: break ; break ; break ; if break ; }
rank: 659
score: 98.09806315104167
patch: completed = true ; }
rank: 659
score: 97.9185791015625
patch: break else return true ;
rank: 659
score: 97.89110310872395
patch: return FALSE ; } }
rank: 660
score: 98.760009765625
patch: return block . get CaMeL Parent ( ) ; }
rank: 660
score: 98.51008823939732
patch: return ; ; } finally ;
rank: 660
score: 98.50531616210938
patch: res = block . is CaMeL Function ) _
rank: 660
score: 98.41020202636719
patch: catch break ; break ; } ;
rank: 660
score: 98.33760579427083
patch: return ; } ; }
rank: 660
score: 98.21549849076705
patch: break ; } if break ; if ; break ;
rank: 660
score: 98.09713745117188
patch: break || break ; }
rank: 660
score: 97.91851806640625
patch: return TRUE + false ;
rank: 661
score: 98.75789018110795
patch: return = ! block . is CaMeL Function ) ;
rank: 661
score: 98.50992257254464
patch: } return break ; break ;
rank: 661
score: 98.50406222873264
patch: return ! block . is CaMeL Function ;
rank: 661
score: 98.40995788574219
patch: if break ; break ; } ;
rank: 661
score: 98.33747863769531
patch: return true ; default : break ;
rank: 661
score: 98.21138509114583
patch: if ; + break ;
rank: 661
score: 98.09615071614583
patch: throw ; } break ;
rank: 661
score: 97.8890380859375
patch: result = ! true ;
rank: 662
score: 98.75470581054688
patch: return true ; } else { return true ;
rank: 662
score: 98.50968424479167
patch: return false ; } else } break ;
rank: 662
score: 98.49930826822917
patch: return block . get CaMeL Parent ( )
rank: 662
score: 98.40913391113281
patch: break ; break ; } / ;
rank: 662
score: 98.20936075846355
patch: break ; else break ;
rank: 662
score: 98.09466552734375
patch: if ( false ) {
rank: 662
score: 97.91749877929688
patch: return ) false ;
rank: 662
score: 97.88646443684895
patch: e . return false ;
rank: 663
score: 98.75244140625
patch: return block . is CaMeL Function && false ;
rank: 663
score: 98.61561584472656
patch: return ; } } return true ;
rank: 663
score: 98.49680582682292
patch: found = block . is CaMeL Function ;
rank: 663
score: 98.40901947021484
patch: else { break ; } false ;
rank: 663
score: 98.2072041829427
patch: if type ; break ;
rank: 663
score: 98.09395751953124
patch: match = true ;
rank: 663
score: 97.91286214192708
patch: throw $NUMBER$ : false ;
rank: 663
score: 97.8862813313802
patch: return - + false ;
rank: 664
score: 98.50916290283203
patch: return break ; } catch ; ;
rank: 664
score: 98.40897369384766
patch: break ; } return false ; ;
rank: 664
score: 98.33598981584821
patch: return ; } return true ;
rank: 664
score: 98.20361328125
patch: if ; { System ;
rank: 664
score: 98.09305419921876
patch: dim = break ;
rank: 664
score: 97.88614908854167
patch: return true + false ;
rank: 665
score: 98.74851684570312
patch: return block . is CaMeL Function + true ;
rank: 665
score: 98.50858306884766
patch: return false ; break ; ; }
rank: 665
score: 98.46079799107143
patch: LOG . return false ; }
rank: 665
score: 98.40756225585938
patch: break ; } break ; } else
rank: 665
score: 98.33566284179688
patch: break ; } return false ; }
rank: 665
score: 98.20229085286458
patch: if super ; break ;
rank: 665
score: 98.0900166829427
patch: false = false ; }
rank: 665
score: 97.90904744466145
patch: throw $NUMBER$ : true ;
rank: 665
score: 97.879638671875
patch: log ; return true ;
rank: 666
score: 98.50847625732422
patch: return break ; for break ; }
rank: 666
score: 98.4573974609375
patch: log . return false ; }
rank: 666
score: 98.40699768066406
patch: break ; if break ; ; *
rank: 666
score: 98.33482142857143
patch: break ; default ; ; }
rank: 666
score: 98.19923095703125
patch: logger ; break ;
rank: 666
score: 98.08905029296875
patch: null = break ; }
rank: 666
score: 97.90792846679688
patch: b . return false ;
rank: 666
score: 97.87118530273438
patch: return - * true ;
rank: 667
score: 98.50846354166667
patch: return false ; } finally return break ;
rank: 667
score: 98.40699005126953
patch: break ; break ; break ; *
rank: 667
score: 98.33308628627232
patch: break ; } ; ; ;
rank: 667
score: 98.1982930501302
patch: throw new Error ; Exception
rank: 667
score: 98.08810424804688
patch: break -= 1 ; }
rank: 667
score: 97.86435953776042
patch: return return ) ; }
rank: 668
score: 98.74132690429687
patch: return block . is CaMeL Function == null ;
rank: 668
score: 98.60770263671876
patch: is CaMeL Function ( block ) ; break ;
rank: 668
score: 98.50768280029297
patch: return false ; } if ; }
rank: 668
score: 98.40678405761719
patch: break ; break ; / / ;
rank: 668
score: 98.33283233642578
patch: if ( ; ) break ; }
rank: 668
score: 98.19698486328124
patch: while ; break ;
rank: 668
score: 98.08642578125
patch: dim = break ; }
rank: 669
score: 98.74019775390624
patch: return block . get CaMeL Name ( ) ;
rank: 669
score: 98.60553656684027
patch: return ref . is CaMeL Declaration ) ;
rank: 669
score: 98.50741916232639
patch: return break ; } finally return false ;
rank: 669
score: 98.44085693359375
patch: log . return false ;
rank: 669
score: 98.1966044108073
patch: throw new Error break ;
rank: 669
score: 98.08111572265625
patch: changed = true ; }
rank: 669
score: 97.90494791666667
patch: break / * * /
rank: 669
score: 97.8540751139323
patch: ) { return true ;
rank: 670
score: 98.73857964409723
patch: return block . equals ( this ) ;
rank: 670
score: 98.6034423828125
patch: is CaMeL Function = false ; return false ;
rank: 670
score: 98.50716824001736
patch: break ; } } else if break ;
rank: 670
score: 98.4406967163086
patch: continue ; } else { break ;
rank: 670
score: 98.40511067708333
patch: break ; break ; *
rank: 670
score: 98.33129010881696
patch: break ; } continue ; }
rank: 670
score: 98.193896484375
patch: this ; break ;
rank: 670
score: 98.07599487304688
patch: success = break ;
rank: 671
score: 98.73718939887152
patch: break ; } block . return false ;
rank: 671
score: 98.50651332310268
patch: return null ; ; } }
rank: 671
score: 98.43634033203125
patch: switch ( block . get CaMeL
rank: 671
score: 98.4049072265625
patch: n = break ;
rank: 671
score: 98.33033752441406
patch: return ; } if ( ! ;
rank: 671
score: 98.19297281901042
patch: break ; ; / /
rank: 671
score: 98.07349243164063
patch: return success ; }
rank: 672
score: 98.50616455078125
patch: return false ; break ; else }
rank: 672
score: 98.40420532226562
patch: case 0 ; break ;
rank: 672
score: 98.33020891462054
patch: break ; ++ break ; }
rank: 672
score: 98.19215901692708
patch: if ; = null ;
rank: 672
score: 98.073486328125
patch: break false ; } else
rank: 672
score: 97.84595947265625
patch: return TRUE ; }
rank: 673
score: 98.50616455078125
patch: else { return ; ; } }
rank: 673
score: 98.40409851074219
patch: break ; ; break ; } }
rank: 673
score: 98.32942417689732
patch: continue ; } return false ;
rank: 673
score: 98.19112141927083
patch: break ; if ; try
rank: 673
score: 98.07232666015625
patch: if ( false )
rank: 673
score: 97.89795939127605
patch: return this . break ;
rank: 673
score: 97.84483846028645
patch: return Boolean . 0 ;
rank: 674
score: 98.73123779296876
patch: return block . is CaMeL Function && true ;
rank: 674
score: 98.60141330295139
patch: return block . is CaMeL Call ) ;
rank: 674
score: 98.50579833984375
patch: } else return break ; }
rank: 674
score: 98.40351867675781
patch: finally { break ; } / ;
rank: 674
score: 98.32920328776042
patch: break ; count ++ ;
rank: 674
score: 98.1886698404948
patch: } if ; break ;
rank: 674
score: 98.07203165690105
patch: final break ; } }
rank: 674
score: 97.89762369791667
patch: ref . return false ;
rank: 674
score: 97.84451293945312
patch: return true ; } {
rank: 675
score: 98.40278625488281
patch: } else { break ; break ;
rank: 675
score: 98.3284912109375
patch: state = ; break ; }
rank: 675
score: 98.1820576985677
patch: if ; = start ;
rank: 675
score: 98.07097778320312
patch: changed = true ;
rank: 675
score: 97.89729817708333
patch: break is CaMeL Function _
rank: 675
score: 97.84437052408855
patch: else { return ) ;
rank: 676
score: 98.72552490234375
patch: return block . is CaMeL Function && break ;
rank: 676
score: 98.59507921006944
patch: return is CaMeL Interface ( block ) ;
rank: 676
score: 98.50563267299107
patch: { if break ; } }
rank: 676
score: 98.421240234375
patch: continue ; break ;
rank: 676
score: 98.40275573730469
patch: break ; } break ; } *
rank: 676
score: 98.328125
patch: if ( ; } else break ;
rank: 676
score: 98.18177286783855
patch: break ; throw break ;
rank: 676
score: 98.07012939453125
patch: repaint ( ) ; }
rank: 676
score: 97.84250895182292
patch: count * * * /
rank: 677
score: 98.59299723307292
patch: return is CaMeL Constructor ( block ) ;
rank: 677
score: 98.50450134277344
patch: { break ; } } break ;
rank: 677
score: 98.42078508649554
patch: t = block . get CaMeL
rank: 677
score: 98.40193176269531
patch: catch null && break || break ;
rank: 677
score: 98.32806396484375
patch: synchronized ( this ) { break ;
rank: 677
score: 98.06935424804688
patch: final ; break ;
rank: 677
score: 97.8912353515625
patch: break block + false ;
rank: 678
score: 98.72396850585938
patch: return block . get CaMeL Reference ( ) ;
rank: 678
score: 98.50297546386719
patch: return true ; } } catch ;
rank: 678
score: 98.40145111083984
patch: case $STRING$ : break ; break ;
rank: 678
score: 98.1789306640625
patch: } ; break ;
rank: 678
score: 98.06805419921875
patch: throw new ; ; }
rank: 678
score: 97.83510335286458
patch: return this ; } }
rank: 679
score: 98.58352322048611
patch: return is CaMeL Local ( block ) ;
rank: 679
score: 98.5029296875
patch: if ( break ; } return false ;
rank: 679
score: 98.40780029296874
patch: true ; break ;
rank: 679
score: 98.40094757080078
patch: finally { break ; } * *
rank: 679
score: 98.32759857177734
patch: break ; } * / ; ;
rank: 679
score: 98.17846069335937
patch: break ; ; /
rank: 679
score: 98.06741333007812
patch: success = false ; }
rank: 679
score: 97.83425903320312
patch: return ; } } }
rank: 680
score: 98.58249240451389
patch: return is CaMeL Empty ( block ) ;
rank: 680
score: 98.50287737165179
patch: / * * break ; }
rank: 680
score: 98.40584564208984
patch: case Basic CaMeL Block . Loop :
rank: 680
score: 98.40071868896484
patch: break ; case break ; ; ;
rank: 680
score: 98.17655436197917
patch: if ; -- break ;
rank: 680
score: 98.06540934244792
patch: if ( ! success )
rank: 680
score: 97.8891092936198
patch: found . return false ;
rank: 680
score: 97.83364868164062
patch: throw $NUMBER$ ;
rank: 681
score: 98.576904296875
patch: throw iterator . next ( ) ;
rank: 681
score: 98.50281439887152
patch: { return false ; } break ; }
rank: 681
score: 98.39931233723958
patch: return 0 ; break ;
rank: 681
score: 98.17647298177083
patch: if ; * break ;
rank: 681
score: 98.06525421142578
patch: break ) ;
rank: 681
score: 97.88887532552083
patch: ex . return false ;
rank: 681
score: 97.83245849609375
patch: return TRUE ;
rank: 682
score: 98.57575141059027
patch: return is CaMeL Call ( block ) ;
rank: 682
score: 98.50270298549107
patch: return ! break ; } }
rank: 682
score: 98.39910888671875
patch: else { break ; } ; /
rank: 682
score: 98.06322021484375
patch: throw break ; }
rank: 682
score: 97.8873291015625
patch: return TRUE + true ;
rank: 682
score: 97.82913970947266
patch: throw 1 ;
rank: 683
score: 98.71712646484374
patch: return block . is CaMeL Function ) $NUMBER$ ;
rank: 683
score: 98.50263129340277
patch: return false ; } } if true ;
rank: 683
score: 98.39564514160156
patch: finally { break ; } ; ;
rank: 683
score: 98.37631661551339
patch: LOG . return true ; }
rank: 683
score: 98.16576131184895
patch: if ; break ; check
rank: 683
score: 98.06064860026042
patch: success = true ; }
rank: 683
score: 97.88565063476562
patch: return ) ? false
rank: 683
score: 97.82869262695313
patch: return return ) ;
rank: 684
score: 98.71489868164062
patch: return ref . is CaMeL Function ) 1 ;
rank: 684
score: 98.39551544189453
patch: break ; ; / / / ;
rank: 684
score: 98.1641133626302
patch: if ; break ; do
rank: 684
score: 98.05716959635417
patch: final ; return break ;
rank: 684
score: 97.82504272460938
patch: result = ! ) ;
rank: 685
score: 98.714892578125
patch: return block . is CaMeL Function block ) ;
rank: 685
score: 98.5023193359375
patch: return false ; } catch null ;
rank: 685
score: 98.39524841308594
patch: if null ; break ; ; ;
rank: 685
score: 98.32244873046875
patch: break ; , break ; }
rank: 685
score: 98.1577860514323
patch: return ; throw break ;
rank: 685
score: 98.0570780436198
patch: prev = break ; }
rank: 685
score: 97.88272094726562
patch: ret . return true ;
rank: 685
score: 97.82484944661458
patch: return - false ; }
rank: 686
score: 98.71398315429687
patch: return block . is CaMeL Function ) * /
rank: 686
score: 98.50221252441406
patch: return ; } else return break ;
rank: 686
score: 98.39356994628906
patch: else { value ; break ; }
rank: 686
score: 98.36679513113839
patch: end CaMeL Block ( ) ;
rank: 686
score: 98.322265625
patch: throw new break 1 ;
rank: 686
score: 98.15665690104167
patch: break ; ; ; ;
rank: 686
score: 98.05667114257812
patch: parent = break ; }
rank: 686
score: 97.88219197591145
patch: return block != true ;
rank: 686
score: 97.82443237304688
patch: return - false ;
rank: 687
score: 98.50209045410156
patch: break ; } } synchronized break ;
rank: 687
score: 98.39289855957031
patch: else { break ; break ; *
rank: 687
score: 98.32216971261161
patch: result = ; break ; }
rank: 687
score: 98.15609741210938
patch: break ; ; false ;
rank: 687
score: 98.05472819010417
patch: while ( break ) {
rank: 687
score: 97.88170369466145
patch: s . return false ;
rank: 688
score: 98.55624728732639
patch: return block . equals ( $STRING$ ) ;
rank: 688
score: 98.50189971923828
patch: return false ; } else ; }
rank: 688
score: 98.39224243164062
patch: catch null || break && break ;
rank: 688
score: 98.34361921037946
patch: n = block . get CaMeL
rank: 688
score: 98.15419921875
patch: LOG ; break ;
rank: 688
score: 98.05420939127605
patch: init ( break ) ;
rank: 688
score: 97.88130696614583
patch: break - - 1 ;
rank: 689
score: 98.70682373046876
patch: return true ; } block . return false ;
rank: 689
score: 98.5018539428711
patch: continue ; } else if break ;
rank: 689
score: 98.3922119140625
patch: else { break ; } else ;
rank: 689
score: 98.32036481584821
patch: this ; return false ; }
rank: 689
score: 97.80831298828124
patch: result = ) ;
rank: 690
score: 98.50180489676339
patch: } else return null ; }
rank: 690
score: 98.39166259765625
patch: break ; break ; / else {
rank: 690
score: 98.33826700846355
patch: continue ; } * /
rank: 690
score: 98.32019914899554
patch: return false ; } ; ;
rank: 690
score: 98.1489766438802
patch: return ; * break ;
rank: 690
score: 97.804443359375
patch: throw * * /
rank: 691
score: 98.50141737196181
patch: return break ; break ; break ; }
rank: 691
score: 98.39007568359375
patch: / * ] break ;
rank: 691
score: 98.33655802408855
patch: continue ; } break ;
rank: 691
score: 98.31998116629464
patch: break ; ; continue ; }
rank: 691
score: 98.14840698242188
patch: if break ; ; ;
rank: 691
score: 98.04681396484375
patch: break Boolean . TRUE ;
rank: 691
score: 97.87906901041667
patch: break * * ? block
rank: 691
score: 97.79287719726562
patch: return block ; }
rank: 692
score: 98.49951934814453
patch: * * * break ; } }
rank: 692
score: 98.3196792602539
patch: break ; ; } } else {
rank: 692
score: 98.14783325195313
patch: out ; break ;
rank: 692
score: 98.04524739583333
patch: added = break ; }
rank: 692
score: 97.78231201171874
patch: try { try {
rank: 693
score: 98.53981018066406
patch: is CaMeL Function ) { break ;
rank: 693
score: 98.49945831298828
patch: return break ; } finally if ;
rank: 693
score: 98.38990275065105
patch: break ; println break ;
rank: 693
score: 98.31869942801339
patch: found ; return true ; }
rank: 693
score: 98.14317830403645
patch: for ; ; break ;
rank: 693
score: 98.04430135091145
patch: break + 1 ; }
rank: 693
score: 97.87706298828125
patch: break != null ;
rank: 694
score: 98.5206298828125
patch: return ( Basic CaMeL Block ) block ;
rank: 694
score: 98.49938286675348
patch: return ; ; } } return null ;
rank: 694
score: 98.318603515625
patch: break ; } } switch ;
rank: 694
score: 98.14307657877605
patch: if ; throws break ;
rank: 694
score: 98.04232177734374
patch: match = false ;
rank: 694
score: 97.87687174479167
patch: return ) + true ;
rank: 694
score: 97.77130126953125
patch: result = return ;
rank: 695
score: 98.38905334472656
patch: break ; break ; / ; /
rank: 695
score: 98.3185546875
patch: if ( ! ;
rank: 695
score: 98.14274088541667
patch: break ; break ; set
rank: 695
score: 97.87620035807292
patch: return true . true ;
rank: 695
score: 97.76926879882812
patch: result = this ;
rank: 696
score: 98.5151138305664
patch: return is CaMeL Interface ( ) ;
rank: 696
score: 98.49883270263672
patch: return ; ; } break ; ;
rank: 696
score: 98.3874740600586
patch: while false ; break ; break ;
rank: 696
score: 98.31853376116071
patch: break ; } ; finally {
rank: 696
score: 98.30916341145833
patch: match ( block ) ;
rank: 696
score: 98.1418212890625
patch: start ; break ;
rank: 696
score: 98.03969319661458
patch: finished = false ; }
rank: 696
score: 97.8730977376302
patch: return true + 1 ;
rank: 696
score: 97.76897583007812
patch: fail ( ) ;
rank: 697
score: 98.68952026367188
patch: return block . is CaMeL Function ? false ;
rank: 697
score: 98.49876573350694
patch: { return break ; } } break ;
rank: 697
score: 98.38697814941406
patch: finally { break ; if null ;
rank: 697
score: 98.318115234375
patch: return false ; } ; }
rank: 697
score: 98.30689493815105
patch: LOG . return false ;
rank: 697
score: 98.13858032226562
patch: if System ; break ;
rank: 697
score: 98.03946940104167
patch: break = block ; }
rank: 697
score: 97.7638448079427
patch: try {
rank: 698
score: 98.68689575195313
patch: return block . size ( ) == 0 ;
rank: 698
score: 98.49875217013889
patch: break ; } else { false ; }
rank: 698
score: 98.31728690011161
patch: throw new break ; ; }
rank: 698
score: 98.13751220703125
patch: do if ; break ;
rank: 698
score: 98.03916015625
patch: break 1 ; }
rank: 698
score: 97.86996459960938
patch: return true - true ;
rank: 699
score: 98.49856228298611
patch: return false ; } * * * /
rank: 699
score: 98.38555908203125
patch: break ; break ; * ; /
rank: 699
score: 98.13501993815105
patch: if $STRING$ ; break ;
rank: 699
score: 98.0383809407552
patch: part = break ; }
rank: 699
score: 97.86953125
patch: break + $NUMBER$ ;
rank: 699
score: 97.75458374023438
patch: return true ; else
rank: 700
score: 98.68526204427083
patch: ref . is CaMeL Function = false ;
rank: 700
score: 98.49794006347656
patch: } break ; } return false ;
rank: 700
score: 98.48793538411458
patch: return is CaMeL Function ) ; * /
rank: 700
score: 98.38516998291016
patch: finally { break ; } ; {
rank: 700
score: 98.3170878092448
patch: break ; } ) ;
rank: 700
score: 98.29166957310268
patch: log . { return false ;
rank: 700
score: 98.13470458984375
patch: return this ; break ;
rank: 700
score: 98.03672281901042
patch: throw new ; } else
rank: 700
score: 97.8655293782552
patch: writer . return false ;
rank: 700
score: 97.74501953125
patch: result = null ;
rank: 701
score: 98.49675157335069
patch: return true ; } } else break ;
rank: 701
score: 98.48251342773438
patch: return ; } else return true ;
rank: 701
score: 98.38516235351562
patch: / * ] break ; break ;
rank: 701
score: 98.31675502232143
patch: break ; * / break ;
rank: 701
score: 98.28878348214286
patch: table . return false ; }
rank: 701
score: 98.13402303059895
patch: break ; ; logger ;
rank: 701
score: 97.7434326171875
patch: ret != null ;
rank: 702
score: 98.68342895507813
patch: return ( block instanceof Basic CaMeL Block ) ;
rank: 702
score: 98.49671766493056
patch: if break ; } } if break ;
rank: 702
score: 98.38489532470703
patch: else { break ; break ; /
rank: 702
score: 98.31569998604911
patch: break ; } ; if ;
rank: 702
score: 98.28696695963542
patch: break ; case ) {
rank: 702
score: 98.1280517578125
patch: if ; = $NUMBER$ ;
rank: 702
score: 98.0335693359375
patch: cell = break ; }
rank: 702
score: 97.86361694335938
patch: break * * * ;
rank: 702
score: 97.74223022460937
patch: return false } }
rank: 703
score: 98.67875840928819
patch: break ; } block . return true ;
rank: 703
score: 98.49651421440973
patch: return false ; } } else * /
rank: 703
score: 98.38141479492188
patch: break . break ;
rank: 703
score: 98.31524658203125
patch: node . break ; }
rank: 703
score: 98.28567504882812
patch: } else {
rank: 703
score: 98.1279805501302
patch: return ; ; break ;
rank: 703
score: 98.0330098470052
patch: removed = true ; }
rank: 703
score: 97.8616434733073
patch: return block != false ;
rank: 703
score: 97.740576171875
patch: throw 0 ; }
rank: 704
score: 98.49593098958333
patch: return false ; } } throw null ;
rank: 704
score: 98.38131713867188
patch: catch 0 ; break ;
rank: 704
score: 98.31470598493304
patch: return ; } ; * /
rank: 704
score: 98.12666829427083
patch: if ; return break ;
rank: 704
score: 98.02921549479167
patch: int index = break ;
rank: 704
score: 97.86151123046875
patch: break Assignment != null ;
rank: 704
score: 97.73810424804688
patch: success = false ;
rank: 705
score: 98.6739501953125
patch: return ! ref . is CaMeL Function ) ;
rank: 705
score: 98.49580601283482
patch: * * break ; } }
rank: 705
score: 98.46546173095703
patch: ret . add ( block ) ;
rank: 705
score: 98.37967936197917
patch: break . break ; }
rank: 705
score: 98.31272670200893
patch: break ; } / break ;
rank: 705
score: 98.25891723632813
patch: found = true ;
rank: 705
score: 98.12628173828125
patch: if n ; break ;
rank: 705
score: 98.0289815266927
patch: ref = break ; }
rank: 705
score: 97.86140950520833
patch: break Assignment == false ;
rank: 705
score: 97.73707885742188
patch: else { try {
rank: 706
score: 98.49563259548611
patch: return ; ; } else return break ;
rank: 706
score: 98.46277618408203
patch: block . is CaMeL Function ++ ;
rank: 706
score: 98.37583414713542
patch: m 0 ; break ;
rank: 706
score: 98.31166294642857
patch: break ; ; } } ;
rank: 706
score: 98.25388590494792
patch: true ; return false ;
rank: 706
score: 98.12422688802083
patch: return ; ? break ;
rank: 706
score: 98.02860514322917
patch: break ; if ; }
rank: 706
score: 97.73026733398437
patch: ret == false ;
rank: 707
score: 98.672314453125
patch: return true ; } block . return true ;
rank: 707
score: 98.49551730685764
patch: return ; ; } } break ; }
rank: 707
score: 98.37459309895833
patch: break { break ; ;
rank: 707
score: 98.31148274739583
patch: target ; break ; }
rank: 707
score: 98.25171915690105
patch: continue ; break ; }
rank: 707
score: 98.1233622233073
patch: else if ; break ;
rank: 707
score: 98.02616373697917
patch: row = break ; }
rank: 707
score: 97.8582763671875
patch: return TRUE : false ;
rank: 707
score: 97.7280517578125
patch: throw = false ;
rank: 708
score: 98.67096557617188
patch: return block . get CaMeL In ( ) ;
rank: 708
score: 98.49529266357422
patch: return false ; } * * ;
rank: 708
score: 98.45527648925781
patch: return is CaMeL Empty ( ) ;
rank: 708
score: 98.3728535970052
patch: else { return break ;
rank: 708
score: 98.31111363002232
patch: check ; return false ; }
rank: 708
score: 98.2368896484375
patch: continue ; } }
rank: 708
score: 98.12276204427083
patch: return * * break ;
rank: 708
score: 97.85667928059895
patch: l . return false ;
rank: 708
score: 97.71903686523437
patch: throw - $NUMBER$ ;
rank: 709
score: 98.670166015625
patch: return super . is CaMeL Function ) ;
rank: 709
score: 98.31012834821429
patch: ref = ; break ; }
rank: 709
score: 98.2357177734375
patch: log . return true ;
rank: 709
score: 98.1221435546875
patch: throw break ; ;
rank: 709
score: 97.85336303710938
patch: break + * ? block
rank: 709
score: 97.71548461914062
patch: break ; else {
rank: 710
score: 98.4947280883789
patch: return false ; } synchronized break ;
rank: 710
score: 98.36742146809895
patch: synchronized break ; break ;
rank: 710
score: 98.2307840983073
patch: LOG . return true ;
rank: 710
score: 98.12183634440105
patch: return ; if ; ;
rank: 710
score: 98.02439371744792
patch: repaint ( break ) ;
rank: 710
score: 97.85125732421875
patch: return block == true ;
rank: 710
score: 97.71261596679688
patch: { break ;
rank: 711
score: 98.66754760742188
patch: return block . size ( ) != 0 ;
rank: 711
score: 98.49341692243304
patch: } else { return break ;
rank: 711
score: 98.36331176757812
patch: -- break ; break ;
rank: 711
score: 98.30656215122768
patch: if ( ! ; ; }
rank: 711
score: 98.21251424153645
patch: true ; break ; }
rank: 711
score: 98.11923217773438
patch: if ; / break ;
rank: 711
score: 98.01985677083333
patch: break true ; ; }
rank: 711
score: 97.85076904296875
patch: return false - $NUMBER$ ;
rank: 711
score: 97.71024780273437
patch: result = ref ;
rank: 712
score: 98.66395874023438
patch: return ref . get CaMeL Next ( ) ;
rank: 712
score: 98.49323381696429
patch: break ; } else / ;
rank: 712
score: 98.4476547241211
patch: return this . is CaMeL Function ;
rank: 712
score: 98.36219278971355
patch: synchronized false ; break ;
rank: 712
score: 98.11773681640625
patch: if ; = 0 ;
rank: 712
score: 98.019287109375
patch: break 1 ;
rank: 712
score: 97.84747314453125
patch: break ( false ) ;
rank: 712
score: 97.70374755859375
patch: break ( ) ;
rank: 713
score: 98.49320983886719
patch: } else { if ; } }
rank: 713
score: 98.35580444335938
patch: } else ; break ;
rank: 713
score: 98.30552455357143
patch: result = false ; ; }
rank: 713
score: 98.11529541015625
patch: if key ; break ;
rank: 713
score: 98.01904296875
patch: cancelled = break ; }
rank: 713
score: 97.84200439453124
patch: return true false ;
rank: 713
score: 97.699658203125
patch: return false 1 ;
rank: 714
score: 98.49259948730469
patch: return ; ; } } finally {
rank: 714
score: 98.35563151041667
patch: / finally { break ;
rank: 714
score: 98.20387573242188
patch: added = false ;
rank: 714
score: 98.11043294270833
patch: if ; break ; boolean
rank: 714
score: 97.84138997395833
patch: return boolean != false ;
rank: 714
score: 97.69383544921875
patch: return $STRING$ 1 ;
rank: 715
score: 98.49165344238281
patch: return false ; } catch false ;
rank: 715
score: 98.43785095214844
patch: return is CaMeL Function ) false ;
rank: 715
score: 98.30303083147321
patch: return true ; } * ;
rank: 715
score: 98.1103006998698
patch: if break ; if ;
rank: 715
score: 98.0161844889323
patch: break ! break ; }
rank: 715
score: 97.6875732421875
patch: { break ; }
rank: 716
score: 98.49163818359375
patch: return null ; } else return ;
rank: 716
score: 98.43663194444444
patch: throw new Exception ( , $STRING$ ) ;
rank: 716
score: 98.35491943359375
patch: / * break break ;
rank: 716
score: 98.29901123046875
patch: break break ; } }
rank: 716
score: 98.20134887695312
patch: return = false ;
rank: 716
score: 98.10866292317708
patch: break ; break ; throw
rank: 716
score: 98.01617431640625
patch: break ; } final ;
rank: 716
score: 97.8377685546875
patch: return boolean == false ;
rank: 717
score: 98.49097357855902
patch: if ( break ; break ; } }
rank: 717
score: 98.35345458984375
patch: else { for break ;
rank: 717
score: 98.19423421223958
patch: table . return false ;
rank: 717
score: 98.10788981119792
patch: if ; = name ;
rank: 717
score: 98.01092529296875
patch: break - $NUMBER$ ; }
rank: 717
score: 97.8367919921875
patch: return break + 1 ;
rank: 717
score: 97.685009765625
patch: throw ( ) ;
rank: 718
score: 98.10770670572917
patch: return ; = start ;
rank: 718
score: 98.0094706217448
patch: part . break ; }
rank: 718
score: 97.67774047851563
patch: return throw null ;
rank: 719
score: 98.49057006835938
patch: break ; } else = false ;
rank: 719
score: 98.16924438476562
patch: table . break ;
rank: 719
score: 98.1070556640625
patch: if ; break ; *
rank: 719
score: 98.00735473632812
patch: return null == break ;
rank: 720
score: 98.3485819498698
patch: case break ; break ;
rank: 720
score: 98.10585530598958
patch: while ; { break ;
rank: 720
score: 98.0050557454427
patch: int n = break ;
rank: 720
score: 97.82825724283855
patch: break ? block = ref
rank: 721
score: 98.48989868164062
patch: return null ; ; } break ;
rank: 721
score: 98.34856567382812
patch: catch break ; }
rank: 721
score: 98.26987711588542
patch: break ; * / ;
rank: 721
score: 98.15938313802083
patch: logger . return true ;
rank: 721
score: 98.10483805338542
patch: break ; ; / ;
rank: 721
score: 97.82419840494792
patch: return ( block ) ;
rank: 721
score: 97.66575622558594
patch: break } }
rank: 722
score: 98.48956976996527
patch: return null ; } finally = break ;
rank: 722
score: 98.26255289713542
patch: break ; } / *
rank: 722
score: 98.15791829427083
patch: logger . return false ;
rank: 722
score: 98.10321044921875
patch: m false ; break ;
rank: 722
score: 98.00429077148438
patch: part = break ;
rank: 722
score: 97.66362915039062
patch: * / break ;
rank: 723
score: 98.48945448133681
patch: return break ; } else return null ;
rank: 723
score: 98.39299774169922
patch: return } else { return false ;
rank: 723
score: 98.3478291829427
patch: case $STRING$ : break ;
rank: 723
score: 98.26095581054688
patch: found ; break ; }
rank: 723
score: 98.15746459960937
patch: log . return ;
rank: 723
score: 98.102685546875
patch: super ; break ;
rank: 723
score: 98.00342814127605
patch: cancelled = true ; }
rank: 723
score: 97.82046508789062
patch: return ref . return ;
rank: 723
score: 97.66065063476563
patch: true return false ;
rank: 724
score: 98.62074110243056
patch: return false ; } block != null ;
rank: 724
score: 98.48918999565973
patch: break ; } if ; break ; }
rank: 724
score: 98.34769897460937
patch: while break ; ;
rank: 724
score: 98.2586181640625
patch: break ; default ;
rank: 724
score: 98.10030110677083
patch: if start ; break ;
rank: 724
score: 98.00095621744792
patch: return break ) ; }
rank: 724
score: 97.81868489583333
patch: break ( true ) ;
rank: 724
score: 97.6582763671875
patch: block != null ;
rank: 725
score: 98.61882188585069
patch: block . } else { return false ;
rank: 725
score: 98.48918914794922
patch: return ; = break ; } }
rank: 725
score: 98.34410603841145
patch: try { break break ;
rank: 725
score: 98.25768025716145
patch: if ( ; ; }
rank: 725
score: 98.09853108723958
patch: throw if ; break ;
rank: 725
score: 97.81679280598958
patch: break != null ? block
rank: 725
score: 97.65662231445313
patch: log ; break ;
rank: 726
score: 98.48896026611328
patch: return false ; else break ; }
rank: 726
score: 98.13381958007812
patch: table . return true ;
rank: 726
score: 98.09828694661458
patch: if next ; break ;
rank: 726
score: 97.9999755859375
patch: break null ; }
rank: 726
score: 97.81467895507812
patch: break / * /
rank: 726
score: 97.65658569335938
patch: throw return false ;
rank: 727
score: 98.48891194661458
patch: return false ; } catch break ; ;
rank: 727
score: 98.34153238932292
patch: / break ; break ;
rank: 727
score: 98.24798583984375
patch: state . break ; }
rank: 727
score: 98.12810668945312
patch: exception = false ;
rank: 727
score: 98.09619140625
patch: if ; * / /
rank: 727
score: 97.655224609375
patch: log ( ) .
rank: 728
score: 98.48881022135417
patch: return true ; } finally if break ;
rank: 728
score: 98.34133911132812
patch: value = break ; ;
rank: 728
score: 98.12778727213542
patch: return block . get CaMeL
rank: 728
score: 98.09420776367188
patch: return $NUMBER$ ; break ;
rank: 728
score: 97.99972534179688
patch: t = break ; }
rank: 728
score: 97.65328369140624
patch: throw = true ;
rank: 729
score: 98.48775227864583
patch: break ; } else { return break ;
rank: 729
score: 98.33957926432292
patch: catch ) ; break ;
rank: 729
score: 98.24473063151042
patch: target . break ; }
rank: 729
score: 98.12636311848958
patch: state . return false ;
rank: 729
score: 98.09323120117188
patch: for ; ? break ;
rank: 729
score: 97.99904378255208
patch: match ; break ; }
rank: 730
score: 98.48751831054688
patch: return break ; } else * /
rank: 730
score: 98.3376220703125
patch: else return break ;
rank: 730
score: 98.24277750651042
patch: check ; break ; }
rank: 730
score: 98.09255981445312
patch: try if ; break ;
rank: 730
score: 97.998291015625
patch: head = break ; }
rank: 730
score: 97.8099609375
patch: return false ? true
rank: 730
score: 97.6447509765625
patch: return true ) ;
rank: 731
score: 98.4873275756836
patch: break ; } else { synchronized ;
rank: 731
score: 98.33543904622395
patch: } finally ; break ;
rank: 731
score: 98.2389628092448
patch: if ( ; } ;
rank: 731
score: 98.12063598632812
patch: false ; break ;
rank: 731
score: 98.0924072265625
patch: return / / break ;
rank: 731
score: 97.99815877278645
patch: synchronize ( break ) ;
rank: 731
score: 97.8095194498698
patch: break Assignment > false ;
rank: 731
score: 97.64327392578124
patch: return return ; }
rank: 732
score: 98.33040364583333
patch: else { new break ;
rank: 732
score: 98.23197428385417
patch: break break ; } ;
rank: 732
score: 98.11847534179688
patch: switch ( block .
rank: 732
score: 98.08798828125
patch: for ; break ;
rank: 732
score: 97.99752807617188
patch: expr = break ; }
rank: 732
score: 97.64291381835938
patch: } return false ;
rank: 733
score: 98.48637559678819
patch: return false ; } finally = false ;
rank: 733
score: 98.36102294921875
patch: return ; : return false ;
rank: 733
score: 98.32997639973958
patch: * * break ; }
rank: 733
score: 98.22867838541667
patch: break ; } ++ ;
rank: 733
score: 98.11569213867188
patch: log . return ; }
rank: 733
score: 98.08676147460938
patch: buffer ; break ;
rank: 733
score: 97.996435546875
patch: success = true ;
rank: 733
score: 97.8052469889323
patch: return block , true ;
rank: 733
score: 97.639111328125
patch: throw $NUMBER$ ; }
rank: 734
score: 98.48627387152777
patch: return true ; } } if false ;
rank: 734
score: 98.22373453776042
patch: return ; break ; }
rank: 734
score: 98.11508178710938
patch: context . return false ;
rank: 734
score: 98.08628336588542
patch: return ; + break ;
rank: 734
score: 97.99583943684895
patch: while ( break ; }
rank: 735
score: 98.48612213134766
patch: return null ; } return null ;
rank: 735
score: 98.32276611328125
patch: else ; break ;
rank: 735
score: 98.2150166829427
patch: break ; default * /
rank: 735
score: 97.62679290771484
patch: return this .
rank: 736
score: 98.58432345920139
patch: is CaMeL Function = block != null ;
rank: 736
score: 98.32216796875
patch: catch ( $STRING$ ;
rank: 736
score: 98.20620727539062
patch: break * break * /
rank: 736
score: 98.08204142252605
patch: break ; if false ;
rank: 736
score: 97.79986572265625
patch: return block ) ;
rank: 737
score: 98.48594835069444
patch: break ; } } } return false ;
rank: 737
score: 98.32028198242188
patch: i false ; break ;
rank: 737
score: 98.08168538411458
patch: break ; ; log ;
rank: 737
score: 97.99364217122395
patch: position ++ ; break ;
rank: 737
score: 97.79836018880208
patch: break + / * /
rank: 737
score: 97.62363891601562
patch: return return null ;
rank: 738
score: 98.48574829101562
patch: return false ; } / * ;
rank: 738
score: 98.07985432942708
patch: if ; break ; last
rank: 738
score: 97.99337768554688
patch: frame = break ; }
rank: 738
score: 97.7952880859375
patch: break * * / )
rank: 738
score: 97.62337493896484
patch: throw this ;
rank: 739
score: 98.48563058035714
patch: return ; ; } finally {
rank: 739
score: 98.31915283203125
patch: * * break ; /
rank: 739
score: 98.08686828613281
patch: case ) {
rank: 739
score: 98.0782979329427
patch: return ; / break ;
rank: 739
score: 97.992919921875
patch: task = break ; }
rank: 739
score: 97.79520670572917
patch: break + * * *
rank: 739
score: 97.62318725585938
patch: return - true ;
rank: 740
score: 98.48530578613281
patch: } if break ; } break ;
rank: 740
score: 98.19227091471355
patch: break ; * ; }
rank: 740
score: 98.08624267578125
patch: context . return true ;
rank: 740
score: 98.07713826497395
patch: break ; ; true ;
rank: 740
score: 97.7817891438802
patch: return true - 1 ;
rank: 740
score: 97.621240234375
patch: return * false ;
rank: 741
score: 98.31722005208333
patch: return false ; ; ;
rank: 741
score: 97.991748046875
patch: changed = break ;
rank: 741
score: 97.78110758463542
patch: return false ? break ;
rank: 741
score: 97.6197998046875
patch: for ( / *
rank: 742
score: 98.5458755493164
patch: break ; } block != null ;
rank: 742
score: 98.31648763020833
patch: / * break ; /
rank: 742
score: 98.1892801920573
patch: throw ; } * /
rank: 742
score: 98.08310546875
patch: removed = false ;
rank: 742
score: 98.0703125
patch: System ; break ; ;
rank: 742
score: 97.98743896484375
patch: break false ; ;
rank: 743
score: 98.48408508300781
patch: return false ; } } } }
rank: 743
score: 98.31637573242188
patch: j false ; break ;
rank: 743
score: 98.1859639485677
patch: switch ( ; break ;
rank: 743
score: 98.07743326822917
patch: list . return false ;
rank: 743
score: 98.06973266601562
patch: if ; continue ;
rank: 743
score: 97.98743693033855
patch: match = true ; }
rank: 743
score: 97.77890014648438
patch: break / * ?
rank: 743
score: 97.61895751953125
patch: return + false ;
rank: 744
score: 98.53626844618056
patch: return true ; } block != null ;
rank: 744
score: 98.48344590928819
patch: break ; } } else throw null ;
rank: 744
score: 98.33633422851562
patch: Function ( block ) ; break ;
rank: 744
score: 98.315576171875
patch: break break ; ;
rank: 744
score: 98.07708740234375
patch: break ; continue ;
rank: 744
score: 98.06480916341145
patch: break ; ; continue ;
rank: 744
score: 97.9874267578125
patch: image = break ; }
rank: 744
score: 97.77732340494792
patch: break ; } else }
rank: 744
score: 97.61866455078125
patch: result = this .
rank: 745
score: 98.48330688476562
patch: if ( ! break ; break ;
rank: 745
score: 98.32632010323661
patch: ret != null ; break ;
rank: 745
score: 98.31553141276042
patch: } * / break ;
rank: 745
score: 97.98663330078125
patch: retval = break ; }
rank: 745
score: 97.77308959960938
patch: return false ? false
rank: 746
score: 98.48326958550348
patch: return true ; } } else return ;
rank: 746
score: 98.32383510044643
patch: return is CaMeL Declaration ) ;
rank: 746
score: 98.31451416015625
patch: next . break ;
rank: 746
score: 98.181103515625
patch: switch ( ; }
rank: 746
score: 98.07199096679688
patch: match ( ref ) ;
rank: 746
score: 97.98516845703125
patch: frame . break ; }
rank: 746
score: 97.77102661132812
patch: return ) + * /
rank: 746
score: 97.61263427734374
patch: return { try {
rank: 747
score: 98.48202853732639
patch: return true ; } } return null ;
rank: 747
score: 98.31089274088542
patch: / * break ; ;
rank: 747
score: 98.18039957682292
patch: return true ; continue ;
rank: 747
score: 98.04402465820313
patch: try ; break ;
rank: 747
score: 97.98389689127605
patch: return null != break ;
rank: 747
score: 97.76692708333333
patch: break (
rank: 748
score: 98.48169623480902
patch: if break ; } } return break ;
rank: 748
score: 98.31450544084821
patch: return ; else return false ;
rank: 748
score: 98.30948893229167
patch: catch ( Exception break ;
rank: 748
score: 98.1773681640625
patch: throw new break false ;
rank: 748
score: 97.76380615234375
patch: break else break ;
rank: 749
score: 98.4814453125
patch: return break ; } } / ;
rank: 749
score: 98.30790201822917
patch: if ) { break ;
rank: 749
score: 98.17554728190105
patch: break super . ; }
rank: 749
score: 98.06325276692708
patch: Debug . return false ;
rank: 749
score: 98.0301025390625
patch: ret ; break ;
rank: 749
score: 97.98291015625
patch: completed = false ; }
rank: 749
score: 97.76320393880208
patch: break * * * )
rank: 749
score: 97.5982177734375
patch: System . else .
rank: 750
score: 98.4813232421875
patch: return break ; ; } if break ;
rank: 750
score: 98.17283121744792
patch: throw new break 0 ;
rank: 750
score: 98.02552490234375
patch: found ; break ;
rank: 750
score: 97.97977701822917
patch: self = break ; }
rank: 750
score: 97.76296997070312
patch: break - * ? block
rank: 751
score: 98.47966851128473
patch: { return break ; } break ; }
rank: 751
score: 98.30692545572917
patch: / * break ; }
rank: 751
score: 98.17123413085938
patch: if ( ;
rank: 751
score: 98.0546875
patch: table . break ; }
rank: 751
score: 97.97959391276042
patch: return break ; case ;
rank: 751
score: 97.76253051757813
patch: return break false ;
rank: 751
score: 97.5971923828125
patch: result = $STRING$ ;
rank: 752
score: 98.47960069444444
patch: return ; ; } } if false ;
rank: 752
score: 98.30577596028645
patch: } * ; break ;
rank: 752
score: 98.30509643554687
patch: return ; * /
rank: 752
score: 98.16713460286458
patch: if ; } break ;
rank: 752
score: 98.04052734375
patch: true ; } else {
rank: 752
score: 98.00928955078125
patch: synchronized ; break ;
rank: 752
score: 97.97898356119792
patch: result = break ; ;
rank: 752
score: 97.76138305664062
patch: break null ;
rank: 752
score: 97.59677734375
patch: } return true ;
rank: 753
score: 98.4795150756836
patch: return false ; } ; break ;
rank: 753
score: 98.30217895507812
patch: catch new break ;
rank: 753
score: 98.03948364257812
patch: return ; } else
rank: 753
score: 98.00870971679687
patch: public if break ;
rank: 753
score: 97.9777119954427
patch: break << 1 ; }
rank: 753
score: 97.59576416015625
patch: throw * /
rank: 754
score: 98.47929382324219
patch: break break ; } break ; }
rank: 754
score: 98.30035400390625
patch: else if break ; }
rank: 754
score: 97.97702026367188
patch: changed = false ; }
rank: 754
score: 97.75105794270833
patch: break ( int ) block
rank: 754
score: 97.5907958984375
patch: count * * /
rank: 755
score: 98.47921752929688
patch: return ; } } catch break ;
rank: 755
score: 98.29897054036458
patch: this . break ; ;
rank: 755
score: 97.99236450195312
patch: finally if break ;
rank: 755
score: 97.9764404296875
patch: found = break ; }
rank: 755
score: 97.74530029296875
patch: return block . equals ;
rank: 755
score: 97.5894775390625
patch: try { else {
rank: 756
score: 98.49913024902344
patch: return false ; } else System .
rank: 756
score: 98.29720458984374
patch: l = break ;
rank: 756
score: 97.97616577148438
patch: boolean break = false ;
rank: 756
score: 97.58666381835937
patch: return false ; {
rank: 757
score: 98.47865295410156
patch: return break ; ; } else {
rank: 757
score: 98.29585774739583
patch: value ; break ; ;
rank: 757
score: 98.15704345703125
patch: break false ; } ;
rank: 757
score: 98.03012084960938
patch: table . return ) ;
rank: 757
score: 97.96884765625
patch: throw if break ;
rank: 758
score: 98.29581705729167
patch: else break ; } ;
rank: 758
score: 98.15582275390625
patch: return true ; default :
rank: 758
score: 98.0277099609375
patch: found = false ; }
rank: 758
score: 97.97314453125
patch: break false ; break ;
rank: 758
score: 97.96632080078125
patch: } break ; ;
rank: 758
score: 97.74027252197266
patch: return ) {
rank: 758
score: 97.58587036132812
patch: ret == true ;
rank: 759
score: 98.47660319010417
patch: return true ; } catch ; break ;
rank: 759
score: 98.29559326171875
patch: break ; error break ;
rank: 759
score: 98.02676391601562
patch: flags = false ;
rank: 759
score: 97.97215779622395
patch: scope = break ; }
rank: 759
score: 97.96188354492188
patch: return ; /
rank: 759
score: 97.5853515625
patch: System . else ;
rank: 760
score: 98.47627088758681
patch: throw new Runtime CaMeL Exception break ; ;
rank: 760
score: 98.29463704427083
patch: break ; } break {
rank: 760
score: 97.97159830729167
patch: r = break ; }
rank: 760
score: 97.73543701171874
patch: break - * /
rank: 760
score: 97.58148193359375
patch: dispose ( ) ;
rank: 761
score: 98.49092102050781
patch: return block . contains ( ) ;
rank: 761
score: 98.47589874267578
patch: return false ; } else / ;
rank: 761
score: 98.293798828125
patch: element . break ;
rank: 761
score: 98.1381123860677
patch: dim . break ; }
rank: 761
score: 98.02471923828125
patch: e . return true ;
rank: 761
score: 97.95347290039062
patch: dim ; break ;
rank: 761
score: 97.73485565185547
patch: break block ;
rank: 762
score: 98.49050467354911
patch: block . close ( ) ;
rank: 762
score: 98.47344970703125
patch: break ; } finally = break ; }
rank: 762
score: 98.29164632161458
patch: fail false ; break ;
rank: 762
score: 98.02410888671875
patch: LOG . break ; }
rank: 762
score: 97.96654256184895
patch: added = true ; }
rank: 762
score: 97.94520263671875
patch: return / break ;
rank: 762
score: 97.72960205078125
patch: return false true ;
rank: 763
score: 98.4820556640625
patch: return ( block == null ) ;
rank: 763
score: 98.47321319580078
patch: return null ; if break ; }
rank: 763
score: 98.28709920247395
patch: * break ; break ;
rank: 763
score: 98.26641845703125
patch: return } else { break ;
rank: 763
score: 98.134912109375
patch: continue ; } ;
rank: 763
score: 97.94424438476562
patch: return new break ;
rank: 763
score: 97.56718139648437
patch: throw new ) ;
rank: 764
score: 98.47293853759766
patch: return break ; } } synchronized ;
rank: 764
score: 98.28582763671875
patch: catch false || break ;
rank: 764
score: 98.13157145182292
patch: break ; ; * /
rank: 764
score: 98.01376342773438
patch: return = false ; }
rank: 764
score: 97.96476236979167
patch: name = break ; }
rank: 764
score: 97.94378051757812
patch: return -- break ;
rank: 764
score: 97.72793579101562
patch: break + * ;
rank: 764
score: 97.56554565429687
patch: ) { break ;
rank: 765
score: 98.47215270996094
patch: return true ; } return null ;
rank: 765
score: 98.28367106119792
patch: this . break break ;
rank: 765
score: 98.12845865885417
patch: return ; } * ;
rank: 765
score: 98.0120361328125
patch: state = false ;
rank: 765
score: 97.963525390625
patch: if ( true )
rank: 765
score: 97.93704986572266
patch: break ; else
rank: 765
score: 97.56178283691406
patch: throw value ;
rank: 766
score: 98.47210693359375
patch: } else { break ; break ; }
rank: 766
score: 98.47077941894531
patch: return ( ref != null ) ;
rank: 766
score: 98.27999877929688
patch: * * / break ;
rank: 766
score: 98.12743123372395
patch: break ; ++ ; }
rank: 766
score: 97.93265380859376
patch: break ; System ;
rank: 767
score: 98.47169494628906
patch: return 0 ; break ; } }
rank: 767
score: 98.279052734375
patch: break ; new break ;
rank: 767
score: 98.12415568033855
patch: break ; false ; }
rank: 767
score: 98.0094706217448
patch: false ; return false ;
rank: 767
score: 97.96170654296876
patch: pos = break ;
rank: 767
score: 97.70819091796875
patch: return . false ;
rank: 767
score: 97.5588134765625
patch: if ( ! !
rank: 768
score: 98.47132110595703
patch: break ; } return break ; }
rank: 768
score: 98.46575927734375
patch: ) { return false ; }
rank: 768
score: 98.27869873046875
patch: next ; break ;
rank: 768
score: 98.00894165039062
patch: throw return false ; }
rank: 768
score: 97.9591573079427
patch: resolved = true ; }
rank: 768
score: 97.92960205078126
patch: break ; if ;
rank: 768
score: 97.55821533203125
patch: * return false ;
rank: 769
score: 98.4713134765625
patch: return ; ; ; } } break ;
rank: 769
score: 98.27471923828125
patch: while 0 ; break ;
rank: 769
score: 98.11557006835938
patch: if ; return ; }
rank: 769
score: 97.957275390625
patch: throw new ; } }
rank: 769
score: 97.69271850585938
patch: break FALSE ;
rank: 769
score: 97.55514526367188
patch: return + 1 ;
rank: 770
score: 98.47109646267361
patch: break ; } } } return break ;
rank: 770
score: 98.27386474609375
patch: else break ; } }
rank: 770
score: 98.1105448404948
patch: return false ; default :
rank: 770
score: 98.00467936197917
patch: continue ; case ) {
rank: 770
score: 97.95578002929688
patch: found = true ; }
rank: 770
score: 97.92061767578124
patch: catch ; break ;
rank: 770
score: 97.69263916015625
patch: result == true ;
rank: 770
score: 97.55452270507813
patch: { throw null ;
rank: 771
score: 98.47068956163194
patch: return break ; } } synchronized break ;
rank: 771
score: 98.27344360351563
patch: ++ break ; ;
rank: 771
score: 98.10915120442708
patch: if ; } * /
rank: 771
score: 97.9917724609375
patch: case Loop ) {
rank: 771
score: 97.95408121744792
patch: break value = break ;
rank: 771
score: 97.68798065185547
patch: break * /
rank: 771
score: 97.55349731445312
patch: throw $STRING$ ;
rank: 772
score: 98.46980794270833
patch: break ; } finally ; break ; }
rank: 772
score: 98.2722676595052
patch: catch ( $STRING$ break ;
rank: 772
score: 97.95328776041667
patch: break ; default : }
rank: 772
score: 97.6864990234375
patch: return ) true ;
rank: 772
score: 97.55062866210938
patch: is CaMeL Function .
rank: 773
score: 98.46979437934027
patch: return false ; } else break ; }
rank: 773
score: 98.26798706054687
patch: value = true ;
rank: 773
score: 98.10757446289062
patch: return ; ; } ;
rank: 773
score: 97.98486328125
patch: LOG . break ;
rank: 773
score: 97.95320638020833
patch: break ; $NUMBER$ * /
rank: 773
score: 97.90665283203126
patch: / if break ;
rank: 773
score: 97.681591796875
patch: break + / /
rank: 773
score: 97.54994506835938
patch: return ) ; ;
rank: 774
score: 98.46927218967014
patch: return ; ; break ; } break ;
rank: 774
score: 98.26793212890625
patch: * break ; }
rank: 774
score: 98.22501918247768
patch: removed = false ; break ;
rank: 774
score: 97.98336791992188
patch: t . break ;
rank: 774
score: 97.95164998372395
patch: Object break = break ;
rank: 774
score: 97.89716796875
patch: { if break ;
rank: 774
score: 97.67486572265625
patch: break ) break ;
rank: 774
score: 97.54983520507812
patch: System . return ;
rank: 775
score: 98.46924591064453
patch: return ; ; else return break ;
rank: 775
score: 98.26499430338542
patch: * ; break ; }
rank: 775
score: 98.2244873046875
patch: return ; : return true ;
rank: 775
score: 98.10546875
patch: result . break ;
rank: 775
score: 97.97969360351563
patch: log . break ;
rank: 775
score: 97.95118204752605
patch: list = break ; }
rank: 775
score: 97.8966552734375
patch: if ; System ;
rank: 775
score: 97.6614501953125
patch: break * * ;
rank: 775
score: 97.54780883789063
patch: return { return ;
rank: 776
score: 98.46753607855902
patch: return break ; } else { return ;
rank: 776
score: 98.26110229492187
patch: catch ( break ;
rank: 776
score: 97.97794799804687
patch: ret = false ;
rank: 776
score: 97.95020751953125
patch: changed = false ;
rank: 776
score: 97.8958969116211
patch: return ; *
rank: 776
score: 97.5475830078125
patch: throw 1 ; }
rank: 777
score: 98.4322738647461
patch: block . push ( false ) ;
rank: 777
score: 98.21343994140625
patch: is CaMeL Function . break ;
rank: 777
score: 97.96990966796875
patch: answer = false ;
rank: 777
score: 97.94959513346355
patch: break ^ break ; }
rank: 777
score: 97.65952555338542
patch: break }
rank: 777
score: 97.54483642578126
patch: throw * / }
rank: 778
score: 98.46674262152777
patch: return break ; } } else * /
rank: 778
score: 98.2562255859375
patch: else break ;
rank: 778
score: 98.09713745117188
patch: return ; } } ;
rank: 778
score: 97.96795043945312
patch: break ; true ;
rank: 778
score: 97.94908650716145
patch: block = block ; }
rank: 778
score: 97.89002227783203
patch: if ; try
rank: 778
score: 97.6590576171875
patch: break + * *
rank: 778
score: 97.54390258789063
patch: else { return ;
rank: 779
score: 98.46424357096355
patch: if break ; } }
rank: 779
score: 98.42599487304688
patch: return false ; } block . }
rank: 779
score: 98.25541381835937
patch: i ; break ;
rank: 779
score: 98.09500732421876
patch: ref = ; }
rank: 780
score: 98.20474679129464
patch: ret == false ; break ;
rank: 780
score: 98.09122721354167
patch: break ; / ; }
rank: 780
score: 97.95724487304688
patch: if ( ) {
rank: 780
score: 97.88156127929688
patch: if new break ;
rank: 780
score: 97.53709106445312
patch: System . break ;
rank: 781
score: 98.25357055664062
patch: catch ) { break ;
rank: 781
score: 98.09109497070312
patch: return break ; * /
rank: 781
score: 97.93029174804687
patch: expr = break ;
rank: 781
score: 97.87520141601563
patch: text ; break ;
rank: 781
score: 97.64746704101563
patch: return ref ) ;
rank: 782
score: 98.4605204264323
patch: } return break ; }
rank: 782
score: 97.9278076171875
patch: resolved = break ;
rank: 782
score: 97.86555480957031
patch: if true ;
rank: 782
score: 97.64124755859375
patch: result == false ;
rank: 783
score: 98.46044243706598
patch: return break ; } else return true ;
rank: 783
score: 98.41093226841518
patch: ref != null ; break ;
rank: 783
score: 98.08888753255208
patch: break ; } this ;
rank: 783
score: 97.95409545898437
patch: break : break ;
rank: 783
score: 97.92689819335938
patch: break ; case ;
rank: 783
score: 97.6401138305664
patch: return true }
rank: 783
score: 97.5293701171875
patch: result = value ;
rank: 784
score: 98.45991346571181
patch: break ; } } catch break ; }
rank: 784
score: 98.40637969970703
patch: break ; } } return null ;
rank: 784
score: 98.2516377766927
patch: else { if break ;
rank: 784
score: 98.1990966796875
patch: return block . is CaMeL Loop
rank: 784
score: 97.92222290039062
patch: synchronized ( this )
rank: 784
score: 97.84252319335937
patch: e ; break ;
rank: 784
score: 97.63355102539063
patch: return . true ;
rank: 785
score: 98.25076293945312
patch: catch null ? break ;
rank: 785
score: 98.0849609375
patch: return ; ; ; }
rank: 785
score: 97.94499969482422
patch: / * /
rank: 785
score: 97.90794677734375
patch: break = true ;
rank: 785
score: 97.84114990234374
patch: scope ; break ;
rank: 786
score: 98.24803670247395
patch: else return break ; }
rank: 786
score: 98.08396402994792
patch: break ; ++ count ;
rank: 786
score: 97.9281494140625
patch: flags = true ;
rank: 786
score: 97.9009033203125
patch: ret = true ;
rank: 786
score: 97.8393310546875
patch: error ; break ;
rank: 786
score: 97.63298950195312
patch: break != true ;
rank: 786
score: 97.5194580078125
patch: / * * /
rank: 787
score: 98.45736355251736
patch: break ; } else if ( break ;
rank: 787
score: 98.24759521484376
patch: * * break ;
rank: 787
score: 98.08292643229167
patch: return ; continue ; }
rank: 787
score: 97.92427368164063
patch: return else ; }
rank: 787
score: 97.89180908203124
patch: r = break ;
rank: 787
score: 97.8365478515625
patch: buf ; break ;
rank: 787
score: 97.6291015625
patch: break != false ;
rank: 787
score: 97.51422119140625
patch: throw ( $STRING$ ;
rank: 788
score: 98.45553927951389
patch: break ; } else ; return false ;
rank: 788
score: 98.24730224609375
patch: value = false ;
rank: 788
score: 98.08268229166667
patch: break ; * / }
rank: 788
score: 97.92347412109375
patch: true = false ;
rank: 788
score: 97.88443603515626
patch: position = break ;
rank: 788
score: 97.51405334472656
patch: if ( !
rank: 789
score: 98.45540364583333
patch: return true ; } finally = break ;
rank: 789
score: 98.2471923828125
patch: else ; break ; ;
rank: 789
score: 98.07925415039062
patch: break true ; } ;
rank: 789
score: 97.87999267578125
patch: scope = break ;
rank: 789
score: 97.8319091796875
patch: return super ;
rank: 789
score: 97.62451171875
patch: ref . break ;
rank: 789
score: 97.50774536132812
patch: throw new $STRING$ ;
rank: 790
score: 98.24668375651042
patch: char break ; break ;
rank: 790
score: 98.07840983072917
patch: result . add ; }
rank: 790
score: 97.8731201171875
patch: retval = break ;
rank: 790
score: 97.83132934570312
patch: code ; break ;
rank: 790
score: 97.62119750976562
patch: return == null ;
rank: 790
score: 97.50770874023438
patch: return - * ;
rank: 791
score: 98.45467800564236
patch: break ; } } catch ; break ;
rank: 791
score: 98.39764404296875
patch: break ; } else * /
rank: 791
score: 98.24444580078125
patch: ++ break ; }
rank: 791
score: 98.13528442382812
patch: return ; return true ;
rank: 791
score: 97.90781860351562
patch: break ; false ;
rank: 791
score: 97.8257080078125
patch: state ; break ;
rank: 791
score: 97.50520629882813
patch: return / * /
rank: 792
score: 98.4541015625
patch: break ; } else if break ; else
rank: 792
score: 98.24288940429688
patch: ++ finally ; break ;
rank: 792
score: 97.90390625
patch: res = false ;
rank: 792
score: 97.8591796875
patch: if ( success )
rank: 792
score: 97.82063598632813
patch: break ; ; *
rank: 792
score: 97.61245727539062
patch: break return break ;
rank: 792
score: 97.49083709716797
patch: return return ;
rank: 793
score: 98.45314534505208
patch: } else { return ; ; } }
rank: 793
score: 98.39675903320312
patch: return block == null + false ;
rank: 793
score: 98.24191284179688
patch: break { for break ;
rank: 793
score: 97.85863037109375
patch: finished = true ;
rank: 793
score: 97.82045288085938
patch: final new break ;
rank: 793
score: 97.48907470703125
patch: return ( break ;
rank: 794
score: 98.38954380580357
patch: block . init ( ) ;
rank: 794
score: 98.24186197916667
patch: result { break ; }
rank: 794
score: 98.070556640625
patch: r . break ; }
rank: 794
score: 97.89814453125
patch: b = false ;
rank: 794
score: 97.85305786132812
patch: repaint ( ) ;
rank: 794
score: 97.60945434570313
patch: break Basic CaMeL Block
rank: 795
score: 98.45232476128473
patch: return true ; } } break ; }
rank: 795
score: 98.06973266601562
patch: / ; break ; }
rank: 795
score: 97.88921508789062
patch: minor = false ;
rank: 795
score: 97.8505615234375
patch: decl = break ;
rank: 795
score: 97.60927734375
patch: break & true ;
rank: 796
score: 98.45199245876736
patch: return false ; } } } return ;
rank: 796
score: 98.24111938476562
patch: break ; ; ; {
rank: 796
score: 98.06770833333333
patch: break ; 1 ; }
rank: 796
score: 97.8400146484375
patch: ref = break ;
rank: 796
score: 97.80640869140625
patch: if ; logger ;
rank: 796
score: 97.60841064453125
patch: return ref . ;
rank: 796
score: 97.48630981445312
patch: return false ; :
rank: 797
score: 98.38205392020089
patch: { { return false ; }
rank: 797
score: 98.06739298502605
patch: break * $NUMBER$ ; }
rank: 797
score: 97.88511962890625
patch: log . continue ;
rank: 797
score: 97.83883056640624
patch: break this ; }
rank: 797
score: 97.805859375
patch: return ++ break ;
rank: 797
score: 97.60789794921875
patch: return true ? false
rank: 797
score: 97.48629760742188
patch: LOG .
rank: 798
score: 98.23853556315105
patch: break ; for false ;
rank: 798
score: 98.06406656901042
patch: binding . break ; }
rank: 798
score: 97.88389282226562
patch: ; return false ;
rank: 798
score: 97.83864135742188
patch: super . break ;
rank: 798
score: 97.80287475585938
patch: finally ; break ;
rank: 798
score: 97.60719604492188
patch: return true ? true
rank: 798
score: 97.473046875
patch: throw this ; }
rank: 799
score: 98.45026991102431
patch: return false ; } } for break ;
rank: 799
score: 98.38160923549107
patch: is CaMeL Function = null ;
rank: 799
score: 98.23849487304688
patch: return 0 ; ;
rank: 799
score: 97.8357177734375
patch: level = break ;
rank: 799
score: 97.798095703125
patch: sb ; break ;
rank: 799
score: 97.60635375976562
patch: break + 0 ;
rank: 799
score: 97.47173461914062
patch: try { System .
rank: 800
score: 98.44868299696181
patch: return break ; } } if true ;
rank: 800
score: 98.0603535970052
patch: break ; default break ;
rank: 800
score: 97.87645263671875
patch: e . break ;
rank: 800
score: 97.83228759765625
patch: frame = break ;
rank: 800
score: 97.79412231445312
patch: type ; break ;
rank: 800
score: 97.45752563476563
patch: * * * /
rank: 801
score: 98.44742838541667
patch: return null ; } } if false ;
rank: 801
score: 98.37234061104911
patch: ref . close ( ) ;
rank: 801
score: 98.2377421061198
patch: catch false { break ;
rank: 801
score: 97.8760498046875
patch: consume ( ) ;
rank: 801
score: 97.82938842773437
patch: removed = true ;
rank: 801
score: 97.7905029296875
patch: break ; return ;
rank: 801
score: 97.598095703125
patch: block ; break ;
rank: 801
score: 97.44804077148437
patch: System . else {
rank: 802
score: 98.44675699869792
patch: break ; } else if ; break ;
rank: 802
score: 98.23709106445312
patch: break ; for null ;
rank: 802
score: 98.0588887532552
patch: target ; return ; }
rank: 802
score: 97.825146484375
patch: break & break ;
rank: 802
score: 97.78635864257812
patch: if break ; try
rank: 803
score: 98.44653998480902
patch: return false ; } return break ; }
rank: 803
score: 98.23628743489583
patch: for true ; break ;
rank: 803
score: 98.08770751953125
patch: return boolean . true ;
rank: 803
score: 98.05698649088542
patch: found = true ; ;
rank: 803
score: 97.86807861328126
patch: parameters . break ;
rank: 803
score: 97.81810913085937
patch: revalidate ( ) ;
rank: 803
score: 97.78331909179687
patch: switch ; break ;
rank: 804
score: 98.44647216796875
patch: } else = break ;
rank: 804
score: 98.23626708984375
patch: i ( break ) ;
rank: 804
score: 98.05692545572917
patch: break break ; ; }
rank: 804
score: 97.86170043945313
patch: continue ; * /
rank: 804
score: 97.81585693359375
patch: cancelled = true ;
rank: 804
score: 97.5822021484375
patch: return Loop ) ;
rank: 804
score: 97.41120910644531
patch: * * /
rank: 805
score: 98.44610595703125
patch: return ; ; } break ; break ;
rank: 805
score: 98.23447875976562
patch: -- break ; ;
rank: 805
score: 98.08528645833333
patch: return boolean . false ;
rank: 805
score: 97.81497802734376
patch: name = break ;
rank: 805
score: 97.57831420898438
patch: info ( ) ;
rank: 806
score: 98.44510904947917
patch: return break ; } if break ; }
rank: 806
score: 98.36792864118304
patch: ref . next ( ) ;
rank: 806
score: 98.23244222005208
patch: } * * break ;
rank: 806
score: 97.81431884765625
patch: false = true ;
rank: 806
score: 97.77503662109375
patch: break ; out ;
rank: 806
score: 97.39808654785156
patch: throw * ;
rank: 807
score: 98.23116048177083
patch: case 0 + break ;
rank: 807
score: 98.05489095052083
patch: return ; } if ;
rank: 807
score: 97.81181640625
patch: while ( break )
rank: 807
score: 97.77351684570313
patch: return ; logger ;
rank: 807
score: 97.5675537109375
patch: do { break ;
rank: 808
score: 98.44286431206598
patch: return false ; else return false ; }
rank: 808
score: 98.34885951450893
patch: return true ; } else }
rank: 808
score: 98.22963460286458
patch: break . break ; ;
rank: 808
score: 98.05330403645833
patch: this . ; break ;
rank: 808
score: 97.8572509765625
patch: children . break ;
rank: 808
score: 97.8094970703125
patch: binding = break ;
rank: 808
score: 97.77129516601562
patch: token ; break ;
rank: 808
score: 97.34073893229167
patch: log .
rank: 809
score: 98.44239637586806
patch: return false ; } else throw null ;
rank: 809
score: 98.22747802734375
patch: ( false ; break ;
rank: 809
score: 98.05277506510417
patch: init ; break ; }
rank: 809
score: 97.856103515625
patch: params . break ;
rank: 809
score: 97.77066040039062
patch: context ; break ;
rank: 809
score: 97.31117248535156
patch: throw ) ;
rank: 810
score: 98.44231499565973
patch: break ; } finally { false ; }
rank: 810
score: 98.34456961495536
patch: block . return false ; }
rank: 810
score: 98.2244384765625
patch: item . break ;
rank: 810
score: 97.85206298828125
patch: context . break ;
rank: 810
score: 97.80338134765626
patch: removed = break ;
rank: 811
score: 98.21543884277344
patch: catch false ;
rank: 811
score: 98.05067952473958
patch: found ; return ; }
rank: 811
score: 97.80022583007812
patch: head = break ;
rank: 811
score: 97.76990966796875
patch: return ; continue ;
rank: 811
score: 97.5592041015625
patch: break } * /
rank: 811
score: 97.30158996582031
patch: return value ;
rank: 812
score: 98.04799397786458
patch: if ( ; } }
rank: 812
score: 97.7988037109375
patch: task = break ;
rank: 812
score: 97.76925048828124
patch: break ; else ;
rank: 812
score: 97.55853271484375
patch: return true true ;
rank: 812
score: 97.29264831542969
patch: return * ;
rank: 813
score: 98.44026014539931
patch: return null ; break ; } else {
rank: 813
score: 98.32060023716518
patch: block . next ( ) ;
rank: 813
score: 98.210888671875
patch: -- break ; }
rank: 813
score: 98.05166625976562
patch: return boolean != true ;
rank: 813
score: 98.04798380533855
patch: return this . ; }
rank: 813
score: 97.846240234375
patch: t = block .
rank: 813
score: 97.796875
patch: throw new ; ;
rank: 813
score: 97.7636962890625
patch: Thread ; break ;
rank: 813
score: 97.55851440429687
patch: return ) break ;
rank: 813
score: 97.2862548828125
patch: return } }
rank: 814
score: 98.20822143554688
patch: for break ; ;
rank: 814
score: 98.04639689127605
patch: stop ; break ; }
rank: 814
score: 97.84388224283855
patch: table .
rank: 814
score: 97.794482421875
patch: completed = true ;
rank: 814
score: 97.76178588867188
patch: / / break ;
rank: 814
score: 97.557177734375
patch: break break false ;
rank: 814
score: 97.2821273803711
patch: -- ref ;
rank: 815
score: 98.43830702039931
patch: break ; } } else = break ;
rank: 815
score: 98.31560407366071
patch: return ref != null ; }
rank: 815
score: 98.04446411132812
patch: state ; break ; }
rank: 815
score: 97.84254760742188
patch: vars . break ;
rank: 815
score: 97.79146118164063
patch: c = break ;
rank: 815
score: 97.758740234375
patch: prev ; break ;
rank: 815
score: 97.54935302734376
patch: break ? block ;
rank: 815
score: 97.27759552001953
patch: return * /
rank: 816
score: 98.43809000651042
patch: return false ; } finally { return ;
rank: 816
score: 98.20096435546876
patch: Result break true ;
rank: 816
score: 98.04442342122395
patch: node ; break ; }
rank: 816
score: 98.04435221354167
patch: return is CaMeL Local ;
rank: 816
score: 97.8406494140625
patch: list . break ;
rank: 816
score: 97.789501953125
patch: row = break ;
rank: 816
score: 97.75434875488281
patch: throw new ;
rank: 816
score: 97.27511596679688
patch: e .
rank: 817
score: 98.4349365234375
patch: return true ; } break ; break ;
rank: 817
score: 98.19690704345703
patch: value break ;
rank: 817
score: 98.04409790039062
patch: c . break ; }
rank: 817
score: 97.78810424804688
patch: done = true ;
rank: 817
score: 97.75196533203125
patch: if break ; else
rank: 817
score: 97.54517211914063
patch: return this ) ;
rank: 817
score: 97.27226257324219
patch: result = ;
rank: 818
score: 98.43477376302083
patch: { return false ; break ; } }
rank: 818
score: 98.1928466796875
patch: value break ; ;
rank: 818
score: 98.04398600260417
patch: break ; - 1 ;
rank: 818
score: 97.7878173828125
patch: break ++ ; }
rank: 818
score: 97.544580078125
patch: done = false ;
rank: 818
score: 97.27198282877605
patch: this .
rank: 819
score: 98.43427191840277
patch: return ; ; } if break ; }
rank: 819
score: 98.0415547688802
patch: break ; } false ;
rank: 819
score: 97.8355224609375
patch: t = false ;
rank: 819
score: 97.785693359375
patch: comp = break ;
rank: 819
score: 97.543505859375
patch: break * * *
rank: 819
score: 97.26759338378906
patch: return error ;
rank: 820
score: 98.1802001953125
patch: value break ; }
rank: 820
score: 98.04085286458333
patch: throw new break ) ;
rank: 820
score: 97.83364868164062
patch: code . break ;
rank: 820
score: 97.78340454101563
patch: t = break ;
rank: 820
score: 97.74246826171876
patch: parent ; break ;
rank: 820
score: 97.54319458007812
patch: return ) 1 ;
rank: 820
score: 97.26702880859375
patch: return success ;
rank: 821
score: 98.43168131510417
patch: } else if break ; break ; }
rank: 821
score: 98.29756382533482
patch: block . { return false ;
rank: 821
score: 98.16838073730469
patch: ++ break ;
rank: 821
score: 97.83330078125
patch: tmp ; break ;
rank: 821
score: 97.782763671875
patch: break = false ;
rank: 821
score: 97.73525390625
patch: break ; log ;
rank: 821
score: 97.26241048177083
patch: System .
rank: 822
score: 98.43063693576389
patch: return false ; } } break ; ;
rank: 822
score: 98.16492919921875
patch: break ; * ;
rank: 822
score: 98.0158182779948
patch: error ( $STRING$ ) ;
rank: 822
score: 97.82567138671875
patch: folder . break ;
rank: 822
score: 97.73001708984376
patch: break ; ; else
rank: 822
score: 97.5417724609375
patch: return block != null
rank: 822
score: 97.26103210449219
patch: return continue ;
rank: 823
score: 98.29193987165179
patch: ) { return true ; }
rank: 823
score: 97.82554931640625
patch: match ( ) ;
rank: 823
score: 97.77894287109375
patch: expression = break ;
rank: 823
score: 97.2568130493164
patch: return ( !
rank: 824
score: 98.2904052734375
patch: ref . run ( ) ;
rank: 824
score: 98.0139892578125
patch: if ( ; ;
rank: 824
score: 97.82431640625
patch: tmp = false ;
rank: 824
score: 97.72575378417969
patch: while break ;
rank: 824
score: 97.5393310546875
patch: break * * ?
rank: 824
score: 97.25467681884766
patch: return length ;
rank: 825
score: 97.82214965820313
patch: flush ( ) ;
rank: 825
score: 97.7743896484375
patch: synchronized ( break )
rank: 825
score: 97.71601867675781
patch: return System ;
rank: 825
score: 97.53744506835938
patch: break _
rank: 825
score: 97.24189758300781
patch: return / /
rank: 826
score: 98.41463216145833
patch: } else return null ;
rank: 826
score: 98.27864990234374
patch: ref != null ;
rank: 826
score: 98.15185546875
patch: break ; / ;
rank: 826
score: 97.820166015625
patch: failed = false ;
rank: 826
score: 97.77269287109375
patch: false = break ;
rank: 826
score: 97.53648071289062
patch: throw $NUMBER$ false ;
rank: 826
score: 97.2400894165039
patch: -- break ;
rank: 827
score: 98.15082397460938
patch: } * break ;
rank: 827
score: 98.0009033203125
patch: target . break ;
rank: 827
score: 97.81813354492188
patch: true { break ;
rank: 827
score: 97.77250366210937
patch: node = break ;
rank: 827
score: 97.69532775878906
patch: if ; ;
rank: 827
score: 97.53551635742187
patch: break . TRUE ;
rank: 827
score: 97.2363993326823
patch: result =
rank: 828
score: 98.40421549479167
patch: { break ; } }
rank: 828
score: 97.77159423828125
patch: final int break ;
rank: 828
score: 97.68331909179688
patch: public break ;
rank: 828
score: 97.5330322265625
patch: verbose ( ) ;
rank: 828
score: 97.20658874511719
patch: return { {
rank: 829
score: 98.14229125976563
patch: / else break ;
rank: 829
score: 97.98099517822266
patch: throw ; }
rank: 829
score: 97.81464233398438
patch: resolved = false ;
rank: 829
score: 97.76749267578126
patch: break || break ;
rank: 829
score: 97.68132019042969
patch: if ; do
rank: 829
score: 97.532421875
patch: continue return false ;
rank: 829
score: 97.20647430419922
patch: true * /
rank: 830
score: 98.1400146484375
patch: break ; } *
rank: 830
score: 97.81375885009766
patch: true ) {
rank: 830
score: 97.76643676757813
patch: ok = true ;
rank: 830
score: 97.53062744140625
patch: abort ( ) ;
rank: 830
score: 97.19949340820312
patch: continue false ;
rank: 831
score: 97.98829142252605
patch: return TRUE : true ;
rank: 831
score: 97.81048583984375
patch: break ; case )
rank: 831
score: 97.76555786132812
patch: count ++ ; }
rank: 831
score: 97.67388153076172
patch: synchronized break ;
rank: 831
score: 97.52767333984374
patch: minor = true ;
rank: 831
score: 97.1966781616211
patch: throw default ;
rank: 832
score: 98.1380615234375
patch: / ++ break ;
rank: 832
score: 97.98792521158855
patch: return is CaMeL Call ;
rank: 832
score: 97.9736083984375
patch: dim . break ;
rank: 832
score: 97.808740234375
patch: table . return ;
rank: 832
score: 97.64596557617188
patch: / break ;
rank: 832
score: 97.52529907226562
patch: break / /
rank: 832
score: 97.19621276855469
patch: throw block ;
rank: 833
score: 98.38182576497395
patch: } else return break ;
rank: 833
score: 97.75977783203125
patch: ok = break ;
rank: 833
score: 97.64265441894531
patch: if $NUMBER$ ;
rank: 833
score: 97.5222900390625
patch: block . return ;
rank: 833
score: 97.19129943847656
patch: throw n ;
rank: 834
score: 98.37973022460938
patch: , break ; } }
rank: 834
score: 98.13353271484375
patch: value . break ;
rank: 834
score: 97.80167236328126
patch: found = break ;
rank: 834
score: 97.51340942382812
patch: result != null ;
rank: 834
score: 97.18873596191406
patch: return break }
rank: 835
score: 98.37364705403645
patch: break ; } finally ;
rank: 835
score: 97.95845947265624
patch: target ; break ;
rank: 835
score: 97.75615234375
patch: loop : break ;
rank: 835
score: 97.6285171508789
patch: return logger ;
rank: 835
score: 97.51138916015626
patch: return break true ;
rank: 835
score: 97.18625895182292
patch: Log .
rank: 836
score: 98.36676025390625
patch: } return false ; }
rank: 836
score: 98.122265625
patch: Result break false ;
rank: 836
score: 97.61593627929688
patch: ; break ;
rank: 837
score: 98.11671142578125
patch: * break ; ;
rank: 837
score: 97.950732421875
patch: target = ; }
rank: 837
score: 97.7960205078125
patch: continue false ; }
rank: 837
score: 97.75377197265625
patch: cell = break ;
rank: 837
score: 97.17023468017578
patch: return NONE ;
rank: 838
score: 98.11019897460938
patch: prev . break ;
rank: 838
score: 97.97153727213542
patch: else { return ; }
rank: 838
score: 97.94560546875
patch: result = ; }
rank: 838
score: 97.78703002929687
patch: found = ) ;
rank: 838
score: 97.57913208007812
patch: if null ;
rank: 838
score: 97.50370483398437
patch: break ? break ;
rank: 838
score: 97.17008972167969
patch: return ( (
rank: 839
score: 97.78597412109374
patch: break ; } _
rank: 839
score: 97.74986572265625
patch: finished = false ;
rank: 839
score: 97.56663004557292
patch: System ;
rank: 839
score: 97.50350341796874
patch: break - 0 ;
rank: 839
score: 97.169677734375
patch: result = (
rank: 840
score: 98.34651692708333
patch: return null ; } ;
rank: 840
score: 98.1070556640625
patch: synchronized break ; ;
rank: 840
score: 97.9647725423177
patch: return ; else break ;
rank: 840
score: 97.93864135742187
patch: if ; ; }
rank: 840
score: 97.78368530273437
patch: break + ) ;
rank: 840
score: 97.746875
patch: finished = break ;
rank: 840
score: 97.562744140625
patch: break ; try
rank: 840
score: 97.5031494140625
patch: block return false ;
rank: 840
score: 97.16440836588542
patch: logger .
rank: 841
score: 98.34585571289062
patch: return null ; ; }
rank: 841
score: 97.9345458984375
patch: break = ; }
rank: 841
score: 97.74620971679687
patch: me = break ;
rank: 841
score: 97.557373046875
patch: break ; /
rank: 841
score: 97.5022964477539
patch: break TRUE ;
rank: 841
score: 97.16403198242188
patch: break $NUMBER$ ;
rank: 842
score: 98.33889770507812
patch: return $NUMBER$ ; } }
rank: 842
score: 98.18760172526042
patch: return native != null ;
rank: 842
score: 97.74522705078125
patch: switch ( break )
rank: 842
score: 97.53849792480469
patch: break ; return
rank: 842
score: 97.501904296875
patch: return ( block ;
rank: 843
score: 98.09791259765625
patch: result { break ;
rank: 843
score: 97.77848510742187
patch: state . break ;
rank: 843
score: 97.74503173828126
patch: completed = break ;
rank: 843
score: 97.4971923828125
patch: break + break ;
rank: 843
score: 97.15127563476562
patch: return err ;
rank: 844
score: 98.096533203125
patch: key = break ;
rank: 844
score: 97.920849609375
patch: found = ; }
rank: 844
score: 97.77752685546875
patch: added = true ;
rank: 844
score: 97.45830535888672
patch: return Integer ;
rank: 844
score: 97.14608764648438
patch: ret null .
rank: 845
score: 97.9552001953125
patch: throw [ 1 ] ;
rank: 845
score: 97.77457275390626
patch: expression = false ;
rank: 845
score: 97.7344482421875
patch: val = break ;
rank: 846
score: 97.9498291015625
patch: return ; : break ;
rank: 846
score: 97.90901947021484
patch: if ; }
rank: 846
score: 97.73151245117188
patch: false = false ;
rank: 846
score: 97.47982788085938
patch: return ) * /
rank: 846
score: 97.4398193359375
patch: if this ;
rank: 846
score: 97.12989044189453
patch: return out ;
rank: 847
score: 98.08692626953125
patch: while ( break ;
rank: 847
score: 97.9065185546875
patch: break block ; }
rank: 847
score: 97.75200653076172
patch: log . {
rank: 847
score: 97.73016967773438
patch: break 0 ; }
rank: 847
score: 97.47734985351562
patch: break << 1 ;
rank: 847
score: 97.43455505371094
patch: return name ;
rank: 848
score: 97.90609741210938
patch: node . break ;
rank: 848
score: 97.72574462890626
patch: prev = break ;
rank: 848
score: 97.3835220336914
patch: break ; boolean
rank: 848
score: 97.12049865722656
patch: log ) .
rank: 849
score: 98.08256225585937
patch: } catch break ;
rank: 849
score: 97.72545776367187
patch: parent . break ;
rank: 849
score: 97.47046508789063
patch: break - * ;
rank: 849
score: 97.3824234008789
patch: new break ;
rank: 849
score: 97.11989339192708
patch: t .
rank: 850
score: 98.08039093017578
patch: catch null ;
rank: 850
score: 97.7233642578125
patch: break << $NUMBER$ ;
rank: 850
score: 97.71244303385417
patch: true ;
rank: 850
score: 97.46766357421875
patch: p . break ;
rank: 850
score: 97.37779235839844
patch: do break ;
rank: 851
score: 98.13861083984375
patch: return n != null ;
rank: 851
score: 97.9414774576823
patch: fail ( $STRING$ ) ;
rank: 851
score: 97.89046630859374
patch: resolved = true ;
rank: 851
score: 97.7068099975586
patch: found = ;
rank: 851
score: 97.4666259765625
patch: return this . return
rank: 851
score: 97.37440490722656
patch: if ; break
rank: 851
score: 97.11396026611328
patch: return ; else
rank: 852
score: 98.2951151529948
patch: } else return true ;
rank: 852
score: 97.88709716796875
patch: answer = true ;
rank: 852
score: 97.718994140625
patch: count ++ ;
rank: 852
score: 97.10551452636719
patch: else { {
rank: 853
score: 98.07203369140625
patch: catch false ; ;
rank: 853
score: 97.71680908203125
patch: res = break ;
rank: 853
score: 97.64597574869792
patch: return {
rank: 853
score: 97.37286376953125
patch: return ; try
rank: 853
score: 97.09896087646484
patch: return - ;
rank: 854
score: 98.07008666992188
patch: key { break ;
rank: 854
score: 97.71488037109376
patch: id = break ;
rank: 854
score: 97.45888671875
patch: return . TRUE ;
rank: 854
score: 97.36653137207031
patch: throw return ;
rank: 854
score: 97.09394073486328
patch: / * *
rank: 855
score: 97.6336898803711
patch: t . {
rank: 855
score: 97.45858001708984
patch: result = block
rank: 855
score: 97.3653564453125
patch: if ; scope
rank: 855
score: 97.08853149414062
patch: return / *
rank: 856
score: 98.27532958984375
patch: = break ; } }
rank: 856
score: 98.12120564778645
patch: ref != null ; }
rank: 856
score: 97.8783203125
patch: if ; } ;
rank: 856
score: 97.6270980834961
patch: found = {
rank: 856
score: 97.45716349283855
patch: break ?
rank: 856
score: 97.35758209228516
patch: return key ;
rank: 856
score: 97.08457946777344
patch: false * /
rank: 857
score: 98.05245971679688
patch: / break ; }
rank: 857
score: 97.8756591796875
patch: break -- ; }
rank: 857
score: 97.71143798828125
patch: position += break ;
rank: 857
score: 97.34449005126953
patch: System ; ;
rank: 857
score: 97.08401489257812
patch: return BOTH ;
rank: 858
score: 98.27351888020833
patch: { return break ; }
rank: 858
score: 98.05099487304688
patch: break ; try ;
rank: 858
score: 97.85907592773438
patch: result . add ;
rank: 858
score: 97.61546325683594
patch: / ) {
rank: 858
score: 97.44541015625
patch: break + * ?
rank: 858
score: 97.34367370605469
patch: if ; Logger
rank: 858
score: 97.0837173461914
patch: throw / /
rank: 859
score: 98.09765625
patch: return current != null ;
rank: 859
score: 97.8574951171875
patch: ; break ; }
rank: 859
score: 97.593994140625
patch: table . {
rank: 859
score: 97.44488525390625
patch: return ref . {
rank: 859
score: 97.0775146484375
patch: return false {
rank: 860
score: 98.27066040039062
patch: if ( break break ;
rank: 860
score: 98.09615071614583
patch: return n > 0 ;
rank: 860
score: 97.9091796875
patch: return ; / * /
rank: 860
score: 97.85420532226563
patch: throw ; } ;
rank: 860
score: 97.7060791015625
patch: break value ; }
rank: 860
score: 97.43939819335938
patch: break + / ?
rank: 860
score: 97.33721923828125
patch: switch break ;
rank: 860
score: 97.0753402709961
patch: return make ;
rank: 861
score: 98.26776123046875
patch: } if ( break ;
rank: 861
score: 98.04766845703125
patch: return ( false ;
rank: 861
score: 97.70272216796874
patch: break true ; ;
rank: 861
score: 97.57243347167969
patch: * ) {
rank: 861
score: 97.438720703125
patch: return true 1 ;
rank: 861
score: 97.33624267578125
patch: if name ;
rank: 861
score: 97.0696792602539
patch: try { return
rank: 862
score: 98.26302083333333
patch: } else { return ;
rank: 862
score: 98.042724609375
patch: index { break ;
rank: 862
score: 97.70205078125
patch: break ] ; }
rank: 862
score: 97.56857299804688
patch: case Loop ;
rank: 862
score: 97.437109375
patch: return block . ;
rank: 862
score: 97.3331069946289
patch: catch ; {
rank: 862
score: 97.06755065917969
patch: result = !
rank: 863
score: 98.24586995442708
patch: break ; } finally {
rank: 863
score: 98.0419189453125
patch: k * break ;
rank: 863
score: 97.829052734375
patch: block = ; }
rank: 863
score: 97.70134887695312
patch: break ( ; }
rank: 863
score: 97.53877258300781
patch: return else ;
rank: 863
score: 97.43584594726562
patch: break . class ;
rank: 863
score: 97.32167053222656
patch: ! break ;
rank: 863
score: 97.05451965332031
patch: throw iterator .
rank: 864
score: 98.2449239095052
patch: ? break ; } }
rank: 864
score: 97.859228515625
patch: return is CaMeL Function
rank: 864
score: 97.823291015625
patch: break $NUMBER$ ; }
rank: 864
score: 97.53486633300781
patch: false ) {
rank: 864
score: 97.31593831380208
patch: result ;
rank: 864
score: 97.04680633544922
patch: { return ;
rank: 865
score: 98.24468994140625
patch: } } return break ;
rank: 865
score: 98.06514485677083
patch: } } return true ;
rank: 865
score: 98.03269653320312
patch: catch null break ;
rank: 865
score: 97.81878051757812
patch: break * ; }
rank: 865
score: 97.70117797851563
patch: status = break ;
rank: 865
score: 97.30493927001953
patch: return ; boolean
rank: 865
score: 97.03548431396484
patch: -- block ;
rank: 866
score: 98.05509440104167
patch: return count > 0 ;
rank: 866
score: 98.031787109375
patch: / ] break ;
rank: 866
score: 97.81742553710937
patch: fail ( $STRING$ ;
rank: 866
score: 97.70101318359374
patch: pi = break ;
rank: 866
score: 97.49760437011719
patch: VM ) {
rank: 866
score: 97.30343627929688
patch: throw type ;
rank: 866
score: 97.03427124023438
patch: { continue ;
rank: 867
score: 98.24253336588542
patch: } else break ; }
rank: 867
score: 98.0298095703125
patch: catch false break ;
rank: 867
score: 97.70096435546876
patch: self = break ;
rank: 867
score: 97.39898071289062
patch: return ) ? true
rank: 867
score: 97.29527282714844
patch: break ; *
rank: 868
score: 98.02945556640626
patch: else return null ;
rank: 868
score: 97.81661987304688
patch: AOM . break ;
rank: 868
score: 97.69806518554688
patch: arg = break ;
rank: 868
score: 97.47545623779297
patch: e . {
rank: 868
score: 97.39713134765626
patch: return ) / *
rank: 868
score: 97.29064178466797
patch: throw super ;
rank: 868
score: 97.03089904785156
patch: if ( {
rank: 869
score: 98.03668212890625
patch: is CaMeL Function ++ ;
rank: 869
score: 97.6951171875
patch: break type ; }
rank: 869
score: 97.4700698852539
patch: } * /
rank: 869
score: 97.28909301757812
patch: throw current ;
rank: 869
score: 97.02813720703125
patch: count * /
rank: 870
score: 98.23366292317708
patch: } } if break ;
rank: 870
score: 98.03505452473958
patch: block . { break ;
rank: 870
score: 97.69493408203125
patch: break = block ;
rank: 870
score: 97.4480209350586
patch: if ( block
rank: 870
score: 97.39436848958333
patch: break +
rank: 870
score: 97.01646423339844
patch: return Assignment ;
rank: 871
score: 98.02154541015625
patch: index ; break ;
rank: 871
score: 97.8093994140625
patch: check ; break ;
rank: 871
score: 97.6937255859375
patch: condition = break ;
rank: 871
score: 97.3875
patch: return false ? block
rank: 871
score: 97.28365325927734
patch: if 1 ;
rank: 871
score: 97.01415252685547
patch: warn ) ;
rank: 872
score: 98.01802368164063
patch: finally { null ;
rank: 872
score: 97.80543212890625
patch: ref . ; }
rank: 872
score: 97.69276733398438
patch: break TRUE ; }
rank: 872
score: 97.38578491210937
patch: return TRUE ? false
rank: 872
score: 97.28097534179688
patch: return ; throws
rank: 872
score: 97.00991821289062
patch: / * ?
rank: 873
score: 98.02866617838542
patch: } } return false ;
rank: 873
score: 98.01541748046876
patch: / break ; ;
rank: 873
score: 97.69129028320313
patch: image = break ;
rank: 873
score: 97.4224141438802
patch: * /
rank: 873
score: 97.38505859375
patch: block . break _
rank: 873
score: 97.27466583251953
patch: throw System ;
rank: 873
score: 97.00643157958984
patch: if ( }
rank: 874
score: 98.2080790201823
patch: return 0 ; } else
rank: 874
score: 97.69061889648438
patch: wrapper = break ;
rank: 874
score: 97.40585327148438
patch: break : {
rank: 874
score: 97.2706298828125
patch: if ; finally
rank: 875
score: 98.2012227376302
patch: break ; } } finally
rank: 875
score: 98.0279541015625
patch: block . break ; }
rank: 875
score: 98.01181640625
patch: break ; } /
rank: 875
score: 97.68612060546874
patch: rc = break ;
rank: 875
score: 97.35256958007812
patch: break * ? block
rank: 875
score: 97.27062225341797
patch: if ; symbol
rank: 875
score: 97.00435638427734
patch: result ; }
rank: 876
score: 98.02700805664062
patch: { { return true ;
rank: 876
score: 98.0084228515625
patch: ] = break ;
rank: 876
score: 97.6858642578125
patch: bounds = break ;
rank: 876
score: 97.23878987630208
patch: logger ;
rank: 876
score: 97.00173950195312
patch: if (
rank: 877
score: 98.00762329101562
patch: break = null ;
rank: 877
score: 97.6810791015625
patch: operation = break ;
rank: 877
score: 97.38729858398438
patch: ; else {
rank: 877
score: 97.30462646484375
patch: break :
rank: 877
score: 97.22248077392578
patch: m break ;
rank: 878
score: 98.02231852213542
patch: return 1 . false ;
rank: 878
score: 98.00712890625
patch: Element break true ;
rank: 878
score: 97.67772827148437
patch: priority = break ;
rank: 878
score: 97.37525939941406
patch: { ref .
rank: 878
score: 97.2880859375
patch: break else {
rank: 878
score: 97.22075653076172
patch: throw count ;
rank: 878
score: 96.9971694946289
patch: return in ;
rank: 879
score: 98.19057210286458
patch: } return true ; }
rank: 879
score: 98.003515625
patch: key . break ;
rank: 879
score: 97.675732421875
patch: break success ; }
rank: 879
score: 97.27849578857422
patch: break this ;
rank: 879
score: 97.21626281738281
patch: return ; int
rank: 880
score: 98.01458740234375
patch: return size != null ;
rank: 880
score: 97.78807983398437
patch: target = block ;
rank: 880
score: 97.36449432373047
patch: state . {
rank: 880
score: 97.24886322021484
patch: break + *
rank: 880
score: 97.2154541015625
patch: m false ;
rank: 880
score: 96.97361755371094
patch: return return {
rank: 881
score: 98.18809000651042
patch: return false ; else }
rank: 881
score: 97.99507446289063
patch: * ; break ;
rank: 881
score: 97.78779296875
patch: break * / ;
rank: 881
score: 97.6724365234375
patch: hint = break ;
rank: 881
score: 97.36027526855469
patch: true ; }
rank: 881
score: 97.21149444580078
patch: try
rank: 882
score: 98.1854756673177
patch: } else = null ;
rank: 882
score: 97.99193725585937
patch: Node break false ;
rank: 882
score: 97.78714599609376
patch: retval = true ;
rank: 882
score: 97.66793212890624
patch: type = break ;
rank: 882
score: 97.3520278930664
patch: break ] ;
rank: 882
score: 97.21040344238281
patch: break ; set
rank: 882
score: 96.97262573242188
patch: throw size ;
rank: 883
score: 98.17950439453125
patch: return break ; else
rank: 883
score: 98.0098368326823
patch: return $NUMBER$ . false ;
rank: 883
score: 97.99151000976562
patch: xsp = break ;
rank: 883
score: 97.77496948242188
patch: return ( ; }
rank: 883
score: 97.66552124023437
patch: b = break ;
rank: 883
score: 97.35078938802083
patch: state .
rank: 883
score: 97.20425415039062
patch: return / ;
rank: 883
score: 97.20120239257812
patch: break * *
rank: 884
score: 98.00933837890625
patch: return false ; true ;
rank: 884
score: 97.766455078125
patch: this . ; }
rank: 884
score: 97.66494140625
patch: done = break ;
rank: 884
score: 97.3326416015625
patch: throw continue ;
rank: 884
score: 97.20291137695312
patch: return ; void
rank: 884
score: 96.96855163574219
patch: return unknown ;
rank: 885
score: 97.98798828125
patch: break . next ;
rank: 885
score: 97.76253662109374
patch: found = ; ;
rank: 885
score: 97.6626953125
patch: throw new Runtime ;
rank: 885
score: 97.33143615722656
patch: break ; :
rank: 885
score: 97.1324462890625
patch: LOG ;
rank: 885
score: 96.96315002441406
patch: return info ;
rank: 886
score: 97.985107421875
patch: Element break false ;
rank: 886
score: 97.66232299804688
patch: break node ; }
rank: 886
score: 97.33126831054688
patch: match ) {
rank: 886
score: 97.17698669433594
patch: break / ?
rank: 886
score: 97.09046427408855
patch: this ;
rank: 886
score: 96.96153259277344
patch: return line ;
rank: 887
score: 97.98416748046876
patch: else * break ;
rank: 887
score: 97.74088134765626
patch: return * true ;
rank: 887
score: 97.66174926757813
patch: added = break ;
rank: 887
score: 97.31661987304688
patch: { block .
rank: 887
score: 97.17572784423828
patch: break Loop $NUMBER$
rank: 887
score: 97.00284830729167
patch: do ;
rank: 887
score: 96.95964813232422
patch: throw ref ;
rank: 888
score: 98.15431518554688
patch: } } break ;
rank: 888
score: 97.75418701171876
patch: cmd = ; }
rank: 888
score: 97.66170654296874
patch: step = break ;
rank: 888
score: 97.31391906738281
patch: continue ; ;
rank: 888
score: 97.16523742675781
patch: return ) _
rank: 888
score: 96.96630859375
patch: } ;
rank: 888
score: 96.95222473144531
patch: break * ;
rank: 889
score: 97.9792236328125
patch: value = 0 ;
rank: 889
score: 97.75379638671875
patch: ret = ; }
rank: 889
score: 97.65980224609375
patch: style = break ;
rank: 889
score: 97.30865478515625
patch: continue block ;
rank: 889
score: 97.16173553466797
patch: break - *
rank: 889
score: 96.96534220377605
patch: finally ;
rank: 889
score: 96.95150756835938
patch: for ( }
rank: 890
score: 97.97859497070313
patch: count * break ;
rank: 890
score: 97.75325927734374
patch: entity . break ;
rank: 890
score: 97.709814453125
patch: exit ( ) ;
rank: 890
score: 97.65968017578125
patch: ok = false ;
rank: 890
score: 97.30782318115234
patch: result = {
rank: 890
score: 96.95528157552083
patch: if ;
rank: 890
score: 96.95106506347656
patch: break Loop ;
rank: 891
score: 97.97855224609376
patch: else = break ;
rank: 891
score: 97.75192260742188
patch: type = ; }
rank: 891
score: 97.65931396484375
patch: running = true ;
rank: 891
score: 97.30580647786458
patch: true {
rank: 891
score: 97.15168762207031
patch: break - :
rank: 891
score: 96.94782257080078
patch: return } else
rank: 891
score: 96.93307495117188
patch: buffer ;
rank: 892
score: 97.74902954101563
patch: cmd . break ;
rank: 892
score: 97.6580322265625
patch: answer = break ;
rank: 892
score: 97.29058837890625
patch: throw {
rank: 892
score: 96.93115997314453
patch: System . }
rank: 892
score: 96.91482543945312
patch: out ;
rank: 893
score: 98.090283203125
patch: { return break ;
rank: 893
score: 97.96950073242188
patch: next new break ;
rank: 893
score: 97.74730834960937
patch: flags |= ; }
rank: 893
score: 97.6579833984375
patch: list = break ;
rank: 893
score: 96.92837524414062
patch: break / *
rank: 893
score: 96.89464569091797
patch: }
rank: 894
score: 98.08954467773438
patch: } else if ;
rank: 894
score: 97.96519165039062
patch: break ; error ;
rank: 894
score: 97.74663696289062
patch: binding . break ;
rank: 894
score: 97.6578369140625
patch: break ^ break ;
rank: 894
score: 97.26811218261719
patch: / * ;
rank: 894
score: 96.87990315755208
patch: ret ;
rank: 895
score: 97.96434326171875
patch: row . break ;
rank: 895
score: 97.73890991210938
patch: expr . break ;
rank: 895
score: 97.2661361694336
patch: VM * /
rank: 896
score: 98.08353881835937
patch: } else return ;
rank: 896
score: 97.962939453125
patch: break ; / /
rank: 896
score: 97.73724365234375
patch: ref = block ;
rank: 896
score: 97.6563720703125
patch: best = break ;
rank: 896
score: 97.25758361816406
patch: * : {
rank: 896
score: 97.12183634440105
patch: return ref
rank: 896
score: 96.90376281738281
patch: return finally {
rank: 896
score: 96.84718831380208
patch: log ;
rank: 897
score: 97.9616943359375
patch: loop * break ;
rank: 897
score: 97.73683471679688
patch: break * / }
rank: 897
score: 97.6548583984375
patch: it = break ;
rank: 897
score: 97.25666046142578
patch: continue true ;
rank: 897
score: 97.11900329589844
patch: return ) )
rank: 897
score: 96.88016764322917
patch: q .
rank: 897
score: 96.80467224121094
patch: do
rank: 898
score: 97.95941162109375
patch: Token break true ;
rank: 898
score: 97.931201171875
patch: is CaMeL Function ;
rank: 898
score: 97.73460083007812
patch: ; } break ;
rank: 898
score: 97.65458374023437
patch: cancelled = break ;
rank: 898
score: 96.83241780598958
patch: ex .
rank: 898
score: 96.77298990885417
patch: else ;
rank: 899
score: 98.07039794921874
patch: return ; ; else
rank: 899
score: 97.9308349609375
patch: return - 0 ;
rank: 899
score: 97.09810638427734
patch: break equals ;
rank: 899
score: 96.8296407063802
patch: synchronized (
rank: 899
score: 96.76546223958333
patch: super ;
rank: 900
score: 98.0694091796875
patch: if ; * /
rank: 900
score: 97.91068725585937
patch: Assigned > false ;
rank: 900
score: 97.25066375732422
patch: / * {
rank: 900
score: 97.08613586425781
patch: break Assignment .
rank: 900
score: 96.75642903645833
patch: dim ;
rank: 901
score: 98.061962890625
patch: , break ; }
rank: 901
score: 97.7325439453125
patch: r . break ;
rank: 901
score: 97.65028076171875
patch: failed = true ;
rank: 901
score: 97.23197937011719
patch: break ; {
rank: 901
score: 97.07444763183594
patch: break + +
rank: 901
score: 96.80953979492188
patch: return }
rank: 901
score: 96.67495727539062
patch: throw
rank: 902
score: 98.05960693359376
patch: } else break ;
rank: 902
score: 97.94630737304688
patch: index = null ;
rank: 902
score: 97.89261474609376
patch: ref == null ;
rank: 902
score: 97.7321533203125
patch: result = ; ;
rank: 902
score: 97.64932250976562
patch: break value ;
rank: 902
score: 97.22991943359375
patch: false ;
rank: 902
score: 96.79256184895833
patch: true .
rank: 902
score: 96.60756429036458
patch: try ;
rank: 903
score: 97.71793823242187
patch: desc . break ;
rank: 903
score: 97.6491943359375
patch: break ; / *
rank: 903
score: 97.22954559326172
patch: exc . {
rank: 903
score: 97.0634765625
patch: throw $NUMBER$ _
rank: 903
score: 96.7640889485677
patch: r .
rank: 903
score: 96.60076904296875
patch: found ;
rank: 904
score: 98.0542236328125
patch: return ; ; ;
rank: 904
score: 97.94341430664062
patch: index . break ;
rank: 904
score: 97.71265258789063
patch: that . break ;
rank: 904
score: 97.64864501953124
patch: clazz = break ;
rank: 904
score: 97.20289611816406
patch: {
rank: 904
score: 96.74301147460938
patch: else {
rank: 904
score: 96.5855000813802
patch: e ;
rank: 905
score: 98.05037689208984
patch: } else ;
rank: 905
score: 97.94202880859375
patch: value * break ;
rank: 905
score: 97.7097412109375
patch: final ; ; }
rank: 905
score: 96.7287089029948
patch: b .
rank: 905
score: 96.55106608072917
patch: } else
rank: 906
score: 97.70831909179688
patch: node ; break ;
rank: 906
score: 97.64766845703124
patch: break && ; }
rank: 906
score: 96.69019571940105
patch: ret .
rank: 906
score: 96.55045572916667
patch: sb ;
rank: 907
score: 98.03727416992187
patch: } else { }
rank: 907
score: 97.9416748046875
patch: n = null ;
rank: 907
score: 97.64688720703126
patch: match ; break ;
rank: 907
score: 97.0380630493164
patch: break Reference ;
rank: 907
score: 96.66025797526042
patch: * ;
rank: 907
score: 96.53993733723958
patch: buf ;
rank: 908
score: 97.81256103515625
patch: return = true ;
rank: 908
score: 97.70594482421875
patch: break n ; }
rank: 908
score: 96.6593729654948
patch: l .
rank: 908
score: 96.53538004557292
patch: / ;
rank: 909
score: 97.9402587890625
patch: while new break ;
rank: 909
score: 97.80999755859375
patch: ref = null ;
rank: 909
score: 97.69957885742187
patch: throw ; ; }
rank: 909
score: 97.10677083333333
patch: do {
rank: 909
score: 97.0282974243164
patch: break Loop :
rank: 910
score: 98.01524658203125
patch: } else ; }
rank: 910
score: 97.64334716796876
patch: limit = break ;
rank: 910
score: 97.638525390625
patch: return ; * ;
rank: 910
score: 97.09750366210938
patch: false {
rank: 910
score: 97.02184295654297
patch: return Loop $NUMBER$
rank: 910
score: 96.61280314127605
patch: expr .
rank: 910
score: 96.45875040690105
patch: value ;
rank: 911
score: 97.64254150390624
patch: other = break ;
rank: 911
score: 97.0894063313802
patch: found {
rank: 911
score: 97.02140808105469
patch: break finally {
rank: 911
score: 96.605712890625
patch: / /
rank: 911
score: 96.40167236328125
patch: type ;
rank: 912
score: 97.9790283203125
patch: return null ; else
rank: 912
score: 97.93397216796875
patch: ++ * break ;
rank: 912
score: 97.69832153320313
patch: switch ( block )
rank: 912
score: 97.64170532226562
patch: cancelled = false ;
rank: 912
score: 97.06903076171875
patch: / *
rank: 912
score: 97.01470947265625
patch: return ) }
rank: 912
score: 96.58057657877605
patch: throw ;
rank: 912
score: 96.39902750651042
patch: context ;
rank: 913
score: 97.93392333984374
patch: line . break ;
rank: 913
score: 97.78310546875
patch: ref = false ;
rank: 913
score: 97.69313354492188
patch: while ( ; )
rank: 913
score: 97.6404052734375
patch: report CaMeL Error ;
rank: 913
score: 97.04652913411458
patch: tmp ;
rank: 913
score: 96.5675048828125
patch: loop .
rank: 913
score: 96.38531494140625
patch: state ;
rank: 914
score: 97.93327026367187
patch: finally { false ;
rank: 914
score: 97.6390869140625
patch: return ! ; }
rank: 914
score: 97.01172637939453
patch: return ( ;
rank: 914
score: 96.98598225911458
patch: vars .
rank: 914
score: 96.50834147135417
patch: break {
rank: 914
score: 96.38442993164062
patch: text ;
rank: 915
score: 97.93253784179687
patch: break ; next ;
rank: 915
score: 96.49573771158855
patch: t ;
rank: 915
score: 96.37766520182292
patch: scope ;
rank: 916
score: 97.9305419921875
patch: idx = break ;
rank: 916
score: 97.68862915039062
patch: wrapper . break ;
rank: 916
score: 97.63598022460937
patch: position -= break ;
rank: 916
score: 97.61280517578125
patch: exception = true ;
rank: 916
score: 96.94510904947917
patch: / _
rank: 916
score: 96.36993408203125
patch: /
rank: 917
score: 97.94215087890625
patch: if ; } }
rank: 917
score: 97.75353393554687
patch: { { break ;
rank: 917
score: 97.63583374023438
patch: break match ;
rank: 917
score: 96.474853515625
patch: s .
rank: 917
score: 96.36330159505208
patch: code ;
rank: 918
score: 97.93875122070312
patch: { return ; ;
rank: 918
score: 97.92824096679688
patch: next break ; ;
rank: 918
score: 97.751513671875
patch: block == null ;
rank: 918
score: 97.67520751953126
patch: val = ; }
rank: 918
score: 97.63574829101563
patch: arity = break ;
rank: 918
score: 97.00283813476562
patch: log ( )
rank: 918
score: 96.93297322591145
patch: m _
rank: 918
score: 96.47216796875
patch: finally {
rank: 918
score: 96.35257975260417
patch: Thread ;
rank: 919
score: 97.927294921875
patch: n { break ;
rank: 919
score: 97.67516479492187
patch: target ; ; }
rank: 919
score: 97.63565063476562
patch: fail break ; }
rank: 919
score: 96.99948120117188
patch: continue break ;
rank: 919
score: 96.90824381510417
patch: context .
rank: 919
score: 96.3523457845052
patch: try /
rank: 920
score: 97.72026977539062
patch: Assigned > true ;
rank: 920
score: 97.63088989257812
patch: kind = break ;
rank: 920
score: 96.99880981445312
patch: break ( ;
rank: 920
score: 96.86861165364583
patch: folder .
rank: 920
score: 96.45223999023438
patch: false .
rank: 920
score: 96.29937744140625
patch: parent ;
rank: 921
score: 97.91790771484375
patch: key = null ;
rank: 921
score: 97.719580078125
patch: ref = true ;
rank: 921
score: 97.671533203125
patch: break new ; }
rank: 921
score: 97.63003540039062
patch: q = break ;
rank: 921
score: 96.99317932128906
patch: break + )
rank: 921
score: 96.86354573567708
patch: target .
rank: 921
score: 96.4389139811198
patch: ioe .
rank: 921
score: 96.29134368896484
patch: finally
rank: 922
score: 97.91693115234375
patch: v = break ;
rank: 922
score: 97.88736572265626
patch: return false ; finally
rank: 922
score: 97.6287353515625
patch: running = break ;
rank: 922
score: 97.5857666015625
patch: end ( ) ;
rank: 922
score: 96.99192301432292
patch: break )
rank: 922
score: 96.27744547526042
patch: iterator ;
rank: 923
score: 97.91474609375
patch: } while break ;
rank: 923
score: 97.66879272460938
patch: ref = ; ;
rank: 923
score: 97.6285888671875
patch: completed = false ;
rank: 923
score: 96.99134826660156
patch: break NONE ;
rank: 923
score: 96.83925374348958
patch: that .
rank: 923
score: 96.40479532877605
patch: d .
rank: 923
score: 96.25967407226562
patch: ctx ;
rank: 924
score: 97.9145263671875
patch: c . break ;
rank: 924
score: 97.88133544921875
patch: } else * /
rank: 924
score: 97.6646484375
patch: entity ; break ;
rank: 924
score: 97.6262939453125
patch: parent = break ;
rank: 924
score: 96.9862060546875
patch: break : block
rank: 924
score: 96.24631754557292
patch: target ;
rank: 925
score: 97.66224975585938
patch: return ; default :
rank: 925
score: 96.98197937011719
patch: break false }
rank: 925
score: 96.40053304036458
patch: ref .
rank: 926
score: 97.86047973632813
patch: } if ; }
rank: 926
score: 97.61923828125
patch: stack = break ;
rank: 926
score: 96.80712890625
patch: table {
rank: 926
score: 96.23330688476562
patch: xsp ;
rank: 927
score: 97.91033325195312
patch: key ; break ;
rank: 927
score: 97.843798828125
patch: } * * /
rank: 927
score: 97.66078491210938
patch: dbreak ; }
rank: 927
score: 97.61619873046875
patch: ev = break ;
rank: 927
score: 96.79542032877605
patch: list .
rank: 927
score: 96.38450113932292
patch: retval .
rank: 927
score: 96.2275390625
patch: throw return
rank: 928
score: 97.91027221679687
patch: Node break true ;
rank: 928
score: 97.83827514648438
patch: } else continue ;
rank: 928
score: 97.66024780273438
patch: loaded = true ;
rank: 928
score: 97.61265869140625
patch: notify CaMeL All ;
rank: 928
score: 96.77647908528645
patch: count {
rank: 928
score: 96.37345377604167
patch: addr .
rank: 928
score: 96.220458984375
patch: data ;
rank: 929
score: 97.83366088867187
patch: ? break ; }
rank: 929
score: 97.6933349609375
patch: return != null ;
rank: 929
score: 97.65968017578125
patch: target = null ;
rank: 929
score: 96.77428181966145
patch: parent .
rank: 929
score: 96.20085144042969
patch: return
rank: 930
score: 97.82161254882813
patch: set ; break ;
rank: 930
score: 97.6119140625
patch: final break ; ;
rank: 930
score: 96.95206451416016
patch: block break ;
rank: 930
score: 96.76751708984375
patch: impl .
rank: 930
score: 96.37073771158855
patch: so .
rank: 930
score: 96.19614664713542
patch: block ;
rank: 931
score: 97.90748901367188
patch: i break ; ;
rank: 931
score: 97.61181640625
patch: location = break ;
rank: 931
score: 96.76247151692708
patch: collection .
rank: 931
score: 96.35659790039062
patch: fail ;
rank: 931
score: 96.1900634765625
patch: token ;
rank: 932
score: 97.90712890625
patch: value return break ;
rank: 932
score: 97.81620483398437
patch: } return null ;
rank: 932
score: 97.65659790039062
patch: callback . break ;
rank: 932
score: 97.61141357421874
patch: tail = break ;
rank: 932
score: 97.56660766601563
patch: return is CaMeL Loop
rank: 932
score: 96.93482208251953
patch: break length ;
rank: 932
score: 96.74327596028645
patch: cm .
rank: 932
score: 96.3390401204427
patch: return (
rank: 932
score: 96.18461100260417
patch: ex ;
rank: 933
score: 97.90545654296875
patch: catch true ;
rank: 933
score: 97.66533203125
patch: break : false ;
rank: 933
score: 96.74055989583333
patch: result {
rank: 933
score: 96.33060709635417
patch: exception .
rank: 933
score: 96.18365478515625
patch: else
rank: 934
score: 97.9034423828125
patch: finally = break ;
rank: 934
score: 97.80303344726562
patch: = break ; }
rank: 934
score: 97.65442504882813
patch: state = ; }
rank: 934
score: 97.60878295898438
patch: iter = break ;
rank: 934
score: 96.73862711588542
patch: form .
rank: 934
score: 96.30916341145833
patch: p .
rank: 934
score: 96.1813456217448
patch: adapter ;
rank: 935
score: 97.90292358398438
patch: * ++ break ;
rank: 935
score: 97.649853515625
patch: target = true ;
rank: 935
score: 97.60821533203125
patch: null = break ;
rank: 935
score: 97.56004028320312
patch: commit ( ) ;
rank: 935
score: 96.91425323486328
patch: break Assignment :
rank: 935
score: 96.734375
patch: res {
rank: 935
score: 96.3089599609375
patch: se .
rank: 935
score: 96.08773803710938
patch: break
rank: 936
score: 97.90287475585937
patch: -- * break ;
rank: 936
score: 97.78770751953125
patch: return false ; try
rank: 936
score: 97.64553833007812
patch: continue ; ; }
rank: 936
score: 97.60765380859375
patch: flag = break ;
rank: 936
score: 96.91244506835938
patch: break ( }
rank: 936
score: 96.72052001953125
patch: sm .
rank: 936
score: 96.08588409423828
patch: result
rank: 937
score: 97.9022705078125
patch: n ; break ;
rank: 937
score: 97.64490356445313
patch: block = null ;
rank: 937
score: 97.64398193359375
patch: comp . break ;
rank: 937
score: 97.60697021484376
patch: part . break ;
rank: 937
score: 96.69582112630208
patch: continue :
rank: 937
score: 95.67510223388672
patch: found
rank: 938
score: 97.64230346679688
patch: resolved = ; }
rank: 938
score: 97.60568237304688
patch: cp = break ;
rank: 938
score: 97.54630737304687
patch: finish ( ) ;
rank: 938
score: 96.6933085123698
patch: tmp {
rank: 938
score: 96.27108764648438
patch: level .
rank: 938
score: 95.6376724243164
patch: ret
rank: 939
score: 97.78290405273438
patch: } break ; else
rank: 939
score: 97.6390380859375
patch: stmt . break ;
rank: 939
score: 97.6025146484375
patch: x = break ;
rank: 939
score: 96.69199625651042
patch: ts .
rank: 939
score: 96.26559448242188
patch: for (
rank: 939
score: 95.5047607421875
patch: 
rank: 940
score: 97.89468994140626
patch: break ; null ;
rank: 940
score: 97.63660278320313
patch: if ; ; ;
rank: 940
score: 97.633447265625
patch: return = null ;
rank: 940
score: 97.6016845703125
patch: enumeration = break ;
rank: 940
score: 96.90119934082031
patch: break return ;
rank: 940
score: 96.67234293619792
patch: tmp :
rank: 940
score: 96.26155598958333
patch: constructor .
rank: 940
score: 95.48002624511719
patch: public
rank: 941
score: 97.8910888671875
patch: location . break ;
rank: 941
score: 97.75531616210938
patch: return ; ; finally
rank: 941
score: 97.6359130859375
patch: switch ( ; ;
rank: 941
score: 97.60016479492188
patch: thread = break ;
rank: 941
score: 97.514501953125
patch: error ( ) ;
rank: 941
score: 96.66726684570312
patch: s _
rank: 941
score: 95.29327392578125
patch: scope
rank: 942
score: 97.88995361328125
patch: else { continue ;
rank: 942
score: 97.63533935546874
patch: access ; break ;
rank: 942
score: 97.5966796875
patch: break success ;
rank: 942
score: 96.66603597005208
patch: state :
rank: 942
score: 96.23724365234375
patch: exc .
rank: 943
score: 97.88876342773438
patch: Pos break ; ;
rank: 943
score: 97.75198974609376
patch: return break ; finally
rank: 943
score: 97.63372192382812
patch: break count ; }
rank: 943
score: 97.607421875
patch: break ; } {
rank: 943
score: 96.65865071614583
patch: outer ;
rank: 943
score: 95.20986938476562
patch: dim
rank: 944
score: 97.8878662109375
patch: * break ; /
rank: 944
score: 97.63160400390625
patch: retval = false ;
rank: 944
score: 97.60608520507813
patch: block = false ;
rank: 944
score: 97.54844665527344
patch: break n ;
rank: 944
score: 96.62782796223958
patch: loop ;
rank: 944
score: 96.22911580403645
patch: } }
rank: 944
score: 95.19984436035156
patch: value
rank: 945
score: 97.8861572265625
patch: Attr break true ;
rank: 945
score: 97.74454345703126
patch: || break ; }
rank: 945
score: 97.59134521484376
patch: ref != false ;
rank: 945
score: 97.51337432861328
patch: position ++ ;
rank: 945
score: 96.62752278645833
patch: Interruptible {
rank: 945
score: 96.2125244140625
patch: ie .
rank: 945
score: 94.99053192138672
patch: System
rank: 946
score: 97.74329223632813
patch: sender = break ;
rank: 946
score: 97.59130249023437
patch: return ! false ;
rank: 946
score: 96.8790054321289
patch: break + :
rank: 946
score: 96.62164306640625
patch: adapter .
rank: 946
score: 96.21018473307292
patch: LOGGER .
rank: 946
score: 94.96503448486328
patch: boolean
rank: 947
score: 97.8836669921875
patch: else { / ;
rank: 947
score: 97.74071044921875
patch: ; } else
rank: 947
score: 97.53713989257812
patch: ref = ;
rank: 947
score: 96.84490966796875
patch: if ( (
rank: 947
score: 96.20939127604167
patch: ok .
rank: 947
score: 94.8397445678711
patch: this
rank: 948
score: 97.88203125
patch: Boolean break break ;
rank: 948
score: 97.39177703857422
patch: throw key ;
rank: 948
score: 96.79788208007812
patch: break .
rank: 948
score: 96.6163838704427
patch: ) {
rank: 948
score: 96.20560709635417
patch: res .
rank: 948
score: 94.82966613769531
patch: state
rank: 949
score: 97.88134765625
patch: return ( true ;
rank: 949
score: 97.46276092529297
patch: break type ;
rank: 949
score: 97.45729064941406
patch: target = ;
rank: 949
score: 96.73687744140625
patch: return this
rank: 949
score: 96.19863891601562
patch: monitor .
rank: 949
score: 94.8199691772461
patch: code
rank: 950
score: 97.8804931640625
patch: result break ; ;
rank: 950
score: 97.45561218261719
patch: break node ;
rank: 950
score: 96.6064961751302
patch: n {
rank: 950
score: 96.18548583984375
patch: body .
rank: 950
score: 94.77803039550781
patch: pos
rank: 951
score: 97.88040161132812
patch: finally break ; }
rank: 951
score: 97.73184814453126
patch: } for break ;
rank: 951
score: 97.3907699584961
patch: switch ( ;
rank: 951
score: 96.70827229817708
patch: break *
rank: 951
score: 96.6044921875
patch: b {
rank: 951
score: 94.75434875488281
patch: ;
rank: 952
score: 97.44477844238281
patch: break ++ ;
rank: 952
score: 97.33650207519531
patch: for ( ?
rank: 952
score: 96.69446818033855
patch: return block
rank: 952
score: 96.60015869140625
patch: state {
rank: 952
score: 96.1710205078125
patch: answer .
rank: 952
score: 94.69699096679688
patch: block
rank: 953
score: 97.44267272949219
patch: Result break ;
rank: 953
score: 97.36730194091797
patch: switch ; }
rank: 953
score: 97.32964324951172
patch: throw next ;
rank: 953
score: 96.59403483072917
patch: exception {
rank: 953
score: 96.17000325520833
patch: stmt .
rank: 953
score: 94.65394592285156
patch: buf
rank: 954
score: 97.71421813964844
patch: } if ;
rank: 954
score: 97.44112396240234
patch: pos ++ ;
rank: 954
score: 97.30894470214844
patch: final ; }
rank: 954
score: 96.59401448567708
patch: loop :
rank: 954
score: 96.15818277994792
patch: it .
rank: 954
score: 94.62348937988281
patch: Thread
rank: 955
score: 97.66970825195312
patch: ; }
rank: 955
score: 97.30227661132812
patch: fail ( ;
rank: 955
score: 96.588134765625
patch: t :
rank: 955
score: 96.14134724934895
patch: de .
rank: 955
score: 94.60237121582031
patch: val
rank: 956
score: 97.39173889160156
patch: break 0 ;
rank: 956
score: 96.58194986979167
patch: members .
rank: 956
score: 96.50099690755208
patch: break |
rank: 956
score: 96.1400655110677
patch: ae .
rank: 956
score: 94.58740997314453
patch: type
rank: 957
score: 97.83916473388672
patch: * break ;
rank: 957
score: 97.54217529296875
patch: } return ;
rank: 957
score: 97.37162780761719
patch: break -- ;
rank: 957
score: 97.28611755371094
patch: ++ count ;
rank: 957
score: 97.2583236694336
patch: throw TRUE ;
rank: 957
score: 96.5682881673177
patch: null {
rank: 957
score: 96.47178141276042
patch: break block
rank: 957
score: 96.13705444335938
patch: lock .
rank: 957
score: 94.58403015136719
patch: context
rank: 958
score: 97.82051849365234
patch: result break ;
rank: 958
score: 97.52647399902344
patch: } else }
rank: 958
score: 97.27975463867188
patch: binding = ;
rank: 958
score: 96.5556640625
patch: t {
rank: 958
score: 96.45281982421875
patch: return false
rank: 958
score: 96.13072713216145
patch: inst .
rank: 958
score: 94.55451965332031
patch: outer
rank: 959
score: 97.78392028808594
patch: next break ;
rank: 959
score: 97.50613403320312
patch: , break ;
rank: 959
score: 97.33600616455078
patch: Transaction break ;
rank: 959
score: 96.53582763671875
patch: Utils .
rank: 959
score: 96.41075642903645
patch: return )
rank: 959
score: 96.12979125976562
patch: continue }
rank: 959
score: 94.53904724121094
patch: running
rank: 960
score: 97.33256530761719
patch: match break ;
rank: 960
score: 97.25981903076172
patch: throw ; ;
rank: 960
score: 96.5355733235677
patch: * :
rank: 960
score: 96.12766520182292
patch: b ;
rank: 960
score: 94.51541900634766
patch: exception
rank: 961
score: 97.76483154296875
patch: case break ;
rank: 961
score: 97.26119995117188
patch: { System .
rank: 961
score: 96.52858479817708
patch: table ;
rank: 961
score: 96.4022216796875
patch: result _
rank: 961
score: 96.11905924479167
patch: evt .
rank: 961
score: 94.51353454589844
patch: method
rank: 962
score: 97.2396011352539
patch: for ( int
rank: 962
score: 97.14910888671875
patch: throw iterator ;
rank: 962
score: 96.5274658203125
patch: children .
rank: 962
score: 96.1141357421875
patch: o .
rank: 962
score: 94.50517272949219
patch: start
rank: 963
score: 97.75192260742188
patch: Pos break ;
rank: 963
score: 97.2905044555664
patch: final int ;
rank: 963
score: 97.14061737060547
patch: return Loop ;
rank: 963
score: 96.50516764322917
patch: : {
rank: 963
score: 96.1066182454427
patch: description .
rank: 963
score: 94.46611022949219
patch: Throwable
rank: 964
score: 97.74288177490234
patch: i break ;
rank: 964
score: 97.28275299072266
patch: fail break ;
rank: 964
score: 97.18775939941406
patch: ref ; }
rank: 964
score: 96.1031494140625
patch: response .
rank: 964
score: 94.43739318847656
patch: comp
rank: 965
score: 96.09859212239583
patch: null .
rank: 965
score: 94.41107177734375
patch: logger
rank: 966
score: 97.63951873779297
patch: while false ;
rank: 966
score: 97.30935668945312
patch: break ; finally
rank: 966
score: 97.16140747070312
patch: type = ;
rank: 966
score: 97.10934448242188
patch: throw list ;
rank: 966
score: 96.4906514485677
patch: case )
rank: 966
score: 96.09761555989583
patch: cat .
rank: 966
score: 94.40882110595703
patch: iterator
rank: 967
score: 97.63215637207031
patch: ] break ;
rank: 967
score: 97.25369262695312
patch: break count ;
rank: 967
score: 96.47489420572917
patch: cb .
rank: 967
score: 96.09215291341145
patch: socket .
rank: 967
score: 94.38667297363281
patch: offset
rank: 968
score: 97.62848663330078
patch: catch null {
rank: 968
score: 97.25614929199219
patch: ? break ;
rank: 968
score: 97.25309753417969
patch: Band break ;
rank: 968
score: 97.09596252441406
patch: block . }
rank: 968
score: 96.4612325032552
patch: Util .
rank: 968
score: 96.08950805664062
patch: operation .
rank: 968
score: 94.37197875976562
patch: count
rank: 969
score: 97.62154388427734
patch: index break ;
rank: 969
score: 97.25550842285156
patch: Object break ;
rank: 969
score: 97.24099731445312
patch: count -- ;
rank: 969
score: 97.1554946899414
patch: target ; }
rank: 969
score: 97.09123229980469
patch: logger . {
rank: 969
score: 96.45027669270833
patch: Scheduler .
rank: 969
score: 96.17063395182292
patch: break ref
rank: 969
score: 94.37037658691406
patch: *
rank: 970
score: 97.61744689941406
patch: void break ;
rank: 970
score: 97.22898864746094
patch: break diff ;
rank: 970
score: 97.15316009521484
patch: break = ;
rank: 970
score: 97.07742309570312
patch: for ( Node
rank: 970
score: 96.14884440104167
patch: return true
rank: 970
score: 94.35514068603516
patch: token
rank: 971
score: 97.60265350341797
patch: ++ finally ;
rank: 971
score: 97.19480895996094
patch: Unit break ;
rank: 971
score: 97.14897918701172
patch: value = ;
rank: 971
score: 96.43784586588542
patch: VM :
rank: 971
score: 96.06637573242188
patch: so ;
rank: 971
score: 94.35093688964844
patch: ruby
rank: 972
score: 97.59711456298828
patch: Token break ;
rank: 972
score: 97.22041320800781
patch: || break ;
rank: 972
score: 97.1466064453125
patch: answer = ;
rank: 972
score: 97.05252075195312
patch: return count ;
rank: 972
score: 97.01708984375
patch: for ( ;
rank: 972
score: 96.43133544921875
patch: v {
rank: 972
score: 96.11140950520833
patch: break &
rank: 972
score: 96.06381225585938
patch: node .
rank: 972
score: 94.32969665527344
patch: right
rank: 973
score: 97.58226013183594
patch: Declaration break ;
rank: 973
score: 97.18706512451172
patch: break index ;
rank: 973
score: 97.1383056640625
patch: resolved = ;
rank: 973
score: 96.4300537109375
patch: callback .
rank: 973
score: 94.32274627685547
patch: parser
rank: 974
score: 97.57823181152344
patch: Val break ;
rank: 974
score: 97.17263793945312
patch: index ++ ;
rank: 974
score: 97.13592529296875
patch: state = ;
rank: 974
score: 97.02782440185547
patch: return size ;
rank: 974
score: 96.4270528157552
patch: control .
rank: 974
score: 96.05216471354167
patch: dialog .
rank: 974
score: 94.30781555175781
patch: LOG
rank: 975
score: 97.56383514404297
patch: -- finally ;
rank: 975
score: 97.19295501708984
patch: { else {
rank: 975
score: 97.14453125
patch: break target ;
rank: 975
score: 96.42191569010417
patch: service .
rank: 975
score: 96.04866536458333
patch: layout .
rank: 975
score: 96.03012084960938
patch: true _
rank: 975
score: 94.30049133300781
patch: out
rank: 976
score: 97.56133270263672
patch: start break ;
rank: 976
score: 97.18536376953125
patch: } * ;
rank: 976
score: 97.14299011230469
patch: break compare ;
rank: 976
score: 97.12938690185547
patch: val = ;
rank: 976
score: 96.04097493489583
patch: owner .
rank: 976
score: 96.0070292154948
patch: throw $NUMBER$
rank: 976
score: 94.29763793945312
patch: buffer
rank: 977
score: 97.55609130859375
patch: break { ;
rank: 977
score: 97.13665771484375
patch: break validate ;
rank: 977
score: 97.11526489257812
patch: ret = ;
rank: 977
score: 96.99354553222656
patch: throw FALSE ;
rank: 977
score: 95.96902465820312
patch: break NAME
rank: 977
score: 94.29534912109375
patch: retval
rank: 978
score: 97.13917541503906
patch: = break ;
rank: 978
score: 96.98804473876953
patch: throw line ;
rank: 978
score: 96.39349365234375
patch: Kit .
rank: 978
score: 96.026611328125
patch: sender .
rank: 978
score: 95.968505859375
patch: break MAX
rank: 978
score: 94.29301452636719
patch: left
rank: 979
score: 97.52727508544922
patch: char break ;
rank: 979
score: 97.12892150878906
patch: break mode ;
rank: 979
score: 97.10734558105469
patch: block = ;
rank: 979
score: 97.0929946899414
patch: } continue ;
rank: 979
score: 96.39098103841145
patch: classes .
rank: 979
score: 96.02626546223958
patch: here .
rank: 979
score: 95.96612548828125
patch: break $NUMBER$
rank: 979
score: 94.26240539550781
patch: res
rank: 980
score: 97.50446319580078
patch: Expr break ;
rank: 980
score: 97.12547302246094
patch: loop * /
rank: 980
score: 97.08824157714844
patch: return type ;
rank: 980
score: 96.98360443115234
patch: throw index ;
rank: 980
score: 96.02413940429688
patch: pe .
rank: 980
score: 95.95186360677083
patch: z _
rank: 980
score: 94.25939178466797
patch: prev
rank: 981
score: 97.11722564697266
patch: break check ;
rank: 981
score: 97.09733581542969
patch: cmd = ;
rank: 981
score: 96.97903442382812
patch: throw max ;
rank: 981
score: 96.38374837239583
patch: container .
rank: 981
score: 96.02280680338542
patch: Asserts .
rank: 981
score: 94.2528076171875
patch: runtime
rank: 982
score: 97.11717224121094
patch: break parent ;
rank: 982
score: 97.0936508178711
patch: |= ; }
rank: 982
score: 97.08595275878906
patch: break ; do
rank: 982
score: 96.38270060221355
patch: pool .
rank: 982
score: 96.02193196614583
patch: lock ;
rank: 982
score: 95.92960611979167
patch: t _
rank: 982
score: 94.25028228759766
patch: String
rank: 983
score: 97.09344482421875
patch: case ; }
rank: 983
score: 97.08412170410156
patch: && break ;
rank: 983
score: 96.38104248046875
patch: target {
rank: 983
score: 96.01577758789062
patch: ps .
rank: 983
score: 95.9260965983073
patch: break -
rank: 983
score: 94.19966125488281
patch: index
rank: 984
score: 97.08444213867188
patch: flags ++ ;
rank: 984
score: 97.08390808105469
patch: } catch ;
rank: 984
score: 96.01296997070312
patch: h .
rank: 984
score: 95.9050801595052
patch: return else
rank: 984
score: 94.19879150390625
patch: t
rank: 985
score: 97.46204376220703
patch: j break ;
rank: 985
score: 97.07272338867188
patch: break ; default
rank: 985
score: 96.9171651204427
patch: final ;
rank: 985
score: 96.37125651041667
patch: metadata .
rank: 985
score: 96.00839233398438
patch: z .
rank: 985
score: 94.1741714477539
patch: symbol
rank: 986
score: 97.05964660644531
patch: add ; }
rank: 986
score: 96.37030029296875
patch: loop _
rank: 986
score: 96.00547281901042
patch: status ;
rank: 986
score: 94.16928100585938
patch: runnable
rank: 987
score: 97.43450927734375
patch: t break ;
rank: 987
score: 96.53133138020833
patch: block .
rank: 987
score: 95.99850463867188
patch: tmp .
rank: 987
score: 95.8832499186198
patch: break &&
rank: 987
score: 94.16307067871094
patch: expr
rank: 988
score: 97.4325942993164
patch: catch ) ;
rank: 988
score: 96.69619750976562
patch: match ;
rank: 988
score: 95.8828125
patch: break 1
rank: 988
score: 94.15785217285156
patch: protected
rank: 989
score: 96.63871256510417
patch: check ;
rank: 989
score: 96.54250081380208
patch: switch ;
rank: 989
score: 96.36001586914062
patch: params .
rank: 989
score: 96.34115600585938
patch: } finally
rank: 989
score: 95.87591552734375
patch: retval _
rank: 989
score: 95.61817932128906
patch: true
rank: 989
score: 94.1373062133789
patch: Logger
rank: 990
score: 97.42894744873047
patch: synchronized false ;
rank: 990
score: 96.35975138346355
patch: cached .
rank: 990
score: 94.12815856933594
patch: message
rank: 991
score: 96.35609944661458
patch: callbacks .
rank: 991
score: 95.869384765625
patch: pos _
rank: 991
score: 94.94783020019531
patch: false
rank: 991
score: 94.12605285644531
patch: minor
rank: 992
score: 96.06416829427083
patch: Reference <
rank: 992
score: 95.86918131510417
patch: return NOT
rank: 992
score: 94.88517761230469
patch: _
rank: 992
score: 94.11862182617188
patch: @
rank: 993
score: 96.23105875651042
patch: { {
rank: 993
score: 94.11743927001953
patch: modified
rank: 994
score: 96.69092814127605
patch: / else
rank: 994
score: 96.02481079101562
patch: Function <
rank: 994
score: 94.35974884033203
patch: ++
rank: 994
score: 94.10246276855469
patch: Assert
rank: 995
score: 96.2681172688802
patch: add ;
rank: 995
score: 96.2633056640625
patch: http :
rank: 995
score: 94.97329711914062
patch: log
rank: 995
score: 94.30642700195312
patch: ,
rank: 995
score: 94.08841705322266
patch: target
rank: 996
score: 96.263427734375
patch: set ;
rank: 996
score: 94.94912719726562
patch: :
rank: 996
score: 94.30084228515625
patch: Writer
rank: 996
score: 94.07034301757812
patch: name
rank: 997
score: 96.21461995442708
patch: ref ;
rank: 997
score: 96.2124532063802
patch: attach ;
rank: 997
score: 94.09048461914062
patch: !
rank: 997
score: 94.05842590332031
patch: resolved
rank: 998
score: 94.81661224365234
patch: case
rank: 998
score: 94.15693664550781
patch: null
rank: 998
score: 94.05730438232422
patch: status
rank: 999
score: 96.18646240234375
patch: source ;
rank: 999
score: 96.1049296061198
patch: v ;
rank: 999
score: 94.05341339111328
patch: timer
rank: 999
score: 93.99588012695312
patch: --
rank: 999
score: 93.97200012207031
patch: Block
rank: 999
score: 93.75332641601562
patch: ONE
rank: 1000
score: 96.10287475585938
patch: ++ ;
rank: 1000
score: 94.03475952148438
patch: content
rank: 1000
score: 93.98260498046875
patch: xff
rank: 1000
score: 93.62962341308594
patch: continue
