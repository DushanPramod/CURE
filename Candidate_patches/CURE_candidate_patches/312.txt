rank: 1
score: 99.8582255045573
patch: return 0 . $NUMBER$ * exp ( - x ) ;
rank: 1
score: 99.82496995192308
patch: return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 2
score: 99.7191495028409
patch: return 0 . $NUMBER$ * exp ( x ) ;
rank: 3
score: 99.7667948404948
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 3
score: 99.72306002103366
patch: return - 1 . $NUMBER$ * exp ( - x ) ;
rank: 3
score: 99.6556396484375
patch: return 0 . 0 * exp ( - x ) ;
rank: 3
score: 99.64195760091145
patch: return - 0 . $NUMBER$ * exp ( x ) ;
rank: 4
score: 99.64253743489583
patch: return 0 . $NUMBER$ + exp ( - x ) ;
rank: 4
score: 99.56813401442308
patch: return - 0 . 0 * exp ( - x ) ;
rank: 5
score: 99.53204815204327
patch: return 0 . $NUMBER$ * exp ( x , x ) ;
rank: 6
score: 99.65240478515625
patch: return - - 0 . $NUMBER$ * exp ( - x ) ;
rank: 6
score: 99.5960693359375
patch: return - 0 . $NUMBER$ + exp ( - x ) ;
rank: 6
score: 99.59499104817708
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 6
score: 99.58582652698864
patch: return 0 . 0 * exp ( x ) ;
rank: 6
score: 99.5225830078125
patch: return - 0 . $NUMBER$ * exp ( x , x ) ;
rank: 6
score: 99.433837890625
patch: return 1 . $NUMBER$ * exp ( - x ) ;
rank: 7
score: 99.63340407151442
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 7
score: 99.5895751953125
patch: return 0 * exp ( - x ) ;
rank: 7
score: 99.57051849365234
patch: return 0 . $NUMBER$ * exp ( x ) * exp ( x ) ;
rank: 7
score: 99.56609235491071
patch: return 0 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 7
score: 99.4237060546875
patch: return 0 . $NUMBER$ / exp ( - x ) ;
rank: 8
score: 99.60115872896634
patch: return - 1 . 0 * exp ( - x ) ;
rank: 8
score: 99.56282865084134
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 8
score: 99.49942016601562
patch: return 0 . 0 / exp ( - x ) ;
rank: 8
score: 99.48867361886161
patch: return x + 0 . $NUMBER$ * exp ( - x ) ;
rank: 8
score: 99.4225186434659
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 9
score: 99.6045654296875
patch: return $NUMBER$ * exp ( - x ) ;
rank: 9
score: 99.57659442608173
patch: return - 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 9
score: 99.55796595982143
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 9
score: 99.50253731863839
patch: return 0 . $NUMBER$ * exp ( x , - x ) ;
rank: 10
score: 99.57259114583333
patch: return 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 10
score: 99.49799053485577
patch: return - 0 . $NUMBER$ / exp ( - x ) ;
rank: 10
score: 99.46224772135416
patch: return - 0 . $NUMBER$ * exp ( - x - x ) ;
rank: 10
score: 99.41374860491071
patch: return - 0 . $NUMBER$ * exp ( - x ) ; }
rank: 11
score: 99.56343347886029
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( x ) ;
rank: 11
score: 99.54763997395834
patch: return - 0 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 11
score: 99.53235802283653
patch: return 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 11
score: 99.49341837565105
patch: return - 0 . 0 * exp ( x ) ;
rank: 12
score: 99.55984836154514
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( - x ) ;
rank: 12
score: 99.55843411959134
patch: return - 0 . 1 * exp ( - x ) ;
rank: 12
score: 99.4115741436298
patch: x = 0 . $NUMBER$ * exp ( - x ) ;
rank: 13
score: 99.55877685546875
patch: return - 0 . $NUMBER$ * exp ( - - x ) ;
rank: 13
score: 99.55620465959821
patch: return - - 1 . $NUMBER$ * exp ( - x ) ;
rank: 13
score: 99.53136393229167
patch: return - 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 13
score: 99.52021789550781
patch: return 0 . $NUMBER$ + 0 . $NUMBER$ * exp ( - x ) ;
rank: 13
score: 99.51858520507812
patch: return 0 . 1 * exp ( - x ) ;
rank: 13
score: 99.47415865384616
patch: return 0 . $NUMBER$ * exp ( - x ) ; }
rank: 13
score: 99.45775553385417
patch: return - 0 . $NUMBER$ * exp ( x , - x ) ;
rank: 14
score: 99.55121721540179
patch: return ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 14
score: 99.53134765625
patch: return 0 . $NUMBER$ * exp ( - x ) ; } else {
rank: 14
score: 99.52174207899306
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( - x ) ;
rank: 14
score: 99.5115497295673
patch: return - 0 . $NUMBER$ - exp ( - x ) ;
rank: 14
score: 99.46312537560097
patch: return - 0 . 0 / exp ( - x ) ;
rank: 14
score: 99.40447998046875
patch: return 0 . $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 15
score: 99.54754638671875
patch: return - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 15
score: 99.53468424479166
patch: return - 0 . $NUMBER$ * exp ( - x ) - x ;
rank: 15
score: 99.53011648995536
patch: return x - 0 . $NUMBER$ * exp ( - x ) ;
rank: 15
score: 99.51691436767578
patch: return 0 . $NUMBER$ : 0 . $NUMBER$ * exp ( - x ) ;
rank: 15
score: 99.516455078125
patch: return - 0 . $NUMBER$ * exp ( - x ) * x ;
rank: 15
score: 99.46678059895834
patch: return 0 . $NUMBER$ * exp ( x ) + 0 . $NUMBER$ ;
rank: 15
score: 99.46223958333333
patch: return 0 . 0 + exp ( - x ) ;
rank: 15
score: 99.40139973958334
patch: return 0 . $NUMBER$ * exp ( x , 0 . 0 ) ;
rank: 16
score: 99.54156963641827
patch: return 0 . $NUMBER$ * exp ( - - x ) ;
rank: 16
score: 99.53035481770833
patch: return - 1 . $NUMBER$ * exp ( x ) ;
rank: 16
score: 99.51523263113839
patch: return 0 . $NUMBER$ * exp ( - x ) * x ;
rank: 16
score: 99.50377478966347
patch: return - 1 . $NUMBER$ + exp ( - x ) ;
rank: 16
score: 99.4988037109375
patch: return 0 . $NUMBER$ * exp ( exp ( - x ) ) ;
rank: 16
score: 99.39932454427084
patch: return 0 . $NUMBER$ * exp ( x , 0 . $NUMBER$ ) ;
rank: 17
score: 99.49879039417614
patch: return 0 . $NUMBER$ + exp ( x ) ;
rank: 18
score: 99.5262451171875
patch: return $NUMBER$ . 0 * exp ( - x ) ;
rank: 18
score: 99.51491001674107
patch: return 0 . $NUMBER$ * exp ( - x ) - x ;
rank: 18
score: 99.51128680889423
patch: return - 0 . 0 * exp ( - 1 ) ;
rank: 18
score: 99.47991943359375
patch: return 0 . $NUMBER$ - exp ( - x ) ;
rank: 18
score: 99.4469463641827
patch: return 0 . 0 * exp ( x , x ) ;
rank: 18
score: 99.3771743774414
patch: return - 0 . $NUMBER$ * exp ( - x ) ; } else {
rank: 19
score: 99.50840759277344
patch: return - 0 . $NUMBER$ * exp ( - x , - x ) ;
rank: 19
score: 99.44328169389205
patch: return 0 . $NUMBER$ / exp ( x ) ;
rank: 19
score: 99.43819754464286
patch: return 0 . $NUMBER$ * exp ( - x - x ) ;
rank: 19
score: 99.43721829927884
patch: return - 0 . 0 + exp ( - x ) ;
rank: 20
score: 99.51930454799107
patch: return - 0 . $NUMBER$ * exp ( x - x ) ;
rank: 20
score: 99.5071533203125
patch: return - 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 20
score: 99.47626495361328
patch: return 0 . $NUMBER$ * exp ( exp ( x ) - x ) ;
rank: 20
score: 99.43693324497768
patch: return - - 0 . 0 * exp ( - x ) ;
rank: 21
score: 99.51213727678571
patch: return - 0 . $NUMBER$ * exp ( x + x ) ;
rank: 21
score: 99.50681559244792
patch: return 1 . 0 * exp ( - x ) ;
rank: 21
score: 99.4990234375
patch: return 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 21
score: 99.42633611505681
patch: return 0 . 0 / exp ( x ) ;
rank: 22
score: 99.36521911621094
patch: return - 0 . $NUMBER$ * exp ( x , 0 . 0 ) ;
rank: 23
score: 99.49663947610294
patch: return 0 . 0 * exp ( - x ) * exp ( x ) ;
rank: 23
score: 99.46950396369485
patch: return 0 * exp ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 23
score: 99.44886997767857
patch: return 0 . $NUMBER$ * exp ( - ( x ) ) ;
rank: 23
score: 99.35476684570312
patch: return - 0 . $NUMBER$ * exp ( x , 0 . $NUMBER$ ) ;
rank: 24
score: 99.49830729166666
patch: return - 0 . $NUMBER$ * exp ( - x ) + x ;
rank: 24
score: 99.4964599609375
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( x ) ;
rank: 24
score: 99.49180501302084
patch: return - 0 . $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 24
score: 99.41013997395834
patch: return - x + 0 . $NUMBER$ * exp ( - x ) ;
rank: 25
score: 99.49688720703125
patch: return - 0 . $NUMBER$ * exp ( - x ) + - x ;
rank: 25
score: 99.49633071001838
patch: return 0 . $NUMBER$ * exp ( x ) * exp ( - x ) ;
rank: 25
score: 99.48977661132812
patch: return - $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 25
score: 99.44796316964286
patch: return x - 0 . 0 * exp ( - x ) ;
rank: 25
score: 99.4268798828125
patch: return 1 . $NUMBER$ * exp ( x ) ;
rank: 26
score: 99.49429660373264
patch: return 0 . 0 * exp ( - x ) * exp ( - x ) ;
rank: 26
score: 99.48732212611607
patch: return - - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 27
score: 99.486669921875
patch: return - 0 . $NUMBER$ * exp ( - x + x ) ;
rank: 27
score: 99.45758819580078
patch: return 0 . $NUMBER$ + exp ( x ) * exp ( x ) ;
rank: 27
score: 99.41797892252605
patch: return 0 . $NUMBER$ * exp ( x ) ; }
rank: 27
score: 99.4162930575284
patch: return 0 . 0 + exp ( x ) ;
rank: 28
score: 99.48607526506696
patch: return 0 . $NUMBER$ * exp ( - x + x ) ;
rank: 28
score: 99.48260819284539
patch: return 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ * exp ( x ) ) ;
rank: 28
score: 99.4534912109375
patch: return 0 . $NUMBER$ * exp ( x + x ) ;
rank: 28
score: 99.44630784254808
patch: return x - 0 . $NUMBER$ * exp ( x ) ;
rank: 28
score: 99.34903658353366
patch: return 0 . $NUMBER$ * exp ( x - x ) ;
rank: 29
score: 99.49378204345703
patch: return 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ . $NUMBER$ ;
rank: 29
score: 99.48246256510417
patch: return 0 . 0 * exp ( - 1 ) ;
rank: 29
score: 99.41317749023438
patch: return new double [ $NUMBER$ ] ;
rank: 29
score: 99.40589488636364
patch: return 0 . 1 * exp ( x ) ;
rank: 29
score: 99.40029296875
patch: return - x - 0 . $NUMBER$ * exp ( - x ) ;
rank: 30
score: 99.48038976332721
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( ) ;
rank: 30
score: 99.47372671274039
patch: return - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 30
score: 99.45530482700893
patch: result = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 30
score: 99.45234680175781
patch: return 0 . $NUMBER$ ? 0 . $NUMBER$ * exp ( - x ) ;
rank: 30
score: 99.44162423270089
patch: return 0 . $NUMBER$ * exp ( x ) ; } else {
rank: 30
score: 99.40231323242188
patch: return - 0 . $NUMBER$ / exp ( x ) ;
rank: 30
score: 99.39869103064903
patch: result = 0 . $NUMBER$ * exp ( - x ) ;
rank: 30
score: 99.34821428571429
patch: return x - 1 . $NUMBER$ * exp ( - x ) ;
rank: 31
score: 99.48597935267857
patch: return - 0 . $NUMBER$ * exp ( - x ) ; ;
rank: 31
score: 99.4736572265625
patch: return 0 . - 0 . $NUMBER$ * exp ( - x ) ;
rank: 31
score: 99.44801330566406
patch: return 0 . $NUMBER$ * 0 . $NUMBER$ * exp ( - x ) ;
rank: 31
score: 99.44040934244792
patch: return 0 . 0 * exp ( - $NUMBER$ ) ;
rank: 31
score: 99.40352376302083
patch: return 0 . $NUMBER$ * exp ( x ) + 0 . 0 ;
rank: 31
score: 99.39736703725961
patch: return x + 0 . $NUMBER$ * exp ( x ) ;
rank: 32
score: 99.47770690917969
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( ) ;
rank: 32
score: 99.4402847290039
patch: return 0 . $NUMBER$ ; } if ( x > 0 . 0 ) {
rank: 33
score: 99.472900390625
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( x ) ;
rank: 33
score: 99.46712552584134
patch: return $NUMBER$ . $NUMBER$ * exp ( - - x ) ;
rank: 33
score: 99.4491958618164
patch: return - 0 . $NUMBER$ * exp ( exp ( - x ) ) ;
rank: 33
score: 99.44689069475446
patch: } return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 33
score: 99.39793043870192
patch: return - - 0 . $NUMBER$ * exp ( x ) ;
rank: 34
score: 99.4784686748798
patch: = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 34
score: 99.47196880139802
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 34
score: 99.44631958007812
patch: return 0 . $NUMBER$ * exp ( - x ) + 0 . $NUMBER$ ;
rank: 35
score: 99.472314453125
patch: return 0 . $NUMBER$ * exp ( - x , - x ) ;
rank: 35
score: 99.45930989583333
patch: return ( - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 35
score: 99.44198843149039
patch: } return 0 . $NUMBER$ * exp ( - x ) ;
rank: 35
score: 99.394970703125
patch: return 0 . $NUMBER$ * exp ( x ) : 0 . $NUMBER$ ;
rank: 35
score: 99.38160923549107
patch: return x > 0 . $NUMBER$ * exp ( - x ) ;
rank: 36
score: 99.4716796875
patch: return 0 . $NUMBER$ * exp ( - x ) + x ;
rank: 36
score: 99.46820068359375
patch: return - 0 . $NUMBER$ * exp ( - exp ( x ) ) ;
rank: 36
score: 99.43055725097656
patch: return 0 . $NUMBER$ * exp ( - 0 . 0 , x ) ;
rank: 36
score: 99.38013567243304
patch: return 0 - 0 . $NUMBER$ * exp ( - x ) ;
rank: 36
score: 99.3245849609375
patch: return $NUMBER$ . $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 37
score: 99.46720064603366
patch: return - 1 . 1 * exp ( - x ) ;
rank: 37
score: 99.44249616350446
patch: return 0 + 0 . $NUMBER$ * exp ( - x ) ;
rank: 37
score: 99.44151204427084
patch: return 0 * exp ( x ) * exp ( - x ) ;
rank: 37
score: 99.32220928485577
patch: return - 0 . $NUMBER$ * exp ( x ) ; }
rank: 38
score: 99.46713256835938
patch: return 0 * exp ( - x ) * exp ( - x ) ;
rank: 38
score: 99.4360580444336
patch: return 0 . 0 * exp ( x ) * exp ( x ) ;
rank: 38
score: 99.42934744698661
patch: return 0 . 0 * exp ( - 0 . 0 ) ;
rank: 39
score: 99.462646484375
patch: return 0 . $NUMBER$ * exp ( - x ) + - x ;
rank: 39
score: 99.43809599034927
patch: return - 0 . $NUMBER$ * exp ( - x ) - 0 . $NUMBER$ ;
rank: 39
score: 99.43590369591347
patch: return 0 . $NUMBER$ + exp ( - x ) ) ;
rank: 39
score: 99.37716238839286
patch: x = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 40
score: 99.46555582682292
patch: return 0 . 0 * exp ( - x ) / exp ( - x ) ;
rank: 40
score: 99.43413543701172
patch: return 0 . $NUMBER$ * exp ( exp ( x ) + x ) ;
rank: 40
score: 99.4253662109375
patch: return - 0 . $NUMBER$ * exp ( x ) ; } else {
rank: 40
score: 99.38489641462054
patch: return 0 . 0 * exp ( x , - x ) ;
rank: 40
score: 99.31775841346153
patch: return 0 . $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 41
score: 99.46459282769098
patch: return 0 ; } else { return 0 . $NUMBER$ * exp ( - x ) ;
rank: 41
score: 99.46167864118304
patch: return - 0 . $NUMBER$ * exp ( double ) - x ;
rank: 41
score: 99.43392181396484
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 - x ) ;
rank: 41
score: 99.31179809570312
patch: return $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 42
score: 99.4643490439967
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( - x ) ;
rank: 42
score: 99.42485700334821
patch: return 0 . 0 * exp ( - 0 . $NUMBER$ ) ;
rank: 42
score: 99.38827749399039
patch: return - $NUMBER$ . 0 * exp ( - x ) ;
rank: 42
score: 99.310546875
patch: x = $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 43
score: 99.464111328125
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( 0 ) ;
rank: 43
score: 99.42195638020833
patch: return - 0 . $NUMBER$ * exp ( - ( x ) ) ;
rank: 43
score: 99.38602120535714
patch: return 0 . 0 . $NUMBER$ * exp ( - x ) ;
rank: 43
score: 99.3765399639423
patch: return 0 . $NUMBER$ * exp ( x ) + x ;
rank: 44
score: 99.4608513327206
patch: return 0 ; } else { return 0 . $NUMBER$ * exp ( x ) ;
rank: 44
score: 99.45973307291666
patch: return - 0 . $NUMBER$ * exp ( - x , x ) ;
rank: 44
score: 99.44878278459821
patch: return - 0 . $NUMBER$ * exp ( - x ) ; else
rank: 44
score: 99.43301827566964
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 ) ;
rank: 44
score: 99.4295654296875
patch: return 0 . $NUMBER$ * exp ( exp ( x ) ) ;
rank: 45
score: 99.459716796875
patch: return - - - 0 . $NUMBER$ * exp ( - x ) ;
rank: 45
score: 99.4330078125
patch: } else { return 0 . $NUMBER$ * exp ( - x ) ;
rank: 45
score: 99.4281717936198
patch: return 0 . $NUMBER$ * exp ( x ) ) ;
rank: 46
score: 99.46036783854167
patch: return 0 . $NUMBER$ * exp ( - x ) . exp ( - x ) ;
rank: 46
score: 99.45943196614583
patch: = 0 . $NUMBER$ * exp ( - x ) ;
rank: 46
score: 99.43260282628677
patch: return 0 . $NUMBER$ * exp ( exp ( - x ) - x ) ;
rank: 46
score: 99.42671421595982
patch: return 0 * exp ( x ) * exp ( x ) ;
rank: 46
score: 99.418994140625
patch: return 0 . 0 * exp ( - x ) ; } else {
rank: 46
score: 99.36710611979167
patch: return 0 . $NUMBER$ * exp ( x , x - $NUMBER$ ) ;
rank: 46
score: 99.30545748197116
patch: return 0 . $NUMBER$ * exp ( x , 0 ) ;
rank: 47
score: 99.45979817708333
patch: return - 0 . 0 * exp ( - x ) * x ;
rank: 47
score: 99.45905303955078
patch: return 0 . $NUMBER$ * exp ( - x ) + 1 . $NUMBER$ ;
rank: 47
score: 99.43254089355469
patch: } else { return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 47
score: 99.42626190185547
patch: return 0 . $NUMBER$ : 1 . $NUMBER$ * exp ( - x ) ;
rank: 47
score: 99.38470928485577
patch: return 0 . 0 * exp ( - x ) ; }
rank: 48
score: 99.45812270220588
patch: return 0 . $NUMBER$ * exp ( x ) / exp ( - x ) ;
rank: 48
score: 99.44031700721153
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 48
score: 99.42408854166666
patch: return $NUMBER$ * exp ( x ) * exp ( - x ) ;
rank: 48
score: 99.40804850260416
patch: return - 1 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 48
score: 99.37246469350961
patch: return 0 . $NUMBER$ / exp ( x , x ) ;
rank: 48
score: 99.36630045572916
patch: return 0 . $NUMBER$ * exp ( x , x , x ) ;
rank: 49
score: 99.45401204427084
patch: return - 0 . 0 * exp ( - x ) / $NUMBER$ ;
rank: 49
score: 99.4395263671875
patch: return - 0 . $NUMBER$ * exp ( exp ( x ) ) ;
rank: 49
score: 99.43073586856617
patch: return - 0 . $NUMBER$ + 0 . $NUMBER$ * exp ( - x ) ;
rank: 49
score: 99.36555698939732
patch: return x == 0 . $NUMBER$ * exp ( - x ) ;
rank: 50
score: 99.45377974076705
patch: return - 0 . $NUMBER$ * exp ( ) ;
rank: 50
score: 99.43872884114583
patch: return - 0 . $NUMBER$ * $NUMBER$ * exp ( - x ) ;
rank: 50
score: 99.421435546875
patch: return 0 . $NUMBER$ : 0 . $NUMBER$ * exp ( x ) ;
rank: 50
score: 99.30304361979167
patch: return $NUMBER$ . $NUMBER$ * exp ( x , 0 . 0 ) ;
rank: 51
score: 99.43818359375
patch: return - 0 . $NUMBER$ * exp ( x + - x ) ;
rank: 51
score: 99.42673165457589
patch: return 0 = 0 . $NUMBER$ * exp ( - x ) ;
rank: 51
score: 99.42124430338542
patch: return 0 * exp ( x ) ;
rank: 51
score: 99.40570475260417
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; } else {
rank: 52
score: 99.45296223958333
patch: return - 0 . $NUMBER$ * exp ( - x ) * $NUMBER$ ;
rank: 52
score: 99.447314453125
patch: return - 0 . $NUMBER$ * this . exp ( - x ) ;
rank: 52
score: 99.43629673549107
patch: return 0 . $NUMBER$ * $NUMBER$ * exp ( - x ) ;
rank: 52
score: 99.4047382061298
patch: return - 1 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 52
score: 99.37713153545673
patch: return - 0 . 0 * exp ( - $NUMBER$ ) ;
rank: 52
score: 99.36622111002605
patch: return 0 . 0 , exp ( - x ) ;
rank: 53
score: 99.425537109375
patch: return 0 . $NUMBER$ 0 * exp ( - x ) ;
rank: 53
score: 99.37544468470982
patch: return 0 . 0 * exp ( - x ) - x ;
rank: 54
score: 99.43441336495536
patch: return - 0 . $NUMBER$ * - exp ( - x ) ;
rank: 54
score: 99.42552274816177
patch: return 0 . $NUMBER$ * exp ( x ) - exp ( - x ) ;
rank: 54
score: 99.419677734375
patch: return exp ( - x ) ;
rank: 54
score: 99.29690987723214
patch: return 0 . 1 . $NUMBER$ * exp ( - x ) ;
rank: 55
score: 99.45216471354166
patch: return 0 . $NUMBER$ * exp ( - exp ( x ) ) ;
rank: 55
score: 99.4408428485577
patch: return - 1 . $NUMBER$ / exp ( - x ) ;
rank: 55
score: 99.43398813100961
patch: return ( 0 . $NUMBER$ * exp ( x ) ) ;
rank: 55
score: 99.4168472290039
patch: return 0 . $NUMBER$ * exp ( x ) - exp ( x ) ;
rank: 55
score: 99.36229112413194
patch: return exp ( x , x ) ;
rank: 55
score: 99.35406494140625
patch: return x - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 56
score: 99.45097081801471
patch: return 0 . $NUMBER$ * exp ( - x ) / ( - x ) ;
rank: 56
score: 99.43353271484375
patch: return 0 . $NUMBER$ * 0 * exp ( - x ) ;
rank: 56
score: 99.42477651742789
patch: return 0 . $NUMBER$ * exp ( x ) - x ;
rank: 56
score: 99.2957275390625
patch: return $NUMBER$ . $NUMBER$ * exp ( x , 0 . $NUMBER$ ) ;
rank: 57
score: 99.44814453125
patch: return 0 . $NUMBER$ * exp ( ) ;
rank: 57
score: 99.39501953125
patch: return 0 . $NUMBER$ ; } if ( x > 0 . $NUMBER$ ) {
rank: 57
score: 99.3534423828125
patch: return - x - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 57
score: 99.35113525390625
patch: return 0 . $NUMBER$ * exp ( x , x ) ; }
rank: 58
score: 99.44631060431985
patch: return 0 . $NUMBER$ * exp ( - x ) exp ( - x ) ;
rank: 58
score: 99.43260091145834
patch: return $NUMBER$ . $NUMBER$ * exp ( exp ( - x ) ) ;
rank: 58
score: 99.37024739583333
patch: return 0 . 0 * exp ( x , 0 . 0 ) ;
rank: 58
score: 99.35273960658482
patch: return 0 . $NUMBER$ * exp ( - x , x ) ;
rank: 59
score: 99.44628188189338
patch: return 0 . $NUMBER$ * exp ( - 1 ) * exp ( x ) ;
rank: 59
score: 99.41801183363971
patch: return - 0 . $NUMBER$ * exp ( - x ) / 0 . $NUMBER$ ;
rank: 59
score: 99.40904134114584
patch: return 0 . $NUMBER$ + 0 . $NUMBER$ * exp ( x ) ;
rank: 59
score: 99.39205169677734
patch: return x - 0 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 59
score: 99.369873046875
patch: return 0 . 0 + 0 . $NUMBER$ * exp ( - x ) ;
rank: 60
score: 99.44580950055804
patch: return 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ ) ;
rank: 60
score: 99.43091692243304
patch: return - 0 . $NUMBER$ * exp ( x * x ) ;
rank: 60
score: 99.39202473958333
patch: return - 1 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 60
score: 99.36949920654297
patch: return 0 . $NUMBER$ * exp ( - x ) ; negate = true ;
rank: 60
score: 99.35
patch: return - 0 . $NUMBER$ * exp ( - x - $NUMBER$ ) ;
rank: 60
score: 99.3484375
patch: return 0 . 0 * exp ( x ) + 0 . $NUMBER$ ;
rank: 61
score: 99.44344289679276
patch: return 0 . $NUMBER$ * exp ( x ) . $NUMBER$ * exp ( - x ) ;
rank: 61
score: 99.43129069010416
patch: return - 0 . $NUMBER$ * exp ( - - - x ) ;
rank: 61
score: 99.40514264787946
patch: return $NUMBER$ * exp ( x ) * exp ( x ) ;
rank: 61
score: 99.39111328125
patch: return - 0 . 0 * exp ( - 0 . 0 ) ;
rank: 61
score: 99.3690185546875
patch: return - 0 . 0 / exp ( x ) ;
rank: 61
score: 99.28770094651442
patch: x = 1 . $NUMBER$ * exp ( - x ) ;
rank: 62
score: 99.44208984375
patch: return - 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ ) ;
rank: 62
score: 99.43011005108173
patch: return 0 . $NUMBER$ * exp ( - x ) ; else
rank: 62
score: 99.40314127604167
patch: return exp ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 62
score: 99.36768450055804
patch: return x + 0 . 0 * exp ( - x ) ;
rank: 62
score: 99.34715053013393
patch: return - 0 . $NUMBER$ * exp ( x ) + x ;
rank: 63
score: 99.44183708639706
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( $NUMBER$ ) ;
rank: 63
score: 99.430078125
patch: return - ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 63
score: 99.41295668658088
patch: return - 0 . $NUMBER$ * exp ( - x ) - 0 . 0 ;
rank: 63
score: 99.38896179199219
patch: return 0 . $NUMBER$ ; } if ( x < 0 . 0 ) {
rank: 63
score: 99.36742292131696
patch: return - 0 . 0 * exp ( - x ) ; }
rank: 63
score: 99.28725961538461
patch: return 0 . $NUMBER$ * exp ( x - $NUMBER$ ) ;
rank: 64
score: 99.44035993303571
patch: return 0 . $NUMBER$ * exp ( - x ) * $NUMBER$ ;
rank: 64
score: 99.42581612723214
patch: return - - 1 . 0 * exp ( - x ) ;
rank: 64
score: 99.387939453125
patch: return x - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 64
score: 99.36660330636161
patch: return - - 0 . $NUMBER$ / exp ( - x ) ;
rank: 64
score: 99.34468296595982
patch: return x + 1 . $NUMBER$ * exp ( - x ) ;
rank: 64
score: 99.34442138671875
patch: return 0 . $NUMBER$ , exp ( - x ) ;
rank: 65
score: 99.440185546875
patch: return 0 . $NUMBER$ * exp ( - ( x - x ) ) ;
rank: 65
score: 99.42542442908653
patch: return 0 . $NUMBER$ * exp ( - x ) ; ;
rank: 65
score: 99.41226900540866
patch: return - 1 . $NUMBER$ - exp ( - x ) ;
rank: 65
score: 99.40235392252605
patch: return $NUMBER$ . $NUMBER$ + exp ( - x ) ;
rank: 65
score: 99.36623128255208
patch: return 0 . 0 - exp ( - x ) ;
rank: 65
score: 99.34429524739583
patch: return x . - 0 . $NUMBER$ * exp ( - x ) ;
rank: 65
score: 99.34400285993304
patch: return 0 . $NUMBER$ * exp ( - x ) : x ;
rank: 66
score: 99.439697265625
patch: return 0 . 0 * exp ( - x ) * x ;
rank: 66
score: 99.42815290178571
patch: return $NUMBER$ * 0 . $NUMBER$ * exp ( - x ) ;
rank: 66
score: 99.42527669270834
patch: return - 0 . $NUMBER$ * exp ( - x * x ) ;
rank: 66
score: 99.41028594970703
patch: return - 0 . $NUMBER$ * exp ( 0 . $NUMBER$ - x ) ;
rank: 66
score: 99.3995869954427
patch: return 0 . $NUMBER$ | exp ( - x ) ;
rank: 66
score: 99.36483328683036
patch: return 0 . 0 * exp ( - x + x ) ;
rank: 67
score: 99.4373779296875
patch: return 0 * exp ( - x ) * exp ( x ) ;
rank: 67
score: 99.34396798270089
patch: return x < 0 . $NUMBER$ * exp ( - x ) ;
rank: 68
score: 99.43677475873162
patch: return 0 . 0 * exp ( - x ) / exp ( x ) ;
rank: 68
score: 99.42622593470982
patch: return 0 . $NUMBER$ * this . exp ( - x ) ;
rank: 68
score: 99.40840911865234
patch: return 0 . $NUMBER$ * exp ( - x ) / 0 . $NUMBER$ ;
rank: 68
score: 99.39827728271484
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) * exp ( x ) ;
rank: 68
score: 99.34186662946429
patch: return - 0 . $NUMBER$ * exp ( x - $NUMBER$ ) ;
rank: 68
score: 99.33504813058036
patch: return - 0 . 0 * exp ( x , x ) ;
rank: 69
score: 99.42576246995192
patch: return - 0 . $NUMBER$ * max ( - x ) ;
rank: 69
score: 99.416357421875
patch: return - 0 . 0 * exp ( - x ) - x ;
rank: 69
score: 99.40801532451923
patch: return - 0 . 0 - exp ( - x ) ;
rank: 69
score: 99.38170572916667
patch: return - 0 . $NUMBER$ ; } if ( x == 0 ) {
rank: 69
score: 99.36123657226562
patch: return - 0 . $NUMBER$ + exp ( x ) ;
rank: 69
score: 99.34078776041666
patch: return - 0 . $NUMBER$ * exp ( - x ) ; break ;
rank: 69
score: 99.333251953125
patch: return new 0 . $NUMBER$ * exp ( - x ) ;
rank: 70
score: 99.43497960707721
patch: return - 0 . $NUMBER$ * exp ( - x ) / exp ( ) ;
rank: 70
score: 99.42446463448661
patch: return - 0 . $NUMBER$ * exp ( - x ) ; /
rank: 70
score: 99.4152587890625
patch: return - 1 . $NUMBER$ * exp ( - x ) * x ;
rank: 70
score: 99.37930501302084
patch: return - 0 . $NUMBER$ * exp ( - 1 . 0 ) ;
rank: 70
score: 99.3391582782452
patch: x = 0 . 0 * exp ( - x ) ;
rank: 70
score: 99.33261108398438
patch: x = 0 . $NUMBER$ * exp ( x ) ;
rank: 70
score: 99.27942708333333
patch: return - 0 . $NUMBER$ * exp ( - x ) ; } }
rank: 71
score: 99.43463897705078
patch: return 0 . $NUMBER$ * exp ( - x ) * 0 . $NUMBER$ ;
rank: 71
score: 99.42431640625
patch: return - 0 . $NUMBER$ * - exp ( x ) ;
rank: 72
score: 99.43460243626645
patch: return - 0 . $NUMBER$ * exp ( - x ) / exp ( - x ) ;
rank: 72
score: 99.423974609375
patch: return 0 . $NUMBER$ * exp ( - x ) * - x ;
rank: 72
score: 99.41090745192308
patch: return 0 . $NUMBER$ * exp ( double ) - x ;
rank: 72
score: 99.37916564941406
patch: return 0 . $NUMBER$ * exp ( - ( 0 . 0 ) ) ;
rank: 72
score: 99.35718536376953
patch: return 0 . 0 * exp ( - x ) ; negate = true ;
rank: 72
score: 99.27725982666016
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ , x ) ;
rank: 73
score: 99.43284696691177
patch: return 0 ; } return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 73
score: 99.4215576171875
patch: return 0 . $NUMBER$ * exp ( - x ) ; -- x ;
rank: 73
score: 99.33027866908482
patch: return 0 . $NUMBER$ * exp ( - x ) ; break ;
rank: 74
score: 99.43205823396382
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 74
score: 99.42035784040179
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) - x ;
rank: 74
score: 99.39210340711806
patch: return $NUMBER$ * exp ( x ) ;
rank: 74
score: 99.37659563337054
patch: return 0 . $NUMBER$ * exp ( - 1 . 0 ) ;
rank: 75
score: 99.40506184895834
patch: return - 0 . $NUMBER$ * exp ( - x + $NUMBER$ ) ;
rank: 75
score: 99.39183349609375
patch: return $NUMBER$ + exp ( - x ) ;
rank: 75
score: 99.37622884114583
patch: return - 0 . 0 * exp ( - 0 . $NUMBER$ ) ;
rank: 75
score: 99.3289794921875
patch: return - 0 . 1 * exp ( x ) ;
rank: 76
score: 99.42001778738839
patch: return 0 . $NUMBER$ * exp ( - x ) ; / /
rank: 76
score: 99.40364343979779
patch: return - 0 . $NUMBER$ * exp ( - x ) - 1 . $NUMBER$ ;
rank: 76
score: 99.39169311523438
patch: return 0 . $NUMBER$ | 0 . $NUMBER$ * exp ( - x ) ;
rank: 76
score: 99.32990373883929
patch: return x + $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 76
score: 99.32778494698661
patch: return 0 . 0 * exp ( - x - x ) ;
rank: 76
score: 99.27354079026442
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; }
rank: 77
score: 99.40283203125
patch: return - 0 . $NUMBER$ * exp ( 0 . $NUMBER$ ) ;
rank: 77
score: 99.39046478271484
patch: return 0 . $NUMBER$ * exp ( - x ) - 0 . $NUMBER$ ;
rank: 77
score: 99.35074288504464
patch: return 0 . 0 . 0 * exp ( - x ) ;
rank: 77
score: 99.32974947415866
patch: return $NUMBER$ . $NUMBER$ * exp ( x , x ) ;
rank: 77
score: 99.32760416666666
patch: return 0 . $NUMBER$ * exp ( 0 . 0 , x ) ;
rank: 77
score: 99.27065604073661
patch: temp = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 78
score: 99.40651041666666
patch: return - 0 . $NUMBER$ * exp ( - x ) + 1 ;
rank: 78
score: 99.35008748372395
patch: return - 0 . 0 + exp ( x ) ;
rank: 78
score: 99.32772391183036
patch: return 0 . $NUMBER$ * exp ( - x - $NUMBER$ ) ;
rank: 78
score: 99.32515462239583
patch: return 0 . $NUMBER$ * exp ( x ) : 0 . 0 ;
rank: 79
score: 99.4310302734375
patch: return - 1 . $NUMBER$ * exp ( - 1 ) ;
rank: 79
score: 99.4188720703125
patch: return - 0 . $NUMBER$ * 0 * exp ( - x ) ;
rank: 79
score: 99.40599714006696
patch: return - 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 79
score: 99.39968692555146
patch: return $NUMBER$ * exp ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 79
score: 99.38911946614583
patch: return 0 . $NUMBER$ + exp ( exp ( - x ) ) ;
rank: 79
score: 99.32390887920673
patch: return exp ( x , 0 . 0 , x ) ;
rank: 79
score: 99.26728057861328
patch: return - 0 . $NUMBER$ * exp ( x ) + 0 . $NUMBER$ ;
rank: 80
score: 99.4306640625
patch: return - 0 . $NUMBER$ * exp ( - x ) * 0 . $NUMBER$ ;
rank: 80
score: 99.41675618489583
patch: return - 0 . $NUMBER$ * exp ( - x ) ; / /
rank: 80
score: 99.3888168334961
patch: return 0 . $NUMBER$ : 0 . $NUMBER$ + exp ( - x ) ;
rank: 80
score: 99.34653727213542
patch: return 0 . 0 / exp ( - $NUMBER$ ) ;
rank: 80
score: 99.32256208147321
patch: return 0 . $NUMBER$ / exp ( x , - x ) ;
rank: 81
score: 99.429931640625
patch: return 0 . $NUMBER$ * exp ( - x ) * x * x ;
rank: 81
score: 99.41646030970982
patch: return x * 0 . $NUMBER$ * exp ( - x ) ;
rank: 81
score: 99.39683622472427
patch: return - 0 . $NUMBER$ * exp ( - x + 0 . 0 ) ;
rank: 81
score: 99.38764190673828
patch: return 0 . $NUMBER$ * exp ( int ) exp ( - x ) ;
rank: 81
score: 99.37071010044643
patch: return 0 . $NUMBER$ ; } if ( x == 0 ) {
rank: 82
score: 99.42971962376645
patch: return - 0 . $NUMBER$ * exp ( - x ) . exp ( - x ) ;
rank: 82
score: 99.40233561197917
patch: return - 1 . $NUMBER$ * exp ( - x ) + x ;
rank: 82
score: 99.39563927283653
patch: * return 0 . $NUMBER$ * exp ( - x ) ;
rank: 82
score: 99.36996895926339
patch: return 0 . $NUMBER$ / exp ( - 0 . 0 ) ;
rank: 82
score: 99.34300648082386
patch: return 1 . 0 * exp ( x ) ;
rank: 83
score: 99.42934283088235
patch: return - 0 . $NUMBER$ * exp ( - ( x - x ) ) ;
rank: 83
score: 99.40225423177084
patch: return - 1 . $NUMBER$ * exp ( - x ) - x ;
rank: 83
score: 99.36869049072266
patch: return 0 . $NUMBER$ + 0 . 0 * exp ( - x ) ;
rank: 83
score: 99.34263258713942
patch: return - 0 . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 83
score: 99.31919759114584
patch: return - 0 . $NUMBER$ * exp ( - x ) : x ;
rank: 83
score: 99.26357596261161
patch: return 1 . $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 84
score: 99.42921956380208
patch: return 0 . $NUMBER$ * exp ( - x ) . double CaMeL Value ( ) ;
rank: 84
score: 99.40120152064732
patch: return - 1 . $NUMBER$ * exp ( - - x ) ;
rank: 84
score: 99.39283854166666
patch: return 0 . 0 * exp ( exp ( - x ) ) ;
rank: 84
score: 99.36845179966518
patch: return 0 . $NUMBER$ + exp ( - 0 . 0 ) ;
rank: 84
score: 99.3420879657452
patch: return 0 . 0 * exp ( - - x ) ;
rank: 84
score: 99.31874302455357
patch: return 0 . $NUMBER$ * exp ( - x / $NUMBER$ ) ;
rank: 84
score: 99.26175362723214
patch: return - 0 . $NUMBER$ * exp ( x , 0 ) ;
rank: 85
score: 99.41325160435268
patch: return 0 . $NUMBER$ * exp ( - - - x ) ;
rank: 85
score: 99.26095145089286
patch: return 0 . $NUMBER$ * exp ( - x ) ; } }
rank: 86
score: 99.42758517795139
patch: return 0 . $NUMBER$ * exp ( - 1 ) * exp ( - x ) ;
rank: 86
score: 99.41214192708334
patch: return $NUMBER$ . - 0 . $NUMBER$ * exp ( - x ) ;
rank: 86
score: 99.36603546142578
patch: return x - 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 86
score: 99.31761067708334
patch: return 0 . $NUMBER$ * exp ( x , x - x ) ;
rank: 87
score: 99.42753601074219
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( ) ;
rank: 87
score: 99.39718191964286
patch: return - 1 . $NUMBER$ * exp ( - x ) ; }
rank: 87
score: 99.3643798828125
patch: return 0 . $NUMBER$ + exp ( - $NUMBER$ ) ;
rank: 87
score: 99.34046427408855
patch: return 0 . 1 / exp ( - x ) ;
rank: 87
score: 99.31757463727679
patch: return - x + 0 . $NUMBER$ * exp ( x ) ;
rank: 87
score: 99.25940704345703
patch: return 0 . $NUMBER$ * $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 88
score: 99.42648494944854
patch: return - 0 . 0 * exp ( - x ) * exp ( ) ;
rank: 88
score: 99.4110107421875
patch: return 0 . $NUMBER$ * max ( - x ) ;
rank: 88
score: 99.3614971454327
patch: return x - 0 . 0 * exp ( x ) ;
rank: 88
score: 99.31698404947916
patch: return x + - 0 . $NUMBER$ * exp ( - x ) ;
rank: 88
score: 99.316162109375
patch: return 1 . $NUMBER$ * exp ( x , x ) ;
rank: 88
score: 99.25855255126953
patch: return 0 . $NUMBER$ * 1 . $NUMBER$ * exp ( - x ) ;
rank: 89
score: 99.39508928571429
patch: return - 1 . $NUMBER$ * exp ( - x ) ; ;
rank: 89
score: 99.390478515625
patch: return - 0 . $NUMBER$ * exp ( - x + 1 ) ;
rank: 89
score: 99.38145955403645
patch: return 1 . $NUMBER$ + exp ( - x ) ;
rank: 89
score: 99.31508382161458
patch: return 0 . $NUMBER$ * new double [ $NUMBER$ ] ;
rank: 90
score: 99.42551783511513
patch: return 0 . 0 * exp ( - 1 . $NUMBER$ * exp ( x ) ) ;
rank: 90
score: 99.40987454927884
patch: return 0 . $NUMBER$ * exp ( - x ) ; /
rank: 90
score: 99.38131510416666
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ - x ) ;
rank: 90
score: 99.2571533203125
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; } else {
rank: 91
score: 99.42538248697916
patch: return - 0 . $NUMBER$ * exp ( - x ) / x ;
rank: 91
score: 99.4063232421875
patch: return - 0 . $NUMBER$ * exp ( x - - x ) ;
rank: 91
score: 99.38947610294117
patch: return - 0 . $NUMBER$ * exp ( - x ) + 0 . $NUMBER$ ;
rank: 91
score: 99.38050842285156
patch: return 0 . $NUMBER$ * exp ( x ) . exp ( x ) ;
rank: 91
score: 99.3591537475586
patch: return 0 . 0 ; } if ( x > 0 . 0 ) {
rank: 91
score: 99.33895670572916
patch: return - 0 . 0 * exp ( - x + x ) ;
rank: 92
score: 99.42461081112133
patch: return 0 . $NUMBER$ * exp ( x ) . double CaMeL Value ( ) ;
rank: 92
score: 99.40370396205357
patch: return $NUMBER$ . $NUMBER$ * exp ( - x + x ) ;
rank: 92
score: 99.3885986328125
patch: return 0 = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 92
score: 99.3582255045573
patch: return 0 . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 92
score: 99.3385479266827
patch: return - $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 92
score: 99.31187220982143
patch: return - x - 0 . $NUMBER$ * exp ( x ) ;
rank: 93
score: 99.42441231863839
patch: return 0 . 0 * exp ( - x ) / $NUMBER$ ;
rank: 93
score: 99.3996337890625
patch: return 0 . $NUMBER$ * exp ( - x ) - - x ;
rank: 93
score: 99.39374186197917
patch: return 0 . 0 * exp ( - x , - x ) ;
rank: 93
score: 99.38699776785714
patch: return - 0 . $NUMBER$ * exp ( x ) - x ;
rank: 93
score: 99.37997872488839
patch: return 0 . $NUMBER$ : $NUMBER$ * exp ( - x ) ;
rank: 93
score: 99.35787200927734
patch: return 0 . $NUMBER$ ; } if ( x == 0 . 0 ) {
rank: 93
score: 99.25508880615234
patch: return 0 . $NUMBER$ * exp ( x , 0 . 0 ) ; }
rank: 94
score: 99.42435948988971
patch: return Double . value CaMeL Of ( x ) . double CaMeL Value ( ) ;
rank: 94
score: 99.39845377604166
patch: return - 0 . $NUMBER$ * exp ( - x ) ; ) ;
rank: 94
score: 99.37837727864583
patch: return $NUMBER$ * exp ( - x ) * exp ( x ) ;
rank: 94
score: 99.35716959635417
patch: return - 0 . $NUMBER$ ; } if ( x < 0 ) {
rank: 94
score: 99.33669026692708
patch: return 1 . 0 / exp ( - x ) ;
rank: 94
score: 99.31212269176136
patch: return 0 . 0 , exp ( x ) ;
rank: 94
score: 99.3094970703125
patch: return x + 0 . $NUMBER$ * exp ( x , x ) ;
rank: 95
score: 99.3972900390625
patch: return 0 . $NUMBER$ * exp ( - x ) ; return x ;
rank: 95
score: 99.38661104090073
patch: return 0 * exp ( 0 . 0 * exp ( - x ) ) ;
rank: 95
score: 99.37806701660156
patch: return 0 . $NUMBER$ ? 1 . $NUMBER$ * exp ( - x ) ;
rank: 95
score: 99.35616048177083
patch: return 0 . $NUMBER$ * exp ( x ) ; negate = true ;
rank: 96
score: 99.42331414473684
patch: return 0 ; } else { return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 96
score: 99.39606182391827
patch: return 0 . $NUMBER$ * exp exp ( - x ) ;
rank: 96
score: 99.37711958451705
patch: return 0 . $NUMBER$ - exp ( x ) ;
rank: 96
score: 99.3103271484375
patch: return 0 . $NUMBER$ * exp ( x ) - 0 . $NUMBER$ ;
rank: 96
score: 99.25477701822916
patch: return 0 . $NUMBER$ / exp ( x , 0 . $NUMBER$ ) ;
rank: 97
score: 99.4228874655331
patch: return - 0 . $NUMBER$ * exp ( - x ) * x * x ;
rank: 97
score: 99.3958270733173
patch: return return 0 . $NUMBER$ * exp ( - x ) ;
rank: 97
score: 99.39084298270089
patch: return - - 0 . 1 * exp ( - x ) ;
rank: 97
score: 99.38406982421876
patch: return 0 + exp ( - x ) ;
rank: 97
score: 99.37654876708984
patch: return 1 . $NUMBER$ * exp ( x ) * exp ( x ) ;
rank: 97
score: 99.25438639322917
patch: return - x - 1 . $NUMBER$ * exp ( - x ) ;
rank: 98
score: 99.42229865579044
patch: return 0 . $NUMBER$ * exp ( - x ) * ( - x ) ;
rank: 98
score: 99.394384765625
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ * x ) ;
rank: 98
score: 99.35242638221153
patch: return - $NUMBER$ . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 99
score: 99.38793073381696
patch: return 0 . 0 * exp ( - x ) + x ;
rank: 99
score: 99.38167078354779
patch: return 0 . 0 * exp ( x ) * exp ( - x ) ;
rank: 99
score: 99.35172816685268
patch: return 0 . $NUMBER$ / exp ( - 0 . $NUMBER$ ) ;
rank: 99
score: 99.30691731770834
patch: return 0 . $NUMBER$ * 0 . $NUMBER$ * exp ( x ) ;
rank: 99
score: 99.30210774739584
patch: if ( x < 0 . 0 ) { x = - x ;
rank: 99
score: 99.25133338341347
patch: return / 0 . $NUMBER$ * exp ( - x ) ;
rank: 100
score: 99.39249093191964
patch: return - 0 . $NUMBER$ * exp ( x ) * x ;
rank: 100
score: 99.3815185546875
patch: return 0 + - 0 . $NUMBER$ * exp ( - x ) ;
rank: 100
score: 99.35067313058036
patch: return 0 . $NUMBER$ ; } if ( x > 0 ) {
rank: 100
score: 99.33544921875
patch: return 0 . $NUMBER$ . 0 * exp ( - x ) ;
rank: 100
score: 99.30608723958333
patch: return 0 . 0 * exp ( x ) + 0 . 0 ;
rank: 100
score: 99.30062161959134
patch: return 0 - 0 . $NUMBER$ * exp ( x ) ;
rank: 101
score: 99.42069244384766
patch: return 0 . $NUMBER$ * exp ( ) * exp ( - x ) ;
rank: 101
score: 99.3923095703125
patch: return - 0 . $NUMBER$ * exp ( 0 . - x ) ;
rank: 101
score: 99.38564453125
patch: return - 0 . $NUMBER$ * exp ( - x * $NUMBER$ ) ;
rank: 101
score: 99.38077545166016
patch: return 0 . $NUMBER$ * exp ( - exp ( - x ) ) ;
rank: 101
score: 99.37127216045673
patch: return 0 . $NUMBER$ ] * exp ( - x ) ;
rank: 101
score: 99.33543043870192
patch: return 0 . 0 * exp ( x - x ) ;
rank: 101
score: 99.3018798828125
patch: result = 0 . $NUMBER$ * exp ( x ) ;
rank: 101
score: 99.29943033854167
patch: if ( x > 0 . 0 ) { x = - x ;
rank: 101
score: 99.25108991350446
patch: return 0 . $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 102
score: 99.42062377929688
patch: return - 0 . 0 * exp ( - exp ( x ) ) ;
rank: 102
score: 99.38996233258929
patch: return - 0 . $NUMBER$ * exp exp ( - x ) ;
rank: 102
score: 99.38547770182292
patch: return - 1 . 0 * exp ( x ) ;
rank: 102
score: 99.37978891225961
patch: return - 1 . 0 + exp ( - x ) ;
rank: 102
score: 99.3707275390625
patch: return 0 . $NUMBER$ * exp ( - x + 0 . $NUMBER$ ) ;
rank: 102
score: 99.34773763020833
patch: return 0 . $NUMBER$ + exp ( - x ) ; } else {
rank: 103
score: 99.389306640625
patch: return 0 . $NUMBER$ * exp ( - x ) / - x ;
rank: 103
score: 99.38356119791666
patch: / * return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 103
score: 99.37978690011161
patch: return $NUMBER$ + 0 . $NUMBER$ * exp ( - x ) ;
rank: 103
score: 99.36963829627403
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ ) ;
rank: 103
score: 99.3432846069336
patch: return 0 . $NUMBER$ * exp ( - x ) + 0 . 0 ;
rank: 103
score: 99.33451080322266
patch: return 0 . 0 + 0 . 0 * exp ( - x ) ;
rank: 103
score: 99.2989971454327
patch: return x > 0 . $NUMBER$ * exp ( x ) ;
rank: 104
score: 99.41982852711396
patch: return - 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ . $NUMBER$ ;
rank: 104
score: 99.38902994791667
patch: return - 0 . $NUMBER$ * exp ( - 1 . x ) ;
rank: 104
score: 99.3826192220052
patch: = 0 . 0 * exp ( - x ) ;
rank: 104
score: 99.30084228515625
patch: return 0 . 0 * exp ( x ) ; }
rank: 104
score: 99.24872295673077
patch: return * 0 . $NUMBER$ * exp ( - x ) ;
rank: 105
score: 99.4197110262784
patch: return - 1 * exp ( - x ) ;
rank: 105
score: 99.3817608173077
patch: return 0 . $NUMBER$ * exp ( x * x ) ;
rank: 105
score: 99.37881673177084
patch: return - 0 . $NUMBER$ * exp ( - x ) - $NUMBER$ ;
rank: 105
score: 99.36898803710938
patch: return $NUMBER$ . $NUMBER$ + 0 . $NUMBER$ * exp ( - x ) ;
rank: 105
score: 99.341943359375
patch: return 0 . $NUMBER$ * exp ( - - 0 . 0 ) ;
rank: 105
score: 99.33443196614583
patch: return 1 . $NUMBER$ / exp ( - x ) ;
rank: 105
score: 99.30050893930289
patch: return 0 . 0 * exp ( x + x ) ;
rank: 105
score: 99.29868977864584
patch: x = x + 0 . $NUMBER$ * exp ( - x ) ;
rank: 106
score: 99.41958136307566
patch: return 0 . 0 * exp ( - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 106
score: 99.3809326171875
patch: return - 0 . 0 * exp ( - x ) + x ;
rank: 106
score: 99.33369663783482
patch: return - - 0 . 0 / exp ( - x ) ;
rank: 106
score: 99.2992412860577
patch: return 0 . 0 / exp ( x , x ) ;
rank: 106
score: 99.2474594116211
patch: return 0 . $NUMBER$ * exp ( x , 0 . $NUMBER$ ) ; }
rank: 107
score: 99.41946231617646
patch: return - 0 . $NUMBER$ * exp ( x ) * exp ( x ) ;
rank: 107
score: 99.38534981863839
patch: return - 0 . $NUMBER$ * exp ( - x ) ; *
rank: 107
score: 99.38087565104166
patch: return - 1 . $NUMBER$ * exp ( - x , x ) ;
rank: 107
score: 99.37840360753677
patch: return 0 . $NUMBER$ * exp 0 . $NUMBER$ * exp ( - x ) ;
rank: 107
score: 99.36826869419643
patch: return exp ( - x ) * exp ( - x ) ;
rank: 107
score: 99.34092494419643
patch: return 0 . $NUMBER$ ; } if ( x < 0 ) {
rank: 107
score: 99.333251953125
patch: return - - 0 . 0 * exp ( x ) ;
rank: 107
score: 99.29874093191964
patch: return new - 0 . $NUMBER$ * exp ( - x ) ;
rank: 107
score: 99.24673665364584
patch: return 0 . $NUMBER$ / exp ( x , 0 . 0 ) ;
rank: 108
score: 99.41840277777777
patch: return - 0 . 0 * exp ( - x ) * exp ( x ) ;
rank: 108
score: 99.37760103665866
patch: return 0 . 0 0 * exp ( - x ) ;
rank: 108
score: 99.36518859863281
patch: return exp ( - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 108
score: 99.34066569010416
patch: return - 0 . $NUMBER$ ; } if ( x > 0 ) {
rank: 108
score: 99.33061981201172
patch: return 0 . 0 * exp ( - 0 . 0 , x ) ;
rank: 108
score: 99.29278971354167
patch: return - 0 . 0 * exp ( - x - x ) ;
rank: 109
score: 99.38507952008929
patch: return 0 . $NUMBER$ * exp ( - x ) ; ) ;
rank: 109
score: 99.36509352463942
patch: return 0 . 0 * exp ( - x ) ) ;
rank: 110
score: 99.41800265842014
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( - 1 ) ;
rank: 110
score: 99.37645670572917
patch: return 0 . 0 * exp ( - x ) + - x ;
rank: 110
score: 99.36431884765625
patch: throw ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 110
score: 99.33988444010417
patch: return 1 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 110
score: 99.33047049386161
patch: return 0 . 0 / $NUMBER$ * exp ( - x ) ;
rank: 110
score: 99.28812662760417
patch: x = x - 0 . $NUMBER$ * exp ( - x ) ;
rank: 111
score: 99.41716851128473
patch: return - 0 . $NUMBER$ * exp ( - x ) / exp ( x ) ;
rank: 111
score: 99.37530876608456
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 + - x ) ;
rank: 111
score: 99.3394775390625
patch: return 1 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 111
score: 99.29622105189732
patch: return 0 . $NUMBER$ * exp ( - x ) : true ;
rank: 112
score: 99.41518040707237
patch: return 0 . $NUMBER$ ; } else { return 0 . $NUMBER$ * exp ( x ) ;
rank: 112
score: 99.37347005208333
patch: return - 0 . $NUMBER$ * exp ( double ) 0 . $NUMBER$ ;
rank: 112
score: 99.3636703491211
patch: return 0 . $NUMBER$ * exp ( * exp ( - x ) ) ;
rank: 112
score: 99.33817836216518
patch: return 0 . $NUMBER$ * exp ( - x ) ; } else
rank: 112
score: 99.24137369791667
patch: return 1 . $NUMBER$ * exp ( x , 0 . 0 ) ;
rank: 113
score: 99.38319498697916
patch: return 0 . $NUMBER$ * exp ( ( x - x ) ) ;
rank: 113
score: 99.37458352481617
patch: return - 0 . $NUMBER$ * exp ( - exp ( - x ) ) ;
rank: 113
score: 99.29345703125
patch: return 0 . $NUMBER$ * exp ( - x ) : - x ;
rank: 113
score: 99.28661295572917
patch: return - - 0 . $NUMBER$ * exp ( x , x ) ;
rank: 114
score: 99.41488444010416
patch: return 0 * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 114
score: 99.38192545572916
patch: return 0 . $NUMBER$ * exp ( - x ) ; ++ x ;
rank: 114
score: 99.37417423023896
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 - - x ) ;
rank: 114
score: 99.3267352764423
patch: return - 0 . 0 / exp ( - $NUMBER$ ) ;
rank: 114
score: 99.28636881510417
patch: return 0 . $NUMBER$ * exp ( x , x / $NUMBER$ ) ;
rank: 114
score: 99.23971354166666
patch: return - 0 . $NUMBER$ * exp ( - x ) . x ;
rank: 115
score: 99.41458468967014
patch: return 0 ; } else { return 0 . 0 * exp ( - x ) ;
rank: 115
score: 99.38024030412946
patch: return $NUMBER$ return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 115
score: 99.37331973805146
patch: return - 0 . $NUMBER$ * exp ( * exp ( - x ) ) ;
rank: 115
score: 99.36105782645089
patch: return 0 . $NUMBER$ - 0 * exp ( - x ) ;
rank: 115
score: 99.32568359375
patch: return - 0 . 0 * exp ( x - x ) ;
rank: 115
score: 99.2919452373798
patch: return 0 . $NUMBER$ * exp ( x ) : x ;
rank: 115
score: 99.23933919270833
patch: return 0 . $NUMBER$ * negate ( - x ) ;
rank: 116
score: 99.4144287109375
patch: return 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ * exp ( ) ) ;
rank: 116
score: 99.37305405560662
patch: return 0 . 0 * exp ( exp ( - x ) - x ) ;
rank: 116
score: 99.369775390625
patch: return - 0 . $NUMBER$ * exp ( - x ) + $NUMBER$ ;
rank: 116
score: 99.2913330078125
patch: return - 0 . $NUMBER$ * exp ( - x / $NUMBER$ ) ;
rank: 116
score: 99.28334263392857
patch: return ( - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 117
score: 99.37301870492789
patch: return - $NUMBER$ . $NUMBER$ + exp ( - x ) ;
rank: 117
score: 99.3695068359375
patch: return 0 . - 0 * exp ( - x ) ;
rank: 117
score: 99.33558756510416
patch: return - $NUMBER$ . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 117
score: 99.3252944946289
patch: return 0 . 0 * exp ( - x ) / $NUMBER$ . $NUMBER$ ;
rank: 117
score: 99.2364971454327
patch: return x - 1 . $NUMBER$ * exp ( x ) ;
rank: 118
score: 99.41365814208984
patch: return - 0 . $NUMBER$ * exp ( - x ) * - x ;
rank: 118
score: 99.3779296875
patch: throw - 0 . $NUMBER$ * exp ( - x ) ;
rank: 118
score: 99.33550262451172
patch: return 0 . $NUMBER$ ; } if ( x < 0 . $NUMBER$ ) {
rank: 118
score: 99.28896859975961
patch: return 0 . 1 * exp ( x , x ) ;
rank: 119
score: 99.41329795435855
patch: return 0 . $NUMBER$ * exp ( - 1 . 0 * exp ( x ) ) ;
rank: 119
score: 99.37668282645089
patch: return $NUMBER$ . $NUMBER$ * 0 * exp ( - x ) ;
rank: 119
score: 99.37245178222656
patch: return 0 * exp ( 0 . $NUMBER$ * exp ( x ) ) ;
rank: 119
score: 99.36904471261161
patch: return - 0 . 0 * exp ( - - x ) ;
rank: 119
score: 99.35850524902344
patch: return 0 . $NUMBER$ * exp ( ( - x ) + x ) ;
rank: 119
score: 99.33527018229167
patch: return - 0 . $NUMBER$ * exp ( - x ) ; } else
rank: 119
score: 99.32429722377232
patch: return x * 0 . 0 * exp ( - x ) ;
rank: 119
score: 99.28832194010417
patch: return - 0 . 0 * exp ( x , - x ) ;
rank: 119
score: 99.23514229910714
patch: return 0 . $NUMBER$ * exp ( - x ) . x ;
rank: 120
score: 99.41303453947368
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ * exp ( - x ) ;
rank: 120
score: 99.37626139322917
patch: return - 0 . $NUMBER$ * - exp ( x + x ) ;
rank: 120
score: 99.36875
patch: return - - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 120
score: 99.35736083984375
patch: return 0 . $NUMBER$ ? $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 120
score: 99.3349609375
patch: return 0 . $NUMBER$ * exp ( - x - 0 . 0 ) ;
rank: 120
score: 99.32424490792411
patch: return - - 0 . $NUMBER$ + exp ( - x ) ;
rank: 120
score: 99.28797325721153
patch: return 0 . $NUMBER$ * exp ( x ) ; break ;
rank: 120
score: 99.28196364182692
patch: return x == 0 . $NUMBER$ * exp ( x ) ;
rank: 121
score: 99.37620442708334
patch: return $NUMBER$ * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 121
score: 99.35674641927083
patch: return 0 . $NUMBER$ * exp ( - x ) - x ) ;
rank: 121
score: 99.28756713867188
patch: return exp ( x , - x ) ;
rank: 122
score: 99.28645833333333
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ , x ) ;
rank: 122
score: 99.28155517578125
patch: return x = 0 . $NUMBER$ * exp ( - x ) ;
rank: 122
score: 99.23473103841145
patch: exp ( x , 0 . 0 , x ) ;
rank: 123
score: 99.4113057454427
patch: return 0 * exp ( - x ) * x ;
rank: 123
score: 99.37493426983173
patch: return 0 . $NUMBER$ * - exp ( - x ) ;
rank: 123
score: 99.37054802389706
patch: return - 0 . $NUMBER$ * exp ( 0 . $NUMBER$ + - x ) ;
rank: 123
score: 99.3561503092448
patch: return 0 . $NUMBER$ * exp ( * x ) ;
rank: 123
score: 99.32373918805804
patch: { return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 123
score: 99.28618915264423
patch: return - 0 . $NUMBER$ * new double [ $NUMBER$ ] ;
rank: 124
score: 99.41047748766448
patch: return - 0 . 0 * exp ( - x ) * exp ( - x ) ;
rank: 124
score: 99.37485177176339
patch: return - $NUMBER$ . $NUMBER$ * exp ( - - x ) ;
rank: 124
score: 99.37031824448529
patch: return - 0 . $NUMBER$ * exp ( - x ) - 1 . 0 ;
rank: 124
score: 99.35556030273438
patch: return 0 . $NUMBER$ + exp ( - x ) + 0 . $NUMBER$ ;
rank: 124
score: 99.3328369140625
patch: return 0 . $NUMBER$ * exp ( exp ( - $NUMBER$ ) ) ;
rank: 124
score: 99.32342998798077
patch: { return 0 . $NUMBER$ * exp ( - x ) ;
rank: 124
score: 99.27958984375
patch: if ( x < 0 . $NUMBER$ ) { x = - x ;
rank: 124
score: 99.23301344651442
patch: return $NUMBER$ . $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 125
score: 99.37018181295956
patch: return - 0 . $NUMBER$ * exp ( exp ( x ) - x ) ;
rank: 125
score: 99.33232116699219
patch: return - 0 . $NUMBER$ * exp ( - - 0 . 0 ) ;
rank: 125
score: 99.28533466045673
patch: return + 0 . $NUMBER$ * exp ( - x ) ;
rank: 125
score: 99.23248697916667
patch: return 1 . $NUMBER$ * exp ( x , 0 . $NUMBER$ ) ;
rank: 126
score: 99.40986713610198
patch: return 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ * exp ( - x ) ;
rank: 126
score: 99.37002766927084
patch: return - 0 . $NUMBER$ * exp ( - x ) - 1 ;
rank: 126
score: 99.3655517578125
patch: return - - 0 . $NUMBER$ * exp ( - x ) ; }
rank: 126
score: 99.35519643930289
patch: return 0 . $NUMBER$ * exp ( x ) * x ;
rank: 126
score: 99.33218587239584
patch: return 0 . $NUMBER$ * exp ( - - 0 . $NUMBER$ ) ;
rank: 127
score: 99.40977647569444
patch: return 0 ; } else { return - 0 . $NUMBER$ * exp ( x ) ;
rank: 127
score: 99.36988022748162
patch: return - 0 . $NUMBER$ * exp ( - x ) / 0 . 0 ;
rank: 127
score: 99.33146449497768
patch: return x > 0 . 0 * exp ( - x ) ;
rank: 127
score: 99.28472028459821
patch: return 0 . $NUMBER$ * exp ( - x ) : 0 ;
rank: 127
score: 99.27665201822917
patch: if ( x > 0 . $NUMBER$ ) { x = - x ;
rank: 127
score: 99.23185591264205
patch: return $NUMBER$ . $NUMBER$ / exp ( x ) ;
rank: 128
score: 99.37105305989583
patch: return 0 . $NUMBER$ * exp ( - x ) ; / ) ;
rank: 128
score: 99.36945657169117
patch: return - 0 . $NUMBER$ * exp ( - x + 1 . 0 ) ;
rank: 128
score: 99.36489432198661
patch: return - 1 . $NUMBER$ * exp ( x + x ) ;
rank: 128
score: 99.33116803850446
patch: return 1 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 128
score: 99.31887817382812
patch: return 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ . 0 ;
rank: 128
score: 99.27600969587054
patch: return $NUMBER$ . $NUMBER$ * exp ( x , - x ) ;
rank: 129
score: 99.37100655691964
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) * x ;
rank: 129
score: 99.33059256417411
patch: return 0 . $NUMBER$ + exp ( - 0 . $NUMBER$ ) ;
rank: 129
score: 99.27550330528847
patch: result += 0 . $NUMBER$ * exp ( - x ) ;
rank: 130
score: 99.40872628348214
patch: return 0 . $NUMBER$ * exp ( - x ) / x ;
rank: 130
score: 99.37034505208334
patch: return ( - $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 130
score: 99.3691875751202
patch: return 0 . $NUMBER$ * exp ( 0 . 0 ) ;
rank: 130
score: 99.3643798828125
patch: return 0 . $NUMBER$ * exp ( - x * x ) ;
rank: 130
score: 99.2841796875
patch: return 0 . $NUMBER$ , exp ( x ) ;
rank: 131
score: 99.37021309988839
patch: return $NUMBER$ . $NUMBER$ * $NUMBER$ * exp ( - x ) ;
rank: 131
score: 99.36393229166667
patch: return - - - 1 . $NUMBER$ * exp ( - x ) ;
rank: 131
score: 99.32920619419643
patch: return ( 0 . $NUMBER$ - exp ( - x ) ) ;
rank: 131
score: 99.27492850167411
patch: return - 0 . $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 132
score: 99.40793026194854
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( 1 ) ;
rank: 132
score: 99.3685302734375
patch: return - 0 . $NUMBER$ * exp ( x ) - 0 . $NUMBER$ ;
rank: 132
score: 99.36370442708333
patch: return - 0 . $NUMBER$ * exp ( double ) ( x ) ;
rank: 132
score: 99.31435721261161
patch: return - - 0 . 0 + exp ( - x ) ;
rank: 132
score: 99.28362630208333
patch: return 0 . $NUMBER$ * exp ( x ) / 0 . $NUMBER$ ;
rank: 133
score: 99.40781537224265
patch: return 0 . $NUMBER$ * exp ( - x ) + exp ( x ) ;
rank: 133
score: 99.36281174879808
patch: return - - 1 . $NUMBER$ * exp ( x ) ;
rank: 133
score: 99.34824044363839
patch: return 0 . $NUMBER$ * exp ( - x ) ; * /
rank: 133
score: 99.28312174479167
patch: return new 0 . $NUMBER$ * exp ( x ) ;
rank: 133
score: 99.228369140625
patch: return - 0 - 0 . $NUMBER$ * exp ( - x ) ;
rank: 134
score: 99.40721130371094
patch: return 0 . $NUMBER$ * exp ( - x ) * / - x ;
rank: 134
score: 99.36924641927084
patch: return 0 . $NUMBER$ * exp ( - x + - x ) ;
rank: 134
score: 99.3683723000919
patch: return 0 . 0 * exp ( x ) - exp ( - x ) ;
rank: 134
score: 99.34807586669922
patch: return 0 . $NUMBER$ * exp ( double ) exp ( - x ) ;
rank: 134
score: 99.31387094350961
patch: return 0 . 0 * exp ( x ) - x ;
rank: 134
score: 99.27340494791666
patch: return - 0 . $NUMBER$ * exp ( x , - $NUMBER$ ) ;
rank: 135
score: 99.40670776367188
patch: return 0 . 0 * exp ( - x ) * exp ( ) ;
rank: 135
score: 99.36915001502403
patch: return 0 . $NUMBER$ * exp ( - x ) ; *
rank: 135
score: 99.36811828613281
patch: return - 0 . $NUMBER$ * exp ( x ) - 0 . 0 ;
rank: 135
score: 99.35862513950893
patch: return - 0 . - 0 * exp ( - x ) ;
rank: 135
score: 99.34767659505208
patch: return 0 . 1 + exp ( - x ) ;
rank: 135
score: 99.32511393229167
patch: return 0 . $NUMBER$ * exp ( - 0 . 0 ) ; }
rank: 135
score: 99.27322591145834
patch: return x - 0 . $NUMBER$ * exp ( x , x ) ;
rank: 136
score: 99.40626436121323
patch: return 0 . 0 * exp ( - x ) * exp ( 0 ) ;
rank: 136
score: 99.36895751953125
patch: return ( 0 . 0 * exp ( - x ) ) ;
rank: 136
score: 99.36778259277344
patch: return - 0 . - 0 . $NUMBER$ * exp ( - x ) ;
rank: 136
score: 99.34737396240234
patch: return 0 . $NUMBER$ - exp ( x ) * exp ( x ) ;
rank: 136
score: 99.32445526123047
patch: return - 0 . $NUMBER$ * exp ( - 0 . 0 ) ; }
rank: 137
score: 99.4056905110677
patch: return Double . $NUMBER$ * exp ( - x ) ;
rank: 137
score: 99.34613800048828
patch: return 0 . $NUMBER$ * exp ( - x ) - x + x ;
rank: 137
score: 99.31282552083333
patch: return - 0 . 0 . $NUMBER$ * exp ( - x ) ;
rank: 137
score: 99.28014322916667
patch: return 0 . $NUMBER$ * exp ( x ) + 1 . $NUMBER$ ;
rank: 137
score: 99.22596842447916
patch: return 0 . $NUMBER$ * . $NUMBER$ * exp ( - x ) ;
rank: 138
score: 99.40564682904412
patch: return - 0 . $NUMBER$ * exp ( ) * exp ( - x ) ;
rank: 138
score: 99.27964680989584
patch: return 0 . $NUMBER$ * exp ( x , - x ) ; }
rank: 138
score: 99.27021135602679
patch: return x > $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 139
score: 99.40553114149306
patch: return 0 * exp ( - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 139
score: 99.3667724609375
patch: return x * exp ( - x ) ;
rank: 139
score: 99.3658447265625
patch: return - 0 . $NUMBER$ * exp ( - x ) . 0 ;
rank: 139
score: 99.34526062011719
patch: return $NUMBER$ * exp ( - x ) * exp ( - x ) ;
rank: 139
score: 99.32242024739584
patch: return - $NUMBER$ . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 139
score: 99.31137520926339
patch: return - - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 139
score: 99.27852689302884
patch: return - 0 . $NUMBER$ * exp ( + x ) ;
rank: 140
score: 99.40429009331598
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ * exp ( ) ) ;
rank: 140
score: 99.36648763020834
patch: return - x * 0 . $NUMBER$ * exp ( - x ) ;
rank: 140
score: 99.36552734375
patch: return 0 . $NUMBER$ * exp ( 0 . 0 - x ) ;
rank: 140
score: 99.35723005022321
patch: return - 0 . 0 * exp ( - x ) ) ;
rank: 140
score: 99.31076049804688
patch: return $NUMBER$ . 0 / exp ( - x ) ;
rank: 141
score: 99.40352136948529
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( 0 ) ;
rank: 141
score: 99.36527797154018
patch: return 0 . $NUMBER$ * exp ( - x ) ; / ;
rank: 141
score: 99.36511948529412
patch: return 0 . $NUMBER$ * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 141
score: 99.35699462890625
patch: return - 0 . 0 * exp ( - x ) ; ;
rank: 141
score: 99.321240234375
patch: return 1 . $NUMBER$ * exp ( - x ) ; } else {
rank: 141
score: 99.3105239868164
patch: return - - 0 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 141
score: 99.26705729166666
patch: return - x + 0 . 0 * exp ( - x ) ;
rank: 141
score: 99.2218017578125
patch: x = 0 . $NUMBER$ * exp ( - x ) ; }
rank: 142
score: 99.40332749310662
patch: return - 0 . $NUMBER$ * exp ( - x ) / ( x ) ;
rank: 142
score: 99.36430807674633
patch: return - 0 . $NUMBER$ * exp ( - x + 0 . $NUMBER$ ) ;
rank: 142
score: 99.3417724609375
patch: return 0 . $NUMBER$ * exp ( x ) * 0 . $NUMBER$ ;
rank: 142
score: 99.2772686298077
patch: if ( x > 0 . 0 ) { return x ;
rank: 143
score: 99.35520717075893
patch: return - 1 . $NUMBER$ * exp ( x - x ) ;
rank: 143
score: 99.34173583984375
patch: return 0 . $NUMBER$ : $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 143
score: 99.3099365234375
patch: return $NUMBER$ . 0 * exp ( x ) ;
rank: 143
score: 99.27725423177084
patch: return - 0 . $NUMBER$ * exp ( - x ) : true ;
rank: 143
score: 99.2659442608173
patch: return - 0 . $NUMBER$ * negate ( - x ) ;
rank: 144
score: 99.40300641741071
patch: return 0 * 0 . $NUMBER$ * exp ( - x ) ;
rank: 144
score: 99.36212565104167
patch: return - - 0 . $NUMBER$ * exp ( - - x ) ;
rank: 144
score: 99.340478515625
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ + x ) ;
rank: 144
score: 99.31949055989584
patch: return - 0 . $NUMBER$ + exp ( - 0 . 0 ) ;
rank: 144
score: 99.309765625
patch: return - 0 . $NUMBER$ / exp ( - 0 . 0 ) ;
rank: 144
score: 99.27679036458333
patch: return - 0 . $NUMBER$ * exp ( x , x ) ; }
rank: 145
score: 99.40249633789062
patch: return 0 . $NUMBER$ * exp ( - x ) / ( x ) ;
rank: 145
score: 99.36349487304688
patch: return 0 . $NUMBER$ * exp ( - x ) - 0 . 0 ;
rank: 145
score: 99.36209106445312
patch: return 0 . $NUMBER$ * - exp ( x ) ;
rank: 145
score: 99.3399429321289
patch: return 0 . ) + 0 . $NUMBER$ * exp ( - x ) ;
rank: 145
score: 99.31902606670673
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; }
rank: 145
score: 99.30970764160156
patch: return - 0 . $NUMBER$ * exp ( x ) ; negate = true ;
rank: 145
score: 99.276611328125
patch: return 0 . 0 * exp ( x ) : 0 . $NUMBER$ ;
rank: 145
score: 99.265625
patch: return 0 . $NUMBER$ * exp ( x , x , 0 ) ;
rank: 145
score: 99.21967022235577
patch: return 0 . $NUMBER$ * exp ( x - 1 ) ;
rank: 146
score: 99.36338704427084
patch: return - 1 . $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 146
score: 99.36128743489583
patch: return - 0 . $NUMBER$ * exp ( - x ) ; / ;
rank: 146
score: 99.33866882324219
patch: return 0 . 0 : 0 . $NUMBER$ * exp ( - x ) ;
rank: 146
score: 99.30929565429688
patch: return 0 . 0 * exp ( - x ) / $NUMBER$ . 0 ;
rank: 146
score: 99.219580078125
patch: return 0 . 0 * exp ( x , 0 . $NUMBER$ ) ;
rank: 147
score: 99.40083821614583
patch: return - 0 . 0 * exp ( - x ) * $NUMBER$ ;
rank: 147
score: 99.36323816636029
patch: return - 0 . $NUMBER$ * exp ( 0 . $NUMBER$ - - x ) ;
rank: 147
score: 99.36013357979911
patch: return $NUMBER$ . $NUMBER$ * exp ( - x - x ) ;
rank: 147
score: 99.33848571777344
patch: return 0 . $NUMBER$ + exp ( x ) - exp ( x ) ;
rank: 147
score: 99.31844329833984
patch: return ( 0 . $NUMBER$ * exp ( - 0 . 0 ) ) ;
rank: 148
score: 99.40069580078125
patch: return 0 * exp ( - x ) / exp ( - x ) ;
rank: 148
score: 99.36285759420956
patch: return 0 . $NUMBER$ * exp ( - x ) - exp ( x ) ;
rank: 148
score: 99.35952524038461
patch: return - 0 . $NUMBER$ * exp exp ( x ) ;
rank: 148
score: 99.35332782451923
patch: = - 0 . 0 * exp ( - x ) ;
rank: 148
score: 99.30885314941406
patch: return 0 . $NUMBER$ * exp ( - x , 0 . 0 ) ;
rank: 148
score: 99.26376953125
patch: return 0 . $NUMBER$ * exp ( x , x . x ) ;
rank: 148
score: 99.21645883413461
patch: return 1 . $NUMBER$ * exp ( - x ) ; }
rank: 149
score: 99.3625018780048
patch: return 0 0 . $NUMBER$ * exp ( - x ) ;
rank: 149
score: 99.33790588378906
patch: return 0 . $NUMBER$ + exp ( exp ( x ) - x ) ;
rank: 149
score: 99.31792340959821
patch: return 0 . 0 / exp ( - 0 . 0 ) ;
rank: 149
score: 99.30874633789062
patch: return - 0 . 0 * exp ( x , 0 . 0 ) ;
rank: 150
score: 99.39985487196181
patch: return 0 . $NUMBER$ * exp ( - 1 ) / exp ( - x ) ;
rank: 150
score: 99.36177062988281
patch: return - 1 . $NUMBER$ * exp ( exp ( - x ) ) ;
rank: 150
score: 99.3577880859375
patch: return $NUMBER$ return 0 . $NUMBER$ * exp ( - x ) ;
rank: 150
score: 99.35206017127403
patch: return - 0 . $NUMBER$ * exp ( double ) x ;
rank: 150
score: 99.21538837139423
patch: return $NUMBER$ . $NUMBER$ * exp ( x - x ) ;
rank: 151
score: 99.35765787760417
patch: return 0 . $NUMBER$ * exp ( - x ) . - x ;
rank: 151
score: 99.35176595052083
patch: return - 1 . $NUMBER$ * this . exp ( - x ) ;
rank: 151
score: 99.33620779854911
patch: return 0 . $NUMBER$ + exp ( - x ) - x ;
rank: 151
score: 99.27329915364584
patch: return 0 ; } if ( x == 0 ) { return x ;
rank: 152
score: 99.39821490119485
patch: return 0 ; } else { return 0 . 0 * exp ( x ) ;
rank: 152
score: 99.35763985770089
patch: return $NUMBER$ . $NUMBER$ * exp ( exp ( x ) ) ;
rank: 152
score: 99.31734793526786
patch: return ( 0 . $NUMBER$ * exp ( - $NUMBER$ ) ) ;
rank: 152
score: 99.26235525948661
patch: return - x - $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 153
score: 99.35751953125
patch: return - 0 . $NUMBER$ * exp ( - x ) ; / *
rank: 153
score: 99.35078938802083
patch: return - 1 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 153
score: 99.33512660435268
patch: return 0 . $NUMBER$ + $NUMBER$ * exp ( - x ) ;
rank: 153
score: 99.3169414813702
patch: return 0 . $NUMBER$ * exp ( - - $NUMBER$ ) ;
rank: 153
score: 99.30746256510416
patch: return 0 . 0 * exp ( x ) ; negate = true ;
rank: 153
score: 99.26229654947916
patch: result = x + 0 . $NUMBER$ * exp ( - x ) ;
rank: 153
score: 99.21439906529018
patch: return - 0 . $NUMBER$ * exp ( x - 1 ) ;
rank: 154
score: 99.39781278722427
patch: return - 0 . $NUMBER$ * exp ( - x ) * / - x ;
rank: 154
score: 99.36041618795956
patch: return - 0 . $NUMBER$ : 0 . $NUMBER$ * exp ( - x ) ;
rank: 154
score: 99.35750034877232
patch: return 0 . - 0 . $NUMBER$ * exp ( x ) ;
rank: 154
score: 99.35041155133929
patch: return - 0 . $NUMBER$ * exp ( x / $NUMBER$ ) ;
rank: 154
score: 99.27125901442308
patch: x = - 0 . $NUMBER$ * exp ( x ) ;
rank: 154
score: 99.2612060546875
patch: return - 0 . $NUMBER$ * exp ( - x / x ) ;
rank: 155
score: 99.39768473307292
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( - 1 ) ;
rank: 155
score: 99.35647583007812
patch: return 0 . $NUMBER$ * exp exp ( x ) ;
rank: 155
score: 99.35019356863839
patch: return - 0 . $NUMBER$ * exp ( x * $NUMBER$ ) ;
rank: 155
score: 99.33439127604167
patch: return 0 * exp ( exp ( - x ) - x ) ;
rank: 155
score: 99.31616973876953
patch: return 0 . 0 ; } if ( x > 0 . $NUMBER$ ) {
rank: 155
score: 99.3053970336914
patch: return 0 . 0 / exp ( - x ) ; negate = true ;
rank: 155
score: 99.27035086495536
patch: return 0 . $NUMBER$ * exp ( - x ) + 1 ;
rank: 155
score: 99.26112874348958
patch: return - 0 . $NUMBER$ * ( - x ) ;
rank: 156
score: 99.35971505301339
patch: return exp - 0 . $NUMBER$ * exp ( - x ) ;
rank: 156
score: 99.35600934709821
patch: return 0 . $NUMBER$ * exp ( x + - x ) ;
rank: 156
score: 99.33419799804688
patch: return 1 . $NUMBER$ + 0 . $NUMBER$ * exp ( - x ) ;
rank: 156
score: 99.31606619698661
patch: return 0 . 0 * exp ( x ) ; } else {
rank: 156
score: 99.26093401227679
patch: return 0 . $NUMBER$ * exp ( x , - $NUMBER$ ) ;
rank: 157
score: 99.396484375
patch: return 0 . 0 * exp ( - x ) exp ( - x ) ;
rank: 157
score: 99.34885951450893
patch: return 1 . $NUMBER$ * exp ( - x ) - x ;
rank: 157
score: 99.33381958007813
patch: return 1 * exp ( - x ) ;
rank: 157
score: 99.31584930419922
patch: return 0 . $NUMBER$ * exp ( - x + 0 . 0 ) ;
rank: 157
score: 99.30483176491477
patch: return 0 . 0 - exp ( x ) ;
rank: 158
score: 99.35936063878677
patch: return 0 * exp ( 0 . $NUMBER$ + exp ( - x ) ) ;
rank: 158
score: 99.35505022321429
patch: return 0 . $NUMBER$ * exp ( - x ) ; / *
rank: 158
score: 99.34868915264423
patch: = - 1 . $NUMBER$ * exp ( - x ) ;
rank: 158
score: 99.33348670372597
patch: return 0 . $NUMBER$ * exp ( - x $NUMBER$ ) ;
rank: 158
score: 99.25998360770089
patch: return - 0 . $NUMBER$ * exp ( x ) ; break ;
rank: 159
score: 99.39496208639706
patch: return 0 . 0 * exp ( x ) / exp ( - x ) ;
rank: 159
score: 99.35911342075893
patch: return 0 . $NUMBER$ * exp ( - x ) . 0 ;
rank: 159
score: 99.35486711774554
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 159
score: 99.34536946614584
patch: return - - 0 . $NUMBER$ * exp ( - x ) ; ;
rank: 159
score: 99.30389404296875
patch: return exp ( x , 0 . 0 , - x ) ;
rank: 159
score: 99.21139322916666
patch: return 0 . $NUMBER$ . $NUMBER$ * exp ( - x ) ; }
rank: 160
score: 99.35870002297794
patch: return - 0 . 0 + 0 . $NUMBER$ * exp ( - x ) ;
rank: 160
score: 99.34238106863839
patch: return - 0 . 0 * exp ( double ) - x ;
rank: 160
score: 99.3140869140625
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ; }
rank: 160
score: 99.26763044084821
patch: return 0 . $NUMBER$ * exp ( - x ) : $NUMBER$ ;
rank: 160
score: 99.2592022235577
patch: return x - $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 161
score: 99.39443630642361
patch: return 0 . $NUMBER$ * exp ( Double . value CaMeL Of ( x ) ) ;
rank: 161
score: 99.33310546875
patch: } else { return 0 . $NUMBER$ + exp ( - x ) ;
rank: 161
score: 99.2591064453125
patch: return - x + $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 162
score: 99.3512451171875
patch: return - 0 . $NUMBER$ * x * exp ( - x ) ;
rank: 162
score: 99.33302307128906
patch: return $NUMBER$ . $NUMBER$ : 0 . $NUMBER$ * exp ( - x ) ;
rank: 162
score: 99.31345912388393
patch: return x ; } if ( x > 0 . 0 ) {
rank: 162
score: 99.3023212139423
patch: return - $NUMBER$ . 0 / exp ( - x ) ;
rank: 162
score: 99.26727764423077
patch: return 0 . $NUMBER$ * exp ( x , negate ) ;
rank: 162
score: 99.25904259314903
patch: return x < 0 . $NUMBER$ * exp ( x ) ;
rank: 163
score: 99.39152975643383
patch: return 0 . 0 * exp ( - x ) / ( - x ) ;
rank: 163
score: 99.3509033203125
patch: return - 0 . - 0 . $NUMBER$ * exp ( x ) ;
rank: 163
score: 99.340087890625
patch: return - 1 . 0 / exp ( - x ) ;
rank: 163
score: 99.31327819824219
patch: return 0 . $NUMBER$ * exp ( - ( 0 . $NUMBER$ ) ) ;
rank: 163
score: 99.20909705528847
patch: x = 0 . $NUMBER$ / exp ( - x ) ;
rank: 164
score: 99.3914794921875
patch: return - 0 . $NUMBER$ * exp ( - 0 ) ;
rank: 164
score: 99.35675048828125
patch: return 0 . $NUMBER$ * exp ( - x + $NUMBER$ ) ;
rank: 164
score: 99.35045572916667
patch: return - 0 . $NUMBER$ * exp ( - 0 . x ) ;
rank: 164
score: 99.34007917131696
patch: return - 0 . $NUMBER$ * exp ( - x $NUMBER$ ) ;
rank: 164
score: 99.31242370605469
patch: return x - 0 . 0 * exp ( - 0 . 0 ) ;
rank: 164
score: 99.26711801382211
patch: return += 0 . $NUMBER$ * exp ( - x ) ;
rank: 165
score: 99.35669708251953
patch: return 0 . $NUMBER$ * exp ( - x ) / 0 . 0 ;
rank: 165
score: 99.35030691964286
patch: return - 0 . $NUMBER$ * exp ( x / x ) ;
rank: 165
score: 99.33982631138393
patch: return - 1 . $NUMBER$ * exp ( x * x ) ;
rank: 165
score: 99.25791713169643
patch: return 1 . $NUMBER$ * exp ( x , - x ) ;
rank: 165
score: 99.20854840959821
patch: return - 0 . $NUMBER$ * * exp ( - x ) ;
rank: 166
score: 99.35006009615384
patch: return - 0 . $NUMBER$ * exp ( - x ) .
rank: 166
score: 99.33216203962054
patch: } return - 1 . $NUMBER$ * exp ( - x ) ;
rank: 166
score: 99.31129455566406
patch: return - 0 . $NUMBER$ * exp ( - - 0 . $NUMBER$ ) ;
rank: 166
score: 99.26487513950893
patch: return 0 . $NUMBER$ * exp ( - x ) + 0 ;
rank: 166
score: 99.25725911458333
patch: return - x + 1 . $NUMBER$ * exp ( - x ) ;
rank: 167
score: 99.38995002297794
patch: return 0 . $NUMBER$ * exp ( - 1 ) / exp ( x ) ;
rank: 167
score: 99.3551254272461
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 + x ) ;
rank: 167
score: 99.34837239583334
patch: return - - 0 . $NUMBER$ * exp ( x + x ) ;
rank: 167
score: 99.338134765625
patch: return 0 . 0 * exp ( - x ) ; ;
rank: 167
score: 99.33206881009616
patch: return 0 . $NUMBER$ * exp ( - x 1 ) ;
rank: 167
score: 99.31087820870536
patch: return - 0 . $NUMBER$ * exp ( - - $NUMBER$ ) ;
rank: 167
score: 99.2647216796875
patch: return 0 ; } if ( x < 0 ) { return x ;
rank: 168
score: 99.38984231387867
patch: return - 0 . 0 * exp ( - x ) / exp ( ) ;
rank: 168
score: 99.34817940848214
patch: return $NUMBER$ . $NUMBER$ * exp ( - - - x ) ;
rank: 168
score: 99.31012834821429
patch: return 0 . $NUMBER$ * exp ( - x ) + $NUMBER$ ;
rank: 168
score: 99.25677083333333
patch: return 0 . $NUMBER$ * exp ( x , x - 1 ) ;
rank: 168
score: 99.20806884765625
patch: return x - 1 . 0 * exp ( - x ) ;
rank: 169
score: 99.38909233940973
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( - $NUMBER$ ) ;
rank: 169
score: 99.35466452205883
patch: return - 0 . $NUMBER$ * exp ( - x ) + 0 . 0 ;
rank: 169
score: 99.3367919921875
patch: return - 0 . $NUMBER$ * sum ( - x ) ;
rank: 169
score: 99.31007737379808
patch: return 0 . $NUMBER$ + - exp ( - x ) ;
rank: 169
score: 99.29826354980469
patch: return 0 . 0 * exp ( - x , 0 . 0 ) ;
rank: 169
score: 99.26443246694711
patch: return 0 . $NUMBER$ * * exp ( - x ) ;
rank: 170
score: 99.38878676470588
patch: return - 0 . 0 * exp ( - x ) * 0 . $NUMBER$ ;
rank: 170
score: 99.35450744628906
patch: return - 1 . $NUMBER$ * exp ( 0 . 0 - x ) ;
rank: 170
score: 99.335986328125
patch: return - 0 . $NUMBER$ . 0 * exp ( - x ) ;
rank: 170
score: 99.331298828125
patch: return 0 . $NUMBER$ + 0 . $NUMBER$ + exp ( - x ) ;
rank: 170
score: 99.30989583333333
patch: return - 0 . $NUMBER$ * exp ( - 0 . 1 ) ;
rank: 170
score: 99.29805814302884
patch: return - 0 . 1 / exp ( - x ) ;
rank: 170
score: 99.26409505208333
patch: return 0 . $NUMBER$ * exp ( x ) ; } return x ;
rank: 170
score: 99.20744105747768
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) ; }
rank: 171
score: 99.34774576822916
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; -- x ;
rank: 171
score: 99.33597005208334
patch: return - 0 . $NUMBER$ * exp ( x * - x ) ;
rank: 171
score: 99.26395357572116
patch: result = 0 . 0 * exp ( - x ) ;
rank: 172
score: 99.335693359375
patch: return 0 . 0 * exp ( double ) - x ;
rank: 172
score: 99.33085632324219
patch: return 0 . 0 * exp ( exp ( x ) - x ) ;
rank: 172
score: 99.30953543526786
patch: return 0 . $NUMBER$ * exp ( - 0 . 1 ) ;
rank: 173
score: 99.3536017922794
patch: return - 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ - x ) ;
rank: 173
score: 99.34417255108173
patch: / return 0 . $NUMBER$ * exp ( - x ) ;
rank: 173
score: 99.2633526141827
patch: result = - 0 . $NUMBER$ * exp ( x ) ;
rank: 174
score: 99.38800726996527
patch: return 0 . $NUMBER$ * exp ( - 1 ) * exp ( - 1 ) ;
rank: 174
score: 99.35269601004464
patch: return 0 . $NUMBER$ * exp ( - x + 1 ) ;
rank: 174
score: 99.3436767578125
patch: return - - 0 . $NUMBER$ * exp ( x - x ) ;
rank: 174
score: 99.33014678955078
patch: return 0 . $NUMBER$ : 0 . 0 * exp ( - x ) ;
rank: 174
score: 99.30921282087054
patch: return 0 . 0 * exp ( - ( x ) ) ;
rank: 174
score: 99.26314290364583
patch: return 0 . $NUMBER$ * 1 . $NUMBER$ * exp ( x ) ;
rank: 174
score: 99.25250244140625
patch: return - $NUMBER$ . $NUMBER$ * exp ( x , x ) ;
rank: 174
score: 99.20579427083334
patch: return 0 . $NUMBER$ * exp ( x - 0 . $NUMBER$ ) ;
rank: 175
score: 99.3870340983073
patch: return 0 . $NUMBER$ * exp ( - 0 ) ;
rank: 175
score: 99.30919392903645
patch: return $NUMBER$ . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 175
score: 99.29661560058594
patch: return 0 . $NUMBER$ * exp ( - x ) * HEX _ $NUMBER$ ;
rank: 175
score: 99.25249372209821
patch: return - 0 . $NUMBER$ / exp ( x , x ) ;
rank: 175
score: 99.20513916015625
patch: double x = 0 . $NUMBER$ * exp ( - x ) ;
rank: 176
score: 99.3866325827206
patch: return - 0 . 0 * exp ( - x ) / $NUMBER$ . $NUMBER$ ;
rank: 176
score: 99.34221942608173
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; else
rank: 176
score: 99.33257649739583
patch: return - 0 . 0 * exp ( - x , x ) ;
rank: 176
score: 99.32867431640625
patch: return 0 . $NUMBER$ * exp ( - x ) & 0 . $NUMBER$ ;
rank: 176
score: 99.30838216145834
patch: return - 0 . $NUMBER$ * exp ( - HEX _ $NUMBER$ ) ;
rank: 177
score: 99.38648139105902
patch: return 0 . $NUMBER$ * exp ( x ) . $NUMBER$ * exp ( x ) ;
rank: 177
score: 99.34197126116071
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) + x ;
rank: 177
score: 99.32782745361328
patch: return 0 . 0 + exp ( x ) * exp ( x ) ;
rank: 177
score: 99.30790710449219
patch: return 0 . 0 ; } if ( x < 0 . 0 ) {
rank: 178
score: 99.38577473958334
patch: return 0 . 0 * exp ( - exp ( x ) ) ;
rank: 178
score: 99.349853515625
patch: return ( 0 . $NUMBER$ * exp ( - x ) - x ) ;
rank: 178
score: 99.34085518973214
patch: return 0 . $NUMBER$ * exp ( - 1 . x ) ;
rank: 178
score: 99.33244977678571
patch: / * return 0 . $NUMBER$ * exp ( - x ) ;
rank: 178
score: 99.3277359008789
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ * exp ( x ) ) ;
rank: 178
score: 99.30742536272321
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; }
rank: 178
score: 99.29386683872768
patch: return 0 . 0 / 0 * exp ( - x ) ;
rank: 178
score: 99.26149495442708
patch: += 0 . $NUMBER$ * exp ( - x ) ;
rank: 178
score: 99.249267578125
patch: return 0 + 0 . $NUMBER$ * exp ( x ) ;
rank: 178
score: 99.20480143229166
patch: return 0 . $NUMBER$ * exp ( x , 0 . 1 ) ;
rank: 179
score: 99.34983197380515
patch: return - 1 . $NUMBER$ * exp ( - x ) - 0 . $NUMBER$ ;
rank: 179
score: 99.33082682291666
patch: return - 1 . $NUMBER$ * exp ( x , - x ) ;
rank: 179
score: 99.32766927083334
patch: return 0 . $NUMBER$ * exp ( int ) exp ( x ) ;
rank: 179
score: 99.3062744140625
patch: return ( x ) - 0 . $NUMBER$ * exp ( - x ) ;
rank: 179
score: 99.29381510416667
patch: return 0 . 0 + exp ( x , 0 . 0 ) ;
rank: 179
score: 99.26145717075893
patch: return - 0 . $NUMBER$ * exp ( x ) : x ;
rank: 180
score: 99.34050641741071
patch: return $NUMBER$ . $NUMBER$ * this . exp ( - x ) ;
rank: 180
score: 99.30577741350446
patch: return 0 . $NUMBER$ * exp ( - HEX _ $NUMBER$ ) ;
rank: 180
score: 99.29363606770833
patch: return - 0 . 0 / exp ( - 0 . 0 ) ;
rank: 180
score: 99.20387620192308
patch: return 0 . $NUMBER$ / exp ( - x ) ; }
rank: 181
score: 99.38425580193015
patch: return 0 . $NUMBER$ * exp ( x ) * exp ( - $NUMBER$ ) ;
rank: 181
score: 99.34925034466912
patch: return - 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ + x ) ;
rank: 181
score: 99.33989606584821
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; / /
rank: 181
score: 99.32969563802084
patch: return - 1 . $NUMBER$ * exp ( - x * x ) ;
rank: 181
score: 99.3260498046875
patch: } return - 0 . $NUMBER$ * exp ( x ) ;
rank: 181
score: 99.30570220947266
patch: return - 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ; }
rank: 181
score: 99.2932637532552
patch: return 1 . 0 + exp ( - x ) ;
rank: 182
score: 99.34761265345982
patch: * return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 182
score: 99.33966471354167
patch: return $NUMBER$ . $NUMBER$ * exp ( - exp ( x ) ) ;
rank: 182
score: 99.32929338727679
patch: return - 0 . 0 * exp ( x + x ) ;
rank: 182
score: 99.2931137084961
patch: return 0 . $NUMBER$ / exp ( - x ) ; negate = true ;
rank: 182
score: 99.2597412109375
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ . 0 , x ) ;
rank: 182
score: 99.20286051432292
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ; }
rank: 183
score: 99.33951509915866
patch: return - 0 . $NUMBER$ * exp ( x x ) ;
rank: 183
score: 99.329248046875
patch: return 0 . $NUMBER$ * exp ( - x ) & - x ;
rank: 183
score: 99.32566731770834
patch: return x * exp ( x ) * exp ( - x ) ;
rank: 183
score: 99.30530657087054
patch: return x - 0 . 0 * exp ( - $NUMBER$ ) ;
rank: 183
score: 99.29300130208334
patch: return 0 . $NUMBER$ + exp ( x , 0 . 0 ) ;
rank: 183
score: 99.24832356770834
patch: return 0 . $NUMBER$ * exp ( x , x - 0 ) ;
rank: 183
score: 99.20216721754808
patch: return 0 . 1 . $NUMBER$ * exp ( x ) ;
rank: 184
score: 99.38165283203125
patch: return 0 ; } return 0 . $NUMBER$ * exp ( - x ) ;
rank: 184
score: 99.32886555989583
patch: return 0 . $NUMBER$ * exp ( x ) / $NUMBER$ . $NUMBER$ ;
rank: 184
score: 99.3256327311198
patch: return 0 . $NUMBER$ ] * exp ( x ) ;
rank: 184
score: 99.30370330810547
patch: return 0 . $NUMBER$ ; } if ( x >= 0 . 0 ) {
rank: 184
score: 99.25929612379808
patch: return 0 . $NUMBER$ * exp ( x ) : true ;
rank: 184
score: 99.24818522135416
patch: return - 0 . $NUMBER$ * exp ( - x ) ; * /
rank: 184
score: 99.20036097935268
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ; } else {
rank: 185
score: 99.32884928385417
patch: this . return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 185
score: 99.32506452287946
patch: exp ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 185
score: 99.29251534598214
patch: return 0 . 0 . $NUMBER$ / exp ( - x ) ;
rank: 185
score: 99.24773763020833
patch: return exp ( x , 0 . 0 , x - $NUMBER$ ) ;
rank: 186
score: 99.3808234719669
patch: return 0 . 0 * exp ( - 1 ) * exp ( x ) ;
rank: 186
score: 99.3465217141544
patch: return - 1 . $NUMBER$ + 0 . $NUMBER$ * exp ( - x ) ;
rank: 186
score: 99.32861328125
patch: return - 0 . 0 * this . exp ( - x ) ;
rank: 186
score: 99.32463073730469
patch: return 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ + x ) ;
rank: 186
score: 99.30309119591347
patch: return - 0 . $NUMBER$ + exp ( - $NUMBER$ ) ;
rank: 186
score: 99.2917989095052
patch: return 0 . 0 + exp ( - $NUMBER$ ) ;
rank: 186
score: 99.2586669921875
patch: return 0 . $NUMBER$ * exp ( x ) + $NUMBER$ ;
rank: 187
score: 99.3800048828125
patch: return 0 . 0 * exp ( - x ) . exp ( - x ) ;
rank: 187
score: 99.33745930989583
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) * - x ;
rank: 187
score: 99.3244384765625
patch: return 0 . $NUMBER$ : 1 . $NUMBER$ * exp ( x ) ;
rank: 187
score: 99.30275065104166
patch: return - 0 . $NUMBER$ ; } if ( x > $NUMBER$ ) {
rank: 187
score: 99.29144287109375
patch: return x - 0 . $NUMBER$ / exp ( - x ) ;
rank: 187
score: 99.25791015625
patch: return 0 . $NUMBER$ * exp ( 1 . 0 , x ) ;
rank: 188
score: 99.37923177083333
patch: return - 0 . $NUMBER$ * exp ( 0 ) ;
rank: 188
score: 99.33621215820312
patch: return 0 . $NUMBER$ * exp ( - x ) .
rank: 188
score: 99.3274658203125
patch: return - 0 . $NUMBER$ * exp ( x ) + - x ;
rank: 188
score: 99.30182291666667
patch: return 0 . $NUMBER$ * exp ( - ( - x ) ) ;
rank: 188
score: 99.29015350341797
patch: return 0 . 0 * exp ( - ( x - x ) ) ;
rank: 189
score: 99.37900119357639
patch: return - 0 . $NUMBER$ * exp ( x ) * exp ( - x ) ;
rank: 189
score: 99.34498814174107
patch: result = - 0 . 0 * exp ( - x ) ;
rank: 189
score: 99.32671247209821
patch: return - 0 . $NUMBER$ ) * exp ( - x ) ;
rank: 189
score: 99.32249232700893
patch: return 0 . $NUMBER$ : 0 * exp ( - x ) ;
rank: 189
score: 99.30131530761719
patch: return 0 . $NUMBER$ * exp ( - 0 . 0 . 0 ) ;
rank: 189
score: 99.256884765625
patch: return 0 ; } if ( x > 0 ) { return x ;
rank: 189
score: 99.245849609375
patch: return $NUMBER$ - 0 . $NUMBER$ * exp ( - x ) ;
rank: 189
score: 99.1995849609375
patch: return - 0 . $NUMBER$ * exp ( - x ) . $NUMBER$ ;
rank: 190
score: 99.37894933363971
patch: return 0 * exp ( - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 190
score: 99.34477015904018
patch: return - 1 . $NUMBER$ * exp ( 0 . 0 ) ;
rank: 190
score: 99.3353515625
patch: return 0 . $NUMBER$ * exp ( x ) * x * x ;
rank: 190
score: 99.325830078125
patch: return - 0 . 0 * exp ( - x * x ) ;
rank: 190
score: 99.3223876953125
patch: return $NUMBER$ + exp ( x ) * exp ( - x ) ;
rank: 190
score: 99.25640399639423
patch: return 0 . $NUMBER$ * exp ( x ) + 1 ;
rank: 191
score: 99.37889268663194
patch: return - 0 . $NUMBER$ * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 191
score: 99.34468347886029
patch: return 0 . $NUMBER$ * exp ( x ) + exp ( - x ) ;
rank: 191
score: 99.32568359375
patch: return - 0 . $NUMBER$ * exp ( - x )
rank: 191
score: 99.32206726074219
patch: return 0 . $NUMBER$ * exp ( ( - x ) - x ) ;
rank: 191
score: 99.30113983154297
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; } else {
rank: 191
score: 99.28942108154297
patch: return 0 . 0 * exp ( - exp ( - x ) ) ;
rank: 192
score: 99.34400177001953
patch: return - 0 . $NUMBER$ * exp ( 0 . 1 - x ) ;
rank: 192
score: 99.32469764122597
patch: return - $NUMBER$ . 1 * exp ( - x ) ;
rank: 192
score: 99.30113118489584
patch: return 0 . $NUMBER$ ; } else if ( x == 0 ) {
rank: 192
score: 99.24506022135417
patch: if ( x == 0 . 0 ) { x = - x ;
rank: 193
score: 99.37810920266544
patch: return 0 . 0 * exp ( - x ) * exp ( $NUMBER$ ) ;
rank: 193
score: 99.34381975446429
patch: return - 0 . $NUMBER$ * exp ( x ) - $NUMBER$ ;
rank: 193
score: 99.32365587022569
patch: double CaMeL Value ( - x ) ;
rank: 193
score: 99.32187906901042
patch: return 0 . $NUMBER$ : exp ( - x ) ;
rank: 193
score: 99.3010482788086
patch: return 0 . $NUMBER$ ; } if ( x == 0 . $NUMBER$ ) {
rank: 193
score: 99.24503871372768
patch: return x . - 0 . $NUMBER$ * exp ( x ) ;
rank: 194
score: 99.37744858685662
patch: return - 0 . 0 * exp ( - x ) * x * x ;
rank: 194
score: 99.3431396484375
patch: return 0 * exp ( exp ( - x ) ) ;
rank: 194
score: 99.33483014787946
patch: return - 0 . $NUMBER$ * exp ( - 1 . ) ;
rank: 194
score: 99.32183837890625
patch: return 0 . 1 * exp ( x ) * exp ( x ) ;
rank: 194
score: 99.28824556790866
patch: return 0 . 0 . $NUMBER$ * exp ( x ) ;
rank: 194
score: 99.25485464242789
patch: return 0 . $NUMBER$ * exp ( x , $NUMBER$ ) ;
rank: 195
score: 99.37713982077206
patch: return - 0 . 0 * exp ( - ( x - x ) ) ;
rank: 195
score: 99.34290489783653
patch: return - 0 . $NUMBER$ * exp ( * x ) ;
rank: 195
score: 99.33473307291666
patch: return - 0 . $NUMBER$ * - exp ( x - x ) ;
rank: 195
score: 99.32305908203125
patch: return - - 1 . 1 * exp ( - x ) ;
rank: 195
score: 99.32176717122395
patch: return 0 . $NUMBER$ * x ( - x ) ;
rank: 195
score: 99.301025390625
patch: return $NUMBER$ . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 195
score: 99.24429757254464
patch: return - 0 . $NUMBER$ * exp ( - x x ) ;
rank: 196
score: 99.37431335449219
patch: return 0 . $NUMBER$ * exp ( - x ) * $NUMBER$ . $NUMBER$ ;
rank: 196
score: 99.33458658854167
patch: return - 0 . $NUMBER$ * exp ( - - x ) ) ;
rank: 196
score: 99.32176208496094
patch: return 0 . $NUMBER$ * exp ( x ) + exp ( x ) ;
rank: 196
score: 99.25403645833333
patch: return - 0 . $NUMBER$ * exp ( - x ) : 0 ;
rank: 196
score: 99.1957256610577
patch: x = $NUMBER$ . 0 * exp ( - x ) ;
rank: 197
score: 99.34262520926339
patch: return 0 return 0 . $NUMBER$ * exp ( - x ) ;
rank: 197
score: 99.32160295758929
patch: } else = 0 . $NUMBER$ * exp ( - x ) ;
rank: 197
score: 99.243408203125
patch: return ( x > $NUMBER$ ) * exp ( - x ) ;
rank: 197
score: 99.19556477864583
patch: return - 0 . $NUMBER$ * exp ( - x ) + 0 ;
rank: 198
score: 99.3739013671875
patch: return 0 ; } else return 0 . $NUMBER$ * exp ( - x ) ;
rank: 198
score: 99.34233093261719
patch: return - 0 . $NUMBER$ * exp ( 0 . $NUMBER$ + x ) ;
rank: 198
score: 99.33445231119792
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ) ;
rank: 198
score: 99.25381234975961
patch: return - 0 . 0 , exp ( - x ) ;
rank: 198
score: 99.24293009440105
patch: return - 0 . $NUMBER$ - exp ( x ) ;
rank: 199
score: 99.33433314732143
patch: return - 0 . $NUMBER$ * exp ( - x ) ; .
rank: 199
score: 99.322607421875
patch: return - 0 . $NUMBER$ * exp ( - x ) << $NUMBER$ ;
rank: 199
score: 99.31945037841797
patch: } * * / return 0 . $NUMBER$ * exp ( - x ) ;
rank: 199
score: 99.29840087890625
patch: return 0 . 0 / exp ( - 0 . $NUMBER$ ) ;
rank: 199
score: 99.28754534040179
patch: return x + 0 . $NUMBER$ / exp ( - x ) ;
rank: 200
score: 99.37381184895834
patch: return - 0 . $NUMBER$ * exp ( - 1 ) * x ;
rank: 200
score: 99.3338153545673
patch: return - 0 . $NUMBER$ * min ( - x ) ;
rank: 200
score: 99.32218715122768
patch: return 0 . 0 * exp ( - x , x ) ;
rank: 200
score: 99.31904602050781
patch: return 0 . $NUMBER$ / exp ( x ) * exp ( x ) ;
rank: 200
score: 99.28738839285714
patch: return - 0 . $NUMBER$ / exp ( - x ) ; }
rank: 200
score: 99.19454752604166
patch: return 0 . $NUMBER$ * exp ( - x ) ; } ) ;
rank: 201
score: 99.37355550130208
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( 0 ) ;
rank: 201
score: 99.34207589285714
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ , - x ) ;
rank: 201
score: 99.31897735595703
patch: return 0 . $NUMBER$ + exp ( - x ) * 0 . $NUMBER$ ;
rank: 201
score: 99.29777018229167
patch: return - 0 . $NUMBER$ / exp ( - 0 . $NUMBER$ ) ;
rank: 201
score: 99.24051607572116
patch: return x + 1 . $NUMBER$ * exp ( x ) ;
rank: 202
score: 99.3730801669034
patch: return - 0 . 0 * exp ( ) ;
rank: 202
score: 99.33346354166666
patch: return - 0 = $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 202
score: 99.31884765625
patch: } return 0 . $NUMBER$ + exp ( - x ) ;
rank: 202
score: 99.29752894810268
patch: return - 0 . $NUMBER$ + - exp ( - x ) ;
rank: 202
score: 99.19359537760417
patch: return 0 . $NUMBER$ / exp ( - x ) ; } else {
rank: 203
score: 99.37286017922794
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( $NUMBER$ ) ;
rank: 203
score: 99.33291190011161
patch: return - 0 . $NUMBER$ * exp ( - 0 . ) ;
rank: 203
score: 99.32178548177083
patch: return - 1 . $NUMBER$ * exp ( - x - x ) ;
rank: 203
score: 99.29676055908203
patch: return x - 0 . 0 * exp ( - 0 . $NUMBER$ ) ;
rank: 203
score: 99.25193568638393
patch: if ( x > 0 . 0 ) { return x ; }
rank: 203
score: 99.24038461538461
patch: if ( x > 0 ) { x = - x ;
rank: 203
score: 99.19298502604167
patch: return - 0 . $NUMBER$ * exp ( - x - 1 ) ;
rank: 204
score: 99.34189022288604
patch: return - 0 . 0 * exp ( - x ) - 0 . $NUMBER$ ;
rank: 204
score: 99.28699669471153
patch: return - 0 . 0 * exp ( x ) ; }
rank: 204
score: 99.25169270833334
patch: return x ; } if ( x < 0 ) { return x ;
rank: 204
score: 99.24036583533653
patch: x += 0 . $NUMBER$ * exp ( - x ) ;
rank: 204
score: 99.1927490234375
patch: return - 0 . $NUMBER$ * exp ( - x / 1 ) ;
rank: 205
score: 99.37271321614584
patch: return - 0 . 0 * exp ( - x ) / x ;
rank: 205
score: 99.33264973958333
patch: return ( 0 . $NUMBER$ * exp ( - x ) ) ) ;
rank: 205
score: 99.31819915771484
patch: return 0 . $NUMBER$ * exp ( x + exp ( x ) ) ;
rank: 205
score: 99.25160319010416
patch: return 1 . $NUMBER$ * exp ( x ) + 0 . $NUMBER$ ;
rank: 206
score: 99.34172506893383
patch: return - 0 . $NUMBER$ * exp ( - x , 0 . 0 ) ;
rank: 206
score: 99.31813267299107
patch: return exp ( x ) ;
rank: 206
score: 99.25130208333333
patch: return 0 . $NUMBER$ * exp ( + x ) ;
rank: 206
score: 99.19052358774039
patch: return $NUMBER$ . $NUMBER$ * exp ( x , 0 ) ;
rank: 207
score: 99.37185329861111
patch: return - 0 . 0 * exp ( - x ) / exp ( x ) ;
rank: 207
score: 99.34123229980469
patch: return - 1 . $NUMBER$ * exp ( - x , - x ) ;
rank: 207
score: 99.25116436298077
patch: return - 0 . $NUMBER$ , exp ( - x ) ;
rank: 207
score: 99.19022623697917
patch: return 0 . $NUMBER$ * exp ( x - 0 . 0 ) ;
rank: 208
score: 99.37171223958333
patch: return - 0 . $NUMBER$ * exp ( - 1 ) / $NUMBER$ ;
rank: 208
score: 99.34119370404412
patch: return - 0 . $NUMBER$ * exp ( - x ) - 0 . 1 ;
rank: 208
score: 99.33148600260417
patch: return - - - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 208
score: 99.32112339564732
patch: return 0 . $NUMBER$ * exp ( - x * $NUMBER$ ) ;
rank: 208
score: 99.3174819946289
patch: return 1 . $NUMBER$ : 0 . $NUMBER$ * exp ( - x ) ;
rank: 208
score: 99.29530334472656
patch: return - 0 . $NUMBER$ + 0 . $NUMBER$ * exp ( x ) ;
rank: 208
score: 99.28349086216518
patch: return x * 0 . $NUMBER$ / exp ( - x ) ;
rank: 208
score: 99.25105503627232
patch: return 0 . 0 / exp ( x , - x ) ;
rank: 209
score: 99.37157524956598
patch: return - 1 . $NUMBER$ * exp ( - x ) * exp ( x ) ;
rank: 209
score: 99.34114837646484
patch: return - 0 . 0 * exp ( 0 . 0 - x ) ;
rank: 209
score: 99.3203369140625
patch: return - - 0 . $NUMBER$ * exp ( double ) - x ;
rank: 209
score: 99.29510498046875
patch: return $NUMBER$ . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 210
score: 99.37128762637867
patch: return - 0 . $NUMBER$ * exp ( - x ) * ( x ) ;
rank: 210
score: 99.31997244698661
patch: return 0 . 0 * this . exp ( - x ) ;
rank: 210
score: 99.31654575892857
patch: return 0 . $NUMBER$ + exp ( exp ( x ) ) ;
rank: 210
score: 99.25074181189903
patch: return new - 0 . $NUMBER$ * exp ( x ) ;
rank: 210
score: 99.1898193359375
patch: return 0 . $NUMBER$ * exp ( - x / 1 ) ;
rank: 211
score: 99.37123616536458
patch: return 0 . $NUMBER$ * exp ( - x ) + exp ( - x ) ;
rank: 211
score: 99.34089211856617
patch: return 0 . 0 * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 211
score: 99.330859375
patch: return - $NUMBER$ . $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 211
score: 99.29395294189453
patch: return - 0 . 0 * exp ( - x ) ; } else {
rank: 211
score: 99.24974772135417
patch: return x ; } if ( x == 0 ) { return x ;
rank: 211
score: 99.23939732142857
patch: return - 0 . 1 * exp ( x , x ) ;
rank: 212
score: 99.37108612060547
patch: return 0 . 0 * exp ( - x ) * 0 . $NUMBER$ ;
rank: 212
score: 99.34086339613971
patch: return - 1 . $NUMBER$ * exp ( - x ) - 1 . $NUMBER$ ;
rank: 212
score: 99.33074396306819
patch: return $NUMBER$ * exp ( - - x ) ;
rank: 213
score: 99.34080595128677
patch: return 0 * exp ( 0 . $NUMBER$ - exp ( - x ) ) ;
rank: 213
score: 99.3306133563702
patch: return - - $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 213
score: 99.31871686662946
patch: return - 1 . $NUMBER$ * exp ( double ) - x ;
rank: 213
score: 99.31598663330078
patch: return 0 . $NUMBER$ ? 0 . $NUMBER$ + exp ( - x ) ;
rank: 213
score: 99.28050013950893
patch: return - 0 . 0 + exp ( x - x ) ;
rank: 213
score: 99.18841552734375
patch: exp ( x , 0 . $NUMBER$ , x ) ;
rank: 214
score: 99.37068997896634
patch: return - 1 . 0 * exp ( - 1 ) ;
rank: 214
score: 99.33042689732143
patch: return 0 . $NUMBER$ * exp ( 0 . - x ) ;
rank: 214
score: 99.3183837890625
patch: int x = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 214
score: 99.31573893229167
patch: return 0 . $NUMBER$ * exp ( x + 0 . $NUMBER$ ) ;
rank: 214
score: 99.24946812220982
patch: return 0 . $NUMBER$ / exp ( - x - x ) ;
rank: 214
score: 99.238427734375
patch: return ( - 0 . 0 * exp ( - x ) ) ;
rank: 214
score: 99.18798014322917
patch: return - 0 . $NUMBER$ * exp ( x - x ) ; }
rank: 215
score: 99.37059110753677
patch: return 0 . $NUMBER$ * exp ( x ) * exp ( - 1 ) ;
rank: 215
score: 99.31773158482143
patch: return - - $NUMBER$ . 0 * exp ( - x ) ;
rank: 215
score: 99.31566510881696
patch: return 0 . $NUMBER$ + this . exp ( - x ) ;
rank: 215
score: 99.28016008649554
patch: return - 0 . $NUMBER$ + exp ( x - x ) ;
rank: 215
score: 99.23818533761161
patch: return 0 - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 216
score: 99.37053680419922
patch: return 0 . $NUMBER$ * exp ( x ) / exp ( x ) ;
rank: 216
score: 99.34001922607422
patch: return - 0 . 0 * exp ( exp ( - x ) ) ;
rank: 216
score: 99.32921549479167
patch: return x * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 216
score: 99.290478515625
patch: return - 1 . $NUMBER$ * exp ( - ( x ) ) ;
rank: 216
score: 99.23804524739583
patch: return 0 . $NUMBER$ . $NUMBER$ * exp ( x , x ) ;
rank: 216
score: 99.18688092912946
patch: return 0 . $NUMBER$ * exp ( - x ) . $NUMBER$ ;
rank: 217
score: 99.37033081054688
patch: return 0 . 0 * exp ( - x ) * x * x ;
rank: 217
score: 99.32860389122597
patch: return $NUMBER$ * exp ( exp ( - x ) ) ;
rank: 217
score: 99.31589762369792
patch: = 1 . $NUMBER$ * exp ( - x ) ;
rank: 217
score: 99.24888258713942
patch: return 0 . 0 * exp ( x ) + x ;
rank: 218
score: 99.370068359375
patch: return 0 . 0 * exp ( - x ) * - x ;
rank: 218
score: 99.33909696691177
patch: return 0 * exp ( $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 218
score: 99.31555989583333
patch: return - 1 . 0 * exp ( - x ) * x ;
rank: 218
score: 99.31483677455357
patch: return 0 . $NUMBER$ * x * exp ( - x ) ;
rank: 218
score: 99.28999328613281
patch: return - 1 . $NUMBER$ * exp ( - x ) ; } else {
rank: 218
score: 99.27962820870536
patch: return x + 0 . 0 / exp ( - x ) ;
rank: 218
score: 99.23660481770834
patch: if ( x >= 0 . 0 ) { x = - x ;
rank: 219
score: 99.369873046875
patch: return 0 . $NUMBER$ * exp ( - x ) ( x ) ;
rank: 219
score: 99.33856560202206
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ , exp ( - x ) ) ;
rank: 219
score: 99.32796223958333
patch: return - 0 . ) . $NUMBER$ * exp ( - x ) ;
rank: 219
score: 99.3140380859375
patch: return 0 . $NUMBER$ * exp ( - x ) * x ) ;
rank: 219
score: 99.28965541294643
patch: return 0 . $NUMBER$ - exp ( - 0 . 0 ) ;
rank: 219
score: 99.27951049804688
patch: return - $NUMBER$ . 0 * exp ( x ) ;
rank: 219
score: 99.24860491071429
patch: return 0 . $NUMBER$ * exp ( x ) : - x ;
rank: 219
score: 99.236474609375
patch: return - x - 0 . 0 * exp ( - x ) ;
rank: 220
score: 99.36982278262867
patch: return - 0 . $NUMBER$ * exp ( - x ) * $NUMBER$ . $NUMBER$ ;
rank: 220
score: 99.33820452008929
patch: return 0 . 0 * exp ( exp ( x ) ) ;
rank: 220
score: 99.32692057291666
patch: return 0 . $NUMBER$ * exp ( - x ) ; return ) ;
rank: 220
score: 99.31468854631696
patch: return - 0 . $NUMBER$ * exp ( x ) / $NUMBER$ ;
rank: 220
score: 99.314013671875
patch: } else { return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 220
score: 99.28944091796875
patch: return $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 220
score: 99.23633684430804
patch: x = - 0 . 0 * exp ( - x ) ;
rank: 221
score: 99.36972045898438
patch: return 0 * exp ( - 1 ) ;
rank: 221
score: 99.32559204101562
patch: return $NUMBER$ . $NUMBER$ * max ( - x ) ;
rank: 221
score: 99.31413051060268
patch: return - 0 . 0 * exp ( x * x ) ;
rank: 221
score: 99.31390380859375
patch: exp ( x ) ; return 0 . $NUMBER$ * exp ( x ) ;
rank: 221
score: 99.28905436197917
patch: return ( x ) - 0 . $NUMBER$ * exp ( x ) ;
rank: 221
score: 99.27934919084821
patch: return x - 0 . 0 / exp ( - x ) ;
rank: 221
score: 99.24744466145833
patch: return exp ( x , 0 . 0 , 0 . 0 ) ;
rank: 222
score: 99.33795525045956
patch: return 0 . $NUMBER$ + - 0 . $NUMBER$ * exp ( - x ) ;
rank: 222
score: 99.24724786931819
patch: return 0 . $NUMBER$ * ( - x ) ;
rank: 223
score: 99.36918809678819
patch: return - 0 . $NUMBER$ * exp ( - 1 ) * exp ( x ) ;
rank: 223
score: 99.337841796875
patch: return - 0 . $NUMBER$ * exp ( - x ) . 1 ;
rank: 223
score: 99.32405598958333
patch: return $NUMBER$ . 1 * exp ( - x ) ;
rank: 223
score: 99.3129638671875
patch: return - 1 . $NUMBER$ * exp ( - x + x ) ;
rank: 224
score: 99.3689956665039
patch: return - 0 . $NUMBER$ * exp ( - x ) * - 1 ;
rank: 224
score: 99.33775329589844
patch: return 0 . 0 * exp ( - x ) / 0 . $NUMBER$ ;
rank: 224
score: 99.3238994891827
patch: return - 0 . $NUMBER$ * exp ( 0 . ) ;
rank: 224
score: 99.31305694580078
patch: return 0 . $NUMBER$ * exp ( - x / 0 . $NUMBER$ ) ;
rank: 224
score: 99.31278170072116
patch: double - 0 . $NUMBER$ * exp ( - x ) ;
rank: 224
score: 99.27859262319711
patch: return - 0 . 0 + exp ( - $NUMBER$ ) ;
rank: 224
score: 99.24712665264423
patch: return - 0 . $NUMBER$ * exp ( , x ) ;
rank: 225
score: 99.36885579427083
patch: return - 0 . 0 * exp ( - 1 . $NUMBER$ ) ;
rank: 225
score: 99.33709247295673
patch: return - 0 . $NUMBER$ * exp ( - start ) ;
rank: 225
score: 99.32388741629464
patch: return return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 225
score: 99.31235758463542
patch: return 0 . $NUMBER$ + exp ( x ) ) ;
rank: 225
score: 99.2877685546875
patch: return 0 . $NUMBER$ * exp ( - ( - $NUMBER$ ) ) ;
rank: 225
score: 99.27853628305289
patch: return - $NUMBER$ . 0 + exp ( - x ) ;
rank: 225
score: 99.2468994140625
patch: return 0 . $NUMBER$ / exp ( x ) + 0 . $NUMBER$ ;
rank: 225
score: 99.23486328125
patch: return x + - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 226
score: 99.36824798583984
patch: return 0 ; } return 0 . 0 * exp ( - x ) ;
rank: 226
score: 99.32315266927084
patch: return $NUMBER$ . $NUMBER$ * exp ( 0 . $NUMBER$ * x ) ;
rank: 226
score: 99.31216195913461
patch: value = 0 . $NUMBER$ * exp ( - x ) ;
rank: 226
score: 99.23435872395834
patch: if ( x < 0 . 0 ) { return 0 . $NUMBER$ ;
rank: 226
score: 99.18274797712054
patch: return $NUMBER$ . $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 227
score: 99.36800384521484
patch: return - 0 . 0 * exp ( - x ) * - x ;
rank: 227
score: 99.33654067095588
patch: return 0 . $NUMBER$ + exp 0 . $NUMBER$ * exp ( - x ) ;
rank: 227
score: 99.32294921875
patch: return - 0 . $NUMBER$ * exp ( x ) ; -- x ;
rank: 227
score: 99.31201985677083
patch: return - 1 . $NUMBER$ * exp ( - x ) + 1 ;
rank: 227
score: 99.31187220982143
patch: } return - 0 . $NUMBER$ + exp ( - x ) ;
rank: 227
score: 99.27802734375
patch: return - 0 . 0 / $NUMBER$ * exp ( - x ) ;
rank: 228
score: 99.36798095703125
patch: return 0 * exp ( - 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 228
score: 99.31090494791667
patch: return - 0 . 1 * exp ( - x ) - x ;
rank: 228
score: 99.24613131009616
patch: if ( x < 0 . 0 ) { return x ;
rank: 229
score: 99.36741009880515
patch: return - 0 . 0 * exp ( - x ) + 0 . $NUMBER$ ;
rank: 229
score: 99.32224684495192
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; /
rank: 229
score: 99.3107421875
patch: return 1 . $NUMBER$ * exp ( - x , - x ) ;
rank: 229
score: 99.28697916666667
patch: return 0 . 0 * exp ( - $NUMBER$ ) ; } else {
rank: 229
score: 99.27738131009616
patch: return 0 . 0 + exp ( x - x ) ;
rank: 230
score: 99.36728802849265
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) * exp ( x ) ;
rank: 230
score: 99.33583170572916
patch: return - 0 . $NUMBER$ + exp ( - 0 . $NUMBER$ ) ;
rank: 230
score: 99.32216796875
patch: return 0 . $NUMBER$ * exp ( - 1 . - x ) ;
rank: 230
score: 99.23357282366071
patch: return 0 . $NUMBER$ * exp ( - x / x ) ;
rank: 231
score: 99.3666130514706
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( - x ;
rank: 231
score: 99.23258463541667
patch: return x + 0 . $NUMBER$ * exp ( - x ) ; }
rank: 231
score: 99.18099271334134
patch: x = 1 . 0 * exp ( - x ) ;
rank: 232
score: 99.31075345552884
patch: return - 0 . $NUMBER$ | exp ( - x ) ;
rank: 232
score: 99.285498046875
patch: return x - - 0 . $NUMBER$ * exp ( - x ) ;
rank: 232
score: 99.27672467912946
patch: return 0 . $NUMBER$ . 0 / exp ( - x ) ;
rank: 232
score: 99.2323974609375
patch: return x = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 233
score: 99.33528406479779
patch: return - 0 . 0 * exp ( - x ) - 0 . 0 ;
rank: 233
score: 99.32150704520089
patch: return - 0 . $NUMBER$ * exp ( x ) ; / /
rank: 233
score: 99.31060384114583
patch: return 0 . $NUMBER$ * exp ( * exp ( x ) ) ;
rank: 233
score: 99.2764892578125
patch: return 0 . 0 / exp ( - x ) ; }
rank: 233
score: 99.23230919471153
patch: if ( x < 0 ) { x = - x ;
rank: 233
score: 99.17939976283482
patch: return 0 . $NUMBER$ * exp ( - x - 1 ) ;
rank: 234
score: 99.3656005859375
patch: return - 1 . $NUMBER$ * exp ( - x ) * exp ( ) ;
rank: 234
score: 99.31029256184895
patch: return - 1 . $NUMBER$ + exp ( x ) ;
rank: 234
score: 99.27606608072917
patch: return 0 . $NUMBER$ * exp ( - x ) = - x ;
rank: 234
score: 99.24339192708334
patch: return 0 . $NUMBER$ * exp ( x ) - 0 . 0 ;
rank: 235
score: 99.3205810546875
patch: return 0 . $NUMBER$ * exp ( - 0 . - x ) ;
rank: 235
score: 99.30984061104911
patch: return 0 . $NUMBER$ . 1 * exp ( - x ) ;
rank: 235
score: 99.30721842447916
patch: return - 1 . $NUMBER$ * exp ( - x ) / x ;
rank: 235
score: 99.27560860770089
patch: return 0 . 0 / exp ( - x + x ) ;
rank: 235
score: 99.24319661458334
patch: return - 0 . $NUMBER$ * exp ( - x ) : $NUMBER$ ;
rank: 235
score: 99.17902166193181
patch: return exp ( x , 0 . $NUMBER$ ) ;
rank: 236
score: 99.33445829503677
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ * exp ( - x ) ) ;
rank: 236
score: 99.31997244698661
patch: return 0 . $NUMBER$ * exp ( - 0 . x ) ;
rank: 236
score: 99.30673014322916
patch: * / return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 236
score: 99.27560221354166
patch: return 0 . 0 + 0 . $NUMBER$ * exp ( x ) ;
rank: 236
score: 99.230810546875
patch: return - 0 . $NUMBER$ / exp ( - x - x ) ;
rank: 236
score: 99.17891148158482
patch: return * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 237
score: 99.36478917738971
patch: return 0 . $NUMBER$ * exp ( - 1 ) * exp ( 0 ) ;
rank: 237
score: 99.17872032752403
patch: return 0 . $NUMBER$ * exp ( x ) ; } }
rank: 238
score: 99.3642578125
patch: return - 0 . $NUMBER$ * exp ( - 1 ) * exp ( ) ;
rank: 238
score: 99.31940104166667
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; return x ;
rank: 238
score: 99.28446960449219
patch: return 0 . $NUMBER$ + 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 238
score: 99.241650390625
patch: return exp ( x , 0 . 0 , 0 . $NUMBER$ ) ;
rank: 238
score: 99.23025948660714
patch: return - 0 . $NUMBER$ * exp ( [ x ] ) ;
rank: 239
score: 99.36403982979911
patch: return 0 . 0 * exp ( - x ) * $NUMBER$ ;
rank: 239
score: 99.33373305376838
patch: return - 0 . $NUMBER$ * exp ( - x ) - 1 . 1 ;
rank: 239
score: 99.31907435825893
patch: return - $NUMBER$ . $NUMBER$ * exp ( x - x ) ;
rank: 239
score: 99.23019845145089
patch: return - 0 . $NUMBER$ * $NUMBER$ * exp ( x ) ;
rank: 239
score: 99.17819010416666
patch: exp ( - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 240
score: 99.36390686035156
patch: return 0 . 0 * exp ( - x ) / exp ( ) ;
rank: 240
score: 99.33270263671875
patch: return - 0 . $NUMBER$ 0 * exp ( - x ) ;
rank: 240
score: 99.31896158854167
patch: return - 0 . $NUMBER$ * exp ( x / - x ) ;
rank: 240
score: 99.30855887276786
patch: else { return 0 . $NUMBER$ * exp ( - x ) ;
rank: 240
score: 99.30646623883929
patch: return 0 . 0 * exp ( - x * x ) ;
rank: 240
score: 99.27370981069711
patch: return 0 . 0 * exp ( x - $NUMBER$ ) ;
rank: 241
score: 99.36341050091912
patch: return - 0 . 0 * exp ( x ) * exp ( x ) ;
rank: 241
score: 99.33265904017857
patch: return 0 . $NUMBER$ * exp ( - x ) . 1 ;
rank: 241
score: 99.31881009615384
patch: return $NUMBER$ . $NUMBER$ * exp ( x + x ) ;
rank: 241
score: 99.30768229166667
patch: return $NUMBER$ * exp ( exp ( - x ) - x ) ;
rank: 241
score: 99.30539175180289
patch: return 0 . 0 * exp ( x * x ) ;
rank: 241
score: 99.24081420898438
patch: return 0 . $NUMBER$ * exp ( , x ) ;
rank: 242
score: 99.31795828683036
patch: return 0 . $NUMBER$ * exp ( x - - x ) ;
rank: 242
score: 99.30677286783855
patch: } return 0 . $NUMBER$ * exp ( x ) ;
rank: 242
score: 99.30479213169643
patch: return - - 1 . $NUMBER$ / exp ( - x ) ;
rank: 242
score: 99.27361188616071
patch: return 0 . 0 * exp ( - x + $NUMBER$ ) ;
rank: 242
score: 99.24074881417411
patch: return 0 . 0 * exp ( x , x ) ; }
rank: 242
score: 99.17657063802083
patch: return x - 0 . $NUMBER$ * exp ( - x ) ; }
rank: 243
score: 99.36271837022569
patch: return 0 . 0 * exp ( - 1 ) * exp ( - x ) ;
rank: 243
score: 99.3324203491211
patch: return - 0 . $NUMBER$ + exp ( exp ( - x ) ) ;
rank: 243
score: 99.30662318638393
patch: return 0 . $NUMBER$ + exp ( - x ) + x ;
rank: 243
score: 99.30460611979167
patch: return 0 . $NUMBER$ * exp ( double ) ( - x ) ;
rank: 243
score: 99.28241838727679
patch: return ( 0 . $NUMBER$ + exp ( - x ) ) ;
rank: 243
score: 99.22952974759616
patch: if ( x == 0 ) { x = - x ;
rank: 244
score: 99.33201599121094
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ + - x ) ;
rank: 244
score: 99.31669108072917
patch: return ( 0 . $NUMBER$ * exp ( x ) - x ) ;
rank: 244
score: 99.30643717447917
patch: return 0 . $NUMBER$ << exp ( - x ) ;
rank: 244
score: 99.22916085379464
patch: return 1 . $NUMBER$ * exp ( - x - x ) ;
rank: 244
score: 99.17626139322917
patch: return - ( exp ( x ) - exp ( x ) ) ;
rank: 245
score: 99.3624267578125
patch: return 0 * exp ( - x ) * exp ( 0 ) ;
rank: 245
score: 99.3319091796875
patch: return - 1 . $NUMBER$ * exp ( - x ) / 0 . $NUMBER$ ;
rank: 245
score: 99.30321451822917
patch: return - 1 . 0 * exp ( - x ) - x ;
rank: 245
score: 99.23939866286058
patch: return 0 . $NUMBER$ * exp ( x ) + 0 ;
rank: 246
score: 99.31630045572916
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ . - x ) ;
rank: 246
score: 99.30313546316964
patch: return 0 . $NUMBER$ * exp ( x ) + - x ;
rank: 246
score: 99.28145926339286
patch: return 0 . 1 * exp ( - 0 . 0 ) ;
rank: 247
score: 99.3311538696289
patch: return 0 * exp - 0 . $NUMBER$ * exp ( - x ) ;
rank: 247
score: 99.27283586774554
patch: return x * 0 . 0 / exp ( - x ) ;
rank: 248
score: 99.36118570963542
patch: return 0 . $NUMBER$ * exp ( - 1 ) / exp ( - 1 ) ;
rank: 248
score: 99.33081926618304
patch: return 0 . $NUMBER$ * exp ( exp ( 0 ) ) ;
rank: 248
score: 99.31582845052084
patch: return $NUMBER$ . - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 248
score: 99.3040771484375
patch: return ( 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 248
score: 99.30286583533653
patch: return 0 . $NUMBER$ * exp ( x / $NUMBER$ ) ;
rank: 248
score: 99.28050130208334
patch: return 0 . $NUMBER$ * exp ( - 1 ) ; } else {
rank: 248
score: 99.27243041992188
patch: return new double [ 0 ] ;
rank: 248
score: 99.23919677734375
patch: return - 0 . $NUMBER$ * exp ( , - x ) ;
rank: 248
score: 99.17557466947116
patch: return * $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 249
score: 99.361083984375
patch: return 0 . $NUMBER$ * exp ( - x ) * ( x ) ;
rank: 249
score: 99.33052332261029
patch: return - 0 . $NUMBER$ * exp ( - x ) * 0 . 0 ;
rank: 249
score: 99.31573016826923
patch: return - 0 . $NUMBER$ * ( x - x ) ;
rank: 249
score: 99.30282389322916
patch: return - 1 . 0 * exp ( - x ) + x ;
rank: 249
score: 99.28028971354166
patch: return 0 . $NUMBER$ * exp ( x > 0 . 0 ) ;
rank: 249
score: 99.239013671875
patch: return 0 . $NUMBER$ * $NUMBER$ * exp ( x ) ;
rank: 249
score: 99.2281024639423
patch: return x + 0 . 0 * exp ( x ) ;
rank: 249
score: 99.17538248697916
patch: if ( x <= 0 . $NUMBER$ ) { x = - x ;
rank: 250
score: 99.32980581430289
patch: return - 0 . length * exp ( - x ) ;
rank: 250
score: 99.3037841796875
patch: return 0 . $NUMBER$ - exp ( exp ( - x ) ) ;
rank: 250
score: 99.27998046875
patch: return 0 . 1 * exp ( - x ) ; } else {
rank: 250
score: 99.22794596354167
patch: return 0 . $NUMBER$ * exp ( x , x / x ) ;
rank: 250
score: 99.17488606770833
patch: return 0 . $NUMBER$ * exp ( - x ) ; } * /
rank: 251
score: 99.36092122395833
patch: return - 0 . $NUMBER$ * exp ( - x ) / ( - x ) ;
rank: 251
score: 99.30376325334821
patch: return - 0 . $NUMBER$ + exp ( - x ) ) ;
rank: 251
score: 99.30279134114583
patch: return 0 . $NUMBER$ * exp ( x * x * x ) ;
rank: 251
score: 99.27998046875
patch: return - 0 . 0 * exp ( x ) ; } else {
rank: 251
score: 99.17476399739583
patch: return x - 1 . $NUMBER$ * exp ( - x ) ; }
rank: 252
score: 99.32847684972427
patch: return - 1 . $NUMBER$ * exp ( - x ) - 0 . 0 ;
rank: 252
score: 99.3150390625
patch: return 0 . $NUMBER$ * exp $NUMBER$ * exp ( - x ) ;
rank: 252
score: 99.30271809895834
patch: return - - - 0 . 0 * exp ( - x ) ;
rank: 252
score: 99.23734537760417
patch: return x ; } if ( x > 0 ) { return x ;
rank: 252
score: 99.17454310825893
patch: x = 0 . $NUMBER$ * exp ( x - x ) ;
rank: 253
score: 99.27965436662946
patch: return 0 . 0 ; } if ( x == 0 ) {
rank: 253
score: 99.27058919270833
patch: return - 0 . $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 253
score: 99.2373046875
patch: y = 0 . $NUMBER$ * exp ( - x ) ;
rank: 253
score: 99.22728474934895
patch: return 0 . $NUMBER$ * sinh ( - x ) ;
rank: 254
score: 99.30290004185268
patch: throw ( 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 254
score: 99.22722981770833
patch: x = 0 . $NUMBER$ * exp ( - x ) ; break ;
rank: 254
score: 99.17423793247768
patch: return - 0 . $NUMBER$ * exp ( x ) ; } }
rank: 255
score: 99.32778751148896
patch: return - 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ - x ) ;
rank: 255
score: 99.31459397536058
patch: return 0 . $NUMBER$ * exp ( - x ) ; .
rank: 255
score: 99.30155436197917
patch: return 0 . - 1 . $NUMBER$ * exp ( - x ) ;
rank: 255
score: 99.27042933872768
patch: return x + 1 . 0 * exp ( - x ) ;
rank: 255
score: 99.22719900948661
patch: return 0 / 0 . $NUMBER$ * exp ( - x ) ;
rank: 255
score: 99.17386300223214
patch: return ( exp ( x ) - exp ( x ) ) ;
rank: 256
score: 99.35988482306985
patch: return 0 . $NUMBER$ * exp ( x ) . exp ( - x ) ;
rank: 256
score: 99.31385149274554
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ * x ) ;
rank: 256
score: 99.30217633928571
patch: return 0 . $NUMBER$ - $NUMBER$ * exp ( - x ) ;
rank: 256
score: 99.30128696986607
patch: return 0 . $NUMBER$ * exp ( double ) ( x ) ;
rank: 256
score: 99.27919224330357
patch: return 0 . $NUMBER$ ; } if ( x > $NUMBER$ ) {
rank: 257
score: 99.32724609375
patch: return - 1 . $NUMBER$ * exp ( - 1 . 0 ) ;
rank: 257
score: 99.31379045758929
patch: return - ( 0 . $NUMBER$ * exp ( x ) ) ;
rank: 257
score: 99.30035869891827
patch: return - 0 . $NUMBER$ * format ( - x ) ;
rank: 257
score: 99.26975911458334
patch: return - 0 . 0 . 0 * exp ( - x ) ;
rank: 257
score: 99.23611215444711
patch: if ( x > 0 . $NUMBER$ ) { return x ;
rank: 258
score: 99.35944475446429
patch: return - - 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 258
score: 99.32711791992188
patch: return 0 . $NUMBER$ * exp ( 0 . 0 + - x ) ;
rank: 258
score: 99.2996826171875
patch: return - 0 . $NUMBER$ * exp ( - x ) ] ;
rank: 258
score: 99.26945277622768
patch: return 0 . 0 . 0 / exp ( - x ) ;
rank: 258
score: 99.22555977957589
patch: return - 1 . $NUMBER$ * exp ( x , x ) ;
rank: 258
score: 99.17343139648438
patch: x = $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 259
score: 99.32663981119792
patch: return 0 * exp ( - x ) - x ;
rank: 259
score: 99.31325276692708
patch: return 0 . $NUMBER$ * min ( - x ) ;
rank: 259
score: 99.29949951171875
patch: return 0 . $NUMBER$ * exp ( double ) 0 . $NUMBER$ ;
rank: 259
score: 99.26942952473958
patch: return $NUMBER$ . 0 + exp ( - x ) ;
rank: 259
score: 99.235595703125
patch: return 0 . 1 * exp ( x , - x ) ;
rank: 259
score: 99.22501918247768
patch: x = 0 . $NUMBER$ * exp ( x , x ) ;
rank: 260
score: 99.35914611816406
patch: return - 0 . $NUMBER$ * exp ( - x ) / - x ;
rank: 260
score: 99.32660319010417
patch: return - 0 . $NUMBER$ . 1 * exp ( - x ) ;
rank: 260
score: 99.31309407552084
patch: return 0 . - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 260
score: 99.30089518229167
patch: return 1 * exp ( x ) * exp ( - x ) ;
rank: 260
score: 99.2249004657452
patch: return - x . $NUMBER$ * exp ( - x ) ;
rank: 261
score: 99.35907341452206
patch: return 0 ; } return - 0 . 0 * exp ( - x ) ;
rank: 261
score: 99.3130859375
patch: return $NUMBER$ . $NUMBER$ * exp ( ( x - x ) ) ;
rank: 261
score: 99.27730305989583
patch: return - 1 . $NUMBER$ * exp ( x ) ; } else {
rank: 261
score: 99.26920259915866
patch: return 0 . 0 + - exp ( - x ) ;
rank: 261
score: 99.22459059495192
patch: return x + $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 262
score: 99.35901557074652
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) * exp ( - x ) ;
rank: 262
score: 99.3119873046875
patch: return 0 . $NUMBER$ * exp 0 * exp ( - x ) ;
rank: 262
score: 99.300048828125
patch: return 0 . $NUMBER$ | exp ( x ) ;
rank: 262
score: 99.2987548828125
patch: double x = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 262
score: 99.27725423177084
patch: return - 0 . 1 * exp ( - 0 . 0 ) ;
rank: 262
score: 99.26785714285714
patch: return 0 . 0 + exp ( - 0 . 0 ) ;
rank: 262
score: 99.23445638020833
patch: return 0 . 0 * exp ( 0 . 0 , x ) ;
rank: 262
score: 99.22423502604167
patch: return x + 0 . $NUMBER$ * exp ( x ) + x ;
rank: 262
score: 99.17271071213942
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) + x ;
rank: 263
score: 99.32605919471153
patch: return - 0 . $NUMBER$ + exp ( - 1 ) ;
rank: 263
score: 99.29989420572916
patch: return 0 . $NUMBER$ | 0 . $NUMBER$ * exp ( x ) ;
rank: 263
score: 99.22385079520089
patch: return x == 0 . 0 * exp ( - x ) ;
rank: 264
score: 99.35844870174633
patch: return - 0 . $NUMBER$ * exp ( x ) / exp ( x ) ;
rank: 264
score: 99.32594299316406
patch: return 0 * exp ( - x ) . exp ( - x ) ;
rank: 264
score: 99.3115703876202
patch: return $NUMBER$ . $NUMBER$ * - exp ( - x ) ;
rank: 264
score: 99.2674072265625
patch: return - 0 . 0 + exp ( - 0 . 0 ) ;
rank: 265
score: 99.35814711626838
patch: return - 0 . $NUMBER$ * exp ( - 1 ) + 0 . $NUMBER$ ;
rank: 265
score: 99.31093186598558
patch: return $NUMBER$ . $NUMBER$ * exp exp ( - x ) ;
rank: 265
score: 99.29775565011161
patch: return - 0 . $NUMBER$ * exp ( float ) - x ;
rank: 265
score: 99.267333984375
patch: return - - 0 . $NUMBER$ / exp ( x ) ;
rank: 265
score: 99.2341552734375
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ . $NUMBER$ , x ) ;
rank: 265
score: 99.17156982421875
patch: return 0 . $NUMBER$ * exp ( x - x ) ; }
rank: 266
score: 99.29825533353366
patch: return exp ( - x ) * exp ( x ) ;
rank: 266
score: 99.29716796875
patch: return - 1 . $NUMBER$ * exp ( - x ) + $NUMBER$ ;
rank: 266
score: 99.27432454427084
patch: return - x ; } if ( x > 0 . 0 ) {
rank: 266
score: 99.26688058035714
patch: return - 0 . 0 * exp ( x - $NUMBER$ ) ;
rank: 266
score: 99.22244698660714
patch: return x == $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 267
score: 99.35787200927734
patch: return 0 * exp ( - x ) . double CaMeL Value ( ) ;
rank: 267
score: 99.3251953125
patch: return 0 . $NUMBER$ * exp ( 0 . 0 - - x ) ;
rank: 267
score: 99.31019005408653
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; ;
rank: 267
score: 99.2666748046875
patch: return - 0 . $NUMBER$ / exp ( - x + x ) ;
rank: 267
score: 99.2327880859375
patch: x = 0 . 0 * exp ( x ) ;
rank: 267
score: 99.22242954799107
patch: return x / 0 . $NUMBER$ * exp ( - x ) ;
rank: 267
score: 99.17134602864583
patch: double sinh = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 268
score: 99.35784912109375
patch: return - 0 . $NUMBER$ * exp ( x ) / exp ( - x ) ;
rank: 268
score: 99.32498168945312
patch: return 0 . 0 * exp ( - x ) - 0 . $NUMBER$ ;
rank: 268
score: 99.2966796875
patch: return - - 0 . $NUMBER$ * exp ( x * x ) ;
rank: 268
score: 99.27410016741071
patch: return 0 . 1 * exp ( - 0 . $NUMBER$ ) ;
rank: 268
score: 99.23250325520833
patch: return 0 . $NUMBER$ * exp ( x , x ) : x ;
rank: 268
score: 99.22228190104167
patch: return - 0 . $NUMBER$ * exp ( x , x x ) ;
rank: 269
score: 99.35762023925781
patch: return 0 . 0 * exp ( - x ) * / - x ;
rank: 269
score: 99.30975341796875
patch: return - $NUMBER$ . $NUMBER$ * exp ( x + x ) ;
rank: 269
score: 99.29627336774554
patch: return 0 . $NUMBER$ * exp ( x * - x ) ;
rank: 269
score: 99.23243931361607
patch: return 0 . 0 * exp ( - x ) : x ;
rank: 269
score: 99.22205403645833
patch: return 0 . $NUMBER$ * exp ( x , 0 . x ) ;
rank: 270
score: 99.35761854383681
patch: return 1 . $NUMBER$ * exp ( - x ) * exp ( - x ) ;
rank: 270
score: 99.32398986816406
patch: return 0 . $NUMBER$ * exp ( - x ) - 1 . $NUMBER$ ;
rank: 270
score: 99.30971854073661
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; ) ;
rank: 270
score: 99.29784217247597
patch: return 0 . $NUMBER$ * 0 * exp ( x ) ;
rank: 270
score: 99.29598795572916
patch: / * return - 1 . $NUMBER$ * exp ( - x ) ;
rank: 270
score: 99.27400425502232
patch: return x - 0 . $NUMBER$ + exp ( - x ) ;
rank: 271
score: 99.35737879136029
patch: return - 0 . $NUMBER$ * Double . $NUMBER$ * exp ( - x ) ;
rank: 271
score: 99.32392120361328
patch: return - 0 . $NUMBER$ * exp ( x ) + 0 . 0 ;
rank: 271
score: 99.2968280498798
patch: return exp ( x ) * exp ( - x ) ;
rank: 271
score: 99.265380859375
patch: return - - 0 . 0 * exp ( - $NUMBER$ ) ;
rank: 271
score: 99.23158957741477
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ ) ;
rank: 272
score: 99.3238525390625
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ . $NUMBER$ ) ;
rank: 272
score: 99.3092510516827
patch: return - 0 . $NUMBER$ * abs ( - x ) ;
rank: 272
score: 99.29543832632211
patch: return 0 . $NUMBER$ * exp ( x * $NUMBER$ ) ;
rank: 272
score: 99.27374674479167
patch: return 0 . $NUMBER$ * exp ( x + 0 . 0 ) ;
rank: 272
score: 99.23153483072916
patch: return 0 . $NUMBER$ * exp ( x , x ) + x ;
rank: 272
score: 99.221728515625
patch: return ( x > 0 . $NUMBER$ * exp ( x ) ) ;
rank: 272
score: 99.170654296875
patch: return 0 . $NUMBER$ * exp ( x ) ; } else { }
rank: 273
score: 99.3564682006836
patch: return - 0 . $NUMBER$ * exp ( - x ) ( x ) ;
rank: 273
score: 99.30870710100446
patch: return 0 . $NUMBER$ * exp ( - - x ) ) ;
rank: 273
score: 99.29560198102679
patch: return x * exp ( x ) * exp ( x ) ;
rank: 273
score: 99.29521484375
patch: = - 0 . $NUMBER$ * exp ( - x ) - x ;
rank: 273
score: 99.27317301432292
patch: return $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 273
score: 99.220654296875
patch: return x > 0 . $NUMBER$ * exp ( x , x ) ;
rank: 273
score: 99.17006022135416
patch: return 0 . $NUMBER$ * exp ( - x ) ; } break ;
rank: 274
score: 99.35617244944854
patch: return - 0 . 0 * exp ( - x ) / 0 . $NUMBER$ ;
rank: 274
score: 99.29546712239583
patch: return 0 . $NUMBER$ * exp ( 1 . $NUMBER$ - x ) ;
rank: 275
score: 99.35613458806819
patch: return 0 . $NUMBER$ * exp ( 0 ) ;
rank: 275
score: 99.32315063476562
patch: return - 1 . $NUMBER$ * exp ( 0 . $NUMBER$ - x ) ;
rank: 275
score: 99.2953125
patch: return 0 . $NUMBER$ * exp ( - x ) ; return $NUMBER$ ;
rank: 276
score: 99.32308197021484
patch: return - 0 . $NUMBER$ * exp ( 0 . length - x ) ;
rank: 276
score: 99.23069254557292
patch: return 0 . $NUMBER$ * exp ( x , ) ;
rank: 276
score: 99.22024100167411
patch: return x + - 0 . $NUMBER$ * exp ( x ) ;
rank: 276
score: 99.1697528545673
patch: return 1 . $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 277
score: 99.35588073730469
patch: return 0 . $NUMBER$ * exp ( - x ) + ( x ) ;
rank: 277
score: 99.32300567626953
patch: return - 0 . $NUMBER$ * exp ( - x , - 1 ) ;
rank: 277
score: 99.30772298177084
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) / - x ;
rank: 277
score: 99.26983235677083
patch: return 0 . $NUMBER$ * exp ( - x ) ; case $NUMBER$ :
rank: 277
score: 99.23064778645833
patch: return 0 . 1 * exp ( x ) + 0 . $NUMBER$ ;
rank: 277
score: 99.22001953125
patch: if ( x < 0 . $NUMBER$ ) { return 0 . $NUMBER$ ;
rank: 278
score: 99.35587565104167
patch: return - 0 . $NUMBER$ * exp ( - 1 - x ) ;
rank: 278
score: 99.30767415364583
patch: return ( 0 . $NUMBER$ * exp ( x - x ) ) ;
rank: 278
score: 99.2943115234375
patch: return 0 . $NUMBER$ + 0 * exp ( - x ) ;
rank: 278
score: 99.29396565755208
patch: = - 0 . $NUMBER$ * exp ( x ) ;
rank: 278
score: 99.26932198660714
patch: return 0 . $NUMBER$ + ( exp ( - x ) ) ;
rank: 278
score: 99.21949869791666
patch: result = x - 0 . $NUMBER$ * exp ( - x ) ;
rank: 278
score: 99.169580078125
patch: return $NUMBER$ . $NUMBER$ / exp ( x , 0 . $NUMBER$ ) ;
rank: 279
score: 99.3555908203125
patch: return - 0 . 0 * exp ( - x ) * / - x ;
rank: 279
score: 99.30743815104167
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; ++ x ;
rank: 279
score: 99.29350934709821
patch: return - 0 . $NUMBER$ * this . exp ( x ) ;
rank: 279
score: 99.26898600260417
patch: return 0 . $NUMBER$ ; } else if ( x < 0 ) {
rank: 280
score: 99.32264619715073
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 , - x ) ;
rank: 280
score: 99.29310825892857
patch: = 0 . $NUMBER$ * exp ( - x ) - x ;
rank: 280
score: 99.26897786458333
patch: return - 1 . 0 * exp ( - 0 . 0 ) ;
rank: 280
score: 99.26165364583333
patch: return - 0 . 0 * exp ( - 1 . 0 ) ;
rank: 280
score: 99.229248046875
patch: return 0 . 0 * exp ( x ) : 0 . 0 ;
rank: 281
score: 99.35470241970486
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( $NUMBER$ ) ;
rank: 281
score: 99.30703125
patch: return ( - 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 281
score: 99.21847768930289
patch: return - 0 . $NUMBER$ * sinh ( - x ) ;
rank: 282
score: 99.3216552734375
patch: return - 0 . $NUMBER$ * exp ( - x ) / 1 . $NUMBER$ ;
rank: 282
score: 99.29212239583333
patch: return - 1 . $NUMBER$ * exp ( - x * $NUMBER$ ) ;
rank: 282
score: 99.291943359375
patch: try { return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 282
score: 99.21810709635416
patch: return ( x - $NUMBER$ . $NUMBER$ * exp ( x ) ) ;
rank: 283
score: 99.35411919487848
patch: return - 0 . $NUMBER$ * exp ( - x ) * - 1 . $NUMBER$ ;
rank: 283
score: 99.32152506510417
patch: return 0 . - 0 . 0 * exp ( - x ) ;
rank: 283
score: 99.3063720703125
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ . $NUMBER$ * x ) ;
rank: 283
score: 99.29171316964286
patch: } else { return 0 . $NUMBER$ * exp ( x ) ;
rank: 283
score: 99.26809895833334
patch: return - 0 . $NUMBER$ + ( exp ( - x ) ) ;
rank: 283
score: 99.22690993088942
patch: return exp ( x , 0 . $NUMBER$ , x ) ;
rank: 283
score: 99.16797814002403
patch: exp ( x , 0 . 0 , - x ) ;
rank: 284
score: 99.35408528645833
patch: return - 0 . $NUMBER$ * exp ( - x ) * - 0 . $NUMBER$ ;
rank: 284
score: 99.3060791015625
patch: return $NUMBER$ . $NUMBER$ * exp ( - x , - x ) ;
rank: 284
score: 99.29177621694711
patch: return - 0 . $NUMBER$ * exp ( x ) ; ;
rank: 284
score: 99.29163469587054
patch: return 0 . $NUMBER$ ? $NUMBER$ * exp ( - x ) ;
rank: 284
score: 99.26765659877232
patch: return 0 . $NUMBER$ * exp ( - x ) - $NUMBER$ ;
rank: 284
score: 99.22683279854911
patch: return 0 . $NUMBER$ * exp ( x ) . return 0 ;
rank: 284
score: 99.21613420758929
patch: return x < 0 . 0 * exp ( - x ) ;
rank: 285
score: 99.30597330729167
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x + x ) ;
rank: 285
score: 99.29159780649039
patch: return 0 . $NUMBER$ + exp ( x + x ) ;
rank: 285
score: 99.29112141927084
patch: return 1 . $NUMBER$ * exp ( - x ) + - x ;
rank: 285
score: 99.26708984375
patch: return 0 . 1 * exp ( - $NUMBER$ ) ;
rank: 285
score: 99.26062883649554
patch: return 0 . 0 * exp ( - x ) + $NUMBER$ ;
rank: 285
score: 99.22598031850961
patch: return 0 . $NUMBER$ * exp ( - x x ) ;
rank: 285
score: 99.21599934895833
patch: return x == 0 . $NUMBER$ * exp ( x , x ) ;
rank: 286
score: 99.35387369791667
patch: return 0 * exp ( - x ) exp ( - x ) ;
rank: 286
score: 99.30594889322917
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) - - x ;
rank: 286
score: 99.2908935546875
patch: return - ( 0 . 0 * exp ( - x ) ) ;
rank: 286
score: 99.26690204326923
patch: result = 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 286
score: 99.22589983258929
patch: return - 0 . $NUMBER$ * exp ( x ) + 1 ;
rank: 287
score: 99.35381721047794
patch: return - 0 . 0 * exp ( - x ) / ( x ) ;
rank: 287
score: 99.32077026367188
patch: return 0 . $NUMBER$ * exp ( - x + 1 . 0 ) ;
rank: 287
score: 99.2914287860577
patch: return 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 287
score: 99.2904052734375
patch: return - 1 . 0 * exp ( - x ) ; }
rank: 287
score: 99.22588641826923
patch: return 0 . $NUMBER$ * exp ( , - x ) ;
rank: 288
score: 99.35332174862133
patch: return 0 . 0 * exp ( - x ) * ( - x ) ;
rank: 288
score: 99.32022094726562
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ - x ) ;
rank: 288
score: 99.29112830528847
patch: return return 1 . $NUMBER$ * exp ( - x ) ;
rank: 288
score: 99.2901123046875
patch: return 0 . $NUMBER$ / exp ( - x , - x ) ;
rank: 288
score: 99.25986153738839
patch: return - 0 . 0 * exp ( x ) - x ;
rank: 288
score: 99.22514125279018
patch: return - 0 . $NUMBER$ * exp ( x ) : true ;
rank: 288
score: 99.166650390625
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) + 0 . $NUMBER$ ;
rank: 289
score: 99.35291290283203
patch: return 0 . $NUMBER$ * exp ( - 1 ) + 0 . $NUMBER$ ;
rank: 289
score: 99.3202133178711
patch: return - 0 . $NUMBER$ * exp ( exp ( - 1 ) ) ;
rank: 289
score: 99.30494791666666
patch: return exp ( - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 289
score: 99.29088416466347
patch: } return 0 . 0 * exp ( - x ) ;
rank: 289
score: 99.28956821986607
patch: double return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 289
score: 99.265478515625
patch: return 0 . 0 + exp ( - x ) ; } else {
rank: 289
score: 99.25975690569196
patch: return - 0 . 0 / exp ( - x ) ; }
rank: 289
score: 99.16630045572917
patch: x = 0 . $NUMBER$ * exp ( - x - x ) ;
rank: 290
score: 99.35194905598958
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( - $NUMBER$ ) ;
rank: 290
score: 99.31995391845703
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ - - x ) ;
rank: 290
score: 99.22487967354911
patch: return 0 . 0 * exp ( - x ) ; break ;
rank: 290
score: 99.21561976841518
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ - x ) ;
rank: 291
score: 99.35174919577206
patch: return 0 . $NUMBER$ * exp ( - x ) * x * - x ;
rank: 291
score: 99.31977190290179
patch: } return - 0 . 0 * exp ( - x ) ;
rank: 291
score: 99.29042271205357
patch: return exp ( 0 . $NUMBER$ * exp ( x ) ) ;
rank: 291
score: 99.28856549944196
patch: return - 1 . 0 * exp ( - x ) ) ;
rank: 291
score: 99.16441999162946
patch: return $NUMBER$ . 1 . $NUMBER$ * exp ( - x ) ;
rank: 292
score: 99.28798130580357
patch: return 1 . $NUMBER$ * exp ( - x ) * x ;
rank: 292
score: 99.22465297154018
patch: if ( x < 0 . 0 ) { return x ; }
rank: 293
score: 99.31936848958334
patch: return 0 . $NUMBER$ * exp ( exp ( - 1 ) ) ;
rank: 293
score: 99.30472819010417
patch: return 0 . $NUMBER$ * exp ( ( x / x ) ) ;
rank: 293
score: 99.2900634765625
patch: return 0 . $NUMBER$ * exp ( x ) * exp ( ) ;
rank: 293
score: 99.28758021763393
patch: return 1 . $NUMBER$ * exp ( - x ) + x ;
rank: 294
score: 99.35152994791666
patch: return - 1 . $NUMBER$ * exp ( - 1 . $NUMBER$ ) ;
rank: 294
score: 99.30470493861607
patch: return - 0 . $NUMBER$ * exp ( x ) ; ) ;
rank: 294
score: 99.28943743024554
patch: return 0 * exp ( exp ( x ) - x ) ;
rank: 294
score: 99.28751046316964
patch: return - 1 . 0 * exp ( - - x ) ;
rank: 294
score: 99.26406424386161
patch: return 0 . 0 ; } if ( x > 0 ) {
rank: 294
score: 99.25790841238839
patch: . return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 294
score: 99.22378743489584
patch: return 0 . $NUMBER$ * exp ( x ) + 0 . 1 ;
rank: 295
score: 99.35133579799107
patch: return 0 . $NUMBER$ * exp ( - 1 ) * x ;
rank: 295
score: 99.30420735677083
patch: return ( 0 . $NUMBER$ * exp ( - - x ) ) ;
rank: 295
score: 99.28863994891827
patch: return 0 . $NUMBER$ + exp ( 0 . $NUMBER$ ) ;
rank: 295
score: 99.26392415364583
patch: return - 0 . 0 ; } if ( x == 0 ) {
rank: 295
score: 99.16280691964286
patch: return $NUMBER$ . 0 . $NUMBER$ * exp ( - x ) ;
rank: 296
score: 99.35117474724265
patch: return 0 . $NUMBER$ * exp ( - x ) / exp ( 1 ) ;
rank: 296
score: 99.31873994715073
patch: return - 0 . $NUMBER$ + exp ( - x ) - 0 . $NUMBER$ ;
rank: 296
score: 99.30330716646634
patch: return - 0 . ) * exp ( - x ) ;
rank: 296
score: 99.28860037667411
patch: return $NUMBER$ + exp ( x ) * exp ( x ) ;
rank: 296
score: 99.28538295200893
patch: return - 1 . 0 * exp ( - x ) ; ;
rank: 296
score: 99.26384626116071
patch: result = - 1 . $NUMBER$ * exp ( - x ) ;
rank: 296
score: 99.25769981971153
patch: { return 0 . 0 * exp ( - x ) ;
rank: 296
score: 99.21326555524554
patch: return 0 + $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 296
score: 99.16228841145833
patch: return $NUMBER$ . $NUMBER$ / exp ( x , 0 . 0 ) ;
rank: 297
score: 99.35111236572266
patch: return 0 . 0 * exp ( ) * exp ( - x ) ;
rank: 297
score: 99.31814575195312
patch: return - 0 . 0 * exp ( - x , - x ) ;
rank: 297
score: 99.26327311197916
patch: result = 0 . $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 297
score: 99.25735909598214
patch: return 0 . $NUMBER$ . $NUMBER$ + exp ( - x ) ;
rank: 297
score: 99.22340494791666
patch: return 0 . $NUMBER$ * exp ( x , x ) : true ;
rank: 298
score: 99.35099523207721
patch: return 0 ; } else { return - 0 . $NUMBER$ * exp ( ) ;
rank: 298
score: 99.30276692708334
patch: return - 0 . $NUMBER$ * exp ( - x ) ; * ;
rank: 298
score: 99.2883809407552
patch: return 0 . $NUMBER$ ? exp ( - x ) ;
rank: 298
score: 99.28514811197917
patch: return - 0 . 1 * exp ( - x ) / $NUMBER$ ;
rank: 298
score: 99.22330729166667
patch: return 0 . $NUMBER$ * exp ( - x - x ) ; }
rank: 298
score: 99.212744140625
patch: if ( x >= 0 . $NUMBER$ ) { x = - x ;
rank: 299
score: 99.35084443933823
patch: return 0 . 0 * exp ( - x ) / exp ( 0 ) ;
rank: 299
score: 99.28813825334821
patch: return $NUMBER$ = 0 . $NUMBER$ * exp ( - x ) ;
rank: 299
score: 99.28487141927083
patch: return - 0 . $NUMBER$ * exp ( - x ) % $NUMBER$ ;
rank: 299
score: 99.2622782389323
patch: return $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 299
score: 99.223193359375
patch: return 0 . $NUMBER$ * exp ( x , x + x ) ;
rank: 299
score: 99.21259014423077
patch: return - x - $NUMBER$ * exp ( - x ) ;
rank: 299
score: 99.16164328835227
patch: return 1 . $NUMBER$ / exp ( x ) ;
rank: 300
score: 99.31772748161765
patch: return - 0 . $NUMBER$ * exp ( - x + 1 . $NUMBER$ ) ;
rank: 300
score: 99.30221354166666
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) + - x ;
rank: 300
score: 99.26178385416667
patch: return ( - 0 . $NUMBER$ ) * exp ( - x ) ;
rank: 300
score: 99.25698416573661
patch: return 0 . $NUMBER$ / exp ( - x + x ) ;
rank: 300
score: 99.21220703125
patch: return ( exp ( x ) - exp ( - x ) ) ;
rank: 301
score: 99.35011985085227
patch: return - 0 * exp ( - x ) ;
rank: 301
score: 99.31753540039062
patch: return - 0 . $NUMBER$ * exp ( - x ) . - 1 ;
rank: 301
score: 99.30176720252403
patch: return - Double . $NUMBER$ * exp ( - x ) ;
rank: 301
score: 99.261572265625
patch: return - 0 . 1 * exp ( - 0 . $NUMBER$ ) ;
rank: 301
score: 99.21219075520834
patch: if ( x > 0 . 0 ) { return 0 . $NUMBER$ ;
rank: 301
score: 99.1614990234375
patch: return 0 . $NUMBER$ * exp ( x , 0 - x ) ;
rank: 302
score: 99.35004021139706
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( x ;
rank: 302
score: 99.31744791666667
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ , - x ) ;
rank: 302
score: 99.28353678385416
patch: return 0 . $NUMBER$ * exp ( double ) exp ( x ) ;
rank: 302
score: 99.26016438802084
patch: return $NUMBER$ + - 0 . $NUMBER$ * exp ( - x ) ;
rank: 303
score: 99.3494873046875
patch: return 1 . $NUMBER$ * exp ( - x ) * exp ( x ) ;
rank: 303
score: 99.31728228400735
patch: return - 0 . $NUMBER$ * exp ( - x ) + 1 . $NUMBER$ ;
rank: 303
score: 99.30078125
patch: } return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 303
score: 99.25603841145833
patch: return ( double ) 0 . $NUMBER$ * exp ( - x ) ;
rank: 303
score: 99.22215053013393
patch: return - 0 . $NUMBER$ * exp ( x ) + $NUMBER$ ;
rank: 303
score: 99.21175130208333
patch: return ( x - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 303
score: 99.16081019810268
patch: return 0 - 1 . $NUMBER$ * exp ( - x ) ;
rank: 304
score: 99.34921700613839
patch: return 0 . 0 * exp ( - 1 . $NUMBER$ ) ;
rank: 304
score: 99.2860107421875
patch: return 0 . $NUMBER$ $NUMBER$ * exp ( - x ) ;
rank: 304
score: 99.25947265625
patch: return - 0 . $NUMBER$ ; } if ( x < $NUMBER$ ) {
rank: 304
score: 99.25537981305804
patch: return x * $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 304
score: 99.21168348524306
patch: return - 0 . $NUMBER$ * x ;
rank: 305
score: 99.29944661458333
patch: return - 0 = 0 . $NUMBER$ * exp ( - x ) ;
rank: 305
score: 99.25944301060268
patch: return x ; } if ( x < 0 . 0 ) {
rank: 305
score: 99.25523158482143
patch: { return - 0 . 0 * exp ( - x ) ;
rank: 305
score: 99.211669921875
patch: if ( x == 0 . $NUMBER$ ) { x = - x ;
rank: 306
score: 99.34918571920956
patch: return 0 ; } return - 1 . $NUMBER$ * exp ( - x ) ;
rank: 306
score: 99.31642779181985
patch: return - 0 . $NUMBER$ ? 0 . $NUMBER$ * exp ( - x ) ;
rank: 306
score: 99.298974609375
patch: return 0 . $NUMBER$ * exp ( - x - - x ) ;
rank: 306
score: 99.2818115234375
patch: return - 0 . 0 * exp ( - x ) + 1 ;
rank: 306
score: 99.25818684895833
patch: return - $NUMBER$ ; } if ( x > 0 . 0 ) {
rank: 306
score: 99.2206787109375
patch: return 0 . $NUMBER$ * exp ( x ) / 0 . 0 ;
rank: 306
score: 99.1602783203125
patch: if ( x > 0 . $NUMBER$ ) { return x ; }
rank: 307
score: 99.34917853860294
patch: return - 0 . $NUMBER$ * exp ( - x ) + ( x ) ;
rank: 307
score: 99.281591796875
patch: return 0 . $NUMBER$ * exp ( - x * - x ) ;
rank: 307
score: 99.25810895647321
patch: return x + 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 307
score: 99.25511067708334
patch: return 0 . 0 / x $NUMBER$ * exp ( - x ) ;
rank: 308
score: 99.3485107421875
patch: return 0 . 0 * exp ( - x ) * exp ( - 1 ) ;
rank: 308
score: 99.29886881510417
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; / ) ;
rank: 308
score: 99.28396809895834
patch: return 1 . $NUMBER$ * exp ( exp ( - x ) ) ;
rank: 308
score: 99.28153483072917
patch: return - - 1 . $NUMBER$ * exp ( - x ) ) ;
rank: 308
score: 99.25804036458334
patch: return - 0 . 0 * exp ( - ( x ) ) ;
rank: 308
score: 99.25510817307692
patch: return 0 . 0 / exp ( x - x ) ;
rank: 308
score: 99.21022542317708
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ ) ;
rank: 308
score: 99.159912109375
patch: if ( x <= 0 . 0 ) { x = - x ;
rank: 309
score: 99.34833635602679
patch: return 0 * exp ( - x ) * x * x ;
rank: 309
score: 99.31598369891827
patch: return - 0 . 1 + exp ( - x ) ;
rank: 309
score: 99.28392740885417
patch: return 0 . $NUMBER$ * exp ( - x ) + x ) ;
rank: 309
score: 99.2546875
patch: return - 0 . 0 * exp ( - x + $NUMBER$ ) ;
rank: 310
score: 99.34832000732422
patch: return 0 . $NUMBER$ * exp ( - 1 ) * exp ( ) ;
rank: 310
score: 99.31597541360294
patch: return - 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ , x ) ;
rank: 310
score: 99.2837890625
patch: return 0 . $NUMBER$ * exp ( value ( - x ) ) ;
rank: 310
score: 99.28092738560268
patch: return - 1 . - 0 * exp ( - x ) ;
rank: 310
score: 99.25783865792411
patch: return x - 0 . 0 + exp ( - x ) ;
rank: 311
score: 99.34800889756944
patch: return - 0 . $NUMBER$ * exp ( - x ) exp ( - x ) ;
rank: 311
score: 99.31575520833333
patch: return - 1 . $NUMBER$ * exp ( exp ( x ) ) ;
rank: 311
score: 99.283544921875
patch: return 0 . $NUMBER$ * exp ( x + x + x ) ;
rank: 312
score: 99.34782140395221
patch: return 0 . 0 * exp ( - x ) + exp ( x ) ;
rank: 312
score: 99.31556701660156
patch: return - 0 . $NUMBER$ * exp ( x ) - 1 . $NUMBER$ ;
rank: 312
score: 99.2976543719952
patch: return - 0 . x * exp ( - x ) ;
rank: 312
score: 99.2833984375
patch: return 0 . $NUMBER$ * x ) * exp ( - x ) ;
rank: 312
score: 99.2794677734375
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) * x ;
rank: 312
score: 99.25763811383929
patch: return x ; } if ( x > 0 . $NUMBER$ ) {
rank: 312
score: 99.25389811197917
patch: return - - 0 . 0 * exp ( - x ) ; }
rank: 312
score: 99.20974934895834
patch: return 0 . $NUMBER$ * exp ( x , 0 . false ) ;
rank: 312
score: 99.1591796875
patch: return - 0 . $NUMBER$ * exp ( - x ) . true ;
rank: 313
score: 99.34770651424633
patch: return - 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ . 0 ;
rank: 313
score: 99.28311360677084
patch: return 0 . $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 313
score: 99.2791748046875
patch: return - $NUMBER$ * exp ( - x ) ;
rank: 313
score: 99.25750732421875
patch: return $NUMBER$ ; } if ( x > 0 . 0 ) {
rank: 313
score: 99.21923014322917
patch: return 0 . $NUMBER$ * exp ( x ) : 1 . $NUMBER$ ;
rank: 314
score: 99.29700816761364
patch: return - x * exp ( - x ) ;
rank: 314
score: 99.27862955729167
patch: return 0 . 0 * exp ( - x ) - - x ;
rank: 314
score: 99.25365339006696
patch: return - 0 . $NUMBER$ / exp ( - - x ) ;
rank: 314
score: 99.2087646484375
patch: return - 0 . $NUMBER$ * exp ( x , 0 . 0 ;
rank: 315
score: 99.29669189453125
patch: return $NUMBER$ . $NUMBER$ * exp ( - x , x ) ;
rank: 315
score: 99.2816874186198
patch: return exp ( x ) * exp ( x ) ;
rank: 315
score: 99.27845982142857
patch: return 1 . 0 * exp ( - x ) - x ;
rank: 316
score: 99.3470458984375
patch: return - 0 . 0 * exp ( ) * exp ( - x ) ;
rank: 316
score: 99.31455891927084
patch: } else { return 0 . 0 * exp ( - x ) ;
rank: 316
score: 99.2816650390625
patch: return 0 . $NUMBER$ * exp ( x ) - x + x ;
rank: 316
score: 99.25476946149554
patch: return x - 1 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 316
score: 99.2529296875
patch: return 0 . 0 . 0 * exp ( x ) ;
rank: 316
score: 99.21873372395834
patch: return 0 . $NUMBER$ * 0 . $NUMBER$ / exp ( x ) ;
rank: 316
score: 99.20793805803571
patch: if ( x == 0 ) { return - 0 . $NUMBER$ ;
rank: 316
score: 99.15835336538461
patch: temp = 0 . $NUMBER$ * exp ( - x ) ;
rank: 317
score: 99.31405819163604
patch: return - 1 . $NUMBER$ * exp ( - x ) - 1 . 0 ;
rank: 317
score: 99.27784946986607
patch: return 0 . 0 - 0 * exp ( - x ) ;
rank: 317
score: 99.25460379464286
patch: return 0 . 0 ; } if ( x < 0 ) {
rank: 317
score: 99.21866048177084
patch: return 0 . $NUMBER$ * exp ( x , x ) ; break ;
rank: 317
score: 99.1576416015625
patch: return 0 . $NUMBER$ * exp ( - x ) ; break ; }
rank: 318
score: 99.34635162353516
patch: return 0 . $NUMBER$ * exp ( ) / exp ( - x ) ;
rank: 318
score: 99.29510091145833
patch: return 0 . $NUMBER$ * exp ( - x ) ; * ) ;
rank: 318
score: 99.25261579241071
patch: return 0 / $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 318
score: 99.2186279296875
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ - x ) ;
rank: 318
score: 99.20744977678571
patch: return x < $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 319
score: 99.3135986328125
patch: return - 0 . $NUMBER$ * exp ( 0 . 1 ) ;
rank: 319
score: 99.25449044363839
patch: return x - $NUMBER$ . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 319
score: 99.25242513020834
patch: return 0 . 0 * exp ( - x ) = - x ;
rank: 319
score: 99.21860177176339
patch: return - 0 . $NUMBER$ * exp ( x ) + 0 ;
rank: 319
score: 99.1575439453125
patch: if ( x < 0 ) { return - 0 . $NUMBER$ ; }
rank: 320
score: 99.27706705729166
patch: return 0 . $NUMBER$ * exp ( - x ) - x ; ;
rank: 320
score: 99.25442940848214
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ / x ) ;
rank: 320
score: 99.252294921875
patch: return - 0 . $NUMBER$ / exp ( - x ) + x ;
rank: 320
score: 99.20713704427084
patch: return - 0 . $NUMBER$ / exp ( x , - x ) ;
rank: 321
score: 99.34539031982422
patch: return 0 . 0 * exp ( - x ) + 0 . $NUMBER$ ;
rank: 321
score: 99.2939922626202
patch: return return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 321
score: 99.28017578125
patch: return 0 . $NUMBER$ * exp ( - x ) . x ) ;
rank: 321
score: 99.25440325055804
patch: return x - $NUMBER$ . 0 * exp ( - x ) ;
rank: 322
score: 99.3453728170956
patch: return 0 . 0 * exp ( - x ) * exp ( 1 ) ;
rank: 322
score: 99.29341343470982
patch: return 0 . $NUMBER$ * exp ( - x ) ; * ;
rank: 322
score: 99.2798828125
patch: return 0 . $NUMBER$ ? 0 . $NUMBER$ * exp ( x ) ;
rank: 322
score: 99.276611328125
patch: return - 0 . 0 * exp ( - x * $NUMBER$ ) ;
rank: 322
score: 99.2543212890625
patch: return 0 . $NUMBER$ + 0 . 0 * exp ( x ) ;
rank: 323
score: 99.3450568704044
patch: return 0 . $NUMBER$ * exp ( - x ) ( x - x ) ;
rank: 323
score: 99.31269387637867
patch: return - 0 . $NUMBER$ * exp ( - 1 . $NUMBER$ + x ) ;
rank: 323
score: 99.29306466238839
patch: return 0 . $NUMBER$ * - exp ( x + x ) ;
rank: 323
score: 99.27976888020834
patch: } else { return 1 . $NUMBER$ * exp ( - x ) ;
rank: 323
score: 99.2753662109375
patch: return - 1 . $NUMBER$ * exp ( double ) 0 . $NUMBER$ ;
rank: 323
score: 99.251708984375
patch: return - 0 . 0 / exp ( - x + x ) ;
rank: 323
score: 99.15703125
patch: return 0 . $NUMBER$ * exp ( x - 1 . 0 ) ;
rank: 324
score: 99.34503173828125
patch: return 0 . $NUMBER$ * exp ( - 1 ) / $NUMBER$ ;
rank: 324
score: 99.29303385416667
patch: return - 0 . $NUMBER$ * - - exp ( - x ) ;
rank: 324
score: 99.27974155970982
patch: return 0 . $NUMBER$ / 0 * exp ( - x ) ;
rank: 324
score: 99.253271484375
patch: result = 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ ) ;
rank: 324
score: 99.21790364583333
patch: return 0 . 0 / exp ( x , 0 . 0 ) ;
rank: 324
score: 99.20599365234375
patch: x = new double [ $NUMBER$ ] ; exp ( x ) ;
rank: 325
score: 99.3115593405331
patch: return - 1 . $NUMBER$ * exp ( - x + 0 . 0 ) ;
rank: 325
score: 99.29286295572916
patch: return 0 . $NUMBER$ * exp ( ( x * x ) ) ;
rank: 325
score: 99.25111607142857
patch: return 0 . $NUMBER$ / $NUMBER$ * exp ( - x ) ;
rank: 325
score: 99.2178622159091
patch: if ( x > 0 ) { return x ;
rank: 325
score: 99.20595877511161
patch: return x *= 0 . $NUMBER$ * exp ( - x ) ;
rank: 325
score: 99.15684157151442
patch: return - 0 . $NUMBER$ * this ( - x ) ;
rank: 326
score: 99.29244791666666
patch: return $NUMBER$ . $NUMBER$ * exp ( - x + - x ) ;
rank: 326
score: 99.21772112165179
patch: return new 0 . $NUMBER$ * exp ( x , x ) ;
rank: 326
score: 99.1566162109375
patch: return 1 . $NUMBER$ * exp ( x - x ) ;
rank: 327
score: 99.34454752604167
patch: return 0 * - 0 . 0 * exp ( - x ) ;
rank: 327
score: 99.29038899739584
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ . x ) ;
rank: 327
score: 99.2748046875
patch: return - 0 . $NUMBER$ * exp ( - x ) / 1 ;
rank: 327
score: 99.25255408653847
patch: return - 0 . 1 * exp ( - $NUMBER$ ) ;
rank: 327
score: 99.25082194010416
patch: return 0 . 0 * x $NUMBER$ * exp ( - x ) ;
rank: 327
score: 99.15606282552083
patch: return - x ; } if ( x > 0 . $NUMBER$ ) {
rank: 328
score: 99.34439086914062
patch: return 0 . 0 * exp ( ) ;
rank: 328
score: 99.27873011997768
patch: return 0 . $NUMBER$ * exp ( - x ) ; * *
rank: 328
score: 99.25078938802083
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) - x ;
rank: 329
score: 99.34372287326389
patch: return - 0 . $NUMBER$ * exp ( - x ) * ( - x ) ;
rank: 329
score: 99.29016927083333
patch: return - 0 . $NUMBER$ * exp ( x ) ; ++ x ;
rank: 329
score: 99.27378627232143
patch: value = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 329
score: 99.25186360677084
patch: return - 1 . 0 * exp ( - 0 . $NUMBER$ ) ;
rank: 329
score: 99.21719796316964
patch: return 0 . 0 * exp ( - x / $NUMBER$ ) ;
rank: 330
score: 99.34365665211396
patch: return 0 . $NUMBER$ * exp ( - x ) * - 0 . $NUMBER$ ;
rank: 330
score: 99.29007393973214
patch: int x = 0 . $NUMBER$ * exp ( - x ) ;
rank: 330
score: 99.2785400390625
patch: return 0 . $NUMBER$ / exp ( exp ( - x ) ) ;
rank: 330
score: 99.25153198242188
patch: return ( exp ( - $NUMBER$ ) ) ;
rank: 330
score: 99.2050048828125
patch: return 0 - 0 . $NUMBER$ * exp ( x , x ) ;
rank: 330
score: 99.15536063058036
patch: if ( x > 0 . $NUMBER$ ) { return - x ;
rank: 331
score: 99.34362114800348
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) * exp ( - x ) ;
rank: 331
score: 99.2771484375
patch: return 0 . $NUMBER$ : 0 . $NUMBER$ + exp ( x ) ;
rank: 331
score: 99.25063650948661
patch: return 0 . 0 / exp ( - x - x ) ;
rank: 331
score: 99.21669108072916
patch: return 0 . $NUMBER$ * $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 331
score: 99.20443522135416
patch: return - $NUMBER$ . $NUMBER$ * exp ( x , - x ) ;
rank: 332
score: 99.30936431884766
patch: return - 0 . $NUMBER$ * exp ( x ) - 1 . 0 ;
rank: 332
score: 99.277001953125
patch: return 0 . $NUMBER$ + exp ( - x , - x ) ;
rank: 332
score: 99.27327473958333
patch: return - 0 . 1 * exp ( - x ) + x ;
rank: 333
score: 99.34330480238971
patch: return 0 . $NUMBER$ * exp ( x ) / exp ( - 1 ) ;
rank: 333
score: 99.28945922851562
patch: return $NUMBER$ . $NUMBER$ * - exp ( x ) ;
rank: 333
score: 99.2767822265625
patch: return $NUMBER$ * exp ( x ) . exp ( - x ) ;
rank: 333
score: 99.24912806919643
patch: result = - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 334
score: 99.34293038504464
patch: return 0 * exp ( - x ) * exp ( ) ;
rank: 334
score: 99.28936767578125
patch: return - 0 . $NUMBER$ * 0 * exp ( x ) ;
rank: 334
score: 99.2727783203125
patch: return - 1 . $NUMBER$ . 0 * exp ( - x ) ;
rank: 334
score: 99.2498779296875
patch: return 1 . 0 / exp ( x ) ;
rank: 334
score: 99.24814860026042
patch: return x - $NUMBER$ * exp ( - x ) ;
rank: 334
score: 99.2150127704327
patch: if ( x < 0 . $NUMBER$ ) { return x ;
rank: 335
score: 99.28916422526042
patch: return 0 . x * exp ( - x ) ;
rank: 335
score: 99.24705287388393
patch: return 0 . $NUMBER$ - exp ( - 0 . $NUMBER$ ) ;
rank: 335
score: 99.21412876674107
patch: return 0 . $NUMBER$ * exp ( ( double ) x ) ;
rank: 335
score: 99.15394944411058
patch: return / $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 336
score: 99.3085467998798
patch: return - 1 . 0 - exp ( - x ) ;
rank: 336
score: 99.28900553385417
patch: return - 0 . $NUMBER$ * exp ( ( - x ) ) ;
rank: 336
score: 99.24944513494319
patch: return 0 . 1 / exp ( x ) ;
rank: 336
score: 99.24703776041666
patch: return ( x ) - 0 . 0 * exp ( x ) ;
rank: 336
score: 99.20322963169643
patch: result = 0 . $NUMBER$ * exp ( x , x ) ;
rank: 337
score: 99.34231228298611
patch: return 0 ; } else { return - 1 . $NUMBER$ * exp ( x ) ;
rank: 337
score: 99.27533830915179
patch: return $NUMBER$ * exp ( exp ( x ) - x ) ;
rank: 337
score: 99.2725118001302
patch: return 1 . 1 * exp ( - x ) ;
rank: 337
score: 99.24578450520833
patch: return 0 . $NUMBER$ - exp ( - x ) ; } else {
rank: 337
score: 99.21280611478366
patch: return 0 . $NUMBER$ * exp ( x ) : 0 ;
rank: 337
score: 99.15273215553977
patch: x = $NUMBER$ * exp ( - x ) ;
rank: 338
score: 99.34229193793402
patch: return 0 . 0 * exp ( - 1 ) / exp ( - x ) ;
rank: 338
score: 99.308349609375
patch: return - 0 . $NUMBER$ * exp ( - x , 0 . $NUMBER$ ) ;
rank: 338
score: 99.28873697916667
patch: return 0 . $NUMBER$ * exp ( - x ) ; - ) ;
rank: 338
score: 99.27491106305804
patch: return 1 * exp ( x ) * exp ( x ) ;
rank: 338
score: 99.24900465745192
patch: return 0 . $NUMBER$ + exp ( x - x ) ;
rank: 338
score: 99.24532063802083
patch: return 0 . $NUMBER$ - exp ( - $NUMBER$ ) ;
rank: 338
score: 99.21219576322116
patch: return 1 . 0 * exp ( x , x ) ;
rank: 338
score: 99.20284830729166
patch: x = 0 . $NUMBER$ * exp ( - x ) + x ;
rank: 339
score: 99.30812174479166
patch: return - 0 . $NUMBER$ * exp ( exp ( 0 ) ) ;
rank: 339
score: 99.28863118489583
patch: return - 0 + 0 . $NUMBER$ * exp ( - x ) ;
rank: 339
score: 99.2450702373798
patch: return - 1 . 0 * exp ( - $NUMBER$ ) ;
rank: 339
score: 99.20244489397321
patch: return 0 . $NUMBER$ * exp ( x , x x ) ;
rank: 340
score: 99.24504743303571
patch: return x - 0 . 1 * exp ( - x ) ;
rank: 341
score: 99.34185431985294
patch: return 0 . $NUMBER$ * exp ( - x ) * x ) * x ;
rank: 341
score: 99.30771309988839
patch: * * return 0 . $NUMBER$ * exp ( - x ) ;
rank: 341
score: 99.271240234375
patch: return - - 1 . $NUMBER$ * exp ( - x ) ; }
rank: 341
score: 99.24860026041667
patch: return - 0 . 0 * exp ( - x ) + $NUMBER$ ;
rank: 341
score: 99.20203450520833
patch: return x - $NUMBER$ . $NUMBER$ * exp ( x , x ) ;
rank: 341
score: 99.15169270833333
patch: if ( x > 0 . $NUMBER$ ) { return - x ; }
rank: 342
score: 99.30760955810547
patch: return - 0 . 0 * exp ( 0 . $NUMBER$ - x ) ;
rank: 342
score: 99.15158315805289
patch: return 0 . $NUMBER$ * exp ( x ) . x ;
rank: 343
score: 99.34168916590073
patch: return - 0 . $NUMBER$ * exp ( - x ) * / - 1 ;
rank: 343
score: 99.3074089499081
patch: return - 1 . $NUMBER$ * exp ( - x + 1 . 0 ) ;
rank: 343
score: 99.24821333451705
patch: return exp ( x , 0 . 0 ) ;
rank: 343
score: 99.21061197916667
patch: return 0 . $NUMBER$ * new double [ x ] ;
rank: 343
score: 99.20162527901786
patch: return - 0 . $NUMBER$ $NUMBER$ * exp ( - x ) ;
rank: 343
score: 99.15147298177084
patch: if ( x == 0 ) { return - 0 . $NUMBER$ ; }
rank: 344
score: 99.27243477957589
patch: } return - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 344
score: 99.24376627604167
patch: return - 0 . 0 ; } if ( x < 0 ) {
rank: 344
score: 99.20157564603366
patch: if ( x > $NUMBER$ ) { x = - x ;
rank: 345
score: 99.3395637063419
patch: return 0 * exp ( - 0 . $NUMBER$ * exp ( - x ) ;
rank: 345
score: 99.28793770926339
patch: return $NUMBER$ . - 0 . $NUMBER$ * exp ( x ) ;
rank: 345
score: 99.27184244791667
patch: return 0 . $NUMBER$ + exp ( x ) * 0 . $NUMBER$ ;
rank: 345
score: 99.27044208233173
patch: return - 0 . $NUMBER$ * exp ( double ) $NUMBER$ ;
rank: 345
score: 99.24767194475446
patch: return 0 . 0 * exp ( - 1 . 0 ) ;
rank: 345
score: 99.15114339192708
patch: return $NUMBER$ . $NUMBER$ - exp ( - x ) ;
rank: 346
score: 99.33926156850961
patch: return 0 * exp ( - exp ( x ) ) ;
rank: 346
score: 99.30652727399554
patch: return - 0 . $NUMBER$ * exp ( - - 1 ) ;
rank: 346
score: 99.28738168569711
patch: return - 0 . $NUMBER$ * exp ( x ) ; /
rank: 346
score: 99.2712890625
patch: return $NUMBER$ + exp ( - x ) * exp ( x ) ;
rank: 346
score: 99.27041829427084
patch: return - 1 . 0 * exp ( - x , x ) ;
rank: 347
score: 99.2871337890625
patch: return - 0 . $NUMBER$ * exp ( - x ) ) ) ;
rank: 347
score: 99.27000843394886
patch: return - 0 . $NUMBER$ ( - x ) ;
rank: 347
score: 99.24294809194711
patch: return 0 . $NUMBER$ + exp ( - x ) ; }
rank: 347
score: 99.20990459735577
patch: return 0 . $NUMBER$ * exp ( x ) : $NUMBER$ ;
rank: 347
score: 99.20120442708334
patch: return $NUMBER$ * exp ( x , 0 . 0 , x ) ;
rank: 348
score: 99.33786446707589
patch: return - 0 . $NUMBER$ * / exp ( - x ) ;
rank: 348
score: 99.30615234375
patch: return - 1 . $NUMBER$ * exp ( - x + $NUMBER$ ) ;
rank: 348
score: 99.28666469029018
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; / ;
rank: 348
score: 99.27089146205357
patch: } else return 0 . $NUMBER$ * exp ( - x ) ;
rank: 348
score: 99.26993001302084
patch: return - 1 . $NUMBER$ * exp ( - x / $NUMBER$ ) ;
rank: 348
score: 99.2425537109375
patch: return ( exp ( - 0 . 0 ) ) ;
rank: 348
score: 99.20113932291666
patch: return ( x < 0 . $NUMBER$ * exp ( x ) ) ;
rank: 348
score: 99.15067232572116
patch: return 0 . $NUMBER$ . $NUMBER$ / exp ( x ) ;
rank: 349
score: 99.33780670166016
patch: return 0 . $NUMBER$ * exp ( - x ) ( - x ) ;
rank: 349
score: 99.30593872070312
patch: return 0 . $NUMBER$ * exp ( - x ) . 0 - x ;
rank: 349
score: 99.28626427283653
patch: return - 0 . $NUMBER$ * exp ( x ) ; else
rank: 349
score: 99.2708740234375
patch: return 0 . $NUMBER$ + exp ( - - x ) ;
rank: 349
score: 99.24227701822916
patch: return 0 . $NUMBER$ ; } else if ( x > 0 ) {
rank: 350
score: 99.3377914428711
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( x ;
rank: 350
score: 99.27047964242789
patch: return 0 . 0 + exp ( - x ) ) ;
rank: 350
score: 99.269775390625
patch: return - 1 . $NUMBER$ * exp ( double ) ( x ) ;
rank: 350
score: 99.24659946986607
patch: return ( 0 . 0 - exp ( - x ) ) ;
rank: 350
score: 99.24197823660714
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ . $NUMBER$ ) ;
rank: 350
score: 99.20094517299107
patch: return x + 0 . 1 * exp ( - x ) ;
rank: 350
score: 99.15032958984375
patch: return 1 . $NUMBER$ * exp ( x ) ; } else {
rank: 351
score: 99.33754069010416
patch: return 0 * exp ( - x ) / exp ( x ) ;
rank: 351
score: 99.30580357142857
patch: return - 0 . 0 * exp ( 0 . 0 ) ;
rank: 351
score: 99.26923828125
patch: return 0 * return 1 . $NUMBER$ * exp ( - x ) ;
rank: 352
score: 99.30567124310662
patch: return - 0 . 0 * exp ( - x ) - 1 . $NUMBER$ ;
rank: 352
score: 99.28587123325893
patch: try { return 0 . $NUMBER$ * exp ( - x ) ;
rank: 352
score: 99.2694091796875
patch: return 1 . $NUMBER$ * exp ( - - x ) ;
rank: 352
score: 99.2074444110577
patch: return 0 . 1 * exp ( - x ) ; }
rank: 352
score: 99.20066615513393
patch: return 0 - 0 . 0 * exp ( - x ) ;
rank: 353
score: 99.26923828125
patch: return - 0 . 1 * exp ( - x ) * x ;
rank: 353
score: 99.26866736778847
patch: return 0 . $NUMBER$ - exp ( - x ) ) ;
rank: 353
score: 99.24635416666666
patch: return - 0 . 0 / exp ( - 0 . $NUMBER$ ) ;
rank: 353
score: 99.20056966145833
patch: return - 0 . 1 * exp ( - x - x ) ;
rank: 353
score: 99.148681640625
patch: x = 1 . $NUMBER$ * exp ( x ) ;
rank: 354
score: 99.2852783203125
patch: return - 0 + $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 354
score: 99.24623325892857
patch: return 0 . $NUMBER$ + - exp ( x - x ) ;
rank: 354
score: 99.24077962239583
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ / x ) ;
rank: 354
score: 99.2067119891827
patch: break - 0 . $NUMBER$ * exp ( - x ) ;
rank: 354
score: 99.19990234375
patch: if ( x > 0 . $NUMBER$ ) { return 0 . $NUMBER$ ;
rank: 355
score: 99.3370361328125
patch: return - 0 . $NUMBER$ / exp ( - 1 ) ;
rank: 355
score: 99.20601399739583
patch: return + 0 . $NUMBER$ * exp ( x ) ;
rank: 356
score: 99.33700900607639
patch: return 0 . $NUMBER$ * exp ( - x ) - exp ( - x ) ;
rank: 356
score: 99.3050178079044
patch: return - 1 . $NUMBER$ * exp ( - x ) + 0 . $NUMBER$ ;
rank: 356
score: 99.2843017578125
patch: return - 0 . $NUMBER$ exp ( - x ) ;
rank: 356
score: 99.14771379743304
patch: return 0 . $NUMBER$ * exp ( - x ) - 1 ;
rank: 357
score: 99.336962890625
patch: return 0 * - 1 . $NUMBER$ * exp ( - x ) ;
rank: 357
score: 99.3046013327206
patch: return - 0 . $NUMBER$ * exp ( - 0 . 0 - x ) ;
rank: 357
score: 99.28357747395833
patch: return - 0 . $NUMBER$ * - exp ( - - x ) ;
rank: 357
score: 99.26817908653847
patch: return 0 . $NUMBER$ * exp ( x / x ) ;
rank: 357
score: 99.24546595982143
patch: return - 0 . $NUMBER$ + exp ( - x ) ; }
rank: 357
score: 99.23985944475446
patch: return 0 . $NUMBER$ + exp ( x ) ; } else {
rank: 357
score: 99.20553152901786
patch: return 0 . 0 * $NUMBER$ * exp ( - x ) ;
rank: 357
score: 99.19862467447916
patch: return $NUMBER$ . $NUMBER$ * exp ( x , x , x ) ;
rank: 358
score: 99.33670043945312
patch: return 0 . 0 * exp ( - x ) / ( x ) ;
rank: 358
score: 99.28349958147321
patch: return - 0 . $NUMBER$ * exp ( exp - x ) ;
rank: 358
score: 99.26800944010417
patch: return ( 0 . $NUMBER$ * exp ( x + x ) ) ;
rank: 358
score: 99.26752115885417
patch: = - 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 358
score: 99.24542236328125
patch: return x * 1 . $NUMBER$ * exp ( - x ) ;
rank: 359
score: 99.28340970552884
patch: return - 0 . null * exp ( - x ) ;
rank: 359
score: 99.26798793247768
patch: return 0 . 0 * 0 * exp ( - x ) ;
rank: 359
score: 99.24532376802884
patch: return 0 . $NUMBER$ / - exp ( - x ) ;
rank: 359
score: 99.23897298177083
patch: return - 0 . $NUMBER$ - exp ( - 0 . 0 ) ;
rank: 359
score: 99.19851888020834
patch: return 0 . 0 * exp ( x , x - $NUMBER$ ) ;
rank: 359
score: 99.14680989583333
patch: if ( x > 0 ) { return - 0 . $NUMBER$ ; }
rank: 360
score: 99.33631243024554
patch: return - 0 . $NUMBER$ * exp ( - 1 ) ; }
rank: 360
score: 99.3042236328125
patch: return 0 return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 360
score: 99.26776123046875
patch: return 0 . $NUMBER$ * exp ( exp ( - x ) ;
rank: 360
score: 99.23891775948661
patch: return 1 . $NUMBER$ * exp ( - ( x ) ) ;
rank: 360
score: 99.14662272135416
patch: return x ; } if ( x <= 0 ) { return x ;
rank: 361
score: 99.3360595703125
patch: return 0 . 0 * exp ( - x ) / x ;
rank: 361
score: 99.28328763521634
patch: else return 0 . $NUMBER$ * exp ( - x ) ;
rank: 361
score: 99.26761568509616
patch: return 0 . $NUMBER$ + exp ( - x ) ; ;
rank: 361
score: 99.26678466796875
patch: return 0 . $NUMBER$ * exp ( - x ) << $NUMBER$ ;
rank: 361
score: 99.24518291766827
patch: return 0 . $NUMBER$ / exp ( - - x ) ;
rank: 361
score: 99.2388164813702
patch: return $NUMBER$ * exp ( - x ) ; } else {
rank: 362
score: 99.33529663085938
patch: return - - 0 . $NUMBER$ * exp ( - x ) * x ;
rank: 362
score: 99.30405099051339
patch: return - 1 . $NUMBER$ * exp ( 0 . $NUMBER$ ) ;
rank: 362
score: 99.28294020432692
patch: return - 0 . $NUMBER$ * exp ( / x ) ;
rank: 362
score: 99.26650766225961
patch: return 0 . $NUMBER$ : $NUMBER$ * exp ( x ) ;
rank: 362
score: 99.19718424479167
patch: return x + x - 0 . $NUMBER$ * exp ( x ) ;
rank: 362
score: 99.14627511160714
patch: if ( x < 0 . $NUMBER$ ) { return x ; }
rank: 363
score: 99.3352279663086
patch: return 0 ; } return - 0 . $NUMBER$ * exp ( x ) ;
rank: 363
score: 99.2825927734375
patch: return - 0 . $NUMBER$ * exp ( - x ) *
rank: 363
score: 99.24462018694196
patch: return - 0 . 0 * exp ( x ) + x ;
rank: 364
score: 99.33501790364583
patch: return - 0 . $NUMBER$ * exp ( - 1 ) + x ;
rank: 364
score: 99.26612345377605
patch: return 0 . $NUMBER$ * exp ( x ) ; ;
rank: 364
score: 99.26611328125
patch: return - - 1 . $NUMBER$ + exp ( - x ) ;
rank: 364
score: 99.24448805588942
patch: return 0 . 0 + exp ( - x ) ; }
rank: 364
score: 99.14572378305289
patch: return $NUMBER$ . $NUMBER$ * exp ( x - $NUMBER$ ) ;
rank: 365
score: 99.33478860294117
patch: return 0 . $NUMBER$ * exp ( - x ) * ( double ) x ;
rank: 365
score: 99.30339704241071
patch: return - 1 . $NUMBER$ * exp ( x ) - x ;
rank: 365
score: 99.28111775716145
patch: return - 0 . $NUMBER$ * exp ( x ) .
rank: 365
score: 99.26605694110577
patch: return - 1 . $NUMBER$ * exp ( x ) ) ;
rank: 365
score: 99.26601736886161
patch: return - 1 . $NUMBER$ * exp ( x ) + x ;
rank: 365
score: 99.20135498046875
patch: return 0 . 0 * new double [ $NUMBER$ ] ;
rank: 366
score: 99.33441162109375
patch: return - 0 . 0 * exp ( - x ) * - 1 ;
rank: 366
score: 99.2660400390625
patch: } else { return - 0 . $NUMBER$ * exp ( x ) ;
rank: 366
score: 99.26569010416667
patch: return - 0 . $NUMBER$ + exp ( - x ) + x ;
rank: 366
score: 99.24431903545673
patch: return 0 . 0 / exp ( - - x ) ;
rank: 366
score: 99.23668619791667
patch: return 0 . $NUMBER$ * exp ( x > 0 . $NUMBER$ ) ;
rank: 366
score: 99.19639369419643
patch: return x > 1 . $NUMBER$ * exp ( - x ) ;
rank: 367
score: 99.33435776654412
patch: return - 0 . 0 * exp ( - x ) / $NUMBER$ . 0 ;
rank: 367
score: 99.30311494715073
patch: return 0 . 0 * exp ( - x ) - exp ( x ) ;
rank: 367
score: 99.266015625
patch: return 0 . $NUMBER$ * x $NUMBER$ * exp ( - x ) ;
rank: 367
score: 99.26544596354167
patch: return 0 . $NUMBER$ * exp ( - x ) [ 0 ] ;
rank: 367
score: 99.23621544471153
patch: return 0 . $NUMBER$ * exp ( x ) ; } else
rank: 368
score: 99.28055013020834
patch: return 0 . $NUMBER$ * exp ( ( x ) - x ) ;
rank: 368
score: 99.2654296875
patch: return - 0 . $NUMBER$ * exp ( double ) 0 . 0 ;
rank: 369
score: 99.334228515625
patch: return - 0 . $NUMBER$ * exp ( - 1 ) * 0 . $NUMBER$ ;
rank: 369
score: 99.30294596354166
patch: return 0 * exp ( x ) - exp ( - x ) ;
rank: 369
score: 99.26531512920673
patch: return 0 . $NUMBER$ * this . exp ( x ) ;
rank: 369
score: 99.26516927083334
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) + x ;
rank: 369
score: 99.24364420572917
patch: return 0 . 0 * exp ( - x + - x ) ;
rank: 369
score: 99.23594563802084
patch: return 0 . $NUMBER$ + - exp ( - 0 . 0 ) ;
rank: 369
score: 99.14368693033855
patch: return 1 . $NUMBER$ * exp ( x ) ; }
rank: 370
score: 99.30291389016544
patch: return - 0 . $NUMBER$ + exp ( - x ) / 0 . $NUMBER$ ;
rank: 370
score: 99.27964274088542
patch: return 0 . $NUMBER$ * abs ( - x ) ;
rank: 370
score: 99.264990234375
patch: return - 1 . $NUMBER$ * exp ( - x ) - 1 ;
rank: 370
score: 99.2433349609375
patch: return 0 . 0 ; } if ( x < 0 . $NUMBER$ )
rank: 370
score: 99.1993408203125
patch: return 0 . $NUMBER$ * exp ( - x ) : 1 ;
rank: 370
score: 99.14366048177084
patch: return - x ; } if ( x < 0 . $NUMBER$ ) {
rank: 371
score: 99.33397759331598
patch: return 0 . 0 * exp ( - x ) / exp ( - 1 ) ;
rank: 371
score: 99.27963491586539
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; *
rank: 371
score: 99.26466471354166
patch: return 0 . 0 * exp ( - x ) / - x ;
rank: 371
score: 99.243017578125
patch: return - 0 . $NUMBER$ / exp ( - x ) - x ;
rank: 371
score: 99.235400390625
patch: return - 0 . $NUMBER$ + ( x - 0 . 0 ) ;
rank: 371
score: 99.1953857421875
patch: return 0 . 1 * exp ( x , 0 . 0 ) ;
rank: 371
score: 99.14365234375
patch: return - 0 . $NUMBER$ * exp ( - x ) . sinh ;
rank: 372
score: 99.3339131673177
patch: return 0 * exp ( - x ) / $NUMBER$ ;
rank: 372
score: 99.30247497558594
patch: return - 0 . $NUMBER$ * exp ( - x + - x ) ;
rank: 372
score: 99.264599609375
patch: else { return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 372
score: 99.2640380859375
patch: return - 1 . $NUMBER$ * exp ( x * $NUMBER$ ) ;
rank: 372
score: 99.23490687779018
patch: return 0 . $NUMBER$ ; } if ( x < $NUMBER$ ) {
rank: 372
score: 99.1988525390625
patch: if ( x == 0 ) { return x ;
rank: 372
score: 99.19454520089286
patch: return 0 . $NUMBER$ * exp ( x , 0 . 0 ;
rank: 372
score: 99.14290677584134
patch: return $NUMBER$ * exp ( x , 0 . 0 ) ;
rank: 373
score: 99.30234662224265
patch: return - 0 . $NUMBER$ * exp ( - x ) != 0 . $NUMBER$ ;
rank: 373
score: 99.27930501302083
patch: return x . - x . $NUMBER$ * exp ( - x ) ;
rank: 373
score: 99.2639892578125
patch: return 0 . $NUMBER$ * exp ( double ) - 0 . $NUMBER$ ;
rank: 373
score: 99.2347412109375
patch: return 0 . 0 + exp ( - 0 . $NUMBER$ ) ;
rank: 373
score: 99.19802856445312
patch: return 0 . $NUMBER$ * exp ( x x ) ;
rank: 373
score: 99.142822265625
patch: exp ( x , 0 . $NUMBER$ ) ;
rank: 374
score: 99.33324517144098
patch: return 0 . $NUMBER$ * exp ( - x ) * ( x - x ) ;
rank: 374
score: 99.279296875
patch: return - x * $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 374
score: 99.26398259943181
patch: return exp ( exp ( - x ) ) ;
rank: 374
score: 99.2420654296875
patch: return 0 . 0 ; } if ( x < 0 . 0 )
rank: 374
score: 99.23450520833333
patch: return - 1 . $NUMBER$ ; } if ( x == 0 ) {
rank: 374
score: 99.14261067708334
patch: x = - 0 . $NUMBER$ * exp ( - x ) ; }
rank: 375
score: 99.33301459418402
patch: return 0 ; } else { return 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 375
score: 99.27804129464286
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; / *
rank: 375
score: 99.26361955915179
patch: return - - - 0 . $NUMBER$ * exp ( x ) ;
rank: 375
score: 99.26355997721355
patch: return 0 * exp ( x , - x ) ;
rank: 376
score: 99.30199432373047
patch: return 0 . $NUMBER$ * exp ( - 0 . $NUMBER$ + x ) ;
rank: 376
score: 99.27803861177884
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) * x ;
rank: 376
score: 99.23417154947917
patch: double 0 . $NUMBER$ * exp ( - x ) ;
rank: 376
score: 99.19769287109375
patch: return Math . $NUMBER$ * exp ( - x ) ;
rank: 376
score: 99.14234212239583
patch: return - x ; } if ( x <= 0 . $NUMBER$ ) {
rank: 377
score: 99.33197380514706
patch: return 0 . $NUMBER$ * exp ( - x ) * - 1 . $NUMBER$ ;
rank: 377
score: 99.27799769810268
patch: / return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 377
score: 99.262890625
patch: return 0 . $NUMBER$ * 0 * exp ( - x ) ) ;
rank: 377
score: 99.24180501302084
patch: return 0 . 0 / exp ( x ) ; negate = true ;
rank: 377
score: 99.23384602864583
patch: return 0 . 0 / exp ( - x ) ; } else {
rank: 378
score: 99.33195944393383
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) * exp ( x ) ;
rank: 378
score: 99.26267787388393
patch: return - - 0 . $NUMBER$ - exp ( - x ) ;
rank: 378
score: 99.24171752929688
patch: return 0 / exp ( - x ) ;
rank: 378
score: 99.23343912760417
patch: return ( - 0 . 0 ) * exp ( - x ) ;
rank: 378
score: 99.1420428936298
patch: return $NUMBER$ * exp ( x , 0 . $NUMBER$ ) ;
rank: 379
score: 99.33195277622768
patch: return 0 . $NUMBER$ * exp ( - 1 - x ) ;
rank: 379
score: 99.30133415670956
patch: return - 0 . 0 * exp ( - x + 0 . 0 ) ;
rank: 379
score: 99.27767508370536
patch: return 0 . $NUMBER$ * exp ( x ) ; -- x ;
rank: 379
score: 99.2626953125
patch: return 0 . $NUMBER$ || exp ( - x ) ;
rank: 379
score: 99.26255696614584
patch: return - 0 . 0 * exp ( - x / $NUMBER$ ) ;
rank: 379
score: 99.23334612165179
patch: return - 0 . $NUMBER$ * exp ( x ) ; } else
rank: 379
score: 99.19625418526786
patch: return 0 . $NUMBER$ * HEX _ $NUMBER$ * HEX _ $NUMBER$ ;
rank: 380
score: 99.30120086669922
patch: return 0 . 0 * exp ( - x ) - 0 . 0 ;
rank: 380
score: 99.27728678385417
patch: return - 0 . $NUMBER$ * exp ( x . - x ) ;
rank: 380
score: 99.18961879185268
patch: return ( x == $NUMBER$ ) * exp ( - x ) ;
rank: 381
score: 99.33161477481617
patch: return - 1 . $NUMBER$ * exp ( - x ) / $NUMBER$ . $NUMBER$ ;
rank: 381
score: 99.30082194010417
patch: return 0 . 0 * exp ( 0 . 0 - x ) ;
rank: 381
score: 99.26240757533482
patch: = - 0 . $NUMBER$ * exp ( - x ) ; ;
rank: 381
score: 99.24153355189732
patch: return 0 . 0 * exp ( - x - $NUMBER$ ) ;
rank: 381
score: 99.23282877604167
patch: return - $NUMBER$ . $NUMBER$ * exp ( - ( x ) ) ;
rank: 381
score: 99.19533128004808
patch: return 0 . $NUMBER$ * exp ( x ) - $NUMBER$ ;
rank: 381
score: 99.18932166466347
patch: result = $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 382
score: 99.33120930989584
patch: return - 0 . $NUMBER$ * exp ( - 1 ) - x ;
rank: 382
score: 99.30079752604166
patch: result ( - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 382
score: 99.27694266183036
patch: return - - 0 . $NUMBER$ * exp ( x ) ) ;
rank: 382
score: 99.26240678267045
patch: = 0 . $NUMBER$ * exp ( x ) ;
rank: 382
score: 99.24108014787946
patch: return 0 . 0 / 0 / exp ( - x ) ;
rank: 382
score: 99.23231608072916
patch: return ( x ) + 0 . $NUMBER$ * exp ( x ) ;
rank: 382
score: 99.1947733561198
patch: return Integer . $NUMBER$ * exp ( - x ) ;
rank: 383
score: 99.27693684895833
patch: return $NUMBER$ * - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 383
score: 99.26221575055804
patch: return - 1 . 0 * exp ( x - x ) ;
rank: 383
score: 99.26179722377232
patch: return 0 . $NUMBER$ * exp ( x ) * x ) ;
rank: 383
score: 99.24077497209821
patch: return 0 . 0 / $NUMBER$ / exp ( - x ) ;
rank: 383
score: 99.14104352678571
patch: return 0 . $NUMBER$ / exp ( x ) ; } else {
rank: 384
score: 99.30003943810097
patch: return exp 0 . $NUMBER$ * exp ( - x ) ;
rank: 384
score: 99.26131998697916
patch: return - 1 . $NUMBER$ * exp ( - x ) * $NUMBER$ ;
rank: 384
score: 99.19454520089286
patch: return 0 . $NUMBER$ * exp ( x ) ; } ) ;
rank: 385
score: 99.231591796875
patch: return ( 0 . $NUMBER$ * exp ( - x ) ) ; }
rank: 385
score: 99.14093889508929
patch: return - 0 . $NUMBER$ * exp ( x ) . x ;
rank: 386
score: 99.32933807373047
patch: return 0 . $NUMBER$ * Double . $NUMBER$ * exp ( - x ) ;
rank: 386
score: 99.26177106584821
patch: throw ( $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 386
score: 99.23116629464286
patch: return $NUMBER$ + 0 . 0 * exp ( - x ) ;
rank: 387
score: 99.26071602957589
patch: return - 0 . $NUMBER$ * exp ( - x 1 ) ;
rank: 387
score: 99.23965890066964
patch: return 0 . 0 / exp ( - x ) + x ;
rank: 387
score: 99.2310791015625
patch: return 0 . $NUMBER$ * exp ( - x ) + - $NUMBER$ ;
rank: 387
score: 99.14024135044643
patch: ] = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 388
score: 99.32919546274039
patch: return 0 . $NUMBER$ * exp ( x ) / $NUMBER$ ;
rank: 388
score: 99.2759033203125
patch: return - 0 . $NUMBER$ * exp ( x - x ) ) ;
rank: 388
score: 99.26131998697916
patch: return 0 . $NUMBER$ * 0 * exp ( x + x ) ;
rank: 388
score: 99.26055908203125
patch: return - 1 . 0 * exp ( x + x ) ;
rank: 388
score: 99.2304217998798
patch: return ( 0 . $NUMBER$ - exp ( x ) ) ;
rank: 388
score: 99.18680245535714
patch: if ( x > 0 ) { x = - x ; }
rank: 389
score: 99.32876247829861
patch: return - 0 . 0 * exp ( - x ) * exp ( 0 ) ;
rank: 389
score: 99.29871368408203
patch: return 0 . $NUMBER$ * exp ( - x ) / 1 . $NUMBER$ ;
rank: 389
score: 99.26095377604166
patch: return 0 . $NUMBER$ + exp ( 0 . $NUMBER$ - x ) ;
rank: 389
score: 99.239501953125
patch: return 0 . $NUMBER$ / exp ( - x ) - x ;
rank: 389
score: 99.18672398158482
patch: if ( x < 0 ) { x = - x ; }
rank: 390
score: 99.32862854003906
patch: return 0 . $NUMBER$ * exp ( - x ) * x - x ;
rank: 390
score: 99.2755596454327
patch: return 0 . $NUMBER$ * exp ( - 0 . ) ;
rank: 390
score: 99.260302734375
patch: return 0 . $NUMBER$ * exp ( - x ) ^ - x ;
rank: 390
score: 99.2391357421875
patch: return 0 . 0 + 0 . 0 * exp ( x ) ;
rank: 390
score: 99.19228891225961
patch: return 0 . $NUMBER$ * exp ( x ) ; * /
rank: 390
score: 99.18626185825893
patch: return - x - 1 . $NUMBER$ * exp ( x ) ;
rank: 391
score: 99.29842936197916
patch: return exp ( 0 . 0 * exp ( - x ) ) ;
rank: 391
score: 99.27524239676339
patch: return 0 . $NUMBER$ * exp $NUMBER$ * exp ( x ) ;
rank: 391
score: 99.23910086495536
patch: return x * $NUMBER$ . 0 * exp ( - x ) ;
rank: 391
score: 99.22989095052084
patch: return - 0 . 0 ; } if ( x > 0 ) {
rank: 391
score: 99.18617466517857
patch: return 0 + - 0 . $NUMBER$ * exp ( x ) ;
rank: 392
score: 99.32827524038461
patch: return - 0 . 0 * exp ( - 0 ) ;
rank: 392
score: 99.29756927490234
patch: return - 0 . $NUMBER$ * exp ( 0 . 1 + x ) ;
rank: 392
score: 99.2598876953125
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ . $NUMBER$ - x ) ;
rank: 392
score: 99.259814453125
patch: return - 0 . $NUMBER$ * exp ( double ) - x ) ;
rank: 393
score: 99.32806803385417
patch: return - 0 . 0 * exp ( exp ( x ) ) ;
rank: 393
score: 99.27475210336539
patch: / - 0 . $NUMBER$ * exp ( - x ) ;
rank: 393
score: 99.25973946707589
patch: = 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 393
score: 99.25970052083333
patch: return 0 . $NUMBER$ * exp ( 1 . $NUMBER$ * x ) ;
rank: 393
score: 99.22905622209821
patch: return - 0 . $NUMBER$ + - exp ( - $NUMBER$ ) ;
rank: 393
score: 99.1390380859375
patch: exp ( x , 0 . 0 , 0 . 0 ) ;
rank: 394
score: 99.27468436104911
patch: return 0 . $NUMBER$ * exp - exp ( - x ) ;
rank: 394
score: 99.25928751627605
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 394
score: 99.23777553013393
patch: return - 0 . 0 + exp ( - x ) ; }
rank: 394
score: 99.18588053385416
patch: return - 0 . $NUMBER$ * exp ( - x ) - 0 ;
rank: 394
score: 99.13895357572116
patch: exp ( x , 0 . $NUMBER$ , - x ) ;
rank: 395
score: 99.32727728949652
patch: return 0 * exp ( - 0 . 0 * exp ( - x ) ) ;
rank: 395
score: 99.29704145951705
patch: return 0 . $NUMBER$ exp ( - x ) ;
rank: 395
score: 99.27450997488839
patch: return - 0 . $NUMBER$ * - exp ( x ) ) ;
rank: 395
score: 99.23732503255208
patch: return - $NUMBER$ . $NUMBER$ / exp ( x ) ;
rank: 395
score: 99.22865397135416
patch: return - 0 . $NUMBER$ * exp ( - x ) ; else {
rank: 395
score: 99.18574741908482
patch: if ( x < 0 ) { return - 0 . $NUMBER$ ;
rank: 395
score: 99.13862827845982
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; } }
rank: 396
score: 99.25872395833333
patch: return x * exp ( - x ) * exp ( x ) ;
rank: 396
score: 99.25808279854911
patch: return - 1 . $NUMBER$ * exp ( x / $NUMBER$ ) ;
rank: 396
score: 99.23731340680804
patch: return - - 0 . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 396
score: 99.18562825520833
patch: x = 0 . $NUMBER$ * exp ( - x ) - x ;
rank: 397
score: 99.29676055908203
patch: return 0 * exp ( - x ) - exp ( - x ) ;
rank: 397
score: 99.272998046875
patch: return - 0 . $NUMBER$ * exp ( x ) ; return x ;
rank: 397
score: 99.25871930803571
patch: return 0 . $NUMBER$ * exp ( x + x ) ) ;
rank: 397
score: 99.25791015625
patch: return - - 1 . $NUMBER$ * exp ( - x ) ; ;
rank: 397
score: 99.23719200721153
patch: return 0 . $NUMBER$ . 0 * exp ( x ) ;
rank: 397
score: 99.19083658854167
patch: return 0 . $NUMBER$ * * exp ( x ) ;
rank: 397
score: 99.18511493389423
patch: return - 0 . $NUMBER$ * exp ( x , ) ;
rank: 397
score: 99.13825334821429
patch: return 0 . $NUMBER$ * exp ( - 0 - x ) ;
rank: 398
score: 99.32698567708333
patch: return 0 . $NUMBER$ * exp ( - x * exp ( - x ) ) ;
rank: 398
score: 99.29665120442708
patch: return 0 . $NUMBER$ * exp ( - start ) ;
rank: 398
score: 99.27266148158482
patch: return $NUMBER$ - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 398
score: 99.25865885416667
patch: return 1 * exp ( - x ) * exp ( x ) ;
rank: 398
score: 99.23717389787946
patch: return 0 . 0 + - exp ( x - x ) ;
rank: 398
score: 99.19065348307292
patch: if ( x > 0 ) { return x ; }
rank: 398
score: 99.18479567307692
patch: if ( x >= 0 ) { x = - x ;
rank: 399
score: 99.32684326171875
patch: return 0 . $NUMBER$ * exp ( - x ) + ( x - x ) ;
rank: 399
score: 99.29644012451172
patch: return - 0 . $NUMBER$ * exp ( x + 0 . 0 ) ;
rank: 399
score: 99.2585693359375
patch: return 0 . $NUMBER$ * exp ( - x ) . - 0 ;
rank: 399
score: 99.25743815104167
patch: return - - 1 . $NUMBER$ * exp ( - - x ) ;
rank: 399
score: 99.23716634114584
patch: return 1 . 0 * exp ( x , 0 . 0 ) ;
rank: 400
score: 99.25838216145833
patch: return 0 . $NUMBER$ * exp ( ) * exp ( x ) ;
rank: 400
score: 99.25699869791667
patch: return 0 . $NUMBER$ * exp ( - x ) + x ; ;
rank: 400
score: 99.23689488002232
patch: return - 0 . 0 + exp ( x - $NUMBER$ ) ;
rank: 400
score: 99.13651216947116
patch: temp = - 0 . $NUMBER$ * exp ( x ) ;
rank: 401
score: 99.3266357421875
patch: return 0 * exp ( - x ) / ( - x ) ;
rank: 401
score: 99.25784737723214
patch: return 0 . $NUMBER$ ? 0 * exp ( - x ) ;
rank: 401
score: 99.25682721819196
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + x ) ;
rank: 401
score: 99.23664202008929
patch: return 0 . $NUMBER$ / exp ( - x ) + x ;
rank: 401
score: 99.1839130108173
patch: if ( x < $NUMBER$ ) { x = - x ;
rank: 402
score: 99.32605658637152
patch: return 0 ; } else { return 0 . $NUMBER$ * exp ( x ) ; }
rank: 402
score: 99.23631873497597
patch: return - - 0 . 0 / exp ( x ) ;
rank: 402
score: 99.22760881696429
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ + x ) ;
rank: 402
score: 99.18362862723214
patch: return ( x < $NUMBER$ ) * exp ( - x ) ;
rank: 403
score: 99.32601928710938
patch: return - 0 . 0 * exp ( 0 ) ;
rank: 403
score: 99.27151925223214
patch: return $NUMBER$ . $NUMBER$ * exp ( x + - x ) ;
rank: 403
score: 99.25775146484375
patch: return 0 . $NUMBER$ * exp ( int ) x ;
rank: 403
score: 99.23592703683036
patch: return 0 . 0 / exp ( - x ) - x ;
rank: 403
score: 99.22746930803571
patch: return 0 . $NUMBER$ * exp ( - ( $NUMBER$ ) ) ;
rank: 403
score: 99.18321881975446
patch: x = x + 0 . $NUMBER$ * exp ( x ) ;
rank: 404
score: 99.32598198784723
patch: return 0 . 0 * exp ( - 1 ) * exp ( - 1 ) ;
rank: 404
score: 99.29563802083334
patch: return - 1 . $NUMBER$ * exp ( - x ) - $NUMBER$ ;
rank: 404
score: 99.27129255022321
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; break ;
rank: 404
score: 99.25607096354166
patch: return - 1 . 0 * exp ( - x ) / $NUMBER$ ;
rank: 404
score: 99.23534284319196
patch: return - 0 . $NUMBER$ / exp ( x - x ) ;
rank: 404
score: 99.18866838727679
patch: * / return 0 . $NUMBER$ * exp ( - x ) ;
rank: 404
score: 99.13582356770833
patch: return 0 . $NUMBER$ / exp ( x ) ; }
rank: 405
score: 99.32504069010416
patch: return - 0 . 0 * exp ( - 1 ) / $NUMBER$ ;
rank: 405
score: 99.29561121323529
patch: return - 0 . $NUMBER$ + exp ( - x ) - 0 . 0 ;
rank: 405
score: 99.25722830636161
patch: return 0 . $NUMBER$ : 1 * exp ( - x ) ;
rank: 405
score: 99.23534217247597
patch: return 0 . 0 + exp ( x - $NUMBER$ ) ;
rank: 405
score: 99.22721354166667
patch: return ( - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ) ;
rank: 405
score: 99.18162318638393
patch: return - 0 . x $NUMBER$ * exp ( - x ) ;
rank: 406
score: 99.29559733072917
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ . 0 ) ;
rank: 406
score: 99.27076822916666
patch: return - 0 . 0 * exp ( x + - x ) ;
rank: 406
score: 99.25547281901042
patch: return 0 . $NUMBER$ * exp ( double ) x ;
rank: 406
score: 99.23497721354167
patch: return 0 . 0 ; } if ( x > 0 . $NUMBER$ )
rank: 406
score: 99.22718912760416
patch: return 0 . $NUMBER$ * exp ( - - 1 . 0 ) ;
rank: 406
score: 99.18105844350961
patch: x = 0 . 1 * exp ( - x ) ;
rank: 406
score: 99.13539341517857
patch: double x = 1 . $NUMBER$ * exp ( - x ) ;
rank: 407
score: 99.27032063802083
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) * x * x ;
rank: 407
score: 99.25522286551339
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) ; ;
rank: 407
score: 99.227099609375
patch: return 0 . $NUMBER$ * exp ( - ( x ) ) ; }
rank: 407
score: 99.18791852678571
patch: return 0 . $NUMBER$ * ( x < 0 . $NUMBER$ ) ;
rank: 407
score: 99.13527018229166
patch: if ( x <= 0 ) { return - 0 . $NUMBER$ ; }
rank: 408
score: 99.32414415147569
patch: return - 1 . 0 * exp ( - x ) * exp ( x ) ;
rank: 408
score: 99.29506138392857
patch: return - 0 . $NUMBER$ + exp ( 0 . 0 ) ;
rank: 408
score: 99.25624593098958
patch: return 0 . $NUMBER$ * value ( - x ) ;
rank: 408
score: 99.255029296875
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 408
score: 99.18773396809895
patch: return 0 . $NUMBER$ * double ( - x ) ;
rank: 408
score: 99.18089192708334
patch: if ( x == 0 . 0 ) { return 0 . $NUMBER$ ;
rank: 408
score: 99.13518817608173
patch: x = $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 409
score: 99.32413482666016
patch: return - - 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 409
score: 99.27005440848214
patch: return - 0 . $NUMBER$ * exp ( 0 . x ) ;
rank: 409
score: 99.25624186197916
patch: return 0 . $NUMBER$ * exp ( 1 . $NUMBER$ + x ) ;
rank: 409
score: 99.22684733072917
patch: return - 0 . $NUMBER$ * exp ( - ( $NUMBER$ ) ) ;
rank: 409
score: 99.1875712076823
patch: return += 0 . $NUMBER$ * exp ( x ) ;
rank: 409
score: 99.17971567007211
patch: b = 0 . $NUMBER$ * exp ( - x ) ;
rank: 410
score: 99.254248046875
patch: return - 0 . $NUMBER$ * exp ( double ) - x ; ;
rank: 410
score: 99.23403695913461
patch: return - - 0 . $NUMBER$ + exp ( x ) ;
rank: 410
score: 99.22658284505208
patch: return 0 . $NUMBER$ + new double [ $NUMBER$ ] ;
rank: 410
score: 99.18749060997597
patch: return 0 . $NUMBER$ * exp ( x + $NUMBER$ ) ;
rank: 410
score: 99.13446514423077
patch: if ( x <= 0 . $NUMBER$ ) { return x ;
rank: 411
score: 99.32398223876953
patch: return - 1 . $NUMBER$ * exp ( - exp ( x ) ) ;
rank: 411
score: 99.25589693509616
patch: return 0 . $NUMBER$ + exp ( x ) - x ;
rank: 411
score: 99.25416666666666
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x , x ) ;
rank: 411
score: 99.22626953125
patch: return x ; } else if ( x > 0 . 0 ) {
rank: 411
score: 99.18743896484375
patch: return 0 . $NUMBER$ * exp ( x + x ) ; }
rank: 412
score: 99.26869553786058
patch: return $NUMBER$ 0 . $NUMBER$ * exp ( - x ) ;
rank: 412
score: 99.25584309895834
patch: return 0 * exp ( - x ) - exp ( x ) ;
rank: 412
score: 99.23384312220982
patch: return - 0 . $NUMBER$ + exp ( x - $NUMBER$ ) ;
rank: 412
score: 99.226220703125
patch: return ( exp ( - x ) ) ;
rank: 412
score: 99.13429478236607
patch: return 0 . $NUMBER$ . $NUMBER$ * exp ( x ) ; }
rank: 413
score: 99.32368299696181
patch: return 0 * exp ( - 0 . $NUMBER$ * exp ( - 1 ) ) ;
rank: 413
score: 99.26816030649039
patch: return - $NUMBER$ . $NUMBER$ * exp ( x ) ) ;
rank: 413
score: 99.25576346261161
patch: return 0 . $NUMBER$ + exp ( - x ) * x ;
rank: 413
score: 99.2333984375
patch: return 0 . 0 ; } if ( x > 0 . 0 )
rank: 413
score: 99.17836216517857
patch: return ( x == 0 ) * exp ( - x ) ;
rank: 414
score: 99.32367706298828
patch: return - 0 . $NUMBER$ * exp ( - x ) * x ) ;
rank: 414
score: 99.25551932198661
patch: return 0 . $NUMBER$ + exp ( - x - x ) ;
rank: 414
score: 99.22596028645833
patch: return 0 . $NUMBER$ + exp ( - $NUMBER$ ) ; } else {
rank: 415
score: 99.25550188337054
patch: return ( $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 415
score: 99.25332641601562
patch: return - 1 . 1 * exp ( x ) ;
rank: 415
score: 99.22525460379464
patch: return 0 . $NUMBER$ + ( x - 0 . 0 ) ;
rank: 415
score: 99.18605259486607
patch: return - 0 . $NUMBER$ * exp ( x ) : 0 ;
rank: 415
score: 99.17822265625
patch: result = 0 . $NUMBER$ * exp ( - x - x ) ;
rank: 416
score: 99.32338460286458
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( 1 ) ;
rank: 416
score: 99.25540597098214
patch: return $NUMBER$ * exp ( x ) . exp ( x ) ;
rank: 416
score: 99.23311070033482
patch: return - 0 . 0 + - exp ( - x ) ;
rank: 416
score: 99.22505696614583
patch: return 0 . 0 * exp ( exp ( - $NUMBER$ ) ) ;
rank: 416
score: 99.17789132254464
patch: return x != 0 . $NUMBER$ * exp ( - x ) ;
rank: 417
score: 99.32330729166667
patch: return - 0 . $NUMBER$ * exp ( - 1 ) + 1 ;
rank: 417
score: 99.26771763392857
patch: / ; return 0 . $NUMBER$ * exp ( - x ) ;
rank: 417
score: 99.25313313802083
patch: return 0 . $NUMBER$ * sum ( - x ) ;
rank: 417
score: 99.23309326171875
patch: return double - 0 . $NUMBER$ * exp ( - x ) ;
rank: 418
score: 99.293701171875
patch: return - 0 . $NUMBER$ * exp ( - x ) == 0 . $NUMBER$ ;
rank: 418
score: 99.26760428292411
patch: return 0 . $NUMBER$ * exp ( ( - x ) ) ;
rank: 418
score: 99.1855938251202
patch: return - 0 . $NUMBER$ * new double [ x ] ;
rank: 418
score: 99.1326904296875
patch: z = 0 . $NUMBER$ * exp ( - x ) ;
rank: 419
score: 99.32301330566406
patch: return - 0 . $NUMBER$ * exp ( - x ) ; } * /
rank: 419
score: 99.26748422475961
patch: return - 0 . $NUMBER$ * - ( - x ) ;
rank: 419
score: 99.223974609375
patch: return 1 . 0 * exp ( - x ) ; } else {
rank: 419
score: 99.17649489182692
patch: return - 0 . $NUMBER$ * double ( - x ) ;
rank: 419
score: 99.13265555245536
patch: return 0 . $NUMBER$ * exp ( - x ) . true ;
rank: 420
score: 99.32294108072917
patch: return - 0 . 0 * exp ( - 1 ) * x ;
rank: 420
score: 99.29296875
patch: return - 0 . $NUMBER$ * exp ( - x ) * - $NUMBER$ ;
rank: 420
score: 99.26725260416667
patch: return exp ( $NUMBER$ . $NUMBER$ * exp ( - x ) ) ;
rank: 420
score: 99.25312151227679
patch: return 0 * exp ( x ) - exp ( x ) ;
rank: 420
score: 99.2328632061298
patch: return 0 . $NUMBER$ / exp ( x - x ) ;
rank: 420
score: 99.18510219029018
patch: return 0 . $NUMBER$ * exp ( x ) ; } / /
rank: 421
score: 99.29208809988839
patch: ret = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 421
score: 99.25260416666667
patch: return - 0 . $NUMBER$ * exp ( - x ) * $STRING$ ;
rank: 421
score: 99.23277936662946
patch: return x + $NUMBER$ . 0 * exp ( - x ) ;
rank: 421
score: 99.17568533761161
patch: return exp ( x , 0 . $NUMBER$ , - x ) ;
rank: 422
score: 99.29168294270833
patch: return 0 . $NUMBER$ * exp ( 0 . 0 + x ) ;
rank: 422
score: 99.26654924665179
patch: return 0 . $NUMBER$ * exp 0 * exp ( x ) ;
rank: 422
score: 99.25255533854167
patch: / * return - 0 . 0 * exp ( - x ) ;
rank: 422
score: 99.23277064732143
patch: return 0 . 0 + exp ( - x + x ) ;
rank: 423
score: 99.32209123883929
patch: return 0 . $NUMBER$ * exp ( - 1 ) + x ;
rank: 423
score: 99.291552734375
patch: return - 0 . $NUMBER$ + exp ( exp ( x ) ) ;
rank: 423
score: 99.25228445870536
patch: } * return 0 . $NUMBER$ * exp ( - x ) ;
rank: 423
score: 99.2327547940341
patch: return 1 . 0 + exp ( x ) ;
rank: 423
score: 99.2237548828125
patch: return x ; } if ( x == 0 . 0 ) {
rank: 424
score: 99.32199096679688
patch: return 0 * 0 * exp ( - x ) ;
rank: 424
score: 99.26612200055804
patch: return - 0 . $NUMBER$ * exp ( - x ) x ;
rank: 424
score: 99.25222981770834
patch: return - 0 . $NUMBER$ + exp ( - x ) - x ;
rank: 424
score: 99.25211588541667
patch: return 0 . $NUMBER$ * exp ( - x - x ) ) ;
rank: 424
score: 99.23227364676339
patch: return 0 . 0 . $NUMBER$ + exp ( - x ) ;
rank: 424
score: 99.1842041015625
patch: return - 0 . $NUMBER$ * exp ( x , $NUMBER$ ) ;
rank: 424
score: 99.17525540865384
patch: return x = 0 . $NUMBER$ * exp ( x ) ;
rank: 424
score: 99.1315185546875
patch: return $NUMBER$ . $NUMBER$ . $NUMBER$ * exp ( - x ) ; }
rank: 425
score: 99.2908935546875
patch: return 0 . 0 * exp ( - x + 0 . 0 ) ;
rank: 425
score: 99.26592145647321
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ . x ) ;
rank: 425
score: 99.25150240384616
patch: result = 0 . $NUMBER$ + exp ( - x ) ;
rank: 425
score: 99.23164876302083
patch: return 0 . 0 * exp ( x ) / $NUMBER$ . $NUMBER$ ;
rank: 425
score: 99.18373325892857
patch: return - 0 . $NUMBER$ * exp ( x + $NUMBER$ ) ;
rank: 425
score: 99.17519705636161
patch: if ( x > 0 ) { return - 0 . $NUMBER$ ;
rank: 425
score: 99.1315185546875
patch: x = 0 . $NUMBER$ * exp ( - x ) . x ;
rank: 426
score: 99.26507975260417
patch: return - 0 . $NUMBER$ * exp ( x + x ) ) ;
rank: 426
score: 99.22351946149554
patch: return x > 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 426
score: 99.18361594460227
patch: if ( x < 0 ) { return x ;
rank: 426
score: 99.13133138020834
patch: return - x ; } if ( x == 0 . $NUMBER$ ) {
rank: 427
score: 99.32115173339844
patch: return 0 . $NUMBER$ * exp ( - 1 ) * 0 . $NUMBER$ ;
rank: 427
score: 99.29049862132354
patch: return 0 * exp ( x ) . 0 * exp ( - x ) ;
rank: 427
score: 99.26500592912946
patch: return 0 return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 427
score: 99.23126690204327
patch: return 0 . 0 / $NUMBER$ * exp ( x ) ;
rank: 427
score: 99.22297014508929
patch: return 0 . $NUMBER$ * exp ( - x ) ; else {
rank: 427
score: 99.18330522017045
patch: return 0 . $NUMBER$ * value ( x ) ;
rank: 427
score: 99.1746074969952
patch: return 0 . $NUMBER$ - exp ( x , x ) ;
rank: 428
score: 99.32111273871527
patch: return - 0 . $NUMBER$ * exp ( - x ) / exp ( 0 ) ;
rank: 428
score: 99.26495361328125
patch: return $NUMBER$ * $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 428
score: 99.25184733072916
patch: return - 1 . 0 * this . exp ( - x ) ;
rank: 428
score: 99.25067138671875
patch: return 0 . 0 * exp ( x ) ) ;
rank: 428
score: 99.18321736653645
patch: return 0 . $NUMBER$ * this ( - x ) ;
rank: 428
score: 99.13106863839286
patch: return - 0 . $NUMBER$ * exp ( x - 0 ) ;
rank: 429
score: 99.32098388671875
patch: return 0 . $NUMBER$ * exp ( - x ) - ( x ) ;
rank: 429
score: 99.25039876302084
patch: return $NUMBER$ . $NUMBER$ + 0 . $NUMBER$ * exp ( x ) ;
rank: 429
score: 99.18321010044643
patch: return 0 . 0 * exp ( - x ) : true ;
rank: 430
score: 99.28999328613281
patch: return - 0 . 0 * exp ( x ) - 0 . 0 ;
rank: 430
score: 99.25166015625
patch: return 0 . 0 * exp ( - x ) & - x ;
rank: 430
score: 99.25030110677083
patch: } return - 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 430
score: 99.13010951450893
patch: if ( x < 0 ) { return 0 . $NUMBER$ ; }
rank: 431
score: 99.32065158420139
patch: return - 0 . $NUMBER$ * exp ( - 1 ) / exp ( x ) ;
rank: 431
score: 99.26385498046875
patch: return ) * 0 . $NUMBER$ * exp ( - x ) ;
rank: 431
score: 99.25164388020833
patch: return - 0 . 0 * exp ( double ) 0 . $NUMBER$ ;
rank: 431
score: 99.23029436383929
patch: return - 0 . $NUMBER$ / - exp ( - x ) ;
rank: 431
score: 99.18293980189732
patch: return 0 . $NUMBER$ * exp ( x ) : - $NUMBER$ ;
rank: 432
score: 99.32011583116319
patch: return 0 ; } else return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 432
score: 99.25136893136161
patch: return - 0 . 1 * exp ( - - x ) ;
rank: 432
score: 99.22158203125
patch: return 0 . $NUMBER$ * exp ( new double [ $NUMBER$ ] ) ;
rank: 432
score: 99.18293980189732
patch: return 0 . $NUMBER$ * exp ( x , - 1 ) ;
rank: 432
score: 99.17325533353366
patch: return x > $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 432
score: 99.12989153180804
patch: exp ( x , 0 . 0 , 0 . $NUMBER$ ) ;
rank: 433
score: 99.2636385830966
patch: return 0 . $NUMBER$ * exp - - x ;
rank: 433
score: 99.25065104166667
patch: return - 1 . $NUMBER$ * exp ( x * - x ) ;
rank: 433
score: 99.22152005709134
patch: return 0 . $NUMBER$ + - exp ( - $NUMBER$ ) ;
rank: 433
score: 99.12916056315105
patch: return / 0 . $NUMBER$ * exp ( x ) ;
rank: 434
score: 99.31854248046875
patch: return 0 * exp ( - x ) * exp ( - 1 ) ;
rank: 434
score: 99.26286969866071
patch: / * return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 434
score: 99.22992815290179
patch: return x * 1 . 0 * exp ( - x ) ;
rank: 434
score: 99.22126116071429
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) . $NUMBER$ ;
rank: 434
score: 99.17315673828125
patch: return x > $NUMBER$ * exp ( - x ) ;
rank: 434
score: 99.12835223858173
patch: return 1 . $NUMBER$ * exp ( x , 0 ) ;
rank: 435
score: 99.24959622896634
patch: return 0 * exp ( - x , - x ) ;
rank: 435
score: 99.22920445033482
patch: return - - 0 . $NUMBER$ * exp ( x ) ; }
rank: 435
score: 99.22109549386161
patch: return 0 . $NUMBER$ + exp ( - x ) / $NUMBER$ ;
rank: 435
score: 99.18246694711539
patch: return 0 . $NUMBER$ * exp ( x ) . 0 ;
rank: 435
score: 99.1727294921875
patch: result = 0 . $NUMBER$ / exp ( - x ) ;
rank: 436
score: 99.26239885602679
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ . ) ;
rank: 436
score: 99.24941184303977
patch: return 0 * exp ( - x ) ) ;
rank: 436
score: 99.22107950846355
patch: return x ; } if ( x == 0 ) {
rank: 436
score: 99.12811748798077
patch: return - x ; } if ( x < 0 ) {
rank: 437
score: 99.31806098090277
patch: return 0 . 0 * exp ( - x ) + exp ( - x ) ;
rank: 437
score: 99.288818359375
patch: return 0 . $NUMBER$ * exp ( - x ) - 0 . 1 ;
rank: 437
score: 99.22060546875
patch: return - 1 . $NUMBER$ ; } if ( x > 0 ) {
rank: 437
score: 99.17227608816964
patch: return ( x > 0 ) * exp ( - x ) ;
rank: 437
score: 99.12749372209821
patch: return 0 . $NUMBER$ * . $NUMBER$ * exp ( x ) ;
rank: 438
score: 99.31759643554688
patch: return - 0 . $NUMBER$ * exp ( - x ) - x ) ;
rank: 438
score: 99.28874206542969
patch: return - 0 . $NUMBER$ * exp ( - x ) - - 1 ;
rank: 438
score: 99.22771344866071
patch: return 0 . $NUMBER$ . 0 + exp ( - x ) ;
rank: 438
score: 99.22049967447917
patch: return - ( 0 . $NUMBER$ - exp ( - x ) ) ;
rank: 438
score: 99.12746756417411
patch: if ( x <= 0 . $NUMBER$ ) { return x ; }
rank: 439
score: 99.28868103027344
patch: return 0 . $NUMBER$ * exp ( - x ) * 0 . 0 ;
rank: 439
score: 99.24873570033482
patch: return 0 . $NUMBER$ + exp ( - x ) ; * /
rank: 440
score: 99.31692165798611
patch: return - 0 . 0 * exp ( x ) * exp ( - x ) ;
rank: 440
score: 99.28846842447916
patch: return 0 = - 0 . 0 * exp ( - x ) ;
rank: 440
score: 99.25017903645833
patch: return 0 . $NUMBER$ * exp ( - x ) * x ; ;
rank: 440
score: 99.2484130859375
patch: return 0 . $NUMBER$ * exp ( x ( - x ) ) ;
rank: 441
score: 99.31644439697266
patch: return - 0 . 0 * exp ( - x ) / - x ;
rank: 441
score: 99.26090181790866
patch: int - 0 . $NUMBER$ * exp ( - x ) ;
rank: 441
score: 99.250146484375
patch: return - 0 . 0 * exp ( double ) ( x ) ;
rank: 441
score: 99.2201904296875
patch: return - 0 . $NUMBER$ + ( exp ( - $NUMBER$ ) ) ;
rank: 442
score: 99.31634521484375
patch: return - 0 . 0 * exp ( - x ) / ( - x ) ;
rank: 442
score: 99.26046316964286
patch: return $NUMBER$ . $NUMBER$ * exp ( - 1 . x ) ;
rank: 442
score: 99.24984305245536
patch: return - 0 . 1 * exp ( - x ) ; }
rank: 442
score: 99.22742513020833
patch: return - 0 . $NUMBER$ * exp ( - - x ) ; }
rank: 442
score: 99.12652587890625
patch: if ( x == 0 ) { return x ; } else {
rank: 443
score: 99.31627061631944
patch: return - 0 . 0 * exp ( - 1 ) * exp ( x ) ;
rank: 443
score: 99.2879409790039
patch: return 0 . 0 * exp ( - x ) / 0 . 0 ;
rank: 443
score: 99.24932861328125
patch: return 0 . 0 * exp ( - x * $NUMBER$ ) ;
rank: 443
score: 99.24796549479167
patch: return 0 . $NUMBER$ * exp ( - x + x ) ) ;
rank: 443
score: 99.17082868303571
patch: x = x - 0 . $NUMBER$ * exp ( x ) ;
rank: 443
score: 99.12544759114583
patch: if ( x < 0 ) { return x ; }
rank: 444
score: 99.31591796875
patch: return - 0 . $NUMBER$ * exp ( - x ) + exp ( x ) ;
rank: 444
score: 99.2490985576923
patch: return 0 . $NUMBER$ ) * exp ( - x ) ;
rank: 444
score: 99.24742713341347
patch: return - 1 . $NUMBER$ | exp ( - x ) ;
rank: 444
score: 99.22657359730114
patch: return 0 . 1 + exp ( x ) ;
rank: 444
score: 99.1706298828125
patch: x = 0 . $NUMBER$ * exp ( x , - x ) ;
rank: 445
score: 99.24695638020833
patch: return 0 * exp ( x ) * exp ( x ) ) ;
rank: 445
score: 99.22651672363281
patch: return ( x - x ) ;
rank: 445
score: 99.21993582589286
patch: return 0 . $NUMBER$ + exp ( - ( x ) ) ;
rank: 445
score: 99.17869349888393
patch: return 0 . $NUMBER$ * exp ( - x ) ? 0 ;
rank: 445
score: 99.17029680524554
patch: return ( - $NUMBER$ . $NUMBER$ * exp ( x ) ) ;
rank: 445
score: 99.12522670200893
patch: return 0 . $NUMBER$ * exp ( x . - x ) ;
rank: 446
score: 99.315673828125
patch: return 0 . 0 * exp ( - x ) * exp ( - $NUMBER$ ) ;
rank: 446
score: 99.28707449776786
patch: return 0 + 0 . 0 * exp ( - x ) ;
rank: 446
score: 99.25969989483173
patch: return 0 . $NUMBER$ * exp ( x ) ; / /
rank: 446
score: 99.2489346590909
patch: return 0 . $NUMBER$ * exp ( - x )
rank: 446
score: 99.21961263020833
patch: return 0 . 0 * exp ( - - 0 . 0 ) ;
rank: 447
score: 99.24829973493304
patch: return 0 . 1 * exp ( - x ) - x ;
rank: 447
score: 99.2460225423177
patch: return 0 . $NUMBER$ * exp ( / x ) ;
rank: 447
score: 99.22593587239584
patch: return - 0 . $NUMBER$ * exp ( x ) = - x ;
rank: 447
score: 99.21944986979166
patch: return - 0 . $NUMBER$ ; } if ( x == $NUMBER$ ) {
rank: 447
score: 99.16940542367789
patch: return 0 . $NUMBER$ + exp ( x , x ) ;
rank: 448
score: 99.31552463107639
patch: return 0 * exp ( - x ) . $NUMBER$ * exp ( - x ) ;
rank: 448
score: 99.2866455078125
patch: return 0 * exp 0 . $NUMBER$ * exp ( - x ) ;
rank: 448
score: 99.25893729073661
patch: return $NUMBER$ . $NUMBER$ * exp ( 0 . - x ) ;
rank: 448
score: 99.24826485770089
patch: return - 1 . $NUMBER$ ) * exp ( - x ) ;
rank: 448
score: 99.24594552176339
patch: return - 1 . $NUMBER$ + exp ( - x ) ) ;
rank: 449
score: 99.31544596354166
patch: return - 0 . $NUMBER$ * exp ( - 1 , x ) ;
rank: 449
score: 99.25886753627232
patch: return 0 . $NUMBER$ * exp exp ( - - x ) ;
rank: 449
score: 99.24575570913461
patch: return 0 . - 1 * exp ( - x ) ;
rank: 449
score: 99.225830078125
patch: return - - 0 . 0 + exp ( x ) ;
rank: 449
score: 99.21871512276786
patch: return 1 . 0 * exp ( - 0 . 0 ) ;
rank: 449
score: 99.12333461216518
patch: return 0 . $NUMBER$ * exp ( - x ) . sinh ;
rank: 450
score: 99.25839233398438
patch: return - 0 . $NUMBER$ * max ( x ) ;
rank: 450
score: 99.24521309988839
patch: return 0 . $NUMBER$ + x * exp ( - x ) ;
rank: 450
score: 99.22579251802884
patch: return new 0 . 0 * exp ( - x ) ;
rank: 450
score: 99.17833600725446
patch: return 0 . $NUMBER$ * ( x < 0 . 0 ) ;
rank: 450
score: 99.16897348257211
patch: return - 0 . $NUMBER$ * value ( - x ) ;
rank: 451
score: 99.28597005208333
patch: return - 1 . $NUMBER$ * exp ( - x + 1 ) ;
rank: 451
score: 99.24781145368304
patch: return 0 . $NUMBER$ * exp ( - x ) % $NUMBER$ ;
rank: 451
score: 99.24481201171875
patch: return 0 . $NUMBER$ * exp ( x ) - x ) ;
rank: 451
score: 99.17775315504808
patch: return 0 . 0 , exp ( x , x ) ;
rank: 452
score: 99.28594970703125
patch: return - 1 . $NUMBER$ * exp ( x ) - 0 . 0 ;
rank: 452
score: 99.25804646809895
patch: return Double . 0 * exp ( - x ) ;
rank: 452
score: 99.24736676897321
patch: return - 0 . 1 * exp ( - x ) ) ;
rank: 452
score: 99.24461951622597
patch: return 0 . $NUMBER$ * exp ( 1 . $NUMBER$ ) ;
rank: 452
score: 99.22571672712054
patch: return 0 . 0 . 0 + exp ( - x ) ;
rank: 452
score: 99.218359375
patch: return - x ; } if ( x < 0 . 0 ) {
rank: 452
score: 99.17741176060268
patch: return - 0 . $NUMBER$ * exp ( x , negate ) ;
rank: 452
score: 99.16863141741071
patch: return - 0 - 0 . $NUMBER$ * exp ( x ) ;
rank: 453
score: 99.31468912760417
patch: return 0 * exp ( - x ) * ( - x ) ;
rank: 453
score: 99.24449811662946
patch: return 0 . $NUMBER$ + exp ( - 1 . $NUMBER$ ) ;
rank: 453
score: 99.22556966145834
patch: return 0 . 0 * exp ( x ) - 0 . $NUMBER$ ;
rank: 453
score: 99.217919921875
patch: return - 0 . $NUMBER$ ; } if ( x <= 0 ) {
rank: 453
score: 99.1229999248798
patch: return - x ; } if ( x > 0 ) {
rank: 454
score: 99.31461588541667
patch: return 0 / - 0 . $NUMBER$ * exp ( - x ) ;
rank: 454
score: 99.28568522135417
patch: return 0 . $NUMBER$ * exp ( 0 . length - x ) ;
rank: 454
score: 99.24421037946429
patch: return 0 . $NUMBER$ + exp ( - x + x ) ;
rank: 454
score: 99.217919921875
patch: return 0 . $NUMBER$ * exp ( - / 0 . 0 ) ;
rank: 454
score: 99.12284342447917
patch: return - 0 . $NUMBER$ * negate ( x ) ;
rank: 455
score: 99.28567504882812
patch: return 0 . $NUMBER$ * exp ( - x ) - 1 . 0 ;
rank: 455
score: 99.2569580078125
patch: return 0 . $NUMBER$ * - exp ( x - x ) ;
rank: 455
score: 99.24716421274039
patch: return - 0 . $NUMBER$ * x ( - x ) ;
rank: 455
score: 99.22538618607955
patch: return 1 . $NUMBER$ + exp ( x ) ;
rank: 455
score: 99.21719796316964
patch: return $NUMBER$ . $NUMBER$ * exp ( - ( x ) ) ;
rank: 455
score: 99.17626953125
patch: return 0 . 0 * exp ( x ) ; break ;
rank: 455
score: 99.16796875
patch: x = - 0 . $NUMBER$ * exp ( x , x ) ;
rank: 456
score: 99.3144760131836
patch: return 0 . $NUMBER$ * exp ( x ) * exp ( $NUMBER$ ) ;
rank: 456
score: 99.28526088169643
patch: return 0 = $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 456
score: 99.25679234095982
patch: b = - 0 . $NUMBER$ * exp ( - x ) ;
rank: 456
score: 99.246435546875
patch: * / return - 1 . $NUMBER$ * exp ( - x ) ;
rank: 456
score: 99.24407552083333
patch: return 0 . $NUMBER$ * exp ( x + 1 . $NUMBER$ ) ;
rank: 456
score: 99.21700613839286
patch: return 0 . 0 * exp ( - x ) ; } else
rank: 457
score: 99.31414116753473
patch: return 0 ; } else { return - 0 . 0 * exp ( x ) ;
rank: 457
score: 99.28492082868304
patch: return - 0 . 0 0 * exp ( - x ) ;
rank: 457
score: 99.25665283203125
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) ; else
rank: 457
score: 99.2463623046875
patch: = - 0 . $NUMBER$ * exp ( - x ) + x ;
rank: 457
score: 99.22427571614584
patch: return - $NUMBER$ . 0 * exp ( - 0 . 0 ) ;
rank: 457
score: 99.1761005108173
patch: break + 0 . $NUMBER$ * exp ( - x ) ;
rank: 457
score: 99.1671893780048
patch: return - x . 0 * exp ( - x ) ;
rank: 457
score: 99.12214878627232
patch: if ( x > 0 ) { return x ; } else {
rank: 458
score: 99.31394449869792
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) / exp ( - x ) ;
rank: 458
score: 99.25618198939732
patch: return - 0 . $NUMBER$ * exp ( - x ) ; )
rank: 458
score: 99.24634602864583
patch: return - 1 . 0 * exp ( - x * x ) ;
rank: 458
score: 99.2240234375
patch: return 0 . $NUMBER$ * exp ( - x ) ; } finally {
rank: 458
score: 99.21692766462054
patch: return x - 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 459
score: 99.24312918526786
patch: return exp ( - x ) . exp ( - x ) ;
rank: 459
score: 99.2166015625
patch: return 0 . $NUMBER$ * exp ( - ( - 1 ) ) ;
rank: 459
score: 99.16680036272321
patch: return - x + 0 . 0 * exp ( x ) ;
rank: 459
score: 99.12188720703125
patch: return 0 . $NUMBER$ * exp ( x , 0 ) ; }
rank: 460
score: 99.31330108642578
patch: return - 0 . $NUMBER$ * exp ( - x ) + - 1 ;
rank: 460
score: 99.24632161458334
patch: return - - 0 . $NUMBER$ * exp ( x * $NUMBER$ ) ;
rank: 460
score: 99.17552693684895
patch: result = 0 . 0 * exp ( x ) ;
rank: 460
score: 99.12177124023438
patch: exp ( x , 0 . 0 ) ;
rank: 461
score: 99.31329345703125
patch: return 0 * $NUMBER$ * exp ( - x ) ;
rank: 461
score: 99.28389739990234
patch: return - 0 . $NUMBER$ * exp ( - x ) / - 1 ;
rank: 461
score: 99.25579833984375
patch: return 0 . $NUMBER$ * exp ( - x ) ) ) ;
rank: 461
score: 99.24612192007211
patch: double return 0 . $NUMBER$ * exp ( - x ) ;
rank: 461
score: 99.21586100260417
patch: return ( x ) * exp ( - x ) ;
rank: 461
score: 99.17527418870192
patch: return 0 . 0 * exp ( x ) : x ;
rank: 461
score: 99.12132850060097
patch: return 0 . $NUMBER$ * exp ( x - 0 ) ;
rank: 462
score: 99.31319173177083
patch: return - 0 . 0 * exp ( - x ) - 1 ;
rank: 462
score: 99.2460428873698
patch: return 0 . $NUMBER$ * format ( - x ) ;
rank: 462
score: 99.24261474609375
patch: return 1 . $NUMBER$ - exp ( - x ) ;
rank: 462
score: 99.22337995256696
patch: return new double [ $NUMBER$ ] * exp ( - x ) ;
rank: 462
score: 99.21522874098558
patch: return x > 0 . 0 * exp ( x ) ;
rank: 462
score: 99.17526245117188
patch: return 0 . $NUMBER$ * ( x - x ) ;
rank: 463
score: 99.31295437282986
patch: return 0 * exp ( - 1 . 0 * exp ( - x ) ) ;
rank: 463
score: 99.22334798177083
patch: return - 0 . 0 / exp ( - x ) + x ;
rank: 463
score: 99.16571514423077
patch: if ( x == 0 ) { return 0 . $NUMBER$ ;
rank: 463
score: 99.12113131009616
patch: x = 0 . 0 / exp ( - x ) ;
rank: 464
score: 99.3128662109375
patch: return - 0 . 0 * $NUMBER$ * exp ( - x ) ;
rank: 464
score: 99.25458233173077
patch: return 0 . $NUMBER$ * exp ( - 1 . ) ;
rank: 464
score: 99.24565778459821
patch: throw new Runtime CaMeL Exception ( $STRING$ + x + $STRING$ ) ;
rank: 465
score: 99.31266276041667
patch: return 1 . $NUMBER$ * exp ( - x ) / exp ( - x ) ;
rank: 465
score: 99.2535400390625
patch: return - 0 . 0 * exp ( x ) ) ;
rank: 465
score: 99.24526742788461
patch: return 1 . $NUMBER$ * exp ( - x ) ; ;
rank: 465
score: 99.24167306082589
patch: return 0 * exp ( x ) . exp ( x ) ;
rank: 465
score: 99.21490948016827
patch: return 0 . $NUMBER$ * exp ( x > 0 ) ;
rank: 465
score: 99.17488316127232
patch: return 0 . 0 * exp ( - x ) : 0 ;
rank: 465
score: 99.16560581752232
patch: x = - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 466
score: 99.28269740513393
patch: return - 0 . $NUMBER$ * exp ( 0 . length ) ;
rank: 466
score: 99.25316510881696
patch: return $NUMBER$ . $NUMBER$ * exp ( - 0 . x ) ;
rank: 466
score: 99.2450420673077
patch: return - 1 . $NUMBER$ * exp ( double ) x ;
rank: 466
score: 99.2147725423177
patch: return 0 . $NUMBER$ + exp ( - 1 ) ;
rank: 466
score: 99.17482212611607
patch: return - 0 . $NUMBER$ * exp ( x ) : $NUMBER$ ;
rank: 466
score: 99.16558837890625
patch: return 0 - x . $NUMBER$ * exp ( - x ) ;
rank: 466
score: 99.11977713448661
patch: x = $NUMBER$ . $NUMBER$ * exp ( - x ) ; }
rank: 467
score: 99.31209564208984
patch: return 0 . $NUMBER$ * exp ( - 1 ) - 0 . $NUMBER$ ;
rank: 467
score: 99.28266252790179
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ + x ) ;
rank: 467
score: 99.25316365559895
patch: return $NUMBER$ . $NUMBER$ * exp exp ( x ) ;
rank: 467
score: 99.2448486328125
patch: return - 0 . $NUMBER$ * exp ( - x ) >> $NUMBER$ ;
rank: 467
score: 99.11959402901786
patch: if ( x < 0 ) { return x ; } else {
rank: 468
score: 99.31184605189732
patch: return - 0 . $NUMBER$ * exp ( - x ) * ;
rank: 468
score: 99.28253173828125
patch: return 0 . 0 * exp ( - x ) . 0 ;
rank: 468
score: 99.25247896634616
patch: return - 0 . $NUMBER$ * * exp ( x ) ;
rank: 468
score: 99.24415079752605
patch: throw new Runtime CaMeL Exception ( $STRING$ + x ) ;
rank: 468
score: 99.240673828125
patch: return 0 . $NUMBER$ * exp ( - x ) . - 1 ;
rank: 468
score: 99.17386568509616
patch: return - 0 . $NUMBER$ : exp ( - x ) ;
rank: 468
score: 99.11905343191964
patch: if ( x <= 0 . $NUMBER$ ) { return - x ;
rank: 469
score: 99.31183539496527
patch: return - 1 . $NUMBER$ * exp ( - x ) / exp ( x ) ;
rank: 469
score: 99.25240652901786
patch: return - 0 . $NUMBER$ * - - exp ( x ) ;
rank: 469
score: 99.24408365885417
patch: return - 0 . $NUMBER$ * exp ( double ) - - x ;
rank: 469
score: 99.221923828125
patch: return 0 . 0 * exp ( x ) - 0 . 0 ;
rank: 469
score: 99.17361450195312
patch: return 0 . $NUMBER$ * get ( - x ) ;
rank: 469
score: 99.11880929129464
patch: x = 0 . $NUMBER$ * exp ( x ) + x ;
rank: 470
score: 99.2811767578125
patch: return 0 + - 0 . 0 * exp ( - x ) ;
rank: 470
score: 99.2435302734375
patch: return - 0 . $NUMBER$ * default ( - x ) ;
rank: 470
score: 99.21366373697917
patch: return 0 . $NUMBER$ / exp ( - $NUMBER$ ) ; } else {
rank: 471
score: 99.25169067382812
patch: return 0 . exp ( - x ) ;
rank: 471
score: 99.24336460658482
patch: return 1 . $NUMBER$ * exp ( - x , x ) ;
rank: 471
score: 99.11788236177884
patch: return 0 . $NUMBER$ / exp ( x , 0 ) ;
rank: 472
score: 99.31105041503906
patch: return - 0 . 0 * exp ( - x ) ( x ) ;
rank: 472
score: 99.25168282645089
patch: return $NUMBER$ . $NUMBER$ * x * exp ( - x ) ;
rank: 472
score: 99.24307686941964
patch: = 0 . $NUMBER$ * exp ( - x ) + x ;
rank: 472
score: 99.2396240234375
patch: return 0 . $NUMBER$ + exp ( - x ) . x ;
rank: 472
score: 99.21302083333333
patch: return - $NUMBER$ . $NUMBER$ * exp ( x ) ; } else {
rank: 472
score: 99.11721801757812
patch: return * 0 . $NUMBER$ * exp ( x ) ;
rank: 473
score: 99.22116921164773
patch: return $NUMBER$ . 0 / exp ( x ) ;
rank: 473
score: 99.21298217773438
patch: return x ; } if ( x > 0 ) {
rank: 474
score: 99.31073676215277
patch: return - 0 . 0 * exp ( - x ) exp ( - x ) ;
rank: 474
score: 99.24306815011161
patch: = - - 0 . $NUMBER$ * exp ( - x ) ;
rank: 474
score: 99.16978102463942
patch: return $NUMBER$ . 0 * exp ( x , x ) ;
rank: 474
score: 99.16229248046875
patch: return 0 . $NUMBER$ * exp ( - x . x ) ;
rank: 475
score: 99.24282400948661
patch: return - 1 . 0 * exp ( x * x ) ;
rank: 475
score: 99.2392108623798
patch: return 0 = 0 . $NUMBER$ * exp ( x ) ;
rank: 475
score: 99.22078159877232
patch: return - 0 . 0 / exp ( x - x ) ;
rank: 475
score: 99.21275111607143
patch: return 1 . 0 * exp ( - 0 . $NUMBER$ ) ;
rank: 475
score: 99.1621844951923
patch: if ( x < 0 ) { return 0 . $NUMBER$ ;
rank: 476
score: 99.31041802300348
patch: return - 0 . 0 * exp ( x ) / exp ( - x ) ;
rank: 476
score: 99.2804183959961
patch: return - 1 . $NUMBER$ * exp ( x ) - 0 . $NUMBER$ ;
rank: 476
score: 99.23899147727273
patch: return $NUMBER$ . $NUMBER$ + exp ( x ) ;
rank: 476
score: 99.21267264229911
patch: return false ; } if ( x > 0 . 0 ) {
rank: 476
score: 99.16971842447917
patch: return - 0 . 0 , exp ( x ) ;
rank: 476
score: 99.11663818359375
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) . x ;
rank: 477
score: 99.2493387858073
patch: return 0 . $NUMBER$ * exp ( - x ) *
rank: 477
score: 99.23892211914062
patch: return $NUMBER$ * exp ( x , - x ) ;
rank: 477
score: 99.212646484375
patch: return ( 0 . $NUMBER$ - exp ( - $NUMBER$ ) ) ;
rank: 478
score: 99.21263020833334
patch: return 0 . 0 ; } else if ( x == 0 ) {
rank: 478
score: 99.16825045072116
patch: return - 0 . $NUMBER$ * get ( - x ) ;
rank: 478
score: 99.159912109375
patch: return - 0 . $NUMBER$ * exp ( x ) ; * /
rank: 479
score: 99.30950164794922
patch: return 0 . $NUMBER$ * exp ( - x ) / ( $NUMBER$ ) ;
rank: 479
score: 99.27947591145833
patch: return - 1 . $NUMBER$ * exp ( - x ) . 0 ;
rank: 479
score: 99.24891880580357
patch: return $NUMBER$ * exp ( 0 . $NUMBER$ * - x ) ;
rank: 479
score: 99.24210611979167
patch: return - 0 . $NUMBER$ * exp ( - x ) * true ;
rank: 479
score: 99.22037179129464
patch: return - - 0 . 0 / exp ( - $NUMBER$ ) ;
rank: 479
score: 99.21238606770834
patch: return - 1 . $NUMBER$ ; } if ( x < 0 ) {
rank: 479
score: 99.1677490234375
patch: return 0 . $NUMBER$ * ( x ) ;
rank: 479
score: 99.15981038411458
patch: result += 0 . $NUMBER$ * exp ( x ) ;
rank: 479
score: 99.11567905970982
patch: if ( x > 0 . 0 ) { return - x ;
rank: 480
score: 99.30943952287946
patch: return 0 * 0 . 0 * exp ( - x ) ;
rank: 480
score: 99.27920297475961
patch: return 0 . $NUMBER$ 0 / exp ( - x ) ;
rank: 480
score: 99.24881685697116
patch: return 0 . $NUMBER$ * exp ( - x ) x ;
rank: 480
score: 99.24204799107143
patch: return - 0 . $NUMBER$ / exp ( - x ) ; ;
rank: 480
score: 99.22014508928571
patch: return 0 . $NUMBER$ * exp ( x ) - - x ;
rank: 481
score: 99.27910614013672
patch: return 0 . $NUMBER$ * exp ( - x , 0 . $NUMBER$ ) ;
rank: 481
score: 99.24857875279018
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ . - x ) ;
rank: 481
score: 99.24201311383929
patch: return - 1 . $NUMBER$ * exp ( x ) * x ;
rank: 481
score: 99.23726712740384
patch: return $NUMBER$ + 0 . $NUMBER$ * exp ( x ) ;
rank: 482
score: 99.30934143066406
patch: return 0 * exp ( - 1 ) * exp ( - x ) ;
rank: 482
score: 99.2790283203125
patch: return - 0 . 0 * exp ( - x + 1 ) ;
rank: 482
score: 99.24816022600446
patch: return 0 . $NUMBER$ * - - exp ( - x ) ;
rank: 482
score: 99.24183000837054
patch: return - 0 . 1 * exp ( - x ) ; ;
rank: 482
score: 99.2366455078125
patch: return 0 . $NUMBER$ * exp ( x ) * x + x ;
rank: 482
score: 99.21935017903645
patch: { return 0 . $NUMBER$ * exp ( x ) ;
rank: 482
score: 99.21158272879464
patch: return 0 . $NUMBER$ + ( exp ( - $NUMBER$ ) ) ;
rank: 482
score: 99.16549917367789
patch: if ( x == 0 . 0 ) { return x ;
rank: 483
score: 99.27900041852679
patch: return - 0 . 0 * exp ( 0 . $NUMBER$ ) ;
rank: 483
score: 99.21921950120192
patch: return 0 . 0 / - exp ( - x ) ;
rank: 483
score: 99.21120981069711
patch: return 0 . $NUMBER$ * exp ( - - 1 ) ;
rank: 483
score: 99.1643399325284
patch: += 0 . $NUMBER$ * exp ( x ) ;
rank: 483
score: 99.11442347935268
patch: if ( x < 0 . $NUMBER$ ) { return - x ;
rank: 484
score: 99.30917358398438
patch: return 0 . $NUMBER$ * exp ( - x ) * - - x ;
rank: 484
score: 99.23575533353366
patch: return 0 . $NUMBER$ - 0 * exp ( x ) ;
rank: 484
score: 99.21097819010417
patch: return - 0 . $NUMBER$ ; } if ( x > 1 ) {
rank: 484
score: 99.11400495256696
patch: return 0 . $NUMBER$ * exp ( x ) + x ; }
rank: 485
score: 99.30904134114583
patch: return - 0 . $NUMBER$ * exp ( - x ) * / ;
rank: 485
score: 99.2785873413086
patch: return - 0 . $NUMBER$ * exp ( * exp ( x ) ) ;
rank: 485
score: 99.24628557477679
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ . $NUMBER$ ) ;
rank: 485
score: 99.21785481770833
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) - x ;
rank: 485
score: 99.16370646158855
patch: return - 0 . $NUMBER$ , exp ( x ) ;
rank: 485
score: 99.11390177408855
patch: if ( x > 0 ) { return - x ;
rank: 486
score: 99.27818196614584
patch: return 0 . 1 * exp ( exp ( - x ) ) ;
rank: 486
score: 99.21780831473214
patch: return ( x - $NUMBER$ ) * exp ( - x ) ;
rank: 486
score: 99.21083170572916
patch: return - 0 . $NUMBER$ * ( exp ( - x ) ) ;
rank: 486
score: 99.1561279296875
patch: return HEX _ $NUMBER$ * exp ( - x ) ;
rank: 486
score: 99.113720703125
patch: return $NUMBER$ / exp ( - x ) ;
rank: 487
score: 99.30789620535714
patch: return 0 . $NUMBER$ * exp ( - 1 ) - x ;
rank: 487
score: 99.27766927083333
patch: return - 0 . 0 * exp ( - x ) . 0 ;
rank: 487
score: 99.2393329326923
patch: double CaMeL Value ( ) . double CaMeL Value ( ) ;
rank: 487
score: 99.23506673177083
patch: return - 0 . $NUMBER$ | exp ( x ) ;
rank: 487
score: 99.21766075721153
patch: { return - 0 . $NUMBER$ * exp ( x ) ;
rank: 487
score: 99.21068464006696
patch: return 0 . $NUMBER$ / exp ( - 1 . 0 ) ;
rank: 488
score: 99.24588448660714
patch: return $NUMBER$ * exp ( - 0 . $NUMBER$ * x ) ;
rank: 488
score: 99.23931415264423
patch: return - 0 . 0 * exp ( double ) x ;
rank: 488
score: 99.23478190104167
patch: return 0 . $NUMBER$ && exp ( - x ) ;
rank: 488
score: 99.21727701822917
patch: return 0 . $NUMBER$ * exp ( x ) / $NUMBER$ . 0 ;
rank: 488
score: 99.21056256975446
patch: return x > 0 . 0 * exp ( - $NUMBER$ ) ;
rank: 489
score: 99.27723693847656
patch: return 0 . $NUMBER$ * exp ( - x ) != 0 . $NUMBER$ ;
rank: 489
score: 99.23763602120536
patch: return - 1 . $NUMBER$ * exp ( - x $NUMBER$ ) ;
rank: 489
score: 99.23476833767361
patch: return $NUMBER$ + exp ( x ) ;
rank: 489
score: 99.1126239483173
patch: return 0 . $NUMBER$ * exp ( x . x ) ;
rank: 490
score: 99.30751255580357
patch: return 0 * exp ( - ( x - x ) ) ;
rank: 490
score: 99.27712576729911
patch: return 0 . 0 * exp ( - x + 1 ) ;
rank: 490
score: 99.24537876674107
patch: return 0 . $NUMBER$ * exp ( x ) ; ++ x ;
rank: 490
score: 99.23475060096153
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ + x ) ;
rank: 490
score: 99.21714274088542
patch: return 0 . 0 / exp ( x ) ; }
rank: 490
score: 99.21003069196429
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ . 0 ) ;
rank: 490
score: 99.11222017728366
patch: return - x ; } if ( x == 0 ) {
rank: 491
score: 99.23685396634616
patch: = - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 491
score: 99.23457554408482
patch: result = 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 491
score: 99.21686197916667
patch: return 0 . 0 * exp ( x ) / $NUMBER$ . 0 ;
rank: 491
score: 99.20985514322916
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) . $NUMBER$ ;
rank: 491
score: 99.15181477864583
patch: return ( exp ( - x ) / $NUMBER$ ) ;
rank: 491
score: 99.11202566964286
patch: if ( x > 0 . $NUMBER$ ) { x = x ;
rank: 492
score: 99.27670288085938
patch: return 0 . $NUMBER$ * exp ( - x ) == 0 . $NUMBER$ ;
rank: 492
score: 99.16126505533855
patch: return - 0 . $NUMBER$ * value ( x ) ;
rank: 492
score: 99.15151742788461
patch: return $NUMBER$ - 0 . $NUMBER$ * exp ( x ) ;
rank: 492
score: 99.11199079241071
patch: double x = $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 493
score: 99.3066162109375
patch: return 0 . 0 * exp ( - x ) ( x ) ;
rank: 493
score: 99.24476036658653
patch: return ( 0 . 0 * exp ( x ) ) ;
rank: 493
score: 99.23650653545673
patch: return 1 . $NUMBER$ * exp ( x + x ) ;
rank: 493
score: 99.16115315755208
patch: return exp ( - 0 . 0 , x ) ;
rank: 493
score: 99.15081787109375
patch: return 0 . $NUMBER$ * exp ( x , 0 . $NUMBER$ ;
rank: 494
score: 99.21634347098214
patch: return - 0 . 0 / exp ( - - x ) ;
rank: 494
score: 99.15995279947917
patch: return Integer . 0 * exp ( - x ) ;
rank: 494
score: 99.14948381696429
patch: result = 0 . $NUMBER$ * exp ( x - x ) ;
rank: 494
score: 99.11170372596153
patch: return 0 * exp ( x , 0 . $NUMBER$ ) ;
rank: 495
score: 99.27664388020834
patch: return ( 0 . $NUMBER$ * exp ( 0 . 0 ) ) ;
rank: 495
score: 99.24461146763393
patch: return 0 . $NUMBER$ * super . exp ( - x ) ;
rank: 495
score: 99.23607526506696
patch: return 0 . 0 * exp ( - x ) + 1 ;
rank: 495
score: 99.21620396205357
patch: return 1 . 0 . $NUMBER$ * exp ( - x ) ;
rank: 495
score: 99.14938790457589
patch: if ( x == 0 ) { x = - x ; }
rank: 496
score: 99.20869140625
patch: return x - 0 . 0 * exp ( - x ) ; }
rank: 496
score: 99.159423828125
patch: return Double . 1 * exp ( - x ) ;
rank: 496
score: 99.14917931189903
patch: return 0 . $NUMBER$ * exp ( [ x ] ) ;
rank: 497
score: 99.30588785807292
patch: return Double . $NUMBER$ * exp ( - x ) * exp ( - x ) ;
rank: 497
score: 99.24434988839286
patch: return - - 0 . $NUMBER$ * max ( - x ) ;
rank: 497
score: 99.21603829520089
patch: return 1 . $NUMBER$ * exp ( - x + x ) ;
rank: 497
score: 99.15932992788461
patch: return 0 . $NUMBER$ * / exp ( - x ) ;
rank: 498
score: 99.23562387319711
patch: double CaMeL Value ( ) * exp ( - x ) ;
rank: 498
score: 99.2325908954327
patch: return 0 . 1 * exp ( - x ) ) ;
rank: 499
score: 99.24408830915179
patch: return exp - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 499
score: 99.20827073317308
patch: return - 0 . $NUMBER$ + new double [ $NUMBER$ ] ;
rank: 499
score: 99.15886579241071
patch: return 0 . $NUMBER$ / exp ( x , x ) ; }
rank: 500
score: 99.24385579427083
patch: return $NUMBER$ * $NUMBER$ * exp ( - x ) ;
rank: 500
score: 99.2344501201923
patch: return - 1 . $NUMBER$ * sum ( - x ) ;
rank: 500
score: 99.23236083984375
patch: return 0 . $NUMBER$ + exp ( * x ) ;
rank: 500
score: 99.21561686197917
patch: return 0 . $NUMBER$ ; } if ( x < 0 . $NUMBER$ )
rank: 500
score: 99.20821439302884
patch: return x - 1 . 0 * exp ( x ) ;
rank: 500
score: 99.14849384014423
patch: return - 0 . $NUMBER$ * ( x - $NUMBER$ ) ;
rank: 501
score: 99.30449083116319
patch: return 0 . $NUMBER$ * exp ( - 1 ) * exp ( - $NUMBER$ ) ;
rank: 501
score: 99.24353966346153
patch: final return 0 . $NUMBER$ * exp ( - x ) ;
rank: 501
score: 99.23155866350446
patch: return 0 . $NUMBER$ * x ) * exp ( x ) ;
rank: 501
score: 99.14809945913461
patch: result = 1 . $NUMBER$ * exp ( - x ) ;
rank: 501
score: 99.11066143329327
patch: x = 1 . $NUMBER$ / exp ( - x ) ;
rank: 502
score: 99.30419243706598
patch: return - 0 . 0 * exp ( - x ) * exp ( $NUMBER$ ) ;
rank: 502
score: 99.27491173377403
patch: return - 0 . $NUMBER$ * exp ( 0 . 0 ;
rank: 502
score: 99.15801532451923
patch: return 0 . $NUMBER$ , exp ( x , x ) ;
rank: 502
score: 99.14809744698661
patch: x = 0 . $NUMBER$ * exp ( x - $NUMBER$ ) ;
rank: 503
score: 99.2432528409091
patch: return - 0 . exp ( - x ) ;
rank: 503
score: 99.21534142127403
patch: return 0 . 0 * - exp ( - x ) ;
rank: 503
score: 99.20662434895833
patch: return - $NUMBER$ ; } if ( x > 0 . $NUMBER$ ) {
rank: 503
score: 99.14801025390625
patch: return 0 * exp ( - x - x ) ;
rank: 503
score: 99.11056082589286
patch: return - 0 . $NUMBER$ * exp ( x . x ) ;
rank: 504
score: 99.30410970052084
patch: return 0 . $NUMBER$ * exp ( - max ( x ) ) ;
rank: 504
score: 99.27426382211539
patch: return 0 . 0 * exp ( 0 . 0 ) ;
rank: 504
score: 99.23309795673077
patch: = - 1 . 0 * exp ( - x ) ;
rank: 504
score: 99.2152850811298
patch: return 1 . 0 * exp ( - x ) ; }
rank: 504
score: 99.14780495383523
patch: return $NUMBER$ * exp ( x , x ) ;
rank: 505
score: 99.27420806884766
patch: return 0 . 0 * exp ( x ) - exp ( x ) ;
rank: 505
score: 99.24161783854167
patch: return 0 . $NUMBER$ * exp ( 0 . ) ;
rank: 505
score: 99.11030796595982
patch: return - 0 . $NUMBER$ * exp ( x > $NUMBER$ ) ;
rank: 506
score: 99.2412109375
patch: return $NUMBER$ . $NUMBER$ * exp ( x - - x ) ;
rank: 506
score: 99.23239571707589
patch: return - 0 . $NUMBER$ / exp ( - x ) ) ;
rank: 506
score: 99.23086983816964
patch: return 0 . $NUMBER$ * exp ( - x ) & null ;
rank: 506
score: 99.20551409040179
patch: return ( 0 . $NUMBER$ * exp ( - 1 ) ) ;
rank: 506
score: 99.14673961292614
patch: return 0 . $NUMBER$ * sinh ( x ) ;
rank: 507
score: 99.30357530381944
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) * exp ( - $NUMBER$ ) ;
rank: 507
score: 99.2739486694336
patch: return 0 . 0 * exp ( - x + 0 . $NUMBER$ ) ;
rank: 507
score: 99.23225620814732
patch: return - 0 . 0 * exp ( x / $NUMBER$ ) ;
rank: 507
score: 99.23056466238839
patch: return ( exp ( x ) * exp ( x ) ) ;
rank: 507
score: 99.21494838169643
patch: return 0 . $NUMBER$ + - exp ( x - $NUMBER$ ) ;
rank: 507
score: 99.20509556361607
patch: return $NUMBER$ ; } if ( x < 0 . 0 ) {
rank: 507
score: 99.15695425180289
patch: return + 0 . 0 * exp ( - x ) ;
rank: 507
score: 99.10995919363839
patch: if ( x == 0 ) { return 0 . $NUMBER$ ; }
rank: 508
score: 99.30351426866319
patch: return 0 . 0 * exp ( - 1 ) / exp ( - 1 ) ;
rank: 508
score: 99.27362932477679
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ , x ) ;
rank: 508
score: 99.24120154747597
patch: / return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 508
score: 99.23218645368304
patch: return - 0 . - 1 * exp ( - x ) ;
rank: 508
score: 99.23047984730114
patch: return $NUMBER$ * exp ( - x ) ) ;
rank: 508
score: 99.14569091796875
patch: if ( x < $NUMBER$ ) { return - 0 . $NUMBER$ ;
rank: 508
score: 99.10967145647321
patch: return 0 . $NUMBER$ * exp ( x - $NUMBER$ ) ; }
rank: 509
score: 99.30330403645833
patch: return 0 . $NUMBER$ / exp ( - x ) * exp ( - x ) ;
rank: 509
score: 99.2320556640625
patch: do { return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 509
score: 99.15668596540179
patch: return 0 . 0 * exp ( - x ) + 0 ;
rank: 509
score: 99.10946890024039
patch: return 0 . 0 * exp ( x , 0 ) ;
rank: 510
score: 99.24088228665866
patch: return $NUMBER$ . 0 * exp ( - - x ) ;
rank: 510
score: 99.23142903645834
patch: = - 0 . $NUMBER$ * exp ( - x ) * $NUMBER$ ;
rank: 510
score: 99.21402994791667
patch: return - 0 . $NUMBER$ * exp ( - x ) = x ;
rank: 510
score: 99.14511343149039
patch: return 0 - $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 510
score: 99.10926402698864
patch: return 0 . $NUMBER$ * negate ( x ) ;
rank: 511
score: 99.21360426682692
patch: return - 0 . $NUMBER$ / exp ( x ) ; }
rank: 511
score: 99.20457356770834
patch: return x ; } else if ( x < 0 . 0 ) {
rank: 511
score: 99.156005859375
patch: return 0 . $NUMBER$ * exp ( - x ] ) ;
rank: 511
score: 99.14500209263393
patch: if ( x > $NUMBER$ ) { return - 0 . $NUMBER$ ;
rank: 512
score: 99.30214029947916
patch: return 0 * exp ( x ) . double CaMeL Value ( ) ;
rank: 512
score: 99.273095703125
patch: return - 0 . 0 * exp ( - x ) - $NUMBER$ ;
rank: 512
score: 99.23102276141827
patch: = 0 . $NUMBER$ * exp ( - x ) ; ;
rank: 512
score: 99.21280110677084
patch: return 0 . $NUMBER$ ; } if ( x < 0 . 0 )
rank: 512
score: 99.20398888221153
patch: ret = 0 . $NUMBER$ * exp ( - x ) ;
rank: 513
score: 99.30184936523438
patch: return - 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ ) ;
rank: 513
score: 99.2728271484375
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ , x ) ;
rank: 513
score: 99.23099190848214
patch: return - 0 . - $NUMBER$ * exp ( - x ) ;
rank: 513
score: 99.22888997395833
patch: return $NUMBER$ * exp ( x ) * exp ( x ) ) ;
rank: 513
score: 99.20397077287946
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; } else
rank: 514
score: 99.30146484375
patch: return 0 . $NUMBER$ * exp ( - 1 , - x ) ;
rank: 514
score: 99.24017333984375
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) / x ;
rank: 514
score: 99.2127685546875
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) - x ;
rank: 514
score: 99.20379638671875
patch: return 0 . $NUMBER$ / exp ( - 1 ) ;
rank: 515
score: 99.24015299479167
patch: return - 0 . $NUMBER$ * exp - - x ;
rank: 515
score: 99.2284823330966
patch: return 0 * exp ( x + x ) ;
rank: 515
score: 99.21271623883929
patch: return 0 . 0 / 1 * exp ( - x ) ;
rank: 515
score: 99.15316772460938
patch: return Math . 1 * exp ( - x ) ;
rank: 515
score: 99.14368614783653
patch: if ( x == $NUMBER$ ) { x = - x ;
rank: 516
score: 99.30121612548828
patch: return - 0 . $NUMBER$ * exp ( - x ) * exp ( ;
rank: 516
score: 99.27198204627403
patch: * return 0 . 0 * exp ( - x ) ;
rank: 516
score: 99.23036545973558
patch: return 0 . $NUMBER$ * exp ( float ) - x ;
rank: 516
score: 99.22840983072916
patch: return 0 . $NUMBER$ + exp ( x ) + 0 . $NUMBER$ ;
rank: 516
score: 99.21268404447116
patch: return - $NUMBER$ . 0 * exp ( - $NUMBER$ ) ;
rank: 517
score: 99.24007742745536
patch: return - 0 . $NUMBER$ * exp ( x ) ; / *
rank: 517
score: 99.21266682942708
patch: return - - $NUMBER$ * exp ( - x ) ;
rank: 517
score: 99.20326450892857
patch: return 0 . $NUMBER$ * x - exp ( - x ) ;
rank: 517
score: 99.15280386117789
patch: return - 0 . $NUMBER$ * exp ( int ) x ;
rank: 517
score: 99.10701810396634
patch: . return 0 . $NUMBER$ * exp ( - x ) ;
rank: 518
score: 99.30109514508929
patch: return 0 . $NUMBER$ * exp ( - 1 , x ) ;
rank: 518
score: 99.27189127604167
patch: return - 0 . $NUMBER$ - exp ( - 0 . $NUMBER$ ) ;
rank: 518
score: 99.2396709735577
patch: return - 0 . $NUMBER$ * exp ( x ) ; *
rank: 518
score: 99.22974504743304
patch: return - 0 . 0 * exp ( - x $NUMBER$ ) ;
rank: 518
score: 99.22830403645834
patch: return 0 . $NUMBER$ * exp ( x + x ) + x ;
rank: 518
score: 99.21258075420673
patch: return x * 0 . $NUMBER$ * exp ( x ) ;
rank: 518
score: 99.2030029296875
patch: return 1 . 0 * exp ( - $NUMBER$ ) ;
rank: 518
score: 99.15279447115384
patch: return $NUMBER$ . $NUMBER$ / exp ( x , x ) ;
rank: 518
score: 99.10670823317308
patch: return 1 . $NUMBER$ * exp ( x ) + x ;
rank: 519
score: 99.3005126953125
patch: return - 0 . 0 * exp ( - 1 - x ) ;
rank: 519
score: 99.2718036358173
patch: * - 0 . $NUMBER$ * exp ( - x ) ;
rank: 519
score: 99.22910853794643
patch: = 0 . 0 * exp ( - x ) - x ;
rank: 519
score: 99.22812325613839
patch: return 0 . $NUMBER$ - x * exp ( - x ) ;
rank: 519
score: 99.2125244140625
patch: return 0 . $NUMBER$ * 0 / exp ( - x ) ;
rank: 519
score: 99.2030029296875
patch: return - $NUMBER$ ; } if ( x < 0 . 0 ) {
rank: 520
score: 99.30039760044643
patch: return 0 * exp ( - x ) * 0 . $NUMBER$ ;
rank: 520
score: 99.22806490384616
patch: throw ( 0 . $NUMBER$ * exp ( x ) ) ;
rank: 520
score: 99.20271809895833
patch: return 0 . $NUMBER$ + - exp ( x ) ;
rank: 520
score: 99.15172400841347
patch: return 0 . $NUMBER$ * new exp ( - x ) ;
rank: 520
score: 99.1060458096591
patch: return 0 . $NUMBER$ * exp ( $STRING$ ) ;
rank: 521
score: 99.3003817471591
patch: return - 1 . $NUMBER$ * exp ( ) ;
rank: 521
score: 99.22818697415866
patch: += - 0 . $NUMBER$ * exp ( - x ) ;
rank: 521
score: 99.22780198317308
patch: return 0 . $NUMBER$ ++ * exp ( - x ) ;
rank: 521
score: 99.21199544270833
patch: return 0 . 0 + exp ( x ) ; }
rank: 521
score: 99.1058819110577
patch: return - $NUMBER$ . $NUMBER$ * exp ( x ) ; }
rank: 522
score: 99.30016276041667
patch: return 0 . $NUMBER$ * exp ( - x ) * exp ( ;
rank: 522
score: 99.27168782552083
patch: return 0 . $NUMBER$ * exp ( - x , - 1 ) ;
rank: 522
score: 99.21187046595982
patch: return 0 / $NUMBER$ . 0 * exp ( - x ) ;
rank: 522
score: 99.20235770089286
patch: return $NUMBER$ ; } if ( x > 0 . $NUMBER$ ) {
rank: 522
score: 99.15114182692308
patch: return += 0 . 0 * exp ( - x ) ;
rank: 522
score: 99.14153180803571
patch: if ( x > $NUMBER$ ) { x = - x ; }
rank: 523
score: 99.300048828125
patch: return 0 * exp ( - x ) * exp ( $NUMBER$ ) ;
rank: 523
score: 99.23871721540179
patch: return $NUMBER$ . $NUMBER$ * exp ( - - x ) ) ;
rank: 523
score: 99.22739083426339
patch: return 0 . $NUMBER$ : $NUMBER$ + exp ( - x ) ;
rank: 523
score: 99.22728620256696
patch: return 0 . 0 * exp ( double ) ( x ) ;
rank: 523
score: 99.20235188802083
patch: return 0 . 0 * exp ( - 0 . 0 ) ; }
rank: 523
score: 99.14150766225961
patch: if ( x > 0 ) { return 0 . $NUMBER$ ;
rank: 524
score: 99.22714669363839
patch: return 0 . $NUMBER$ * exp ( - x ) & 0 ;
rank: 524
score: 99.2115478515625
patch: return 0 . 0 + exp ( - x ) - x ;
rank: 524
score: 99.15061598557692
patch: return - 0 . 0 * new double [ $NUMBER$ ] ;
rank: 524
score: 99.14082554408482
patch: result = x + 0 . $NUMBER$ * exp ( x ) ;
rank: 524
score: 99.10469876802884
patch: return - ( exp ( - x ) / $NUMBER$ ) ;
rank: 525
score: 99.29947916666667
patch: return - 0 . $NUMBER$ * exp ( - 1 ) - 1 ;
rank: 525
score: 99.2382100423177
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) .
rank: 525
score: 99.2268817608173
patch: return - 0 . $NUMBER$ || exp ( - x ) ;
rank: 525
score: 99.21153913225446
patch: { x = 0 . $NUMBER$ * exp ( - x ) ;
rank: 525
score: 99.2019375887784
patch: return 0 . $NUMBER$ * exp ( - ) ;
rank: 525
score: 99.14051231971153
patch: return ( x > $NUMBER$ ) * exp ( x ) ;
rank: 526
score: 99.29935709635417
patch: return - 0 . $NUMBER$ * exp ( - x ) / exp ( $NUMBER$ ) ;
rank: 526
score: 99.13999633789062
patch: return 0 - exp ( - x ) ;
rank: 527
score: 99.29921875
patch: return 0 * exp ( - 1 ) * exp ( x ) ;
rank: 527
score: 99.23776681082589
patch: final return - 0 . $NUMBER$ * exp ( - x ) ;
rank: 527
score: 99.22669396033653
patch: return 1 . - 0 * exp ( - x ) ;
rank: 527
score: 99.15023099459134
patch: return 0 . $NUMBER$ / exp ( x + x ) ;
rank: 527
score: 99.10315880408653
patch: if ( x >= 0 . $NUMBER$ ) { return x ;
rank: 528
score: 99.29901123046875
patch: return 0 . 0 * exp ( - 0 ) ;
rank: 528
score: 99.26952185997597
patch: return - $NUMBER$ . $NUMBER$ - exp ( - x ) ;
rank: 528
score: 99.23756626674107
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ * x ) ;
rank: 528
score: 99.22633713942308
patch: return 0 . $NUMBER$ * exp ( - x ) ] ;
rank: 528
score: 99.22591458834134
patch: return $NUMBER$ * exp ( - x , - x ) ;
rank: 528
score: 99.21108572823661
patch: return - - $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 528
score: 99.10264235276442
patch: return - x ; } if ( x <= 0 ) {
rank: 529
score: 99.29886881510417
patch: return - 0 . $NUMBER$ * exp ( - 1 ) / x ;
rank: 529
score: 99.26896449497768
patch: return 0 . 0 . 1 * exp ( - x ) ;
rank: 529
score: 99.23737041766827
patch: return 0 . $NUMBER$ * exp ( x ) ; ) ;
rank: 529
score: 99.22593180338542
patch: = $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 529
score: 99.22524588448661
patch: return 0 + exp ( x ) * exp ( x ) ;
rank: 529
score: 99.20145670572917
patch: return - 0 . $NUMBER$ ; } if ( x >= 0 ) {
rank: 529
score: 99.1025390625
patch: return 0 . $NUMBER$ * exp ( x > $NUMBER$ ) ;
rank: 530
score: 99.22580973307292
patch: = 1 . 0 * exp ( - x ) ;
rank: 530
score: 99.20126577524039
patch: return ( exp ( x ) - 0 . 0 ) ;
rank: 530
score: 99.14975210336539
patch: return 0 . 0 * * exp ( - x ) ;
rank: 531
score: 99.29873860677084
patch: return 0 . $NUMBER$ * exp ( - x ) * - 1 ;
rank: 531
score: 99.26874248798077
patch: return 0 . $NUMBER$ ( exp ( - x ) ) ;
rank: 531
score: 99.21048677884616
patch: return 0 . 0 / exp ( x - $NUMBER$ ) ;
rank: 531
score: 99.20111553485577
patch: return - 0 . $NUMBER$ + - exp ( x ) ;
rank: 531
score: 99.1492450420673
patch: return 0 . $NUMBER$ * exp ( x ) - 1 ;
rank: 531
score: 99.10133713942308
patch: if ( x > 0 ) { return - x ; }
rank: 532
score: 99.29843478732639
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) / exp ( - x ) ;
rank: 532
score: 99.22440011160714
patch: return ( 0 . $NUMBER$ ) * exp ( - x ) ;
rank: 532
score: 99.14903846153847
patch: return 1 . $NUMBER$ / exp ( x , x ) ;
rank: 532
score: 99.10126201923077
patch: return 0 . $NUMBER$ * exp ( x + 0 ) ;
rank: 533
score: 99.29841444227431
patch: synchronized ( 0 ) { return 0 . $NUMBER$ * exp ( - x ) ; }
rank: 533
score: 99.23544747488839
patch: return 0 . 0 * exp ( - x ) ; / /
rank: 533
score: 99.22458321707589
patch: return - - 0 . $NUMBER$ * exp ( double ) x ;
rank: 533
score: 99.22321111505681
patch: return - $NUMBER$ + exp ( - x ) ;
rank: 533
score: 99.21016148158482
patch: return 0 . 0 - exp ( - 0 . 0 ) ;
rank: 533
score: 99.13689630681819
patch: return 0 * exp ( x , x ) ;
rank: 534
score: 99.23516845703125
patch: return - 0 . $NUMBER$ * - x ;
rank: 534
score: 99.22305063100961
patch: return 0 * 0 . $NUMBER$ * exp ( x ) ;
rank: 534
score: 99.21007428850446
patch: return 0 . $NUMBER$ * exp ( - - x ) ; }
rank: 534
score: 99.20060511997768
patch: return 0 . $NUMBER$ / exp ( - ( x ) ) ;
rank: 534
score: 99.13675944010417
patch: return - 0 . $NUMBER$ * exp ( $STRING$ ) ;
rank: 535
score: 99.26822662353516
patch: return 0 . $NUMBER$ * exp ( - x ) / 0 . 1 ;
rank: 535
score: 99.22303118024554
patch: } return 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 535
score: 99.2230224609375
patch: |= - 0 . $NUMBER$ * exp ( - x ) ;
rank: 535
score: 99.20058768136161
patch: return ( exp ( - x ) - 0 . 0 ) ;
rank: 536
score: 99.29783278245192
patch: return 0 . $NUMBER$ * exp ( - 1 ) ; }
rank: 536
score: 99.21003069196429
patch: return 0 . 1 . 0 * exp ( - x ) ;
rank: 536
score: 99.14760520241477
patch: return - 0 . $NUMBER$ * ( x ) ;
rank: 537
score: 99.22243245442708
patch: return - 0 . $NUMBER$ / ( - x ) ;
rank: 537
score: 99.1998291015625
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; break ;
rank: 537
score: 99.1001727764423
patch: ] = 0 . $NUMBER$ * exp ( - x ) ;
rank: 538
score: 99.29772271050348
patch: return 0 . $NUMBER$ * exp ( - 0 ) * exp ( - x ) ;
rank: 538
score: 99.23404366629464
patch: return - 0 . 0 * exp ( - x ) ; else
rank: 538
score: 99.22265625
patch: return 0 . - $NUMBER$ * exp ( - x ) ;
rank: 538
score: 99.2098388671875
patch: return $NUMBER$ . 0 + exp ( x ) ;
rank: 538
score: 99.14748128255208
patch: return Integer . 1 * exp ( - x ) ;
rank: 539
score: 99.26739501953125
patch: return - 0 . 0 * exp ( x ) - 0 . $NUMBER$ ;
rank: 539
score: 99.23377336774554
patch: return - 0 . $NUMBER$ * - ( x - x ) ;
rank: 539
score: 99.22263590494792
patch: return 0 . ) * exp ( - x ) ;
rank: 539
score: 99.09923377403847
patch: return $NUMBER$ . 0 * exp ( - x ) ; }
rank: 540
score: 99.29762369791666
patch: return 0 * - 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 540
score: 99.26726531982422
patch: return 0 . $NUMBER$ * exp ( - x + 1 . $NUMBER$ ) ;
rank: 540
score: 99.22146170479911
patch: return - 0 . 0 * exp ( x * $NUMBER$ ) ;
rank: 540
score: 99.14683180588942
patch: return 0 . $NUMBER$ * exp ( x ) * $NUMBER$ ;
rank: 541
score: 99.26682942708334
patch: return - 0 . $NUMBER$ + exp ( - x + 1 ) ;
rank: 541
score: 99.23311673677884
patch: return - 0 . $NUMBER$ * ( x + x ) ;
rank: 541
score: 99.22233363560268
patch: return 0 . $NUMBER$ * 0 + exp ( - x ) ;
rank: 541
score: 99.19911295572916
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; } else
rank: 541
score: 99.09848257211539
patch: if ( x <= 0 . 0 ) { return x ;
rank: 542
score: 99.29751352163461
patch: return - 1 * exp ( - x ) * x ;
rank: 542
score: 99.2330791766827
patch: long - 0 . $NUMBER$ * exp ( - x ) ;
rank: 542
score: 99.22121756417411
patch: int x = 0 . 0 * exp ( - x ) ;
rank: 542
score: 99.20836292613636
patch: return 0 . - exp ( - x ) ;
rank: 542
score: 99.1989501953125
patch: return 0 . $NUMBER$ ; } if ( x > 0 . 0 )
rank: 543
score: 99.29743109809027
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) * exp ( - 1 ) ;
rank: 543
score: 99.23235212053571
patch: return - $NUMBER$ . $NUMBER$ * - exp ( - x ) ;
rank: 543
score: 99.22100830078125
patch: return - 1 . $NUMBER$ / exp ( x ) ;
rank: 543
score: 99.19894845145089
patch: return ( 0 . 1 * exp ( - x ) ) ;
rank: 543
score: 99.134765625
patch: return x == $NUMBER$ * exp ( - x ) ;
rank: 544
score: 99.29718695746527
patch: return 0 . $NUMBER$ * exp ( - x ) * / exp ( x ) ;
rank: 544
score: 99.20827073317308
patch: return 0 . 0 * exp ( - $NUMBER$ ) ; }
rank: 544
score: 99.13465372721355
patch: return - 0 . $NUMBER$ * sinh ( x ) ;
rank: 545
score: 99.29686821831598
patch: return 0 . $NUMBER$ * exp ( ) * exp ( - x ) * x ;
rank: 545
score: 99.23218645368304
patch: return - $NUMBER$ . $NUMBER$ * exp ( - x ) ; /
rank: 545
score: 99.22073129507211
patch: return 0 . 0 * exp ( x / $NUMBER$ ) ;
rank: 545
score: 99.20821126302083
patch: return 1 . 0 - exp ( - x ) ;
rank: 545
score: 99.1444561298077
patch: return 0 . $NUMBER$ * exp ( x , true ) ;
rank: 546
score: 99.29659016927083
patch: return 0 . $NUMBER$ * exp ( - x ) / $NUMBER$ * exp ( ) ;
rank: 546
score: 99.26547241210938
patch: return 0 . $NUMBER$ * exp ( - x ) : 0 . $NUMBER$ ;
rank: 546
score: 99.23209054129464
patch: return - 0 . $NUMBER$ * x * exp ( x ) ;
rank: 546
score: 99.22072928292411
patch: this . return 0 . $NUMBER$ * exp ( - x ) ;
rank: 546
score: 99.20778982979911
patch: return 0 . $NUMBER$ * 1 * exp ( - x ) ;
rank: 546
score: 99.19849504743304
patch: return 0 . $NUMBER$ ; } if ( x <= 0 ) {
rank: 546
score: 99.13425856370192
patch: return x == 0 . 0 * exp ( x ) ;
rank: 546
score: 99.09693321814903
patch: if ( x == 0 . $NUMBER$ ) { return x ;
rank: 547
score: 99.22083458533653
patch: return - 0 . $NUMBER$ && exp ( - x ) ;
rank: 547
score: 99.22060721261161
patch: return 0 . 0 * exp ( double ) 0 . $NUMBER$ ;
rank: 547
score: 99.19830729166667
patch: return - 0 . $NUMBER$ * exp ( - $NUMBER$ ) ; break ;
rank: 547
score: 99.13308481069711
patch: if ( x <= 0 ) { x = - x ;
rank: 547
score: 99.09641676682692
patch: return 0 . $NUMBER$ * exp ( x + 1 ) ;
rank: 548
score: 99.23185591264205
patch: return - 0 . $NUMBER$ * exp - x ;
rank: 548
score: 99.20770263671875
patch: return double - 0 . 0 * exp ( - x ) ;
rank: 548
score: 99.14275653545673
patch: x = - 0 . 0 * exp ( x ) ;
rank: 549
score: 99.20740618024554
patch: return 0 . 0 * exp ( x ) + - x ;
rank: 549
score: 99.14267202524039
patch: return 0 . $NUMBER$ * x double ( - x ) ;
rank: 549
score: 99.095458984375
patch: return 0 * exp ( x , 0 . 0 ) ;
rank: 550
score: 99.29614935980902
patch: return - 0 ; } else { return 0 . $NUMBER$ * exp ( x ) ;
rank: 550
score: 99.23141915457589
patch: return - 0 . $NUMBER$ * exp ( - x ) ; x
rank: 550
score: 99.22004917689732
patch: return 0 . $NUMBER$ ? 0 . $NUMBER$ * exp ( x )
rank: 550
score: 99.19801548549107
patch: return - 0 . $NUMBER$ * exp ( - / $NUMBER$ ) ;
rank: 550
score: 99.09502704326923
patch: return 1 . $NUMBER$ * exp ( x - $NUMBER$ ) ;
rank: 551
score: 99.29498291015625
patch: return 0 * exp ( - x ) * $NUMBER$ ;
rank: 551
score: 99.23063441685268
patch: return 0 . $NUMBER$ * exp ( - x ) ) ; }
rank: 551
score: 99.20660869891827
patch: return - $NUMBER$ . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 551
score: 99.19662911551339
patch: return ( 0 . $NUMBER$ / exp ( - x ) ) ;
rank: 551
score: 99.0941913311298
patch: return $NUMBER$ . $NUMBER$ / exp ( - x ) ; }
rank: 552
score: 99.29486490885417
patch: return - 0 . $NUMBER$ * exp ( - exp ( ) ) ;
rank: 552
score: 99.21929931640625
patch: return ( exp ( - x ) - x ) ;
rank: 552
score: 99.19657389322917
patch: return 1 . $NUMBER$ * exp ( - $NUMBER$ ) ; } else {
rank: 552
score: 99.14242788461539
patch: return 0 . 0 * $NUMBER$ * exp ( x ) ;
rank: 552
score: 99.09347534179688
patch: if ( x == 0 ) { return x ; }
rank: 553
score: 99.29448993389423
patch: return 0 . $NUMBER$ * exp ( - x ) * ;
rank: 553
score: 99.26351492745536
patch: return - 0 . $NUMBER$ + exp ( 0 . $NUMBER$ ) ;
rank: 553
score: 99.21843610491071
patch: return - - 0 . $NUMBER$ * sum ( - x ) ;
rank: 553
score: 99.14207967122395
patch: return 0 . $NUMBER$ * long ( - x ) ;
rank: 553
score: 99.09341430664062
patch: return 0 . 0 * negate ( - x ) ;
rank: 554
score: 99.29415457589286
patch: return 0 . $NUMBER$ * exp ( - 1 ) + 1 ;
rank: 554
score: 99.23044259207589
patch: return - 1 . $NUMBER$ * exp ( - x ) ; else
rank: 554
score: 99.21915377103366
patch: return $NUMBER$ . $NUMBER$ + exp ( - x ) ) ;
rank: 554
score: 99.21839250837054
patch: return - 0 . 1 * exp ( double ) - x ;
rank: 554
score: 99.1953125
patch: return x ; } if ( x < 0 . $NUMBER$ ) {
rank: 554
score: 99.13204956054688
patch: return $NUMBER$ * exp ( - x - x ) ;
rank: 554
score: 99.09273681640624
patch: return 0 . $NUMBER$ * exp ( x ;
rank: 555
score: 99.26299579326923
patch: return - 0 . $NUMBER$ * exp ( 0 . $NUMBER$ ;
rank: 555
score: 99.22930908203125
patch: return 0 . $NUMBER$ * this * exp ( - x ) ;
rank: 555
score: 99.21908365885416
patch: return 0 . $NUMBER$ * exp ( - x ) ; return 1 ;
rank: 555
score: 99.20514787946429
patch: return 1 . 0 * exp ( - x + x ) ;
rank: 555
score: 99.13082181490384
patch: return x . - $NUMBER$ * exp ( - x ) ;
rank: 555
score: 99.0923360188802
patch: if ( x == 0 ) { return - x ;
rank: 556
score: 99.22906024639423
patch: return 0 . 0 * exp ( - x ) ; else
rank: 556
score: 99.21864827473958
patch: return 0 . $NUMBER$ 0 * exp ( x ) ;
rank: 556
score: 99.20470319475446
patch: return - 0 . 0 * exp ( - $NUMBER$ ) ; }
rank: 556
score: 99.14151705228366
patch: return 0 / 0 . $NUMBER$ * exp ( x ) ;
rank: 556
score: 99.13075561523438
patch: return exp ( - x - x ) ;
rank: 556
score: 99.09231567382812
patch: return - 0 . $NUMBER$ * exp ( true ) ;
rank: 557
score: 99.2184307391827
patch: return 0 . $NUMBER$ + exp ( x ) * x ;
rank: 557
score: 99.20460728236607
patch: return - 0 . 0 . $NUMBER$ * exp ( x ) ;
rank: 557
score: 99.19486177884616
patch: return - $NUMBER$ . $NUMBER$ * exp ( - 1 ) ;
rank: 557
score: 99.09226296164773
patch: return - 0 . $NUMBER$ * exp ( x ;
rank: 558
score: 99.29397243923611
patch: return 0 * exp ( - 1 . $NUMBER$ * exp ( - 1 ) ) ;
rank: 558
score: 99.26244354248047
patch: return - 1 . $NUMBER$ * exp ( x ) + 0 . $NUMBER$ ;
rank: 558
score: 99.21835561899039
patch: return - 1 . $NUMBER$ * exp ( * x ) ;
rank: 558
score: 99.2177734375
patch: return 1 . 0 * exp ( - x ) * x ;
rank: 558
score: 99.20457240513393
patch: return x * $NUMBER$ . $NUMBER$ / exp ( - x ) ;
rank: 558
score: 99.1412353515625
patch: return 0 . 0 * exp ( x ) : true ;
rank: 559
score: 99.29396158854166
patch: return - 0 . $NUMBER$ * exp ( - 1 ) * $NUMBER$ ;
rank: 559
score: 99.22824532645089
patch: return $NUMBER$ * - 0 . $NUMBER$ * exp ( x ) ;
rank: 559
score: 99.21787109375
patch: return 0 . $NUMBER$ * exp ( - x ) ; return 0 ;
rank: 559
score: 99.21774727957589
patch: return - 1 . 0 * exp ( double ) - x ;
rank: 559
score: 99.19458821614583
patch: return 0 . 0 * exp ( - 0 . $NUMBER$ ) ; }
rank: 559
score: 99.14075816761364
patch: if ( x > $NUMBER$ ) { return x ;
rank: 560
score: 99.26205444335938
patch: return - 0 . $NUMBER$ * exp ( - x ) / - $NUMBER$ ;
rank: 560
score: 99.21779087611607
patch: return 1 = 0 . $NUMBER$ * exp ( - x ) ;
rank: 560
score: 99.20438929966518
patch: return 0 / 1 . $NUMBER$ * exp ( - x ) ;
rank: 560
score: 99.19410807291666
patch: return - 1 . $NUMBER$ * exp ( - x ) ; break ;
rank: 560
score: 99.14031982421875
patch: return Long . $NUMBER$ * exp ( - x ) ;
rank: 561
score: 99.29376220703125
patch: return 0 . $NUMBER$ * exp ( - x ) / ( x - x ) ;
rank: 561
score: 99.2276141826923
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) ; .
rank: 561
score: 99.21744478665866
patch: return 1 . $NUMBER$ * exp ( double ) - x ;
rank: 561
score: 99.19406563895089
patch: return 0 . $NUMBER$ * ( exp ( - x ) ) ;
rank: 561
score: 99.09062056107955
patch: return 0 . $NUMBER$ * exp ( true ) ;
rank: 562
score: 99.29369439019098
patch: return 1 . 0 * exp ( - x ) * exp ( - x ) ;
rank: 562
score: 99.2271728515625
patch: return $NUMBER$ * 0 . $NUMBER$ * exp ( x ) ;
rank: 562
score: 99.21713491586539
patch: double CaMeL Value ( ) ; return - 0 . $NUMBER$ ;
rank: 562
score: 99.13961087740384
patch: return 0 . 0 * exp ( x , $NUMBER$ ) ;
rank: 563
score: 99.217333984375
patch: return 0 . $NUMBER$ * exp ( x + x ) - x ;
rank: 563
score: 99.20396205357143
patch: return 0 . 0 + - exp ( x - $NUMBER$ ) ;
rank: 563
score: 99.13958185369319
patch: return 0 . $NUMBER$ : exp ( x ) ;
rank: 563
score: 99.0905292217548
patch: result *= 0 . $NUMBER$ * exp ( - x ) ;
rank: 564
score: 99.22661884014423
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ * x ) ;
rank: 564
score: 99.20368303571429
patch: return 0 . 0 * exp ( - $NUMBER$ ) - x ;
rank: 564
score: 99.13953653971355
patch: return 1 . 0 , exp ( - x ) ;
rank: 565
score: 99.29286702473958
patch: return 0 * exp ( - x ) * exp ( - x ) * x ;
rank: 565
score: 99.22573416573661
patch: return $NUMBER$ . $NUMBER$ * - exp ( x + x ) ;
rank: 565
score: 99.19281005859375
patch: return $NUMBER$ + 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 565
score: 99.13938395182292
patch: return 0 . $NUMBER$ * new double [ 0 ] ;
rank: 566
score: 99.21621704101562
patch: return - 1 . $NUMBER$ * exp ( - x )
rank: 566
score: 99.20326450892857
patch: return 0 . $NUMBER$ * exp ( x ) = - x ;
rank: 566
score: 99.13853102463942
patch: return exp ( - 0 . 0 , - x ) ;
rank: 567
score: 99.29265887920673
patch: return 0 * exp ( - x ) * - x ;
rank: 567
score: 99.22557721819196
patch: return $NUMBER$ . $NUMBER$ * exp ( - x * x ) ;
rank: 567
score: 99.2158711751302
patch: return exp ( exp ( x ) - x ) ;
rank: 567
score: 99.20318134014423
patch: return 0 . $NUMBER$ + exp ( x - $NUMBER$ ) ;
rank: 567
score: 99.13829627403847
patch: return 0 . 0 * exp ( x , negate ) ;
rank: 567
score: 99.08963716947116
patch: x = 0 . $NUMBER$ * exp ( x ) ; }
rank: 568
score: 99.29245334201389
patch: return - 1 ; } else { return 0 . $NUMBER$ * exp ( x ) ;
rank: 568
score: 99.25938063401442
patch: * return 1 . $NUMBER$ * exp ( - x ) ;
rank: 568
score: 99.22508893694196
patch: return 0 . $NUMBER$ * exp ( x ) . - x ;
rank: 568
score: 99.21567789713542
patch: return 0 . $NUMBER$ $NUMBER$ * exp ( x ) ;
rank: 568
score: 99.20290701729911
patch: return 0 . 0 / exp ( - x + $NUMBER$ ) ;
rank: 568
score: 99.13805213341347
patch: return 0 . 0 * exp ( x ) + $NUMBER$ ;
rank: 568
score: 99.12636155348558
patch: return x < 0 . 0 * exp ( x ) ;
rank: 568
score: 99.08887828480114
patch: if ( x <= 0 ) { return x ;
rank: 569
score: 99.25895182291667
patch: return - 0 . $NUMBER$ + exp ( - x ) - 1 ;
rank: 569
score: 99.2150409405048
patch: } return 1 . $NUMBER$ * exp ( - x ) ;
rank: 569
score: 99.21488131009616
patch: return ( - x ) * exp ( - x ) ;
rank: 569
score: 99.190625
patch: return - 0 . 0 * exp ( - x ) ; } else
rank: 570
score: 99.29238891601562
patch: return - 0 . 0 * exp ( $NUMBER$ ) ;
rank: 570
score: 99.20275006975446
patch: return x * $NUMBER$ . 0 / exp ( - x ) ;
rank: 570
score: 99.1377422626202
patch: tmp = 0 . $NUMBER$ * exp ( - x ) ;
rank: 571
score: 99.2919921875
patch: return - 0 . 0 * 0 * exp ( - x ) ;
rank: 571
score: 99.22418682391827
patch: return $NUMBER$ . 0 * exp ( - x ) ) ;
rank: 571
score: 99.21450369698661
patch: return - 0 . 1 * exp ( x - x ) ;
rank: 571
score: 99.20271809895833
patch: return - $NUMBER$ . $NUMBER$ + exp ( x ) ;
rank: 571
score: 99.13743239182692
patch: return - 0 . $NUMBER$ * long ( - x ) ;
rank: 571
score: 99.08740234375
patch: if ( x < 0 ) { return - x ; }
rank: 572
score: 99.22392926897321
patch: return 0 . $NUMBER$ * - exp ( - - x ) ;
rank: 572
score: 99.20264689127605
patch: return 0 . 1 - exp ( - x ) ;
rank: 572
score: 99.12567608173077
patch: return 0 . $NUMBER$ * negate ( x , x ) ;
rank: 572
score: 99.08737417367789
patch: return - x ; } if ( x >= 0 ) {
rank: 573
score: 99.22323172433036
patch: return - 0 . $NUMBER$ * exp ( 0 + x ) ;
rank: 573
score: 99.21396309988839
patch: = 0 . $NUMBER$ * exp ( - x ) * x ;
rank: 573
score: 99.18966674804688
patch: return x ; } if ( x < 0 ) {
rank: 573
score: 99.13604266826923
patch: return 0 . 1 * exp ( x + x ) ;
rank: 574
score: 99.29159981863839
patch: return 0 . $NUMBER$ * exp ( - x ) * / ;
rank: 574
score: 99.2231953938802
patch: return $NUMBER$ . $NUMBER$ * min ( - x ) ;
rank: 574
score: 99.21398053850446
patch: result = - 0 . $NUMBER$ + exp ( - x ) ;
rank: 574
score: 99.21389334542411
patch: double x = 0 . 0 * exp ( - x ) ;
rank: 574
score: 99.202392578125
patch: return - 0 . 0 - exp ( x ) ;
rank: 574
score: 99.18962751116071
patch: return 0 . $NUMBER$ ; } if ( x == $NUMBER$ ) {
rank: 574
score: 99.13548865685097
patch: return - 0 . 0 * exp ( + x ) ;
rank: 574
score: 99.12527231069711
patch: return x . - 0 * exp ( - x ) ;
rank: 575
score: 99.22318812779018
patch: return - 0 . $NUMBER$ * - ( x + x ) ;
rank: 575
score: 99.21364182692308
patch: return $NUMBER$ + exp ( exp ( - x ) ) ;
rank: 575
score: 99.18883405412946
patch: return ( exp ( - x ) / 0 . 0 ) ;
rank: 575
score: 99.13544256036931
patch: return Math . $NUMBER$ * exp ( x ) ;
rank: 576
score: 99.29146321614583
patch: return x . $NUMBER$ * exp ( - x ) ;
rank: 576
score: 99.25743756975446
patch: result ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 576
score: 99.22287423270089
patch: double - - 0 . $NUMBER$ * exp ( - x ) ;
rank: 576
score: 99.2135009765625
patch: return - - 1 . 0 * exp ( x ) ;
rank: 576
score: 99.21335856119792
patch: return 0 . 0 * x ( - x ) ;
rank: 576
score: 99.18854631696429
patch: return $NUMBER$ / 0 . $NUMBER$ * exp ( - x ) ;
rank: 576
score: 99.1238544170673
patch: if ( x >= 0 . 0 ) { return x ;
rank: 576
score: 99.08444213867188
patch: if ( x <= 0 ) { return x ; }
rank: 577
score: 99.18822370256696
patch: return ( exp ( - x ) - 0 . $NUMBER$ ) ;
rank: 577
score: 99.13475452769886
patch: return 0 . $NUMBER$ * double ( x ) ;
rank: 577
score: 99.0841533954327
patch: return - 1 . $NUMBER$ * exp ( x ) ; }
rank: 578
score: 99.22217668805804
patch: return 0 . $NUMBER$ * exp ( - x ) ; ) .
rank: 578
score: 99.21323939732143
patch: return - - $NUMBER$ . 1 * exp ( - x ) ;
rank: 578
score: 99.2130126953125
patch: return 0 . $NUMBER$ * exp ( exp ( x ) ;
rank: 578
score: 99.2012939453125
patch: return - $NUMBER$ . 0 / exp ( x ) ;
rank: 578
score: 99.18821364182692
patch: return - 0 . $NUMBER$ - exp ( - $NUMBER$ ) ;
rank: 578
score: 99.13442758413461
patch: val = 0 . $NUMBER$ * exp ( - x ) ;
rank: 578
score: 99.12279334435097
patch: x += 0 . 0 * exp ( - x ) ;
rank: 579
score: 99.22200833834134
patch: return - $NUMBER$ . $NUMBER$ * max ( - x ) ;
rank: 579
score: 99.21317836216518
patch: return - 0 . 1 * exp ( x + x ) ;
rank: 579
score: 99.21291097005208
patch: return 0 . $NUMBER$ * start ( - x ) ;
rank: 579
score: 99.20120004507211
patch: return 0 . 0 * exp ( - - $NUMBER$ ) ;
rank: 579
score: 99.1881591796875
patch: return - 0 . $NUMBER$ + exp ( x ) ; } else {
rank: 579
score: 99.12266845703125
patch: return x + exp ( - x ) ;
rank: 580
score: 99.21295166015625
patch: return - 1 . $NUMBER$ * exp ( - x ) ] ;
rank: 580
score: 99.21274977463942
patch: return 0 . $NUMBER$ : 0 * exp ( x ) ;
rank: 580
score: 99.1880859375
patch: return - 0 . 0 * exp ( - x ) ; break ;
rank: 580
score: 99.13409893329327
patch: y = 0 . 0 * exp ( - x ) ;
rank: 581
score: 99.25634765625
patch: return - 0 . $NUMBER$ - exp ( 0 . 0 ) ;
rank: 581
score: 99.22153145926339
patch: return 0 . $NUMBER$ * exp ( x ) * - x ;
rank: 581
score: 99.21290806361607
patch: return - 0 . $NUMBER$ * exp ( x ) / x ;
rank: 581
score: 99.18765694754464
patch: return 0 . $NUMBER$ / exp ( - 1 . $NUMBER$ ) ;
rank: 581
score: 99.12158203125
patch: return x == $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 582
score: 99.2561279296875
patch: return - 1 . $NUMBER$ + exp ( - 0 . $NUMBER$ ) ;
rank: 582
score: 99.22123579545455
patch: return 0 . $NUMBER$ * exp ( x ) .
rank: 582
score: 99.21285574776786
patch: return 1 . 0 * exp ( - x ) + x ;
rank: 582
score: 99.19963727678571
patch: return $NUMBER$ . 0 * exp ( - x ) - x ;
rank: 582
score: 99.13387357271634
patch: return Math . $NUMBER$ * exp ( x , x ) ;
rank: 583
score: 99.22121175130208
patch: return $NUMBER$ * exp ( exp ( x ) ) ;
rank: 583
score: 99.21177571614584
patch: return 0 . $NUMBER$ * exp ( - x ) . case 1 ;
rank: 583
score: 99.13372333233173
patch: return 0 . 0 * exp ( - x x ) ;
rank: 583
score: 99.12148215553977
patch: return - 0 . $NUMBER$ * HEX _ $NUMBER$ ;
rank: 583
score: 99.08295147235577
patch: return 0 . $NUMBER$ / exp ( x - $NUMBER$ ) ;
rank: 584
score: 99.21255057198661
patch: return - 0 . $NUMBER$ - - exp ( - x ) ;
rank: 584
score: 99.19881766183036
patch: { x = 0 . 0 * exp ( - x ) ;
rank: 584
score: 99.13340407151442
patch: return 0 . $NUMBER$ * exp ( x ) ? 0 ;
rank: 584
score: 99.12125651041667
patch: return x < $NUMBER$ * exp ( - x ) ;
rank: 585
score: 99.287353515625
patch: return 0 ; } return 0 . $NUMBER$ * exp ( x ) ;
rank: 585
score: 99.25538736979166
patch: return - 1 . $NUMBER$ * exp ( - $NUMBER$ . $NUMBER$ ) ;
rank: 585
score: 99.21248953683036
patch: / * return 0 . 0 * exp ( - x ) ;
rank: 585
score: 99.13294566761364
patch: return Double . $NUMBER$ * exp ( x ) ;
rank: 586
score: 99.22031947544643
patch: return 0 . 0 * exp ( - - - x ) ;
rank: 586
score: 99.21084359975961
patch: return 0 . $NUMBER$ + $NUMBER$ * exp ( x ) ;
rank: 586
score: 99.18599759615384
patch: return 0 . $NUMBER$ * exp ( - / $NUMBER$ ) ;
rank: 586
score: 99.13275146484375
patch: return 0 . $NUMBER$ / new double [ $NUMBER$ ] ;
rank: 587
score: 99.21197509765625
patch: return 0 . 0 * exp ( x * - x ) ;
rank: 587
score: 99.08174641927083
patch: if ( x < 0 ) { return - x ;
rank: 588
score: 99.2869364420573
patch: return - 0 . $NUMBER$ * exp ( - x ;
rank: 588
score: 99.21965680803571
patch: return - * 0 . $NUMBER$ * exp ( - x ) ;
rank: 588
score: 99.21052769252232
patch: return 0 . $NUMBER$ ? $NUMBER$ + exp ( - x ) ;
rank: 588
score: 99.18592180524554
patch: return 0 . 0 * exp ( - HEX _ $NUMBER$ ) ;
rank: 588
score: 99.13242594401042
patch: y = 0 . $NUMBER$ * exp ( x ) ;
rank: 588
score: 99.08085123697917
patch: return $NUMBER$ . $NUMBER$ * negate ( - x ) ;
rank: 589
score: 99.28616768973214
patch: return - 0 . $NUMBER$ * exp ( - 1 ) ) ;
rank: 589
score: 99.25466482979911
patch: return 0 . $NUMBER$ * exp ( [ - 1 ] ) ;
rank: 589
score: 99.21958571213942
patch: return - 0 . $NUMBER$ * start ( - x ) ;
rank: 589
score: 99.08058518629808
patch: return 0 . $NUMBER$ * exp ( - x ) 1 ;
rank: 590
score: 99.19797188895089
patch: return - $NUMBER$ . 0 * exp ( - x ) ; }
rank: 590
score: 99.18560791015625
patch: return 0 . 0 ; } if ( x > $NUMBER$ ) {
rank: 590
score: 99.13181374289773
patch: return Integer . $NUMBER$ * exp ( x ) ;
rank: 591
score: 99.28485514322917
patch: return - 1 . 0 * exp ( - 1 . $NUMBER$ ) ;
rank: 591
score: 99.25408063616071
patch: return - 0 . $NUMBER$ + exp ( - - x ) ;
rank: 591
score: 99.21919468470982
patch: return - 0 . 0 * exp ( - x ) ; /
rank: 591
score: 99.1317850748698
patch: return 0 . 0 * exp ( + x ) ;
rank: 591
score: 99.11783541165866
patch: result = 0 . 1 * exp ( - x ) ;
rank: 591
score: 99.07928936298077
patch: return $NUMBER$ . $NUMBER$ * exp ( x - 1 ) ;
rank: 592
score: 99.21907261439732
patch: return ( 0 . $NUMBER$ * exp ( - x ) ) .
rank: 592
score: 99.20955113002232
patch: return 1 . $NUMBER$ * this . exp ( - x ) ;
rank: 592
score: 99.20891462053571
patch: return 0 * exp ( - x ) + 0 . $NUMBER$ ;
rank: 592
score: 99.13174438476562
patch: return 0 . $NUMBER$ * ( x + x ) ;
rank: 592
score: 99.11751302083333
patch: return - 0 . * exp ( - x ) ;
rank: 593
score: 99.28462437220982
patch: return 0 * exp ( - x ) * / - x ;
rank: 593
score: 99.21888950892857
patch: return 0 . $NUMBER$ * exp ( - x ) ; / )
rank: 593
score: 99.20867513020833
patch: return 0 . $NUMBER$ * exp ( x ) + x + x ;
rank: 594
score: 99.28396809895834
patch: return 0 * - $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 594
score: 99.25386868990384
patch: return 0 . 0 * exp ( 0 . $NUMBER$ ) ;
rank: 594
score: 99.21876878004808
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) - x ;
rank: 594
score: 99.208642578125
patch: return 0 . $NUMBER$ + exp ( x ) - 0 . $NUMBER$ ;
rank: 594
score: 99.13107534555289
patch: return 0 . 1 / exp ( x , x ) ;
rank: 594
score: 99.11666165865384
patch: if ( x < $NUMBER$ ) { return 0 . $NUMBER$ ;
rank: 594
score: 99.0758389559659
patch: return 0 . * exp ( - x ) ;
rank: 595
score: 99.25353131975446
patch: * return - 0 . 0 * exp ( - x ) ;
rank: 595
score: 99.20818684895833
patch: return 0 . 0 * exp ( x ) * 0 . $NUMBER$ ;
rank: 595
score: 99.2080078125
patch: return - 0 . $NUMBER$ * break ( - x ) ;
rank: 595
score: 99.19737752278645
patch: return 0 . 0 - exp ( - $NUMBER$ ) ;
rank: 595
score: 99.18412272135417
patch: return - 0 . $NUMBER$ * exp ( - ) ;
rank: 595
score: 99.13088989257812
patch: return 0 . $NUMBER$ * int ( - x ) ;
rank: 596
score: 99.25338541666666
patch: return - 1 . $NUMBER$ * exp ( - x ) . 1 ;
rank: 596
score: 99.21828206380208
patch: return 0 . $NUMBER$ * exp ( x ) ; /
rank: 596
score: 99.2078857421875
patch: = 0 . $NUMBER$ * exp ( - x ) * $NUMBER$ ;
rank: 596
score: 99.19703087439903
patch: return x * 0 . 0 * exp ( x ) ;
rank: 596
score: 99.18338448660714
patch: return 0 . $NUMBER$ ; } if ( x > 1 ) {
rank: 596
score: 99.13067626953125
patch: += 0 . 0 * exp ( - x ) ;
rank: 596
score: 99.11583455403645
patch: x += 0 . $NUMBER$ * exp ( x ) ;
rank: 596
score: 99.07422984730114
patch: return 0 . $NUMBER$ * exp ( - x ;
rank: 597
score: 99.21816781850961
patch: return - 0 . $NUMBER$ * exp ( $NUMBER$ . ) ;
rank: 597
score: 99.20763221153847
patch: return 0 . 0 * exp ( - x $NUMBER$ ) ;
rank: 597
score: 99.19594029017857
patch: { return 0 . $NUMBER$ * exp ( - x ) ; }
rank: 597
score: 99.13046264648438
patch: return 0 . 1 * exp ( x ) ; }
rank: 598
score: 99.25254603794643
patch: return 0 = 0 . 0 * exp ( - x ) ;
rank: 598
score: 99.2181640625
patch: return x . exp ( - x ) ;
rank: 598
score: 99.20770263671875
patch: return 0 . - 0 * exp ( x ) ;
rank: 598
score: 99.20665564903847
patch: return - 0 . 0 * sum ( - x ) ;
rank: 598
score: 99.11541278545673
patch: x = exp ( - x ) ; negate = true ;
rank: 599
score: 99.28287760416667
patch: return - 0 . 0 * exp ( - 1 ) - x ;
rank: 599
score: 99.25217982700893
patch: return 0 . $NUMBER$ - exp ( exp ( x ) ) ;
rank: 599
score: 99.21683175223214
patch: return - 0 . $NUMBER$ * exp ( - x ) ; :
rank: 599
score: 99.18157958984375
patch: return ( exp ( - x ) / 0 . $NUMBER$ ) ;
rank: 599
score: 99.07002766927083
patch: if ( x <= 0 ) { return - x ;
rank: 600
score: 99.21681565504808
patch: return 0 . 0 * exp ( - x ) ; /
rank: 600
score: 99.12917856069711
patch: return 0 . 0 , exp ( - x ) ; }
rank: 600
score: 99.06990559895833
patch: x = 0 . $NUMBER$ / exp ( x ) ;
rank: 601
score: 99.19395228794643
patch: return 0 . 0 * exp ( - x ) - $NUMBER$ ;
rank: 601
score: 99.11362033420139
patch: return 0 / exp ( x ) ;
rank: 602
score: 99.21676870492789
patch: return 0 . $NUMBER$ * exp ( exp - x ) ;
rank: 603
score: 99.21666541466347
patch: return $NUMBER$ * exp ( 0 . $NUMBER$ * x ) ;
rank: 603
score: 99.20657784598214
patch: return 0 . $NUMBER$ * exp ( - x ) - 0 ;
rank: 603
score: 99.19383748372395
patch: return $NUMBER$ . 0 - exp ( - x ) ;
rank: 603
score: 99.1802227313702
patch: return 0 . $NUMBER$ + ( - 0 . $NUMBER$ ) ;
rank: 603
score: 99.12818400065105
patch: return x . 0 * exp ( - x ) ;
rank: 604
score: 99.281640625
patch: return 0 . $NUMBER$ * exp ( - x ) * - $NUMBER$ ;
rank: 604
score: 99.19325608473558
patch: return 0 . 0 . $NUMBER$ / exp ( x ) ;
rank: 605
score: 99.28160807291667
patch: return - 0 . $NUMBER$ * exp ( - x ) * 0 ;
rank: 605
score: 99.2047870342548
patch: return 0 . 0 * exp ( x * $NUMBER$ ) ;
rank: 605
score: 99.19313267299107
patch: return 0 . 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 605
score: 99.10985717773437
patch: return ( x < 0 . $NUMBER$ ) ;
rank: 605
score: 99.066162109375
patch: if ( x >= 0 ) { return x ;
rank: 606
score: 99.28082275390625
patch: return - 0 . 0 * exp ( - 1 ) ; }
rank: 606
score: 99.2510986328125
patch: return - 0 . $NUMBER$ * exp ( x ) - 1 ;
rank: 606
score: 99.20472063337054
patch: return 0 . 1 * exp ( - x ) + x ;
rank: 606
score: 99.19289725167411
patch: return 0 . 0 * exp ( - $NUMBER$ . 0 ) ;
rank: 607
score: 99.28045654296875
patch: return 0 . 0 * exp ( - 1 ) * x ;
rank: 607
score: 99.2161865234375
patch: return 0 . $NUMBER$ * exp ( ( x - x ) ;
rank: 607
score: 99.20503452845982
patch: return 0 . $NUMBER$ * exp ( - x ) & $NUMBER$ ;
rank: 607
score: 99.20470252403847
patch: = - 0 . 1 * exp ( - x ) ;
rank: 607
score: 99.19239220252403
patch: return 0 . 0 / 0 * exp ( x ) ;
rank: 607
score: 99.17852783203125
patch: return 1 . $NUMBER$ * exp ( - 1 ) ;
rank: 607
score: 99.12447415865384
patch: * / return 0 . $NUMBER$ * exp ( x ) ;
rank: 607
score: 99.10817464192708
patch: return 0 - exp ( x ) ;
rank: 607
score: 99.06395467122395
patch: negate ( x , 0 . 0 , x ) ;
rank: 608
score: 99.24979945591518
patch: return 0 . 0 * exp ( $NUMBER$ , - x ) ;
rank: 608
score: 99.20452411358173
patch: return 1 . $NUMBER$ * exp ( x * x ) ;
rank: 608
score: 99.2044208233173
patch: return - 0 . $NUMBER$ + exp ( x ) ) ;
rank: 608
score: 99.17836216517857
patch: return 0 . 0 * exp ( - 0 . 1 ) ;
rank: 608
score: 99.123779296875
patch: return 0 . 0 * exp ( x ) + 1 ;
rank: 609
score: 99.20444899338942
patch: return - 0 . $NUMBER$ * exp ( double ) 1 ;
rank: 609
score: 99.20436314174107
patch: return 0 . $NUMBER$ || exp ( - x ) - x ;
rank: 609
score: 99.12278395432692
patch: return 0 . 0 * exp ( x ) + 0 ;
rank: 609
score: 99.06173706054688
patch: if ( x >= 0 ) { return x ; }
rank: 610
score: 99.27981332632211
patch: return 0 ; } else { return - 0 . $NUMBER$ ;
rank: 610
score: 99.24959019252232
patch: return - 1 . $NUMBER$ * exp ( x ) - $NUMBER$ ;
rank: 610
score: 99.21521935096153
patch: return $NUMBER$ . $NUMBER$ * 0 * exp ( x ) ;
rank: 610
score: 99.2042705829327
patch: return - 1 . $NUMBER$ * exp ( x ) ; ;
rank: 610
score: 99.06057400173611
patch: return $NUMBER$ / exp ( x ) ;
rank: 611
score: 99.20432692307692
patch: return 0 . $NUMBER$ * x * exp ( x ) ;
rank: 611
score: 99.2039794921875
patch: |= 0 . $NUMBER$ * exp ( - x ) ;
rank: 611
score: 99.18968854631696
patch: return 0 . 0 * exp ( - $NUMBER$ . $NUMBER$ ) ;
rank: 611
score: 99.12141927083333
patch: return exp ( - 0 . $NUMBER$ , x ) ;
rank: 611
score: 99.10414428710938
patch: x = - x ; negate = true ;
rank: 611
score: 99.0590108235677
patch: if ( x < $NUMBER$ ) { return x ; }
rank: 612
score: 99.27930797230114
patch: return 0 . 0 * exp ( 0 ) ;
rank: 612
score: 99.21469116210938
patch: return $NUMBER$ * exp ( - x ) - x ;
rank: 612
score: 99.20323768028847
patch: } return - 1 . $NUMBER$ * exp ( x ) ;
rank: 612
score: 99.05797322591145
patch: return - x ; } if ( x < 0 )
rank: 613
score: 99.2144305889423
patch: return 0 . $NUMBER$ * exp - exp ( x ) ;
rank: 613
score: 99.20243696732955
patch: return ( exp ( x ) - x ) ;
rank: 613
score: 99.1895751953125
patch: return 0 . 0 + ( x - x ) ;
rank: 613
score: 99.17594691685268
patch: return x - 0 . $NUMBER$ * exp ( x ) ; }
rank: 614
score: 99.12099202473958
patch: return Math . 0 * exp ( - x ) ;
rank: 614
score: 99.05499267578125
patch: if ( x >= 0 ) { return - x ;
rank: 615
score: 99.27698625837054
patch: return 0 . 0 * exp ( - 1 ) / $NUMBER$ ;
rank: 615
score: 99.21233661358173
patch: return 0 . 0 * exp exp ( - x ) ;
rank: 615
score: 99.18869018554688
patch: return 0 . $NUMBER$ + exp ( x ) ; }
rank: 615
score: 99.120849609375
patch: return 0 . $NUMBER$ * max ( x ) ;
rank: 615
score: 99.10161743164062
patch: return ( x < 0 . 0 ) ;
rank: 616
score: 99.24845377604167
patch: return - 0 . $NUMBER$ + exp ( - 1 . $NUMBER$ ) ;
rank: 616
score: 99.21172626201923
patch: return $NUMBER$ . $NUMBER$ * $NUMBER$ * exp ( x ) ;
rank: 616
score: 99.20070237379808
patch: return 0 . 0 * exp ( x ) * x ;
rank: 616
score: 99.11978149414062
patch: return 0 . 0 * exp ( , x ) ;
rank: 616
score: 99.09815470377605
patch: return 0 . $NUMBER$ double exp ( - x ) ;
rank: 617
score: 99.276123046875
patch: return - 0 . 0 / exp ( - 1 ) ;
rank: 617
score: 99.2099139873798
patch: return -- 0 . $NUMBER$ * exp ( - x ) ;
rank: 617
score: 99.18848595252403
patch: return 0 . 0 + exp ( - - x ) ;
rank: 618
score: 99.27469308035714
patch: return - 0 . 0 * / exp ( - x ) ;
rank: 618
score: 99.2088623046875
patch: return - $NUMBER$ . $NUMBER$ * - exp ( x ) ;
rank: 618
score: 99.20193917410714
patch: return 1 . $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 618
score: 99.0969950358073
patch: x = exp ( x ) ; negate = true ;
rank: 619
score: 99.27447509765625
patch: return 0 * exp ( - x ) + x ;
rank: 619
score: 99.2000399502841
patch: return $NUMBER$ * exp ( x + x ) ;
rank: 619
score: 99.18667367788461
patch: return - $NUMBER$ . 0 / exp ( - $NUMBER$ ) ;
rank: 620
score: 99.24814077524039
patch: return exp 0 . 0 * exp ( - x ) ;
rank: 620
score: 99.20097212357955
patch: return - 0 . 0 ( - x ) ;
rank: 620
score: 99.18629807692308
patch: return - 0 . 0 / exp ( x ) ; }
rank: 620
score: 99.11676580255681
patch: return 0 . $NUMBER$ / ( - x ) ;
rank: 620
score: 99.09629313151042
patch: return - 0 . $NUMBER$ * double ( x ) ;
rank: 622
score: 99.19967886117789
patch: } += 0 . $NUMBER$ * exp ( - x ) ;
rank: 622
score: 99.18588256835938
patch: return - 0 . 1 / exp ( x ) ;
rank: 622
score: 99.050537109375
patch: if ( x > $NUMBER$ ) { return - x ;
rank: 623
score: 99.27346801757812
patch: return - 0 . $NUMBER$ * exp ( 1 ) ;
rank: 623
score: 99.20689978966347
patch: return - 0 . $NUMBER$ * ( x / x ) ;
rank: 623
score: 99.20039876302083
patch: return - 0 . $NUMBER$ * this . - x ;
rank: 623
score: 99.16948590959821
patch: return 0 . $NUMBER$ ; } if ( x >= 0 ) {
rank: 623
score: 99.05027077414773
patch: if ( x < $NUMBER$ ) { return x ;
rank: 624
score: 99.272705078125
patch: return 0 . $NUMBER$ * exp ( - x ) * /
rank: 624
score: 99.20660400390625
patch: return 0 . 0 * max ( - x ) ;
rank: 624
score: 99.20006385216347
patch: return - 1 . $NUMBER$ * format ( - x ) ;
rank: 624
score: 99.16948590959821
patch: return $NUMBER$ ; } if ( x == 0 . 0 ) {
rank: 625
score: 99.2061258951823
patch: return 0 . $NUMBER$ * exp ( x ) ; else
rank: 625
score: 99.19967886117789
patch: return - 0 . $NUMBER$ * exp ( x $NUMBER$ ) ;
rank: 625
score: 99.04933675130208
patch: if ( x > $NUMBER$ ) { return x ; }
rank: 626
score: 99.24735514322917
patch: return - 0 . $NUMBER$ + exp ( - 1 . 0 ) ;
rank: 626
score: 99.19827035757211
patch: } return 0 . $NUMBER$ / exp ( - x ) ;
rank: 626
score: 99.1840069110577
patch: return x - 0 . $NUMBER$ / exp ( x ) ;
rank: 626
score: 99.11207164417614
patch: return - 0 / exp ( - x ) ;
rank: 626
score: 99.04931640625
patch: return $NUMBER$ . $NUMBER$ * exp ( - 0 ) ;
rank: 627
score: 99.27228655133929
patch: return 0 . $NUMBER$ * exp ( - x ) * 0 ;
rank: 627
score: 99.24705287388393
patch: return 0 . 0 * exp ( - x ) . 1 ;
rank: 627
score: 99.20480346679688
patch: return return 0 . $NUMBER$ * exp ( x ) ;
rank: 627
score: 99.11159261067708
patch: break - 0 . $NUMBER$ * exp ( x ) ;
rank: 627
score: 99.09266153971355
patch: return 0 . $NUMBER$ * ( x - $NUMBER$ ) ;
rank: 628
score: 99.24632161458334
patch: return - 0 . $NUMBER$ * exp ( - 1 . 1 ) ;
rank: 628
score: 99.20443960336539
patch: return - 0 . 0 * max ( - x ) ;
rank: 628
score: 99.19850510817308
patch: return - 0 . $NUMBER$ * Double . MIN _ VALUE ;
rank: 628
score: 99.19789475661058
patch: return exp ( exp ( - x ) - x ) ;
rank: 628
score: 99.18336838942308
patch: return 0 . $NUMBER$ . $NUMBER$ + exp ( x ) ;
rank: 628
score: 99.11121715198864
patch: return 0 . 0 * exp ( $NUMBER$ ) ;
rank: 629
score: 99.24627278645833
patch: return - 0 . 0 * exp ( - x ) . 1 ;
rank: 629
score: 99.20432692307692
patch: int - 1 . $NUMBER$ * exp ( - x ) ;
rank: 629
score: 99.1979229266827
patch: throw new Runtime CaMeL Exception ( $STRING$ + - x ) ;
rank: 629
score: 99.19771902901786
patch: return 0 . $NUMBER$ * x $NUMBER$ * exp ( x ) ;
rank: 629
score: 99.18332143930289
patch: return 1 . $NUMBER$ * exp ( x ) - x ;
rank: 629
score: 99.16876220703125
patch: return 0 . $NUMBER$ * exp ( x ) ; case $NUMBER$ :
rank: 629
score: 99.11107381184895
patch: return 1 . $NUMBER$ , exp ( - x ) ;
rank: 630
score: 99.19712477463942
patch: return 1 . $NUMBER$ + exp ( - x ) ) ;
rank: 631
score: 99.24615948016827
patch: throw - 1 . $NUMBER$ * exp ( - x ) ;
rank: 631
score: 99.20413208007812
patch: return $NUMBER$ * exp ( - - - x ) ;
rank: 631
score: 99.19645182291667
patch: return - - 1 * exp ( - x ) ;
rank: 631
score: 99.18140665690105
patch: return - $NUMBER$ . 0 + exp ( x ) ;
rank: 631
score: 99.16811697823661
patch: return - 0 . $NUMBER$ * exp ( x > 0 ) ;
rank: 631
score: 99.10917154947917
patch: return 0 . $NUMBER$ * new int [ $NUMBER$ ] ;
rank: 632
score: 99.20340670072116
patch: return $NUMBER$ * exp ( - exp ( x ) ) ;
rank: 632
score: 99.10894097222223
patch: return x . sinh ( x ) ;
rank: 633
score: 99.1964862530048
patch: return 0 . $NUMBER$ - exp ( x + x ) ;
rank: 634
score: 99.20257098858173
patch: return - 0 . $NUMBER$ * ( x * x ) ;
rank: 634
score: 99.19578857421875
patch: return 0 . $NUMBER$ + exp ( ) ;
rank: 634
score: 99.19393216646634
patch: &= - 0 . $NUMBER$ * exp ( - x ) ;
rank: 634
score: 99.16761192908653
patch: return - 0 . $NUMBER$ * x - 0 . $NUMBER$ ;
rank: 634
score: 99.10878499348958
patch: return new 0 . 0 * exp ( x ) ;
rank: 635
score: 99.24507649739583
patch: return 0 * exp ( exp ( x ) ) ;
rank: 635
score: 99.20241135817308
patch: return 0 . $NUMBER$ * exp ( - x ) ; x
rank: 635
score: 99.10843912760417
patch: return exp ( x , - x - x ) ;
rank: 635
score: 99.08790893554688
patch: return x . sinh ( - x ) ;
rank: 635
score: 99.04550170898438
patch: return * $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 636
score: 99.19347205528847
patch: = - 0 . $NUMBER$ / exp ( - x ) ;
rank: 636
score: 99.08787027994792
patch: return - x . $NUMBER$ * exp ( x ) ;
rank: 637
score: 99.26981026785714
patch: return - 0 . 0 * exp ( - x ) * ;
rank: 637
score: 99.20203857421875
patch: return 0 . $NUMBER$ * exp - x ;
rank: 637
score: 99.19510591947116
patch: return 0 . $NUMBER$ + exp ( - x 1 ) ;
rank: 637
score: 99.17953725961539
patch: return 0 . 0 - exp ( x - x ) ;
rank: 637
score: 99.04385375976562
patch: return - ( exp ( x ) / $NUMBER$ ) ;
rank: 638
score: 99.2690673828125
patch: return 0 * exp ( - $NUMBER$ ) ;
rank: 638
score: 99.20160381610577
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ . ) ;
rank: 638
score: 99.19509652944711
patch: } else = 0 . $NUMBER$ * exp ( x ) ;
rank: 638
score: 99.19266764322917
patch: return 0 . 0 * exp ( double ) x ;
rank: 638
score: 99.17889404296875
patch: return 1 . 0 / exp ( - $NUMBER$ ) ;
rank: 638
score: 99.16555551382211
patch: return 0 . $NUMBER$ * exp ( - / x ) ;
rank: 638
score: 99.10752360026042
patch: return Float . $NUMBER$ * exp ( - x ) ;
rank: 638
score: 99.04359019886364
patch: return $NUMBER$ . $NUMBER$ - exp ( x ) ;
rank: 639
score: 99.26876395089286
patch: return - 0 . $NUMBER$ * exp ( - x ) * /
rank: 639
score: 99.2014911358173
patch: * return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 639
score: 99.1943359375
patch: return 0 . $NUMBER$ + exp ( x ) + x ;
rank: 639
score: 99.17842923677884
patch: return 0 . 0 * exp ( x + $NUMBER$ ) ;
rank: 639
score: 99.16527381310097
patch: return - $NUMBER$ ; } if ( x == 0 ) {
rank: 640
score: 99.26851109095982
patch: return 0 * - 0 . $NUMBER$ * exp ( x ) ;
rank: 640
score: 99.19964044744319
patch: return ( 0 . $NUMBER$ * - x ) ;
rank: 640
score: 99.19354248046875
patch: return 0 . $NUMBER$ * default ( - x ) ;
rank: 640
score: 99.1915752704327
patch: return - 0 . $NUMBER$ * exp ( float ) x ;
rank: 640
score: 99.17818509615384
patch: return - 0 . $NUMBER$ + exp ( x ) ; }
rank: 640
score: 99.1063232421875
patch: return 0 . $NUMBER$ * new exp ( x ) ;
rank: 640
score: 99.08507622612848
patch: x = exp ( - x ) ;
rank: 641
score: 99.19850510817308
patch: return 0 . $NUMBER$ * exp ( 0 . x ) ;
rank: 641
score: 99.19337815504808
patch: return 0 . $NUMBER$ ] / exp ( - x ) ;
rank: 641
score: 99.17799886067708
patch: return 0 . 1 / exp ( - $NUMBER$ ) ;
rank: 641
score: 99.10616048177083
patch: return $NUMBER$ . 0 , exp ( - x ) ;
rank: 641
score: 99.08491821289063
patch: return ( x > 0 . $NUMBER$ ) ;
rank: 642
score: 99.19333321707589
patch: exp ( 0 . 0 * exp ( - x ) ) ;
rank: 642
score: 99.1898193359375
patch: return - 0 . $NUMBER$ << exp ( - x ) ;
rank: 642
score: 99.17798790564903
patch: return 0 . $NUMBER$ . 0 / exp ( x ) ;
rank: 642
score: 99.1645038311298
patch: result = - 1 . $NUMBER$ * exp ( x ) ;
rank: 643
score: 99.26708112444196
patch: return - 0 . 0 * exp ( x ) / $NUMBER$ ;
rank: 643
score: 99.19313401442308
patch: return 0 . $NUMBER$ . 1 * exp ( x ) ;
rank: 643
score: 99.16443888346355
patch: return ( exp ( - 0 . $NUMBER$ ) ) ;
rank: 643
score: 99.10514692826705
patch: return 0 . 0 * ( - x ) ;
rank: 644
score: 99.26704624720982
patch: return Double . Na CaMeL N * exp ( - x ) ;
rank: 644
score: 99.193115234375
patch: return 0 * exp ( 0 . $NUMBER$ - x ) ;
rank: 644
score: 99.18948129507211
patch: return 0 . $NUMBER$ / exp ( - x ) ; ;
rank: 644
score: 99.17752414279514
patch: return new double [ $NUMBER$ ] ; }
rank: 644
score: 99.10498657226563
patch: return $NUMBER$ - exp ( - x ) ;
rank: 645
score: 99.26703752790179
patch: apply ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 645
score: 99.19684307391827
patch: return $NUMBER$ . $NUMBER$ * exp ( - 0 . ) ;
rank: 645
score: 99.17751840444711
patch: return 0 . 0 * exp ( x ) - $NUMBER$ ;
rank: 645
score: 99.16405378069196
patch: return 0 . 1 * exp ( x ) ; } else {
rank: 645
score: 99.10491943359375
patch: return Float . 0 * exp ( - x ) ;
rank: 646
score: 99.24184744698661
patch: return - 0 . $NUMBER$ * exp ( 1 . 0 ) ;
rank: 646
score: 99.19140625
patch: return 0 . $NUMBER$ * exp ( - x ) + $STRING$ ;
rank: 647
score: 99.26593017578125
patch: return - 0 . $NUMBER$ * exp ( x ) * $NUMBER$ ;
rank: 647
score: 99.1865703876202
patch: return - 1 . $NUMBER$ * max ( - x ) ;
rank: 648
score: 99.26537214006696
patch: return 0 . $NUMBER$ * exp ( - 1 ) + $NUMBER$ ;
rank: 648
score: 99.1941387469952
patch: return - 0 . $NUMBER$ * exp ( - x ) /
rank: 648
score: 99.17613807091347
patch: return ( x - 0 . $NUMBER$ , - x ) ;
rank: 648
score: 99.08127848307292
patch: return - 0 . $NUMBER$ * this ( x ) ;
rank: 649
score: 99.17604417067308
patch: return 1 . 0 * exp ( - - x ) ;
rank: 649
score: 99.10337136008523
patch: return Double . 0 * exp ( x ) ;
rank: 649
score: 99.03582763671875
patch: return 1 . $NUMBER$ * negate ( - x ) ;
rank: 650
score: 99.19305889423077
patch: return - 0 . $NUMBER$ * round ( - x ) ;
rank: 650
score: 99.17559344951923
patch: return 0 . 1 * exp ( - - x ) ;
rank: 650
score: 99.16147867838542
patch: return $NUMBER$ . 0 * exp ( - $NUMBER$ ) ;
rank: 650
score: 99.03423517400569
patch: return $NUMBER$ . 1 * exp ( x ) ;
rank: 651
score: 99.24098557692308
patch: return - 1 . $NUMBER$ + exp ( - 1 ) ;
rank: 651
score: 99.17478590745192
patch: return 0 . 0 + exp ( x + x ) ;
rank: 651
score: 99.16002478966347
patch: return ( exp ( x ) - 0 . $NUMBER$ ) ;
rank: 651
score: 99.10249467329545
patch: return exp ( x , x , x ) ;
rank: 652
score: 99.19268329326923
patch: return - 0 . $NUMBER$ exp ( - - x ) ;
rank: 652
score: 99.189453125
patch: return ( 1 . $NUMBER$ * exp ( x ) ) ;
rank: 652
score: 99.17464505709134
patch: return x - 0 . 0 / exp ( x ) ;
rank: 652
score: 99.07948811848958
patch: return - x - $NUMBER$ * exp ( x ) ;
rank: 652
score: 99.03148396809895
patch: x = $NUMBER$ . 0 * exp ( x ) ;
rank: 653
score: 99.1597900390625
patch: return $NUMBER$ ; } if ( x == 0 ) {
rank: 653
score: 99.10171508789062
patch: return 0 . 0 * exp ( x x ) ;
rank: 653
score: 99.07911987304688
patch: return ( x > 0 . 0 ) ;
rank: 654
score: 99.19174429086539
patch: return $NUMBER$ . $NUMBER$ 0 * exp ( - x ) ;
rank: 654
score: 99.18892728365384
patch: return 0 . $NUMBER$ - - exp ( - x ) ;
rank: 654
score: 99.10068766276042
patch: return 0 . 0 * exp ( x , ) ;
rank: 654
score: 99.03035278320313
patch: if ( x > 0 . $NUMBER$ ) {
rank: 655
score: 99.24033900669643
patch: return 0 . 0 * exp ( exp ( 0 ) ) ;
rank: 655
score: 99.19085223858173
patch: return 0 . $NUMBER$ * exp ( - x ) ; :
rank: 655
score: 99.18848595252403
patch: return 0 . $NUMBER$ - exp ( 0 . $NUMBER$ ) ;
rank: 655
score: 99.17318021334134
patch: return 0 . $NUMBER$ / exp ( x ) - x ;
rank: 655
score: 99.1583721454327
patch: return - $NUMBER$ ; } if ( x > 0 ) {
rank: 655
score: 99.10066731770833
patch: return - 0 . $NUMBER$ : exp ( x ) ;
rank: 656
score: 99.18844839242789
patch: return 0 . $NUMBER$ * exp ( int ) - x ;
rank: 656
score: 99.15785910866477
patch: return new double [ $NUMBER$ ] ; } else {
rank: 657
score: 99.26232038225446
patch: return - 0 . $NUMBER$ * exp ( - x ) / ;
rank: 657
score: 99.18766566685268
patch: return 0 . $NUMBER$ + exp ( - x ) + $NUMBER$ ;
rank: 657
score: 99.17289225260417
patch: return 0 . 0 / exp ( - 1 ) ;
rank: 657
score: 99.0998868075284
patch: return 1 . 1 * exp ( x ) ;
rank: 657
score: 99.07631429036458
patch: return x + $NUMBER$ * exp ( - x ) ;
rank: 657
score: 99.02870686848958
patch: return / $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 658
score: 99.18956580528847
patch: return 0 . $NUMBER$ * exp ( - x ) ; )
rank: 658
score: 99.1870849609375
patch: return exp ( exp ( x ) ) ;
rank: 658
score: 99.17207845052083
patch: return 0 . 0 + - exp ( x ) ;
rank: 658
score: 99.09965006510417
patch: return 0 . $NUMBER$ * byte ( - x ) ;
rank: 658
score: 99.02840169270833
patch: return 0 . $NUMBER$ * exp ( . x ) ;
rank: 659
score: 99.26168387276786
patch: return 0 . $NUMBER$ * exp ( - 1 ) / x ;
rank: 659
score: 99.188720703125
patch: throw - 0 . $NUMBER$ * exp ( x ) ;
rank: 659
score: 99.18687086838942
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ . $NUMBER$ ) ;
rank: 659
score: 99.1791240985577
patch: double CaMeL Value ( ) ; exp ( - x ) ;
rank: 659
score: 99.17179048978366
patch: return 0 . 0 . 0 / exp ( x ) ;
rank: 659
score: 99.09943181818181
patch: return 0 . $NUMBER$ * this ( x ) ;
rank: 659
score: 99.07533772786458
patch: return 0 + exp ( x ) ;
rank: 659
score: 99.02822875976562
patch: if ( x < $NUMBER$ ) { return - x ;
rank: 660
score: 99.26155308314732
patch: return 0 * exp ( - x ) / ( x ) ;
rank: 660
score: 99.18682391826923
patch: return 0 . - 1 + exp ( - x ) ;
rank: 660
score: 99.17897542317708
patch: *= 0 . $NUMBER$ * exp ( - x ) ;
rank: 660
score: 99.15682279146634
patch: return x - 0 . $NUMBER$ + exp ( x ) ;
rank: 660
score: 99.07532755533855
patch: return 0 / exp ( - x - x ) ;
rank: 660
score: 99.02769978841145
patch: return - exp ( x , 0 . $NUMBER$ ) ;
rank: 661
score: 99.26080322265625
patch: return 0 . $NUMBER$ * exp ( - 1 ) - 1 ;
rank: 661
score: 99.18665422712054
patch: return 0 . $NUMBER$ * exp ( x ) . case 0 ;
rank: 661
score: 99.186279296875
patch: return ( 0 . $NUMBER$ * exp ( - x ) ;
rank: 661
score: 99.17856069711539
patch: return - - 0 . $NUMBER$ * exp ( - x )
rank: 661
score: 99.17069185697116
patch: return - 0 . 0 + exp ( x ) ; }
rank: 661
score: 99.09860229492188
patch: else return 0 . $NUMBER$ * exp ( x ) ;
rank: 661
score: 99.0751065340909
patch: return 0 . x * exp ( x ) ;
rank: 662
score: 99.26054164341518
patch: return 0 . $NUMBER$ * exp ( - exp ( ) ) ;
rank: 662
score: 99.186279296875
patch: return 1 * exp ( x ) ;
rank: 662
score: 99.18571641710069
patch: return - exp ( - x ) ;
rank: 662
score: 99.16988431490384
patch: return 0 . 0 / exp ( x ) - x ;
rank: 662
score: 99.15584309895833
patch: return $NUMBER$ . $NUMBER$ * exp ( - 1 ) ;
rank: 662
score: 99.02725219726562
patch: return - exp ( x ) ;
rank: 663
score: 99.26041085379464
patch: return - 0 . 0 * exp ( - x ) * /
rank: 663
score: 99.1855938251202
patch: else return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 664
score: 99.23806527944711
patch: return - 1 . $NUMBER$ + exp ( - $NUMBER$ ) ;
rank: 664
score: 99.18558443509616
patch: return 0 . $NUMBER$ * - - exp ( x ) ;
rank: 664
score: 99.07471720377605
patch: return 0 - exp ( - x - x ) ;
rank: 664
score: 99.0265604654948
patch: return 0 . $NUMBER$ * exp ( float ) x ;
rank: 665
score: 99.2596435546875
patch: return 0 . $NUMBER$ * exp ( - 1 ) ) ;
rank: 665
score: 99.18508676382211
patch: return - Double . 0 * exp ( - x ) ;
rank: 665
score: 99.15382737379808
patch: return 0 . $NUMBER$ + ( - 0 . 0 ) ;
rank: 665
score: 99.09715779622395
patch: return 0 . 0 * new double [ x ] ;
rank: 665
score: 99.02589925130208
patch: return - x ; } if ( x > 0 )
rank: 666
score: 99.23744553786058
patch: return - 1 . 1 + exp ( - x ) ;
rank: 666
score: 99.17566856971153
patch: float - 0 . $NUMBER$ * exp ( - x ) ;
rank: 666
score: 99.16867300180289
patch: return x + 0 . $NUMBER$ / exp ( x ) ;
rank: 667
score: 99.18472994290866
patch: return exp ( x ) . exp ( - x ) ;
rank: 667
score: 99.18460787259616
patch: return - 0 . $NUMBER$ * exp ( - x ) )
rank: 667
score: 99.17560283954327
patch: return - - 0 . 1 * exp ( x ) ;
rank: 667
score: 99.09360758463542
patch: return 0 . $NUMBER$ * new double [ 1 ] ;
rank: 668
score: 99.18440551757813
patch: return 1 + exp ( - x ) ;
rank: 668
score: 99.18381911057692
patch: return $NUMBER$ * exp ( - x ) ; -- x ;
rank: 668
score: 99.17495492788461
patch: return - 0 . $NUMBER$ * float ( - x ) ;
rank: 668
score: 99.09348366477273
patch: return Integer . 0 * exp ( x ) ;
rank: 668
score: 99.07289817116477
patch: x = 0 . $NUMBER$ ; negate = true ;
rank: 669
score: 99.25830078125
patch: return 0 . 0 * exp ( - 1 - x ) ;
rank: 669
score: 99.18363813920455
patch: return - x . exp ( - x ) ;
rank: 669
score: 99.17494710286458
patch: return 0 . $NUMBER$ * exp ( double ) $NUMBER$ ;
rank: 669
score: 99.16768704927884
patch: return 0 . 0 $NUMBER$ * exp ( - x ) ;
rank: 669
score: 99.09203084309895
patch: return 0 . $NUMBER$ * exp ( x ] ) ;
rank: 669
score: 99.0725430575284
patch: return - ( exp ( - x ) ) ;
rank: 669
score: 99.02490234375
patch: return x - exp ( - x ) ;
rank: 670
score: 99.25820486886161
patch: return 0 . $NUMBER$ * exp ( x ) ( x ) ;
rank: 670
score: 99.23681640625
patch: return - 1 . $NUMBER$ * exp ( - start ) ;
rank: 670
score: 99.18374399038461
patch: return 0 . $NUMBER$ + exp ( - x $NUMBER$ ) ;
rank: 670
score: 99.15236409505208
patch: return $NUMBER$ * exp ( x ) ; } else {
rank: 670
score: 99.0916239420573
patch: return 0 . 0 , new double [ $NUMBER$ ] ;
rank: 671
score: 99.23653738839286
patch: return - 0 . $NUMBER$ - exp ( 0 . $NUMBER$ ) ;
rank: 671
score: 99.18359375
patch: return 0 . $NUMBER$ ? 0 . $NUMBER$ : 0 . $NUMBER$ ;
rank: 671
score: 99.18332143930289
patch: result return 0 . $NUMBER$ * exp ( - x ) ;
rank: 671
score: 99.1671893780048
patch: return 1 . 0 * exp ( x - x ) ;
rank: 671
score: 99.0239766438802
patch: return $NUMBER$ . $NUMBER$ * new double [ $NUMBER$ ] ;
rank: 672
score: 99.16665414663461
patch: . return 0 . 0 * exp ( - x ) ;
rank: 672
score: 99.09014892578125
patch: return 0 . $NUMBER$ * x double ( x ) ;
rank: 672
score: 99.0234042080966
patch: return $NUMBER$ * exp ( - x ) ; }
rank: 673
score: 99.25679234095982
patch: return ( 0 . 0 * exp ( - 1 ) ) ;
rank: 673
score: 99.2359149639423
patch: return - 0 . $NUMBER$ ? exp ( - x ) ;
rank: 673
score: 99.18346228966347
patch: return 0 . - 0 + exp ( - x ) ;
rank: 673
score: 99.18221341646634
patch: { return $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 673
score: 99.17247517903645
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 673
score: 99.16628793569711
patch: return exp ( - 0 . $NUMBER$ , - x ) ;
rank: 673
score: 99.15128267728366
patch: return 0 . $NUMBER$ * exp ( x ) / x ;
rank: 673
score: 99.01952015269886
patch: x = $NUMBER$ / exp ( - x ) ;
rank: 674
score: 99.23539595170455
patch: return 0 0 * exp ( - x ) ;
rank: 674
score: 99.18345289963942
patch: else { return 0 . $NUMBER$ * exp ( x ) ;
rank: 674
score: 99.16595458984375
patch: return ( x - $NUMBER$ ) ;
rank: 674
score: 99.15109487680289
patch: result = - 0 . 0 * exp ( x ) ;
rank: 674
score: 99.08929443359375
patch: return exp ( x , exp ( x ) ) ;
rank: 675
score: 99.2349853515625
patch: return 0 = 0 . $NUMBER$ + exp ( - x ) ;
rank: 675
score: 99.1833965594952
patch: } return - 0 . $NUMBER$ + exp ( x ) ;
rank: 675
score: 99.17156512920673
patch: return - 1 . 1 / exp ( - x ) ;
rank: 675
score: 99.16586303710938
patch: return 1 . 1 / exp ( - x ) ;
rank: 675
score: 99.06667073567708
patch: return 0 . $NUMBER$ * exp ( x , x ;
rank: 675
score: 99.01545854048295
patch: return - x - exp ( - x ) ;
rank: 676
score: 99.25564139229911
patch: return 0 . $NUMBER$ * exp ( - $NUMBER$ ) * x ;
rank: 676
score: 99.23497596153847
patch: return 0 . 0 0 / exp ( - x ) ;
rank: 676
score: 99.18145282451923
patch: return - 0 . $NUMBER$ * exp ( - x ) &&
rank: 676
score: 99.1505126953125
patch: return $NUMBER$ ; } if ( x > 0 ) {
rank: 676
score: 99.08790079752605
patch: return 0 . $NUMBER$ * read ( - x ) ;
rank: 676
score: 99.01362748579545
patch: if ( x <= $NUMBER$ ) { return x ;
rank: 677
score: 99.23447963169643
patch: return 0 * exp ( - x ) / 0 . $NUMBER$ ;
rank: 677
score: 99.16832557091347
patch: return 0 . $NUMBER$ / exp ( - x ) ) ;
rank: 677
score: 99.16551717122395
patch: return 0 . $NUMBER$ + ( x - x ) ;
rank: 677
score: 99.0876131924716
patch: return Double . 1 * exp ( x ) ;
rank: 678
score: 99.25517054966518
patch: return 0 * 0 . $NUMBER$ * exp ( - 1 ) ;
rank: 678
score: 99.18087768554688
patch: return $NUMBER$ . $NUMBER$ * exp ( * x ) ;
rank: 678
score: 99.16518930288461
patch: return x + 0 . 0 / exp ( x ) ;
rank: 678
score: 99.1500713641827
patch: return - 1 . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 678
score: 99.0873135653409
patch: return Math . 1 * exp ( x ) ;
rank: 679
score: 99.25470842633929
patch: return 0 * exp ( - x ) / $NUMBER$ . $NUMBER$ ;
rank: 679
score: 99.18318997896634
patch: return 0 * exp ( 0 . $NUMBER$ * x ) ;
rank: 679
score: 99.16745229867789
patch: return 1 . 0 * exp ( - x ) ; ;
rank: 679
score: 99.08704723011364
patch: return HEX _ $NUMBER$ * exp ( x ) ;
rank: 679
score: 99.00797895951705
patch: return $NUMBER$ . $NUMBER$ * ( - x ) ;
rank: 680
score: 99.18306187220982
patch: return $NUMBER$ * exp ( - x ) + 0 . $NUMBER$ ;
rank: 680
score: 99.16669256036931
patch: = 0 . 0 * exp ( x ) ;
rank: 680
score: 99.00651245117187
patch: return 0 . * exp ( x ) ;
rank: 681
score: 99.25395063920455
patch: return 0 * exp ( - x ) ; }
rank: 681
score: 99.18020395132211
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ; / /
rank: 681
score: 99.16251997514205
patch: return 0 . 0 / ( - x ) ;
rank: 681
score: 99.0043057528409
patch: if ( x == $NUMBER$ ) { return x ;
rank: 682
score: 99.1826883951823
patch: return 0 . 0 | exp ( - x ) ;
rank: 682
score: 99.1664287860577
patch: return 1 . 0 * exp ( - x ) ) ;
rank: 682
score: 99.14930138221153
patch: return x - $NUMBER$ . 0 * exp ( x ) ;
rank: 682
score: 99.08384011008523
patch: return 0 . $NUMBER$ * min ( x ) ;
rank: 682
score: 99.00393337673611
patch: if ( x > 0 . $NUMBER$ )
rank: 683
score: 99.25338309151786
patch: return 0 * exp ( - x ) / exp ( ) ;
rank: 683
score: 99.23331996372768
patch: return 0 . $NUMBER$ * exp ( - x , 0 ) ;
rank: 683
score: 99.18227713448661
patch: return 0 . $NUMBER$ * exp ( x ) . - 0 ;
rank: 683
score: 99.17990112304688
patch: return 0 . $NUMBER$ * exp ( x ) ; *
rank: 683
score: 99.16213989257812
patch: return 1 . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 683
score: 99.14923650568181
patch: return x - $NUMBER$ * exp ( x ) ;
rank: 683
score: 99.06355794270833
patch: return ( - 0 . 0 , - x ) ;
rank: 684
score: 99.25279822716347
patch: return 0 * exp ( - x ) ; } else {
rank: 684
score: 99.18216959635417
patch: value = 0 . $NUMBER$ * exp ( x ) ;
rank: 684
score: 99.06322631835937
patch: return ( x == 0 . $NUMBER$ ) ;
rank: 685
score: 99.2527324969952
patch: return 0 . 0 * exp ( x ) / $NUMBER$ ;
rank: 685
score: 99.18130493164062
patch: return 0 . $NUMBER$ ) * exp ( x ) ;
rank: 685
score: 99.17921799879808
patch: return - 0 . $NUMBER$ * ( - - x ) ;
rank: 685
score: 99.14913236177884
patch: return 0 . $NUMBER$ * ( - 0 . $NUMBER$ ) ;
rank: 685
score: 99.0000887784091
patch: return $NUMBER$ * exp ( x , 0 ) ;
rank: 686
score: 99.23131452287946
patch: return - 0 . 0 * exp ( x ) - $NUMBER$ ;
rank: 686
score: 99.17917104867789
patch: return 0 . $NUMBER$ * exp ( x ) ; / *
rank: 686
score: 99.16429725060097
patch: = 0 . 0 * exp ( - x ) ; ;
rank: 686
score: 99.16094415838069
patch: return 0 * exp ( x - x ) ;
rank: 686
score: 99.14903846153847
patch: return 0 . x $NUMBER$ * exp ( - x ) ;
rank: 686
score: 99.082763671875
patch: return 0 . 1 , exp ( - x ) ;
rank: 686
score: 99.0625712076823
patch: return x + exp ( - x - x ) ;
rank: 686
score: 98.99666341145833
patch: return x - exp ( x ) ;
rank: 687
score: 99.23099772135417
patch: return 0 * exp ( - x + x ) ;
rank: 687
score: 99.1809794108073
patch: return 0 . $NUMBER$ >> exp ( - x ) ;
rank: 687
score: 99.1790771484375
patch: return 0 . $NUMBER$ * - exp ( x ) ) ;
rank: 687
score: 99.14839680989583
patch: double 0 . 0 * exp ( - x ) ;
rank: 687
score: 99.08251953125
patch: return 0 . - exp ( x ) ;
rank: 687
score: 99.0619873046875
patch: return ( x == 0 . 0 ) ;
rank: 687
score: 98.9958829012784
patch: return 0 . $NUMBER$ * exp ( 1 ) ;
rank: 688
score: 99.22931377704327
patch: return - 1 . $NUMBER$ * min ( - x ) ;
rank: 688
score: 99.08216349283855
patch: return Long . 1 * exp ( - x ) ;
rank: 688
score: 99.06153361002605
patch: return 0 + exp ( - x - x ) ;
rank: 689
score: 99.17953725961539
patch: } = 0 . $NUMBER$ * exp ( - x ) ;
rank: 689
score: 99.16324869791667
patch: return 0 . 0 * sum ( - x ) ;
rank: 689
score: 99.15975247896634
patch: return x * 0 . $NUMBER$ / exp ( x ) ;
rank: 690
score: 99.16300142728366
patch: value = 0 . 0 * exp ( - x ) ;
rank: 690
score: 99.1478780110677
patch: return $NUMBER$ * exp ( - ( x ) ) ;
rank: 690
score: 99.081298828125
patch: return exp ( x , x ) ; }
rank: 690
score: 98.99389038085937
patch: if ( x < 0 . $NUMBER$ ) {
rank: 691
score: 99.17749962439903
patch: return 0 . $NUMBER$ | exp ( - x ) ) ;
rank: 691
score: 99.1771748860677
patch: return $NUMBER$ * exp ( - x ) ; / /
rank: 691
score: 99.14768629807692
patch: return 0 . $NUMBER$ * - exp ( - $NUMBER$ ) ;
rank: 691
score: 99.0601298014323
patch: if ( x == 0 ) { negate = true ;
rank: 691
score: 98.9935635653409
patch: return $NUMBER$ * exp ( x - x ) ;
rank: 692
score: 99.25115094866071
patch: return - 0 . 0 * exp ( x ) * x ;
rank: 692
score: 99.22825270432692
patch: return 0 . $NUMBER$ * exp ( 0 . length ) ;
rank: 692
score: 99.17615763346355
patch: return $NUMBER$ return $NUMBER$ * exp ( - x ) ;
rank: 692
score: 99.1475830078125
patch: return x - $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 692
score: 99.057861328125
patch: return exp ( x , x - $NUMBER$ ) ;
rank: 692
score: 98.99212091619319
patch: return 0 . $NUMBER$ * exp ( this ) ;
rank: 693
score: 99.2509014423077
patch: return - 1 . $NUMBER$ * exp ( - 0 ) ;
rank: 693
score: 99.22824331430289
patch: return 0 . $NUMBER$ 0 - exp ( - x ) ;
rank: 693
score: 99.17476399739583
patch: return false . $NUMBER$ * exp ( - x ) ;
rank: 693
score: 99.1474609375
patch: return ( exp ( - $NUMBER$ ) ) ; } else {
rank: 693
score: 99.07951216264205
patch: return 0 / exp ( x , x ) ;
rank: 693
score: 99.0553311434659
patch: x = 0 . 0 ; negate = true ;
rank: 694
score: 99.22794015066964
patch: return - 0 . $NUMBER$ * exp ( - x + ) ;
rank: 694
score: 99.17476399739583
patch: return 0 . $NUMBER$ * - ( - x ) ;
rank: 694
score: 99.160400390625
patch: = 0 . $NUMBER$ / exp ( - x ) ;
rank: 694
score: 99.14723557692308
patch: return - 0 . $NUMBER$ + ( x - $NUMBER$ ) ;
rank: 694
score: 99.07930131392045
patch: return Integer . 1 * exp ( x ) ;
rank: 694
score: 98.990478515625
patch: return - 0 . $NUMBER$ * 1 . $NUMBER$ ;
rank: 695
score: 99.17472330729167
patch: return $NUMBER$ . $NUMBER$ * abs ( - x ) ;
rank: 695
score: 99.15980021158855
patch: = - 1 . $NUMBER$ * exp ( x ) ;
rank: 695
score: 99.15737915039062
patch: return new double [ ( x - $NUMBER$ ) ] ;
rank: 695
score: 99.07927856445312
patch: return 0 . $NUMBER$ exp ( x ) ;
rank: 696
score: 99.25062779017857
patch: return 0 . $NUMBER$ * exp ( - 1 ) * $NUMBER$ ;
rank: 696
score: 99.17518028846153
patch: return $NUMBER$ * exp ( 0 . $NUMBER$ - x ) ;
rank: 696
score: 99.17427571614583
patch: return - - x * exp ( - x ) ;
rank: 696
score: 99.15718587239583
patch: return - 0 . 0 * exp ( - x )
rank: 697
score: 99.25030517578125
patch: return - - 1 . $NUMBER$ * exp ( - 1 ) ;
rank: 697
score: 99.17514272836539
patch: return 0 . $NUMBER$ * exp ( exp ( ) ) ;
rank: 697
score: 99.17413330078125
patch: return $NUMBER$ . x * exp ( - x ) ;
rank: 697
score: 99.15331013997395
patch: = - 0 . 0 * exp ( x ) ;
rank: 697
score: 99.14279409555289
patch: return x ; } else if ( x == 0 ) {
rank: 697
score: 99.07875569661458
patch: return 0 . $NUMBER$ * exp [ - x ] ;
rank: 697
score: 99.05239035866477
patch: return x . sinh ( x , x ) ;
rank: 697
score: 98.98682250976563
patch: x = $NUMBER$ * exp ( x ) ;
rank: 698
score: 99.22679725060097
patch: return 0 . $NUMBER$ * exp ( 0 . 1 ) ;
rank: 698
score: 99.1744854266827
patch: return 0 . $NUMBER$ - $NUMBER$ * exp ( x ) ;
rank: 698
score: 99.17362467447917
patch: return $NUMBER$ * x * exp ( - x ) ;
rank: 698
score: 99.15371704101562
patch: { return 0 . 0 * exp ( x ) ;
rank: 698
score: 99.14174241286058
patch: return double 1 . $NUMBER$ * exp ( - x ) ;
rank: 698
score: 99.07852172851562
patch: temp = 0 . $NUMBER$ * exp ( x ) ;
rank: 698
score: 98.98663884943181
patch: return - 0 . * exp ( x ) ;
rank: 699
score: 99.17338053385417
patch: return x * $NUMBER$ * exp ( - x ) ;
rank: 699
score: 99.15288751775569
patch: return - 1 . $NUMBER$ ( - x ) ;
rank: 699
score: 99.07755533854167
patch: return $NUMBER$ . $NUMBER$ , exp ( - x ) ;
rank: 699
score: 98.98651733398438
patch: if ( x <= 0 . $NUMBER$ ) {
rank: 700
score: 99.14120718149039
patch: return x - 0 . 0 + exp ( x ) ;
rank: 701
score: 99.24851481119792
patch: return - 0 . $NUMBER$ * exp ( - 1 ;
rank: 701
score: 99.22484412560097
patch: return - 0 . $NUMBER$ * exp - 0 . 0 ;
rank: 701
score: 99.17299397786458
patch: return 0 . $NUMBER$ * exp - - x ) ;
rank: 701
score: 99.1503397623698
patch: return - 0 . 1 + exp ( x ) ;
rank: 701
score: 99.14085036057692
patch: return ( 0 . $NUMBER$ + exp ( x ) ) ;
rank: 701
score: 99.04624245383523
patch: return 0 . $NUMBER$ double exp ( x ) ;
rank: 702
score: 99.24815877278645
patch: return 0 * exp ( - x ) / x ;
rank: 702
score: 99.17288912259616
patch: exp ( 0 . $NUMBER$ * exp ( x ) ) ;
rank: 702
score: 99.14925537109374
patch: return Math . abs ( - x ) ;
rank: 702
score: 99.14027756911058
patch: return x - 0 . 1 * exp ( x ) ;
rank: 702
score: 99.07640584309895
patch: return 0 . $NUMBER$ * exp ( long ) x ;
rank: 702
score: 98.983984375
patch: if ( x > 0 . 0 ) {
rank: 703
score: 99.247314453125
patch: return - 0 . 0 * * exp ( - x ) ;
rank: 703
score: 99.22360464242789
patch: return - 0 . 1 - exp ( - x ) ;
rank: 703
score: 99.1726582845052
patch: return $NUMBER$ * exp ( - x ) * x ;
rank: 703
score: 99.17240397135417
patch: return 0 . 0 * exp ( * x ) ;
rank: 703
score: 99.1394794170673
patch: return 0 . $NUMBER$ * exp ( - ( ) ) ;
rank: 703
score: 99.07639567057292
patch: return 0 . $NUMBER$ * new ( - x ) ;
rank: 704
score: 99.24627216045673
patch: return 0 . 0 * exp ( - x ) * /
rank: 704
score: 99.22357177734375
patch: return 0 * exp ( - x ) - 0 . $NUMBER$ ;
rank: 704
score: 99.17210083007812
patch: return $NUMBER$ . exp ( - x ) ;
rank: 704
score: 99.14788818359375
patch: return 1 . 0 * exp ( x ) ; }
rank: 704
score: 99.1451924641927
patch: -= 0 . $NUMBER$ * exp ( - x ) ;
rank: 704
score: 99.07552490234374
patch: return ( 0 . 0 , x ) ;
rank: 705
score: 99.17204145951705
patch: return - 0 . $NUMBER$ exp ( x ) ;
rank: 705
score: 99.14750162760417
patch: return new double [ $NUMBER$ ] ; negate = true ;
rank: 705
score: 99.13916015625
patch: return - 0 . $NUMBER$ + ( x ) ;
rank: 705
score: 99.0404052734375
patch: return 1 . $NUMBER$ - exp ( x ) ;
rank: 706
score: 99.24564906529018
patch: return - 0 . $NUMBER$ / / exp ( - x ) ;
rank: 706
score: 99.17130220853366
patch: return ( 0 . $NUMBER$ ) * exp ( x ) ;
rank: 706
score: 99.14589436848958
patch: return 0 . $NUMBER$ / - exp ( x ) ;
rank: 706
score: 99.1415506998698
patch: &= 0 . $NUMBER$ * exp ( - x ) ;
rank: 707
score: 99.17125525841347
patch: return exp - 0 . $NUMBER$ * exp ( x ) ;
rank: 707
score: 99.14576551649306
patch: return - ( x - x ) ;
rank: 707
score: 99.13900052584134
patch: return 0 . $NUMBER$ * ( - 0 . 0 ) ;
rank: 707
score: 99.03734241832386
patch: return x > $NUMBER$ * exp ( x ) ;
rank: 707
score: 98.98181830512152
patch: temp = new double [ $NUMBER$ ] ;
rank: 708
score: 99.17079514723558
patch: return 0 . $NUMBER$ / 0 * exp ( x ) ;
rank: 708
score: 99.14539591471355
patch: return $NUMBER$ . 0 / exp ( - $NUMBER$ ) ;
rank: 708
score: 98.98089044744319
patch: return - 0 . $NUMBER$ * 0 . $NUMBER$ ;
rank: 709
score: 99.14512939453125
patch: return ( x - 0 . 0 ) ;
rank: 709
score: 99.13950805664062
patch: return 0 . $NUMBER$ ( - x ) ;
rank: 709
score: 99.13814603365384
patch: return $NUMBER$ * exp ( - $NUMBER$ ) ; } else {
rank: 709
score: 99.07353071732955
patch: return Long . $NUMBER$ * exp ( x ) ;
rank: 710
score: 99.22142615685097
patch: * return 0 . $NUMBER$ + exp ( - x ) ;
rank: 710
score: 99.17063551682692
patch: return $NUMBER$ = 0 . $NUMBER$ * exp ( x ) ;
rank: 710
score: 99.16715494791667
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ; ;
rank: 710
score: 99.14493815104167
patch: return $NUMBER$ . 1 / exp ( - x ) ;
rank: 710
score: 99.07326253255208
patch: return - 0 . $NUMBER$ * min ( x ) ;
rank: 710
score: 99.03107244318181
patch: x = exp ( - x - x ) ;
rank: 710
score: 98.97857666015625
patch: exp ( x , x ) ;
rank: 711
score: 99.24166165865384
patch: return - 1 * exp ( - x ) / $NUMBER$ ;
rank: 711
score: 99.22057166466347
patch: return - 0 . 0 * exp ( * x ) ;
rank: 711
score: 99.17054161658653
patch: return 0 . $NUMBER$ + this . exp ( x ) ;
rank: 711
score: 99.14446258544922
patch: return new double [ 1 ] ;
rank: 711
score: 99.1392313639323
patch: = 0 . 1 * exp ( - x ) ;
rank: 712
score: 99.22000122070312
patch: return 0 * exp ( - 0 . $NUMBER$ ) ;
rank: 712
score: 99.17025052584134
patch: return 0 . $NUMBER$ + 0 * exp ( x ) ;
rank: 712
score: 99.16648356119792
patch: return $NUMBER$ * this . exp ( - x ) ;
rank: 712
score: 98.97800903320312
patch: negate ( x , 0 . $NUMBER$ ) ;
rank: 713
score: 99.24103252704327
patch: return - 0 * exp ( - x ) * x ;
rank: 713
score: 99.13650277944711
patch: return 0 . $NUMBER$ * exp ( x == 0 ) ;
rank: 714
score: 99.23952414772727
patch: return - 1 * exp ( - 1 ) ;
rank: 714
score: 99.16805013020833
patch: return 1 . $NUMBER$ * exp ( x ) ) ;
rank: 715
score: 99.2391357421875
patch: return - 0 . $NUMBER$ * / exp ( x ) ;
rank: 715
score: 99.16560872395833
patch: return 0 . 0 * exp exp ( x ) ;
rank: 715
score: 99.02654474431819
patch: return 0 * exp ( x - $NUMBER$ ) ;
rank: 716
score: 99.16776529947917
patch: return - 1 . $NUMBER$ | exp ( x ) ;
rank: 716
score: 99.13621168870192
patch: return 0 [ 0 ] * exp ( - x ) ;
rank: 716
score: 99.06624755859374
patch: return 0 . $NUMBER$ / ( x ) ;
rank: 716
score: 99.02613414417614
patch: return 0 / exp ( x - $NUMBER$ ) ;
rank: 717
score: 99.23317307692308
patch: return ( 0 . 0 * exp ( - x ) ;
rank: 717
score: 99.21786733774039
patch: return 0 . 1 * exp ( x ) - x ;
rank: 717
score: 99.16763070913461
patch: return 0 . $NUMBER$ * exp ( - x ) $NUMBER$ ;
rank: 717
score: 99.16204833984375
patch: return $NUMBER$ * exp ( - x + x ) ;
rank: 717
score: 99.13914998372395
patch: return 0 . 0 + ( x - $NUMBER$ ) ;
rank: 717
score: 99.1360614483173
patch: return 0 . $NUMBER$ / - exp ( - $NUMBER$ ) ;
rank: 717
score: 99.13514200846355
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 717
score: 98.97545276988636
patch: return 0 . 1 - exp ( x ) ;
rank: 718
score: 99.23311673677884
patch: return 0 . 0 * exp ( - x ) * ;
rank: 718
score: 99.2177225748698
patch: return - 1 . $NUMBER$ - exp ( x ) ;
rank: 718
score: 99.16747029622395
patch: break 0 . $NUMBER$ * exp ( - x ) ;
rank: 718
score: 99.13585486778847
patch: return double 0 . $NUMBER$ * exp ( - x ) ;
rank: 719
score: 99.16696401742789
patch: return 0 . $NUMBER$ * exp ( - x , ) ;
rank: 719
score: 99.16067504882812
patch: return - Double . $NUMBER$ * exp ( x ) ;
rank: 719
score: 99.13556377704327
patch: return - $NUMBER$ ; } if ( x < 0 ) {
rank: 719
score: 99.13466389973958
patch: return 0 . 0 * format ( - x ) ;
rank: 719
score: 98.9737881747159
patch: exp ( - 0 . $NUMBER$ , x ) ;
rank: 720
score: 99.23224431818181
patch: return - 1 . 0 * exp ( ) ;
rank: 720
score: 99.13588460286458
patch: return new double [ ( x - x ) ] ;
rank: 720
score: 99.06151234019886
patch: return 0 . $NUMBER$ * get ( x ) ;
rank: 721
score: 99.23090069110577
patch: return 0 * exp ( - x ) * - 1 ;
rank: 721
score: 99.21681722005208
patch: return 0 * exp ( - x + $NUMBER$ ) ;
rank: 721
score: 99.0231600674716
patch: return 0 + exp ( x - $NUMBER$ ) ;
rank: 721
score: 98.9731112393466
patch: return - 0 . $NUMBER$ * $NUMBER$ . $NUMBER$ ;
rank: 722
score: 99.15841674804688
patch: return $NUMBER$ . $NUMBER$ * exp ( - x ) *
rank: 722
score: 99.13514200846355
patch: return $NUMBER$ . $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 722
score: 99.13440880408653
patch: return 0 . $NUMBER$ * exp ( x < 0 ) ;
rank: 722
score: 99.05995871803977
patch: return 0 . $NUMBER$ * long ( x ) ;
rank: 723
score: 99.23049926757812
patch: return - . $NUMBER$ * exp ( - x ) ;
rank: 723
score: 99.21625225360577
patch: return 0 + exp ( exp ( - x ) ) ;
rank: 723
score: 99.16576209435097
patch: throw ( 1 . $NUMBER$ * exp ( x ) ) ;
rank: 723
score: 99.15555826822917
patch: return 0 . $NUMBER$ * exp ( - x ) /
rank: 723
score: 99.13228352864583
patch: return $NUMBER$ * exp ( - x ) / $NUMBER$ ;
rank: 723
score: 99.05968128551136
patch: return 1 . 0 , exp ( x ) ;
rank: 724
score: 99.2299335186298
patch: final - 0 . $NUMBER$ * exp ( - x ) ;
rank: 724
score: 99.16543344350961
patch: return 0 . $NUMBER$ + exp ( 1 . $NUMBER$ ) ;
rank: 724
score: 99.13493208451705
patch: return 1 . 0 - exp ( x ) ;
rank: 724
score: 99.13412710336539
patch: return - ( exp ( - 0 . 0 ) ) ;
rank: 724
score: 99.05959065755208
patch: return $NUMBER$ - exp ( x ) ;
rank: 724
score: 98.97239854600694
patch: if ( x < 0 . $NUMBER$ )
rank: 725
score: 99.16538492838542
patch: return 0 * exp ( - x , x ) ;
rank: 725
score: 99.1542460123698
patch: return - 0 . x * exp ( x ) ;
rank: 726
score: 99.22937950721153
patch: / * return 0 . $NUMBER$ * exp ( x ) ;
rank: 726
score: 99.13345336914062
patch: return ( - 0 . $NUMBER$ ) ; } else {
rank: 726
score: 99.12957763671875
patch: return 0 . $NUMBER$ * exp ( x $NUMBER$ ) ;
rank: 726
score: 99.05921630859375
patch: return - 0 / exp ( x ) ;
rank: 726
score: 99.02100965711806
patch: return x + exp ( x ) ;
rank: 726
score: 98.9708584872159
patch: if ( x >= $NUMBER$ ) { return x ;
rank: 727
score: 99.22767130533855
patch: return - 0 . 0 * exp ( 1 ) ;
rank: 727
score: 99.16515096028645
patch: return 0 . $NUMBER$ * exp ( 0 . $NUMBER$ ;
rank: 727
score: 99.05870472301136
patch: return 0 . $NUMBER$ * int ( x ) ;
rank: 727
score: 98.9695556640625
patch: return - $NUMBER$ * exp ( x ) ;
rank: 728
score: 99.22710712139423
patch: return - 0 . 0 * min ( - x ) ;
rank: 728
score: 99.13318980823864
patch: return x * exp ( x - x ) ;
rank: 729
score: 99.15275435014205
patch: return - 0 + exp ( - x ) ;
rank: 729
score: 99.13120524088542
patch: return 0 . $NUMBER$ , exp ( - $NUMBER$ ) ;
rank: 729
score: 99.0189208984375
patch: x = exp ( x ) ;
rank: 729
score: 98.96589799360795
patch: return x ; } if ( x < 0 )
rank: 730
score: 99.16429307725694
patch: return x * exp ( x ) ;
rank: 730
score: 99.13065279447116
patch: return 0 . $NUMBER$ / ( - 0 . $NUMBER$ ) ;
rank: 730
score: 99.05656294389205
patch: return x . 0 * exp ( x ) ;
rank: 730
score: 98.96465301513672
patch: return - x ; } else {
rank: 731
score: 99.226806640625
patch: return - 0 . 0 * exp ( - x ;
rank: 731
score: 99.21352914663461
patch: return - 1 . length * exp ( - x ) ;
rank: 731
score: 99.16365872896634
patch: return 0 . $NUMBER$ * x ( x + x ) ;
rank: 731
score: 99.13155110677083
patch: return - 1 . 0 / exp ( x ) ;
rank: 731
score: 99.13040865384616
patch: return - $NUMBER$ * exp ( - 0 . 0 ) ;
rank: 731
score: 99.05620783025569
patch: return 0 . $NUMBER$ * exp ( value ) ;
rank: 731
score: 98.96390787760417
patch: return - 0 . $NUMBER$ * exp ;
rank: 732
score: 99.226806640625
patch: return 0 * - 1 * exp ( - x ) ;
rank: 732
score: 99.21337890625
patch: return 0 . 1 0 * exp ( - x ) ;
rank: 732
score: 99.16357421875
patch: return exp ( x ) . exp ( x ) ;
rank: 732
score: 99.13022867838542
patch: return ( exp ( x ) ) ;
rank: 732
score: 99.13004557291667
patch: return 0 . 0 + exp ( - 1 ) ;
rank: 732
score: 99.12593587239583
patch: return - 0 . $NUMBER$ * exp ( double ) ;
rank: 733
score: 99.1634521484375
patch: return 0 . 0 * exp ( - x 1 ) ;
rank: 733
score: 99.1507568359375
patch: return $NUMBER$ . $NUMBER$ * exp ( 0 . ) ;
rank: 733
score: 99.01695667613636
patch: return - x + exp ( - x ) ;
rank: 733
score: 98.96073774857955
patch: return ( exp ( x ) / $NUMBER$ ) ;
rank: 734
score: 99.22598266601562
patch: return - - 0 . $NUMBER$ * exp ( ) ;
rank: 734
score: 99.1627197265625
patch: } return 0 . $NUMBER$ + exp ( x ) ;
rank: 734
score: 99.12467447916667
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 734
score: 99.015869140625
patch: return ( x > $NUMBER$ ) ;
rank: 734
score: 98.9603271484375
patch: return ( - 0 . $NUMBER$ , x ) ;
rank: 735
score: 99.21029897836539
patch: return 0 . 0 ( exp ( - x ) ) ;
rank: 735
score: 99.16148885091145
patch: return $NUMBER$ . 1 + exp ( - x ) ;
rank: 735
score: 99.14886474609375
patch: return $NUMBER$ . $NUMBER$ * ( x - x ) ;
rank: 735
score: 99.12958233173077
patch: return 0 . $NUMBER$ - exp ( - x ) ; }
rank: 735
score: 99.12275834517045
patch: return 0 . 0 * exp ( - x )
rank: 735
score: 99.05216841264205
patch: return Math . 0 * exp ( x ) ;
rank: 736
score: 99.22561410757211
patch: return 0 * - $NUMBER$ * exp ( - x ) ;
rank: 736
score: 99.16110464242789
patch: result - 0 . $NUMBER$ * exp ( - x ) ;
rank: 736
score: 99.1487325032552
patch: return - 0 . $NUMBER$ * exp ( x ) )
rank: 736
score: 99.12936636117789
patch: return 0 . $NUMBER$ / ( - 0 . 0 ) ;
rank: 736
score: 99.12560017903645
patch: return 0 . 0 / - exp ( x ) ;
rank: 736
score: 99.1223856608073
patch: |= 0 . 0 * exp ( - x ) ;
rank: 736
score: 98.96012369791667
patch: if ( x <= 0 . $NUMBER$ )
rank: 737
score: 99.22557654747597
patch: return 0 . $NUMBER$ * exp ( - x ) / ;
rank: 737
score: 99.16026611328125
patch: break 0 * exp ( - x ) ;
rank: 737
score: 99.14816284179688
patch: return - 0 . $NUMBER$ * abs ( x ) ;
rank: 737
score: 99.12455610795455
patch: return x * exp ( x - $NUMBER$ ) ;
rank: 737
score: 99.11958821614583
patch: &= 0 . 0 * exp ( - x ) ;
rank: 737
score: 99.01453746448864
patch: return - 0 . $NUMBER$ double ( x ) ;
rank: 737
score: 98.9601162997159
patch: return - ( 0 . $NUMBER$ , x ) ;
rank: 738
score: 99.22524789663461
patch: return Double . - 0 * exp ( - x ) ;
rank: 738
score: 99.16026000976562
patch: return 0 * exp ( x ) ) ;
rank: 738
score: 99.14741346571181
patch: return 0 . $NUMBER$ * - x ;
rank: 738
score: 99.12418619791667
patch: return - 0 . 0 / ( - x ) ;
rank: 738
score: 99.05024857954545
patch: return 0 . $NUMBER$ * exp [ x ] ;
rank: 739
score: 99.12766335227273
patch: return - $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 739
score: 99.11888631184895
patch: - 0 . $NUMBER$ * exp ( - x ) ;
rank: 739
score: 98.95566628196023
patch: return $NUMBER$ . $NUMBER$ * exp ( $STRING$ ) ;
rank: 740
score: 99.2095947265625
patch: return 0 0 . 0 * exp ( - x ) ;
rank: 740
score: 99.14667302911931
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) .
rank: 740
score: 99.11868286132812
patch: return 0 . 0 * exp ( x ) ; ;
rank: 740
score: 98.9556551846591
patch: return 0 * exp ( x , 0 ) ;
rank: 741
score: 99.22408353365384
patch: return 0 ; . $NUMBER$ * exp ( - x ) ;
rank: 741
score: 99.20850626627605
patch: return 0 . 0 * min ( - x ) ;
rank: 741
score: 99.14666193181819
patch: return $NUMBER$ * exp ( - x ) ; else
rank: 741
score: 99.12757286658653
patch: return - 0 . $NUMBER$ * x - 0 . 0 ;
rank: 741
score: 99.12351481119792
patch: return new double [ exp ( - x ) ] ;
rank: 741
score: 99.04789595170455
patch: return Math . exp ( x , x ) ;
rank: 741
score: 99.01030939275569
patch: return - 0 - exp ( - x ) ;
rank: 741
score: 98.95557318793402
patch: x = new double [ $NUMBER$ ] ;
rank: 742
score: 99.20835524338942
patch: return - 0 . $NUMBER$ * exp - 0 . $NUMBER$ ;
rank: 742
score: 99.15736897786458
patch: return return 1 . $NUMBER$ * exp ( x ) ;
rank: 742
score: 99.1460673014323
patch: return - 0 . ) * exp ( x ) ;
rank: 742
score: 99.00986550071023
patch: return x + exp ( x - $NUMBER$ ) ;
rank: 742
score: 98.95537567138672
patch: return new double [ x ] ;
rank: 743
score: 99.22141676682692
patch: return 0 . 0 * exp ( - 1 ) ; }
rank: 743
score: 99.15653483072917
patch: return 0 . $NUMBER$ ^ exp ( - x ) ;
rank: 743
score: 99.1450907389323
patch: return x * x * exp ( - x ) ;
rank: 743
score: 99.12131754557292
patch: return 0 . $NUMBER$ + ( x - $NUMBER$ ) ;
rank: 743
score: 98.95517306857639
patch: if ( x > 0 . 0 )
rank: 744
score: 99.2205301920573
patch: return Double . $NUMBER$ * exp ( - 1 ) ;
rank: 744
score: 99.207275390625
patch: return 0 * exp ( x ) - x ;
rank: 744
score: 99.14481608072917
patch: return 0 . $NUMBER$ * exp ( - x ) )
rank: 744
score: 98.95084228515626
patch: negate ( x , 0 . 0 ) ;
rank: 745
score: 99.20699368990384
patch: ( 0 . $NUMBER$ * exp ( - x ) ) ;
rank: 745
score: 99.1557108561198
patch: return 0 . $NUMBER$ ] / exp ( x ) ;
rank: 745
score: 99.14452015269886
patch: return - 0 . max ( - x ) ;
rank: 745
score: 99.12637939453126
patch: return ( exp ( - 1 ) ) ;
rank: 745
score: 99.1204325358073
patch: return 1 . 0 + exp ( - $NUMBER$ ) ;
rank: 745
score: 99.1152852376302
patch: return - - 0 . $NUMBER$ ( - x ) ;
rank: 745
score: 98.94862874348958
patch: return - ( 0 . $NUMBER$ ) ;
rank: 746
score: 99.22007242838542
patch: return 0 * exp ( - 1 ) * x ;
rank: 746
score: 99.14426676432292
patch: return 0 . $NUMBER$ * exp ( < x ) ;
rank: 746
score: 99.12606811523438
patch: return $NUMBER$ ; } if ( x < 0 ) {
rank: 746
score: 99.1148173014323
patch: = $NUMBER$ . 0 * exp ( - x ) ;
rank: 746
score: 99.00639204545455
patch: return - exp ( - x - x ) ;
rank: 746
score: 98.947265625
patch: if ( x >= 0 . $NUMBER$ ) {
rank: 747
score: 99.15378981370192
patch: if - 0 . $NUMBER$ * exp ( - x ) ;
rank: 747
score: 99.14425659179688
patch: return 0 . $NUMBER$ * round ( - x ) ;
rank: 747
score: 99.1181640625
patch: return $NUMBER$ . 0 * exp ( x ) ; }
rank: 747
score: 99.11471557617188
patch: return 0 . $NUMBER$ * break ( - x ) ;
rank: 747
score: 99.03900756835938
patch: return ( 0 . $NUMBER$ , x ) ;
rank: 748
score: 99.15371704101562
patch: return 0 . - 1 * exp ( x ) ;
rank: 748
score: 99.14302571614583
patch: return 0 . $NUMBER$ * exp ( - x ) &&
rank: 748
score: 99.11811967329545
patch: return $NUMBER$ . 0 - exp ( x ) ;
rank: 748
score: 99.03849653764205
patch: return ( 0 . 0 , - x ) ;
rank: 748
score: 99.00477430555556
patch: return - 0 . $NUMBER$ + x ;
rank: 748
score: 98.944140625
patch: if ( x < 0 . 0 ) {
rank: 749
score: 99.12517755681819
patch: return - ( exp ( - $NUMBER$ ) ) ;
rank: 749
score: 99.11728922526042
patch: return exp ( x - x ) ;
rank: 749
score: 98.9440673828125
patch: if ( x == 0 . $NUMBER$ ) {
rank: 750
score: 99.14027913411458
patch: return $NUMBER$ * exp ( - x ) + x ;
rank: 750
score: 99.12302652994792
patch: return x ; } if ( x > $NUMBER$ ) {
rank: 750
score: 99.11646728515625
patch: return 0 / exp ( - $NUMBER$ ) ;
rank: 750
score: 99.11283735795455
patch: = 1 . $NUMBER$ * exp ( x ) ;
rank: 750
score: 99.00360662286931
patch: return - x + negate ( - x ) ;
rank: 751
score: 99.13970947265625
patch: / 0 . $NUMBER$ * exp ( - x ) ;
rank: 751
score: 99.11612955729167
patch: return 0 . 0 + new double [ $NUMBER$ ] ;
rank: 751
score: 99.037451171875
patch: return new exp ( x , x ) ;
rank: 751
score: 99.00346235795455
patch: return - ( x < 0 . $NUMBER$ ) ;
rank: 751
score: 98.94074096679688
patch: return $NUMBER$ * exp ( x ) ; }
rank: 752
score: 99.15281168619792
patch: return 0 . $NUMBER$ + value ( - x ) ;
rank: 752
score: 99.13873291015625
patch: return ( 0 . $NUMBER$ * x ) ;
rank: 752
score: 99.10873413085938
patch: return 0 . 0 ( - x ) ;
rank: 752
score: 99.03716486150569
patch: return 0 . 0 exp ( - x ) ;
rank: 752
score: 98.9404296875
patch: return - ( exp ( x ) ) ;
rank: 753
score: 99.21549479166667
patch: return - 1 . $NUMBER$ * exp ( 0 ) ;
rank: 753
score: 99.15257771809895
patch: return 0 . $NUMBER$ - exp ( x ) ) ;
rank: 753
score: 99.13834635416667
patch: return exp ( - 0 . $NUMBER$ * x ) ;
rank: 753
score: 99.11387125651042
patch: return ( x ) * exp ( - $NUMBER$ ) ;
rank: 753
score: 99.03633256392045
patch: return Float . $NUMBER$ * exp ( x ) ;
rank: 753
score: 99.00208629261364
patch: return - ( x < 0 . 0 ) ;
rank: 753
score: 98.94000854492188
patch: if ( x <= 0 . 0 ) {
rank: 754
score: 99.20357572115384
patch: return - 0 . 0 * exp ( - start ) ;
rank: 754
score: 99.13824462890625
patch: return 0 . $NUMBER$ * ( - - x ) ;
rank: 754
score: 99.11216227213542
patch: result = 0 . $NUMBER$ / exp ( x ) ;
rank: 754
score: 99.03391335227273
patch: return 0 . $NUMBER$ * read ( x ) ;
rank: 754
score: 99.00205485026042
patch: return ( - x - x ) ;
rank: 755
score: 99.21363243689903
patch: return - 0 . 0 * exp ( / x ) ;
rank: 755
score: 99.13720703125
patch: return $NUMBER$ + $NUMBER$ * exp ( - x ) ;
rank: 755
score: 99.11158243815105
patch: return 1 . $NUMBER$ + exp ( - $NUMBER$ ) ;
rank: 755
score: 99.03279252485795
patch: return Float . 0 * exp ( x ) ;
rank: 755
score: 99.00196422230114
patch: return 0 - exp ( x , x ) ;
rank: 755
score: 98.93643798828126
patch: return - x - exp ( x ) ;
rank: 756
score: 99.1501797762784
patch: return 0 * exp ( - - x ) ;
rank: 756
score: 99.11347045898438
patch: return ( x - 0 . $NUMBER$ ) ;
rank: 756
score: 99.1036376953125
patch: double 0 * exp ( - x ) ;
rank: 756
score: 98.99951171875
patch: return ( - 0 . 0 , x ) ;
rank: 756
score: 98.9358154296875
patch: return - 0 * exp ( x ) ;
rank: 757
score: 99.21344549005681
patch: return 0 . $NUMBER$ * exp ( - 1 ;
rank: 757
score: 99.20209209735577
patch: return - 0 . $NUMBER$ - exp ( - 1 ) ;
rank: 757
score: 99.11325073242188
patch: return 1 . 1 + exp ( - x ) ;
rank: 757
score: 99.10312721946023
patch: return - $NUMBER$ / exp ( - x ) ;
rank: 757
score: 99.03258167613636
patch: return 0 . 0 * value ( x ) ;
rank: 758
score: 99.2129657451923
patch: return 0 * exp ( - x ) ( x ) ;
rank: 758
score: 99.14806019176136
patch: return 0 . $NUMBER$ << exp ( x ) ;
rank: 758
score: 99.1357930501302
patch: return 0 . null * exp ( - x ) ;
rank: 758
score: 99.11304820667614
patch: return 0 + exp ( x - x ) ;
rank: 758
score: 99.11007690429688
patch: return x * exp ( - $NUMBER$ ) ;
rank: 758
score: 99.1026102701823
patch: return 0 . 0 * exp ( double ) $NUMBER$ ;
rank: 758
score: 98.9991787997159
patch: return exp ( x , x - x ) ;
rank: 758
score: 98.93292236328125
patch: return exp ( x , 0 ) ;
rank: 759
score: 99.2018573467548
patch: return 0 . $NUMBER$ + exp ( 0 . 0 ) ;
rank: 759
score: 99.13560994466145
patch: return - x * exp ( x + x ) ;
rank: 759
score: 99.10215250651042
patch: return 0 . $NUMBER$ * exp ( double ) 1 ;
rank: 760
score: 99.14607747395833
patch: return 0 . $NUMBER$ * exp ( - x ) {
rank: 760
score: 99.11185709635417
patch: return - 1 . 0 + exp ( x ) ;
rank: 760
score: 99.11000569661458
patch: return 0 . $NUMBER$ + exp ( - 0 ) ;
rank: 761
score: 99.13339233398438
patch: return ) . $NUMBER$ * exp ( - x ) ;
rank: 761
score: 99.11163330078125
patch: return 0 . 1 + exp ( - $NUMBER$ ) ;
rank: 761
score: 99.10994466145833
patch: return ( - 0 . 0 ) ; } else {
rank: 761
score: 99.10048421223958
patch: double CaMeL Value ( ) ; return 0 . $NUMBER$ ;
rank: 761
score: 99.02557927911931
patch: return 1 . $NUMBER$ , exp ( x ) ;
rank: 762
score: 99.1450907389323
patch: } return 0 . 0 * exp ( x ) ;
rank: 762
score: 99.10985310872395
patch: return x * exp ( - 0 . 0 ) ;
rank: 762
score: 99.10036214192708
patch: return - 0 . $NUMBER$ + ( - x ) ;
rank: 762
score: 98.9946621981534
patch: return x + exp ( x - x ) ;
rank: 763
score: 99.21039287860577
patch: return - 0 . $NUMBER$ * max ( - 1 ) ;
rank: 763
score: 99.13299560546875
patch: return - ( exp ( x ) - x ) ;
rank: 763
score: 99.11107381184895
patch: return 0 . 0 - exp ( x ) ; }
rank: 763
score: 99.1091064453125
patch: return $NUMBER$ * exp ( - 1 ) ;
rank: 763
score: 99.09766734730114
patch: return 0 . $NUMBER$ * this . - x ;
rank: 763
score: 99.0247802734375
patch: return 0 . $NUMBER$ * Math ( x ) ;
rank: 763
score: 98.98890991210938
patch: return x + negate ( - x ) ;
rank: 763
score: 98.92486572265625
patch: return 1 / exp ( - x ) ;
rank: 764
score: 99.20813927283653
patch: return 0 $NUMBER$ . $NUMBER$ * exp ( - x ) ;
rank: 764
score: 99.20049579326923
patch: return - 0 . 0 + exp ( - 1 ) ;
rank: 764
score: 99.14408735795455
patch: return 0 * exp ( x ) * x ;
rank: 764
score: 99.13140314275569
patch: return $NUMBER$ . $NUMBER$ * exp - - x ;
rank: 764
score: 99.09746759588069
patch: return - 1 . 0 ( - x ) ;
rank: 764
score: 98.98676147460938
patch: return 0 , exp ( - x ) ;
rank: 764
score: 98.92465209960938
patch: exp ( x , 0 ) ;
rank: 765
score: 99.20760404146634
patch: return - 0 . $NUMBER$ * / ( - x ) ;
rank: 765
score: 99.20034790039062
patch: return 0 . 0 * exp ( - start ) ;
rank: 765
score: 99.14293416341145
patch: return 0 . $NUMBER$ < exp ( - x ) ;
rank: 765
score: 99.1087646484375
patch: return 0 . 1 * exp ( - 1 ) ;
rank: 765
score: 99.09471546519886
patch: return - 0 . $NUMBER$ * Na CaMeL N ;
rank: 765
score: 99.0233487215909
patch: return $NUMBER$ . 0 , exp ( x ) ;
rank: 765
score: 98.98125542534723
patch: return - 0 . 0 * x ;
rank: 765
score: 98.92193603515625
patch: if ( x < 0 . 0 )
rank: 766
score: 99.1992899576823
patch: return 0 . $NUMBER$ * exp ( 0 . 0 ;
rank: 766
score: 99.14292214133523
patch: return $NUMBER$ + exp ( - x ) ) ;
rank: 766
score: 99.10868326822917
patch: return x > 0 * exp ( - x ) ;
rank: 767
score: 99.14276123046875
patch: return 0 = $NUMBER$ * exp ( - x ) ;
rank: 767
score: 99.13036092122395
patch: return - 0 . null * exp ( x ) ;
rank: 767
score: 99.02187278053977
patch: return 0 . $NUMBER$ * byte ( x ) ;
rank: 767
score: 98.91653103298611
patch: return ( - 0 . $NUMBER$ ) ;
rank: 768
score: 99.1297274502841
patch: return - 0 . abs ( - x ) ;
rank: 768
score: 99.10687255859375
patch: return exp ( - 0 . 0 ) ;
rank: 768
score: 99.01975319602273
patch: return 0 . $NUMBER$ * start ( x ) ;
rank: 768
score: 98.97997436523437
patch: return - ( - x - x ) ;
rank: 768
score: 98.91486952039931
patch: if ( x <= 0 . 0 )
rank: 769
score: 99.19863656850961
patch: return 0 . $NUMBER$ * exp ( x ) . 1 ;
rank: 769
score: 99.14251708984375
patch: return 0 . $NUMBER$ ++ * exp ( x ) ;
rank: 769
score: 99.12917073567708
patch: return - 0 . $NUMBER$ * exp ( x ) *
rank: 769
score: 99.10739135742188
patch: return ( new double [ ] { x } ) ;
rank: 769
score: 99.08196466619319
patch: return - Math . abs ( - x ) ;
rank: 769
score: 99.01905406605114
patch: += 0 . 0 * exp ( x ) ;
rank: 769
score: 98.97645263671875
patch: x = exp ( x , x ) ;
rank: 769
score: 98.91354709201389
patch: return - 0 . $NUMBER$ * $NUMBER$ ;
rank: 770
score: 99.2046610514323
patch: return 0 / $NUMBER$ * exp ( - x ) ;
rank: 770
score: 99.12901814778645
patch: return - 0 . $NUMBER$ * - ( x ) ;
rank: 770
score: 99.01838822798295
patch: return 0 . $NUMBER$ * new ( x ) ;
rank: 771
score: 99.20335036057692
patch: return 0 . $NUMBER$ / / exp ( - x ) ;
rank: 771
score: 99.14113362630208
patch: return $NUMBER$ . $NUMBER$ | exp ( - x ) ;
rank: 771
score: 99.1063741048177
patch: return false ; } if ( x > 0 ) {
rank: 771
score: 99.08043212890625
patch: = $NUMBER$ * exp ( - x ) ;
rank: 771
score: 99.0179110440341
patch: return $NUMBER$ / exp ( x , x ) ;
rank: 771
score: 98.97331237792969
patch: return ( x < $NUMBER$ ) ;
rank: 771
score: 98.91316986083984
patch: return - ( - x ) ;
rank: 772
score: 99.12839762369792
patch: return $NUMBER$ . $NUMBER$ * exp ( / x ) ;
rank: 772
score: 98.91260443793402
patch: return - ( x - $NUMBER$ ) ;
rank: 773
score: 99.19736891526442
patch: return - 0 . $NUMBER$ * exp ( - x ) }
rank: 773
score: 99.1281026204427
patch: double - 0 . $NUMBER$ * exp ( x ) ;
rank: 773
score: 99.1060078938802
patch: return false ; } if ( x == 0 ) {
rank: 773
score: 98.91257731119792
patch: return 0 . $NUMBER$ ; } else {
rank: 774
score: 99.2018710049716
patch: return - 1 / exp ( - x ) ;
rank: 774
score: 99.19733135516827
patch: return - 0 . $NUMBER$ * exp ( 0 . 1 ;
rank: 774
score: 99.13850911458333
patch: return 0 . 0 + exp ( x ) ) ;
rank: 774
score: 99.12774658203125
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ; /
rank: 774
score: 98.97266981336806
patch: x += exp ( - x ) ;
rank: 774
score: 98.91238403320312
patch: if ( x > 0 ) {
rank: 775
score: 99.19689002403847
patch: * - 0 . 0 * exp ( - x ) ;
rank: 775
score: 99.12759399414062
patch: / - 0 . $NUMBER$ * exp ( x ) ;
rank: 775
score: 99.09128639914773
patch: return 0 / exp ( x - x ) ;
rank: 775
score: 99.06544078480114
patch: return - 0 . $NUMBER$ * this . x ;
rank: 775
score: 98.97202758789062
patch: return - exp ( x , x ) ;
rank: 775
score: 98.91170247395833
patch: if ( x >= 0 . $NUMBER$ )
rank: 776
score: 99.12750244140625
patch: return $NUMBER$ * exp ( - x , x ) ;
rank: 776
score: 99.10460408528645
patch: return ( exp ( - $NUMBER$ ) / $NUMBER$ ) ;
rank: 776
score: 99.0133944424716
patch: return ( 0 . $NUMBER$ , - x ) ;
rank: 777
score: 99.1968524639423
patch: return - 1 . $NUMBER$ * exp ( 0 . ) ;
rank: 777
score: 99.1380948153409
patch: return 0 * exp ( - x ) ; ;
rank: 777
score: 99.12686157226562
patch: / return 0 . $NUMBER$ * exp ( x ) ;
rank: 777
score: 99.10186767578125
patch: return ( x ) - exp ( - x ) ;
rank: 777
score: 99.06063406808036
patch: return - 0 . $NUMBER$ ;
rank: 778
score: 99.1962381998698
patch: return 0 . $NUMBER$ return exp ( - x ) ;
rank: 778
score: 99.13780721028645
patch: return 0 . $NUMBER$ + max ( - x ) ;
rank: 778
score: 99.12558815696023
patch: return $NUMBER$ * exp exp ( - x ) ;
rank: 778
score: 99.0130948153409
patch: return 0 . 0 * exp ( $STRING$ ) ;
rank: 778
score: 98.9062744140625
patch: if ( x == 0 . 0 ) {
rank: 779
score: 99.12366832386364
patch: return $NUMBER$ * exp ( - x ) ; ;
rank: 779
score: 99.05848277698864
patch: return 0 . $NUMBER$ * exp ( double ) ;
rank: 779
score: 99.0130615234375
patch: return new exp ( x , - x ) ;
rank: 779
score: 98.97089233398438
patch: return - 0 . $NUMBER$ ( x ) ;
rank: 780
score: 99.08135431463069
patch: return - - $NUMBER$ * exp ( x ) ;
rank: 780
score: 98.96965789794922
patch: return ( x == 0 ) ;
rank: 780
score: 98.90338134765625
patch: return $NUMBER$ . $NUMBER$ * exp ( x ;
rank: 781
score: 99.19541422526042
patch: return 0 * exp ( - 1 . $NUMBER$ ) ;
rank: 781
score: 99.13478597005208
patch: } return $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 781
score: 99.08088514539931
patch: return ( - 0 . 0 ) ;
rank: 781
score: 99.01215154474431
patch: return exp ( x , - x ) ; }
rank: 781
score: 98.96752251519098
patch: return * exp ( - x ) ;
rank: 781
score: 98.90118408203125
patch: if ( x >= 0 . 0 ) {
rank: 782
score: 99.13472493489583
patch: return 0 . $NUMBER$ * float ( - x ) ;
rank: 782
score: 99.1206766764323
patch: return - x * exp ( x - x ) ;
rank: 782
score: 99.08049011230469
patch: return exp ( - $NUMBER$ ) ;
rank: 782
score: 98.9674072265625
patch: return - x + 0 . $NUMBER$ ;
rank: 782
score: 98.90110473632812
patch: if ( x > 0 ) return x ;
rank: 783
score: 99.1915283203125
patch: result = 0 . $NUMBER$ - exp ( - x ) ;
rank: 783
score: 99.13466389973958
patch: return 1 . $NUMBER$ | exp ( - x ) ;
rank: 783
score: 99.12052408854167
patch: return $NUMBER$ . $NUMBER$ * start ( - x ) ;
rank: 783
score: 99.07880249023438
patch: return 0 . 0 ; negate = true ;
rank: 783
score: 99.04359019886364
patch: double CaMeL Value ( ) ( - x ) ;
rank: 783
score: 98.89892578125
patch: if ( x == 0 . $NUMBER$ )
rank: 784
score: 99.18764426491477
patch: return 0 . 0 * exp ( - x ;
rank: 784
score: 99.12038167317708
patch: return 0 . 0 * exp ( - x ) .
rank: 784
score: 99.09794108072917
patch: ret = 0 . $NUMBER$ * exp ( x ) ;
rank: 784
score: 98.89866333007812
patch: return - 0 . $NUMBER$ * x ; }
rank: 785
score: 99.18902118389423
patch: *= - 0 . $NUMBER$ * exp ( - x ) ;
rank: 785
score: 99.1876220703125
patch: return 0 * exp ( - x ) + 1 ;
rank: 785
score: 99.01085815429687
patch: return 0 . 0 * ( x ) ;
rank: 785
score: 98.96275024414062
patch: return - x . exp ( x ) ;
rank: 785
score: 98.89502563476563
patch: return 0 . $NUMBER$ double ( x ) ;
rank: 786
score: 99.187353515625
patch: return - 1 * exp ( x ) ;
rank: 786
score: 99.09515380859375
patch: return x * exp ( - 0 . $NUMBER$ ) ;
rank: 786
score: 99.0747802734375
patch: return 0 . 0 / ( x ) ;
rank: 786
score: 99.01060901988636
patch: if ( x != 0 ) { return x ;
rank: 786
score: 98.96195068359376
patch: x = exp ( x - x ) ;
rank: 787
score: 99.18694513494319
patch: return - 0 . $NUMBER$ / exp ( ) ;
rank: 787
score: 99.18587239583333
patch: return 0 . 0 0 * exp ( x ) ;
rank: 787
score: 99.1303202311198
patch: return exp ( - exp ( - x ) ) ;
rank: 787
score: 99.09369451349431
patch: return ( x ) * exp ( x ) ;
rank: 787
score: 99.03271484375
patch: double CaMeL Value ( x , - x ) ;
rank: 788
score: 99.18628946940105
patch: return - 0 . 0 * exp ( - 1 ;
rank: 788
score: 99.1856689453125
patch: * return 0 . $NUMBER$ * exp ( x ) ;
rank: 788
score: 99.11960856119792
patch: return $NUMBER$ . $NUMBER$ * exp ( x ) ; else
rank: 788
score: 99.00914417613636
patch: return Long . 1 * exp ( x ) ;
rank: 788
score: 98.95848388671875
patch: return exp ( - x - $NUMBER$ ) ;
rank: 788
score: 98.89263305664062
patch: return - x . sinh ( x ) ;
rank: 789
score: 99.1839090983073
patch: return Double . value CaMeL Of ( - x ) ;
rank: 789
score: 99.12943522135417
patch: return 0 . - $NUMBER$ * exp ( x ) ;
rank: 789
score: 99.03235973011364
patch: return 1 . $NUMBER$ * exp ( - x )
rank: 789
score: 99.00712890625
patch: return 0 . 0 exp ( x ) ;
rank: 789
score: 98.95807756696429
patch: return ( - x ) ;
rank: 789
score: 98.89260525173611
patch: return 0 . 0 ; } else {
rank: 790
score: 99.12935384114583
patch: return 0 . $NUMBER$ - - exp ( x ) ;
rank: 790
score: 99.09047444661458
patch: return 0 . $NUMBER$ * exp ( x ) ] ;
rank: 790
score: 99.0710116299716
patch: return 0 . 0 + ( - x ) ;
rank: 791
score: 99.1288818359375
patch: return $NUMBER$ * exp ( x ) ) ;
rank: 791
score: 99.1168212890625
patch: return - x * exp ( x ) ;
rank: 791
score: 99.08927408854167
patch: double 0 . $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 792
score: 99.18178304036458
patch: return 0 * exp ( - x ) * 0 ;
rank: 792
score: 99.17893473307292
patch: return 0 . $NUMBER$ * exp ( - x ) }
rank: 792
score: 99.12880452473958
patch: return 0 . $NUMBER$ + exp ( - x ) .
rank: 792
score: 99.11475719105114
patch: return $NUMBER$ . $NUMBER$ exp ( - x ) ;
rank: 792
score: 99.08821614583333
patch: return 0 . $NUMBER$ / exp ( - 0 ) ;
rank: 792
score: 99.06867009943181
patch: return - ( x - 0 . 0 ) ;
rank: 792
score: 98.95289916992188
patch: return - ( - x - $NUMBER$ ) ;
rank: 793
score: 99.18174050071023
patch: return - 0 . 0 * exp ( x ;
rank: 793
score: 99.1282958984375
patch: return exp - $NUMBER$ * exp ( - x ) ;
rank: 793
score: 99.08469645182292
patch: return ( exp ( - x ) - $NUMBER$ ) ;
rank: 793
score: 99.06418678977273
patch: return 1 . 1 / exp ( x ) ;
rank: 793
score: 99.00302956321023
patch: return 0 . $NUMBER$ * Float ( x ) ;
rank: 794
score: 99.18161010742188
patch: return 0 * exp ( - 0 ) ;
rank: 794
score: 99.02735484730114
patch: return 0 . $NUMBER$ * - 0 . $NUMBER$ ;
rank: 794
score: 98.88716125488281
patch: if ( x < 0 ) {
rank: 795
score: 99.12720743815105
patch: return 0 . $NUMBER$ + exp ( int ) x ;
rank: 795
score: 99.10518022017045
patch: return x * exp ( - - x ) ;
rank: 795
score: 98.94975280761719
patch: return ( x == $NUMBER$ ) ;
rank: 795
score: 98.88433227539062
patch: return 0 . 0 * exp ( x ;
rank: 796
score: 99.17844645182292
patch: return 0 * exp ( - x * x ) ;
rank: 796
score: 99.06068115234375
patch: return 0 + exp ( - $NUMBER$ ) ;
rank: 796
score: 99.0239590731534
patch: double CaMeL Value ( ) ; return - x ;
rank: 796
score: 99.0002774325284
patch: return exp ( $NUMBER$ . 0 , x ) ;
rank: 796
score: 98.88323364257812
patch: return exp ( x ) ; } else {
rank: 797
score: 99.12379039417614
patch: return exp ( - x , - x ) ;
rank: 797
score: 99.08156331380208
patch: return 0 . $NUMBER$ - exp ( - 1 ) ;
rank: 797
score: 99.06055797230114
patch: return 0 - exp ( x - x ) ;
rank: 797
score: 99.02288818359375
patch: return - - - 0 . $NUMBER$ ;
rank: 797
score: 99.00018865411931
patch: return 0 . 1 , exp ( x ) ;
rank: 797
score: 98.94683074951172
patch: return new int [ $NUMBER$ ] ;
rank: 798
score: 99.17213948567708
patch: return 0 + $NUMBER$ * exp ( - x ) ;
rank: 798
score: 99.08154296875
patch: return ( exp ( x ) - $NUMBER$ ) ;
rank: 798
score: 98.94562445746527
patch: x = x ; negate = true ;
rank: 798
score: 98.8822021484375
patch: exp ( - x ) ;
rank: 799
score: 99.173095703125
patch: return - 1 . $NUMBER$ * exp ( $NUMBER$ ) ;
rank: 799
score: 99.12223307291667
patch: return ( exp ( - x ) + x ) ;
rank: 799
score: 99.08131917317708
patch: return 0 . $NUMBER$ * exp ( - $STRING$ ) ;
rank: 799
score: 99.05928178267045
patch: return x - exp ( x - $NUMBER$ ) ;
rank: 799
score: 98.99671088324652
patch: return exp ( x , negate ) ;
rank: 799
score: 98.944677734375
patch: return exp ( - x , x ) ;
rank: 799
score: 98.88199191623264
patch: return - ( 0 . 0 ) ;
rank: 800
score: 99.17239379882812
patch: return - 1 . 0 * exp ( 0 ) ;
rank: 800
score: 99.12112426757812
patch: return 0 . $NUMBER$ * exp ( int ) $NUMBER$ ;
rank: 800
score: 99.0987548828125
patch: return $NUMBER$ . $NUMBER$ * max ( x ) ;
rank: 800
score: 99.01877663352273
patch: return - 0 . $NUMBER$ / ( x ) ;
rank: 801
score: 99.07974243164062
patch: return - 0 . $NUMBER$ + - ( x ) ;
rank: 801
score: 99.01724243164062
patch: return - 0 . $NUMBER$ ; } else {
rank: 801
score: 98.94068060980902
patch: return - 0 . $NUMBER$ * this ;
rank: 802
score: 99.17054239908855
patch: return 0 * 0 * exp ( - 1 ) ;
rank: 802
score: 99.0937832919034
patch: return - 0 . get ( - x ) ;
rank: 802
score: 99.0791524251302
patch: return false ; } if ( x < 0 ) {
rank: 802
score: 99.05470969460227
patch: return x - exp ( x - x ) ;
rank: 802
score: 99.0157803622159
patch: return 0 . 0 * this . - x ;
rank: 802
score: 98.98491075303819
patch: return x . exp ( x ) ;
rank: 802
score: 98.93544311523438
patch: return x + 0 . $NUMBER$ * x ;
rank: 802
score: 98.88102416992187
patch: return 0 * exp ( x ) ; }
rank: 803
score: 99.16907755533855
patch: return 1 . 0 * exp ( - 1 ) ;
rank: 803
score: 99.11820475260417
patch: return 0 . ) + exp ( - x ) ;
rank: 803
score: 99.08941650390625
patch: return - 0 . ( - x ) ;
rank: 803
score: 99.01555841619319
patch: return - 0 . 1 ( - x ) ;
rank: 804
score: 99.05331081814236
patch: return new double [ 0 ] ; }
rank: 804
score: 98.87820434570312
patch: if ( x == 0 ) {
rank: 805
score: 99.11681111653645
patch: return 0 . $NUMBER$ + double ( - x ) ;
rank: 805
score: 99.08714463975694
patch: return exp ( - - x ) ;
rank: 805
score: 99.01279296875
patch: double CaMeL Value ( - x ) ; ;
rank: 805
score: 98.9342041015625
patch: return ( - x - $NUMBER$ ) ;
rank: 805
score: 98.8774169921875
patch: temp ( x , 0 . $NUMBER$ ) ;
rank: 806
score: 99.11543782552083
patch: return ( - x ) * exp ( x ) ;
rank: 806
score: 99.0845059481534
patch: return 0 . $NUMBER$ * exp ( x ) )
rank: 806
score: 99.07764689127605
patch: return ( x > 0 && x > 0 ) ;
rank: 806
score: 99.05224609375
patch: return sinh * exp ( - x ) ;
rank: 806
score: 99.01207386363636
patch: = $NUMBER$ . $NUMBER$ * exp ( x ) ;
rank: 806
score: 98.97075805664062
patch: return 0 == exp ( - x ) ;
rank: 807
score: 99.11525472005208
patch: return 0 * exp ( x + - x ) ;
rank: 807
score: 99.08383178710938
patch: return - 0 . $NUMBER$ * x ) ;
rank: 807
score: 99.07493082682292
patch: return x ; } if ( x < $NUMBER$ ) {
rank: 807
score: 98.93231879340277
patch: return - x - 0 . $NUMBER$ ;
rank: 807
score: 98.87503390842014
patch: return 0 . $NUMBER$ * x ; }
rank: 808
score: 99.16635131835938
patch: return 0 ; } else { return 0 . $NUMBER$ ;
rank: 808
score: 99.08359985351562
patch: return $NUMBER$ . $NUMBER$ * exp - x ;
rank: 808
score: 98.87434692382813
patch: return exp ( - 0 . $NUMBER$ ) ;
rank: 809
score: 99.01149680397727
patch: return Math . abs ( - - x ) ;
rank: 809
score: 98.92826334635417
patch: return 0 . $NUMBER$ ( x ) ;
rank: 810
score: 99.07728160511364
patch: return $NUMBER$ * exp ( - x ) ; /
rank: 810
score: 99.05058458116319
patch: return exp ( x - $NUMBER$ ) ;
rank: 810
score: 98.96525268554687
patch: return 0 . max ( - x ) ;
rank: 811
score: 99.07715953480114
patch: return 0 . $NUMBER$ * exp = - x ;
rank: 811
score: 98.92366536458333
patch: return 0 . ( - x ) ;
rank: 811
score: 98.87091674804688
patch: temp ( x , 0 . 0 ) ;
rank: 812
score: 99.07451837713069
patch: return - 0 . $NUMBER$ * x * x ;
rank: 812
score: 99.07373046875
patch: return 0 * exp ( - 0 . 0 ) ;
rank: 813
score: 99.16353352864583
patch: return 0 * exp ( - 1 ) / $NUMBER$ ;
rank: 813
score: 99.07422984730114
patch: return - 0 . $NUMBER$ * - x ) ;
rank: 813
score: 99.07323201497395
patch: return 0 . $NUMBER$ + ( x > 0 ) ;
rank: 813
score: 98.999755859375
patch: return double CaMeL Value ( - x ) ;
rank: 814
score: 99.16327459161931
patch: return x . $NUMBER$ * exp ( x ) ;
rank: 814
score: 99.04915161132813
patch: return ( x - x ) - x ;
rank: 814
score: 98.96334838867188
patch: return ( x > 0 ) + x ;
rank: 814
score: 98.92227172851562
patch: return x . negate ( - x ) ;
rank: 814
score: 98.86539035373264
patch: if ( x == 0 . 0 )
rank: 815
score: 99.10963023792614
patch: return 0 . $NUMBER$ * exp ( x ) {
rank: 815
score: 99.07359730113636
patch: return - 0 . $NUMBER$ * exp - $NUMBER$ ;
rank: 815
score: 98.96014404296875
patch: return ( x > $NUMBER$ ) + x ;
rank: 815
score: 98.92119140625
patch: return 0 - negate ( - x ) ;
rank: 815
score: 98.86493598090277
patch: if ( x >= 0 . 0 )
rank: 816
score: 99.15787760416667
patch: return 0 * exp ( - x ) . 0 ;
rank: 816
score: 99.10936279296875
patch: return 0 . $NUMBER$ * exp ( x )
rank: 816
score: 99.04746315696023
patch: return 0 . 0 / ( - $NUMBER$ ) ;
rank: 816
score: 98.92100830078125
patch: return ( x >= 0 . $NUMBER$ ) ;
rank: 817
score: 99.16131591796875
patch: return 0 * exp ( - 1 - x ) ;
rank: 817
score: 99.10429243607955
patch: return 0 * exp ( 0 . $NUMBER$ ) ;
rank: 817
score: 99.07255415482955
patch: return $NUMBER$ * exp ( x ) * x ;
rank: 817
score: 99.0672274502841
patch: return exp ( - $NUMBER$ ) ; } else {
rank: 817
score: 99.04736328125
patch: return 0 . $NUMBER$ + ( - x ) ;
rank: 817
score: 98.981982421875
patch: / * / exp ( - x ) ;
rank: 817
score: 98.92024230957031
patch: return ( x > 0 ) ;
rank: 817
score: 98.85912322998047
patch: return new exp ( x ) ;
rank: 818
score: 99.10063032670455
patch: return - 0 . $NUMBER$ + exp ( ) ;
rank: 818
score: 99.0703457919034
patch: return 0 . $NUMBER$ * exp $NUMBER$ * x ;
rank: 818
score: 99.06627308238636
patch: double 0 . $NUMBER$ * exp ( x ) ;
rank: 818
score: 98.91976928710938
patch: return 0 *= exp ( - x ) ;
rank: 818
score: 98.85885281032986
patch: return 1 / exp ( x ) ;
rank: 819
score: 99.10027521306819
patch: return 0 . $NUMBER$ || exp ( x ) ;
rank: 819
score: 99.06960227272727
patch: return - 0 . null ( - x ) ;
rank: 819
score: 99.06618430397727
patch: return - exp ( - 0 . 0 ) ;
rank: 819
score: 99.0457430752841
patch: return 0 . $NUMBER$ * HEX _ $NUMBER$ ; }
rank: 820
score: 99.09874378551136
patch: return 0 . $NUMBER$ + exp ( $NUMBER$ ) ;
rank: 820
score: 99.06925825639205
patch: return - 0 . $NUMBER$ * - - x ;
rank: 820
score: 98.97713623046874
patch: double CaMeL Value ( - - x ) ;
rank: 820
score: 98.95115152994792
patch: return exp ( - x ) ; }
rank: 820
score: 98.91692437065973
patch: return - 0 . $NUMBER$ * exp (
rank: 821
score: 99.15579223632812
patch: return 0 0 . $NUMBER$ * exp ( x ) ;
rank: 821
score: 99.06786431206598
patch: return $NUMBER$ . $NUMBER$ * - x ;
rank: 821
score: 99.06451970880681
patch: return ( x > 0 ) ; } else {
rank: 821
score: 99.04541015625
patch: return - 0 . 0 * HEX _ $NUMBER$ ;
rank: 821
score: 98.97700805664063
patch: return Math . round ( - x ) ;
rank: 822
score: 99.06768243963069
patch: return ( - 0 . $NUMBER$ * x ) ;
rank: 822
score: 99.04524369673295
patch: return $NUMBER$ . - exp ( - x ) ;
rank: 822
score: 98.97690158420139
patch: long CaMeL Value ( - x ) ;
rank: 822
score: 98.94791259765626
patch: return new double [ $NUMBER$ + x ] ;
rank: 822
score: 98.91651611328125
patch: return * exp ( x , x ) ;
rank: 822
score: 98.85121154785156
patch: if ( x <= 0 ) {
rank: 823
score: 99.15821422230114
patch: return 0 * exp ( - x ) * ;
rank: 823
score: 99.04499955610795
patch: return - 0 . 0 / ( x ) ;
rank: 823
score: 98.97505493164063
patch: return - 0 . $NUMBER$ * exp $NUMBER$ ;
rank: 823
score: 98.94482421875
patch: return new exp ( - x ) ;
rank: 823
score: 98.84766981336806
patch: x = 0 . $NUMBER$ * x ;
rank: 824
score: 99.09256591796876
patch: return - $NUMBER$ + exp ( x ) ;
rank: 824
score: 99.06623979048295
patch: return 0 . $NUMBER$ * exp 0 * x ;
rank: 824
score: 99.06029163707386
patch: return 0 . $NUMBER$ * format ( x ) ;
rank: 824
score: 99.04431762695313
patch: return 0 . $NUMBER$ ; negate = true ;
rank: 824
score: 98.96734619140625
patch: float CaMeL Value ( - x ) ;
rank: 825
score: 99.06607666015626
patch: return 0 . abs ( - x ) ;
rank: 825
score: 99.05766157670455
patch: return exp ( - x ) ; } else {
rank: 825
score: 98.9664794921875
patch: return - 0 . $NUMBER$ + - x ;
rank: 825
score: 98.93861083984375
patch: return $STRING$ * exp ( - x ) ;
rank: 825
score: 98.91429443359375
patch: return ( x >= 0 . 0 ) ;
rank: 825
score: 98.84424506293402
patch: exp ( exp ( x ) ) ;
rank: 826
score: 99.1567891438802
patch: return 0 * $NUMBER$ * exp ( - 1 ) ;
rank: 826
score: 99.15201822916667
patch: return 0 . $NUMBER$ 0 exp ( - x ) ;
rank: 826
score: 99.06597345525569
patch: return $NUMBER$ * exp ( - x ) ; *
rank: 826
score: 99.04408957741477
patch: return 1 . - exp ( - x ) ;
rank: 827
score: 99.05741743607955
patch: return - 0 . $NUMBER$ ; negate = true ;
rank: 827
score: 98.9380126953125
patch: return 0 . $NUMBER$ * x - x ;
rank: 827
score: 98.914013671875
patch: return - 0 - exp ( x ) ;
rank: 827
score: 98.83974783761161
patch: if ( x < 0 )
rank: 828
score: 99.15137329101563
patch: return 0 = exp ( - x ) ;
rank: 828
score: 99.09023215553977
patch: return exp ( - exp ( x ) ) ;
rank: 828
score: 99.0409823330966
patch: return $NUMBER$ . 1 / exp ( x ) ;
rank: 828
score: 98.9557373046875
patch: return Math . ceil ( - x ) ;
rank: 828
score: 98.91341824001736
patch: result = exp ( - x ) ;
rank: 828
score: 98.83965386284723
patch: exp ( x , - x ) ;
rank: 829
score: 99.15199788411458
patch: return 0 * exp ( - x ) + $NUMBER$ ;
rank: 829
score: 99.15135701497395
patch: return 0 * exp ( - x + 1 ) ;
rank: 829
score: 99.05213512073864
patch: return 0 . $NUMBER$ + - ( x ) ;
rank: 829
score: 99.03922895951705
patch: return 0 - exp ( x - $NUMBER$ ) ;
rank: 829
score: 98.91328430175781
patch: return ( x < 0 ) ;
rank: 829
score: 98.83603341238839
patch: if ( x > 0 )
rank: 830
score: 99.08561567826705
patch: return $NUMBER$ * exp ( x ) - x ;
rank: 830
score: 99.05711669921875
patch: return $NUMBER$ . $NUMBER$ * exp ( ) ;
rank: 830
score: 99.05054931640625
patch: double $NUMBER$ * exp ( - x ) ;
rank: 830
score: 99.03922895951705
patch: return - ( x - 0 . $NUMBER$ ) ;
rank: 830
score: 98.94583740234376
patch: double CaMeL Value ( ) ; return x ;
rank: 830
score: 98.91168212890625
patch: return ( x <= 0 . $NUMBER$ ) ;
rank: 830
score: 98.83207194010417
patch: if ( x > 0 ) break ;
rank: 831
score: 99.15181107954545
patch: return - 0 * exp ( - 1 ) ;
rank: 831
score: 99.05694025213069
patch: return - ( 0 . $NUMBER$ * x ) ;
rank: 831
score: 99.04810680042614
patch: } if ( x > 0 . 0 ) {
rank: 831
score: 99.0390292080966
patch: return 1 . 1 + exp ( x ) ;
rank: 831
score: 98.9103515625
patch: return ( x > $NUMBER$ . $NUMBER$ ) ;
rank: 832
score: 99.14885919744319
patch: return - 1 * exp ( - $NUMBER$ ) ;
rank: 832
score: 99.14834594726562
patch: return 0 . $NUMBER$ ( exp ( x ) ) ;
rank: 832
score: 99.0479403409091
patch: return 0 . $NUMBER$ + ( - $NUMBER$ ) ;
rank: 832
score: 99.0378085049716
patch: return - $NUMBER$ . $NUMBER$ * HEX _ $NUMBER$ ;
rank: 832
score: 98.94159545898438
patch: return - ( - 0 . $NUMBER$ ) ;
rank: 832
score: 98.82923235212054
patch: return x ; } else {
rank: 833
score: 99.14825439453125
patch: return 0 . $NUMBER$ * / exp ( x ) ;
rank: 833
score: 99.08106578480114
patch: return x * exp ( x + x ) ;
rank: 833
score: 98.93433295355902
patch: return 0 . max ( x ) ;
rank: 833
score: 98.82897186279297
patch: if ( x >= 0 ) {
rank: 834
score: 99.07987837357955
patch: return 0 . ) * exp ( x ) ;
rank: 834
score: 98.93975219726562
patch: = 1 * exp ( - x ) ;
rank: 834
score: 98.90772162543402
patch: return - ( x > $NUMBER$ ) ;
rank: 835
score: 99.14783732096355
patch: * 0 . $NUMBER$ * exp ( - x ) ;
rank: 835
score: 99.05396185980902
patch: return - 0 . $NUMBER$ * 0 ;
rank: 835
score: 99.03349609375
patch: return 1 - exp ( - x ) ;
rank: 835
score: 98.90740356445312
patch: return ( x <= 0 . 0 ) ;
rank: 836
score: 99.05341131036931
patch: return - 0 . min ( - x ) ;
rank: 836
score: 99.03147583007812
patch: return exp ( - x + x ) ;
rank: 836
score: 98.82182481553819
patch: return - ( x - 1 ) ;
rank: 837
score: 99.1470235188802
patch: return $NUMBER$ . 0 * exp ( - 1 ) ;
rank: 837
score: 99.07713734019886
patch: } return $NUMBER$ * exp ( - x ) ;
rank: 837
score: 99.030322265625
patch: return ( x - $NUMBER$ . $NUMBER$ ) ;
rank: 837
score: 98.9332763671875
patch: = $NUMBER$ / exp ( - x ) ;
rank: 837
score: 98.90685424804687
patch: return - - 0 . $NUMBER$ * x ;
rank: 837
score: 98.82147894965277
patch: if ( x < 0 ) break ;
rank: 838
score: 99.1442159016927
patch: return 0 + exp ( - x ) - x ;
rank: 838
score: 99.07695176866319
patch: } return exp ( - x ) ;
rank: 838
score: 99.0507479580966
patch: return $NUMBER$ . $NUMBER$ * exp ( - x )
rank: 839
score: 99.0505615234375
patch: return $NUMBER$ * max ( - x ) ;
rank: 839
score: 99.02533569335938
patch: return ( x - $NUMBER$ . 0 ) ;
rank: 839
score: 98.9045166015625
patch: result = exp ( x , x ) ;
rank: 839
score: 98.81971740722656
patch: return exp ( x ) ; }
rank: 840
score: 99.14618474786931
patch: return Double . value CaMeL Of ( x ) ;
rank: 840
score: 99.04721901633523
patch: return 0 . $NUMBER$ * abs ( x ) ;
rank: 840
score: 98.92608642578125
patch: return - - 0 . $NUMBER$ ) ;
rank: 840
score: 98.90301513671875
patch: negate ( - x - x ) ;
rank: 840
score: 98.81702338324652
patch: return - negate ( - x ) ;
rank: 841
score: 99.138916015625
patch: return - 0 . $NUMBER$ : 0 . $NUMBER$ ;
rank: 841
score: 99.0459872159091
patch: return 0 . $NUMBER$ * x * - x ;
rank: 841
score: 99.02269287109375
patch: return ( x - x ) + x ;
rank: 841
score: 98.92507934570312
patch: return Math . floor ( - x ) ;
rank: 841
score: 98.81551106770833
patch: exp ( - 0 . $NUMBER$ ) ;
rank: 842
score: 99.07338645241477
patch: return 0 . $NUMBER$ * exp ( false ) ;
rank: 843
score: 99.0731534090909
patch: return - 1 + exp ( - x ) ;
rank: 843
score: 99.03300337357955
patch: return 0 . $NUMBER$ * ( - $NUMBER$ ) ;
rank: 843
score: 98.924365234375
patch: return - 0 . $NUMBER$ , - x ;
rank: 843
score: 98.81143951416016
patch: if ( x > $NUMBER$ ) {
rank: 844
score: 99.041015625
patch: return 0 . 0 * exp - - x ;
rank: 844
score: 99.01751708984375
patch: return new double [ $NUMBER$ + $NUMBER$ ] ;
rank: 845
score: 99.1372403231534
patch: return - 0 . $NUMBER$ * exp ( 0 ;
rank: 845
score: 99.07082297585227
patch: } return 0 * exp ( - x ) ;
rank: 845
score: 99.03459028764205
patch: return $NUMBER$ * exp ( - x ) ; .
rank: 845
score: 99.0305508700284
patch: return 0 . 0 * exp ( - ) ;
rank: 845
score: 99.01365356445312
patch: return new double [ $NUMBER$ ] + x ;
rank: 845
score: 98.92243109809027
patch: return 0 == exp ( x ) ;
rank: 845
score: 98.92117648654514
patch: return - 1 . $NUMBER$ * x ;
rank: 845
score: 98.8021240234375
patch: return ( ( double ) x ) ;
rank: 846
score: 99.13551161024306
patch: return 0 * exp ( 0 ) ;
rank: 846
score: 99.07041237571023
patch: return 0 . $NUMBER$ && exp ( x ) ;
rank: 846
score: 99.013330078125
patch: return ( new double [ $NUMBER$ ] ) ;
rank: 846
score: 98.920751953125
patch: return - 0 . 0 ; } else {
rank: 846
score: 98.80177137586806
patch: if ( x <= 0 ) break ;
rank: 847
score: 99.07017933238636
patch: return $NUMBER$ * exp ( 0 . $NUMBER$ ) ;
rank: 847
score: 99.03117231889205
patch: return 0 . $NUMBER$ * - - - x ;
rank: 847
score: 98.91884765625
patch: return ( - - 0 . $NUMBER$ ) ;
rank: 847
score: 98.80150010850694
patch: if ( x == 0 ) break ;
rank: 848
score: 99.13209228515625
patch: return 0 . $NUMBER$ / exp ( ) ;
rank: 848
score: 99.12291370738636
patch: return - 0 . $NUMBER$ + 0 . $NUMBER$ ;
rank: 848
score: 98.91714816623264
patch: return - 0 . 0 - 0 ;
rank: 848
score: 98.88671196831598
patch: return 0 . exp ( x ) ;
rank: 849
score: 99.13054865056819
patch: return 0 * exp ( - x ) * /
rank: 849
score: 99.06669477982955
patch: return 0 . $NUMBER$ ? exp ( x ) ;
rank: 849
score: 99.029296875
patch: return - exp ( - 0 . $NUMBER$ ) ;
rank: 849
score: 99.01177368164062
patch: return - exp ( x - x ) ;
rank: 849
score: 98.91984252929687
patch: return Math . exp ( - x ) ;
rank: 849
score: 98.88435194227431
patch: return - ( x == 0 ) ;
rank: 849
score: 98.79844835069444
patch: / / exp ( - x ) ;
rank: 850
score: 99.12188165838069
patch: return $NUMBER$ 0 * exp ( - x ) ;
rank: 850
score: 99.06648393110795
patch: return 0 * exp ( - x 1 ) ;
rank: 850
score: 99.02110595703125
patch: return $NUMBER$ * exp ( - x ) .
rank: 850
score: 99.0087646484375
patch: return 0 - exp ( - $NUMBER$ ) ;
rank: 850
score: 98.91976318359374
patch: return ( x == 0 ) + x ;
rank: 850
score: 98.91316528320313
patch: return - ( - 0 . 0 ) ;
rank: 850
score: 98.883544921875
patch: result = exp ( x ) ;
rank: 850
score: 98.79842122395833
patch: return new double [ x ] ; }
rank: 851
score: 99.0647305575284
patch: return 1 * exp ( - x ) ) ;
rank: 851
score: 99.01866455078125
patch: return - - exp ( - x ) ;
rank: 851
score: 99.00261840820312
patch: return ( x - x - x ) ;
rank: 851
score: 98.91304931640624
patch: double CaMeL Value ( x , x ) ;
rank: 851
score: 98.88346354166667
patch: x = x + 0 . $NUMBER$ ;
rank: 851
score: 98.79732840401786
patch: if ( x == 0 )
rank: 852
score: 99.12982732599431
patch: return 0 . 0 * exp ( 1 ) ;
rank: 852
score: 98.917578125
patch: return - $NUMBER$ / exp ( x ) ;
rank: 852
score: 98.9107421875
patch: return - 0 . 0 + - x ;
rank: 852
score: 98.88206651475694
patch: exp ( - x - x ) ;
rank: 852
score: 98.79638671875
patch: exp ( x ) ; } else {
rank: 853
score: 99.12788529829545
patch: return - 1 . $NUMBER$ * exp ( x ;
rank: 853
score: 99.06215598366477
patch: return 0 . 0 | exp ( x ) ;
rank: 853
score: 99.0144287109375
patch: return - 0 . exp ( x ) ;
rank: 853
score: 98.91036648220486
patch: / * return - 0 . $NUMBER$ ;
rank: 853
score: 98.88011338975694
patch: return 0 . $NUMBER$ + - x ;
rank: 853
score: 98.79580688476562
patch: if ( x < $NUMBER$ ) {
rank: 854
score: 99.12612082741477
patch: return 0 . 0 * exp ( - 1 ;
rank: 854
score: 99.0601806640625
patch: return 0 + exp ( - x ) ) ;
rank: 854
score: 99.01991965553977
patch: return 0 . $NUMBER$ * - ( x ) ;
rank: 854
score: 99.01348876953125
patch: return false * exp ( - x ) ;
rank: 854
score: 98.87832980685764
patch: return - ( x < $NUMBER$ ) ;
rank: 854
score: 98.79435899522569
patch: return - exp ( x ) ; }
rank: 855
score: 99.01991965553977
patch: return exp ( exp ( - $NUMBER$ ) ) ;
rank: 855
score: 98.91303100585938
patch: return ( x < 0 ) + x ;
rank: 855
score: 98.9087158203125
patch: double 0 / exp ( - x ) ;
rank: 855
score: 98.79359266493056
patch: x = new double [ x ] ;
rank: 856
score: 99.1231356534091
patch: return Integer . parse CaMeL Int ( x ) ;
rank: 856
score: 99.0582275390625
patch: return - 0 == exp ( - x ) ;
rank: 856
score: 99.01619096235795
patch: return - $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 856
score: 99.01201782226562
patch: return 0 . null ( - x ) ;
rank: 856
score: 98.99785698784723
patch: return - new double [ $NUMBER$ ] ;
rank: 856
score: 98.90991821289063
patch: return 0 >= exp ( - x ) ;
rank: 857
score: 99.007275390625
patch: return 0 . $NUMBER$ * exp - $NUMBER$ ;
rank: 857
score: 98.99560546875
patch: return - 0 . 0 + x ;
rank: 858
score: 99.01338334517045
patch: return x - 0 . $NUMBER$ ; } else {
rank: 858
score: 99.00590209960937
patch: return - 0 . $NUMBER$ * exp x ;
rank: 858
score: 98.99517211914062
patch: return ( x - 1 . 0 ) ;
rank: 858
score: 98.90921630859376
patch: return 0 sinh ( x , x ) ;
rank: 858
score: 98.90638427734375
patch: return 0 . - ( - x ) ;
rank: 858
score: 98.87234836154514
patch: return - ( x == $NUMBER$ ) ;
rank: 859
score: 98.99459228515624
patch: return - - ( x - x ) ;
rank: 859
score: 98.9091796875
patch: return new double [ - x ] ;
rank: 859
score: 98.90574340820312
patch: throw new Runtime CaMeL Exception ( x ) ;
rank: 859
score: 98.8708724975586
patch: return * exp ( x ) ;
rank: 860
score: 99.00777587890624
patch: return ( exp ( - 0 ) ) ;
rank: 860
score: 98.99125366210937
patch: return exp ( - x ) - x ;
rank: 860
score: 98.8707504272461
patch: x += exp ( x ) ;
rank: 860
score: 98.78893171037946
patch: if ( x <= 0 )
rank: 861
score: 99.11359197443181
patch: return 0 * exp ( - 1 ) ; }
rank: 861
score: 99.05354447798295
patch: if ( 0 == x ) { return x ;
rank: 861
score: 99.00019666883681
patch: return - 0 . ( x ) ;
rank: 861
score: 98.98916015625
patch: return ( x - $NUMBER$ ) - x ;
rank: 861
score: 98.90048556857639
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 861
score: 98.87056477864583
patch: return - 0 . $NUMBER$ * false ;
rank: 862
score: 99.1126953125
patch: return 0 / exp ( - 1 ) ;
rank: 862
score: 99.05237926136364
patch: return x * exp ( - x ) ) ;
rank: 862
score: 99.00685813210227
patch: return - ( exp ( - 1 ) ) ;
rank: 862
score: 98.99461059570312
patch: return - $NUMBER$ . $NUMBER$ * - x ;
rank: 862
score: 98.89937046595982
patch: return - 0 . 0 ;
rank: 863
score: 99.0498379794034
patch: } return x * exp ( - x ) ;
rank: 863
score: 99.00676935369319
patch: return 0 . $NUMBER$ / ( - $NUMBER$ ) ;
rank: 863
score: 98.99354248046875
patch: return 0 . get ( - x ) ;
rank: 863
score: 98.98453979492187
patch: return ( x - 1 . $NUMBER$ ) ;
rank: 863
score: 98.89180501302083
patch: double CaMeL Value ( ) ; * /
rank: 863
score: 98.86929757254464
patch: return - x + x ;
rank: 864
score: 99.00649192116477
patch: return double $NUMBER$ * exp ( - x ) ;
rank: 864
score: 98.99313354492188
patch: return - 0 . $NUMBER$ * exp 0 ;
rank: 864
score: 98.98306613498264
patch: return 1 + exp ( x ) ;
rank: 864
score: 98.90625
patch: return exp ( x , $NUMBER$ ) ;
rank: 864
score: 98.88755967881944
patch: return - x ( - x ) ;
rank: 864
score: 98.86829376220703
patch: x = - x - x ;
rank: 865
score: 99.10804332386364
patch: return 0 * 0 * exp ( x ) ;
rank: 865
score: 98.98929850260417
patch: return - $NUMBER$ . $NUMBER$ * x ;
rank: 865
score: 98.88471984863281
patch: return - - 0 . $NUMBER$ ;
rank: 865
score: 98.78558349609375
patch: temp = exp ( x ) ;
rank: 866
score: 99.10547984730114
patch: return - 0 . 0 / exp ( ) ;
rank: 866
score: 99.04816228693181
patch: return 0 . $NUMBER$ + exp ( x ) .
rank: 866
score: 99.00418090820312
patch: return $NUMBER$ / exp ( - $NUMBER$ ) ;
rank: 866
score: 98.98611789279514
patch: return $NUMBER$ exp ( - x ) ;
rank: 866
score: 98.87790256076389
patch: * / exp ( - x ) ;
rank: 866
score: 98.86349826388889
patch: return - 0 . $NUMBER$ * true ;
rank: 866
score: 98.78150770399306
patch: temp = new double [ x ] ;
rank: 867
score: 99.10367584228516
patch: return 0 * exp ( ) ;
rank: 867
score: 98.98452758789062
patch: return $NUMBER$ . $NUMBER$ * ( x ) ;
rank: 867
score: 98.98050537109376
patch: return ( x - x + x ) ;
rank: 867
score: 98.877685546875
patch: return - - - 1 . $NUMBER$ ;
rank: 867
score: 98.86339653862848
patch: return x + ( - x ) ;
rank: 868
score: 99.00328480113636
patch: return 0 . $NUMBER$ * x ; } else {
rank: 868
score: 98.98319702148437
patch: return 0 . $NUMBER$ * - x ) ;
rank: 868
score: 98.978662109375
patch: return x - exp ( - $NUMBER$ ) ;
rank: 868
score: 98.86305067274306
patch: return 0 , exp ( x ) ;
rank: 868
score: 98.78070068359375
patch: result = new double [ $NUMBER$ ] ;
rank: 869
score: 99.10309392755681
patch: return 0 $NUMBER$ * exp ( - x ) ;
rank: 869
score: 99.0419921875
patch: return 0 . $NUMBER$ * exp ( $NUMBER$ ;
rank: 869
score: 99.00209738991477
patch: return 0 . $NUMBER$ + x ; } else {
rank: 869
score: 98.98216552734375
patch: return $NUMBER$ . $NUMBER$ exp ( x ) ;
rank: 869
score: 98.87687852647569
patch: / * exp ( - x ) ;
rank: 870
score: 99.04109497070313
patch: break $NUMBER$ * exp ( - x ) ;
rank: 870
score: 98.87492152622768
patch: return - 1 . $NUMBER$ ;
rank: 870
score: 98.86041259765625
patch: negate ( - x ) ;
rank: 871
score: 99.10084117542614
patch: return - $NUMBER$ * exp ( - 1 ) ;
rank: 871
score: 99.08012251420455
patch: return ( * exp ( - x ) ) ;
rank: 871
score: 99.0019864169034
patch: return new double [ 0 ] ; } else {
rank: 871
score: 98.97894897460938
patch: return super . exp ( - x ) ;
rank: 871
score: 98.97579345703124
patch: return - exp ( x - $NUMBER$ ) ;
rank: 871
score: 98.87872992621527
patch: return Math . exp ( x ) ;
rank: 871
score: 98.87014431423611
patch: return - ( - - x ) ;
rank: 871
score: 98.77469889322917
patch: return 1 - exp ( x ) ;
rank: 872
score: 99.00119850852273
patch: return - 0 . $NUMBER$ * x - x ;
rank: 872
score: 98.87826538085938
patch: += exp ( - x ) ;
rank: 872
score: 98.8699951171875
patch: return - - ( - x ) ;
rank: 873
score: 99.0946377840909
patch: return - 0 . 0 * exp ( 0 ;
rank: 873
score: 99.0009432705966
patch: return ( exp ( - $NUMBER$ ) ) ; }
rank: 873
score: 98.97465209960937
patch: return new double [ HEX _ $NUMBER$ ] ;
rank: 873
score: 98.87568664550781
patch: return ( x , x ) ;
rank: 873
score: 98.86848667689732
patch: double CaMeL Value ( ) ;
rank: 874
score: 99.0936612215909
patch: return 0 . $NUMBER$ * exp ( - 0 ;
rank: 874
score: 98.87474229600694
patch: return 0 . $NUMBER$ * x ) ;
rank: 874
score: 98.86534288194444
patch: return - 0 . $NUMBER$ - 0 ;
rank: 874
score: 98.76381429036458
patch: return - ( x + x ) ;
rank: 875
score: 99.09336547851562
patch: return 0 . $NUMBER$ * exp ( 0 ;
rank: 875
score: 99.00016645951705
patch: return exp ( x > 0 . 0 ) ;
rank: 875
score: 98.97404174804687
patch: return - 0 + exp ( x ) ;
rank: 875
score: 98.96893310546875
patch: return 1 / exp ( - $NUMBER$ ) ;
rank: 875
score: 98.87417263454861
patch: return max ( x , x ) ;
rank: 875
score: 98.86163330078125
patch: return 0 . 0 * - x ;
rank: 875
score: 98.84990583147321
patch: return - x - x ;
rank: 875
score: 98.76315646701389
patch: return - 0 . 0 * exp ;
rank: 876
score: 99.09092203776042
patch: return 0 * exp ( $NUMBER$ ) ;
rank: 876
score: 99.07274280894886
patch: return x 0 * exp ( - x ) ;
rank: 876
score: 98.97216796875
patch: return $NUMBER$ * exp exp ( x ) ;
rank: 876
score: 98.85711669921875
patch: double CaMeL Value ( ) - x ;
rank: 876
score: 98.84585910373264
patch: return - x - $NUMBER$ . $NUMBER$ ;
rank: 876
score: 98.76312934027777
patch: return - x ; negate = true ;
rank: 877
score: 99.09023215553977
patch: return 0 ; } else { return - 1 ;
rank: 877
score: 99.02439575195312
patch: return $NUMBER$ + exp ( x ) ) ;
rank: 877
score: 98.9983797940341
patch: return ( x < 0 ) ; } else {
rank: 877
score: 98.97056884765625
patch: return 0 . 0 * exp - x ;
rank: 877
score: 98.96570502387152
patch: return ( x - x ) ; }
rank: 877
score: 98.85490587022569
patch: return - - - 0 . 0 ;
rank: 877
score: 98.84382629394531
patch: negate ( x , x ) ;
rank: 877
score: 98.76234944661458
patch: if ( x >= 0 ) break ;
rank: 878
score: 98.99803331163194
patch: return - exp ( - $NUMBER$ ) ;
rank: 878
score: 98.9703125
patch: return - 0 . 0 * - x ;
rank: 878
score: 98.96251220703125
patch: return x * new double [ $NUMBER$ ] ;
rank: 878
score: 98.75665283203125
patch: return - x - 1 . $NUMBER$ ;
rank: 879
score: 99.08697509765625
patch: return 1 . $NUMBER$ * exp ( ) ;
rank: 879
score: 99.06849975585938
patch: return 0 + exp ( - 1 ) ;
rank: 879
score: 98.99802468039773
patch: return double 1 * exp ( - x ) ;
rank: 879
score: 98.97021484375
patch: return $NUMBER$ . ( - x ) ;
rank: 879
score: 98.86897108289931
patch: return Math . sinh ( x ) ;
rank: 879
score: 98.85222710503473
patch: double CaMeL Value ( ) ; break ;
rank: 879
score: 98.75495910644531
patch: return - negate ( x ) ;
rank: 880
score: 99.08635919744319
patch: return 0 * $NUMBER$ * exp ( x ) ;
rank: 880
score: 98.9978915127841
patch: return $NUMBER$ * exp ( x > 0 ) ;
rank: 880
score: 98.95897827148437
patch: return exp ( x , - $NUMBER$ ) ;
rank: 880
score: 98.8509521484375
patch: return 0 . 0 + - x ;
rank: 880
score: 98.84251573350694
patch: return - 0 . $NUMBER$ - x ;
rank: 881
score: 99.0859707919034
patch: return 0 * * exp ( - x ) ;
rank: 881
score: 98.99786931818181
patch: return 0 . - exp ( - $NUMBER$ ) ;
rank: 881
score: 98.96784057617188
patch: return 0 . $NUMBER$ * x * x ;
rank: 881
score: 98.75343831380208
patch: return new double [ - 0 ] ;
rank: 882
score: 99.01718478732639
patch: break 0 * exp ( x ) ;
rank: 882
score: 98.96716986762152
patch: return exp ( - x ) ) ;
rank: 882
score: 98.86589898003473
patch: return 0 >= exp ( x ) ;
rank: 883
score: 99.08427290482955
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 883
score: 98.9973876953125
patch: return 1 * exp ( - $NUMBER$ ) ;
rank: 883
score: 98.96630859375
patch: int x = exp ( - x ) ;
rank: 883
score: 98.95577663845486
patch: return exp ( x ) - x ;
rank: 883
score: 98.84291585286458
patch: return 0 . $NUMBER$ * exp $NUMBER$ ;
rank: 883
score: 98.83854844835069
patch: return 0 *= exp ( x ) ;
rank: 883
score: 98.75135149274554
patch: return - ( x ) ;
rank: 884
score: 99.08415083451705
patch: return - $NUMBER$ . $NUMBER$ * exp ( ) ;
rank: 884
score: 99.05156860351562
patch: return 0 * exp ( * x ) ;
rank: 884
score: 98.83773464626736
patch: return x + negate ( x ) ;
rank: 884
score: 98.83710394965277
patch: return - - 0 . - 0 ;
rank: 884
score: 98.75116838727679
patch: if ( x >= 0 )
rank: 885
score: 98.99329223632813
patch: return ( - $NUMBER$ ) ; } else {
rank: 885
score: 98.83718872070312
patch: x = - x + x ;
rank: 885
score: 98.83669026692708
patch: return - ( x / $NUMBER$ ) ;
rank: 885
score: 98.7493896484375
patch: if ( x <= $NUMBER$ ) {
rank: 886
score: 99.07245427911931
patch: return - 0 * exp ( - $NUMBER$ ) ;
rank: 886
score: 98.9587646484375
patch: return - exp ( - - x ) ;
rank: 886
score: 98.86132134331598
patch: return $STRING$ * exp ( x ) ;
rank: 886
score: 98.83439805772569
patch: return - ( x * x ) ;
rank: 886
score: 98.83394368489583
patch: return - x . negate ( ) ;
rank: 887
score: 99.03679809570312
patch: return 0 * min ( - x ) ;
rank: 887
score: 98.9855712890625
patch: double 0 * exp ( - $NUMBER$ ) ;
rank: 887
score: 98.95715942382813
patch: return - 1 . $NUMBER$ * - x ;
rank: 887
score: 98.86128743489583
patch: return min ( x , x ) ;
rank: 887
score: 98.74453299386161
patch: return 0 [ $NUMBER$ ] ;
rank: 888
score: 98.95640733506944
patch: return ( - x ) - x ;
rank: 888
score: 98.93877301897321
patch: return ( - $NUMBER$ ) ;
rank: 888
score: 98.82994927300348
patch: return - x + x + x ;
rank: 888
score: 98.74247741699219
patch: exp ( x - x ) ;
rank: 889
score: 98.95526123046875
patch: return this . exp ( - x ) ;
rank: 889
score: 98.93622504340277
patch: return sinh * exp ( x ) ;
rank: 889
score: 98.74139404296875
patch: if ( x == $NUMBER$ ) {
rank: 890
score: 99.06926935369319
patch: return - . $NUMBER$ * exp ( x ) ;
rank: 890
score: 98.95430297851563
patch: return 0 . $NUMBER$ * - - x ;
rank: 890
score: 98.82752143012152
patch: return - 0 . $NUMBER$ / x ;
rank: 891
score: 99.06733842329545
patch: return 0 . $NUMBER$ * exp ( ) ) ;
rank: 891
score: 98.93275282118056
patch: return ( x - $NUMBER$ ) ; }
rank: 891
score: 98.83817545572917
patch: return 0 . min ( x ) ;
rank: 891
score: 98.82779947916667
patch: return - 1 . 0 - 0 ;
rank: 891
score: 98.82645670572917
patch: x = 0 . 0 * x ;
rank: 892
score: 99.06572808159723
patch: return 0 * exp ( - x ;
rank: 892
score: 98.93038601345486
patch: return new double [ 1 ] ; }
rank: 892
score: 98.83502197265625
patch: return exp ( x + x ) ;
rank: 892
score: 98.82489013671875
patch: return - x + 0 . 0 ;
rank: 892
score: 98.7281494140625
patch: return new long [ $NUMBER$ ] ;
rank: 893
score: 99.06458629261364
patch: return Double . parse CaMeL Double ( x ) ;
rank: 893
score: 98.96853976779514
patch: return ( x ) ; } else {
rank: 893
score: 98.82526312934027
patch: return - 1 . 0 * x ;
rank: 893
score: 98.82254367404514
patch: return - ( x > 0 ) ;
rank: 894
score: 99.06398703835227
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 894
score: 99.0146484375
patch: throw new Runtime CaMeL Exception ( 0 ) ;
rank: 894
score: 98.9947265625
patch: return $NUMBER$ = exp ( - x ) ;
rank: 894
score: 98.9449462890625
patch: return $NUMBER$ . abs ( - x ) ;
rank: 894
score: 98.82148573133681
patch: return - ( x < 0 ) ;
rank: 894
score: 98.81947544642857
patch: double ( - x ) ;
rank: 894
score: 98.72492327008929
patch: if ( x > $NUMBER$ )
rank: 895
score: 99.06304376775569
patch: return - 1 * exp ( - 0 ) ;
rank: 895
score: 98.92159016927083
patch: return new double [ - $NUMBER$ ] ;
rank: 895
score: 98.82078721788194
patch: x = x - 0 . $NUMBER$ ;
rank: 895
score: 98.81903076171875
patch: * exp ( - x ) ;
rank: 895
score: 98.72433907645089
patch: if ( x < $NUMBER$ )
rank: 896
score: 99.01138916015626
patch: return 0 * exp ( - start ) ;
rank: 896
score: 98.96491088867188
patch: double $NUMBER$ * exp ( - $NUMBER$ ) ;
rank: 896
score: 98.82023111979167
patch: return - 0 . 1 * x ;
rank: 896
score: 98.72206115722656
patch: negate ( x , 0 ) ;
rank: 897
score: 99.053662109375
patch: return 0 * exp ( / x ) ;
rank: 897
score: 98.94340209960937
patch: return 0 . ( - - x ) ;
rank: 897
score: 98.81694200303819
patch: double - exp ( - x ) ;
rank: 898
score: 99.0534912109375
patch: return - 0 . $NUMBER$ * exp ( ;
rank: 898
score: 98.95775146484375
patch: return exp ( - ( x ) ) ;
rank: 898
score: 98.94254150390626
patch: return - 0 . $NUMBER$ * - $NUMBER$ ;
rank: 898
score: 98.8192138671875
patch: x = - ( - x ) ;
rank: 898
score: 98.8153076171875
patch: return - - 0 . $NUMBER$ ; ;
rank: 898
score: 98.71512603759766
patch: return new float [ $NUMBER$ ] ;
rank: 899
score: 99.0519775390625
patch: return 1 * exp ( - 1 ) ;
rank: 899
score: 99.00913492838542
patch: return 0 exp ( - x ) ;
rank: 899
score: 98.95709838867188
patch: return - ( x ) ; } else {
rank: 899
score: 98.94185384114583
patch: return 0 . $NUMBER$ * exp x ;
rank: 899
score: 98.82893880208333
patch: return sinh ( x , x ) ;
rank: 899
score: 98.8173828125
patch: negate ( - x - $NUMBER$ ) ;
rank: 899
score: 98.71256256103516
patch: return ( x - 1 ) ;
rank: 900
score: 99.00551147460938
patch: return 0 0 * exp ( x ) ;
rank: 900
score: 98.82516140407986
patch: return 0 += exp ( x ) ;
rank: 900
score: 98.81582980685764
patch: return ( x == - x ) ;
rank: 900
score: 98.8110580444336
patch: return ( - - x ) ;
rank: 901
score: 99.0053466796875
patch: return 0 * exp ( 0 . $NUMBER$ ;
rank: 901
score: 98.98753662109375
patch: return 0 * x ( - x ) ;
rank: 901
score: 98.90456814236111
patch: return ( x - - x ) ;
rank: 901
score: 98.81273057725694
patch: return - 0 . $NUMBER$ * 1 ;
rank: 901
score: 98.80875396728516
patch: throw new Error ( $STRING$ ) ;
rank: 901
score: 98.70980834960938
patch: return - 0 [ $NUMBER$ ] ;
rank: 902
score: 98.94116821289063
patch: return $NUMBER$ . $NUMBER$ * x * x ;
rank: 902
score: 98.80575222439236
patch: super . exp ( - x ) ;
rank: 902
score: 98.69844818115234
patch: if ( x >= $NUMBER$ ) {
rank: 903
score: 98.93712158203125
patch: return Double . exp ( - x ) ;
rank: 903
score: 98.88960774739583
patch: return - new double [ 0 ] ;
rank: 903
score: 98.81140814887152
patch: return exp ( x ) + x ;
rank: 903
score: 98.79921468098958
patch: return - 1 ( - x ) ;
rank: 903
score: 98.697998046875
patch: exp ( x - $NUMBER$ ) ;
rank: 904
score: 98.9481689453125
patch: return $NUMBER$ * new double [ $NUMBER$ ] ;
rank: 904
score: 98.93539428710938
patch: return - 0 . $NUMBER$ * exp ) ;
rank: 904
score: 98.79719373914931
patch: = ( - x ) - x ;
rank: 905
score: 98.98294677734376
patch: return 0 . 0 + exp ( ) ;
rank: 905
score: 98.94033813476562
patch: return $NUMBER$ - exp ( - $NUMBER$ ) ;
rank: 905
score: 98.9326171875
patch: return - * exp ( - x ) ;
rank: 905
score: 98.88880072699652
patch: return ( - $NUMBER$ . $NUMBER$ ) ;
rank: 905
score: 98.79581124441964
patch: set ( - x ) ;
rank: 905
score: 98.68793487548828
patch: return ( - x ) ; }
rank: 906
score: 98.98199462890625
patch: return 0 . $NUMBER$ + exp - x ;
rank: 906
score: 98.93241577148437
patch: return ( 0 . $NUMBER$ - x ) ;
rank: 906
score: 98.88843451605902
patch: return 0 . 0 [ $NUMBER$ ] ;
rank: 906
score: 98.81125217013889
patch: return 0 . 0 ( x ) ;
rank: 906
score: 98.7943115234375
patch: compare CaMeL To ( - x ) ;
rank: 906
score: 98.68223353794643
patch: return - x ; } }
rank: 907
score: 98.81048583984375
patch: return new ( x , x ) ;
rank: 907
score: 98.80132378472223
patch: x = x + 0 . 0 ;
rank: 907
score: 98.79061550564236
patch: return - 0 . $NUMBER$ * break ;
rank: 908
score: 98.99747924804687
patch: return $NUMBER$ * exp ( - 0 ) ;
rank: 908
score: 98.97794189453126
patch: try { return exp ( - x ) ;
rank: 908
score: 98.93073866102431
patch: return $NUMBER$ * exp ( x ) .
rank: 908
score: 98.87966579861111
patch: return ( - 1 . 0 ) ;
rank: 908
score: 98.80926513671875
patch: return 0 > exp ( x ) ;
rank: 908
score: 98.79981146918402
patch: return - x + x - $NUMBER$ ;
rank: 908
score: 98.79060872395833
patch: return 0 . 0 - - x ;
rank: 908
score: 98.67924281529018
patch: return - x - $NUMBER$ ;
rank: 909
score: 98.87882486979167
patch: return - 0 . 0 / $NUMBER$ ;
rank: 909
score: 98.798583984375
patch: return x + x + x ;
rank: 909
score: 98.78856743706598
patch: 0 * exp ( - x ) ;
rank: 909
score: 98.67731584821429
patch: exp ( x ) ; }
rank: 910
score: 99.0247314453125
patch: return 0 . 0 * exp ( 0 ;
rank: 910
score: 98.930078125
patch: return new double [ ] { x } ;
rank: 910
score: 98.87599690755208
patch: { return new double [ $NUMBER$ ] ;
rank: 910
score: 98.80419921875
patch: return ( x , - x ) ;
rank: 910
score: 98.79137420654297
patch: return ( x >= $NUMBER$ ) ;
rank: 910
score: 98.78831481933594
patch: double exp ( - x ) ;
rank: 910
score: 98.67539978027344
patch: return - 0 [ 0 ] ;
rank: 911
score: 98.99062771267361
patch: return - 0 . size ( ) ;
rank: 911
score: 98.87544080946181
patch: return 0 . 0 + x ) ;
rank: 911
score: 98.78773328993056
patch: set ( x , - x ) ;
rank: 911
score: 98.7840805053711
patch: return negate ( - x ) ;
rank: 911
score: 98.67174530029297
patch: if ( x != 0 ) {
rank: 912
score: 99.02057495117188
patch: return 0 . 0 / exp ( ) ;
rank: 912
score: 98.972021484375
patch: return 0 . $NUMBER$ - exp ( ) ;
rank: 912
score: 98.9263916015625
patch: return x * exp ( - 1 ) ;
rank: 912
score: 98.67171478271484
patch: return 0 . $NUMBER$ * x ;
rank: 913
score: 98.9718505859375
patch: return 0 * exp ( x ) ; ;
rank: 913
score: 98.87198893229167
patch: return exp ( - $NUMBER$ ) ; }
rank: 913
score: 98.78525797526042
patch: return - 1 . $NUMBER$ - 0 ;
rank: 913
score: 98.66561126708984
patch: / / exp ( x ) ;
rank: 914
score: 98.892822265625
patch: return $NUMBER$ * exp ( $NUMBER$ ) ;
rank: 914
score: 98.78268093532986
patch: return 0 . $NUMBER$ , - x ;
rank: 914
score: 98.78018188476562
patch: return new int [ 0 ] ;
rank: 914
score: 98.662353515625
patch: if ( x <= $NUMBER$ )
rank: 915
score: 98.87105305989583
patch: return ( - $NUMBER$ . 0 ) ;
rank: 915
score: 98.78000895182292
patch: return 0 . $NUMBER$ ;
rank: 915
score: 98.77783203125
patch: int CaMeL Value ( - x ) ;
rank: 915
score: 98.6532974243164
patch: return ( x <= $NUMBER$ ) ;
rank: 916
score: 99.00934448242188
patch: return - 1 * exp ( $NUMBER$ ) ;
rank: 916
score: 98.96732788085937
patch: return ) * exp ( - x ) ;
rank: 916
score: 98.90913696289063
patch: double 1 * exp ( - x ) ;
rank: 916
score: 98.78076934814453
patch: yb ( x , x ) ;
rank: 916
score: 98.77134704589844
patch: return x ( - x ) ;
rank: 916
score: 98.77117919921875
patch: return double ( - x ) ;
rank: 916
score: 98.65056610107422
patch: return ( x <= 0 ) ;
rank: 917
score: 99.0092529296875
patch: return 0 * max ( - x ) ;
rank: 917
score: 98.88214789496527
patch: return 0 . $NUMBER$ * exp 0 ;
rank: 917
score: 98.77516174316406
patch: return new Integer ( x ) ;
rank: 917
score: 98.76878356933594
patch: return 0 ( - x ) ;
rank: 917
score: 98.7641830444336
patch: return ( x < x ) ;
rank: 917
score: 98.64901733398438
patch: return - x - x ; }
rank: 918
score: 98.98338012695312
patch: result ( exp ( - x ) ) ;
rank: 918
score: 98.87828233506944
patch: return ( x - x ) ) ;
rank: 918
score: 98.86255560980902
patch: return ( - 1 . $NUMBER$ ) ;
rank: 918
score: 98.7728271484375
patch: return exp ( x , ) ;
rank: 918
score: 98.7680435180664
patch: return - 0 . $NUMBER$ ) ;
rank: 918
score: 98.76209259033203
patch: return sinh ( - x ) ;
rank: 919
score: 99.0027099609375
patch: return 0 ; } else { return 0 ;
rank: 919
score: 98.98328247070313
patch: return 0 += exp ( - x ) ;
rank: 919
score: 98.86088053385417
patch: return - x * HEX _ $NUMBER$ ;
rank: 919
score: 98.77230834960938
patch: return 0 double ( x ) ;
rank: 919
score: 98.76659393310547
patch: = exp ( - x ) ;
rank: 920
score: 98.98145887586806
patch: return 0 . $NUMBER$ * exp ( ;
rank: 920
score: 98.87468804253473
patch: return - - exp ( x ) ;
rank: 920
score: 98.85833062065973
patch: return x * HEX _ $NUMBER$ ; }
rank: 920
score: 98.77051653180804
patch: += exp ( x ) ;
rank: 920
score: 98.76018415178571
patch: return 0 + - x ;
rank: 921
score: 98.93780517578125
patch: return $NUMBER$ * exp ( ) ;
rank: 921
score: 98.90216064453125
patch: return 0 . $NUMBER$ + 0 . $NUMBER$ ;
rank: 921
score: 98.85602484809027
patch: return - $NUMBER$ * HEX _ $NUMBER$ ;
rank: 921
score: 98.76490129743304
patch: update ( - x ) ;
rank: 921
score: 98.75675201416016
patch: return - x + - x ;
rank: 921
score: 98.64168003627232
patch: return 0 [ 0 ] ;
rank: 922
score: 98.97980414496527
patch: return - 0 . $NUMBER$ : $NUMBER$ ;
rank: 922
score: 98.93523406982422
patch: } return exp ( x ) ;
rank: 922
score: 98.76075962611607
patch: r ( - x ) ;
rank: 922
score: 98.7564468383789
patch: return ( x > x ) ;
rank: 922
score: 98.63773345947266
patch: return - 0 ; } else {
rank: 923
score: 98.93077256944444
patch: return 0 . $NUMBER$ ; * * *
rank: 923
score: 98.90007866753473
patch: return exp ( x > 0 ) ;
rank: 923
score: 98.86655680338542
patch: return ( 0 . - x ) ;
rank: 923
score: 98.84836154513889
patch: return - - 0 . $NUMBER$ ; }
rank: 923
score: 98.76094055175781
patch: return max ( - x ) ;
rank: 923
score: 98.6357421875
patch: return new int [ x ] ;
rank: 924
score: 98.97894287109375
patch: return 0 . min ( - x ) ;
rank: 924
score: 98.93065728081598
patch: return 0 = exp ( x ) ;
rank: 924
score: 98.89723714192708
patch: double 0 * exp ( x ) ;
rank: 924
score: 98.86564805772569
patch: return - 0 . $NUMBER$ ; ) ;
rank: 924
score: 98.75995635986328
patch: break ( x , x ) ;
rank: 924
score: 98.75494384765625
patch: return ( x >= 0 ) ;
rank: 924
score: 98.63569641113281
patch: return 0 [ $NUMBER$ ] ; }
rank: 925
score: 98.9866455078125
patch: return 1 . 0 * exp ( ) ;
rank: 925
score: 98.92856852213542
patch: } else { return 0 . $NUMBER$ ;
rank: 925
score: 98.86383734809027
patch: return - x ; return - x ;
rank: 925
score: 98.7540512084961
patch: x = - x - $NUMBER$ ;
rank: 925
score: 98.74052211216518
patch: return - 1 . 0 ;
rank: 926
score: 98.97782592773437
patch: return 0 * exp - 0 . $NUMBER$ ;
rank: 926
score: 98.92523193359375
patch: return exp ( 0 . $NUMBER$ ) ;
rank: 926
score: 98.86322784423828
patch: return ( x * x ) ;
rank: 926
score: 98.75344412667411
patch: x = x - x ;
rank: 926
score: 98.74473571777344
patch: return min ( - x ) ;
rank: 926
score: 98.73612213134766
patch: double CaMeL Value ( x ) ;
rank: 926
score: 98.62995910644531
patch: return exp ( - 0 ) ;
rank: 927
score: 98.98097534179688
patch: return - 1 * exp ( 0 ) ;
rank: 927
score: 98.85981580946181
patch: return x . ( - x ) ;
rank: 927
score: 98.837158203125
patch: return x ; negate = true ;
rank: 927
score: 98.75270080566406
patch: return x + x - $NUMBER$ ;
rank: 928
score: 98.89267306857639
patch: return ( x > 0 ) ; }
rank: 928
score: 98.74710845947266
patch: return ( x == x ) ;
rank: 928
score: 98.72368621826172
patch: return - - 1 . $NUMBER$ ;
rank: 928
score: 98.62610735212054
patch: if ( x == $NUMBER$ )
rank: 929
score: 98.97072347005208
patch: return - 0 . length ( ) ;
rank: 929
score: 98.91501193576389
patch: return 0 . $NUMBER$ - - x ;
rank: 929
score: 98.84975179036458
patch: return 0 . $NUMBER$ * exp ) ;
rank: 929
score: 98.740966796875
patch: x = x + x ;
rank: 930
score: 98.84688313802083
patch: return $NUMBER$ . exp ( x ) ;
rank: 930
score: 98.70491027832031
patch: return 0 [ - 0 ] ;
rank: 930
score: 98.62451171875
patch: exp ( x - 1 ) ;
rank: 931
score: 98.87306043836806
patch: double $NUMBER$ * exp ( x ) ;
rank: 931
score: 98.62404087611607
patch: return true ; } else {
rank: 932
score: 98.9762939453125
patch: return 0 . $NUMBER$ * exp ( - ;
rank: 932
score: 98.90441216362848
patch: return 0 * exp ( x ) .
rank: 932
score: 98.84253607855902
patch: return exp ( - x ) ; ;
rank: 932
score: 98.82048797607422
patch: return ( x - 0 ) ;
rank: 932
score: 98.73190743582589
patch: return x + - x ;
rank: 932
score: 98.73155975341797
patch: return ( x + x ) ;
rank: 932
score: 98.70297677176339
patch: = ( - x ) ;
rank: 932
score: 98.62399727957589
patch: return - 0 - x ;
rank: 933
score: 98.97175903320313
patch: return - 0 . 0 * exp ( ;
rank: 933
score: 98.89877658420139
patch: return - 1 . $NUMBER$ + x ;
rank: 933
score: 98.84250217013889
patch: return - 0 . - x ) ;
rank: 933
score: 98.81233978271484
patch: return exp ( - 1 ) ;
rank: 933
score: 98.72513580322266
patch: x = - x ; break ;
rank: 933
score: 98.70104217529297
patch: return ( double ) - x ;
rank: 933
score: 98.61992536272321
patch: return - x - 1 ;
rank: 934
score: 98.96268039279514
patch: return 0 * exp ( 1 ) ;
rank: 934
score: 98.86082628038194
patch: return ( x > - $NUMBER$ ) ;
rank: 934
score: 98.80402483258929
patch: return - - - x ;
rank: 934
score: 98.726806640625
patch: return new double ( x ) ;
rank: 934
score: 98.61897495814732
patch: return 0 ; } else {
rank: 935
score: 98.72439575195312
patch: return 0 sinh ( x ) ;
rank: 935
score: 98.71541922433036
patch: sinh ( - x ) ;
rank: 935
score: 98.68617248535156
patch: return - - 0 . 0 ;
rank: 935
score: 98.61446707589286
patch: return double ( x ) ;
rank: 936
score: 98.96022338867188
patch: return 0 << exp ( - x ) ;
rank: 936
score: 98.83643934461806
patch: return ( - x ) * x ;
rank: 936
score: 98.71934509277344
patch: set ( x , x ) ;
rank: 936
score: 98.68362426757812
patch: return - 1 [ $NUMBER$ ] ;
rank: 936
score: 98.60950578962054
patch: hi ( - x ) ;
rank: 937
score: 98.77999114990234
patch: return - ( - $NUMBER$ ) ;
rank: 937
score: 98.71241760253906
patch: negate ( ) ; return x ;
rank: 937
score: 98.67668805803571
patch: double x = - x ;
rank: 937
score: 98.59844098772321
patch: if ( x >= $NUMBER$ )
rank: 938
score: 98.93973214285714
patch: result ( - x ) ;
rank: 938
score: 98.66844177246094
patch: return - - ( x ) ;
rank: 939
score: 98.94631618923611
patch: return 0 * exp ( - 1 ;
rank: 939
score: 98.69715118408203
patch: return x + x - x ;
rank: 939
score: 98.66603088378906
patch: return 0 [ - 1 ] ;
rank: 940
score: 98.93748643663194
patch: return - 1 * exp ( ) ;
rank: 940
score: 98.82021755642361
patch: System . exp ( - x ) ;
rank: 940
score: 98.66383870442708
patch: return 0 . 0 ;
rank: 940
score: 98.58719308035714
patch: return - - x ; }
rank: 941
score: 98.87556457519531
patch: return value ( - x ) ;
rank: 941
score: 98.81775665283203
patch: return ( - x ) ) ;
rank: 941
score: 98.7605209350586
patch: return 0 ; negate = true ;
rank: 941
score: 98.70474243164062
patch: return 0 ; } return x ;
rank: 941
score: 98.69390869140625
patch: x = ( - x ) ;
rank: 941
score: 98.66246795654297
patch: return ( x / $NUMBER$ ) ;
rank: 941
score: 98.58564104352679
patch: return x - x ; }
rank: 942
score: 98.87510172526042
patch: break $NUMBER$ * exp ( x ) ;
rank: 942
score: 98.84773763020833
patch: return - ( exp ( ) ) ;
rank: 942
score: 98.81598578559027
patch: return ( - x ) ; / /
rank: 942
score: 98.65399169921875
patch: exp ( - x ) ; ;
rank: 942
score: 98.58132498604911
patch: x = x - $NUMBER$ ;
rank: 943
score: 98.9140853881836
patch: return 0 * exp ( x ;
rank: 943
score: 98.90532769097223
patch: * * exp ( - x ) ;
rank: 943
score: 98.81355794270833
patch: return exp ( - x ) ; else
rank: 943
score: 98.69287872314453
patch: x = x + - x ;
rank: 943
score: 98.56733049665179
patch: return float ( x ) ;
rank: 944
score: 98.90190972222223
patch: return 0 * exp ( $STRING$ ) ;
rank: 944
score: 98.80972629123264
patch: return - ( x , x ) ;
rank: 944
score: 98.75303649902344
patch: return new ( - x ) ;
rank: 944
score: 98.69091033935547
patch: return new int [ 1 ] ;
rank: 944
score: 98.65181187220982
patch: f ( - x ) ;
rank: 944
score: 98.55538504464286
patch: return 0 . $NUMBER$ ; }
rank: 945
score: 98.89351109095982
patch: return 0 ; } * /
rank: 945
score: 98.80221557617188
patch: return ( exp - x ) ;
rank: 945
score: 98.6881103515625
patch: return new byte [ $NUMBER$ ] ;
rank: 945
score: 98.55254255022321
patch: x = - x ; }
rank: 946
score: 98.90035671657986
patch: return - 0 . length - $NUMBER$ ;
rank: 946
score: 98.83725314670139
patch: } if ( x == 0 ) {
rank: 946
score: 98.55251639229911
patch: return $NUMBER$ ; } else {
rank: 947
score: 98.86510552300348
patch: return 0 . $NUMBER$ * - $NUMBER$ ;
rank: 947
score: 98.6806869506836
patch: sinh ( x , x ) ;
rank: 947
score: 98.54697091238839
patch: x = x - 1 ;
rank: 948
score: 98.89431762695312
patch: return 0 exp ( x ) ;
rank: 948
score: 98.82158067491319
patch: return ( x < 0 ) ; }
rank: 948
score: 98.77720642089844
patch: return $NUMBER$ exp ( x ) ;
rank: 948
score: 98.68077850341797
patch: result ( x , x ) ;
rank: 948
score: 98.5468994140625
patch: return - x ;
rank: 949
score: 98.87937418619792
patch: return 0 . 0 * exp ( ;
rank: 949
score: 98.86397298177083
patch: exp ( x ) ; return x ;
rank: 949
score: 98.73982456752232
patch: return x - - x ;
rank: 949
score: 98.6805648803711
patch: return new boolean [ $NUMBER$ ] ;
rank: 949
score: 98.67215728759766
patch: result += exp ( x ) ;
rank: 950
score: 98.86256917317708
patch: return 0 . $NUMBER$ * return $NUMBER$ ;
rank: 950
score: 98.81626383463542
patch: return new double [ - 1 ] ;
rank: 950
score: 98.73360443115234
patch: += exp ( - $NUMBER$ ) ;
rank: 950
score: 98.63802664620536
patch: return - 0 . 1 ;
rank: 950
score: 98.54258510044643
patch: return 0 - x ; }
rank: 951
score: 98.86580403645833
patch: return 0 * - 0 . $NUMBER$ ;
rank: 951
score: 98.81340874565973
patch: } if ( x > 0 ) {
rank: 951
score: 98.75955200195312
patch: return exp ( - x ) .
rank: 951
score: 98.65110560825893
patch: return sinh ( x ) ;
rank: 951
score: 98.63690948486328
patch: = - ( - x ) ;
rank: 951
score: 98.54157366071429
patch: return 0 . 0 ; }
rank: 952
score: 98.73148345947266
patch: += ( x - x ) ;
rank: 952
score: 98.65003313337054
patch: break ( - x ) ;
rank: 952
score: 98.63086700439453
patch: return - 0 . - 0 ;
rank: 953
score: 98.85691324869792
patch: return 0 ; } return - x ;
rank: 953
score: 98.83844757080078
patch: return $NUMBER$ + exp ( ) ;
rank: 953
score: 98.80624050564236
patch: return exp ( - - $NUMBER$ ) ;
rank: 953
score: 98.7393798828125
patch: return - x * - x ;
rank: 953
score: 98.64259556361607
patch: ya ( - x ) ;
rank: 953
score: 98.62937927246094
patch: double - ( - x ) ;
rank: 953
score: 98.53229631696429
patch: exp ( - $NUMBER$ ) ;
rank: 954
score: 98.85437689887152
patch: return Math . abs ( x ) ;
rank: 954
score: 98.73126220703125
patch: return $NUMBER$ ( - x ) ;
rank: 954
score: 98.6651611328125
patch: return exp ( $NUMBER$ ) ;
rank: 954
score: 98.64170619419643
patch: return x = - x ;
rank: 954
score: 98.6258544921875
patch: cmp ( - x ) ;
rank: 955
score: 98.85391574435764
patch: return 0 / exp ( 0 ) ;
rank: 955
score: 98.80246310763889
patch: return - exp ( - 1 ) ;
rank: 955
score: 98.71314239501953
patch: return abs ( - x ) ;
rank: 955
score: 98.63751220703125
patch: return negate ( x ) ;
rank: 955
score: 98.61834716796875
patch: double - x = - x ;
rank: 955
score: 98.52887834821429
patch: exp ( - 0 ) ;
rank: 956
score: 98.84698486328125
patch: return - 0 . $NUMBER$ * double ;
rank: 956
score: 98.8046875
patch: throw ( $STRING$ + x ) ;
rank: 956
score: 98.80230034722223
patch: } if ( x < 0 ) {
rank: 956
score: 98.7113265991211
patch: return x * x * x ;
rank: 956
score: 98.60804966517857
patch: int x = - x ;
rank: 956
score: 98.52059500558036
patch: if ( x < 1 )
rank: 957
score: 98.80467224121094
patch: return 0 . $NUMBER$ + x ;
rank: 957
score: 98.7132568359375
patch: return x * - x ;
rank: 957
score: 98.71047973632812
patch: return ( return - x ) ;
rank: 957
score: 98.66014099121094
patch: temp ( x , x ) ;
rank: 957
score: 98.60389055524554
patch: return - $NUMBER$ . $NUMBER$ ;
rank: 957
score: 98.52006312779018
patch: if ( x != 0 )
rank: 958
score: 98.87364366319444
patch: return 0 . 0 * exp 0 ;
rank: 958
score: 98.7058334350586
patch: return ( - $NUMBER$ ) ; }
rank: 958
score: 98.59952218191964
patch: translate ( - x ) ;
rank: 958
score: 98.59862409319196
patch: return - x + $NUMBER$ ;
rank: 958
score: 98.51768275669643
patch: return exp ( true ) ;
rank: 959
score: 98.86983235677083
patch: return - 0 . length - 0 ;
rank: 959
score: 98.79474639892578
patch: return exp ( x ) ; ;
rank: 959
score: 98.70575714111328
patch: return x - x + x ;
rank: 959
score: 98.69489397321429
patch: return - x * x ;
rank: 959
score: 98.65739440917969
patch: return + exp ( x ) ;
rank: 959
score: 98.59529331752232
patch: return - 0 + x ;
rank: 959
score: 98.51739501953125
patch: exp ( x ) ;
rank: 960
score: 98.83368598090277
patch: return - 0 * exp ( ) ;
rank: 960
score: 98.79423304966518
patch: d ( - x ) ;
rank: 960
score: 98.59470040457589
patch: return new ( x ) ;
rank: 960
score: 98.5888671875
patch: add ( - x ) ;
rank: 960
score: 98.51687186104911
patch: / exp ( x ) ;
rank: 961
score: 98.83014594184027
patch: return $NUMBER$ * exp ( 0 ) ;
rank: 961
score: 98.79022894965277
patch: return exp ( x ) / $NUMBER$ ;
rank: 961
score: 98.78474426269531
patch: return exp ( x ) ) ;
rank: 961
score: 98.58285958426339
patch: return $NUMBER$ + - x ;
rank: 961
score: 98.58075823102679
patch: repaint ( - x ) ;
rank: 961
score: 98.5135498046875
patch: return - ( 0 ) ;
rank: 962
score: 98.82941351996527
patch: return 0 . $NUMBER$ ; } * /
rank: 962
score: 98.77381134033203
patch: return 0 . $NUMBER$ * 0 ;
rank: 962
score: 98.57847377232143
patch: return 0 - - x ;
rank: 962
score: 98.57833426339286
patch: long CaMeL Value ( ) ;
rank: 962
score: 98.51233782087054
patch: double sinh ( x ) ;
rank: 963
score: 98.82855987548828
patch: break exp ( - x ) ;
rank: 963
score: 98.80709838867188
patch: return Double . Na CaMeL N ;
rank: 963
score: 98.65928649902344
patch: return $NUMBER$ * exp - x ;
rank: 963
score: 98.57803780691964
patch: scale ( - x ) ;
rank: 963
score: 98.57666887555804
patch: return x == - x ;
rank: 964
score: 98.76929473876953
patch: exp ( x ) ; break ;
rank: 964
score: 98.65866088867188
patch: return - - x * x ;
rank: 964
score: 98.57484654017857
patch: return ( double ) x ;
rank: 965
score: 98.79853057861328
patch: return 0 ; } return 0 ;
rank: 965
score: 98.76895904541016
patch: return ( exp ( x ) ;
rank: 965
score: 98.74913787841797
patch: return - 0 . $NUMBER$ ; }
rank: 965
score: 98.65802764892578
patch: return - x ; return x ;
rank: 965
score: 98.56747872488839
patch: x = 0 - x ;
rank: 965
score: 98.498779296875
patch: double sinh = - x ;
rank: 966
score: 98.7575454711914
patch: return start ( - x ) ;
rank: 966
score: 98.65311104910714
patch: throw new Exception ( ) ;
rank: 966
score: 98.53342110770089
patch: validate ( - x ) ;
rank: 967
score: 98.78817749023438
patch: return - 1 ; } else {
rank: 967
score: 98.75401306152344
patch: throw exp ( - x ) ;
rank: 967
score: 98.73162841796875
patch: return ( 0 . $NUMBER$ ) ;
rank: 967
score: 98.64504568917411
patch: return $NUMBER$ * - x ;
rank: 967
score: 98.55726841517857
patch: return 0 [ x ] ;
rank: 967
score: 98.52579171316964
patch: and ( - x ) ;
rank: 967
score: 98.49347795758929
patch: return - x ; } else
rank: 968
score: 98.77066802978516
patch: return 0 * exp - $NUMBER$ ;
rank: 968
score: 98.73095703125
patch: return x - 0 . $NUMBER$ ;
rank: 968
score: 98.64311000279018
patch: return - - x ) ;
rank: 968
score: 98.64114815848214
patch: return - - - $NUMBER$ ;
rank: 968
score: 98.57433210100446
patch: return value ( x ) ;
rank: 968
score: 98.55193219866071
patch: yb ( - x ) ;
rank: 968
score: 98.51235525948661
patch: initialize ( - x ) ;
rank: 969
score: 98.7835464477539
patch: return 0 / exp ( ) ;
rank: 969
score: 98.62599400111607
patch: int ( - x ) ;
rank: 969
score: 98.54627336774554
patch: return - 0 == x ;
rank: 969
score: 98.50530133928571
patch: return - - - 1 ;
rank: 969
score: 98.48876081194196
patch: if ( x > 1 )
rank: 970
score: 98.76038360595703
patch: return 0 * exp - x ;
rank: 970
score: 98.62588936941964
patch: switch ( - x ) {
rank: 970
score: 98.54520089285714
patch: x = - - x ;
rank: 970
score: 98.50323486328125
patch: start ( - x ) ;
rank: 970
score: 98.48410470145089
patch: return ( - 0 ) ;
rank: 971
score: 98.75330352783203
patch: return 0 * exp ( 0 ;
rank: 971
score: 98.555419921875
patch: return max ( x ) ;
rank: 971
score: 98.49889264787946
patch: return 0 . - 0 ;
rank: 971
score: 98.48239571707589
patch: return false ; } else {
rank: 972
score: 98.75291442871094
patch: -- exp ( - x ) ;
rank: 972
score: 98.73348999023438
patch: return 0 + exp ( ) ;
rank: 972
score: 98.71515655517578
patch: return 1 * exp ( ) ;
rank: 972
score: 98.60044642857143
patch: long ( - x ) ;
rank: 972
score: 98.53452555338542
patch: x = - x ;
rank: 972
score: 98.47991071428571
patch: return abs ( x ) ;
rank: 973
score: 98.73054504394531
patch: throw new Exception ( $STRING$ ) ;
rank: 973
score: 98.60410853794643
patch: return new double [ x ]
rank: 973
score: 98.476806640625
patch: double exp ( x ) ;
rank: 974
score: 98.72565460205078
patch: return x * exp ( ) ;
rank: 974
score: 98.70349993024554
patch: return 0 * - x ;
rank: 974
score: 98.48692103794643
patch: return 0 . $NUMBER$ ) ;
rank: 974
score: 98.47168840680804
patch: return 0 [ 1 ] ;
rank: 975
score: 98.69676862444196
patch: return 0 * - 1 ;
rank: 975
score: 98.6932373046875
patch: return x - 0 . 0 ;
rank: 975
score: 98.57569231305804
patch: return - 0 . $NUMBER$ *
rank: 975
score: 98.52572195870536
patch: return x + - $NUMBER$ ;
rank: 975
score: 98.48447963169643
patch: push ( - x ) ;
rank: 976
score: 98.72615051269531
patch: *= exp ( - x ) ;
rank: 976
score: 98.5887451171875
patch: { x = - x ;
rank: 976
score: 98.48301478794643
patch: in ( - x ) ;
rank: 977
score: 98.67219761439732
patch: return 0 . $NUMBER$ ] ;
rank: 977
score: 98.58342633928571
patch: -- exp ( x ) ;
rank: 977
score: 98.54761614118304
patch: return - x ; / ;
rank: 977
score: 98.47685023716518
patch: divide ( - x ) ;
rank: 977
score: 98.40883382161458
patch: return - x ; }
rank: 978
score: 98.57880510602679
patch: return get ( x ) ;
rank: 978
score: 98.54690987723214
patch: return - 0 . ) ;
rank: 978
score: 98.53300258091518
patch: return int ( x ) ;
rank: 978
score: 98.46927315848214
patch: apply ( - x ) ;
rank: 978
score: 98.40386962890625
patch: return $NUMBER$ . $NUMBER$ ;
rank: 979
score: 98.53492082868304
patch: float ( - x ) ;
rank: 979
score: 98.51351492745536
patch: return - x ; break ;
rank: 979
score: 98.2773946126302
patch: return $NUMBER$ . 0 ;
rank: 980
score: 98.67646789550781
patch: return Double . MIN _ VALUE ;
rank: 980
score: 98.66351318359375
patch: return ( 0 . 0 ) ;
rank: 980
score: 98.531494140625
patch: return 0 ( x ) ;
rank: 980
score: 98.51138741629464
patch: return - x + 1 ;
rank: 980
score: 98.46616036551339
patch: or ( - x ) ;
rank: 980
score: 98.275146484375
patch: return 1 . $NUMBER$ ;
rank: 981
score: 98.67420305524554
patch: return 0 * exp 0 ;
rank: 981
score: 98.665283203125
patch: return - 0 ; } * /
rank: 981
score: 98.46593366350446
patch: clear ( - x ) ;
rank: 981
score: 98.42678833007812
patch: return 0 . 1 ;
rank: 981
score: 98.3764139811198
patch: return 0 . false ;
rank: 982
score: 98.65167236328125
patch: return 0 * - $NUMBER$ ;
rank: 982
score: 98.50962611607143
patch: return long ( x ) ;
rank: 982
score: 98.46126883370536
patch: = - 0 . $NUMBER$ ;
rank: 982
score: 98.4222920735677
patch: return - - x ;
rank: 983
score: 98.61223493303571
patch: } * * * * /
rank: 983
score: 98.60474650065105
patch: return ( x ) ;
rank: 983
score: 98.50356619698661
patch: return - 0 / x ;
rank: 983
score: 98.50307791573661
patch: return ( x ) ) ;
rank: 983
score: 98.46014404296875
patch: return - $NUMBER$ . 0 ;
rank: 983
score: 98.40553792317708
patch: return 1 . 0 ;
rank: 983
score: 98.32799275716145
patch: return x + x ;
rank: 983
score: 98.2363510131836
patch: return x ;
rank: 984
score: 98.62128557477679
patch: return 0 * exp ( ;
rank: 984
score: 98.60050746372768
patch: throw ( - x ) ;
rank: 984
score: 98.45622035435268
patch: return - 1 . 1 ;
rank: 984
score: 98.39658610026042
patch: return x - x ;
rank: 984
score: 98.31873575846355
patch: return 0 - x ;
rank: 984
score: 98.22263590494792
patch: negate ( x ) ;
rank: 985
score: 98.64026750837054
patch: max ( - x ) ;
rank: 985
score: 98.60050746372768
patch: * exp ( x ) ;
rank: 985
score: 98.54950714111328
patch: return 0 ;
rank: 985
score: 98.48501150948661
patch: abs ( - x ) ;
rank: 985
score: 98.48445347377232
patch: return x + x ) ;
rank: 985
score: 98.45161655970982
patch: double - x - x ;
rank: 985
score: 98.18734130859374
patch: return x ; }
rank: 986
score: 98.54071916852679
patch: return 0 ; } ) ;
rank: 986
score: 98.48305838448661
patch: return double [ $NUMBER$ ] ;
rank: 986
score: 98.47630092075893
patch: return - x ; ) ;
rank: 986
score: 98.04479370117187
patch: return - 0 ;
rank: 987
score: 98.53616768973214
patch: return ( - 1 ) ;
rank: 987
score: 98.4693603515625
patch: return - 0 . x ;
rank: 987
score: 98.02381591796875
patch: x = x ;
rank: 988
score: 98.61269705636161
patch: return 0 = - x ;
rank: 988
score: 98.56901332310268
patch: } else { return x ;
rank: 988
score: 98.48427036830357
patch: return - HEX _ $NUMBER$ ;
rank: 988
score: 98.29597981770833
patch: return 0 + x ;
rank: 988
score: 97.98405151367187
patch: return true ; }
rank: 989
score: 98.55703299386161
patch: value ( - x ) ;
rank: 989
score: 98.36428833007812
patch: return HEX _ $NUMBER$ ;
rank: 989
score: 97.97471313476562
patch: return 0 ; }
rank: 990
score: 98.60750034877232
patch: ret ( - x ) ;
rank: 990
score: 98.43355305989583
patch: return 0 . $NUMBER$ *
rank: 990
score: 98.32820434570313
patch: return - 1 ;
rank: 990
score: 97.9708251953125
patch: temp = true ;
rank: 991
score: 97.95493774414062
patch: negate ( ) ;
rank: 992
score: 97.91409912109376
patch: result = true ;
rank: 993
score: 98.2414042154948
patch: return $NUMBER$ . $NUMBER$ *
rank: 993
score: 98.16396484375
patch: return - $NUMBER$ ;
rank: 993
score: 97.91336822509766
patch: return true ;
rank: 994
score: 98.3385518391927
patch: return 0 . ) ;
rank: 994
score: 97.91290283203125
patch: return 0 ) ;
rank: 994
score: 97.91130981445312
patch: x = $NUMBER$ ;
rank: 994
score: 97.87184448242188
patch: = - x ;
rank: 995
score: 98.18668619791667
patch: return - x ) ;
rank: 995
score: 97.87930297851562
patch: return 0 ; ;
rank: 995
score: 97.78816223144531
patch: return $NUMBER$ ;
rank: 996
score: 97.53948211669922
patch: return false ;
rank: 998
score: 97.6466064453125
patch: return 1 ;
rank: 998
score: 97.37973022460938
patch: return ) ;
rank: 998
score: 97.33977508544922
patch: return x .
rank: 998
score: 94.22453308105469
patch: {
rank: 999
score: 96.58336385091145
patch: return ;
rank: 999
score: 94.7893295288086
patch: return
rank: 1000
score: 97.21240234375
patch: = true ;
rank: 1000
score: 96.57893880208333
patch: break ;
rank: 1000
score: 94.80662536621094
patch: }
rank: 1000
score: 94.01592254638672
patch: double
