rank: 1
score: 99.83009847005208
patch: increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 2
score: 99.72316607306985
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 2
score: 99.53193803267045
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 2
score: 99.45696466619319
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 3
score: 99.60584309895833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ;
rank: 3
score: 99.51295166015625
patch: increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 3
score: 99.50233861019737
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 3
score: 99.47964680989584
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ;
rank: 3
score: 99.47950744628906
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 3
score: 99.47006707442434
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 3
score: 99.4586181640625
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 3
score: 99.45004272460938
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 3
score: 99.441455078125
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 3
score: 99.44145122327302
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 4
score: 99.58587176983173
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 4
score: 99.47899169921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 4
score: 99.46513671875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 4
score: 99.44619140625
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 4
score: 99.4443359375
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 4
score: 99.43402569110577
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 4
score: 99.43118489583334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = 0 ;
rank: 4
score: 99.42509380139802
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 5
score: 99.43409016927083
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 5
score: 99.3899658203125
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 5
score: 99.3871182528409
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ;
rank: 5
score: 99.38185337611607
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm ) ;
rank: 6
score: 99.50804725060097
patch: update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( ) ;
rank: 6
score: 99.43787977430556
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 6
score: 99.42734781901042
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 6
score: 99.41508483886719
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 6
score: 99.37388102213542
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ;
rank: 6
score: 99.37123018152573
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 7
score: 99.50649626358695
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 7
score: 99.42378065321181
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 7
score: 99.41920055042614
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 7
score: 99.40352006392045
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ;
rank: 7
score: 99.36984252929688
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 7
score: 99.35990600585937
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) ;
rank: 7
score: 99.34852818080357
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm ) ;
rank: 7
score: 99.33561567826705
patch: increment CaMeL Iterations CaMeL Counter ( ) ; try {
rank: 8
score: 99.49871148003473
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 8
score: 99.40293884277344
patch: increment CaMeL Iterations CaMeL Counter ++ ;
rank: 8
score: 99.3542724609375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = true ;
rank: 8
score: 99.34298270089286
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm ) ;
rank: 9
score: 99.39011793870192
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ;
rank: 9
score: 99.357421875
patch: increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 9
score: 99.3527301290761
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 9
score: 99.33644321986607
patch: increment CaMeL Iterations CaMeL Counter ( false , x CaMeL Norm ) ;
rank: 9
score: 99.28382025824652
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 10
score: 99.48336356026786
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 10
score: 99.37995348478618
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 10
score: 99.33566123560855
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( ) ;
rank: 10
score: 99.3349545127467
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 10
score: 99.3271548622533
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 10
score: 99.31439208984375
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 11
score: 99.45555478050595
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 11
score: 99.34692993164063
patch: increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 11
score: 99.33839000355114
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 11
score: 99.32790902944711
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current ;
rank: 11
score: 99.27561848958334
patch: increment CaMeL Iterations CaMeL Counter ( , increment CaMeL Iterations CaMeL Counter ) ;
rank: 12
score: 99.37122163318452
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 12
score: 99.33350219726563
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 12
score: 99.32523193359376
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 12
score: 99.32264811197916
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = 0 ;
rank: 12
score: 99.31853284333882
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ) ;
rank: 12
score: 99.28376770019531
patch: increment CaMeL Iterations CaMeL Counter ( ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 12
score: 99.26534695095486
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 13
score: 99.36299272017045
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 13
score: 99.32920927159927
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; qr CaMeL Decomposition ( ) ;
rank: 13
score: 99.32197265625
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , x CaMeL Norm ) ;
rank: 13
score: 99.31777615017361
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter * x CaMeL Norm ) ;
rank: 13
score: 99.31759982638889
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 13
score: 99.2610222311581
patch: increment CaMeL Iterations CaMeL Counter ( ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 14
score: 99.35137618215461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 14
score: 99.3335673014323
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 14
score: 99.32856580946181
patch: increment CaMeL Iterations CaMeL Counter ++ ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 14
score: 99.31817626953125
patch: increment CaMeL Iterations CaMeL Counter ( true , x CaMeL Norm ) ;
rank: 14
score: 99.313232421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = false ;
rank: 14
score: 99.30757649739583
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( ) ;
rank: 14
score: 99.284912109375
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 14
score: 99.27709021935097
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) 1 ) ;
rank: 14
score: 99.26060485839844
patch: if ( first CaMeL Iteration ) {
rank: 15
score: 99.44871985394022
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 15
score: 99.34075927734375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 15
score: 99.32501775568181
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 15
score: 99.3154296875
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 15
score: 99.26863606770833
patch: finally { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 16
score: 99.32426372327302
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 16
score: 99.28754425048828
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ;
rank: 16
score: 99.26759338378906
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 17
score: 99.33079833984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 17
score: 99.32207380022321
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 17
score: 99.30518517127403
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 17
score: 99.29423014322917
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 17
score: 99.26421649639423
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) $NUMBER$ ) ;
rank: 17
score: 99.25701349431819
patch: increment CaMeL Iterations CaMeL Counter ( , current ) ;
rank: 17
score: 99.25297037760417
patch: increment CaMeL Iterations CaMeL Counter ( ) {
rank: 18
score: 99.43844943576389
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 18
score: 99.325927734375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 18
score: 99.24324340820313
patch: return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 19
score: 99.43680826822917
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 19
score: 99.32531156994048
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 19
score: 99.29361300998264
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 19
score: 99.28756713867188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = true ;
rank: 19
score: 99.27748325892857
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) ) ;
rank: 19
score: 99.25629216974431
patch: result = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 19
score: 99.23956853693181
patch: increment CaMeL Iterations CaMeL Counter ( + 1 ) ;
rank: 20
score: 99.43560791015625
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 20
score: 99.31724146792763
patch: super . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 20
score: 99.3162109375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 20
score: 99.30203683035714
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols ) ;
rank: 20
score: 99.29271782769098
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 20
score: 99.27654708059211
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( ) ;
rank: 20
score: 99.23499755859375
patch: final increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 21
score: 99.31601434004934
patch: callback . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 21
score: 99.31554158528645
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 21
score: 99.29898274739584
patch: update CaMeL Jacobian ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 21
score: 99.29237365722656
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 0 . 0 ;
rank: 21
score: 99.26942202919408
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 21
score: 99.23354085286458
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 22
score: 99.42420450846355
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 22
score: 99.31499837239583
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 22
score: 99.29878743489583
patch: increment CaMeL Iterations CaMeL Counter ( point , objective ) ;
rank: 22
score: 99.28745524088542
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 22
score: 99.28439565805289
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = 0 ;
rank: 22
score: 99.22796020507812
patch: increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 23
score: 99.42095477764423
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation , objective ) ;
rank: 23
score: 99.28370884486607
patch: while ( true ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 23
score: 99.28364643297698
patch: increment CaMeL Iterations CaMeL Counter ++ ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 23
score: 99.276904296875
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor , x CaMeL Norm ) ;
rank: 23
score: 99.2390606219952
patch: synchronized ( ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 23
score: 99.22777381310097
patch: increment CaMeL Iterations CaMeL Counter ( , first CaMeL Iteration ) ;
rank: 23
score: 99.22701590401786
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 24
score: 99.42049466646634
patch: qr CaMeL Decomposition ( ) ; qr CaMeL Decomposition ( ) ;
rank: 24
score: 99.30724158653847
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return current ; }
rank: 24
score: 99.27367401123047
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , x CaMeL Norm ) ;
rank: 24
score: 99.24844125600961
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ) ;
rank: 24
score: 99.23870171440973
patch: increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 24
score: 99.22677612304688
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 24
score: 99.2221346768466
patch: increment CaMeL Iterations CaMeL Counter ( , residuals ) ;
rank: 25
score: 99.41820126488095
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 25
score: 99.30160522460938
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 25
score: 99.28117101332721
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 0 . 0 ;
rank: 25
score: 99.27058919270833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 25
score: 99.2381122295673
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) 0 ) ;
rank: 26
score: 99.4160793138587
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ;
rank: 26
score: 99.28418579101563
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 26
score: 99.27847290039062
patch: increment CaMeL Iterations CaMeL Counter 1 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 26
score: 99.24078838641827
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ;
rank: 27
score: 99.41445440995066
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 27
score: 99.2816521139706
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 27
score: 99.27931722005208
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cols ) ;
rank: 27
score: 99.23211115056819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if (
rank: 27
score: 99.21173650568181
patch: increment CaMeL Iterations CaMeL Counter ( + 0 ) ;
rank: 28
score: 99.27948288690476
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 28
score: 99.266796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 ;
rank: 28
score: 99.23186786358173
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 28
score: 99.2250507061298
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) length ) ;
rank: 28
score: 99.21567604758523
patch: ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 29
score: 99.2925961143092
patch: increment CaMeL Iterations CaMeL Counter ( ) ; super . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 29
score: 99.2772216796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 29
score: 99.27662353515625
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 29
score: 99.27036420036765
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 . 0 ;
rank: 29
score: 99.26320482336956
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 29
score: 99.22831217447917
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 29
score: 99.22230747767857
patch: increment CaMeL Iterations CaMeL Counter increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 29
score: 99.19889831542969
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( residuals ) ;
rank: 30
score: 99.40866323617789
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this , objective ) ;
rank: 30
score: 99.28534613715277
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 30
score: 99.273681640625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( ) ;
rank: 30
score: 99.26416015625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . update CaMeL Jacobian ( ) ;
rank: 30
score: 99.22334428267045
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 30
score: 99.22130330403645
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 31
score: 99.40818189538044
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ;
rank: 31
score: 99.28218383789063
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 31
score: 99.27281429893092
patch: increment CaMeL Iterations CaMeL Counter <= solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 31
score: 99.22075861150569
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) {
rank: 31
score: 99.21926398026316
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 31
score: 99.20349993024554
patch: if ( * ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 31
score: 99.19537908380681
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) )
rank: 32
score: 99.26380208333333
patch: try { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 32
score: 99.22027994791667
patch: logger . arraycopy ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 32
score: 99.21373494466145
patch: increment CaMeL Iterations CaMeL Counter ( current , current ) ;
rank: 32
score: 99.19382731119792
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 33
score: 99.28011067708333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 33
score: 99.2705078125
patch: if ( first CaMeL Iteration ) { qr CaMeL Decomposition ( ) ;
rank: 33
score: 99.21868489583333
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 33
score: 99.19866943359375
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 34
score: 99.27372472426471
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 34
score: 99.26940046037946
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , x CaMeL Norm ) ;
rank: 34
score: 99.26883951822917
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ;
rank: 34
score: 99.25186767578126
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 34
score: 99.21517240084134
patch: if ( ! ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 34
score: 99.21304086538461
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 34
score: 99.1959979717548
patch: if ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 35
score: 99.27234497070313
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 35
score: 99.26761067708334
patch: qr CaMeL Decomposition ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 35
score: 99.25543212890625
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = current ;
rank: 35
score: 99.24527994791667
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) ; }
rank: 35
score: 99.21498107910156
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 35
score: 99.21129692925348
patch: increment CaMeL Iterations CaMeL Counter ( current . increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 35
score: 99.1953837076823
patch: int ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 35
score: 99.19309369255515
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . update CaMeL Jacobian ( ) ;
rank: 36
score: 99.26502075195313
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 36
score: 99.24407958984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = false ;
rank: 36
score: 99.21348219651442
patch: this . increment CaMeL Iterations CaMeL Counter ( - 1 ) ;
rank: 36
score: 99.19493689903847
patch: if ( * increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 37
score: 99.3917236328125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , permutation ) ;
rank: 37
score: 99.26469494047619
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 37
score: 99.26464125689338
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 37
score: 99.25129968979779
patch: increment CaMeL Iterations CaMeL Counter ++ ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 37
score: 99.21006081321023
patch: super . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 37
score: 99.2061258951823
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return current ;
rank: 37
score: 99.18074544270833
patch: this . update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( ) ;
rank: 38
score: 99.39012732872597
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , cols ) ;
rank: 38
score: 99.26089477539062
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 38
score: 99.25696518841912
patch: increment CaMeL Iterations CaMeL Counter < cols ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 38
score: 99.23723493303571
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Par = 0 ;
rank: 38
score: 99.20442468979779
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . notify CaMeL All ( ) ;
rank: 38
score: 99.18927001953125
patch: increment CaMeL Iterations CaMeL Counter ( - - 1 ) ;
rank: 38
score: 99.17814127604167
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ;
rank: 39
score: 99.26055908203125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 39
score: 99.25200059678819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 39
score: 99.25113932291667
patch: res = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 39
score: 99.23701171875
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 39
score: 99.20367072610294
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) , ) ;
rank: 39
score: 99.19652210582386
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 39
score: 99.1888427734375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . ;
rank: 40
score: 99.38875325520833
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation ) ;
rank: 40
score: 99.24623616536458
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 40
score: 99.19501953125
patch: logger . out ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 40
score: 99.1868145282452
patch: if ( * ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 40
score: 99.17343478732639
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 41
score: 99.259765625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 41
score: 99.25092022235577
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 41
score: 99.24553087022569
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 41
score: 99.19873657226563
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 41
score: 99.19307767427884
patch: try { this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 41
score: 99.1859130859375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 41
score: 99.16842215401786
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( true ) {
rank: 42
score: 99.2537841796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 42
score: 99.24131266276042
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 42
score: 99.23478190104167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = current ;
rank: 42
score: 99.19850158691406
patch: increment CaMeL Iterations CaMeL Counter ( current , increment CaMeL Iterations CaMeL Counter ) ;
rank: 42
score: 99.19260079520089
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 42
score: 99.18095259232955
patch: increment CaMeL Iterations CaMeL Counter ( 1 1 ) ;
rank: 43
score: 99.38529887952302
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 43
score: 99.25326717601104
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 43
score: 99.24439290364583
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 43
score: 99.19808846932871
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) , ) ;
rank: 43
score: 99.180126953125
patch: increment CaMeL Iterations CaMeL Counter += increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 43
score: 99.16599343039773
patch: increment CaMeL Iterations CaMeL Counter ( - 0 ) ;
rank: 44
score: 99.25300678453948
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 44
score: 99.24663947610294
patch: increment CaMeL Iterations CaMeL Counter > 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 44
score: 99.24429141773896
patch: increment CaMeL Iterations CaMeL Counter = 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 44
score: 99.23422723067434
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 44
score: 99.23294270833334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = 0 ;
rank: 44
score: 99.19660295758929
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . start ( ) ;
rank: 44
score: 99.18631744384766
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < ( ) ;
rank: 44
score: 99.17587280273438
patch: increment CaMeL Iterations CaMeL Counter ( - - 0 ) ;
rank: 44
score: 99.16372341579861
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 45
score: 99.24405110677084
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par ( ) ;
rank: 45
score: 99.19464111328125
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( get CaMeL Class ( ) ) ;
rank: 45
score: 99.17551832932692
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 46
score: 99.24028930664062
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 46
score: 99.23313502261513
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 46
score: 99.22794189453126
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 46
score: 99.18500518798828
patch: increment CaMeL Iterations CaMeL Counter < 0 ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 46
score: 99.16266338641827
patch: if ( true ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 47
score: 99.38242750901442
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , 0 ) ;
rank: 47
score: 99.24182846966912
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 47
score: 99.23809136284723
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 47
score: 99.23210797991071
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 47
score: 99.22771139705883
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += jac CaMeL Norm ;
rank: 47
score: 99.1826171875
patch: logger . out ( $STRING$ ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 47
score: 99.16135125411184
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; try {
rank: 48
score: 99.3815625
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 48
score: 99.24163055419922
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 48
score: 99.23691920230263
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 48
score: 99.23530883789063
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ;
rank: 48
score: 99.23045518663194
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 48
score: 99.19048108552632
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 48
score: 99.1609637920673
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( true )
rank: 49
score: 99.38005981445312
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 49
score: 99.23894856770833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = jac CaMeL Norm ;
rank: 49
score: 99.23320007324219
patch: if ( do CaMeL Optimize ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 49
score: 99.18838266225961
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = true ;
rank: 49
score: 99.17184884207589
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 49
score: 99.158203125
patch: increment CaMeL Iterations CaMeL Counter ( + $NUMBER$ ) ;
rank: 50
score: 99.37928059895833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( first CaMeL Iteration )
rank: 50
score: 99.231201171875
patch: previous = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 50
score: 99.22881610576923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return false ; }
rank: 50
score: 99.225341796875
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 50
score: 99.18792724609375
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) ) ;
rank: 50
score: 99.17959594726562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 50
score: 99.1711181640625
patch: } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 50
score: 99.1568603515625
patch: if ( true ) {
rank: 51
score: 99.22866482204861
patch: else increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 51
score: 99.22857344777961
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 51
score: 99.22627476283482
patch: increment CaMeL Iterations CaMeL Counter ( point , x CaMeL Norm ) ;
rank: 51
score: 99.18783804086539
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( this . get CaMeL Class ( ) ) ;
rank: 51
score: 99.1688565340909
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ ) ;
rank: 52
score: 99.37644606370192
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 52
score: 99.22840169270833
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 52
score: 99.2281494140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 52
score: 99.18724300986842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 52
score: 99.16404724121094
patch: synchronized ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ;
rank: 52
score: 99.1549405184659
patch: increment CaMeL Iterations CaMeL Counter ( , 0 ) ;
rank: 53
score: 99.37585979959239
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 53
score: 99.22682100183823
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . get CaMeL Iterations ( ) ;
rank: 53
score: 99.22335611979166
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , x CaMeL Norm ) ;
rank: 53
score: 99.17514038085938
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ - 1 ) ;
rank: 53
score: 99.1543327780331
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 54
score: 99.37502817007211
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , 1 ) ;
rank: 54
score: 99.23665364583333
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 54
score: 99.22506713867188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ;
rank: 54
score: 99.22227567784927
patch: increment CaMeL Iterations CaMeL Counter < 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 54
score: 99.18062097886029
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . double CaMeL Value ( ) ;
rank: 55
score: 99.23290297564338
patch: x CaMeL Norm = 0 . 0 ; x CaMeL Norm = 0 . 0 ;
rank: 55
score: 99.22515190972223
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 55
score: 99.22178890830592
patch: increment CaMeL Iterations CaMeL Counter * current . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 56
score: 99.37479654947917
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this ) ;
rank: 56
score: 99.23251681857639
patch: increment CaMeL Iterations CaMeL Counter -- ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 56
score: 99.22385817307692
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return true ; }
rank: 56
score: 99.22147409539474
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 56
score: 99.15030924479167
patch: Iterations ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 57
score: 99.3736239346591
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ] ;
rank: 57
score: 99.23246934678819
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 57
score: 99.22383840460526
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 57
score: 99.2209243774414
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , x CaMeL Norm ) ;
rank: 57
score: 99.17684936523438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( current ) ;
rank: 57
score: 99.1708984375
patch: increment CaMeL Iterations CaMeL Counter ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 57
score: 99.14878336588542
patch: increment CaMeL Iterations CaMeL Counter ( [ 1 ] ) ;
rank: 58
score: 99.37350303248355
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 58
score: 99.23045349121094
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 58
score: 99.22172037760417
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 58
score: 99.22067696707589
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , solved CaMeL Cols ) ;
rank: 58
score: 99.21241295855978
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ;
rank: 58
score: 99.174072265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . join ( ) ;
rank: 58
score: 99.16911315917969
patch: increment CaMeL Iterations CaMeL Counter > 0 ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 58
score: 99.147705078125
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ 1 ) ;
rank: 59
score: 99.3732440655048
patch: update CaMeL Jacobian ( ) ; update CaMeL Jacobian ( ) ;
rank: 59
score: 99.23032052176339
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = jac CaMeL Norm ;
rank: 59
score: 99.22130475725446
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 59
score: 99.22017669677734
patch: increment CaMeL Iterations CaMeL Counter < Math . sqrt ( x CaMeL Norm ) ;
rank: 59
score: 99.21810574001736
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 59
score: 99.2101806640625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL Res = 0 ;
rank: 59
score: 99.17384765625
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( ) ) ;
rank: 59
score: 99.16788736979167
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 59
score: 99.14285278320312
patch: int * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 60
score: 99.37113131009616
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , this ) ;
rank: 60
score: 99.23013466282895
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . do CaMeL Optimize ( ) ;
rank: 60
score: 99.21806784237133
patch: increment CaMeL Iterations CaMeL Counter ++ ; current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 60
score: 99.21017795138889
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter , x CaMeL Norm ) ;
rank: 60
score: 99.16697340745192
patch: if ( int ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 60
score: 99.14092462713069
patch: increment CaMeL Iterations CaMeL Counter ( ) + ) ;
rank: 61
score: 99.3682861328125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( objective ) ;
rank: 61
score: 99.21392211914062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 61
score: 99.20812270220588
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = 0 . 0 ;
rank: 61
score: 99.16629188939145
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 61
score: 99.16592172475961
patch: increment CaMeL Iterations CaMeL Counter ( * 1 . 0 ) ;
rank: 61
score: 99.13967660757211
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 61
score: 99.1384033203125
patch: increment CaMeL Iterations CaMeL Counter ( , ) ;
rank: 62
score: 99.2286376953125
patch: increment CaMeL Iterations CaMeL Counter ++ ; update CaMeL Jacobian ( ) ;
rank: 62
score: 99.2157970610119
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 62
score: 99.21115112304688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 62
score: 99.16583984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( ) ;
rank: 62
score: 99.164892578125
patch: get CaMeL Iterations ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 62
score: 99.13875325520833
patch: increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 62
score: 99.13668823242188
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; update CaMeL Jacobian ( ) ;
rank: 63
score: 99.22815813337054
patch: final Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 63
score: 99.21792166573661
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols ) ;
rank: 63
score: 99.21102905273438
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 63
score: 99.20611893503289
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 63
score: 99.20596474095395
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 63
score: 99.16278483072917
patch: if ( this . ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 63
score: 99.13367309570313
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 64
score: 99.22571672712054
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Dir = 0 ;
rank: 64
score: 99.21534220377605
patch: increment CaMeL Iterations CaMeL Counter ( false , objective ) ;
rank: 64
score: 99.20997032752403
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 64
score: 99.20551006610577
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ) ;
rank: 64
score: 99.16393324908088
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , ) ;
rank: 64
score: 99.16197967529297
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ) ;
rank: 64
score: 99.13813920454545
patch: return * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 64
score: 99.1330233487216
patch: increment CaMeL Iterations CaMeL Counter ( , true ) ;
rank: 65
score: 99.22367858886719
patch: increment CaMeL Iterations CaMeL Counter 1 = initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 65
score: 99.20823364257812
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 65
score: 99.20550178079044
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 65
score: 99.16112518310547
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 65
score: 99.13572184244792
patch: increment CaMeL Iterations CaMeL Counter ( - - $NUMBER$ ) ;
rank: 65
score: 99.13275824652777
patch: increment CaMeL Iterations CaMeL Counter ( , ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 66
score: 99.35836452907986
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 66
score: 99.22037179129464
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = solved CaMeL Cols ;
rank: 66
score: 99.21243722098214
patch: increment CaMeL Iterations CaMeL Counter ( cols , x CaMeL Norm ) ;
rank: 66
score: 99.20777085248162
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 66
score: 99.20534939236111
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 66
score: 99.20472412109375
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 66
score: 99.16343994140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 66
score: 99.15786743164062
patch: try { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 66
score: 99.13454182942708
patch: increment CaMeL Iterations CaMeL Counter ( - 1 $NUMBER$ ) ;
rank: 66
score: 99.132275390625
patch: this . qr CaMeL Decomposition ( ) ; qr CaMeL Decomposition ( ) ;
rank: 67
score: 99.35786769701087
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) true ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 67
score: 99.21043294270834
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 67
score: 99.20536295572917
patch: final increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 67
score: 99.20347290039062
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 67
score: 99.16298314144737
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 67
score: 99.15757751464844
patch: increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 67
score: 99.1317608173077
patch: while ( ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 67
score: 99.1282626065341
patch: increment CaMeL Iterations CaMeL Counter ( ) ; do {
rank: 68
score: 99.21702357700893
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 0 ;
rank: 68
score: 99.20988913143383
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; update CaMeL Jacobian ( ) ;
rank: 68
score: 99.2047119140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 68
score: 99.20313110351563
patch: increment CaMeL Iterations CaMeL Counter ( ) ; )
rank: 68
score: 99.162451171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . stop ( ) ;
rank: 68
score: 99.1566650390625
patch: log . arraycopy ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 68
score: 99.1313985188802
patch: increment CaMeL Iterations CaMeL Counter ( 1 + 0 ) ;
rank: 68
score: 99.12813313802083
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 69
score: 99.35664367675781
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; }
rank: 69
score: 99.21678402549342
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 69
score: 99.20377390008224
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 69
score: 99.2029541015625
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 69
score: 99.15887741815476
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . interrupt ( ) ;
rank: 69
score: 99.12856038411458
patch: logger . { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 70
score: 99.2027587890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = current ;
rank: 70
score: 99.20180150082237
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 70
score: 99.15814763849431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . out ) ;
rank: 70
score: 99.15603402944711
patch: try { increment CaMeL Iterations CaMeL Counter ( - 1 ) ;
rank: 70
score: 99.12771426930146
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ;
rank: 70
score: 99.12674386160714
patch: Iterations [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 71
score: 99.20912798713235
patch: increment CaMeL Iterations CaMeL Counter * current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 71
score: 99.20153198242187
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 71
score: 99.15538441051136
patch: increment CaMeL Iterations CaMeL Counter ( / 1 ) ;
rank: 71
score: 99.12582736545139
patch: event = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 71
score: 99.125
patch: int * * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 72
score: 99.35101609002976
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 72
score: 99.2009521484375
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 72
score: 99.157275390625
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 72
score: 99.15423583984375
patch: synchronized ( increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 72
score: 99.12442016601562
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; ) ;
rank: 73
score: 99.2066291360294
patch: increment CaMeL Iterations CaMeL Counter < 1 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 73
score: 99.20090846011513
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 73
score: 99.20084228515626
patch: boolean first CaMeL Iteration = true ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 73
score: 99.15691174958882
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + ) ;
rank: 73
score: 99.15345052083333
patch: if ( ) { this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 73
score: 99.12497780539773
patch: increment CaMeL Iterations CaMeL Counter ( ) ; continue ;
rank: 73
score: 99.12408447265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ) ;
rank: 74
score: 99.34690259850544
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) true ;
rank: 74
score: 99.20037520559211
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 74
score: 99.152587890625
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter $NUMBER$ ) ;
rank: 74
score: 99.12322998046875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( true ) ;
rank: 74
score: 99.1211669921875
patch: increment CaMeL Iterations CaMeL Counter ( ] ) ;
rank: 75
score: 99.3464714499081
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 75
score: 99.21199304917279
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 1 . 0 ;
rank: 75
score: 99.20111443014706
patch: x CaMeL Norm = 0 . 0 ; x CaMeL Norm += 0 . 0 ;
rank: 75
score: 99.20015462239583
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ;
rank: 75
score: 99.15243530273438
patch: if $NUMBER$ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 75
score: 99.12279510498047
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( )
rank: 75
score: 99.12017822265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; ;
rank: 76
score: 99.1982654389881
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 76
score: 99.19088584498355
patch: increment CaMeL Iterations CaMeL Counter ( ) ; try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 76
score: 99.15397135416667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . delete ( ) ;
rank: 76
score: 99.15226745605469
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < - 1 ;
rank: 76
score: 99.1180752840909
patch: increment CaMeL Iterations CaMeL Counter ( 1 $NUMBER$ ) ;
rank: 77
score: 99.20930750229779
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; update CaMeL Jacobian ( ) ;
rank: 77
score: 99.19756116365132
patch: increment CaMeL Iterations CaMeL Counter ( ) ; out . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 77
score: 99.197509765625
patch: increment CaMeL Iterations CaMeL Counter ( true , objective ) ;
rank: 77
score: 99.1966885653409
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 77
score: 99.1218620749081
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . qr CaMeL Decomposition ( ) ;
rank: 77
score: 99.1176528930664
patch: increment CaMeL Iterations CaMeL Counter ( get . get CaMeL Iterations ( ) ) ;
rank: 78
score: 99.3367229959239
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this ,
rank: 78
score: 99.20897327769886
patch: x CaMeL Norm = new double [ cols ] ;
rank: 78
score: 99.19681222098214
patch: if ( false ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 78
score: 99.15174102783203
patch: increment CaMeL Iterations CaMeL Counter > ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 78
score: 99.12064034598214
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( true ) {
rank: 78
score: 99.11648559570312
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 79
score: 99.20872497558594
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 1 . 0 ;
rank: 79
score: 99.19475640190973
patch: increment CaMeL Iterations CaMeL Counter < cols ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 79
score: 99.15341025904605
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 79
score: 99.1510498046875
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ,
rank: 79
score: 99.1197265625
patch: increment CaMeL Iterations CaMeL Counter : increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 79
score: 99.11403401692708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for ( {
rank: 80
score: 99.20865885416667
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 80
score: 99.19591413225446
patch: result [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 80
score: 99.15271606445313
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( this ) ;
rank: 80
score: 99.14981079101562
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 80
score: 99.11023966471355
patch: increment CaMeL Iterations CaMeL Counter ( 1 - 0 ) ;
rank: 81
score: 99.3305892944336
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( false ) ;
rank: 81
score: 99.1952892485119
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 81
score: 99.19474653764205
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 81
score: 99.18735177176339
patch: increment CaMeL Iterations CaMeL Counter ( this , x CaMeL Norm ) ;
rank: 81
score: 99.18670654296875
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 81
score: 99.11778428819444
patch: tmp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 81
score: 99.10965728759766
patch: increment CaMeL Iterations CaMeL Counter ( value . get CaMeL Iterations ( ) ) ;
rank: 82
score: 99.3305027173913
patch: increment CaMeL Iterations CaMeL Counter ( + ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) ) ;
rank: 82
score: 99.20821940104166
patch: increment CaMeL Iterations CaMeL Counter ( 0 ] , x CaMeL Norm ) ;
rank: 82
score: 99.19446411132813
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 82
score: 99.19352213541667
patch: current = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 82
score: 99.1856689453125
patch: increment CaMeL Iterations CaMeL Counter <= cols ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 82
score: 99.18502807617188
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 82
score: 99.15025570518092
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; ;
rank: 83
score: 99.1937255859375
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter * x CaMeL Norm ) ; }
rank: 83
score: 99.19340245863971
patch: increment CaMeL Iterations CaMeL Counter ++ ; this . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 83
score: 99.18521118164062
patch: increment CaMeL Iterations CaMeL Counter ( 1 , cols ) ;
rank: 83
score: 99.14998081752232
patch: increment CaMeL Iterations CaMeL Counter ( get CaMeL Iterations ( ) ) ;
rank: 83
score: 99.14744873046875
patch: increment CaMeL Iterations CaMeL Counter < ( ) ;
rank: 83
score: 99.11695014105902
patch: inst = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 83
score: 99.10872650146484
patch: increment CaMeL Iterations CaMeL Counter > ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 84
score: 99.32867110402961
patch: R . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 84
score: 99.20752716064453
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , x CaMeL Norm ) ;
rank: 84
score: 99.19312744140625
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 84
score: 99.19150904605263
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 84
score: 99.18416050502232
patch: increment CaMeL Iterations CaMeL Counter ( false , solved CaMeL Cols ) ;
rank: 84
score: 99.18192915482955
patch: state = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 84
score: 99.1457748413086
patch: increment CaMeL Iterations CaMeL Counter ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 84
score: 99.10817307692308
patch: increment CaMeL Iterations CaMeL Counter ( - [ 0 ] ) ;
rank: 85
score: 99.32863451086956
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation ,
rank: 85
score: 99.1927734375
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 85
score: 99.1839599609375
patch: increment CaMeL Iterations CaMeL Counter < cols ; update CaMeL Jacobian ( ) ;
rank: 85
score: 99.18077256944444
patch: assert increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 85
score: 99.14702606201172
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( ) ) ;
rank: 85
score: 99.14530726841518
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 85
score: 99.11572265625
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 85
score: 99.10806039663461
patch: int * ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 86
score: 99.3280537923177
patch: increment CaMeL Iterations CaMeL Counter ( current , objective ) ;
rank: 86
score: 99.20706979851974
patch: x CaMeL Norm = 0 . 0 ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 86
score: 99.19100952148438
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * jac CaMeL Norm ) ;
rank: 86
score: 99.18885091145833
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 86
score: 99.18234252929688
patch: synchronized ( lm CaMeL Par ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 86
score: 99.17863195082721
patch: if ( increment CaMeL Iterations CaMeL Counter <= ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 86
score: 99.14628295898437
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , current ) ;
rank: 86
score: 99.1155517578125
patch: increment CaMeL Iterations CaMeL Counter ( ++ increment CaMeL Iterations CaMeL Counter ) ;
rank: 86
score: 99.10781625600961
patch: int * * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 87
score: 99.3275146484375
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point
rank: 87
score: 99.2070671530331
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 87
score: 99.18849690755208
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 87
score: 99.1807373046875
patch: increment CaMeL Iterations CaMeL Counter ( + $NUMBER$ , x CaMeL Norm ) ;
rank: 87
score: 99.1460189819336
patch: increment CaMeL Iterations CaMeL Counter ( current . double CaMeL Value ( ) ) ;
rank: 87
score: 99.10648970170455
patch: increment CaMeL Iterations CaMeL Counter ( ) + 1 ;
rank: 88
score: 99.20595831620066
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 88
score: 99.18981119791667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = 1 ;
rank: 88
score: 99.18592834472656
patch: current = increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 88
score: 99.18050711495536
patch: update CaMeL Jacobian ( ) ;
rank: 88
score: 99.17776254507211
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) break ;
rank: 88
score: 99.14448377821181
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 88
score: 99.11409135298295
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / *
rank: 88
score: 99.10572509765625
patch: increment CaMeL Iterations CaMeL Counter ( - ) ;
rank: 89
score: 99.18948364257812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * /
rank: 89
score: 99.18482317243304
patch: if ( ) current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 89
score: 99.1775146484375
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 89
score: 99.143896484375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . close ( ) ;
rank: 89
score: 99.14106750488281
patch: increment CaMeL Iterations CaMeL Counter < 0 ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 89
score: 99.114013671875
patch: boolean first CaMeL Iteration = initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ;
rank: 89
score: 99.10463460286458
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 90
score: 99.32290414663461
patch: qr CaMeL Decomposition ( ) ; update CaMeL Jacobian ( ) ;
rank: 90
score: 99.188134765625
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 90
score: 99.18478393554688
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = increment CaMeL Iterations CaMeL Counter ;
rank: 90
score: 99.17679850260417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; continue ; }
rank: 90
score: 99.17564086914062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; {
rank: 90
score: 99.14384380139802
patch: increment CaMeL Iterations CaMeL Counter ( current . ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 90
score: 99.13987731933594
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 90
score: 99.11322699652777
patch: if ( ! first CaMeL Iteration ) {
rank: 90
score: 99.10446401742789
patch: increment CaMeL Iterations CaMeL Counter ( - - - 1 ) ;
rank: 91
score: 99.321533203125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } update CaMeL Jacobian ( ) ;
rank: 91
score: 99.20486653645834
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = solved CaMeL Cols ;
rank: 91
score: 99.18805541992188
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) * x CaMeL Norm ) ;
rank: 91
score: 99.17573816636029
patch: increment CaMeL Iterations CaMeL Counter ( ; increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 91
score: 99.1749979654948
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , cols ) ;
rank: 91
score: 99.1435546875
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 91
score: 99.13925405649039
patch: this . this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 91
score: 99.11263275146484
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; qr CaMeL Decomposition ( ) ;
rank: 91
score: 99.10437950721153
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; ) ;
rank: 92
score: 99.1861343383789
patch: boolean first CaMeL Iteration = true ;
rank: 92
score: 99.18403063322368
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . get CaMeL Iterations ( ) ;
rank: 92
score: 99.17572342722039
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 92
score: 99.17428588867188
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , first CaMeL Iteration ) ;
rank: 92
score: 99.1009750366211
patch: increment CaMeL Iterations CaMeL Counter ( name . get CaMeL Iterations ( ) ) ;
rank: 93
score: 99.18572998046875
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , x CaMeL Norm ) ;
rank: 93
score: 99.17275103400735
patch: if ( ! first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 93
score: 99.14255981445312
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 0 ) ;
rank: 93
score: 99.13699340820312
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 93
score: 99.11188299005681
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else {
rank: 93
score: 99.0982998934659
patch: increment CaMeL Iterations CaMeL Counter ( ) + $NUMBER$ ;
rank: 94
score: 99.20137293198529
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , current ) ;
rank: 94
score: 99.18525390625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL Res = current ;
rank: 94
score: 99.17422485351562
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; final increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 94
score: 99.17251247829861
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 94
score: 99.14221909466912
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , ) ;
rank: 94
score: 99.1085205078125
patch: { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 94
score: 99.09816672585227
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) /
rank: 95
score: 99.32004712975544
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( } ;
rank: 95
score: 99.20062255859375
patch: increment CaMeL Iterations CaMeL Counter ++ ; first CaMeL Iteration = true ;
rank: 95
score: 99.18115234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( ) ;
rank: 95
score: 99.17392147288604
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 95
score: 99.17230224609375
patch: increment CaMeL Iterations CaMeL Counter ( point , first CaMeL Iteration ) ;
rank: 95
score: 99.14111938476563
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 95
score: 99.13678385416667
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < ) {
rank: 95
score: 99.1083096590909
patch: increment CaMeL Iterations CaMeL Counter ( , objective ) ;
rank: 95
score: 99.0980224609375
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + 0 ) ;
rank: 96
score: 99.18044562088816
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 96
score: 99.17227975945724
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 96
score: 99.1405029296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . start ( ) ;
rank: 96
score: 99.13645833333334
patch: increment CaMeL Iterations CaMeL Counter ( * increment CaMeL Iterations CaMeL Counter ) ;
rank: 96
score: 99.1071548461914
patch: tmp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 96
score: 99.0958251953125
patch: increment CaMeL Iterations CaMeL Counter ( 1 , $NUMBER$ ) ;
rank: 97
score: 99.31851859714673
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) this ;
rank: 97
score: 99.20022922092014
patch: increment CaMeL Iterations CaMeL Counter <= cols ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 97
score: 99.171142578125
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) increment CaMeL Iterations CaMeL Counter ) ;
rank: 97
score: 99.17112379807692
patch: increment CaMeL Iterations CaMeL Counter ( , x CaMeL Norm ) ;
rank: 97
score: 99.13949381510416
patch: increment CaMeL Iterations CaMeL Counter ( current , old CaMeL X , ) ;
rank: 97
score: 99.13583374023438
patch: increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 97
score: 99.09385172526042
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ) {
rank: 98
score: 99.315634765625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( , objective ) ;
rank: 98
score: 99.18319702148438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( false ) ;
rank: 98
score: 99.17027869591347
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ) ; }
rank: 98
score: 99.16991315569196
patch: increment CaMeL Iterations CaMeL Counter ( cols , solved CaMeL Cols ) ;
rank: 98
score: 99.13828822544643
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 98
score: 99.13444010416667
patch: increment CaMeL Iterations CaMeL Counter < ) {
rank: 98
score: 99.10570571001838
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ;
rank: 98
score: 99.0929424579327
patch: int * * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 99
score: 99.31498209635417
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 99
score: 99.19961547851562
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 99
score: 99.18185763888889
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * cols ) ;
rank: 99
score: 99.10476202713816
patch: Object current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 99
score: 99.09246826171875
patch: increment CaMeL Iterations CaMeL Counter ( - 1 1 ) ;
rank: 100
score: 99.17815755208333
patch: if ( ! ) current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 100
score: 99.167578125
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 100
score: 99.13331604003906
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 100
score: 99.1047119140625
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 100
score: 99.09173029119319
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; ;
rank: 101
score: 99.31370907738095
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) . update CaMeL Jacobian ( ) ;
rank: 101
score: 99.18106239720395
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 101
score: 99.17787000868056
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; )
rank: 101
score: 99.16763305664062
patch: increment CaMeL Iterations CaMeL Counter -- ;
rank: 101
score: 99.16712036132813
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 101
score: 99.13663330078126
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 101
score: 99.1329345703125
patch: increment CaMeL Iterations CaMeL Counter ; else increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 101
score: 99.10463579963235
patch: increment CaMeL Iterations CaMeL Counter ( ) : increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 101
score: 99.09114583333333
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + 1 ) ;
rank: 102
score: 99.31211451480263
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; qr CaMeL Decomposition ( ) ;
rank: 102
score: 99.19678606305804
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 102
score: 99.17683715820313
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 102
score: 99.16685655381944
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 102
score: 99.1322733561198
patch: this . increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 102
score: 99.10460069444444
patch: g = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 103
score: 99.311748046875
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 103
score: 99.1796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 103
score: 99.1763916015625
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 103
score: 99.134716796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 103
score: 99.13134765625
patch: increment CaMeL Iterations CaMeL Counter ( this , increment CaMeL Iterations CaMeL Counter ) ;
rank: 103
score: 99.08997599283855
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ - 0 ) ;
rank: 104
score: 99.19500373391544
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 104
score: 99.17479790581598
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 104
score: 99.16522216796875
patch: increment CaMeL Iterations CaMeL Counter ( point , cols ) ;
rank: 104
score: 99.13101806640626
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ;
rank: 104
score: 99.103515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * /
rank: 104
score: 99.08966064453125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } ) ;
rank: 105
score: 99.19464111328125
patch: qr CaMeL Decomposition = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 105
score: 99.1659268465909
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 105
score: 99.16482107979911
patch: x CaMeL Norm = Math . sqrt ( x CaMeL Norm ) ;
rank: 105
score: 99.13348388671875
patch: increment CaMeL Iterations CaMeL Counter ( current , true ) ;
rank: 105
score: 99.12832845052084
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter 1 ) ;
rank: 105
score: 99.10176595052083
patch: node = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 105
score: 99.0894775390625
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } finally {
rank: 106
score: 99.31003736413044
patch: increment CaMeL Iterations CaMeL Counter ( new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ) ;
rank: 106
score: 99.17779541015625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } lm CaMeL Par = 0 ;
rank: 106
score: 99.17355526194854
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ;
rank: 106
score: 99.16562906901042
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 106
score: 99.16372884114584
patch: increment CaMeL Iterations CaMeL Counter ( - cols , x CaMeL Norm ) ;
rank: 106
score: 99.13190307617188
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , true ) ;
rank: 106
score: 99.1282207782452
patch: for ( ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 106
score: 99.08843383789062
patch: ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 107
score: 99.30983372738487
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 107
score: 99.17715454101562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( true ) ;
rank: 107
score: 99.16518985523896
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ) ;
rank: 107
score: 99.16244942801339
patch: increment CaMeL Iterations CaMeL Counter ( true , solved CaMeL Cols ) ;
rank: 107
score: 99.13143117804276
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) - ) ;
rank: 107
score: 99.12818400065105
patch: this . increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 107
score: 99.088427734375
patch: increment CaMeL Iterations CaMeL Counter ( - increment CaMeL Iterations CaMeL Counter ) ;
rank: 108
score: 99.30805520450367
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current ; update CaMeL Jacobian ( ) ;
rank: 108
score: 99.1768310546875
patch: boolean first CaMeL Iteration = false ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 108
score: 99.16449265252976
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ) ;
rank: 108
score: 99.16239711216518
patch: if ( first CaMeL Iteration ) { update CaMeL Jacobian ( ) ;
rank: 108
score: 99.13132887620192
patch: Thread . current CaMeL Thread ( ) . start ( ) ;
rank: 108
score: 99.12659454345703
patch: increment CaMeL Iterations CaMeL Counter > 0 ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 108
score: 99.08819580078125
patch: increment CaMeL Iterations CaMeL Counter ( 1 + 1 ) ;
rank: 109
score: 99.3074951171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { update CaMeL Jacobian ( ) ;
rank: 109
score: 99.17628115699405
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 109
score: 99.17030093544408
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 109
score: 99.16203308105469
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( first CaMeL Iteration ) {
rank: 109
score: 99.13047162224265
patch: increment CaMeL Iterations CaMeL Counter ( current , increment CaMeL Iterations CaMeL Counter , ) ;
rank: 109
score: 99.12539672851562
patch: increment CaMeL Iterations CaMeL Counter < ) ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 110
score: 99.17568969726562
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor ) ;
rank: 110
score: 99.17008833451705
patch: i = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 110
score: 99.16399536132812
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 110
score: 99.16175255408653
patch: this . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 110
score: 99.12996773097827
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ( ) ) ) ;
rank: 110
score: 99.09910231370192
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) {
rank: 110
score: 99.08744303385417
patch: increment CaMeL Iterations CaMeL Counter ( ) throws
rank: 111
score: 99.19037186472039
patch: increment CaMeL Iterations CaMeL Counter -- ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 111
score: 99.17498779296875
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ;
rank: 111
score: 99.16891818576389
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 111
score: 99.16211615668402
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 111
score: 99.12968364514802
patch: increment CaMeL Iterations CaMeL Counter ( current . increment CaMeL Iterations CaMeL Counter ( ) , ) ;
rank: 111
score: 99.12469482421875
patch: increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 111
score: 99.09861127068015
patch: this . update CaMeL Jacobian ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 111
score: 99.08648681640625
patch: break ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 112
score: 99.301943359375
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ) . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 112
score: 99.19025065104167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; solved CaMeL Cols ( ) ;
rank: 112
score: 99.17457411024306
patch: increment CaMeL Iterations CaMeL Counter ( update CaMeL Residuals CaMeL And CaMeL Cost ( ) ) ;
rank: 112
score: 99.16811651932566
patch: increment CaMeL Iterations CaMeL Counter ( ) + current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 112
score: 99.16202392578126
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 112
score: 99.1597149188702
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 112
score: 99.12927924262152
patch: ; increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 112
score: 99.1221172626202
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , 0 ) ;
rank: 112
score: 99.09676920572916
patch: increment CaMeL Iterations CaMeL Counter ( ) ; do CaMeL Optimize ( ) ;
rank: 112
score: 99.08507283528645
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( else
rank: 113
score: 99.16703287760417
patch: if ( current != null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 113
score: 99.1285336143092
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; }
rank: 113
score: 99.12020874023438
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 113
score: 99.09664756373355
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . current CaMeL Time CaMeL Millis ( ) ;
rank: 113
score: 99.0850118001302
patch: System . ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 114
score: 99.30123562282986
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 114
score: 99.18892176011029
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 114
score: 99.16567758413461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = null ;
rank: 114
score: 99.15648651123047
patch: this . update CaMeL Residuals CaMeL And CaMeL Cost ( point , objective ) ;
rank: 114
score: 99.1278963955966
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . err ) ;
rank: 114
score: 99.12014535757211
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; if (
rank: 114
score: 99.09391276041667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 114
score: 99.08407827524039
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; ) {
rank: 115
score: 99.301201171875
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( [ ] ) ;
rank: 115
score: 99.1883544921875
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; {
rank: 115
score: 99.1715777853261
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 115
score: 99.16431427001953
patch: increment CaMeL Iterations CaMeL Counter = ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 115
score: 99.16090152138158
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 115
score: 99.15519496372768
patch: increment CaMeL Iterations CaMeL Counter ( cols , first CaMeL Iteration ) ;
rank: 115
score: 99.12711791992187
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 115
score: 99.11733176491477
patch: Iterations = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 115
score: 99.08403184678819
patch: increment CaMeL Iterations CaMeL Counter ( ) .
rank: 116
score: 99.1709213256836
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res , x CaMeL Norm ) ;
rank: 116
score: 99.16398540296052
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; * /
rank: 116
score: 99.1270751953125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . wait ( ) ;
rank: 116
score: 99.11717122395834
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter = ) ;
rank: 116
score: 99.09199354383681
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ++ increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 116
score: 99.08336385091145
patch: increment CaMeL Iterations CaMeL Counter ( [ $NUMBER$ ] ) ;
rank: 117
score: 99.30060369318181
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( (
rank: 117
score: 99.18682861328125
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 117
score: 99.17071533203125
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , delta , diag CaMeL R ) ;
rank: 117
score: 99.1606201171875
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 117
score: 99.15412139892578
patch: update CaMeL Jacobian ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 117
score: 99.11675618489583
patch: System . arraycopy ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 117
score: 99.09164910567434
patch: Node current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 117
score: 99.08257649739583
patch: if ( list != null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 118
score: 99.30025390625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , ) ;
rank: 118
score: 99.18610582853618
patch: increment CaMeL Iterations CaMeL Counter < Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 118
score: 99.16225857204861
patch: increment CaMeL Iterations CaMeL Counter ++ ; if ( ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 118
score: 99.16023334703948
patch: state = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 118
score: 99.15404334435097
patch: increment CaMeL Iterations CaMeL Counter ( ) ; point = current ;
rank: 119
score: 99.29790496826172
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; update CaMeL Jacobian ( ) ;
rank: 119
score: 99.18465423583984
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += 1 . 0 ;
rank: 119
score: 99.17061183763587
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ;
rank: 119
score: 99.1621029502467
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) . get CaMeL Iterations ( ) ;
rank: 119
score: 99.15371365017361
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 119
score: 99.12634955512152
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 119
score: 99.11646270751953
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ; ( ) ;
rank: 119
score: 99.08182779947917
patch: final ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 120
score: 99.2970479329427
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 120
score: 99.18447536892361
patch: x CaMeL Norm = Math . max ( x CaMeL Norm , x CaMeL Norm ) ;
rank: 120
score: 99.15958404541016
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , increment CaMeL Iterations CaMeL Counter ) ;
rank: 120
score: 99.15249399038461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = current ;
rank: 120
score: 99.11612141927084
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 120
score: 99.08987587376645
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor : 0 ;
rank: 120
score: 99.08109907670455
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ;
rank: 121
score: 99.29661051432292
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( jacobian ) ;
rank: 121
score: 99.169580078125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition = 0 ;
rank: 121
score: 99.15892537434895
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 121
score: 99.15220540364584
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , solved CaMeL Cols ) ;
rank: 121
score: 99.12516276041667
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 121
score: 99.11510213216145
patch: increment CaMeL Iterations CaMeL Counter ( * - 1 ) ;
rank: 121
score: 99.08918842516448
patch: this . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; qr CaMeL Decomposition ( ) ;
rank: 122
score: 99.18032836914062
patch: increment CaMeL Iterations CaMeL Counter -- ; x CaMeL Norm = 0 . 0 ;
rank: 122
score: 99.16953822544643
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor , x CaMeL Norm ) ; }
rank: 122
score: 99.15877685546874
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 122
score: 99.12456597222223
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , increment CaMeL Iterations CaMeL Counter ) ;
rank: 122
score: 99.11434936523438
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 123
score: 99.29529571533203
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; update CaMeL Jacobian ( ) ;
rank: 123
score: 99.18028349034927
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . update CaMeL Jacobian ( ) ;
rank: 123
score: 99.16856689453125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 123
score: 99.16066380550987
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 123
score: 99.15847938939145
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 123
score: 99.15164184570312
patch: increment CaMeL Iterations CaMeL Counter ( false , cols ) ;
rank: 123
score: 99.1230801669034
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 123
score: 99.07808061079545
patch: int * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 124
score: 99.16851806640625
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , delta , diag ) ;
rank: 124
score: 99.16041475183823
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * increment CaMeL Iterations CaMeL Counter ++ ;
rank: 124
score: 99.15126665900735
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; x CaMeL Norm = 0 ;
rank: 124
score: 99.12186279296876
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * $NUMBER$ ) ;
rank: 124
score: 99.11037190755208
patch: increment CaMeL Iterations CaMeL Counter ( / - 1 ) ;
rank: 124
score: 99.08743990384616
patch: increment CaMeL Iterations CaMeL Counter ( + first CaMeL Iteration ) ;
rank: 124
score: 99.07713826497395
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ 1 ) ;
rank: 125
score: 99.29373168945312
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( diag ) ;
rank: 125
score: 99.17974494485294
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 125
score: 99.168359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = true ;
rank: 125
score: 99.15965857872597
patch: while ( true ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 125
score: 99.151171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 0 ;
rank: 125
score: 99.121044921875
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 125
score: 99.10914916992188
patch: else increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 125
score: 99.08696546052632
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 125
score: 99.07674153645833
patch: increment CaMeL Iterations CaMeL Counter ( 1 , 0 ) ;
rank: 126
score: 99.16813858695652
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ;
rank: 126
score: 99.15675184461806
patch: } increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 126
score: 99.10882568359375
patch: increment CaMeL Iterations CaMeL Counter < 1 ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 126
score: 99.08695475260417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( )
rank: 126
score: 99.0747539813702
patch: increment CaMeL Iterations CaMeL Counter ( [ - 1 ] ) ;
rank: 127
score: 99.17752414279514
patch: increment CaMeL Iterations CaMeL Counter ( point ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 127
score: 99.15057927911931
patch: increment CaMeL Iterations CaMeL Counter ( false , ) ;
rank: 127
score: 99.12032063802083
patch: increment CaMeL Iterations CaMeL Counter ( ) ; notify CaMeL All ( ) ;
rank: 127
score: 99.10776095920139
patch: increment CaMeL Iterations CaMeL Counter < 1 ;
rank: 127
score: 99.07249866832386
patch: increment CaMeL Iterations CaMeL Counter ( false 1 ) ;
rank: 128
score: 99.29093070652173
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point .
rank: 128
score: 99.17741124770221
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 128
score: 99.16596221923828
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; update CaMeL Jacobian ( ) ;
rank: 128
score: 99.158203125
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 128
score: 99.15522596571181
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 128
score: 99.10636901855469
patch: logger . err ( $STRING$ ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 128
score: 99.08496704101563
patch: { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 128
score: 99.07196044921875
patch: increment CaMeL Iterations CaMeL Counter ( 1 - 1 ) ;
rank: 129
score: 99.28916625976562
patch: lm CaMeL Dir = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 129
score: 99.17727322048611
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; {
rank: 129
score: 99.1655029296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; }
rank: 129
score: 99.15681596235795
patch: c = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 129
score: 99.15399639423077
patch: increment CaMeL Iterations CaMeL Counter ( [ [ 1 ] ) ;
rank: 129
score: 99.15043131510417
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , lm CaMeL Dir ) ;
rank: 129
score: 99.119833984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 129
score: 99.106201171875
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , ) ;
rank: 129
score: 99.0847637469952
patch: increment CaMeL Iterations CaMeL Counter ( + x CaMeL Norm ) ;
rank: 129
score: 99.06857299804688
patch: increment CaMeL Iterations CaMeL Counter ( , * increment CaMeL Iterations CaMeL Counter ) ;
rank: 130
score: 99.28901977539063
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 130
score: 99.17721354166666
patch: if ( first CaMeL Iteration ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 130
score: 99.15678267045455
patch: r = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 130
score: 99.15035247802734
patch: if ( first CaMeL Iteration ) { x CaMeL Norm = 0 . 0 ;
rank: 130
score: 99.11897416548295
patch: increment CaMeL Iterations CaMeL Counter ( start , ) ;
rank: 130
score: 99.10601196289062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int
rank: 130
score: 99.08401828342014
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 130
score: 99.0684814453125
patch: increment CaMeL Iterations CaMeL Counter > 1 ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 131
score: 99.17650689019098
patch: if ( x CaMeL Norm == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 131
score: 99.16074090254934
patch: increment CaMeL Iterations CaMeL Counter ( ) ; initial CaMeL Step CaMeL Bound CaMeL Factor ( ) ;
rank: 131
score: 99.15641276041667
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 131
score: 99.14978841145833
patch: lm CaMeL Par = 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 131
score: 99.117626953125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 131
score: 99.10568033854166
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 131
score: 99.06825949928977
patch: increment CaMeL Iterations CaMeL Counter ( 0 1 ) ;
rank: 132
score: 99.15824751420455
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 132
score: 99.15558539496527
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 132
score: 99.15236529181985
patch: if ( increment CaMeL Iterations CaMeL Counter > ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 132
score: 99.14954331341912
patch: increment CaMeL Iterations CaMeL Counter < cols ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 132
score: 99.10552978515625
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 132
score: 99.06758256392045
patch: / ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 133
score: 99.15511067708333
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 133
score: 99.152294921875
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 133
score: 99.14924621582031
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( residuals ) ;
rank: 133
score: 99.11719970703125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + 1 ) ;
rank: 133
score: 99.10472106933594
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter > 0 ;
rank: 133
score: 99.08289292279412
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 133
score: 99.06725056966145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; }
rank: 134
score: 99.28715376420455
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( new
rank: 134
score: 99.17237046185662
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 134
score: 99.15623837425595
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 134
score: 99.15370008680556
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 134
score: 99.15213623046876
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 134
score: 99.1160659790039
patch: old CaMeL X [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 134
score: 99.1044413248698
patch: m $NUMBER$ = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 134
score: 99.08261447482639
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; try
rank: 135
score: 99.28626953125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . ) ;
rank: 135
score: 99.17234700520834
patch: increment CaMeL Iterations CaMeL Counter ++ ; boolean first CaMeL Iteration = true ;
rank: 135
score: 99.15270317925348
patch: increment CaMeL Iterations CaMeL Counter ( start ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 135
score: 99.15155792236328
patch: increment CaMeL Iterations CaMeL Counter ( 1 , increment CaMeL Iterations CaMeL Counter ) ;
rank: 135
score: 99.11487397693452
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; this . increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 135
score: 99.10428873697917
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) ) ;
rank: 135
score: 99.06597430889423
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) 1 ) {
rank: 136
score: 99.28584558823529
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new double [ cols ] ;
rank: 136
score: 99.1547320822011
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 136
score: 99.15191359747024
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 136
score: 99.1508056640625
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 136
score: 99.14816123560855
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols && increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 136
score: 99.11421283922698
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * ) ;
rank: 136
score: 99.10389927455357
patch: System . out . ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 137
score: 99.28489176432292
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( false ) ;
rank: 137
score: 99.1715446920956
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 1 . 0 ;
rank: 137
score: 99.15354817708334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = null ;
rank: 137
score: 99.15125947840073
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( current ) ) ;
rank: 137
score: 99.15046037946429
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; / * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 137
score: 99.11273193359375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * increment CaMeL Iterations CaMeL Counter ) ;
rank: 137
score: 99.10298665364583
patch: result [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 137
score: 99.06479116586539
patch: increment CaMeL Iterations CaMeL Counter ( - [ 1 ] ) ;
rank: 138
score: 99.28253851996527
patch: new = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 138
score: 99.17099178538604
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 138
score: 99.15349786931819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 138
score: 99.15090707632211
patch: while ( true ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 138
score: 99.1475830078125
patch: increment CaMeL Iterations CaMeL Counter ( cols , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 138
score: 99.11257595486111
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( ) ;
rank: 138
score: 99.10284978693181
patch: value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 138
score: 99.06394449869792
patch: increment CaMeL Iterations CaMeL Counter ( 1 + $NUMBER$ ) ;
rank: 139
score: 99.17024739583333
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( diag ) ;
rank: 139
score: 99.1530428799716
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ;
rank: 139
score: 99.15020073784723
patch: if ( increment CaMeL Iterations CaMeL Counter < 1 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 139
score: 99.1501400596217
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 139
score: 99.14619954427083
patch: increment CaMeL Iterations CaMeL Counter ( - 0 , x CaMeL Norm ) ;
rank: 139
score: 99.10272216796875
patch: Iterations [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 139
score: 99.07774769176136
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / ;
rank: 139
score: 99.06304931640625
patch: if ( list != null ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 140
score: 99.28217022235577
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( true )
rank: 140
score: 99.16798231336806
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; qr CaMeL Decomposition ( ) ;
rank: 140
score: 99.15292358398438
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , jac CaMeL Norm ) ;
rank: 140
score: 99.1498779296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 140
score: 99.14986843532986
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 140
score: 99.14434407552083
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ] , x CaMeL Norm ) ;
rank: 140
score: 99.10224914550781
patch: increment CaMeL Iterations CaMeL Counter ( ( increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 140
score: 99.06183733258929
patch: System . out . { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 141
score: 99.16682703354779
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 141
score: 99.15271606445313
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( residuals ) ;
rank: 141
score: 99.14971923828125
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 141
score: 99.14413791232639
patch: if ( first CaMeL Iteration ) { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 141
score: 99.11171177455357
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 141
score: 99.07432250976562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 141
score: 99.06171123798077
patch: increment CaMeL Iterations CaMeL Counter ( [ - 0 ] ) ;
rank: 142
score: 99.16577826605902
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation ) ;
rank: 142
score: 99.14925130208333
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 142
score: 99.1492207845052
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 142
score: 99.14396158854167
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , first CaMeL Iteration ) ;
rank: 142
score: 99.11125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter , ) ;
rank: 142
score: 99.10105895996094
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter = ( ) ;
rank: 143
score: 99.2815472146739
patch: increment CaMeL Iterations CaMeL Counter ( - ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) ) ;
rank: 143
score: 99.16483561197917
patch: result = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 143
score: 99.14863024259868
patch: if ( increment CaMeL Iterations CaMeL Counter <= ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 143
score: 99.11122639973958
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ;
rank: 143
score: 99.10096740722656
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter < 1 ;
rank: 143
score: 99.07346801757812
patch: this . current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 144
score: 99.16410522460937
patch: increment CaMeL Iterations CaMeL Counter ( point ) ;
rank: 144
score: 99.14820498511905
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 144
score: 99.14215446920956
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 0 . 1 ;
rank: 144
score: 99.10096232096355
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) )
rank: 145
score: 99.16407877604166
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm = 0 . 0 ;
rank: 145
score: 99.148681640625
patch: increment CaMeL Iterations CaMeL Counter * initial CaMeL Step CaMeL Bound CaMeL Factor ( ) ;
rank: 145
score: 99.14854029605263
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 145
score: 99.14197649274554
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( point , objective ) ;
rank: 145
score: 99.10041155133929
patch: increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter ;
rank: 146
score: 99.1635806435033
patch: x CaMeL Norm = Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 146
score: 99.14834449404762
patch: if ( this . increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 146
score: 99.14745154747597
patch: current = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 146
score: 99.1414794921875
patch: increment CaMeL Iterations CaMeL Counter ( false , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 146
score: 99.10036996694711
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) {
rank: 147
score: 99.28023097826087
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this ;
rank: 147
score: 99.14798312717014
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ! increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 147
score: 99.14696502685547
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; lm CaMeL Par = 0 ;
rank: 147
score: 99.09996795654297
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 147
score: 99.0726318359375
patch: increment CaMeL Iterations CaMeL Counter ( residuals , objective ) ;
rank: 148
score: 99.27979532877605
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( 0 ) ;
rank: 148
score: 99.162841796875
patch: d = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 148
score: 99.14655303955078
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 148
score: 99.14583333333333
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols ) ;
rank: 148
score: 99.1405388327206
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / lm CaMeL Par = 0 ;
rank: 148
score: 99.10841652199075
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . ) ;
rank: 148
score: 99.07253689236111
patch: list = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 148
score: 99.05712890625
patch: increment CaMeL Iterations CaMeL Counter 0 ( ) ;
rank: 149
score: 99.27971055772569
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 149
score: 99.16277398003473
patch: x CaMeL Norm = Math . sqrt ( x CaMeL Norm , x CaMeL Norm ) ;
rank: 149
score: 99.1464335123698
patch: int value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 149
score: 99.14639986478366
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return null ; }
rank: 149
score: 99.14038848876953
patch: if ( first CaMeL Iteration ) { x CaMeL Norm += 0 . 0 ;
rank: 149
score: 99.10694715711806
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 149
score: 99.0989990234375
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 149
score: 99.07144165039062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else update CaMeL Jacobian ( ) ;
rank: 149
score: 99.05660574776786
patch: if ( ! ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 150
score: 99.27910020616319
patch: point = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 150
score: 99.16203756893383
patch: qr CaMeL Decomposition = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 150
score: 99.145751953125
patch: current = increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 150
score: 99.14557756696429
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , Math . sqrt ( x CaMeL Norm ) ) ;
rank: 150
score: 99.10636821546052
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 150
score: 99.09861755371094
patch: increment CaMeL Iterations CaMeL Counter ( this . increment CaMeL Iterations CaMeL Counter ) ;
rank: 150
score: 99.07128143310547
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ; }
rank: 150
score: 99.0563252766927
patch: increment CaMeL Iterations CaMeL Counter ( 1 , 1 ) ;
rank: 151
score: 99.16200166590073
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter 1 = 0 ;
rank: 151
score: 99.14534135298295
patch: b = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 151
score: 99.14004720052084
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; update CaMeL Jacobian ( ) ;
rank: 151
score: 99.10537574404762
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 151
score: 99.07062530517578
patch: event = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 152
score: 99.2779296875
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ,
rank: 152
score: 99.16181098090277
patch: x CaMeL Norm = 0 . 0 ;
rank: 152
score: 99.14462515024039
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 152
score: 99.1438321200284
patch: increment CaMeL Iterations CaMeL Counter ( update CaMeL Residuals CaMeL And CaMeL Cost ( ) , x CaMeL Norm ) ;
rank: 152
score: 99.10532924107143
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 152
score: 99.06969342912946
patch: increment CaMeL Iterations CaMeL Counter ( residuals , first CaMeL Iteration ) ;
rank: 152
score: 99.05587768554688
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ $NUMBER$ ) ;
rank: 153
score: 99.27773030598958
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( $NUMBER$ ) ;
rank: 153
score: 99.1458675986842
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 153
score: 99.14349920099431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 153
score: 99.14287860576923
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 153
score: 99.13983154296875
patch: increment CaMeL Iterations CaMeL Counter ( cols , objective ) ;
rank: 153
score: 99.10501534598214
patch: int CaMeL Value = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 153
score: 99.05585271661931
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ $NUMBER$ ) ;
rank: 154
score: 99.27754720052083
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( get ) ;
rank: 154
score: 99.16137017144098
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( objective ) ;
rank: 154
score: 99.14546926398026
patch: p = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 154
score: 99.14277729235198
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = this ; update CaMeL Jacobian ( ) ;
rank: 154
score: 99.1423107328869
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 154
score: 99.10392252604167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 154
score: 99.0936279296875
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) {
rank: 154
score: 99.06778293185764
patch: -- increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 154
score: 99.0550537109375
patch: increment CaMeL Iterations CaMeL Counter ( 1 - $NUMBER$ ) ;
rank: 155
score: 99.27749488467262
patch: synchronized ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 155
score: 99.14535183376736
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 155
score: 99.14219156901042
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; qr CaMeL Decomposition ( ) ;
rank: 155
score: 99.14187140213816
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 155
score: 99.13875034877232
patch: increment CaMeL Iterations CaMeL Counter ( 0 , jac CaMeL Norm ) ;
rank: 155
score: 99.10362548828125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , start ) ;
rank: 155
score: 99.09259796142578
patch: increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 155
score: 99.06722412109374
patch: increment CaMeL Iterations CaMeL Counter ( ) ; try
rank: 155
score: 99.05454508463542
patch: increment CaMeL Iterations CaMeL Counter ( , - 1 ) ;
rank: 156
score: 99.15936279296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double x CaMeL Norm = 0 . 0 ;
rank: 156
score: 99.14505004882812
patch: super . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 156
score: 99.14162083675987
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 156
score: 99.09244791666667
patch: try { increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 157
score: 99.1448974609375
patch: this . increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 157
score: 99.13765462239583
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , first CaMeL Iteration ) ;
rank: 157
score: 99.0923828125
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < 1 ;
rank: 158
score: 99.27288818359375
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( true ) ;
rank: 158
score: 99.15908813476562
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 158
score: 99.14484252929688
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 158
score: 99.1411865234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = $NUMBER$ ;
rank: 158
score: 99.14115397135417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; get CaMeL Iterations ( ) ;
rank: 158
score: 99.0921122233073
patch: this . increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 158
score: 99.06642456054688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return current ;
rank: 159
score: 99.27180281929348
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) 0 ;
rank: 159
score: 99.1589111328125
patch: increment CaMeL Iterations CaMeL Counter ( 1 ] , x CaMeL Norm ) ;
rank: 159
score: 99.14345189144737
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 159
score: 99.14104546440973
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 159
score: 99.1357421875
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , ) ;
rank: 159
score: 99.10228474934895
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 159
score: 99.05001831054688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return
rank: 160
score: 99.15814971923828
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int first CaMeL Iteration = 0 ;
rank: 160
score: 99.14061337425595
patch: boolean first CaMeL Iteration = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 160
score: 99.14051164899554
patch: while ( false ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 160
score: 99.1346371299342
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; x CaMeL Norm += 0 . 0 ;
rank: 160
score: 99.09074401855469
patch: logger . out ( this ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 160
score: 99.06611463758681
patch: this = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 161
score: 99.27161865234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 161
score: 99.15757649739584
patch: increment CaMeL Iterations CaMeL Counter ++ ; update CaMeL Jacobian ( residuals ) ;
rank: 161
score: 99.14207056949013
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 161
score: 99.14047580295139
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * increment CaMeL Iterations CaMeL Counter ++ ;
rank: 161
score: 99.13453892299107
patch: increment CaMeL Iterations CaMeL Counter ( null , x CaMeL Norm ) ;
rank: 161
score: 99.10127563476563
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 1 ) ;
rank: 161
score: 99.04844156901042
patch: increment CaMeL Iterations CaMeL Counter ( false - 1 ) ;
rank: 162
score: 99.27132515285327
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point +
rank: 162
score: 99.15641021728516
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += 0 . 0 ;
rank: 162
score: 99.14043634588069
patch: cur = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 162
score: 99.13988095238095
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = Math . sqrt ( x CaMeL Norm ) ;
rank: 162
score: 99.13413307883523
patch: increment CaMeL Iterations CaMeL Counter ( true , ) ;
rank: 162
score: 99.10032348632812
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 162
score: 99.06520589192708
patch: ae = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 163
score: 99.27045232599431
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 163
score: 99.06513129340277
patch: z = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 163
score: 99.04695638020833
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , $NUMBER$ ) ;
rank: 164
score: 99.26917266845703
patch: if ( x CaMeL Norm ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 164
score: 99.14192338423295
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 164
score: 99.14035373263889
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 164
score: 99.13226787860577
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm = 0 ;
rank: 164
score: 99.09979654947917
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set ( ) ;
rank: 164
score: 99.06445990668402
patch: increment CaMeL Iterations CaMeL Counter ( length ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 165
score: 99.26844618055556
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = first CaMeL Iteration ;
rank: 165
score: 99.15535053453948
patch: increment CaMeL Iterations CaMeL Counter ++ ; update CaMeL Residuals CaMeL And CaMeL Cost ( point ) ;
rank: 165
score: 99.14117986505681
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 165
score: 99.1378173828125
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; lm CaMeL Par = 0 ;
rank: 165
score: 99.13213704427083
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm += 0 . 0 ;
rank: 165
score: 99.08806818181819
patch: callback . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 165
score: 99.04613240559895
patch: increment CaMeL Iterations CaMeL Counter ( [ 0 ] ) ;
rank: 166
score: 99.26842543658088
patch: = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 166
score: 99.15484619140625
patch: f = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 166
score: 99.140673828125
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 166
score: 99.14018169202302
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 166
score: 99.13780975341797
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration , x CaMeL Norm ) ;
rank: 166
score: 99.13210623604911
patch: increment CaMeL Iterations CaMeL Counter ( current , x CaMeL Norm ) ;
rank: 166
score: 99.09737141927083
patch: ) increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 166
score: 99.0858905498798
patch: increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 166
score: 99.064306640625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( current ) ;
rank: 166
score: 99.04561673677884
patch: int * = ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 167
score: 99.26828182444854
patch: increment CaMeL Iterations CaMeL Counter ( { increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 167
score: 99.14012451171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 167
score: 99.13987630208334
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 167
score: 99.12926432291667
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 167
score: 99.09713745117188
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , $NUMBER$ ) ;
rank: 167
score: 99.08582153320313
patch: increment CaMeL Iterations CaMeL Counter < - 1 ;
rank: 167
score: 99.06236572265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair = current ;
rank: 167
score: 99.04525553385416
patch: if ( < 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 168
score: 99.13975941051136
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 168
score: 99.13680013020833
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; lm CaMeL Dir = 0 ;
rank: 168
score: 99.12914276123047
patch: synchronized ( lm CaMeL Dir ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 168
score: 99.0854263305664
patch: throw new Runtime CaMeL Exception ( $STRING$ + increment CaMeL Iterations CaMeL Counter ) ;
rank: 168
score: 99.06092664930556
patch: increment CaMeL Iterations CaMeL Counter ( ] ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 168
score: 99.04505504261364
patch: final ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 169
score: 99.26570638020833
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( new ) ;
rank: 169
score: 99.13971910978618
patch: increment CaMeL Iterations CaMeL Counter ( ) ; delta = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 169
score: 99.13777669270833
patch: this . increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 169
score: 99.13662540211396
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , x CaMeL Norm ) ; }
rank: 169
score: 99.12837727864583
patch: increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 169
score: 99.09614701704545
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; }
rank: 169
score: 99.08536783854167
patch: return new . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 169
score: 99.06068115234375
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; update CaMeL Jacobian ( ) ;
rank: 170
score: 99.265634765625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current . increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ;
rank: 170
score: 99.13954162597656
patch: increment CaMeL Iterations CaMeL Counter ( Integer . parse CaMeL Int ( ) ) ;
rank: 170
score: 99.13771685431985
patch: this . increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 170
score: 99.13660249255952
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 170
score: 99.06060791015625
patch: retval = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 170
score: 99.04460005326705
patch: increment CaMeL Iterations CaMeL Counter ( 1 , ) ;
rank: 171
score: 99.15189401726974
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , x CaMeL Norm ) ;
rank: 171
score: 99.13944498697917
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 171
score: 99.13758609169408
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 171
score: 99.0845458984375
patch: for ( ; ; ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 171
score: 99.0601577758789
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( true ) ;
rank: 171
score: 99.0442606608073
patch: final ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 172
score: 99.2648417154948
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( [ ] ;
rank: 172
score: 99.13888113839286
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . ;
rank: 172
score: 99.13719482421875
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 172
score: 99.1361083984375
patch: increment CaMeL Iterations CaMeL Counter ( update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ) ;
rank: 172
score: 99.12563907398896
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += $NUMBER$ . 0 ;
rank: 172
score: 99.09453735351562
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) - start ) ;
rank: 172
score: 99.05928548177083
patch: increment CaMeL Iterations CaMeL Counter ( residuals , residuals ) ;
rank: 172
score: 99.04412372295673
patch: increment CaMeL Iterations CaMeL Counter ( - [ $NUMBER$ ] ) ;
rank: 173
score: 99.26464029947917
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 173
score: 99.13846028645834
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy ( ) ;
rank: 173
score: 99.1359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( 0 ) ;
rank: 173
score: 99.12552218967014
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , lm CaMeL Par ) ;
rank: 173
score: 99.09384155273438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . exit ( 0 ) ;
rank: 173
score: 99.08437674386161
patch: increment CaMeL Iterations CaMeL Counter ; return increment CaMeL Iterations CaMeL Counter ;
rank: 173
score: 99.05832926432292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , ) ;
rank: 173
score: 99.04409790039062
patch: if ( current != null ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 174
score: 99.15102132161458
patch: increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 174
score: 99.13583519345238
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 174
score: 99.13563121448864
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 174
score: 99.12534743088942
patch: increment CaMeL Iterations CaMeL Counter ( * x CaMeL Norm ) ;
rank: 174
score: 99.08377511160714
patch: logger . out ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 174
score: 99.05813937717014
patch: m = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 174
score: 99.04391479492188
patch: increment CaMeL Iterations CaMeL Counter ( 0 - 0 ) ;
rank: 175
score: 99.26111857096355
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( $STRING$ ) ;
rank: 175
score: 99.15085274832589
patch: increment CaMeL Iterations CaMeL Counter ++ ; first CaMeL Iteration = 0 ;
rank: 175
score: 99.13799727590461
patch: inst = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 175
score: 99.13540167557566
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 175
score: 99.13538818359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par . q CaMeL Ty ( residuals ) ;
rank: 175
score: 99.12526041666666
patch: increment CaMeL Iterations CaMeL Counter < 0 ; update CaMeL Jacobian ( ) ;
rank: 175
score: 99.093212890625
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ,
rank: 175
score: 99.0826885516827
patch: increment CaMeL Iterations CaMeL Counter += increment CaMeL Iterations CaMeL Counter ;
rank: 175
score: 99.05552321213942
patch: n = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 175
score: 99.04366048177083
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + $NUMBER$ ) ;
rank: 176
score: 99.26099795386905
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ;
rank: 176
score: 99.13783482142857
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 176
score: 99.13538208007813
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 176
score: 99.13518928079044
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; lm CaMeL Par = 0 ;
rank: 176
score: 99.1248779296875
patch: increment CaMeL Iterations CaMeL Counter > 0 ; update CaMeL Jacobian ( ) ;
rank: 176
score: 99.09312947591145
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X ) ;
rank: 176
score: 99.0826416015625
patch: increment CaMeL Iterations CaMeL Counter ( * 1 ) ;
rank: 176
score: 99.05412946428571
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) == 0 ) {
rank: 176
score: 99.0433349609375
patch: ) { ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 177
score: 99.25977325439453
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } x CaMeL Norm = 0 ;
rank: 177
score: 99.15010340073529
patch: qr CaMeL Decomposition = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 177
score: 99.13753255208333
patch: double increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 177
score: 99.13443697415866
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = 0 ;
rank: 177
score: 99.13396606445312
patch: callback . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 177
score: 99.12421332465277
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 177
score: 99.08263221153847
patch: if ( ) { increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 177
score: 99.05388726128473
patch: this . update CaMeL Jacobian ( ) ;
rank: 177
score: 99.04331970214844
patch: increment CaMeL Iterations CaMeL Counter ( && increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 178
score: 99.258330078125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . point ,
rank: 178
score: 99.14992947048611
patch: qr CaMeL Decomposition = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 178
score: 99.13291529605263
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 178
score: 99.12334650213069
patch: increment CaMeL Iterations CaMeL Counter ( - cols ) ;
rank: 178
score: 99.09206973805146
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Name ( ) ;
rank: 178
score: 99.05349731445312
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 178
score: 99.04320068359375
patch: assert increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 179
score: 99.25679016113281
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; update CaMeL Jacobian ( ) ;
rank: 179
score: 99.14990234375
patch: prev = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 179
score: 99.13261108398437
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 179
score: 99.12284581801471
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 0 . $NUMBER$ ;
rank: 179
score: 99.082080078125
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 179
score: 99.05348036024306
patch: ++ increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 179
score: 99.04288736979167
patch: increment CaMeL Iterations CaMeL Counter ( 0 , 0 ) ;
rank: 180
score: 99.2567074424342
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ; update CaMeL Jacobian ( ) ;
rank: 180
score: 99.14988080193015
patch: x CaMeL Norm = 0 . 0 ; x CaMeL Norm += 1 . 0 ;
rank: 180
score: 99.13406372070312
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 180
score: 99.12226019965277
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , x CaMeL Norm ) ;
rank: 180
score: 99.0914776141827
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) , ;
rank: 180
score: 99.08203887939453
patch: try { increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 180
score: 99.04248046875
patch: increment CaMeL Iterations CaMeL Counter ( ) { ) ;
rank: 181
score: 99.14923502604167
patch: increment CaMeL Iterations CaMeL Counter ++ ; if ( first CaMeL Iteration ) {
rank: 181
score: 99.13656277126736
patch: increment CaMeL Iterations CaMeL Counter ++ ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 181
score: 99.13321627103366
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = this ;
rank: 181
score: 99.13192138671874
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) == ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 181
score: 99.12159220377605
patch: increment CaMeL Iterations CaMeL Counter ( true , cols ) ;
rank: 181
score: 99.09119762073864
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) , ) ;
rank: 181
score: 99.08164625901442
patch: ) { this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 181
score: 99.05216979980469
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( null ) ;
rank: 181
score: 99.04229266826923
patch: return ( * increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 182
score: 99.14821951729911
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ;
rank: 182
score: 99.13590698242187
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 182
score: 99.13209635416666
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = ) ;
rank: 182
score: 99.1205546061198
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 182
score: 99.09111328125
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ;
rank: 183
score: 99.1316805752841
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 183
score: 99.13145751953125
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; x CaMeL Norm = 0 . 0 ;
rank: 183
score: 99.11932373046875
patch: increment CaMeL Iterations CaMeL Counter ( true , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 183
score: 99.09036020132211
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . ;
rank: 183
score: 99.0813739483173
patch: increment CaMeL Iterations CaMeL Counter ( - 1 + 0 ) ;
rank: 183
score: 99.05083550347223
patch: out = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 183
score: 99.03946940104167
patch: increment CaMeL Iterations CaMeL Counter ( ) + - 1 ;
rank: 184
score: 99.13585408528645
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 184
score: 99.13158017113095
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 184
score: 99.08039093017578
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ; int
rank: 184
score: 99.03933715820312
patch: increment CaMeL Iterations CaMeL Counter ( 1 , false ) ;
rank: 185
score: 99.14618278952206
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( x CaMeL Norm ) ;
rank: 185
score: 99.13576253255208
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 185
score: 99.13153076171875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 185
score: 99.12977905273438
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , x CaMeL Norm , x CaMeL Norm ) ;
rank: 185
score: 99.11765543619792
patch: increment CaMeL Iterations CaMeL Counter ( 0 , objective ) ;
rank: 185
score: 99.07982381184895
patch: try { increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 185
score: 99.03919677734375
patch: increment CaMeL Iterations CaMeL Counter ( name ) ;
rank: 186
score: 99.25282287597656
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } qr CaMeL Decomposition ( ) ;
rank: 186
score: 99.14589556525735
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 0 . 0 ; }
rank: 186
score: 99.13104858398438
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 186
score: 99.12940063476563
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * solved CaMeL Cols ) ;
rank: 186
score: 99.11714390345982
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , solved CaMeL Cols ) ;
rank: 186
score: 99.0889423076923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return - 1 ;
rank: 186
score: 99.07837727864583
patch: this . increment CaMeL Iterations CaMeL Counter ( ( int ) 1 ) ;
rank: 186
score: 99.0473876953125
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; qr CaMeL Decomposition ( ) ;
rank: 187
score: 99.25274979440789
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; if ( first CaMeL Iteration )
rank: 187
score: 99.13471984863281
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 187
score: 99.13064093338816
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 187
score: 99.12899959788604
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = 0 . 0 ;
rank: 187
score: 99.07816314697266
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 187
score: 99.04729865579044
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; try {
rank: 187
score: 99.03890991210938
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ - $NUMBER$ ) ;
rank: 188
score: 99.2519921875
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( new int [ ]
rank: 188
score: 99.14449734157986
patch: if ( x CaMeL Norm != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 188
score: 99.13303444602273
patch: inst = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 188
score: 99.1297543174342
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 188
score: 99.128466796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = ) ;
rank: 188
score: 99.11677381727431
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 188
score: 99.08842637803819
patch: increment CaMeL Iterations CaMeL Counter ( current , current . get CaMeL Iterations ( ) ) ;
rank: 188
score: 99.07810974121094
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 188
score: 99.047119140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; continue ;
rank: 188
score: 99.03868519176136
patch: increment CaMeL Iterations CaMeL Counter ( 0 $NUMBER$ ) ;
rank: 189
score: 99.12972861842105
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 189
score: 99.11526007401316
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 189
score: 99.0779317220052
patch: increment CaMeL Iterations CaMeL Counter < ( - 1 ) ;
rank: 189
score: 99.04708523220486
patch: try { update CaMeL Jacobian ( ) ;
rank: 189
score: 99.03834025065105
patch: increment CaMeL Iterations CaMeL Counter ( 1 1 1 ) ;
rank: 190
score: 99.25072224934895
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective
rank: 190
score: 99.14376068115234
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = $NUMBER$ . 0 ;
rank: 190
score: 99.13259548611111
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ;
rank: 190
score: 99.12967354910714
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 190
score: 99.07712624289773
patch: location = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 190
score: 99.04620040090461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( + 1 ) ;
rank: 190
score: 99.03822326660156
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) .
rank: 191
score: 99.25043083639706
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } if ( first CaMeL Iteration ) {
rank: 191
score: 99.14372702205883
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 191
score: 99.13218688964844
patch: increment CaMeL Iterations CaMeL Counter ++ ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 191
score: 99.12882080078126
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 191
score: 99.12673950195312
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; qr CaMeL Decomposition ( ) ;
rank: 191
score: 99.07555338541667
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 191
score: 99.03786214192708
patch: increment CaMeL Iterations CaMeL Counter ( - != 0 ) ;
rank: 192
score: 99.13166889391448
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 192
score: 99.128759765625
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 192
score: 99.12627563476562
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( false ) ;
rank: 192
score: 99.08607991536458
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return null ;
rank: 192
score: 99.07553335336539
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if (
rank: 192
score: 99.0456875887784
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this .
rank: 192
score: 99.03668682391827
patch: if ( = ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 193
score: 99.14354790581598
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 193
score: 99.13082546657986
patch: increment CaMeL Iterations CaMeL Counter = ) ; current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 193
score: 99.12853064903847
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) continue ;
rank: 193
score: 99.1258544921875
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * permutation ) ;
rank: 193
score: 99.11416965060764
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( cols ) ;
rank: 193
score: 99.07515775240384
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ;
rank: 193
score: 99.03662109375
patch: if ( * ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 194
score: 99.12791683799342
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 194
score: 99.0751444498698
patch: m 1 = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 194
score: 99.04475483141448
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( - 1 ) ;
rank: 195
score: 99.14255777994792
patch: s = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 195
score: 99.12791041324013
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 195
score: 99.12566528320312
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( true ) ;
rank: 195
score: 99.11339569091797
patch: while ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 195
score: 99.0858866373698
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + increment CaMeL Iterations CaMeL Counter ) ;
rank: 195
score: 99.07464599609375
patch: finally { this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 195
score: 99.0445620888158
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , residuals ) ;
rank: 196
score: 99.1423583984375
patch: increment CaMeL Iterations CaMeL Counter ++ ; boolean first CaMeL Iteration = false ;
rank: 196
score: 99.1129150390625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = $NUMBER$ . 0 ;
rank: 196
score: 99.07435960036058
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 196
score: 99.0435791015625
patch: entry = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 196
score: 99.0348612467448
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; ) ;
rank: 197
score: 99.14225260416667
patch: increment CaMeL Iterations CaMeL Counter -= initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 197
score: 99.12642629523026
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 197
score: 99.11276041666666
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , jac CaMeL Norm ) ;
rank: 197
score: 99.08540482954545
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 197
score: 99.03475952148438
patch: increment CaMeL Iterations CaMeL Counter ( - * increment CaMeL Iterations CaMeL Counter ) ;
rank: 198
score: 99.14139811197917
patch: increment CaMeL Iterations CaMeL Counter < Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 198
score: 99.12889268663194
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 198
score: 99.12623355263158
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 198
score: 99.12257690429688
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; x CaMeL Norm += 0 . 0 ;
rank: 198
score: 99.11261664496527
patch: increment CaMeL Iterations CaMeL Counter <= solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 198
score: 99.08539225260417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . exit ( ) ;
rank: 198
score: 99.07392578125
patch: this . increment CaMeL Iterations CaMeL Counter ( ( int ) $NUMBER$ ) ;
rank: 198
score: 99.0424560546875
patch: callback . qr CaMeL Decomposition ( ) ; qr CaMeL Decomposition ( ) ;
rank: 198
score: 99.03429236778847
patch: increment CaMeL Iterations CaMeL Counter ( [ - $NUMBER$ ] ) ;
rank: 199
score: 99.14124820106908
patch: increment CaMeL Iterations CaMeL Counter ++ ; Vectorial CaMeL Point CaMeL Value CaMeL Pair = current ;
rank: 199
score: 99.12873186383929
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 199
score: 99.12614360608552
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 199
score: 99.12234497070312
patch: boolean first CaMeL Iteration = false ;
rank: 199
score: 99.08478746916118
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 199
score: 99.07350260416666
patch: this . increment CaMeL Iterations CaMeL Counter ( - 1 , 0 ) ;
rank: 199
score: 99.04215494791667
patch: t = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 200
score: 99.24418501420455
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 200
score: 99.12791041324013
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 200
score: 99.12594604492188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 200
score: 99.12220982142857
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 200
score: 99.11219200721153
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols - $NUMBER$ ;
rank: 200
score: 99.073486328125
patch: if ( false ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 200
score: 99.04136827256944
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; /
rank: 201
score: 99.12591873972039
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 201
score: 99.121435546875
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 201
score: 99.11184256417411
patch: increment CaMeL Iterations CaMeL Counter ( false , jac CaMeL Norm ) ;
rank: 201
score: 99.07316450639205
patch: j = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 201
score: 99.04116482204861
patch: cur = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 202
score: 99.24319458007812
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; update CaMeL Jacobian ( ) ;
rank: 202
score: 99.1397235576923
patch: increment CaMeL Iterations CaMeL Counter ( - x CaMeL Norm ) ;
rank: 202
score: 99.12677360983456
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Length ( ) ;
rank: 202
score: 99.1258544921875
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 202
score: 99.1208026592548
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; }
rank: 202
score: 99.11156116832386
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) ;
rank: 202
score: 99.08396402994792
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return true ;
rank: 202
score: 99.04111735026042
patch: p = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 202
score: 99.03355189732143
patch: int * * * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 203
score: 99.12615645559211
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 203
score: 99.125
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 203
score: 99.12079535590277
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; update CaMeL Jacobian ( ) ;
rank: 203
score: 99.07268817608173
patch: result = this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 203
score: 99.04075113932292
patch: queue = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 203
score: 99.03338153545673
patch: increment CaMeL Iterations CaMeL Counter ( 1 [ 0 ] ) ;
rank: 204
score: 99.1389519186581
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ;
rank: 204
score: 99.1258609169408
patch: increment CaMeL Iterations CaMeL Counter ( ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 204
score: 99.11056179470486
patch: increment CaMeL Iterations CaMeL Counter ( point , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 204
score: 99.08354048295455
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 204
score: 99.04027642144098
patch: head = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 204
score: 99.03330891927084
patch: if ( this != null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 205
score: 99.241943359375
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 205
score: 99.13885139016544
patch: increment CaMeL Iterations CaMeL Counter ( - initial CaMeL Step CaMeL Bound CaMeL Factor ) ;
rank: 205
score: 99.12367007606908
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 205
score: 99.1196533203125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = false ;
rank: 205
score: 99.10971408420139
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 205
score: 99.08314208984375
patch: increment CaMeL Iterations CaMeL Counter ( start ) ;
rank: 205
score: 99.03330641526442
patch: ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 206
score: 99.12349660773026
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 206
score: 99.11953590029762
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 206
score: 99.08265991210938
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) / $NUMBER$ ) ;
rank: 206
score: 99.07142639160156
patch: increment CaMeL Iterations CaMeL Counter < ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 206
score: 99.03913430606617
patch: increment CaMeL Iterations CaMeL Counter ( , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 206
score: 99.03274536132812
patch: ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 207
score: 99.1382080078125
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( diag ) ;
rank: 207
score: 99.1234600360577
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 207
score: 99.10947672526042
patch: pj = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 207
score: 99.08217210036058
patch: increment CaMeL Iterations CaMeL Counter ( current , current , ) ;
rank: 207
score: 99.07090657552084
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < $NUMBER$ ;
rank: 207
score: 99.03909640842014
patch: state = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 208
score: 99.24051063939145
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 208
score: 99.13681369357639
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] = initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 208
score: 99.1246273643092
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 208
score: 99.12313682154605
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 208
score: 99.11895197088069
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( lm CaMeL Par ) ;
rank: 208
score: 99.08180930397727
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 208
score: 99.07036884014423
patch: increment CaMeL Iterations CaMeL Counter ( / 1 . 0 ) ;
rank: 208
score: 99.03896755642361
patch: tree = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 208
score: 99.0309326171875
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 209
score: 99.24027506510417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ;
rank: 209
score: 99.13607788085938
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = 0 ;
rank: 209
score: 99.12458147321429
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( ) ) increment CaMeL Iterations CaMeL Counter . ;
rank: 209
score: 99.1184314546131
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = this ;
rank: 209
score: 99.10940115792411
patch: increment CaMeL Iterations CaMeL Counter ( point , solved CaMeL Cols ) ;
rank: 209
score: 99.08163452148438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ++ increment CaMeL Iterations CaMeL Counter ;
rank: 209
score: 99.06979370117188
patch: increment CaMeL Iterations CaMeL Counter ( ( increment CaMeL Iterations CaMeL Counter ) ) ;
rank: 209
score: 99.03019205729167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Exact ( ) ;
rank: 210
score: 99.24021606445312
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( ) ; }
rank: 210
score: 99.13595241970486
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } x CaMeL Norm = 0 . 0 ;
rank: 210
score: 99.11789772727273
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) ; break ;
rank: 210
score: 99.08158151726974
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 210
score: 99.06956176757812
patch: assert new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 210
score: 99.037841796875
patch: item = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 210
score: 99.027587890625
patch: increment CaMeL Iterations CaMeL Counter += ( increment CaMeL Iterations CaMeL Counter $NUMBER$ ) ;
rank: 211
score: 99.23931640625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective )
rank: 211
score: 99.13587782118056
patch: x CaMeL Norm = 0 . 0 ; } x CaMeL Norm = 0 . 0 ;
rank: 211
score: 99.11995014391448
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 211
score: 99.0814208984375
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . remove ( ) ;
rank: 211
score: 99.0686368075284
patch: table . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 211
score: 99.02656693892045
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) throws
rank: 212
score: 99.23808458116319
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ; }
rank: 212
score: 99.11991802014802
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 212
score: 99.11750030517578
patch: boolean first CaMeL Iteration = true ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 212
score: 99.10760498046875
patch: increment CaMeL Iterations CaMeL Counter ( false , point ) ;
rank: 212
score: 99.06754302978516
patch: increment CaMeL Iterations CaMeL Counter > 1 ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 212
score: 99.03662109375
patch: j = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 212
score: 99.02650960286458
patch: assert ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 213
score: 99.13535970052084
patch: increment CaMeL Iterations CaMeL Counter <= x CaMeL Norm = 0 . 0 ;
rank: 213
score: 99.12339381167763
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 213
score: 99.1195004111842
patch: if ( increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 213
score: 99.11690673828124
patch: final Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( ) ;
rank: 213
score: 99.08098493303571
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 213
score: 99.06747436523438
patch: increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter = ) ;
rank: 213
score: 99.03628700657895
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; do {
rank: 213
score: 99.0262451171875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , 1 ) ;
rank: 214
score: 99.23716430664062
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 214
score: 99.13519965277777
patch: qr CaMeL Decomposition = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( objective ) ;
rank: 214
score: 99.11924913194444
patch: increment CaMeL Iterations CaMeL Counter ( 1 , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 214
score: 99.11653900146484
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; update CaMeL Jacobian ( ) ;
rank: 214
score: 99.10737440321181
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm , first CaMeL Iteration ) ;
rank: 214
score: 99.06707000732422
patch: increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 214
score: 99.02536245492789
patch: int ( ) * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 215
score: 99.23697702508224
patch: increment CaMeL Iterations CaMeL Counter ( - 0 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 215
score: 99.13385009765625
patch: increment CaMeL Iterations CaMeL Counter ++ ; qr CaMeL Decomposition ( ) ;
rank: 215
score: 99.11851591222427
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ; ;
rank: 215
score: 99.11613633897569
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * residuals ) ;
rank: 215
score: 99.10736083984375
patch: increment CaMeL Iterations CaMeL Counter ( length , x CaMeL Norm ) ;
rank: 215
score: 99.08074951171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . sleep ( $NUMBER$ ) ;
rank: 215
score: 99.06699044363839
patch: if ( int ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 215
score: 99.03594207763672
patch: g = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 215
score: 99.0235595703125
patch: increment CaMeL Iterations CaMeL Counter ( , $NUMBER$ ) ;
rank: 216
score: 99.23682925575658
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ; }
rank: 216
score: 99.11789772727273
patch: if ( increment CaMeL Iterations CaMeL Counter != ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 216
score: 99.11609649658203
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , residuals ) ;
rank: 216
score: 99.08067016601562
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , this ) ;
rank: 216
score: 99.03518837376645
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , current ) ;
rank: 216
score: 99.02269490559895
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; ) ;
rank: 217
score: 99.2367831143466
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 217
score: 99.1334228515625
patch: increment CaMeL Iterations CaMeL Counter ++ ; current . update CaMeL Jacobian ( ) ;
rank: 217
score: 99.12249396829044
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 217
score: 99.1168212890625
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 217
score: 99.10667928059895
patch: throw new Optimization CaMeL Exception ( x CaMeL Norm ) ;
rank: 217
score: 99.08048502604167
patch: increment CaMeL Iterations CaMeL Counter ( current . ) ; increment CaMeL Iterations CaMeL Counter ( current . ) ;
rank: 217
score: 99.0665283203125
patch: j [ ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 217
score: 99.03467514935662
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ; try {
rank: 217
score: 99.0223388671875
patch: increment CaMeL Iterations CaMeL Counter ( 1 1 $NUMBER$ ) ;
rank: 218
score: 99.1219012920673
patch: while ( false ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 218
score: 99.11656494140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 218
score: 99.11491956208882
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( }
rank: 218
score: 99.10654994419643
patch: throw new Function CaMeL Evaluation CaMeL Exception ( x CaMeL Norm ) ;
rank: 218
score: 99.08042399088542
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) - increment CaMeL Iterations CaMeL Counter ) ;
rank: 218
score: 99.06512451171875
patch: this . increment CaMeL Iterations CaMeL Counter ( [ 1 ] ) ;
rank: 218
score: 99.0345458984375
patch: e = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 218
score: 99.02203369140625
patch: return * * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 219
score: 99.2363037109375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 219
score: 99.13302791819854
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 219
score: 99.12132626488095
patch: if ( ! increment CaMeL Iterations CaMeL Counter . ) { increment CaMeL Iterations CaMeL Counter . ) ; }
rank: 219
score: 99.116455078125
patch: if ( increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 219
score: 99.08036723889802
patch: start = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 219
score: 99.06473795572917
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ;
rank: 219
score: 99.03453480113636
patch: increment CaMeL Iterations CaMeL Counter ( , cols ) ;
rank: 219
score: 99.02074256310097
patch: int * * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 220
score: 99.13255550986842
patch: increment CaMeL Iterations CaMeL Counter ++ ; Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 220
score: 99.11635454963235
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 220
score: 99.11370849609375
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , delta ) ;
rank: 220
score: 99.08026733398438
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; ) ;
rank: 220
score: 99.06460571289062
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( - 1 ) ;
rank: 220
score: 99.03394317626953
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 221
score: 99.13165604440789
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = Vectorial CaMeL Point CaMeL Value CaMeL Pair ;
rank: 221
score: 99.1204769736842
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 221
score: 99.08010382401316
patch: increment CaMeL Iterations CaMeL Counter ( ) + 1 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 221
score: 99.0205307006836
patch: synchronized ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter .
rank: 222
score: 99.13067267922794
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 222
score: 99.12034098307292
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 222
score: 99.11546630859375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 222
score: 99.11322576349431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( jac CaMeL Norm ) ;
rank: 222
score: 99.10492350260417
patch: increment CaMeL Iterations CaMeL Counter < 1 ; update CaMeL Jacobian ( ) ;
rank: 222
score: 99.06454467773438
patch: try { increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 222
score: 99.03360324435764
patch: data = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 222
score: 99.02049671519886
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; ;
rank: 223
score: 99.13024088541667
patch: increment CaMeL Iterations CaMeL Counter < initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 223
score: 99.12021213107639
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 223
score: 99.11531982421874
patch: increment CaMeL Iterations CaMeL Counter ( ) ; super . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 223
score: 99.07911095252403
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 223
score: 99.06430886008523
patch: finally { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 223
score: 99.03323703342014
patch: n = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 224
score: 99.1200702373798
patch: increment CaMeL Iterations CaMeL Counter ( new Integer ( ) ) ;
rank: 224
score: 99.11505737304688
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 224
score: 99.10206434461806
patch: increment CaMeL Iterations CaMeL Counter ( this , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 224
score: 99.07910919189453
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( 0 ) ;
rank: 224
score: 99.0641620342548
patch: increment CaMeL Iterations CaMeL Counter ( / 1 , 0 ) ;
rank: 225
score: 99.13008386948529
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( cols ) ;
rank: 225
score: 99.11992730034723
patch: if ( increment CaMeL Iterations CaMeL Counter <= $NUMBER$ ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 225
score: 99.10994466145833
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 225
score: 99.07899693080357
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . stop ( ) ;
rank: 225
score: 99.06348419189453
patch: increment CaMeL Iterations CaMeL Counter < $NUMBER$ ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 225
score: 99.03157182173295
patch: increment CaMeL Iterations CaMeL Counter ( residuals , ) ;
rank: 225
score: 99.0178692157452
patch: int * * * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 226
score: 99.11425103081598
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 226
score: 99.07881496263587
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter , ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 226
score: 99.03140258789062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 226
score: 99.01764385516827
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; ; ;
rank: 227
score: 99.23358832465277
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation , objective ) ;
rank: 227
score: 99.12919921875
patch: if ( x CaMeL Norm == 0 ) {
rank: 227
score: 99.11969549005681
patch: s = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 227
score: 99.11362176192434
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 227
score: 99.10113055889423
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , cols ) ;
rank: 227
score: 99.07835804332386
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Name ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 227
score: 99.03093927556819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / /
rank: 227
score: 99.01751708984375
patch: synchronized ( current ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 228
score: 99.232666015625
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 228
score: 99.12891387939453
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 228
score: 99.11942331414474
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 228
score: 99.108447265625
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , work $NUMBER$ ) ;
rank: 228
score: 99.1009521484375
patch: increment CaMeL Iterations CaMeL Counter ( 1 , jac CaMeL Norm ) ;
rank: 228
score: 99.07784423828124
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 228
score: 99.06242231889205
patch: this . increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 228
score: 99.01727701822917
patch: Iterations [ 0 ] = ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 229
score: 99.12847900390625
patch: increment CaMeL Iterations CaMeL Counter ++ ; first CaMeL Iteration = false ;
rank: 229
score: 99.11919806985294
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 229
score: 99.11302274816177
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 229
score: 99.1005859375
patch: increment CaMeL Iterations CaMeL Counter ( this , solved CaMeL Cols ) ;
rank: 229
score: 99.06198952414773
patch: builder . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 229
score: 99.0302978515625
patch: increment CaMeL Iterations CaMeL Counter ( length ) ;
rank: 229
score: 99.01654522235577
patch: increment CaMeL Iterations CaMeL Counter ( 1 [ 1 ] ) ;
rank: 230
score: 99.23192596435547
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( this ) ;
rank: 230
score: 99.11884765625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; )
rank: 230
score: 99.11249389648438
patch: if ( increment CaMeL Iterations CaMeL Counter <= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 230
score: 99.06187337239584
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter > 0 ;
rank: 230
score: 99.01631673177083
patch: increment CaMeL Iterations CaMeL Counter ( 1 . 1 ) ;
rank: 231
score: 99.23152160644531
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; qr CaMeL Decomposition ( ) ;
rank: 231
score: 99.1278564453125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir ( ) ;
rank: 231
score: 99.11819118923611
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / increment CaMeL Iterations CaMeL Counter ++ ;
rank: 231
score: 99.11245245682566
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 231
score: 99.10026041666667
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , jac CaMeL Norm ) ;
rank: 231
score: 99.07571176382211
patch: int CaMeL Value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 231
score: 99.06166428786058
patch: this . ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 231
score: 99.02994791666667
patch: doc = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 231
score: 99.01614145132211
patch: if ( = increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 232
score: 99.2314682006836
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; update CaMeL Jacobian ( ) ;
rank: 232
score: 99.07496134440105
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , current . get CaMeL Iterations ( ) ) ;
rank: 232
score: 99.06129455566406
patch: increment CaMeL Iterations CaMeL Counter < 1 ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 232
score: 99.02960968017578
patch: inst = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 232
score: 99.01590670072116
patch: final int * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 233
score: 99.12641457950367
patch: x CaMeL Norm = 0 . 0 ; x CaMeL Norm = 1 . 0 ;
rank: 233
score: 99.11749674479167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . ) ;
rank: 233
score: 99.11133490668402
patch: this . increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 233
score: 99.10642787388393
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , diag ) ;
rank: 233
score: 99.09926350911458
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm , x CaMeL Norm ) ;
rank: 233
score: 99.07478332519531
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) )
rank: 233
score: 99.06065538194444
patch: increment CaMeL Iterations CaMeL Counter > 0 ;
rank: 233
score: 99.02960883246527
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; qr CaMeL Decomposition ( ) ;
rank: 233
score: 99.01570638020833
patch: increment CaMeL Iterations CaMeL Counter ( false + 1 ) ;
rank: 234
score: 99.23061301491477
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) {
rank: 234
score: 99.12581961495536
patch: increment CaMeL Iterations CaMeL Counter -- ; current = jac CaMeL Norm ;
rank: 234
score: 99.11732788085938
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 234
score: 99.1111083984375
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 234
score: 99.106396484375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = current ;
rank: 234
score: 99.07448412024456
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , old CaMeL X , ) ;
rank: 234
score: 99.05983664772727
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for (
rank: 234
score: 99.02844916449652
patch: popup = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 235
score: 99.23032448508523
patch: new Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 235
score: 99.12576293945312
patch: increment CaMeL Iterations CaMeL Counter 1 = 0 ;
rank: 235
score: 99.11688701923077
patch: while ( false ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 235
score: 99.110595703125
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 235
score: 99.10628255208333
patch: double x CaMeL Norm = Math . sqrt ( x CaMeL Norm ) ;
rank: 235
score: 99.09855651855469
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm == 0 ) ;
rank: 235
score: 99.07413330078126
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , false ) ;
rank: 235
score: 99.02724095394737
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; / *
rank: 235
score: 99.0152587890625
patch: increment CaMeL Iterations CaMeL Counter >= 1 ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 236
score: 99.23024680397727
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 236
score: 99.125244140625
patch: increment CaMeL Iterations CaMeL Counter -- ; current = solved CaMeL Cols ;
rank: 236
score: 99.11637155633224
patch: increment CaMeL Iterations CaMeL Counter ( start ) ; increment CaMeL Iterations CaMeL Counter ( start ) ;
rank: 236
score: 99.1103182705966
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 236
score: 99.0740633877841
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 236
score: 99.05966796875
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < ) ;
rank: 236
score: 99.02691971628289
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( + 0 ) ;
rank: 236
score: 99.01521131727431
patch: increment CaMeL Iterations CaMeL Counter ( ; {
rank: 237
score: 99.22932434082031
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; qr CaMeL Decomposition ( ) ;
rank: 237
score: 99.11618381076389
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 237
score: 99.1101009971217
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 237
score: 99.05934244791666
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; ;
rank: 237
score: 99.02687766335227
patch: increment CaMeL Iterations CaMeL Counter ( ) + 0 ;
rank: 237
score: 99.01513671875
patch: if ( < ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 238
score: 99.22774832589286
patch: increment CaMeL Iterations CaMeL Counter ( + ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm )
rank: 238
score: 99.12340590533088
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , point ) ;
rank: 238
score: 99.11617238898026
patch: current = current . get CaMeL Iterations ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 238
score: 99.10990182976974
patch: return increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 238
score: 99.10608673095703
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; lm CaMeL Par = 0 ;
rank: 238
score: 99.09779866536458
patch: if ( update CaMeL Jacobian ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 238
score: 99.02674057904412
patch: Object current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 238
score: 99.01505533854167
patch: return ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 239
score: 99.11589704241071
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 239
score: 99.10565740411931
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( x CaMeL Norm ) ;
rank: 239
score: 99.09746636284723
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm , first CaMeL Iteration ) ;
rank: 239
score: 99.07251586914063
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 239
score: 99.01502574573864
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current .
rank: 240
score: 99.22646077473958
patch: increment CaMeL Iterations CaMeL Counter ( this . increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 240
score: 99.12286846454327
patch: increment CaMeL Iterations CaMeL Counter < current = solved CaMeL Cols ;
rank: 240
score: 99.11570829503677
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ++ ;
rank: 240
score: 99.10963948567708
patch: this . increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 240
score: 99.0972430889423
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum = 0 ;
rank: 240
score: 99.07240234375
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) .
rank: 240
score: 99.0554428100586
patch: increment CaMeL Iterations CaMeL Counter <= ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 240
score: 99.02625621448864
patch: increment CaMeL Iterations CaMeL Counter ( != 0 ) ;
rank: 240
score: 99.01479085286458
patch: increment CaMeL Iterations CaMeL Counter ( , - $NUMBER$ ) ;
rank: 241
score: 99.22607421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( x CaMeL Norm ) ;
rank: 241
score: 99.10485161675348
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; boolean first CaMeL Iteration = true ;
rank: 241
score: 99.07159133184524
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;
rank: 241
score: 99.05529022216797
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter = - 1 ;
rank: 241
score: 99.02562191611842
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 241
score: 99.01478068033855
patch: increment CaMeL Iterations CaMeL Counter ( false + 0 ) ;
rank: 242
score: 99.22579956054688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } if ( first CaMeL Iteration )
rank: 242
score: 99.12204996744792
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter -= solved CaMeL Cols ;
rank: 242
score: 99.11527797154018
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) break ;
rank: 242
score: 99.10920153166118
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 242
score: 99.01468098958334
patch: increment CaMeL Iterations CaMeL Counter > ) { increment CaMeL Iterations CaMeL Counter ;
rank: 243
score: 99.22579520089286
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; this . update CaMeL Jacobian ( ) ;
rank: 243
score: 99.1204474954044
patch: increment CaMeL Iterations CaMeL Counter <= cols ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 243
score: 99.11522001378677
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 243
score: 99.1083984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 243
score: 99.10478210449219
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = 0 ; }
rank: 243
score: 99.02507672991071
patch: if ( update CaMeL Residuals CaMeL And CaMeL Cost ( ) ) {
rank: 243
score: 99.01466878255208
patch: int ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 244
score: 99.2257412997159
patch: if ( update CaMeL Residuals CaMeL And CaMeL Cost ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 244
score: 99.1199951171875
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Par ( ) ;
rank: 244
score: 99.11504767922794
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 244
score: 99.10837273848684
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) )
rank: 244
score: 99.10447933799342
patch: increment CaMeL Iterations CaMeL Counter ( ) ; initial CaMeL Step CaMeL Bound CaMeL Factor = 0 ;
rank: 244
score: 99.09629603794643
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , jac CaMeL Norm ) ;
rank: 244
score: 99.06965775923295
patch: increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 244
score: 99.05397542317708
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 244
score: 99.02359347873264
patch: o = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 244
score: 99.01436360677083
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ 1 1 ) ;
rank: 245
score: 99.22492811414931
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , objective ) ;
rank: 245
score: 99.11481034128289
patch: increment CaMeL Iterations CaMeL Counter ( ) ; value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 245
score: 99.10393965871711
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter , x CaMeL Norm ) ; }
rank: 245
score: 99.05393629807692
patch: increment CaMeL Iterations CaMeL Counter ( ? 1 : 0 ) ;
rank: 245
score: 99.02348497178819
patch: r = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 245
score: 99.01434881036931
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; ;
rank: 246
score: 99.22424926757813
patch: if ( first CaMeL Iteration && first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 246
score: 99.11962127685547
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , diag CaMeL R ) ;
rank: 246
score: 99.10813502261513
patch: result = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 246
score: 99.09402626439145
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; x CaMeL Norm = 0 . 0 ;
rank: 246
score: 99.06885928199405
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 246
score: 99.05374849759616
patch: increment CaMeL Iterations CaMeL Counter ( * 0 . 0 ) ;
rank: 246
score: 99.02230130709134
patch: try { current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 246
score: 99.01424153645833
patch: increment CaMeL Iterations CaMeL Counter ( 0 , $NUMBER$ ) ;
rank: 247
score: 99.22401123046875
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 247
score: 99.1072998046875
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 247
score: 99.10308837890625
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; x CaMeL Norm = 0 ;
rank: 247
score: 99.09400285993304
patch: increment CaMeL Iterations CaMeL Counter ( false , point , objective ) ;
rank: 247
score: 99.06880326704545
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , old CaMeL X ) ;
rank: 247
score: 99.05302734375
patch: increment CaMeL Iterations CaMeL Counter += ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 247
score: 99.0140380859375
patch: increment CaMeL Iterations CaMeL Counter ( 1 , true ) ;
rank: 248
score: 99.1191739169034
patch: increment CaMeL Iterations CaMeL Counter -= solved CaMeL Cols ;
rank: 248
score: 99.11381450452302
patch: previous = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 248
score: 99.10638982599431
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 248
score: 99.09378487723214
patch: increment CaMeL Iterations CaMeL Counter ( true , jac CaMeL Norm ) ;
rank: 248
score: 99.06834059495192
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( ) {
rank: 248
score: 99.05084991455078
patch: increment CaMeL Iterations CaMeL Counter = ( int ) increment CaMeL Iterations CaMeL Counter ;
rank: 248
score: 99.02031792534723
patch: block = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 248
score: 99.01385498046875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , 0 ) ;
rank: 249
score: 99.11906881893383
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / catch ( Function CaMeL Evaluation CaMeL Exception
rank: 249
score: 99.10299682617188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = 0 ;
rank: 249
score: 99.09259033203125
patch: qr CaMeL Decomposition ( ) ;
rank: 249
score: 99.06825949928977
patch: increment CaMeL Iterations CaMeL Counter ( ) - 1 ;
rank: 249
score: 99.04979248046875
patch: increment CaMeL Iterations CaMeL Counter > ( ) ;
rank: 249
score: 99.01980108963816
patch: Node point = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 249
score: 99.01328688401442
patch: if ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 250
score: 99.11897108289931
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this ) ;
rank: 250
score: 99.1118408203125
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 250
score: 99.092431640625
patch: increment CaMeL Iterations CaMeL Counter = 0 ; update CaMeL Jacobian ( ) ;
rank: 250
score: 99.04933268229166
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 250
score: 99.01975504557292
patch: statement = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 250
score: 99.0127704326923
patch: increment CaMeL Iterations CaMeL Counter ( 1 , - 1 ) ;
rank: 251
score: 99.2220458984375
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 251
score: 99.11878726356908
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current .
rank: 251
score: 99.11183675130208
patch: if ( increment CaMeL Iterations CaMeL Counter < $NUMBER$ ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 251
score: 99.10581665039062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; continue ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 251
score: 99.10237201891448
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par . q CaMeL Ty ( ) ;
rank: 251
score: 99.09224207261029
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 . 1 ;
rank: 251
score: 99.06778293185764
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , current ) ;
rank: 251
score: 99.04824393136161
patch: increment CaMeL Iterations CaMeL Counter ( Math . iterator ( ) ) ;
rank: 251
score: 99.01974969161184
patch: increment CaMeL Iterations CaMeL Counter ( , increment CaMeL Iterations CaMeL Counter , first CaMeL Iteration ) ;
rank: 251
score: 99.01268659319196
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 252
score: 99.22187732514881
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ) . update CaMeL Jacobian ( ) ;
rank: 252
score: 99.11163039434524
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; current . increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 252
score: 99.09207153320312
patch: increment CaMeL Iterations CaMeL Counter < cols ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 252
score: 99.06768391927083
patch: increment CaMeL Iterations CaMeL Counter ( ) ; is CaMeL Empty = true ;
rank: 252
score: 99.04767315204327
patch: try { try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 252
score: 99.01260141225961
patch: int * * ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 253
score: 99.22029331752232
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( current , objective ) ;
rank: 253
score: 99.11090698242188
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 253
score: 99.09202067057292
patch: increment CaMeL Iterations CaMeL Counter ( false , x CaMeL Norm , first CaMeL Iteration ) ;
rank: 253
score: 99.06767134232955
patch: start = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 253
score: 99.04756164550781
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter = ) ;
rank: 253
score: 99.01901084498355
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; if (
rank: 254
score: 99.11835680509868
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current =
rank: 254
score: 99.11063842773437
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 254
score: 99.105224609375
patch: synchronized ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 254
score: 99.10208129882812
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( diag ) ;
rank: 254
score: 99.09199793198529
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 254
score: 99.06718517485119
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new No CaMeL Such CaMeL Method CaMeL Error ( ) ;
rank: 254
score: 99.04749407087054
patch: increment CaMeL Iterations CaMeL Counter ( * - 0 . 0 ) ;
rank: 255
score: 99.2181167602539
patch: increment CaMeL Iterations CaMeL Counter ( { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 255
score: 99.1105892783717
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 255
score: 99.10486949573864
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , ) ;
rank: 255
score: 99.10164148667279
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = jac CaMeL Norm ;
rank: 255
score: 99.09196920955883
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 255
score: 99.04739379882812
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) {
rank: 255
score: 99.01813065378289
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition . update CaMeL Jacobian ( ) ;
rank: 255
score: 99.01078796386719
patch: increment CaMeL Iterations CaMeL Counter ( 1 - increment CaMeL Iterations CaMeL Counter ) ;
rank: 256
score: 99.21804470486111
patch: increment CaMeL Iterations CaMeL Counter ( - ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 256
score: 99.11789279513889
patch: instance = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 256
score: 99.10456194196429
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 256
score: 99.09161376953125
patch: increment CaMeL Iterations CaMeL Counter ( 0 , point ) ;
rank: 256
score: 99.04732513427734
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ;
rank: 256
score: 99.01804762620192
patch: increment CaMeL Iterations CaMeL Counter ( , lm CaMeL Par ) ;
rank: 256
score: 99.01036580403645
patch: increment CaMeL Iterations CaMeL Counter ( 1 $NUMBER$ 1 ) ;
rank: 257
score: 99.21778700086806
patch: previous = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 257
score: 99.11785210503473
patch: increment CaMeL Iterations CaMeL Counter ++ ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 257
score: 99.10453491210937
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 257
score: 99.09051513671875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm , x CaMeL Norm ) ;
rank: 257
score: 99.0465087890625
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 257
score: 99.01796061197916
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition [ ) ;
rank: 257
score: 99.00996537642045
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) .
rank: 258
score: 99.11777750651042
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; x CaMeL Norm = 0 . 0 ;
rank: 258
score: 99.10967696340461
patch: if ( increment CaMeL Iterations CaMeL Counter < 1 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 258
score: 99.1041259765625
patch: if ( ) return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 258
score: 99.08989122178819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } x CaMeL Norm += 0 . 0 ;
rank: 258
score: 99.06669108072917
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( ) ) increment CaMeL Iterations CaMeL Counter . remove ( ) ;
rank: 258
score: 99.01795789930556
patch: loop = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 258
score: 99.0093485514323
patch: increment CaMeL Iterations CaMeL Counter ( false - $NUMBER$ ) ;
rank: 259
score: 99.10901692708333
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ;
rank: 259
score: 99.1039794921875
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 259
score: 99.06634990985577
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . {
rank: 259
score: 99.04339599609375
patch: increment CaMeL Iterations CaMeL Counter > ) ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 259
score: 99.01773274739584
patch: this . update CaMeL Jacobian ( ) ; update CaMeL Jacobian ( ) ;
rank: 259
score: 99.00904947916666
patch: if ( * ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 260
score: 99.1159423828125
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res [ 0 ] ) ;
rank: 260
score: 99.10855263157895
patch: s = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 260
score: 99.08967141544117
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols && x CaMeL Norm == 0 ;
rank: 260
score: 99.06617495888158
patch: input = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 260
score: 99.0430196126302
patch: Iterations = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 260
score: 99.01722301136364
patch: m . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 260
score: 99.00820922851562
patch: double * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 261
score: 99.21576482599431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 261
score: 99.11540876116071
patch: increment CaMeL Iterations CaMeL Counter -- ; lm CaMeL Par = 0 ;
rank: 261
score: 99.10302734375
patch: return increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 261
score: 99.08933392693015
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; x CaMeL Norm += 0 . 0 ;
rank: 261
score: 99.06565755208334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . interrupt ( ) ;
rank: 261
score: 99.0429178873698
patch: j [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 261
score: 99.01716883042279
patch: Node current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 261
score: 99.00812237079327
patch: final int ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 262
score: 99.21487426757812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( false ) ;
rank: 262
score: 99.11488172743056
patch: jacobian = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 262
score: 99.10798475477431
patch: increment CaMeL Iterations CaMeL Counter ( ; ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 262
score: 99.10250244140624
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 262
score: 99.10066053602431
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , delta , x CaMeL Norm ) ;
rank: 262
score: 99.08852251838235
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; first CaMeL Iteration = 0 ;
rank: 262
score: 99.0166766826923
patch: i = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 262
score: 99.00811767578125
patch: increment CaMeL Iterations CaMeL Counter ( - 0 $NUMBER$ ) ;
rank: 263
score: 99.21405388327206
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = x CaMeL Norm ;
rank: 263
score: 99.11484375
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Par ( residuals ) ;
rank: 263
score: 99.1020866842831
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 263
score: 99.08852132161458
patch: if ( solved CaMeL Cols == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 263
score: 99.06412353515626
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( current ) ; }
rank: 263
score: 99.04099527994792
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 ) {
rank: 263
score: 99.01649983723958
patch: iter = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 263
score: 99.00737970525569
patch: increment CaMeL Iterations CaMeL Counter ( , 1 ) ;
rank: 264
score: 99.10789730674342
patch: increment CaMeL Iterations CaMeL Counter = ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 264
score: 99.10204399956598
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 264
score: 99.087890625
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , jac CaMeL Norm ) ;
rank: 264
score: 99.06352233886719
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . exit ( 1 ) ;
rank: 264
score: 99.04075113932292
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) {
rank: 264
score: 99.01556075246711
patch: else current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 264
score: 99.00732421875
patch: if ( - ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 265
score: 99.2132901278409
patch: synchronized ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 265
score: 99.1077945106908
patch: r = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 265
score: 99.08779907226562
patch: increment CaMeL Iterations CaMeL Counter ( true , point ) ;
rank: 265
score: 99.0631591796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; is CaMeL Empty = false ;
rank: 265
score: 99.0406265258789
patch: assert new Runtime CaMeL Exception ( $STRING$ + increment CaMeL Iterations CaMeL Counter ) ;
rank: 265
score: 99.01359049479167
patch: VM = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 266
score: 99.21305338541667
patch: new increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 266
score: 99.11359514508929
patch: increment CaMeL Iterations CaMeL Counter -- ; lm CaMeL Dir = 0 ;
rank: 266
score: 99.09901829769737
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new Function CaMeL Evaluation CaMeL Exception ( ) ;
rank: 266
score: 99.08740952435662
patch: increment CaMeL Iterations CaMeL Counter < cols ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 266
score: 99.06298828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . notify CaMeL All ( ) ;
rank: 266
score: 99.0404281616211
patch: increment CaMeL Iterations CaMeL Counter > $NUMBER$ ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 266
score: 99.00673421223958
patch: Counter ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 267
score: 99.11283365885417
patch: rc = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 267
score: 99.10753173828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( ) ; }
rank: 267
score: 99.09872671274039
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = true ;
rank: 267
score: 99.062744140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( current . ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 267
score: 99.03895060221355
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for ( *
rank: 267
score: 99.01304117838542
patch: l = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 267
score: 99.00665752704327
patch: System . * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 268
score: 99.21206519717262
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 268
score: 99.11252170138889
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double first CaMeL Iteration = 0 . 0 ;
rank: 268
score: 99.10740902549342
patch: if ( ! increment CaMeL Iterations CaMeL Counter . ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 268
score: 99.10102282072368
patch: else increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 268
score: 99.09834798177083
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 . 0 ; }
rank: 268
score: 99.0864501953125
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm ) ; }
rank: 268
score: 99.06209716796874
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( ) ; }
rank: 268
score: 99.03868865966797
patch: increment CaMeL Iterations CaMeL Counter ; ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 268
score: 99.0129623413086
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( , ) ;
rank: 268
score: 99.00599888392857
patch: Iterations [ 1 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 269
score: 99.21151029146634
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ;
rank: 269
score: 99.11239420572916
patch: increment CaMeL Iterations CaMeL Counter = 0 ; lm CaMeL Par = 0 ;
rank: 269
score: 99.09965684678819
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = ) ;
rank: 269
score: 99.0982998934659
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res ) ;
rank: 269
score: 99.03855895996094
patch: increment CaMeL Iterations CaMeL Counter >= 1 ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 269
score: 99.01284450954861
patch: tmp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 269
score: 99.0059585571289
patch: if ( this != null ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 270
score: 99.21084449404762
patch: increment CaMeL Iterations CaMeL Counter ( , x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 270
score: 99.11211799172794
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , current ) ;
rank: 270
score: 99.1071841591283
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 270
score: 99.09916606702302
patch: if ( increment CaMeL Iterations CaMeL Counter > ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 270
score: 99.09822387695313
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( point ) ;
rank: 270
score: 99.08578055245536
patch: update CaMeL Jacobian ( residuals ) ; qr CaMeL Decomposition ( ) ;
rank: 270
score: 99.06180513822116
patch: Thread . current CaMeL Thread ( ) . interrupt ( ) ;
rank: 270
score: 99.037841796875
patch: increment CaMeL Iterations CaMeL Counter ( * * 0 . 0 ) ;
rank: 270
score: 99.01262749565973
patch: j = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 270
score: 99.00555974786931
patch: increment CaMeL Iterations CaMeL Counter ( - - ) ;
rank: 271
score: 99.21080017089844
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( current ) ;
rank: 271
score: 99.10713334517045
patch: temp = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 271
score: 99.09913048377403
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 271
score: 99.09752197265625
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , delta , lm CaMeL Dir ) ;
rank: 271
score: 99.08560180664062
patch: increment CaMeL Iterations CaMeL Counter ( false , 0 ) ;
rank: 271
score: 99.0618008700284
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . append ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 271
score: 99.03665364583334
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 271
score: 99.01241048177083
patch: c = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 271
score: 99.00554950420673
patch: int * = * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 272
score: 99.21058872767857
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , x CaMeL Norm ) ;
rank: 272
score: 99.1115966796875
patch: increment CaMeL Iterations CaMeL Counter = initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 272
score: 99.09880719866071
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 272
score: 99.09742647058823
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; lm CaMeL Dir = 0 ;
rank: 272
score: 99.08536783854167
patch: if ( true ) { update CaMeL Jacobian ( ) ;
rank: 272
score: 99.06097412109375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int ) ;
rank: 272
score: 99.0365741436298
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , true ) ;
rank: 273
score: 99.20987277560764
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( first CaMeL Iteration ) ;
rank: 273
score: 99.11155072380515
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ;
rank: 273
score: 99.09853727921195
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ) ;
rank: 273
score: 99.09710693359375
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , residuals ) ;
rank: 273
score: 99.08528958834134
patch: try { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 273
score: 99.0605801669034
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * 1 . 0 ) ;
rank: 273
score: 99.036376953125
patch: i [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 273
score: 99.0113166360294
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . lm CaMeL Par = 0 ;
rank: 273
score: 99.00487263997395
patch: increment CaMeL Iterations CaMeL Counter ( false , $NUMBER$ ) ;
rank: 274
score: 99.11154610770089
patch: this . update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 274
score: 99.09779357910156
patch: increment CaMeL Iterations CaMeL Counter ( 0 , increment CaMeL Iterations CaMeL Counter ) ;
rank: 274
score: 99.09702962239584
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = null ;
rank: 274
score: 99.08452814275569
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ;
rank: 274
score: 99.06025526258681
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) , true ) ;
rank: 274
score: 99.00435697115384
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 275
score: 99.20947983685662
patch: increment CaMeL Iterations CaMeL Counter ( new increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 275
score: 99.11104329427083
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 1 ;
rank: 275
score: 99.10670107886905
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( ) ) increment CaMeL Iterations CaMeL Counter . )
rank: 275
score: 99.0974609375
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 275
score: 99.0967129794034
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * ( x CaMeL Norm ) ) ;
rank: 275
score: 99.08450753348214
patch: increment CaMeL Iterations CaMeL Counter ( 0 , first CaMeL Iteration ) ;
rank: 275
score: 99.06002242476852
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 275
score: 99.03545379638672
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 275
score: 99.01023559570312
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; if ( )
rank: 275
score: 99.00333077566964
patch: if ( < 0 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 276
score: 99.1106818704044
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 276
score: 99.10655381944444
patch: increment CaMeL Iterations CaMeL Counter ( ) ; -- increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 276
score: 99.09666224888393
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , cols ) ;
rank: 276
score: 99.05998149671052
patch: pos = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 276
score: 99.00246018629808
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } .
rank: 277
score: 99.1106185913086
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += $NUMBER$ . 0 ;
rank: 277
score: 99.10634068080357
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ; ;
rank: 277
score: 99.09661506204044
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = true ;
rank: 277
score: 99.09648204985119
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 277
score: 99.08389621310764
patch: if ( solved CaMeL Cols != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 277
score: 99.05956420898437
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( true ) ;
rank: 277
score: 99.0348612467448
patch: try { increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 277
score: 99.00973849826389
patch: stmt = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 277
score: 99.00229899088542
patch: increment CaMeL Iterations CaMeL Counter ( false + $NUMBER$ ) ;
rank: 278
score: 99.20782180059524
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; x CaMeL Norm = 0 . 0 ;
rank: 278
score: 99.11036682128906
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , solved CaMeL Cols ) ;
rank: 278
score: 99.10570179332386
patch: val = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 278
score: 99.09642444957386
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; break ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 278
score: 99.09619140625
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 278
score: 99.08272298177083
patch: increment CaMeL Iterations CaMeL Counter ( false , current ) ;
rank: 278
score: 99.05919596354167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . sleep ( ) ;
rank: 278
score: 99.03425816127232
patch: for ( ; ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 278
score: 99.0097186748798
patch: increment CaMeL Iterations CaMeL Counter ( , update CaMeL Jacobian ) ;
rank: 278
score: 99.00130521334134
patch: Iterations ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 279
score: 99.09606170654297
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , lm CaMeL Dir ) ;
rank: 279
score: 99.09602625229779
patch: this . increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 279
score: 99.0811831825658
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 279
score: 99.05912853422619
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 279
score: 99.03376116071429
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) - 1 ) ;
rank: 279
score: 99.00909423828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return 0 ;
rank: 279
score: 99.00103290264423
patch: try { ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 280
score: 99.20712762129934
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; x CaMeL Norm = 0 ;
rank: 280
score: 99.10971408420139
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = current . update CaMeL Jacobian ( ) ;
rank: 280
score: 99.10539899553571
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 280
score: 99.09601384943181
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm , sum ) ;
rank: 280
score: 99.0955810546875
patch: increment CaMeL Iterations CaMeL Counter ( ( increment CaMeL Iterations CaMeL Counter ( ) ) ) ;
rank: 280
score: 99.08043077256944
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols , lm CaMeL Dir ) ;
rank: 280
score: 99.03331647600446
patch: increment CaMeL Iterations CaMeL Counter ( - 1 [ 0 ] ) ;
rank: 280
score: 99.0001932779948
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; ) ;
rank: 281
score: 99.20648552389706
patch: lm CaMeL Par = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ;
rank: 281
score: 99.10938262939453
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double first CaMeL Iteration = 0 ;
rank: 281
score: 99.10455031622024
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 281
score: 99.09589700137867
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL Res = jac CaMeL Norm ;
rank: 281
score: 99.0954654091283
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 281
score: 99.0583203125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 281
score: 99.00834825303819
patch: rs = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 281
score: 99.0001690204327
patch: increment CaMeL Iterations CaMeL Counter ( - - $NUMBER$ 1 ) ;
rank: 282
score: 99.20619419642857
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair )
rank: 282
score: 99.10896809895833
patch: increment CaMeL Iterations CaMeL Counter 1 = solved CaMeL Cols ;
rank: 282
score: 99.10438889723558
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) current ) ;
rank: 282
score: 99.09569634331598
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . q CaMeL Ty ( residuals ) ;
rank: 282
score: 99.08017985026042
patch: increment CaMeL Iterations CaMeL Counter ( 0 , diag ) ;
rank: 282
score: 99.05808327414773
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; ;
rank: 282
score: 99.03252618963069
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int *
rank: 282
score: 99.00815993088942
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par ;
rank: 282
score: 98.9984130859375
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; ) ;
rank: 283
score: 99.09530639648438
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , solved CaMeL Cols ) ;
rank: 283
score: 99.08007094439338
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 283
score: 99.05791829427083
patch: increment CaMeL Iterations CaMeL Counter ( get CaMeL Iterations ( current ) ) ;
rank: 283
score: 99.0080630653783
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor ( ) ;
rank: 283
score: 98.99825032552083
patch: increment CaMeL Iterations CaMeL Counter ( false - 0 ) ;
rank: 284
score: 99.10851372612848
patch: beta = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 284
score: 99.10423278808594
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; ;
rank: 284
score: 99.08000352647569
patch: x CaMeL Norm = 0 . 0 ; } x CaMeL Norm += 0 . 0 ;
rank: 284
score: 99.0322494506836
patch: int ) { increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 284
score: 99.0078369140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; /
rank: 284
score: 98.99785907451923
patch: increment CaMeL Iterations CaMeL Counter ( - - - 0 ) ;
rank: 285
score: 99.205859375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current -- ;
rank: 285
score: 99.10845588235294
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , diag ) ;
rank: 285
score: 99.10415469898896
patch: try { increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 285
score: 99.09495713975694
patch: increment CaMeL Iterations CaMeL Counter * initial CaMeL Step CaMeL Bound CaMeL Factor ( residuals ) ;
rank: 285
score: 99.09490003083882
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , increment CaMeL Iterations CaMeL Counter ( 1 ) ) ;
rank: 285
score: 99.07999420166016
patch: update CaMeL Jacobian ( residuals ) ;
rank: 285
score: 99.05726725260416
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( current ) )
rank: 285
score: 99.03207833426339
patch: increment CaMeL Iterations CaMeL Counter ( * * 1 . 0 ) ;
rank: 285
score: 99.0073306435033
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( + $NUMBER$ ) ;
rank: 286
score: 99.10733835320724
patch: increment CaMeL Iterations CaMeL Counter ++ ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; }
rank: 286
score: 99.10393608940973
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 286
score: 99.09415283203126
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 286
score: 99.09412434895833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = ) ;
rank: 286
score: 99.03139085036058
patch: increment CaMeL Iterations CaMeL Counter ( - 1 - 0 ) ;
rank: 286
score: 99.00723427220395
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; else {
rank: 286
score: 98.99658203125
patch: increment CaMeL Iterations CaMeL Counter ( - 1 0 ) ;
rank: 287
score: 99.20563422309027
patch: increment CaMeL Iterations CaMeL Counter ( + ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 287
score: 99.1037238625919
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 287
score: 99.09412231445313
patch: if ( increment CaMeL Iterations CaMeL Counter < 1 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 287
score: 99.09388732910156
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; lm CaMeL Par = 0 ;
rank: 287
score: 99.07871380974265
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ; {
rank: 287
score: 99.03126220703125
patch: increment CaMeL Iterations CaMeL Counter ( * ) ;
rank: 287
score: 99.0070068359375
patch: if ( true ) current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 287
score: 98.99652099609375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw ) ;
rank: 288
score: 99.10657552083333
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . current ;
rank: 288
score: 99.10321044921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 288
score: 99.07869037828948
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter += cols ;
rank: 288
score: 99.0567562705592
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( ) ;
rank: 288
score: 99.0300801595052
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 288
score: 98.99641927083333
patch: increment CaMeL Iterations CaMeL Counter ( - 1 false ) ;
rank: 289
score: 99.1030337685033
patch: c = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 289
score: 99.09390079273896
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = $NUMBER$ ;
rank: 289
score: 99.09385681152344
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } lm CaMeL Dir = 0 ;
rank: 289
score: 99.0776138305664
patch: increment CaMeL Iterations CaMeL Counter ( false , x CaMeL Norm == 0 ) ;
rank: 289
score: 99.0299823467548
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , null ) ;
rank: 289
score: 99.00656960227273
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ;
rank: 289
score: 98.99624197823661
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) return _
rank: 290
score: 99.20526123046875
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , permutation ) ;
rank: 290
score: 99.09366861979167
patch: increment CaMeL Iterations CaMeL Counter ( 0 , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 290
score: 99.07744140625
patch: increment CaMeL Iterations CaMeL Counter ( - cols , solved CaMeL Cols ) ;
rank: 290
score: 99.05548565204327
patch: increment CaMeL Iterations CaMeL Counter ( current . increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 290
score: 99.02974700927734
patch: int * ; increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 290
score: 98.99615478515625
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ 1 $NUMBER$ ) ;
rank: 291
score: 99.20444557883523
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 291
score: 99.10272894965277
patch: increment CaMeL Iterations CaMeL Counter ++ ; ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 291
score: 99.09344482421875
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; lm CaMeL Par = 0 ;
rank: 291
score: 99.0771484375
patch: increment CaMeL Iterations CaMeL Counter ( true , point , objective ) ;
rank: 291
score: 99.05462239583333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . destroy ( ) ;
rank: 291
score: 98.99509684244792
patch: final increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 292
score: 99.10605037913604
patch: x CaMeL Norm = 0 . 0 ; lm CaMeL Par = 0 . 0 ;
rank: 292
score: 99.09295099431819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( first CaMeL Iteration ) ;
rank: 292
score: 99.07703354779412
patch: increment CaMeL Iterations CaMeL Counter <= solved CaMeL Cols ; x CaMeL Norm = 0 ;
rank: 292
score: 99.05443226207386
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 0 . 0 ) ;
rank: 292
score: 99.02750651041667
patch: increment CaMeL Iterations CaMeL Counter ( * - 0 ) ;
rank: 292
score: 99.00540161132812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else first CaMeL Iteration = true ;
rank: 292
score: 98.99480329241071
patch: if ( list ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 293
score: 99.1056396484375
patch: increment CaMeL Iterations CaMeL Counter < increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 293
score: 99.1015625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 293
score: 99.09326171875
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 293
score: 99.05403645833333
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 293
score: 99.0051498413086
patch: retval = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 293
score: 98.99398099459134
patch: try { ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 294
score: 99.20362006293402
patch: if ( this . first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 294
score: 99.10146077473958
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 294
score: 99.09311394942434
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 294
score: 99.09178161621094
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; first CaMeL Iteration = true ;
rank: 294
score: 99.07493681066177
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 294
score: 99.0539486533717
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) current . get CaMeL Iterations ( ) ) ;
rank: 294
score: 99.02492453835227
patch: db . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 294
score: 99.00473201976104
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor :
rank: 294
score: 98.99317626953125
patch: * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 295
score: 99.20340768914474
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( - 0 ) ;
rank: 295
score: 99.10511779785156
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int x CaMeL Norm = 0 ;
rank: 295
score: 99.0921142578125
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 295
score: 99.091650390625
patch: increment CaMeL Iterations CaMeL Counter ( lm CaMeL Par ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 295
score: 99.07451837713069
patch: increment CaMeL Iterations CaMeL Counter ( cols , ) ;
rank: 295
score: 99.05387609145221
patch: increment CaMeL Iterations CaMeL Counter ( current . double CaMeL Value ( ) , ) ;
rank: 295
score: 99.02474212646484
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( 1 ) ,
rank: 295
score: 99.00463189019098
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; update CaMeL Jacobian ( ) ;
rank: 296
score: 99.09209735576923
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 296
score: 99.09140846946023
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = Math . sqrt ( x CaMeL Norm ) ;
rank: 296
score: 99.05379445929276
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) + 1 ;
rank: 296
score: 99.02436065673828
patch: increment CaMeL Iterations CaMeL Counter < ) increment CaMeL Iterations CaMeL Counter = 1 ;
rank: 296
score: 99.0045101768092
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition . do CaMeL Optimize ( ) ;
rank: 296
score: 98.99287923177083
patch: increment CaMeL Iterations CaMeL Counter ( , - 0 ) ;
rank: 297
score: 99.09966430664062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 297
score: 99.09184827302632
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 297
score: 99.07392035590277
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , lm CaMeL Par ) ;
rank: 297
score: 99.05301242404514
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 297
score: 99.02413236177884
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , false ) ;
rank: 297
score: 99.00297715928819
patch: event = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 297
score: 98.9925537109375
patch: if ( / ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 298
score: 99.20246233258929
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current ; }
rank: 298
score: 99.10441758897569
patch: dk = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 298
score: 99.09182303292411
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; continue ; }
rank: 298
score: 99.07350667317708
patch: increment CaMeL Iterations CaMeL Counter ( true , 0 ) ;
rank: 298
score: 99.02393450055804
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) length 1 ) ;
rank: 298
score: 98.99135520241477
patch: d = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 299
score: 99.20217895507812
patch: increment CaMeL Iterations CaMeL Counter ( current , 0 ) ;
rank: 299
score: 99.10429243607955
patch: increment CaMeL Iterations CaMeL Counter = solved CaMeL Cols ;
rank: 299
score: 99.09181614925987
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 299
score: 99.09097144717262
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , Math . abs ( x CaMeL Norm ) ) ;
rank: 299
score: 99.0523173014323
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 299
score: 99.00288899739583
patch: if ( current instanceof Vectorial CaMeL Point CaMeL Value CaMeL Pair ) {
rank: 299
score: 98.99127666766827
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 300
score: 99.091748046875
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) 1 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 300
score: 99.09065755208333
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 300
score: 99.07297188895089
patch: increment CaMeL Iterations CaMeL Counter ( current , solved CaMeL Cols ) ;
rank: 300
score: 99.052001953125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return current . get CaMeL Iterations ( ) ;
rank: 300
score: 99.0234883626302
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 300
score: 98.99033900669643
patch: int * * ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 301
score: 99.20125086167279
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = first CaMeL Iteration ;
rank: 301
score: 99.10417829241071
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Dir = current ;
rank: 301
score: 99.09923095703125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( 0 ) ;
rank: 301
score: 99.091552734375
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 301
score: 99.09038628472223
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter (
rank: 301
score: 99.05179636101974
patch: increment CaMeL Iterations CaMeL Counter ( ) - 1 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 301
score: 99.02336120605469
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter = (
rank: 301
score: 99.00252278645833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( . ) ;
rank: 301
score: 98.98931884765625
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; ) ;
rank: 302
score: 99.10357259114583
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 302
score: 99.09137926603618
patch: val = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 302
score: 99.09028625488281
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; lm CaMeL Par = 0 ;
rank: 302
score: 99.07265218098958
patch: if ( lm CaMeL Par != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 302
score: 99.02298409598214
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ;
rank: 302
score: 98.98924037388393
patch: if ( ! * increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 303
score: 99.2008285522461
patch: update CaMeL Jacobian ( true ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 303
score: 99.09911499023437
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 303
score: 99.09121222245066
patch: if ( increment CaMeL Iterations CaMeL Counter <= ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 303
score: 99.08998616536458
patch: increment CaMeL Iterations CaMeL Counter ( ) ; = 0 ;
rank: 303
score: 99.07231588924633
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 303
score: 99.05099487304688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Name ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 303
score: 99.02283477783203
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter > 1 ;
rank: 303
score: 99.00204467773438
patch: node = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 303
score: 98.9882061298077
patch: logger . { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 304
score: 99.1026611328125
patch: increment CaMeL Iterations CaMeL Counter -- ; current = current ;
rank: 304
score: 99.09109262319711
patch: final ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 304
score: 99.08946990966797
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; first CaMeL Iteration = true ;
rank: 304
score: 99.022705078125
patch: context . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 304
score: 99.00200737847223
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( length ) ;
rank: 304
score: 98.98807779947917
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 305
score: 99.10240885416667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = $NUMBER$ . 0 ;
rank: 305
score: 99.09850396050348
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ;
rank: 305
score: 99.08981805098684
patch: increment CaMeL Iterations CaMeL Counter ( 1 , increment CaMeL Iterations CaMeL Counter ( 1 ) ) ;
rank: 305
score: 99.0505138578869
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , start , ) ;
rank: 305
score: 99.02217102050781
patch: if ( ! increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ;
rank: 305
score: 99.0018246299342
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; / ;
rank: 305
score: 98.98807466947116
patch: increment CaMeL Iterations CaMeL Counter ( 0 [ 0 ] ) ;
rank: 306
score: 99.19981892903645
patch: qr CaMeL Decomposition ( qr CaMeL Decomposition ( ) ) ;
rank: 306
score: 99.09842354910714
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 306
score: 99.08931884765624
patch: int value = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 306
score: 99.07127028245192
patch: update CaMeL Jacobian ( ) ; lm CaMeL Par = 0 ;
rank: 306
score: 99.0216573079427
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( (
rank: 306
score: 98.9879901592548
patch: while ( ! increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 307
score: 99.19963921440973
patch: increment CaMeL Iterations CaMeL Counter ( permutation ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 307
score: 99.10189998851104
patch: x CaMeL Norm = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ;
rank: 307
score: 99.08860270182292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += 0 . 0 ; }
rank: 307
score: 99.05032113882211
patch: increment CaMeL Iterations CaMeL Counter ( current , start , ) ;
rank: 307
score: 99.02121407645089
patch: increment CaMeL Iterations CaMeL Counter >= ) increment CaMeL Iterations CaMeL Counter ;
rank: 307
score: 99.00148703835227
patch: increment CaMeL Iterations CaMeL Counter ( >= 0 ) ;
rank: 307
score: 98.98790564903847
patch: increment CaMeL Iterations CaMeL Counter ( 1 [ $NUMBER$ ] ) ;
rank: 308
score: 99.10148351332721
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 308
score: 99.09808640252976
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter . get ( ) ;
rank: 308
score: 99.08904157366071
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 308
score: 99.08853149414062
patch: boolean first CaMeL Iteration = false ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 308
score: 99.07093157087054
patch: increment CaMeL Iterations CaMeL Counter ( cols , lm CaMeL Par ) ;
rank: 308
score: 99.0204366048177
patch: increment CaMeL Iterations CaMeL Counter ( true - 1 ) ;
rank: 308
score: 99.00084092881944
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ] ) ;
rank: 308
score: 98.98748224431819
patch: else ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 309
score: 99.10121372767857
patch: increment CaMeL Iterations CaMeL Counter -- ; update CaMeL Jacobian ( ) ;
rank: 309
score: 99.08826904296875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 309
score: 99.00032552083333
patch: table = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 309
score: 98.98675537109375
patch: increment CaMeL Iterations CaMeL Counter ( 1 , this ) ;
rank: 310
score: 99.19918020148026
patch: update CaMeL Jacobian ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 310
score: 99.0970947265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( $NUMBER$ ) ;
rank: 310
score: 99.08776137408088
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = false ;
rank: 310
score: 99.04881456163194
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , current ) ;
rank: 310
score: 99.0198505108173
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) ;
rank: 310
score: 99.00017989309211
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; this .
rank: 310
score: 98.98624674479167
patch: increment CaMeL Iterations CaMeL Counter ( ( float ) ) ;
rank: 311
score: 99.09689510569854
patch: double increment CaMeL Iterations CaMeL Counter = ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 311
score: 99.08800591362848
patch: boolean first CaMeL Iteration = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 311
score: 99.08733809621711
patch: doc = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 311
score: 99.0697354403409
patch: increment CaMeL Iterations CaMeL Counter ( 0 , ) ;
rank: 311
score: 99.04833170572917
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter , ) ;
rank: 311
score: 99.01917375837054
patch: increment CaMeL Iterations CaMeL Counter = -- increment CaMeL Iterations CaMeL Counter ;
rank: 311
score: 98.99984036959134
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) == 0 )
rank: 311
score: 98.9857177734375
patch: increment CaMeL Iterations CaMeL Counter ( - - false ) ;
rank: 312
score: 99.0966732627467
patch: i = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 312
score: 99.08738014914773
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( q CaMeL Ty ) ;
rank: 312
score: 99.06968688964844
patch: increment CaMeL Iterations CaMeL Counter ( cols , cols , first CaMeL Iteration ) ;
rank: 312
score: 99.04823655348558
patch: increment CaMeL Iterations CaMeL Counter ( current . ) ; increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ;
rank: 312
score: 98.99936930338542
patch: tmp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 312
score: 98.98531087239583
patch: if ( max != 0 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 313
score: 99.08601459703948
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 313
score: 99.06955973307292
patch: increment CaMeL Iterations CaMeL Counter ( true , current ) ;
rank: 313
score: 99.01728166852679
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 313
score: 98.98520333426339
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 314
score: 99.19801089638158
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 314
score: 99.1001727764423
patch: increment CaMeL Iterations CaMeL Counter ++ ; work $NUMBER$ ( ) ;
rank: 314
score: 99.08651733398438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( diag ) ;
rank: 314
score: 99.0860126201923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } return true ;
rank: 314
score: 99.06951226128473
patch: if ( old CaMeL X == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 314
score: 99.04723307291667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . read ( ) ;
rank: 314
score: 99.01711600167411
patch: j [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 314
score: 98.99913194444444
patch: this . current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 314
score: 98.98489379882812
patch: increment CaMeL Iterations CaMeL Counter ( - != 1 ) ;
rank: 315
score: 99.19755045572917
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; }
rank: 315
score: 99.09988403320312
patch: increment CaMeL Iterations CaMeL Counter -- ; x CaMeL Norm = 1 . 0 ;
rank: 315
score: 99.09581234580592
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 315
score: 99.0862678079044
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . q CaMeL Ty ( ) ;
rank: 315
score: 99.08577045641448
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 315
score: 99.06950547960069
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , lm CaMeL Dir ) ;
rank: 315
score: 98.99895770733173
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir ;
rank: 315
score: 98.98487141927083
patch: increment CaMeL Iterations CaMeL Counter = ) { increment CaMeL Iterations CaMeL Counter ;
rank: 316
score: 99.19744551809211
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( . 0 ) ;
rank: 316
score: 99.04713841488487
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 316
score: 99.01600138346355
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) &&
rank: 316
score: 98.98421223958333
patch: increment CaMeL Iterations CaMeL Counter ( false , 1 ) ;
rank: 317
score: 99.19664764404297
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( $NUMBER$ ) ;
rank: 317
score: 99.09956359863281
patch: qr CaMeL Decomposition ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 317
score: 99.09458229758523
patch: end = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 317
score: 99.08506373355263
patch: element = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 317
score: 99.06946818033855
patch: increment CaMeL Iterations CaMeL Counter ( 1 , objective ) ;
rank: 317
score: 99.04704938616071
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , current ) ;
rank: 317
score: 99.01578194754464
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , - 1 ) ;
rank: 317
score: 98.98396809895833
patch: increment CaMeL Iterations CaMeL Counter ( 1 , current ) ;
rank: 318
score: 99.09438852163461
patch: current ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 318
score: 99.08549281529018
patch: increment CaMeL Iterations CaMeL Counter ( residuals , x CaMeL Norm ) ;
rank: 318
score: 99.08498663651316
patch: final void increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 318
score: 99.0682601928711
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , objective ) ;
rank: 318
score: 99.01511793870192
patch: this . increment CaMeL Iterations CaMeL Counter ( + 1 ) ;
rank: 318
score: 98.98377482096355
patch: increment CaMeL Iterations CaMeL Counter ( 1 . 0 ) ;
rank: 319
score: 99.1954409950658
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 319
score: 99.09874674479167
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( residuals ) ;
rank: 319
score: 99.08494059244792
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; first CaMeL Iteration = true ;
rank: 319
score: 99.08493041992188
patch: if ( increment CaMeL Iterations CaMeL Counter < $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 319
score: 99.06824408637152
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , solved CaMeL Cols , lm CaMeL Dir ) ;
rank: 319
score: 99.04682978877315
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 319
score: 99.01444789341518
patch: i [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 319
score: 98.99862850413604
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) :
rank: 319
score: 98.98357684795673
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 320
score: 99.1948306435033
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 320
score: 99.09827423095703
patch: increment CaMeL Iterations CaMeL Counter 1 ; x CaMeL Norm = 0 . 0 ;
rank: 320
score: 99.08483305431548
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 320
score: 99.08319091796875
patch: if ( increment CaMeL Iterations CaMeL Counter == ) increment CaMeL Iterations CaMeL Counter = $NUMBER$ ;
rank: 320
score: 99.01441301618304
patch: logger . arraycopy ( this . increment CaMeL Iterations CaMeL Counter ) ;
rank: 320
score: 98.99861867804276
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ ) ;
rank: 320
score: 98.98354085286458
patch: increment CaMeL Iterations CaMeL Counter ( 1 . $NUMBER$ ) ;
rank: 321
score: 99.09812927246094
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par ( residuals ) ;
rank: 321
score: 99.09349867876838
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 321
score: 99.08306329900569
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 321
score: 99.04640299479166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . exec ( ) ;
rank: 321
score: 99.01431978665866
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( int )
rank: 321
score: 98.99838595920139
patch: arg = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 321
score: 98.98337026742789
patch: ) { try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 322
score: 99.194580078125
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 322
score: 99.0980224609375
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 322
score: 99.09268527560764
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 322
score: 99.08413696289062
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( residuals ) ;
rank: 322
score: 99.08303833007812
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 322
score: 99.06753540039062
patch: increment CaMeL Iterations CaMeL Counter ( cols , cols ) ;
rank: 322
score: 99.0462582236842
patch: j = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 322
score: 99.01368059430804
patch: logger . arraycopy ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 322
score: 98.99715847439236
patch: packet = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 322
score: 98.98325417258523
patch: / * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 323
score: 99.0974365234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; solved CaMeL Cols = 0 ;
rank: 323
score: 99.0926025390625
patch: current = new increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 323
score: 99.06740025111607
patch: if ( beta ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 323
score: 99.04623252467105
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 323
score: 99.01366248497597
patch: increment CaMeL Iterations CaMeL Counter < increment CaMeL Iterations CaMeL Counter ;
rank: 323
score: 98.9968017578125
patch: increment CaMeL Iterations CaMeL Counter ( , update CaMeL Jacobian ( ) ) ;
rank: 323
score: 98.98289388020834
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 324
score: 99.19371337890625
patch: increment CaMeL Iterations CaMeL Counter ( current , objective ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 324
score: 99.09742149939903
patch: increment CaMeL Iterations CaMeL Counter <= x CaMeL Norm = 0 ;
rank: 324
score: 99.09186469184027
patch: increment CaMeL Iterations CaMeL Counter ++ ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 324
score: 99.08340454101562
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 324
score: 99.06718893612133
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; x CaMeL Norm += 0 ;
rank: 324
score: 99.04603881835938
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * 1 ) ;
rank: 324
score: 99.01276312934027
patch: increment CaMeL Iterations CaMeL Counter < $NUMBER$ ;
rank: 324
score: 98.98253455528847
patch: increment CaMeL Iterations CaMeL Counter ( ) + - - 1 ;
rank: 325
score: 99.19366455078125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; return current ;
rank: 325
score: 99.09162983141448
patch: increment CaMeL Iterations CaMeL Counter ( ) ; new ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 325
score: 99.06656901041667
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , solved CaMeL Cols ) ;
rank: 325
score: 98.99626020951705
patch: increment CaMeL Iterations CaMeL Counter ( > 0 ) ;
rank: 325
score: 98.98243204752605
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) / /
rank: 326
score: 99.19292249177632
patch: increment CaMeL Iterations CaMeL Counter ( + 0 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 326
score: 99.09679303850446
patch: increment CaMeL Iterations CaMeL Counter -- ; x CaMeL Norm = 0 ;
rank: 326
score: 99.08258928571429
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm == 0 ) ;
rank: 326
score: 99.08187063116776
patch: node = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 326
score: 99.0125732421875
patch: v = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 326
score: 98.99561309814453
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( cost != 0 ) {
rank: 326
score: 98.98221529447116
patch: increment CaMeL Iterations CaMeL Counter ( ) + - - 0 ;
rank: 327
score: 99.19212431066177
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; current = current ;
rank: 327
score: 99.09657915900735
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 327
score: 99.08244185014205
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = true ;
rank: 327
score: 99.08177354600694
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; do
rank: 327
score: 99.01225142045455
patch: row = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 327
score: 98.99506084735577
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir [
rank: 327
score: 98.9822021484375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; public
rank: 328
score: 99.19179958767361
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this , objective ) ;
rank: 328
score: 99.09096165707237
patch: increment CaMeL Iterations CaMeL Counter ( ) ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 328
score: 99.08224283854166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL X = 0 ;
rank: 328
score: 99.08154296875
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 328
score: 99.04459874770221
patch: increment CaMeL Iterations CaMeL Counter ( ( double ) increment CaMeL Iterations CaMeL Counter ) ;
rank: 328
score: 99.01210239955357
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) length $NUMBER$ ) ;
rank: 328
score: 98.98193359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) *
rank: 329
score: 99.1917724609375
patch: final Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 329
score: 99.0964714499081
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 329
score: 99.09093299278847
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ; }
rank: 329
score: 99.08143920898438
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 329
score: 99.06573165090461
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 329
score: 99.044482421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . insert ( ) ;
rank: 329
score: 99.01200648716518
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 329
score: 98.99494171142578
patch: list = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 329
score: 98.98191324869792
patch: increment CaMeL Iterations CaMeL Counter ( - 1 true ) ;
rank: 330
score: 99.19173177083333
patch: increment CaMeL Iterations CaMeL Counter ( this , current ) ;
rank: 330
score: 99.0906982421875
patch: if ( ! increment CaMeL Iterations CaMeL Counter . ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 330
score: 99.08160041360294
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , x CaMeL Norm ) ; }
rank: 330
score: 99.0807746438419
patch: if ( increment CaMeL Iterations CaMeL Counter <= ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 330
score: 99.06536865234375
patch: increment CaMeL Iterations CaMeL Counter ( 0 , 1 ) ;
rank: 330
score: 99.04408616286058
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( ;
rank: 330
score: 99.01165364583333
patch: if ( ! this . increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 330
score: 98.99466959635417
patch: increment CaMeL Iterations CaMeL Counter ( rows ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 331
score: 99.191650390625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 331
score: 99.09010532924107
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) . ;
rank: 331
score: 99.08153187144886
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor , x CaMeL Norm , sum ) ;
rank: 331
score: 99.08059512867646
patch: increment CaMeL Iterations CaMeL Counter ( ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 331
score: 99.06534616570724
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols && x CaMeL Norm == 0 . 0 ;
rank: 331
score: 98.98153250558036
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) { ;
rank: 332
score: 99.09627278645833
patch: sb = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 332
score: 99.08994838169643
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; current = current . get CaMeL Iterations ( ) ;
rank: 332
score: 99.08141411675348
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += jac CaMeL Norm ; }
rank: 332
score: 99.08045151654412
patch: this . increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 332
score: 99.06524658203125
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm == 0 ) ;
rank: 332
score: 99.0429931640625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( System . out ) ;
rank: 332
score: 99.01124674479166
patch: if ( ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 332
score: 98.98150079900569
patch: p = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 333
score: 99.1912482766544
patch: lm CaMeL Par = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ;
rank: 333
score: 99.09574381510417
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; update CaMeL Jacobian ( ) ;
rank: 333
score: 99.08126627604166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = true ;
rank: 333
score: 99.06520589192708
patch: increment CaMeL Iterations CaMeL Counter ( this , objective ) ;
rank: 333
score: 99.04283447265625
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( current , ) ;
rank: 333
score: 99.01061072716347
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( ( int )
rank: 333
score: 98.99425591362848
patch: inst = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 333
score: 98.98146565755208
patch: long * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 334
score: 99.09565286075367
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( point ) ;
rank: 334
score: 99.04249108355978
patch: increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 334
score: 99.01019287109375
patch: increment CaMeL Iterations CaMeL Counter ( - 1 [ 1 ] ) ;
rank: 334
score: 98.99397108289931
patch: a = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 334
score: 98.98030911959134
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) {
rank: 335
score: 99.19080171130952
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current += current ;
rank: 335
score: 99.08880145733173
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 335
score: 99.08085123697917
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = this ;
rank: 335
score: 99.07998477711396
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 335
score: 99.0646728515625
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 335
score: 99.0099589029948
patch: increment CaMeL Iterations CaMeL Counter 1 ( - 1 ) ;
rank: 335
score: 98.99378551136364
patch: increment CaMeL Iterations CaMeL Counter ( , point ) ;
rank: 335
score: 98.98007436899039
patch: increment CaMeL Iterations CaMeL Counter ( - - 1 1 ) ;
rank: 336
score: 99.18982805524554
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , 0 . 0 ) ;
rank: 336
score: 99.08871694711539
patch: while ( ! ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 336
score: 99.080810546875
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; update CaMeL Jacobian ( ) ;
rank: 336
score: 99.07993386008523
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 336
score: 99.04124691611842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . get CaMeL Parent ( ) ;
rank: 336
score: 98.9932861328125
patch: this = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 336
score: 98.9797832782452
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ; ) ;
rank: 337
score: 99.08848219651442
patch: current = ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 337
score: 99.0806640625
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; boolean first CaMeL Iteration = true ;
rank: 337
score: 99.06414031982422
patch: increment CaMeL Iterations CaMeL Counter ( false , point , first CaMeL Iteration ) ;
rank: 337
score: 99.0412365141369
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , old CaMeL X , ) ;
rank: 337
score: 98.99235026041667
patch: ch = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 337
score: 98.97933959960938
patch: increment CaMeL Iterations CaMeL Counter ( - != $NUMBER$ ) ;
rank: 338
score: 99.18966674804688
patch: new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 338
score: 99.09445029810855
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; lm CaMeL Par = 0 ;
rank: 338
score: 99.08845658735795
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 338
score: 99.07933407738095
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; this . increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 338
score: 99.0631103515625
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cols , x CaMeL Norm ) ;
rank: 338
score: 98.99191123560855
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; / /
rank: 339
score: 99.09356689453125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int x CaMeL Norm = 0 . 0 ;
rank: 339
score: 99.07933285361842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 339
score: 99.06299591064453
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , x CaMeL Norm ) ;
rank: 339
score: 99.04057173295455
patch: if ( old CaMeL X . starts CaMeL With ( $STRING$ ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 339
score: 99.00881723257211
patch: increment CaMeL Iterations CaMeL Counter ( - 1 + 1 ) ;
rank: 339
score: 98.99168982872597
patch: if ( update CaMeL Residuals CaMeL And CaMeL Cost ( ) )
rank: 339
score: 98.97704060872395
patch: increment CaMeL Iterations CaMeL Counter ( 0 - 1 ) ;
rank: 340
score: 99.07881927490234
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 ; }
rank: 340
score: 99.03994750976562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Daemon ( true ) ;
rank: 340
score: 98.99163208007812
patch: -- increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 341
score: 99.18856811523438
patch: update CaMeL Jacobian ( false ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 341
score: 99.09186260516827
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = 1 ;
rank: 341
score: 99.08829074435764
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( current . ) ) ;
rank: 341
score: 99.07886420355902
patch: if ( increment CaMeL Iterations CaMeL Counter <= ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 341
score: 99.06182502297794
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 341
score: 99.03969163161058
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; ) ;
rank: 341
score: 98.97692057291667
patch: if ( list == null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 342
score: 99.18823852539063
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; if ( first CaMeL Iteration ) {
rank: 342
score: 99.09135999177632
patch: work $NUMBER$ = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 342
score: 99.07886352539063
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 342
score: 99.07850477430556
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * point ) ;
rank: 342
score: 99.06148856026786
patch: if ( first CaMeL Iteration ) { x CaMeL Norm = 0 ;
rank: 342
score: 99.03959728422619
patch: increment CaMeL Iterations CaMeL Counter ( ) ; try { current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 342
score: 98.99076843261719
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; else
rank: 342
score: 98.97675432477679
patch: Iterations [ $NUMBER$ ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 343
score: 99.1877108487216
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; }
rank: 343
score: 99.0911865234375
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 343
score: 99.08730740017361
patch: increment CaMeL Iterations CaMeL Counter ++ ; ;
rank: 343
score: 99.07856889204545
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter += increment CaMeL Iterations CaMeL Counter ;
rank: 343
score: 99.07819213867188
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; lm CaMeL Par = 0 ;
rank: 343
score: 99.00813802083333
patch: this . increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 343
score: 98.99029541015625
patch: i = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 343
score: 98.97655232747395
patch: increment CaMeL Iterations CaMeL Counter ( - - - ) ;
rank: 344
score: 99.1874008178711
patch: if ( true ) { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 344
score: 99.08939855238971
patch: try { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . this ;
rank: 344
score: 99.08656529017857
patch: state = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 344
score: 99.07814127604166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = 0 . 0 ;
rank: 344
score: 99.0607401529948
patch: if ( true ) { qr CaMeL Decomposition ( ) ;
rank: 344
score: 99.0080233487216
patch: list = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 344
score: 98.98968505859375
patch: if ( first CaMeL Iteration && first CaMeL Iteration ) {
rank: 344
score: 98.9765292080966
patch: increment CaMeL Iterations CaMeL Counter ( false $NUMBER$ ) ;
rank: 345
score: 99.07830489309211
patch: n = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 345
score: 99.03805202907986
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) + 1 ) ;
rank: 345
score: 99.00732421875
patch: increment CaMeL Iterations CaMeL Counter ( * - $NUMBER$ ) ;
rank: 345
score: 98.98964146205357
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) != 0 ) {
rank: 345
score: 98.97645060221355
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 346
score: 99.18703988882211
patch: increment CaMeL Iterations CaMeL Counter ( current , objective ) ; }
rank: 346
score: 99.07802124023438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 346
score: 99.07756958007812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( this ) ;
rank: 346
score: 99.06027221679688
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , diag ) ;
rank: 346
score: 99.03778545673077
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = false ;
rank: 346
score: 99.0072354403409
patch: increment CaMeL Iterations CaMeL Counter ( < 1 ) ;
rank: 346
score: 98.98922390407986
patch: buffer = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 346
score: 98.97628079927884
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) + ) ;
rank: 347
score: 99.08728841145833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = 0 . 0 ;
rank: 347
score: 99.07771606445313
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 347
score: 99.03776041666667
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( )
rank: 347
score: 99.00702459161931
patch: increment CaMeL Iterations CaMeL Counter ( >> 1 ) ;
rank: 347
score: 98.9889275045956
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( residuals ) ) ;
rank: 347
score: 98.9759765625
patch: increment CaMeL Iterations CaMeL Counter ( null ) ;
rank: 348
score: 99.1867908296131
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) true ) . update CaMeL Jacobian ( ) ;
rank: 348
score: 99.08719889322917
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . this ;
rank: 348
score: 99.08601888020833
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; current . increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 348
score: 99.07766884251645
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 348
score: 99.03773328993056
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) .
rank: 348
score: 99.00664728338069
patch: connection . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 348
score: 98.98872205946181
patch: output = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 348
score: 98.97596842447916
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } catch ( Exception
rank: 349
score: 99.18665771484375
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation , objective ) ;
rank: 349
score: 99.08708953857422
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , solved CaMeL Cols ) ;
rank: 349
score: 99.08601684570313
patch: this . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 349
score: 99.07745682565789
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 349
score: 99.07651192801339
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; break ;
rank: 349
score: 99.05945763221153
patch: lm CaMeL Par = 0 ; update CaMeL Jacobian ( ) ;
rank: 349
score: 99.03766424005681
patch: int start = System . current CaMeL Time CaMeL Millis ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 349
score: 99.00594075520833
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter < 0 )
rank: 349
score: 98.97532145182292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ) ;
rank: 350
score: 99.18617650082237
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 350
score: 99.07686767578124
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 350
score: 99.0059063251202
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 350
score: 98.97506713867188
patch: increment CaMeL Iterations CaMeL Counter ( 1 , null ) ;
rank: 351
score: 99.1856689453125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 351
score: 99.08655657087054
patch: increment CaMeL Iterations CaMeL Counter -- ; first CaMeL Iteration = true ;
rank: 351
score: 99.08553274054276
patch: temp = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 351
score: 99.07662963867188
patch: if ( increment CaMeL Iterations CaMeL Counter > $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 351
score: 99.05921173095703
patch: if ( cost == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 351
score: 99.00583902994792
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) {
rank: 351
score: 98.98746066623264
patch: g = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 351
score: 98.97484334309895
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , false ) ;
rank: 352
score: 99.18482607886905
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( ) ;
rank: 352
score: 99.08507719494048
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; * /
rank: 352
score: 99.07657663445724
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 352
score: 99.05892944335938
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cols , first CaMeL Iteration ) ;
rank: 352
score: 99.03737278988487
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) - 1 ;
rank: 352
score: 99.00553385416667
patch: increment CaMeL Iterations CaMeL Counter ( + - 1 ) ;
rank: 352
score: 98.98707885742188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return 0 ;
rank: 352
score: 98.9746981534091
patch: n = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 353
score: 99.18480009191177
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new int [ cols ] ;
rank: 353
score: 99.0854851217831
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( null ) ;
rank: 353
score: 99.0843505859375
patch: cur = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 353
score: 99.07627175071023
patch: if ( increment CaMeL Iterations CaMeL Counter == ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 353
score: 99.05848795572916
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm ) ; }
rank: 353
score: 98.98611789279514
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . update CaMeL Jacobian ( residuals ) ;
rank: 353
score: 98.9743182842548
patch: increment CaMeL Iterations CaMeL Counter ( - - 0 $NUMBER$ ) ;
rank: 354
score: 99.18413543701172
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = null ;
rank: 354
score: 99.084228515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return current ; }
rank: 354
score: 99.07569580078125
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) != ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 354
score: 99.05842420789931
patch: increment CaMeL Iterations CaMeL Counter ( cols , solved CaMeL Cols , lm CaMeL Dir ) ;
rank: 354
score: 99.0369364420573
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; }
rank: 354
score: 98.98597412109375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( null ) ;
rank: 354
score: 98.97403390066964
patch: if < 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 355
score: 99.18363647460937
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current ++ ;
rank: 355
score: 99.0847103721217
patch: increment CaMeL Iterations CaMeL Counter ++ ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current
rank: 355
score: 99.07542660361842
patch: root = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 355
score: 99.07500930059524
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 355
score: 99.03674897693452
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; current . increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 355
score: 99.00527121803977
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) (
rank: 355
score: 98.97288818359375
patch: throw increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 356
score: 99.18327062270221
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; while ( true )
rank: 356
score: 99.05689832899306
patch: increment CaMeL Iterations CaMeL Counter ( false , solved CaMeL Cols , lm CaMeL Dir ) ;
rank: 356
score: 99.0367098721591
patch: increment CaMeL Iterations CaMeL Counter ( current . double CaMeL Value ( ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 356
score: 99.00482584635417
patch: throw new Runtime CaMeL Exception ( $STRING$ + increment CaMeL Iterations CaMeL Counter ;
rank: 356
score: 98.97266642252605
patch: increment CaMeL Iterations CaMeL Counter ( - - true ) ;
rank: 357
score: 99.18312377929688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair )
rank: 357
score: 99.0832989032452
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for ( ; )
rank: 357
score: 99.07511821546052
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 357
score: 99.05686848958334
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; x CaMeL Norm = 0 ;
rank: 357
score: 99.0367072610294
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; }
rank: 357
score: 99.00461989182692
patch: this . value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 357
score: 98.98472243088942
patch: cur = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 357
score: 98.97187943892045
patch: dim = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 358
score: 99.1830062866211
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( permutation ) ;
rank: 358
score: 99.08354048295455
patch: increment CaMeL Iterations CaMeL Counter <= solved CaMeL Cols ;
rank: 358
score: 99.08311767578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 358
score: 99.07447052001953
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; qr CaMeL Decomposition ( ) ;
rank: 358
score: 99.07408558238636
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 358
score: 99.05682842548077
patch: x CaMeL Norm = 0 ; qr CaMeL Decomposition ( ) ;
rank: 358
score: 98.98459344161184
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 359
score: 99.18265206473214
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) . if ( first CaMeL Iteration )
rank: 359
score: 99.07390594482422
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; lm CaMeL Dir = 0 ;
rank: 359
score: 99.07331986860795
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 359
score: 99.05681610107422
patch: increment CaMeL Iterations CaMeL Counter ( true , x CaMeL Norm == 0 ) ;
rank: 359
score: 99.03657612047698
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) current . get CaMeL Value ( ) ) ;
rank: 359
score: 99.00354875837054
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) >= 0 ) {
rank: 359
score: 98.98457475142045
patch: increment CaMeL Iterations CaMeL Counter ( == 0 ) ;
rank: 359
score: 98.97166224888393
patch: if ( = ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 360
score: 99.08214750744048
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ;
rank: 360
score: 99.07374877929688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( permutation ) ;
rank: 360
score: 99.0726677389706
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 360
score: 99.05680338541667
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , point ) ;
rank: 360
score: 99.03617037259616
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; return current ;
rank: 360
score: 99.00304565429687
patch: this . increment CaMeL Iterations CaMeL Counter -- ;
rank: 360
score: 98.98418511284723
patch: temp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 360
score: 98.97148786272321
patch: final if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 361
score: 99.18223063151042
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , 0 ) ;
rank: 361
score: 99.08271869860198
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; increment CaMeL Iterations CaMeL Counter ( cols ) ;
rank: 361
score: 99.07352294921876
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; x CaMeL Norm += jac CaMeL Norm ;
rank: 361
score: 99.0726677389706
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ;
rank: 361
score: 99.05672781808036
patch: increment CaMeL Iterations CaMeL Counter += solved CaMeL Cols [ 0 ] ;
rank: 361
score: 99.0355557528409
patch: input = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 361
score: 99.00225275213069
patch: panel . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 361
score: 98.97140502929688
patch: System . * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 362
score: 99.08201090494792
patch: if ( true ) { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 362
score: 99.07266235351562
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) false ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 362
score: 99.05641526442308
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag ( ) ;
rank: 362
score: 99.001806640625
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; int
rank: 362
score: 98.98295762803819
patch: re = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 362
score: 98.97139798677884
patch: increment CaMeL Iterations CaMeL Counter ( , - - 1 ) ;
rank: 363
score: 99.18159993489583
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , permutation ) ;
rank: 363
score: 99.08181762695312
patch: res = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 363
score: 99.07268415178571
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current = current ;
rank: 363
score: 99.071533203125
patch: else increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 363
score: 99.0560546875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm ) ; }
rank: 363
score: 99.0351333618164
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current . remove ( ) ;
rank: 363
score: 99.001220703125
patch: if ( start ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 363
score: 98.97064615885417
patch: Iterations [ 0 ] = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 364
score: 99.18149701286765
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { update CaMeL Jacobian ( ) ; }
rank: 364
score: 99.08122907366071
patch: previous = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 364
score: 99.07195366753473
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; lm CaMeL Par = 0 ;
rank: 364
score: 99.0696688565341
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 364
score: 99.03443818933823
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 364
score: 98.98281424386161
patch: increment CaMeL Iterations CaMeL Counter ( qr CaMeL Decomposition ( ) ) ;
rank: 365
score: 99.18137613932292
patch: increment CaMeL Iterations CaMeL Counter ( null ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 365
score: 99.07192993164062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = true ; }
rank: 365
score: 99.06949869791667
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 365
score: 99.05545806884766
patch: increment CaMeL Iterations CaMeL Counter ( cols , cols , x CaMeL Norm ) ;
rank: 365
score: 99.03439812911184
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ( ;
rank: 365
score: 98.99927867542614
patch: sink . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 365
score: 98.98267957899306
patch: event = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 365
score: 98.97046837439903
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ [ 1 ] ) ;
rank: 366
score: 99.1813605813419
patch: if ( x CaMeL Norm ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 366
score: 99.08065635279605
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 366
score: 99.08046061197916
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 366
score: 99.07190619574652
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; boolean first CaMeL Iteration = false ;
rank: 366
score: 99.06936306423611
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 366
score: 99.05435616629464
patch: increment CaMeL Iterations CaMeL Counter ( false , lm CaMeL Par ) ;
rank: 366
score: 99.03434244791667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy ( increment CaMeL Iterations CaMeL Counter , ) ;
rank: 366
score: 98.99912672776442
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; for (
rank: 366
score: 98.98258666992187
patch: if ( increment CaMeL Iterations CaMeL Counter ) {
rank: 366
score: 98.97037447415866
patch: increment CaMeL Iterations CaMeL Counter ( - 1 $NUMBER$ 1 ) ;
rank: 367
score: 99.18117804276316
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 367
score: 99.08037252987133
patch: increment CaMeL Iterations CaMeL Counter -- ; increment CaMeL Iterations CaMeL Counter ( ) ; {
rank: 367
score: 99.07998860677084
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ;
rank: 367
score: 99.06907348632812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 367
score: 99.05372111002605
patch: increment CaMeL Iterations CaMeL Counter ( null , objective ) ;
rank: 367
score: 99.03408474392361
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 367
score: 98.99908447265625
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 367
score: 98.98252467105263
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , 0 ) ;
rank: 367
score: 98.9703369140625
patch: int ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 368
score: 99.07984683388158
patch: if ( increment CaMeL Iterations CaMeL Counter < $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 368
score: 99.0714619954427
patch: increment CaMeL Iterations CaMeL Counter ( jac CaMeL Norm ) ;
rank: 368
score: 99.05357450597427
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / x CaMeL Norm = 0 ;
rank: 368
score: 99.03324962797619
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + 1 , ) ;
rank: 368
score: 98.99900465745192
patch: start ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 368
score: 98.98228053042763
patch: int current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 368
score: 98.97028057391827
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . ; ;
rank: 369
score: 99.1809326171875
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) .
rank: 369
score: 99.07967122395833
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm = 1 . 0 ;
rank: 369
score: 99.07064819335938
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , objective ) ;
rank: 369
score: 99.05324300130208
patch: increment CaMeL Iterations CaMeL Counter <= solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 369
score: 99.033203125
patch: while ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . remove ( ) ;
rank: 369
score: 98.9989725748698
patch: } else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 369
score: 98.969970703125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ) ;
rank: 370
score: 99.18082468133224
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 370
score: 99.07062322443181
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor ) ; lm CaMeL Dir = 0 ;
rank: 370
score: 99.06850714432566
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 370
score: 99.05280219184027
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols , lm CaMeL Par ) ;
rank: 370
score: 98.9988037109375
patch: synchronized ( int 1 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 370
score: 98.98209228515626
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; / * /
rank: 370
score: 98.96980424360795
patch: long * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 371
score: 99.07957821800595
patch: inst = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 371
score: 99.07826063368056
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ ) ;
rank: 371
score: 99.0698009672619
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 371
score: 99.03271484375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . exit ( ) ;
rank: 371
score: 98.99876051682692
patch: ) { increment CaMeL Iterations CaMeL Counter ( - 1 ) ;
rank: 371
score: 98.96863731971153
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + $NUMBER$ 1 ) ;
rank: 372
score: 99.069775390625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = $STRING$ ;
rank: 372
score: 99.03243001302083
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; ) ;
rank: 372
score: 98.99872295673077
patch: try { increment CaMeL Iterations CaMeL Counter ( + 1 ) ;
rank: 372
score: 98.96842447916667
patch: increment CaMeL Iterations CaMeL Counter ( 1 $NUMBER$ $NUMBER$ ) ;
rank: 373
score: 99.07933285361842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; do { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 373
score: 99.07547200520834
patch: increment CaMeL Iterations CaMeL Counter ++ ; work $NUMBER$ = jac CaMeL Norm ;
rank: 373
score: 99.06915283203125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( cols ) ;
rank: 373
score: 99.067578125
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) - ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 373
score: 99.051513671875
patch: increment CaMeL Iterations CaMeL Counter ( cols , residuals ) ;
rank: 373
score: 98.9670879657452
patch: increment CaMeL Iterations CaMeL Counter ( 1 + $NUMBER$ 1 ) ;
rank: 374
score: 99.17939838610198
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 374
score: 99.07894736842105
patch: b = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 374
score: 99.06913677014802
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( cols ) ;
rank: 374
score: 99.06722005208333
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 374
score: 99.05123901367188
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cost ) ;
rank: 374
score: 99.03198852539063
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , old CaMeL X ) ;
rank: 374
score: 98.99814860026042
patch: this . increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ;
rank: 374
score: 98.98167419433594
patch: increment CaMeL Iterations CaMeL Counter ( , ) ; update CaMeL Jacobian ( ) ;
rank: 375
score: 99.17938232421875
patch: if ( qr CaMeL Decomposition ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 375
score: 99.07427106584821
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Dir ( ) ;
rank: 375
score: 99.06909790039063
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL X , delta , diag CaMeL R ) ;
rank: 375
score: 99.06695087139423
patch: state = this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 375
score: 98.99730335582386
patch: l = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 375
score: 98.96641956676136
patch: increment CaMeL Iterations CaMeL Counter ( true 1 ) ;
rank: 376
score: 99.17925666360294
patch: throw new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 376
score: 99.07346413352273
patch: x CaMeL Norm = new int [ cols ] ;
rank: 376
score: 99.06693307976974
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 376
score: 99.03122780539773
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;
rank: 376
score: 98.99725341796875
patch: this . increment CaMeL Iterations CaMeL Counter ( - ) ;
rank: 376
score: 98.98147583007812
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; qr CaMeL Decomposition ( ) ;
rank: 376
score: 98.96614583333333
patch: increment CaMeL Iterations CaMeL Counter ( this - 0 ) ;
rank: 377
score: 99.078564453125
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 377
score: 99.07331399356617
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 1 . 0 ; }
rank: 377
score: 99.068359375
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , x CaMeL Norm , sum ) ;
rank: 377
score: 99.06652113970588
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = ) ;
rank: 377
score: 99.03089735243056
patch: increment CaMeL Iterations CaMeL Counter ( current , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 377
score: 98.99718299278847
patch: increment CaMeL Iterations CaMeL Counter ( - 1 - 1 ) ;
rank: 377
score: 98.98074001736111
patch: this . qr CaMeL Decomposition ( ) ;
rank: 377
score: 98.9661356608073
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; ) ;
rank: 378
score: 99.07327706473214
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += 1 ;
rank: 378
score: 99.06824340820313
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter * x CaMeL Norm ) ; break ;
rank: 378
score: 99.06618088942308
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 378
score: 99.0306063565341
patch: increment CaMeL Iterations CaMeL Counter ( current . ) ;
rank: 378
score: 98.9967041015625
patch: max = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 378
score: 98.98037237870066
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) + 0 ;
rank: 378
score: 98.96555873325893
patch: } if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 379
score: 99.17885335286458
patch: pk = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 379
score: 99.07285563151042
patch: x CaMeL Norm = Math . sqrt ( x CaMeL Norm , diag CaMeL R ) ;
rank: 379
score: 99.06594366776316
patch: frame = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 379
score: 98.99646935096153
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 379
score: 98.96525355747768
patch: ( ( int ) increment CaMeL Iterations CaMeL Counter ( ) ) .
rank: 380
score: 99.07815712376645
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 380
score: 99.06732584635417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = permutation ;
rank: 380
score: 99.06583658854167
patch: if ( increment CaMeL Iterations CaMeL Counter > ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 380
score: 99.05036926269531
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 380
score: 99.0304296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 380
score: 98.99639337713069
patch: Main . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 380
score: 98.98019248560855
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 381
score: 99.06574563419117
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 381
score: 99.04979112413194
patch: if ( lm CaMeL Par == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 381
score: 99.03041811342592
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 381
score: 98.98014751233552
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( diag ) ;
rank: 381
score: 98.96461070667614
patch: int ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 382
score: 99.17848714192708
patch: increment CaMeL Iterations CaMeL Counter ( current , permutation ) ;
rank: 382
score: 99.07756042480469
patch: increment CaMeL Iterations CaMeL Counter ( ) ; -- increment CaMeL Iterations CaMeL Counter ;
rank: 382
score: 99.07181125217014
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double x CaMeL Norm = 1 . 0 ;
rank: 382
score: 99.065673828125
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = ) ;
rank: 382
score: 99.04969278971355
patch: increment CaMeL Iterations CaMeL Counter += diag [ 0 ] ;
rank: 382
score: 98.99622453962054
patch: increment CaMeL Iterations CaMeL Counter ( * 1 [ 0 ] ) ;
rank: 382
score: 98.96457143930289
patch: increment CaMeL Iterations CaMeL Counter ( - - - $NUMBER$ ) ;
rank: 383
score: 99.17830164292279
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = new double [ rows ] ;
rank: 383
score: 99.07750244140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current = ;
rank: 383
score: 99.0665616122159
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = 0 ;
rank: 383
score: 99.06546823601974
patch: else increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 383
score: 99.04965209960938
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cols , solved CaMeL Cols ) ;
rank: 383
score: 98.99619547526042
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int * *
rank: 383
score: 98.97965864701705
patch: increment CaMeL Iterations CaMeL Counter ( ) ; finally {
rank: 383
score: 98.96440778459821
patch: for ( int ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 384
score: 99.07735188802083
patch: while ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 384
score: 99.07081604003906
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Dir = 0 . 0 ;
rank: 384
score: 99.06587357954545
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 ;
rank: 384
score: 99.065185546875
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 384
score: 99.04949951171875
patch: increment CaMeL Iterations CaMeL Counter ( true , lm CaMeL Par ) ;
rank: 384
score: 98.99615478515625
patch: assert new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 384
score: 98.9792813387784
patch: increment CaMeL Iterations CaMeL Counter ( & 1 ) ;
rank: 384
score: 98.96437424879808
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , - 1 ) ;
rank: 385
score: 99.07068684895833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = 1 . 0 ;
rank: 385
score: 99.0653409090909
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 385
score: 99.02975945723684
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 385
score: 98.99599984975961
patch: tmp [ ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 385
score: 98.979248046875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ; else
rank: 385
score: 98.96421305338542
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ false ) ;
rank: 386
score: 99.17757975260416
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( first CaMeL Iteration )
rank: 386
score: 99.07058481069711
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = cols ] ;
rank: 386
score: 99.04899766710069
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , solved CaMeL Cols ) ;
rank: 386
score: 98.99580522017045
patch: this ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 386
score: 98.97862484580592
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , true ) ;
rank: 386
score: 98.96414184570312
patch: ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 387
score: 99.0759989420573
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for ( )
rank: 387
score: 99.04876302083333
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols , ) ;
rank: 387
score: 98.99556187220982
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . out . ;
rank: 387
score: 98.96410115559895
patch: increment CaMeL Iterations CaMeL Counter ( - > 0 ) ;
rank: 388
score: 99.17741956208882
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 388
score: 99.07570286800987
patch: if ( increment CaMeL Iterations CaMeL Counter <= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 388
score: 99.07035104851974
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; current = current ;
rank: 388
score: 99.06427965666118
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 388
score: 99.04844835069444
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , diag CaMeL R ) ;
rank: 388
score: 98.9640643780048
patch: increment CaMeL Iterations CaMeL Counter ( - - 0 1 ) ;
rank: 389
score: 99.17736235119048
patch: increment CaMeL Iterations CaMeL Counter ( - ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm )
rank: 389
score: 99.07548692491319
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 389
score: 99.0652087983631
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 389
score: 99.0640869140625
patch: if ( increment CaMeL Iterations CaMeL Counter != ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 389
score: 99.04794491038604
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 0 . $NUMBER$ ;
rank: 389
score: 98.99525669642857
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 389
score: 98.97813415527344
patch: z = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 389
score: 98.9631856282552
patch: increment CaMeL Iterations CaMeL Counter ( 0 - $NUMBER$ ) ;
rank: 390
score: 99.07542509191177
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter = ) ;
rank: 390
score: 99.06952776227679
patch: increment CaMeL Iterations CaMeL Counter -= solved CaMeL Cols [ 0 ] ;
rank: 390
score: 99.0479024251302
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , cols ) ;
rank: 390
score: 98.9950838955966
patch: doc . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 391
score: 99.06939290364583
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) ;
rank: 391
score: 99.06463623046875
patch: boolean first CaMeL Iteration = true ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = this ;
rank: 391
score: 99.02864583333333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Length ( 0 ) ;
rank: 391
score: 98.9950838955966
patch: printer . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 391
score: 98.97738037109374
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( , ) ;
rank: 391
score: 98.96304086538461
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ [ 0 ] ) ;
rank: 392
score: 99.1754214638158
patch: { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 392
score: 99.07427014802632
patch: g = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 392
score: 99.06912994384766
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 0 . 1 ;
rank: 392
score: 99.04758707682292
patch: increment CaMeL Iterations CaMeL Counter ( cols , point ) ;
rank: 392
score: 98.99434037642045
patch: layout . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 392
score: 98.97726779513889
patch: b = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 392
score: 98.9627216045673
patch: if ( * increment CaMeL Iterations CaMeL Counter > 0 ) {
rank: 393
score: 99.17478637695312
patch: if ( first CaMeL Iteration || first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 393
score: 99.07405598958333
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 393
score: 99.06873430524554
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , current ) ;
rank: 393
score: 99.06326114430146
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , increment CaMeL Iterations CaMeL Counter ) ;
rank: 393
score: 99.04744466145833
patch: increment CaMeL Iterations CaMeL Counter ( 1 , point ) ;
rank: 393
score: 98.99430084228516
patch: increment CaMeL Iterations CaMeL Counter ) ;
rank: 393
score: 98.9626131924716
patch: double * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 394
score: 99.17463764391448
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 394
score: 99.0739974975586
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 394
score: 99.06868250229779
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += 1 . 0 ; }
rank: 394
score: 99.06303967927632
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 394
score: 99.047216796875
patch: increment CaMeL Iterations CaMeL Counter < 0 ; x CaMeL Norm = 0 ;
rank: 394
score: 99.02772281044408
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 394
score: 98.99370868389423
patch: if ( start ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 394
score: 98.97655571831598
patch: transaction = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 395
score: 99.17436667049633
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } boolean first CaMeL Iteration = true ;
rank: 395
score: 99.073974609375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 395
score: 99.06217876233552
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; } ;
rank: 395
score: 99.04720052083333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = 1 . 0 ;
rank: 395
score: 99.02734375
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . remove ( 0 ) ;
rank: 395
score: 98.993408203125
patch: this . increment CaMeL Iterations CaMeL Counter < 1 ;
rank: 395
score: 98.97638617621527
patch: obj = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 395
score: 98.96212768554688
patch: increment CaMeL Iterations CaMeL Counter ( 1 , * ) ;
rank: 396
score: 99.07365337171052
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 396
score: 99.06309509277344
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res , solved CaMeL Cols ) ;
rank: 396
score: 99.06173270089286
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 396
score: 99.0469970703125
patch: increment CaMeL Iterations CaMeL Counter ( true , point , first CaMeL Iteration ) ;
rank: 396
score: 99.02726440429687
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; break ;
rank: 396
score: 98.9932373046875
patch: this . increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ;
rank: 396
score: 98.96194022042411
patch: increment CaMeL Iterations CaMeL Counter ( - - - - 1 ) ;
rank: 397
score: 99.07365199497768
patch: while ( ! ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 397
score: 99.06704275948661
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] = 0 . 0 ;
rank: 397
score: 99.06303325452302
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 397
score: 99.06063682154605
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ) ;
rank: 397
score: 99.04693603515625
patch: increment CaMeL Iterations CaMeL Counter ( 0 , point , objective ) ;
rank: 397
score: 99.02726236979167
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( current . ) {
rank: 397
score: 98.99305138221153
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 397
score: 98.97633870442708
patch: ps = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 397
score: 98.96178260216347
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) 0 ) {
rank: 398
score: 99.17398834228516
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } lm CaMeL Par ( ) ;
rank: 398
score: 99.07354736328125
patch: current = current . ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 398
score: 99.06651395909927
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , jacobian ) ;
rank: 398
score: 99.0271728515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Arrays . sort ( ) ;
rank: 398
score: 98.99227201021634
patch: increment CaMeL Iterations CaMeL Counter ( / 1 , null ) ;
rank: 398
score: 98.97633120888158
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 399
score: 99.17385684742646
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else { update CaMeL Jacobian ( ) ;
rank: 399
score: 99.06639862060547
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += jac CaMeL Norm ;
rank: 399
score: 99.0624755859375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = 1 ;
rank: 399
score: 99.06055908203125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; continue ; }
rank: 399
score: 99.04665958180146
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter < ) ;
rank: 399
score: 98.99215262276786
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) - 0 ) ;
rank: 399
score: 98.9615478515625
patch: increment CaMeL Iterations CaMeL Counter ( 1 , / ) ;
rank: 400
score: 99.0734354654948
patch: current = increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 400
score: 99.06218610491071
patch: increment CaMeL Iterations CaMeL Counter ( diag , x CaMeL Norm ) ;
rank: 400
score: 99.0465087890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = 1 ;
rank: 400
score: 99.02684110753677
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) {
rank: 400
score: 98.99168043870192
patch: int * * / increment CaMeL Iterations CaMeL Counter = ) ;
rank: 400
score: 98.96128493088942
patch: increment CaMeL Iterations CaMeL Counter ( - - 1 $NUMBER$ ) ;
rank: 401
score: 99.06625162760416
patch: res = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 401
score: 99.06201171875
patch: increment CaMeL Iterations CaMeL Counter ( point ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 401
score: 99.058740234375
patch: finally { increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 401
score: 99.02642463235294
patch: while ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) {
rank: 401
score: 98.9916280110677
patch: return this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 401
score: 98.97451782226562
patch: if ( lm CaMeL Par ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 401
score: 98.96096801757812
patch: int * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 402
score: 99.17310288373162
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , permutation ) ;
rank: 402
score: 99.06602647569444
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , current ) ;
rank: 402
score: 99.06173706054688
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; lm CaMeL Par = 0 ;
rank: 402
score: 99.05873509457237
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 402
score: 98.99148123604911
patch: increment CaMeL Iterations CaMeL Counter ( ( increment CaMeL Iterations CaMeL Counter ;
rank: 402
score: 98.97394409179688
patch: boolean first CaMeL Iteration = true ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ;
rank: 402
score: 98.96073404947917
patch: continue ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 403
score: 99.17303757440476
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; }
rank: 403
score: 99.072998046875
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 403
score: 99.06582845052084
patch: increment CaMeL Iterations CaMeL Counter ++ ; double first CaMeL Iteration = 0 ;
rank: 403
score: 99.06168823242187
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { }
rank: 403
score: 99.05855618990384
patch: increment CaMeL Iterations CaMeL Counter ( [ 1 ] , ) ;
rank: 403
score: 99.04605865478516
patch: if ( current != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 403
score: 99.02631971571181
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) continue ;
rank: 403
score: 98.99071155894886
patch: try { increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 403
score: 98.97356499565973
patch: node = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 403
score: 98.96059006911058
patch: increment CaMeL Iterations CaMeL Counter ( [ > 0 ] ) ;
rank: 404
score: 99.07270893297698
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 404
score: 99.0457763671875
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; update CaMeL Jacobian ( residuals ) ;
rank: 404
score: 98.97354736328126
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return true ;
rank: 405
score: 99.172265625
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( this , objective ) ;
rank: 405
score: 99.07257080078125
patch: if ( ! ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 405
score: 99.06565348307292
patch: if ( solved CaMeL Cols > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 405
score: 99.05789317255434
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ; }
rank: 405
score: 99.04561360677083
patch: if ( lm CaMeL Par != null ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 405
score: 99.0258152173913
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 405
score: 98.96005249023438
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; ) ;
rank: 406
score: 99.07242525540866
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ; }
rank: 406
score: 99.06109064275569
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ;
rank: 406
score: 99.05787242542614
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 406
score: 99.04542451746323
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 406
score: 99.02501860119048
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 0 , ) ;
rank: 406
score: 98.98990885416667
patch: increment CaMeL Iterations CaMeL Counter > ( - 1 ) ;
rank: 406
score: 98.95999145507812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; )
rank: 407
score: 99.1719109030331
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; x CaMeL Norm = 0 ;
rank: 407
score: 99.072265625
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 407
score: 99.06522623697917
patch: sum = Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 407
score: 99.06038411458333
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception
rank: 407
score: 99.04537803248355
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / current . update CaMeL Jacobian ( ) ;
rank: 407
score: 99.02499624399039
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 407
score: 98.98983999399039
patch: assert new ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 407
score: 98.97166442871094
patch: cur = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 407
score: 98.95994984019886
patch: iter = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 408
score: 99.07169966264205
patch: previous . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 408
score: 99.06021457248264
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; lm CaMeL Dir = current ;
rank: 408
score: 99.05733449835526
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 408
score: 99.04511260986328
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm == 0 ) ;
rank: 408
score: 99.02476917613636
patch: long start = System . current CaMeL Time CaMeL Millis ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 408
score: 98.97154405381944
patch: info = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 408
score: 98.95931803385416
patch: if ( < 1 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 409
score: 99.0716616981908
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 409
score: 99.06362017463235
patch: try { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . current ;
rank: 409
score: 99.05728759765626
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 409
score: 99.04459381103516
patch: if ( cost != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 409
score: 99.02445678710937
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ) ; }
rank: 409
score: 98.989697265625
patch: if ( ! increment CaMeL Iterations CaMeL Counter ;
rank: 409
score: 98.9713134765625
patch: m = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 409
score: 98.95897420247395
patch: increment CaMeL Iterations CaMeL Counter ( 1 1 false ) ;
rank: 410
score: 99.0716044108073
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 410
score: 99.06357150607639
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = current ; update CaMeL Jacobian ( ) ;
rank: 410
score: 99.04454210069444
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter += x CaMeL Norm ;
rank: 410
score: 99.02433268229167
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) , new ;
rank: 410
score: 98.9893047626202
patch: if ( ! increment CaMeL Iterations CaMeL Counter == 0 ) {
rank: 410
score: 98.97107611762152
patch: other = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 411
score: 99.06348528180804
patch: x CaMeL Norm = Math . abs ( x CaMeL Norm ) ;
rank: 411
score: 99.05907592773437
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; lm CaMeL Dir = 0 ;
rank: 411
score: 99.04453938802084
patch: increment CaMeL Iterations CaMeL Counter ( false , x CaMeL Norm ) ; }
rank: 411
score: 99.02413807744566
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . ;
rank: 411
score: 98.989013671875
patch: IDE . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 411
score: 98.97092507102273
patch: increment CaMeL Iterations CaMeL Counter ( , permutation ) ;
rank: 411
score: 98.95851643880208
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ 0 ) ;
rank: 412
score: 99.07129624310662
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( ) , ) ;
rank: 412
score: 99.06226303998162
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter < cols ) {
rank: 412
score: 99.04411969866071
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , objective ) ;
rank: 412
score: 99.02380823206019
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 412
score: 98.98728841145834
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ;
rank: 412
score: 98.9706802368164
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( . ) ;
rank: 413
score: 99.17063802083334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; jacobian = 1 . 0 ;
rank: 413
score: 99.07070440995066
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 413
score: 99.06173270089286
patch: return ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ;
rank: 413
score: 99.05672878689236
patch: if ( increment CaMeL Iterations CaMeL Counter == ) increment CaMeL Iterations CaMeL Counter = true ;
rank: 413
score: 99.0238037109375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 413
score: 98.98720139723558
patch: assert ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 413
score: 98.97067742598684
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , objective ) ;
rank: 414
score: 99.06169577205883
patch: lm CaMeL Dir = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 414
score: 99.05860537574405
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 414
score: 99.04315592447917
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 414
score: 99.0236179517663
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X ) ; increment CaMeL Iterations CaMeL Counter ( old CaMeL X ) ;
rank: 414
score: 98.98719200721153
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) { if (
rank: 414
score: 98.96963500976562
patch: this . current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 414
score: 98.95784505208333
patch: float * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 415
score: 99.07019914899554
patch: for ( ; ; ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 415
score: 99.05824681332237
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 415
score: 99.05583110608552
patch: if ( increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 415
score: 99.04283650716145
patch: increment CaMeL Iterations CaMeL Counter ( 0 . 0 ) ;
rank: 415
score: 99.02352905273438
patch: increment CaMeL Iterations CaMeL Counter ( 0 , current ) ;
rank: 415
score: 98.9870938387784
patch: expr = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 415
score: 98.96935317095588
patch: increment CaMeL Iterations CaMeL Counter ( ++ increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 415
score: 98.95769708806819
patch: iterator = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 416
score: 99.17012329101563
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 416
score: 99.07000054253473
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . notify CaMeL All ( ) ; }
rank: 416
score: 99.06089430588942
patch: increment CaMeL Iterations CaMeL Counter < first CaMeL Iteration = true ;
rank: 416
score: 99.0579833984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = false ;
rank: 416
score: 99.05521240234376
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) $NUMBER$ ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 416
score: 99.04280308314732
patch: increment CaMeL Iterations CaMeL Counter ( 1 , point , objective ) ;
rank: 416
score: 98.986962890625
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter -- ; ;
rank: 416
score: 98.96861049107143
patch: increment CaMeL Iterations CaMeL Counter ( update CaMeL Jacobian ( ) ) ;
rank: 416
score: 98.95745849609375
patch: System . ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 417
score: 99.16988699776786
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ; }
rank: 417
score: 99.0608269186581
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , this ) ;
rank: 417
score: 99.05787295386905
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( max ) ;
rank: 417
score: 99.04267321134868
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , solved CaMeL Cols , x CaMeL Norm ) ;
rank: 417
score: 99.02333470394737
patch: increment CaMeL Iterations CaMeL Counter ( current , ( int ) increment CaMeL Iterations CaMeL Counter ) ;
rank: 417
score: 98.986083984375
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter :
rank: 417
score: 98.96826171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 417
score: 98.95706176757812
patch: } increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 418
score: 99.06891338641827
patch: while ( ; ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 418
score: 99.06076485770089
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Par = current ;
rank: 418
score: 99.05780350534539
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . update CaMeL Jacobian ( ) ;
rank: 418
score: 99.05510864257812
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) > ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 418
score: 99.04227992466518
patch: increment CaMeL Iterations CaMeL Counter ( cols , cols , objective ) ;
rank: 418
score: 99.02322823660714
patch: data [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 418
score: 98.98548302283653
patch: finally { this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 418
score: 98.96822781032986
patch: listener = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 418
score: 98.95669320913461
patch: increment CaMeL Iterations CaMeL Counter ( 1 + - 1 ) ;
rank: 419
score: 99.06031036376953
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; update CaMeL Jacobian ( ) ;
rank: 419
score: 99.05760362413194
patch: increment CaMeL Iterations CaMeL Counter * initial CaMeL Step CaMeL Bound CaMeL Factor ( ) ; }
rank: 419
score: 99.05466871995192
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 419
score: 99.0417251586914
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , diag ) ;
rank: 419
score: 99.02272033691406
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( this ) ;
rank: 419
score: 98.98490397135417
patch: increment CaMeL Iterations CaMeL Counter ( / - $NUMBER$ ) ;
rank: 419
score: 98.96775987413194
patch: start = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 419
score: 98.95627848307292
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ $NUMBER$ 1 ) ;
rank: 420
score: 99.06014675564236
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = new double [ cols ] ;
rank: 420
score: 99.057373046875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = Math ;
rank: 420
score: 99.05299886067708
patch: increment CaMeL Iterations CaMeL Counter ( ; increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 420
score: 99.022509765625
patch: increment CaMeL Iterations CaMeL Counter ( current . ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 420
score: 98.95623309795673
patch: logger . { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 421
score: 99.06825358072916
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . run ( ) ;
rank: 421
score: 99.05984497070312
patch: final Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . current ;
rank: 421
score: 99.05734592013889
patch: boolean first CaMeL Iteration = true ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 421
score: 99.02230130709134
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int ( ) ;
rank: 421
score: 98.98288198617789
patch: int * * / increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 421
score: 98.96734260110294
patch: increment CaMeL Iterations CaMeL Counter ( ) ? initial CaMeL Step CaMeL Bound CaMeL Factor :
rank: 421
score: 98.9553555575284
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; ;
rank: 422
score: 99.06812959558823
patch: increment CaMeL Iterations CaMeL Counter ++ ; current . increment CaMeL Iterations CaMeL Counter -- ;
rank: 422
score: 99.0595703125
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , point ) ;
rank: 422
score: 99.0571044921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = cols ;
rank: 422
score: 99.0527099609375
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 422
score: 99.04157850477431
patch: if ( x CaMeL Norm > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 422
score: 99.02227172851562
patch: increment CaMeL Iterations CaMeL Counter ( current . increment CaMeL Iterations CaMeL Counter ( ) + 1 ) ;
rank: 423
score: 99.16815476190476
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( * x CaMeL Norm ) ;
rank: 423
score: 99.05910915798611
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; x CaMeL Norm = 0 . 0 ;
rank: 423
score: 99.05633544921875
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; first CaMeL Iteration = false ;
rank: 423
score: 99.05265502929687
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 423
score: 99.04157850477431
patch: increment CaMeL Iterations CaMeL Counter ( point , solved CaMeL Cols , lm CaMeL Dir ) ;
rank: 423
score: 99.02220740685097
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( this ) ) ;
rank: 423
score: 98.98121473524306
patch: increment CaMeL Iterations CaMeL Counter < ) ;
rank: 424
score: 99.16752794053819
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current ; update CaMeL Jacobian ( ) ; }
rank: 424
score: 99.06730346679687
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( ) ; ;
rank: 424
score: 99.05872395833333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( solved CaMeL Cols ;
rank: 424
score: 99.0525790127841
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 424
score: 99.04100884331598
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , solved CaMeL Cols , lm CaMeL Par ) ;
rank: 424
score: 99.02180698939732
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( current . ;
rank: 424
score: 98.96721942608173
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par [
rank: 424
score: 98.95315987723214
patch: if < 1 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 425
score: 99.06685144761029
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ; ;
rank: 425
score: 99.05609130859375
patch: increment CaMeL Iterations CaMeL Counter ( 0 * x CaMeL Norm ) ;
rank: 425
score: 99.0525390625
patch: while ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 425
score: 99.0408447265625
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 425
score: 99.02174660011575
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ( ) ) ; ;
rank: 425
score: 98.98096812855114
patch: data = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 425
score: 98.9530498798077
patch: increment CaMeL Iterations CaMeL Counter ( ( float ) 1 ) ;
rank: 426
score: 99.1672595796131
patch: update CaMeL Jacobian ( new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ) ;
rank: 426
score: 99.0666736421131
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 426
score: 99.0408203125
patch: increment CaMeL Iterations CaMeL Counter > 0 ; x CaMeL Norm = 0 ;
rank: 426
score: 99.02149658203125
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( current . ) ;
rank: 426
score: 98.96653238932292
patch: ke = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 427
score: 99.05565243675595
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * jac CaMeL Norm ) ; }
rank: 427
score: 99.0406494140625
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , objective ) ;
rank: 427
score: 99.02132161458333
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ) ;
rank: 427
score: 98.98067016601563
patch: increment CaMeL Iterations CaMeL Counter ; ( ) ;
rank: 427
score: 98.9663330078125
patch: if ( update CaMeL Jacobian ( ) ) {
rank: 427
score: 98.95254952566964
patch: increment CaMeL Iterations CaMeL Counter = ) increment CaMeL Iterations CaMeL Counter ;
rank: 428
score: 99.16659780649039
patch: current = current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 428
score: 99.06646437872024
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; * /
rank: 428
score: 99.0556281594669
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , x CaMeL Norm ) ; }
rank: 428
score: 99.051025390625
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; continue ;
rank: 428
score: 99.04054361979166
patch: increment CaMeL Iterations CaMeL Counter < cols ; x CaMeL Norm = 0 ;
rank: 428
score: 99.02084495907738
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) , ;
rank: 428
score: 98.97975852272727
patch: return new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 428
score: 98.9662198153409
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / {
rank: 428
score: 98.95242074819711
patch: increment CaMeL Iterations CaMeL Counter ( 1 , $NUMBER$ 1 ) ;
rank: 429
score: 99.04041205512152
patch: increment CaMeL Iterations CaMeL Counter ( cols , solved CaMeL Cols , lm CaMeL Par ) ;
rank: 429
score: 99.02081298828125
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; break ;
rank: 429
score: 98.9797030362216
patch: exp = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 429
score: 98.96576891447368
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor : ) ;
rank: 429
score: 98.95224233774039
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ - $NUMBER$ 1 ) ;
rank: 430
score: 99.16600623497597
patch: increment CaMeL Iterations CaMeL Counter ( point , objective ) ; }
rank: 430
score: 99.05533447265626
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( x CaMeL Norm , delta , diag CaMeL R ) ;
rank: 430
score: 99.04032389322917
patch: if ( old CaMeL X != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 430
score: 99.02052815755208
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 430
score: 98.9796612079327
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) >= 0 )
rank: 430
score: 98.9522372159091
patch: increment CaMeL Iterations CaMeL Counter ( ) + false ;
rank: 431
score: 99.06611328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( 1 ) ;
rank: 431
score: 99.05068734975961
patch: / * * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 431
score: 99.04013061523438
patch: increment CaMeL Iterations CaMeL Counter ( lm CaMeL Par ) ;
rank: 431
score: 99.02048828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader (
rank: 431
score: 98.96539984809027
patch: v = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 431
score: 98.95140787760417
patch: System . out . { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 432
score: 99.165283203125
patch: update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( ) ; }
rank: 432
score: 99.06605881911058
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . ) ;
rank: 432
score: 99.05668131510417
patch: x CaMeL Norm = 0 . 0 ; x CaMeL Norm = 0 . 0 ; }
rank: 432
score: 99.05495042067308
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = false ;
rank: 432
score: 99.05052548363095
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 432
score: 99.03999837239583
patch: diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 432
score: 99.02042846679687
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 432
score: 98.96517783717105
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 432
score: 98.9513651529948
patch: Iterations ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 433
score: 99.16523180509868
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / else increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 433
score: 99.06556919642857
patch: b = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 433
score: 99.03997802734375
patch: increment CaMeL Iterations CaMeL Counter ( this , cols ) ;
rank: 433
score: 99.02029418945312
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 433
score: 98.97846013849431
patch: model . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 433
score: 98.96510823567708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( + ) ;
rank: 434
score: 99.06474223889802
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 434
score: 99.05002955386513
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 434
score: 98.97829182942708
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ; ;
rank: 434
score: 98.96485137939453
patch: ae = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 435
score: 99.06468616832386
patch: helper . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 435
score: 99.04968872070313
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 435
score: 99.0396957397461
patch: if ( point != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 435
score: 99.019921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . append ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 435
score: 98.96480015345982
patch: if ( current instanceof Vectorial CaMeL Point CaMeL Value CaMeL Pair )
rank: 435
score: 98.95061786358173
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ - 1 ) ;
rank: 436
score: 99.04962713068181
patch: if ( this . increment CaMeL Iterations CaMeL Counter ( ) > ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 436
score: 99.01951090494792
patch: try { increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 436
score: 98.97747247869319
patch: tmp = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 436
score: 98.96422119140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; else
rank: 436
score: 98.95005446213942
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) $NUMBER$ ) {
rank: 437
score: 99.05475930606617
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , residuals ) ;
rank: 437
score: 99.05283490349265
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = solved CaMeL Cols ;
rank: 437
score: 99.04946664663461
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; break ; }
rank: 437
score: 99.01929873511905
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ;
rank: 437
score: 98.95001220703125
patch: increment CaMeL Iterations CaMeL Counter ( 0 + 0 ) ;
rank: 438
score: 99.06371392144098
patch: if ( increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 438
score: 99.0547103881836
patch: increment CaMeL Iterations CaMeL Counter ( ) ; catch ( Function CaMeL Evaluation CaMeL Exception
rank: 438
score: 99.0525894165039
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; lm CaMeL Dir = 0 ;
rank: 438
score: 99.01907958984376
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 438
score: 98.97625177556819
patch: res = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 438
score: 98.9495516690341
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } ;
rank: 439
score: 99.1639045266544
patch: increment CaMeL Iterations CaMeL Counter ( { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 439
score: 99.04899088541667
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 439
score: 99.03850997121711
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * current . update CaMeL Jacobian ( ) ;
rank: 439
score: 99.01897638494319
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 439
score: 98.97604370117188
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; int
rank: 439
score: 98.96401798023896
patch: increment CaMeL Iterations CaMeL Counter ( && increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 440
score: 99.16380673363095
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( + x CaMeL Norm ) ;
rank: 440
score: 99.06341193704044
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; increment CaMeL Iterations CaMeL Counter ++ ; ;
rank: 440
score: 99.05419243706598
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ;
rank: 440
score: 99.05230305989583
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag CaMeL R = 0 ;
rank: 440
score: 98.97542317708333
patch: increment CaMeL Iterations CaMeL Counter ( / 1 , ) ;
rank: 440
score: 98.94939630681819
patch: * * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 441
score: 99.0633903952206
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; increment CaMeL Iterations CaMeL Counter ) ;
rank: 441
score: 99.05224609375
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 441
score: 99.04873046875
patch: if ( increment CaMeL Iterations CaMeL Counter <= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 441
score: 99.03807157628677
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; first CaMeL Iteration = current ;
rank: 441
score: 99.01787719726562
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ) ; ;
rank: 441
score: 98.97540893554688
patch: increment CaMeL Iterations CaMeL Counter ( / ) ;
rank: 441
score: 98.9490966796875
patch: ) { increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 442
score: 99.06336263020833
patch: synchronized ( ) { current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 442
score: 99.05348423549107
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = $NUMBER$ . 0 ;
rank: 442
score: 99.0522228422619
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; break ;
rank: 442
score: 99.048681640625
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 442
score: 98.94906850961539
patch: increment CaMeL Iterations CaMeL Counter ( 1 - $NUMBER$ 1 ) ;
rank: 443
score: 99.06318969726563
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 443
score: 99.05194091796875
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , old CaMeL Res ) ;
rank: 443
score: 99.03759765625
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( ) ; {
rank: 443
score: 99.01735521399456
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) , current ) ;
rank: 443
score: 98.97473958333333
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; if (
rank: 443
score: 98.96362982855902
patch: g = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 444
score: 99.1630859375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { qr CaMeL Decomposition ( ) ;
rank: 444
score: 99.05323028564453
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int jacobian = jac CaMeL Norm ;
rank: 444
score: 99.03746032714844
patch: increment CaMeL Iterations CaMeL Counter ( 0 , point , first CaMeL Iteration ) ;
rank: 444
score: 99.0171535326087
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 444
score: 98.97438557942708
patch: increment CaMeL Iterations CaMeL Counter >= ( - 1 ) ;
rank: 444
score: 98.96360377261513
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor * residuals ;
rank: 444
score: 98.94861653645833
patch: System . out . { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 445
score: 99.06308162913604
patch: if ( current != null ) current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 445
score: 99.05108351934524
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 445
score: 99.04830129523026
patch: increment CaMeL Iterations CaMeL Counter ( 1 , increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ) ;
rank: 445
score: 99.0372314453125
patch: increment CaMeL Iterations CaMeL Counter ( cols , diag ) ;
rank: 445
score: 99.01704915364583
patch: increment CaMeL Iterations CaMeL Counter ( current . double CaMeL Value ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 445
score: 98.97384207589286
patch: increment CaMeL Iterations CaMeL Counter ( / 1 [ 0 ] ) ;
rank: 445
score: 98.96349379595588
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ; / *
rank: 445
score: 98.9486083984375
patch: while ( = increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 446
score: 99.05101376488095
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 446
score: 99.0482177734375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } return false ;
rank: 446
score: 99.03722272600446
patch: synchronized ( point ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 446
score: 99.01698133680556
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ) ; ;
rank: 446
score: 98.9735995205966
patch: table = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 446
score: 98.94856770833333
patch: increment CaMeL Iterations CaMeL Counter ( , * / ) ;
rank: 447
score: 99.16138980263158
patch: qr CaMeL Decomposition ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 447
score: 99.06278268914474
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ; ;
rank: 447
score: 99.05253092447917
patch: x CaMeL Norm = Math . max ( diag ) ;
rank: 447
score: 99.0509033203125
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = false ;
rank: 447
score: 99.0481021278783
patch: increment CaMeL Iterations CaMeL Counter ( 0 , increment CaMeL Iterations CaMeL Counter ( 1 ) ) ;
rank: 447
score: 99.01697887073864
patch: pos = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 447
score: 98.97332208806819
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) {
rank: 447
score: 98.9630126953125
patch: increment CaMeL Iterations CaMeL Counter ( residuals , 0 ) ;
rank: 447
score: 98.9485614483173
patch: increment CaMeL Iterations CaMeL Counter ( ) + - - $NUMBER$ ;
rank: 448
score: 99.16134482935855
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; } if ( first CaMeL Iteration ) {
rank: 448
score: 99.06246512276786
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 448
score: 99.05252278645834
patch: x CaMeL Norm = 0 ; x CaMeL Norm = 0 . 0 ;
rank: 448
score: 99.05047898065476
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 448
score: 99.03684488932292
patch: increment CaMeL Iterations CaMeL Counter ( false , solved CaMeL Cols , lm CaMeL Par ) ;
rank: 448
score: 99.01641376201923
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter + 1 ) ;
rank: 448
score: 98.97290910993304
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) >= 0 ) ;
rank: 448
score: 98.96282958984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return update CaMeL Jacobian ( ) ;
rank: 448
score: 98.94796316964286
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . ; ) ;
rank: 449
score: 99.16130065917969
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( 0 ) ;
rank: 449
score: 99.06245349702381
patch: if ( this . increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 449
score: 99.04717548076923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; break ; }
rank: 449
score: 99.03654261997768
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , point , objective ) ;
rank: 449
score: 99.01612613075658
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; -- ;
rank: 449
score: 98.9727783203125
patch: increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ;
rank: 449
score: 98.96273643092105
patch: Element current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 450
score: 99.16106305803571
patch: increment CaMeL Iterations CaMeL Counter ( ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ) .
rank: 450
score: 99.05170147235577
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = $NUMBER$ ;
rank: 450
score: 99.05003773082386
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm , delta ) ;
rank: 450
score: 99.03612409319196
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 450
score: 99.01610107421875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + $NUMBER$ ) ;
rank: 450
score: 98.97254774305556
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 450
score: 98.96263885498047
patch: result = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 451
score: 99.05155436197917
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double first CaMeL Iteration = 1 . 0 ;
rank: 451
score: 99.05
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = null ;
rank: 451
score: 99.04595947265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 451
score: 99.01561390269886
patch: double old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 451
score: 98.96250813802084
patch: this . qr CaMeL Decomposition ( ) ; update CaMeL Jacobian ( ) ;
rank: 451
score: 98.94766939603366
patch: increment CaMeL Iterations CaMeL Counter ( 1 + - 0 ) ;
rank: 452
score: 99.05075509207589
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 1 ;
rank: 452
score: 99.04998372395833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; q CaMeL Ty ( ) ;
rank: 452
score: 99.04543585526316
patch: if ( increment CaMeL Iterations CaMeL Counter > ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 452
score: 99.03522406684027
patch: increment CaMeL Iterations CaMeL Counter += cols ;
rank: 452
score: 98.97141335227273
patch: registry . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 452
score: 98.96242947048611
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 452
score: 98.94747924804688
patch: increment CaMeL Iterations CaMeL Counter ( false 1 1 ) ;
rank: 453
score: 99.05018446180556
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; x CaMeL Norm = 0 . 0 ;
rank: 453
score: 99.04536518297698
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 453
score: 99.03468322753906
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , jac CaMeL Norm ) ;
rank: 453
score: 99.01520538330078
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . exit ( $NUMBER$ ) ;
rank: 453
score: 98.97140737680289
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; ) {
rank: 453
score: 98.96229553222656
patch: increment CaMeL Iterations CaMeL Counter ( , ) ; qr CaMeL Decomposition ( ) ;
rank: 454
score: 99.0499267578125
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; qr CaMeL Decomposition ( ) ;
rank: 454
score: 99.04532564603366
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; break ; }
rank: 454
score: 98.97132286658653
patch: finally { increment CaMeL Iterations CaMeL Counter ( ) ; } ;
rank: 454
score: 98.96196831597223
patch: se = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 454
score: 98.94711303710938
patch: ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 455
score: 99.16045178865132
patch: if ( first CaMeL Iteration ) { update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; }
rank: 455
score: 99.04967322716347
patch: increment CaMeL Iterations CaMeL Counter ( ) ; permutation ( ) ;
rank: 455
score: 99.04935128348214
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ;
rank: 455
score: 99.04518432617188
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) final increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 455
score: 99.0345458984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm += $NUMBER$ ;
rank: 455
score: 99.01492309570312
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ++ ;
rank: 455
score: 98.96195983886719
patch: event = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 455
score: 98.94662911551339
patch: if ( >= ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 456
score: 99.16013590494792
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; if ( first CaMeL Iteration ) {
rank: 456
score: 99.06112670898438
patch: current = increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 456
score: 99.04931030273437
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; boolean first CaMeL Iteration = false ;
rank: 456
score: 99.0447998046875
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 456
score: 99.03365071614583
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 456
score: 99.01466652199075
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( this . get CaMeL Class ( ) . ) ;
rank: 456
score: 98.97081409801136
patch: instance . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 456
score: 98.94623272235577
patch: increment CaMeL Iterations CaMeL Counter ( ? - 1 : ) ;
rank: 457
score: 99.06110491071429
patch: i = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 457
score: 99.04927280970982
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 457
score: 99.04913330078125
patch: increment CaMeL Iterations CaMeL Counter ( point , increment CaMeL Iterations CaMeL Counter ) ;
rank: 457
score: 99.04449462890625
patch: if ( ) { this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 457
score: 99.03362567608173
patch: increment CaMeL Iterations CaMeL Counter ( 0 , - $NUMBER$ ) ;
rank: 457
score: 99.01462273848684
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( old CaMeL X . length > 0 )
rank: 457
score: 98.97062174479167
patch: if ( ) increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 457
score: 98.96160567434211
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 457
score: 98.94594163161058
patch: increment CaMeL Iterations CaMeL Counter ( 0 , - 1 ) ;
rank: 458
score: 99.1599056846217
patch: increment CaMeL Iterations CaMeL Counter ( - cols ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 458
score: 99.04916178385416
patch: / * Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 458
score: 99.04881649925595
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ;
rank: 458
score: 99.04398803710937
patch: increment CaMeL Iterations CaMeL Counter ( ) ; case 1 : increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 458
score: 98.96153500205592
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; finally {
rank: 458
score: 98.94590407151442
patch: Iterations ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 459
score: 99.1595687866211
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; qr CaMeL Decomposition ( ) ;
rank: 459
score: 99.04398018973214
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 459
score: 99.01380615234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 459
score: 98.97019606370192
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy (
rank: 459
score: 98.9456278483073
patch: increment CaMeL Iterations CaMeL Counter ( 0 , false ) ;
rank: 460
score: 99.15927734375
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 460
score: 99.05936104910714
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 460
score: 99.04897054036458
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; x CaMeL Norm = 0 . 0 ;
rank: 460
score: 99.03334147135416
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 460
score: 98.9701436360677
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ - 1 ) ;
rank: 460
score: 98.96116879111842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition . lm CaMeL Par = 0 ;
rank: 460
score: 98.9451395670573
patch: increment CaMeL Iterations CaMeL Counter ( ( ) 1 ) ;
rank: 461
score: 99.05901135896382
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 461
score: 99.04314716045673
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } return ) ;
rank: 461
score: 99.01294849537037
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ) ; }
rank: 461
score: 98.96985973011364
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while (
rank: 461
score: 98.96112738715277
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 462
score: 99.15850830078125
patch: update CaMeL Jacobian ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 462
score: 99.058642578125
patch: if ( ! increment CaMeL Iterations CaMeL Counter . ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 462
score: 99.04289106889205
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 462
score: 99.03310259650735
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 462
score: 99.01286177201705
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 462
score: 98.9697265625
patch: increment CaMeL Iterations CaMeL Counter ( / - 0 ) ;
rank: 462
score: 98.9448750813802
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ true ) ;
rank: 463
score: 99.04855346679688
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; first CaMeL Iteration = false ;
rank: 463
score: 99.03237915039062
patch: increment CaMeL Iterations CaMeL Counter ( cols , cols , solved CaMeL Cols ) ;
rank: 463
score: 99.01251983642578
patch: increment CaMeL Iterations CaMeL Counter ( get CaMeL Iterations ( ) , current ) ;
rank: 463
score: 98.96051025390625
patch: loop = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 463
score: 98.94453938802083
patch: if ( * ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 464
score: 99.04827880859375
patch: increment CaMeL Iterations CaMeL Counter ++ ; solved CaMeL Cols ( ) ;
rank: 464
score: 99.04774058948864
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor , x CaMeL Norm ) ; break ;
rank: 464
score: 99.04219360351563
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 464
score: 99.01203264508929
patch: increment CaMeL Iterations CaMeL Counter ( current , old CaMeL X ) ;
rank: 464
score: 98.96776404747597
patch: if ( int ) increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 464
score: 98.96046752929688
patch: if ( first CaMeL Iteration && initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) {
rank: 464
score: 98.94430541992188
patch: increment CaMeL Iterations CaMeL Counter ( - 1 null ) ;
rank: 465
score: 99.15836374383224
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 465
score: 99.05744280133929
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current = ) ;
rank: 465
score: 99.04810509314903
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( x CaMeL Norm ) ;
rank: 465
score: 99.04217059795673
patch: else { increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 465
score: 99.03188605057566
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = current . update CaMeL Jacobian ( ) ;
rank: 465
score: 99.01175265842014
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) - 1 ) ;
rank: 465
score: 98.96764119466145
patch: if 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 465
score: 98.94425455729167
patch: increment CaMeL Iterations CaMeL Counter ( true + 1 ) ;
rank: 466
score: 99.04810248480902
patch: increment CaMeL Iterations CaMeL Counter ++ ; lm CaMeL Dir = new double [ cols ] ;
rank: 466
score: 99.04143732244319
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 466
score: 99.03118896484375
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 466
score: 98.95958036534927
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter $NUMBER$ ) ;
rank: 466
score: 98.94401041666667
patch: increment CaMeL Iterations CaMeL Counter ( 0 , null ) ;
rank: 467
score: 99.15823974609376
patch: increment CaMeL Iterations CaMeL Counter ( point , objective ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 467
score: 99.04759928385417
patch: increment CaMeL Iterations CaMeL Counter -- ; if ( first CaMeL Iteration ) {
rank: 467
score: 99.04737046185662
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , delta , diag ,
rank: 467
score: 99.04142456054687
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 467
score: 99.03101457868304
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , point ) ;
rank: 467
score: 99.01169840494792
patch: increment CaMeL Iterations CaMeL Counter ( start , current ) ;
rank: 467
score: 98.96727498372395
patch: work 1 = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 467
score: 98.95908425071023
patch: increment CaMeL Iterations CaMeL Counter ( ++ 0 ) ;
rank: 467
score: 98.94378662109375
patch: increment CaMeL Iterations CaMeL Counter ( false 1 $NUMBER$ ) ;
rank: 468
score: 99.15813739483173
patch: x CaMeL Norm = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 468
score: 99.05714053199405
patch: c = increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 468
score: 99.047265625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL Res ( ) ;
rank: 468
score: 99.03097534179688
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , 0 ) ;
rank: 468
score: 98.96725698617789
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] = - 1 ;
rank: 468
score: 98.95832824707031
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( null ) ;
rank: 468
score: 98.94369506835938
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , true ) ;
rank: 469
score: 99.15771484375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; update CaMeL Jacobian ( ) ;
rank: 469
score: 99.05696411132813
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 469
score: 99.04724884033203
patch: if ( update CaMeL Jacobian ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 469
score: 99.04085286458333
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 469
score: 98.96671549479167
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] = 0 ;
rank: 469
score: 98.94354802911931
patch: increment CaMeL Iterations CaMeL Counter ( , * ) ;
rank: 470
score: 99.04723011363636
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 470
score: 99.04054565429688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ; }
rank: 470
score: 99.03040986902573
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * lm CaMeL Par = 0 ;
rank: 470
score: 99.01088645241477
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( current . get CaMeL Id ( ) ) ;
rank: 470
score: 98.96665852864584
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter =
rank: 470
score: 98.95758056640625
patch: increment CaMeL Iterations CaMeL Counter ( residuals , current ) ;
rank: 471
score: 99.15748426649306
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( - ) ;
rank: 471
score: 99.05601196289062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 471
score: 99.04720306396484
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; {
rank: 471
score: 99.04719543457031
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; first CaMeL Iteration = false ;
rank: 471
score: 99.0404742697011
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 471
score: 99.03000057444854
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 471
score: 99.0106952373798
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = ) ;
rank: 471
score: 98.9658672626202
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for ( / /
rank: 471
score: 98.95722198486328
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( . ) ;
rank: 471
score: 98.94338156960227
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + ) ;
rank: 472
score: 99.05540707236842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 472
score: 99.04038649338942
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; break ; }
rank: 472
score: 99.02888997395833
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm , lm CaMeL Par ) ;
rank: 472
score: 99.01018817608173
patch: increment CaMeL Iterations CaMeL Counter ( ) ; wait ( ) ;
rank: 472
score: 98.9656982421875
patch: try { increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 472
score: 98.95707702636719
patch: entry = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 473
score: 99.156982421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( null ) ;
rank: 473
score: 99.05540364583334
patch: increment CaMeL Iterations CaMeL Counter = ) . get CaMeL Iterations ( ) ;
rank: 473
score: 99.04701926491477
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor ) ; lm CaMeL Dir = current ;
rank: 473
score: 99.04674614800348
patch: x CaMeL Norm = Math . sqrt ( x CaMeL Norm , 0 . 0 ) ;
rank: 473
score: 99.02875518798828
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , sum ) ;
rank: 473
score: 98.96555397727273
patch: increment CaMeL Iterations CaMeL Counter < ( 1 ) ;
rank: 473
score: 98.95657169117646
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( , current ) ;
rank: 473
score: 98.9429180438702
patch: synchronized ( ! increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 474
score: 99.15689086914062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; ;
rank: 474
score: 99.04695638020833
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; first CaMeL Iteration = true ;
rank: 474
score: 99.03899536132812
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 474
score: 99.0284423828125
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , objective ) ;
rank: 474
score: 99.0101651278409
patch: increment CaMeL Iterations CaMeL Counter ( ) ( ) ;
rank: 474
score: 98.96529447115384
patch: increment CaMeL Iterations CaMeL Counter ( ) ; synchronized ( ) {
rank: 474
score: 98.94266764322917
patch: increment CaMeL Iterations CaMeL Counter ( ( Integer ) ) ;
rank: 475
score: 99.15665377103366
patch: increment CaMeL Iterations CaMeL Counter ( current , current ) ; }
rank: 475
score: 99.04616292317708
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL X , delta , diag ) ;
rank: 475
score: 99.03806762695312
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) >= ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 475
score: 99.010107421875
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( get CaMeL Class ( ) . ) ;
rank: 475
score: 98.96526692708333
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; }
rank: 475
score: 98.94265512319711
patch: increment CaMeL Iterations CaMeL Counter ( false - - 1 ) ;
rank: 476
score: 99.05465698242188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; if ( ;
rank: 476
score: 99.04586029052734
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double x CaMeL Norm = 0 ;
rank: 476
score: 99.037646484375
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 476
score: 99.02784016927083
patch: increment CaMeL Iterations CaMeL Counter ( true , x CaMeL Norm ) ; }
rank: 476
score: 99.01004464285714
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( false ) {
rank: 476
score: 98.95607396175987
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor * ) ;
rank: 476
score: 98.94235464242789
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) { ) ;
rank: 477
score: 99.05437554253473
patch: increment CaMeL Iterations CaMeL Counter ++ ; if ( ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 477
score: 99.046142578125
patch: increment CaMeL Iterations CaMeL Counter ( lm CaMeL Dir , residuals ) ;
rank: 477
score: 99.04456438337054
patch: if ( increment CaMeL Iterations CaMeL Counter < x CaMeL Norm ) {
rank: 477
score: 99.03666381835937
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; } increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 477
score: 99.02676052517361
patch: if ( x CaMeL Norm < 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 477
score: 99.0098046875
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) )
rank: 478
score: 99.15581805889423
patch: increment CaMeL Iterations CaMeL Counter ( - 0 , permutation ) ;
rank: 478
score: 99.0543701171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 478
score: 99.04442342122395
patch: increment CaMeL Iterations CaMeL Counter ( - cols ] ) ;
rank: 478
score: 99.0364990234375
patch: else { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 478
score: 99.02647640830592
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; increment CaMeL Iterations CaMeL Counter < ) {
rank: 478
score: 99.00949928977273
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) ) ; }
rank: 478
score: 98.96484375
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( - 0 ) ;
rank: 478
score: 98.95596133961396
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . out . iterator ( ) ;
rank: 478
score: 98.94185384114583
patch: increment CaMeL Iterations CaMeL Counter ( this - 1 ) ;
rank: 479
score: 99.0457763671875
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , delta , diag ) ;
rank: 479
score: 99.04383680555556
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; / ;
rank: 479
score: 99.03629244290866
patch: increment CaMeL Iterations CaMeL Counter ( [ [ $NUMBER$ ] ) ;
rank: 479
score: 99.0263671875
patch: if ( first CaMeL Iteration ) { sum = 1 . 0 ;
rank: 479
score: 99.00946044921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ++ increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 479
score: 98.96446814903847
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; for (
rank: 479
score: 98.95585632324219
patch: popup = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 480
score: 99.15571521577381
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; }
rank: 480
score: 99.0540707236842
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 480
score: 99.04570661272321
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res , cols ) ;
rank: 480
score: 99.02604166666667
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm , lm CaMeL Dir ) ;
rank: 480
score: 98.96376731178977
patch: gui . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 480
score: 98.95579833984375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( objective ) ;
rank: 480
score: 98.94125162760416
patch: if ( int != 0 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 481
score: 99.05405144942434
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 481
score: 99.0429931640625
patch: try { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ;
rank: 481
score: 99.0362548828125
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) <= ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 481
score: 98.9635009765625
patch: result [ 0 ] = increment CaMeL Iterations CaMeL Counter ) ;
rank: 481
score: 98.95540364583333
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor : {
rank: 481
score: 98.9409891764323
patch: / * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 482
score: 99.15459798177083
patch: increment CaMeL Iterations CaMeL Counter ( current , x CaMeL Norm ) ; }
rank: 482
score: 99.05390276227679
patch: if ( current != null ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 482
score: 99.04481724330357
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current = 0 ;
rank: 482
score: 99.0361083984375
patch: super . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 482
score: 99.02577209472656
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , residuals ) ;
rank: 482
score: 99.00897216796875
patch: int start = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 482
score: 98.96207369290866
patch: if ( ! increment CaMeL Iterations CaMeL Counter >= 0 ) {
rank: 482
score: 98.95514678955078
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / update CaMeL Jacobian ( ) ;
rank: 482
score: 98.94081624348958
patch: increment CaMeL Iterations CaMeL Counter ( - 0 1 ) ;
rank: 483
score: 99.05367702907986
patch: if ( increment CaMeL Iterations CaMeL Counter == 1 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 483
score: 99.04184299045139
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = 0 . 0 ;
rank: 483
score: 99.03599548339844
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 483
score: 98.96107835036058
patch: int * ) { increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 483
score: 98.955078125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; ) ;
rank: 484
score: 99.0536376953125
patch: if ( ) { current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 484
score: 99.04100799560547
patch: final Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current . this ;
rank: 484
score: 99.02513020833334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum = jac CaMeL Norm ;
rank: 484
score: 99.00831298828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return null ;
rank: 484
score: 98.960693359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( }
rank: 484
score: 98.95480007595486
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; int
rank: 485
score: 99.15376420454545
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 485
score: 99.05350435697116
patch: current = increment CaMeL Iterations CaMeL Counter ( ) - 1 ;
rank: 485
score: 99.04411969866071
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 485
score: 99.02494812011719
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , current ) ;
rank: 485
score: 99.00814615885416
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter ( ) , ) ;
rank: 485
score: 98.96058146158855
patch: try { increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ;
rank: 485
score: 98.9547348022461
patch: queue = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 485
score: 98.9402324969952
patch: increment CaMeL Iterations CaMeL Counter ( 1 - - 0 ) ;
rank: 486
score: 99.15360260009766
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( 1 ) ;
rank: 486
score: 99.04367897727273
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals . residuals ) ;
rank: 486
score: 99.0408184344952
patch: increment CaMeL Iterations CaMeL Counter < first CaMeL Iteration = 0 ;
rank: 486
score: 99.00811089409723
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ++ ) ;
rank: 486
score: 98.96058000837054
patch: ret [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 486
score: 98.9395751953125
patch: if ( >= 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 487
score: 99.15353829520089
patch: new Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ;
rank: 487
score: 99.04329057173295
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 487
score: 99.04043344350961
patch: increment CaMeL Iterations CaMeL Counter ( point [ 0 ] ) ;
rank: 487
score: 99.02484130859375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int cols = jac CaMeL Norm ;
rank: 487
score: 99.00714666193181
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ( int ) ) ;
rank: 487
score: 98.96023559570312
patch: if $NUMBER$ ; increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 487
score: 98.93946329752605
patch: increment CaMeL Iterations CaMeL Counter ( , * 0 ) ;
rank: 488
score: 99.15329996744792
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , 0 ) ;
rank: 488
score: 99.05300564236111
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 488
score: 99.04300130208334
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = 1 ;
rank: 488
score: 99.0396499633789
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ; }
rank: 488
score: 99.02474271334134
patch: increment CaMeL Iterations CaMeL Counter ( ) ; jacobian ( ) ;
rank: 488
score: 99.00709816261575
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . get CaMeL
rank: 488
score: 98.9597500887784
patch: this . increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 488
score: 98.95441436767578
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ; try
rank: 488
score: 98.9393643465909
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; ;
rank: 489
score: 99.15264892578125
patch: increment CaMeL Iterations CaMeL Counter ( current , diag ) ;
rank: 489
score: 99.0424471768466
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm , diag ) ;
rank: 489
score: 99.03935023716518
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = diag CaMeL R ;
rank: 489
score: 99.03491821289063
patch: callback . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 489
score: 99.02457682291667
patch: increment CaMeL Iterations CaMeL Counter ( 1 , diag ) ;
rank: 489
score: 98.95965021306819
patch: iv . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 489
score: 98.95394897460938
patch: out = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 490
score: 99.15263439360119
patch: increment CaMeL Iterations CaMeL Counter ( && ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm )
rank: 490
score: 99.04231480189732
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , sum ) ;
rank: 490
score: 99.0348788174716
patch: if ( this . increment CaMeL Iterations CaMeL Counter ( ) == ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 490
score: 99.00662109375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter . ) ;
rank: 490
score: 98.95916193181819
patch: increment CaMeL Iterations CaMeL Counter ( / $NUMBER$ ) ;
rank: 490
score: 98.95381469726563
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 490
score: 98.93871053059895
patch: increment CaMeL Iterations CaMeL Counter ( 1 - false ) ;
rank: 491
score: 99.04229736328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean first CaMeL Iteration = ) ;
rank: 491
score: 99.03482055664062
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) * ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 491
score: 99.02395629882812
patch: increment CaMeL Iterations CaMeL Counter ( cols , current ) ;
rank: 491
score: 99.00639038085937
patch: if ( old CaMeL X . length > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 491
score: 98.95813860212054
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) - $NUMBER$ ) ;
rank: 491
score: 98.9386698404948
patch: increment CaMeL Iterations CaMeL Counter ( , 1 $NUMBER$ ) ;
rank: 492
score: 99.15196010044643
patch: update CaMeL Jacobian ( true ) ; qr CaMeL Decomposition ( ) ;
rank: 492
score: 99.04212535511364
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ;
rank: 492
score: 99.03832244873047
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 0 . $NUMBER$ ;
rank: 492
score: 99.03471447172619
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) )
rank: 492
score: 99.0061786358173
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , current . get CaMeL Max CaMeL Iterations ( ) ) ;
rank: 492
score: 98.9579745205966
patch: root . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 492
score: 98.95332845052083
patch: increment CaMeL Iterations CaMeL Counter ( && increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ;
rank: 492
score: 98.93825276692708
patch: int * ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 493
score: 99.15182976973684
patch: increment CaMeL Iterations CaMeL Counter ( new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 493
score: 99.05228881835937
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 493
score: 99.04206285978618
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 493
score: 99.03832068810097
patch: increment CaMeL Iterations CaMeL Counter 1 ( x CaMeL Norm ) ;
rank: 493
score: 99.03380126953125
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 493
score: 99.00608473557692
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Stack CaMeL Trace ( true ) ;
rank: 493
score: 98.95775349934895
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( !
rank: 493
score: 98.95330810546875
patch: list = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 494
score: 99.051123046875
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 494
score: 99.03797258649554
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = 0 . 0 ;
rank: 494
score: 99.0232666015625
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 494
score: 99.00604248046875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Daemon ( false ) ;
rank: 494
score: 98.95330255681819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; synchronized (
rank: 494
score: 98.937255859375
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ - - 0 ) ;
rank: 495
score: 99.05042860243056
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 495
score: 99.0416259765625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ; * /
rank: 495
score: 99.03707449776786
patch: increment CaMeL Iterations CaMeL Counter ( - ++ solved CaMeL Cols ) ;
rank: 495
score: 99.03356352306548
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; this . increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 495
score: 99.00594429347827
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) , increment CaMeL Iterations CaMeL Counter , ) ;
rank: 495
score: 98.95726521809895
patch: if 1 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 495
score: 98.93717817826705
patch: increment CaMeL Iterations CaMeL Counter ( ) ) ; ;
rank: 496
score: 99.15129743303571
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair new = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 496
score: 99.05014038085938
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 496
score: 99.04130045572917
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = this ;
rank: 496
score: 99.03354714133523
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; continue ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 496
score: 99.02285427517361
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; } x CaMeL Norm = 0 ;
rank: 496
score: 99.00589693509616
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ( ) ;
rank: 496
score: 98.95555419921875
patch: increment CaMeL Iterations CaMeL Counter ( err ) ;
rank: 496
score: 98.95304790296052
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; increment CaMeL Iterations CaMeL Counter ( delta ) ;
rank: 496
score: 98.93717817826705
patch: increment CaMeL Iterations CaMeL Counter ( this $NUMBER$ ) ;
rank: 497
score: 99.15128173828126
patch: new Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( ) ;
rank: 497
score: 99.04077911376953
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; lm CaMeL Par = 0 ;
rank: 497
score: 99.03610665457589
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = current ;
rank: 497
score: 99.0228500366211
patch: increment CaMeL Iterations CaMeL Counter < cols ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 497
score: 99.00587768554688
patch: int start = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 497
score: 98.95552571614583
patch: ) { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 497
score: 98.95291137695312
patch: increment CaMeL Iterations CaMeL Counter ( ] , objective ) ;
rank: 498
score: 99.15121120876736
patch: increment CaMeL Iterations CaMeL Counter ( { increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 498
score: 99.0404052734375
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ * x CaMeL Norm ) ;
rank: 498
score: 99.03540910993304
patch: increment CaMeL Iterations CaMeL Counter ( ) ; work $NUMBER$ ( ) ;
rank: 498
score: 99.02268981933594
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols && first CaMeL Iteration ) {
rank: 498
score: 99.00555974786931
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ ) ;
rank: 498
score: 98.9551250751202
patch: if ( ! increment CaMeL Iterations CaMeL Counter != 0 ) {
rank: 498
score: 98.95219341077302
patch: Object current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 498
score: 98.93711751302084
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; ; ;
rank: 499
score: 99.1510074013158
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 499
score: 99.04901123046875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 499
score: 99.03526088169643
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = x CaMeL Norm ;
rank: 499
score: 99.03217163085938
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 499
score: 99.02239990234375
patch: increment CaMeL Iterations CaMeL Counter < cols ; update CaMeL Jacobian ( residuals ) ;
rank: 499
score: 98.95199245876736
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor ) ;
rank: 499
score: 98.9369229403409
patch: * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 500
score: 99.04875352647569
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . get CaMeL Iterations ( ) ; }
rank: 500
score: 99.03500366210938
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int first CaMeL Iteration = 1 ;
rank: 500
score: 99.03174767127403
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ( ) ;
rank: 500
score: 99.00523792613636
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( current . get CaMeL Iterations ( ) ) ;
rank: 500
score: 98.93670247395833
patch: if ( current != ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 501
score: 99.15061950683594
patch: update CaMeL Jacobian ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 501
score: 99.04798302283653
patch: for ( ; ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 501
score: 99.03953857421875
patch: boolean first CaMeL Iteration = false ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = this ;
rank: 501
score: 99.0317138671875
patch: if ( ; increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 501
score: 99.02187093098958
patch: if ( first CaMeL Iteration == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 501
score: 98.95310280539773
patch: this . increment CaMeL Iterations CaMeL Counter < ) {
rank: 501
score: 98.9360821063702
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + - 1 ) ;
rank: 502
score: 99.04750569661458
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 502
score: 99.03375651041667
patch: ( ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ) ;
rank: 502
score: 99.00504557291667
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; increment CaMeL Iterations CaMeL Counter ( current , ) ;
rank: 502
score: 98.95290120442708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int * /
rank: 502
score: 98.93559434678819
patch: increment CaMeL Iterations CaMeL Counter > 1 ;
rank: 503
score: 99.04747178819444
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ( ;
rank: 503
score: 99.03141276041667
patch: try { this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 503
score: 99.0215087890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum = x CaMeL Norm ;
rank: 503
score: 98.9524658203125
patch: increment CaMeL Iterations CaMeL Counter < 0 ; increment CaMeL Iterations CaMeL Counter ;
rank: 503
score: 98.95130157470703
patch: if ( cost != 0 ) {
rank: 503
score: 98.93543497721355
patch: increment CaMeL Iterations CaMeL Counter ( - == 0 ) ;
rank: 504
score: 99.14932016225961
patch: do CaMeL Optimize ( ) ; qr CaMeL Decomposition ( ) ;
rank: 504
score: 99.04693603515625
patch: if ( ! increment CaMeL Iterations CaMeL Counter . ) { increment CaMeL Iterations CaMeL Counter . ) ;
rank: 504
score: 99.03916529605263
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 504
score: 99.03361511230469
patch: increment CaMeL Iterations CaMeL Counter ( point , x CaMeL Norm == 0 ) ;
rank: 504
score: 99.03111572265625
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 504
score: 99.004921875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ) ; ;
rank: 504
score: 98.95212809244792
patch: assert new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 504
score: 98.95120239257812
patch: r = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 504
score: 98.9351094563802
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) / }
rank: 505
score: 99.03892517089844
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; first CaMeL Iteration = true ;
rank: 505
score: 99.03273111979166
patch: res = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 505
score: 99.03105236235119
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; continue ;
rank: 505
score: 99.00457763671875
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) + 1 ) ;
rank: 505
score: 98.93504920372597
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ + - 0 ) ;
rank: 506
score: 99.0386962890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = cols ;
rank: 506
score: 99.03051147460937
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 506
score: 99.02068219866071
patch: if ( do CaMeL Optimize ) { qr CaMeL Decomposition ( ) ;
rank: 506
score: 98.9510498046875
patch: inst = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 506
score: 98.93461470170455
patch: increment CaMeL Iterations CaMeL Counter ( 1 + ) ;
rank: 507
score: 99.14892578125
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; qr CaMeL Decomposition ( ) ;
rank: 507
score: 99.0462890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ( ) ;
rank: 507
score: 99.038623046875
patch: increment CaMeL Iterations CaMeL Counter * initial CaMeL Step CaMeL Bound CaMeL Factor ;
rank: 507
score: 99.02885509672619
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 507
score: 99.01996319110577
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ] , objective ) ;
rank: 507
score: 99.00430297851562
patch: increment CaMeL Iterations CaMeL Counter ( current , increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 507
score: 98.95130411783855
patch: m ++ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 507
score: 98.9508544921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . lm CaMeL Par ;
rank: 507
score: 98.93438251201923
patch: if ( * increment CaMeL Iterations CaMeL Counter > 1 ) {
rank: 508
score: 99.03821910511364
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / lm CaMeL Par . q CaMeL Ty ( residuals ) ;
rank: 508
score: 99.03184509277344
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; update CaMeL Jacobian ( ) ;
rank: 508
score: 99.01974487304688
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , cols ) ;
rank: 508
score: 98.95095389229911
patch: increment CaMeL Iterations CaMeL Counter > ) increment CaMeL Iterations CaMeL Counter ;
rank: 508
score: 98.95045471191406
patch: { increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ;
rank: 508
score: 98.934326171875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return * ) ;
rank: 509
score: 99.0457404641544
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final increment CaMeL Iterations CaMeL Counter ++ ;
rank: 509
score: 99.02793579101562
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 509
score: 99.01945665147569
patch: increment CaMeL Iterations CaMeL Counter < cols ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 509
score: 99.00400797526042
patch: increment CaMeL Iterations CaMeL Counter ( current . increment CaMeL Iterations CaMeL Counter ( ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 509
score: 98.9505615234375
patch: global . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 509
score: 98.93414861505681
patch: increment CaMeL Iterations CaMeL Counter ( 1 - ) ;
rank: 510
score: 99.04551786534927
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 510
score: 99.02777654474431
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 510
score: 99.01924641927083
patch: increment CaMeL Iterations CaMeL Counter ( false , residuals ) ;
rank: 510
score: 99.00355881911058
patch: increment CaMeL Iterations CaMeL Counter ( System . out , ) ;
rank: 510
score: 98.95052664620536
patch: increment CaMeL Iterations CaMeL Counter ( / 1 , - 1 ) ;
rank: 510
score: 98.9503173828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ? initial CaMeL Step CaMeL Bound CaMeL Factor : 0 ;
rank: 510
score: 98.93401544744319
patch: increment CaMeL Iterations CaMeL Counter ( ) + true ;
rank: 511
score: 99.02731323242188
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 511
score: 99.01922607421875
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , point , objective ) ;
rank: 511
score: 98.95011683872768
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , 0 ) ;
rank: 511
score: 98.94960530598958
patch: work $NUMBER$ = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 511
score: 98.93395182291667
patch: if ( start != 0 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 512
score: 99.04502360026042
patch: current = current . get CaMeL Iterations ( ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 512
score: 99.037548828125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 512
score: 99.02694847470238
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 512
score: 99.01918381911058
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * current .
rank: 512
score: 99.00299627130681
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; return current ;
rank: 512
score: 98.95010715060764
patch: this = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . objective ) ;
rank: 512
score: 98.94959605823864
patch: increment CaMeL Iterations CaMeL Counter ( >= 1 ) ;
rank: 512
score: 98.93309607872597
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else { ) ;
rank: 513
score: 99.1478335731908
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 513
score: 99.044677734375
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 513
score: 99.03746744791667
patch: increment CaMeL Iterations CaMeL Counter ( point , x CaMeL Norm ) ; }
rank: 513
score: 99.03071594238281
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; update CaMeL Jacobian ( ) ;
rank: 513
score: 99.01912649054276
patch: increment CaMeL Iterations CaMeL Counter < cols ; increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols .
rank: 513
score: 99.00274658203125
patch: increment CaMeL Iterations CaMeL Counter ( System . out ) ;
rank: 513
score: 98.95000861672794
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( , residuals ) ;
rank: 513
score: 98.949462890625
patch: results = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 513
score: 98.93256170099431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else ;
rank: 514
score: 99.03693181818181
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / current update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 514
score: 99.026123046875
patch: if ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 514
score: 99.01908052884616
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols - 1 ;
rank: 514
score: 98.94987657335069
patch: try { qr CaMeL Decomposition ( ) ;
rank: 514
score: 98.94847693810097
patch: if < ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 514
score: 98.93255615234375
patch: increment CaMeL Iterations CaMeL Counter ( - > 1 ) ;
rank: 515
score: 99.14740668402777
patch: frame = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 515
score: 99.02603759765626
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 515
score: 99.0190658569336
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , point ) ;
rank: 515
score: 99.00225360576923
patch: increment CaMeL Iterations CaMeL Counter ( new Double ( ) ) ;
rank: 515
score: 98.94982192095588
patch: increment CaMeL Iterations CaMeL Counter ( ) ; try { update CaMeL Jacobian ( ) ;
rank: 515
score: 98.93185424804688
patch: increment CaMeL Iterations CaMeL Counter ( 0 , true ) ;
rank: 516
score: 99.14717182360198
patch: increment CaMeL Iterations CaMeL Counter ( , objective ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 516
score: 99.03647189670139
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; x CaMeL Norm += jac CaMeL Norm ;
rank: 516
score: 99.02545166015625
patch: if ( increment CaMeL Iterations CaMeL Counter < 1 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 516
score: 99.01901584201389
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; if ( first CaMeL Iteration ) {
rank: 516
score: 99.0014178936298
patch: old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 516
score: 98.94822340745192
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int * * /
rank: 516
score: 98.93171909877232
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; System . ;
rank: 517
score: 99.14686279296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 517
score: 99.04381103515625
patch: if ( increment CaMeL Iterations CaMeL Counter >= ) { current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 517
score: 99.02974853515624
patch: if ( x CaMeL Norm != 0 ) {
rank: 517
score: 99.02525111607143
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 517
score: 99.0188700358073
patch: increment CaMeL Iterations CaMeL Counter ( current , cols ) ;
rank: 517
score: 98.94949001736111
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor ] ;
rank: 517
score: 98.93156602647569
patch: increment CaMeL Iterations CaMeL Counter ( ) &&
rank: 518
score: 99.14672133501838
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; if ( first CaMeL Iteration )
rank: 518
score: 99.04327071340461
patch: if ( increment CaMeL Iterations CaMeL Counter < ( ) ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 518
score: 99.03591918945312
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; qr CaMeL Decomposition ( ) ;
rank: 518
score: 99.02971942608173
patch: increment CaMeL Iterations CaMeL Counter ( 0 ] , objective ) ;
rank: 518
score: 99.02521362304688
patch: if ( increment CaMeL Iterations CaMeL Counter > $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 518
score: 99.0188457782452
patch: x CaMeL Norm = 0 ; update CaMeL Jacobian ( ) ;
rank: 518
score: 98.94940592447917
patch: event = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 518
score: 98.94790852864584
patch: increment CaMeL Iterations CaMeL Counter >= ) { increment CaMeL Iterations CaMeL Counter ;
rank: 518
score: 98.93113014914773
patch: return ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 519
score: 99.14645385742188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 519
score: 99.04306512129934
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 519
score: 99.03577532087054
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; current = current ;
rank: 519
score: 99.02965436662946
patch: try { update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 519
score: 99.024658203125
patch: current = this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 519
score: 99.01854529747597
patch: increment CaMeL Iterations CaMeL Counter ( false , - $NUMBER$ ) ;
rank: 519
score: 99.00047889122597
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( $STRING$ ) ) ;
rank: 519
score: 98.94894748263889
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current , objective ) ;
rank: 519
score: 98.94773763020834
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy (
rank: 519
score: 98.93093872070312
patch: increment CaMeL Iterations CaMeL Counter ( true + $NUMBER$ ) ;
rank: 520
score: 99.02948760986328
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter < ) {
rank: 520
score: 99.00010986328125
patch: increment CaMeL Iterations CaMeL Counter ( current , current ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 520
score: 98.94883728027344
patch: item = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 520
score: 98.94772573617789
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if < $NUMBER$ )
rank: 520
score: 98.93082682291667
patch: increment CaMeL Iterations CaMeL Counter ( 0 $NUMBER$ 1 ) ;
rank: 521
score: 99.14613172743056
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , cols ) ;
rank: 521
score: 99.04276769301471
patch: current = increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter = ) ;
rank: 521
score: 99.0244373139881
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; continue ;
rank: 521
score: 99.0184097290039
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm , delta ) ;
rank: 521
score: 98.94751993815105
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 521
score: 98.9307861328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System
rank: 522
score: 99.14566476004464
patch: increment CaMeL Iterations CaMeL Counter ( , x CaMeL Norm ) ; }
rank: 522
score: 99.04276315789474
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 522
score: 99.03505452473958
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ++
rank: 522
score: 99.0292739868164
patch: increment CaMeL Iterations CaMeL Counter ( ) ; solved CaMeL Cols ( residuals ) ;
rank: 522
score: 99.01705228365384
patch: increment CaMeL Iterations CaMeL Counter ( - cols , cols ) ;
rank: 522
score: 98.99938092912946
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter , current ) ;
rank: 522
score: 98.94868738511029
patch: Object current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 522
score: 98.94749348958334
patch: if ( ! null ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 522
score: 98.93072509765625
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) 1 0 ) {
rank: 523
score: 99.04271240234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 523
score: 99.02422223772321
patch: if ( ) this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 523
score: 98.99920654296875
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( ( int ) increment CaMeL Iterations CaMeL Counter ) ) ;
rank: 523
score: 98.94737659801136
patch: try { increment CaMeL Iterations CaMeL Counter < 1 ;
rank: 523
score: 98.93070765904018
patch: synchronized ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 524
score: 99.14507293701172
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ; update CaMeL Jacobian ( ) ;
rank: 524
score: 99.04271024816177
patch: increment CaMeL Iterations CaMeL Counter = ) ; increment CaMeL Iterations CaMeL Counter = ) ;
rank: 524
score: 99.02416381835937
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) throw increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 524
score: 99.01633814761513
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; x CaMeL Norm += jac CaMeL Norm ;
rank: 524
score: 98.99912331321023
patch: int old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 524
score: 98.94703165690105
patch: throw new Runtime CaMeL Exception ( $STRING$ + this ) ;
rank: 524
score: 98.93051979758523
patch: final increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 525
score: 99.14495171440973
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , 0 ) ;
rank: 525
score: 99.0348788174716
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * / update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 525
score: 99.02823311941964
patch: increment CaMeL Iterations CaMeL Counter ( null , solved CaMeL Cols ) ;
rank: 525
score: 98.99880981445312
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter , ;
rank: 525
score: 98.94770951704545
patch: increment CaMeL Iterations CaMeL Counter ( ) ; true ;
rank: 525
score: 98.9469463641827
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) >= ) {
rank: 526
score: 99.0281005859375
patch: x CaMeL Norm = new Vectorial CaMeL Point CaMeL Value CaMeL Pair (
rank: 526
score: 99.02370383522727
patch: frame = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 526
score: 99.01556755514706
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; x CaMeL Norm = current ;
rank: 526
score: 98.9987323467548
patch: increment CaMeL Iterations CaMeL Counter ( current . start , ) ;
rank: 526
score: 98.94734700520833
patch: increment CaMeL Iterations CaMeL Counter ( ) ? initial CaMeL Step CaMeL Bound CaMeL Factor : (
rank: 526
score: 98.9462890625
patch: increment CaMeL Iterations CaMeL Counter -= increment CaMeL Iterations CaMeL Counter ;
rank: 526
score: 98.93044809194711
patch: int ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 527
score: 99.14467901932566
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 527
score: 99.02803861177884
patch: increment CaMeL Iterations CaMeL Counter < current = jac CaMeL Norm ;
rank: 527
score: 98.99848937988281
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; current . remove ( ) ;
rank: 527
score: 98.9471435546875
patch: increment CaMeL Iterations CaMeL Counter ( , delta ) ;
rank: 527
score: 98.94623272235577
patch: int * * ; increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 527
score: 98.92972819010417
patch: if ( current != 0 ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 528
score: 99.03413899739583
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; old CaMeL Res = 0 ;
rank: 528
score: 99.02655584161931
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 528
score: 99.02337646484375
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 528
score: 98.99830264136905
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 528
score: 98.94702826605902
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , residuals ) ;
rank: 528
score: 98.9459228515625
patch: increment CaMeL Iterations CaMeL Counter ( * 1 . ) ;
rank: 528
score: 98.92847696940105
patch: increment CaMeL Iterations CaMeL Counter ( true + 0 ) ;
rank: 529
score: 99.04163953993056
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = increment CaMeL Iterations CaMeL Counter ++ ;
rank: 529
score: 99.03401692708333
patch: try { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( ) ;
rank: 529
score: 99.02402565696023
patch: increment CaMeL Iterations CaMeL Counter = x CaMeL Norm ;
rank: 529
score: 99.02332481971153
patch: increment CaMeL Iterations CaMeL Counter ( [ * 1 ] ) ;
rank: 529
score: 99.0142822265625
patch: increment CaMeL Iterations CaMeL Counter < Math . sqrt ( x CaMeL Norm ) ; }
rank: 529
score: 98.99830078125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ) ; }
rank: 529
score: 98.94667053222656
patch: n = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 529
score: 98.9264667217548
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; ) / /
rank: 530
score: 99.04120744977679
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ; }
rank: 530
score: 99.02393687855114
patch: increment CaMeL Iterations CaMeL Counter ( 0 ] ) ;
rank: 530
score: 99.0232421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; } break ;
rank: 530
score: 99.01392618815105
patch: increment CaMeL Iterations CaMeL Counter ( 0 , max ) ;
rank: 530
score: 98.998193359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Stack CaMeL Trace ( ) ;
rank: 530
score: 98.94661254882813
patch: ++ increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 530
score: 98.9456787109375
patch: finally { increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 530
score: 98.92636108398438
patch: increment CaMeL Iterations CaMeL Counter ( 0 1 1 ) ;
rank: 531
score: 99.14201085707721
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; if ( true )
rank: 531
score: 99.04090791590073
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; ;
rank: 531
score: 99.0230224609375
patch: increment CaMeL Iterations CaMeL Counter < cols ) {
rank: 531
score: 99.01380750868056
patch: increment CaMeL Iterations CaMeL Counter >= 1 ;
rank: 531
score: 98.99692946213942
patch: increment CaMeL Iterations CaMeL Counter ( ) ; exit = true ;
rank: 532
score: 99.14171491350446
patch: update CaMeL Jacobian ( false ) ; qr CaMeL Decomposition ( ) ;
rank: 532
score: 99.04014892578125
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; ; increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 532
score: 99.03346946022727
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( point , objective ) ;
rank: 532
score: 99.02236328125
patch: try { Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current .
rank: 532
score: 99.01251627604167
patch: increment CaMeL Iterations CaMeL Counter < cols ; first CaMeL Iteration = 0 ;
rank: 532
score: 98.99691162109374
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 532
score: 98.94515787760416
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( - 1 ) ;
rank: 532
score: 98.92471313476562
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ) ;
rank: 533
score: 99.03961540670956
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 533
score: 99.03248506433823
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = jac CaMeL Norm ;
rank: 533
score: 99.02217923677884
patch: } else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 533
score: 99.02181570870536
patch: return new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ;
rank: 533
score: 99.01235727163461
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , sum ) ;
rank: 533
score: 98.99687056107955
patch: increment CaMeL Iterations CaMeL Counter ( get CaMeL Iterations ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 533
score: 98.9448575106534
patch: node . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 533
score: 98.92462158203125
patch: increment CaMeL Iterations CaMeL Counter ( ( byte ) ) ;
rank: 534
score: 99.14111328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( , x CaMeL Norm ) ;
rank: 534
score: 99.03939383370536
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( ) )
rank: 534
score: 99.03236694335938
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 534
score: 98.99668884277344
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( ) ; }
rank: 534
score: 98.92442016601562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current
rank: 535
score: 99.14110649956598
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; qr CaMeL Decomposition ( ) ; }
rank: 535
score: 99.03846571180556
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 535
score: 99.03214263916016
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = false ; }
rank: 535
score: 99.021240234375
patch: if ( this . increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 535
score: 99.01230294363839
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cols , objective ) ;
rank: 535
score: 98.99664861505681
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; current = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 535
score: 98.94577858664773
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; }
rank: 535
score: 98.94444783528645
patch: logger . arraycopy ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 536
score: 99.14100952148438
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( this ) ;
rank: 536
score: 99.03207397460938
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; first CaMeL Iteration = true ;
rank: 536
score: 99.02108764648438
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return false ;
rank: 536
score: 99.020751953125
patch: increment CaMeL Iterations CaMeL Counter -- ; first CaMeL Iteration = 0 ;
rank: 536
score: 99.01216848273026
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) {
rank: 536
score: 98.9455233487216
patch: if ( true ) qr CaMeL Decomposition ( ) ;
rank: 536
score: 98.9442850748698
patch: this . ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 536
score: 98.92428588867188
patch: increment CaMeL Iterations CaMeL Counter ( false , false ) ;
rank: 537
score: 99.1407241821289
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( permutation ) ;
rank: 537
score: 99.03194986979166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = point ;
rank: 537
score: 99.01168118990384
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm += 0 ;
rank: 537
score: 98.99464925130208
patch: increment CaMeL Iterations CaMeL Counter ( current , start ) ;
rank: 537
score: 98.94546508789062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL
rank: 537
score: 98.94405110677083
patch: increment CaMeL Iterations CaMeL Counter ( * 1 , ) ;
rank: 538
score: 99.13976236979167
patch: current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) current ;
rank: 538
score: 99.03191266741071
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 538
score: 99.02032470703125
patch: x CaMeL Norm = Math . max ( diag CaMeL R ) ;
rank: 538
score: 99.01127115885417
patch: increment CaMeL Iterations CaMeL Counter ( point , current ) ;
rank: 538
score: 98.94488525390625
patch: j = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 538
score: 98.9439697265625
patch: increment CaMeL Iterations CaMeL Counter ( << 1 ) ;
rank: 538
score: 98.923876953125
patch: increment CaMeL Iterations CaMeL Counter ( [ ) ;
rank: 539
score: 99.03169468470982
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; current = current ;
rank: 539
score: 99.02068481445312
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = ) ; }
rank: 539
score: 99.0176513671875
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm = jac CaMeL Norm ;
rank: 539
score: 99.0110855102539
patch: increment CaMeL Iterations CaMeL Counter * current . if ( first CaMeL Iteration ) {
rank: 539
score: 98.99437366832386
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ( double ) ) ;
rank: 539
score: 98.9435283954327
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ;
rank: 540
score: 99.03142903645833
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , work 1 ) ;
rank: 540
score: 99.02041015625
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) true ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 540
score: 99.0172627766927
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = cols ;
rank: 540
score: 99.01046752929688
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , cost ) ;
rank: 540
score: 98.99333844866071
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; return current ;
rank: 540
score: 98.94319291548295
patch: database . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 540
score: 98.92336018880208
patch: increment CaMeL Iterations CaMeL Counter ( 1 1 true ) ;
rank: 541
score: 99.019970703125
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 541
score: 99.01698996803977
patch: increment CaMeL Iterations CaMeL Counter -= x CaMeL Norm ;
rank: 541
score: 99.01045735677083
patch: increment CaMeL Iterations CaMeL Counter ( false , diag ) ;
rank: 542
score: 99.03124128069196
patch: increment CaMeL Iterations CaMeL Counter ( lm CaMeL Par , residuals ) ;
rank: 542
score: 99.01990327380952
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 542
score: 99.015771484375
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = jac CaMeL Norm ; }
rank: 542
score: 99.00992525540866
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) cols ) ;
rank: 542
score: 98.99310772235577
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter , current ) ;
rank: 542
score: 98.94429779052734
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else x CaMeL Norm = 0 ;
rank: 542
score: 98.94284889914773
patch: container . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 543
score: 99.13843587239583
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current = current ;
rank: 543
score: 99.03629150390626
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 543
score: 99.0305404663086
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; first CaMeL Iteration = true ;
rank: 543
score: 99.01964111328125
patch: if ( increment CaMeL Iterations CaMeL Counter < $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 543
score: 98.99309430803571
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , ) ; ) ;
rank: 543
score: 98.94419860839844
patch: inst = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 543
score: 98.92262776692708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) / else
rank: 544
score: 99.1382992393092
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ; }
rank: 544
score: 99.030517578125
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( ++ ) ;
rank: 544
score: 99.01951002038044
patch: if ( this . increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 544
score: 99.01503684303977
patch: increment CaMeL Iterations CaMeL Counter += solved CaMeL Cols ;
rank: 544
score: 99.00928497314453
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , delta ) ;
rank: 544
score: 98.99290829613095
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( System . current CaMeL Time CaMeL Millis ( ) ;
rank: 544
score: 98.94369686351104
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . out . run ( ) ;
rank: 544
score: 98.94180733816964
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ;
rank: 544
score: 98.92239379882812
patch: increment CaMeL Iterations CaMeL Counter ( ( double ) ) ;
rank: 545
score: 99.03603515625
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; current = current ;
rank: 545
score: 99.0304842862216
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = new Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 545
score: 99.01920572916667
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 545
score: 99.01490129743304
patch: increment CaMeL Iterations CaMeL Counter 1 ; current = solved CaMeL Cols ;
rank: 545
score: 99.0089619954427
patch: increment CaMeL Iterations CaMeL Counter ( false , cost ) ;
rank: 545
score: 98.9924548921131
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 1 , ) ;
rank: 545
score: 98.94170587713069
patch: increment CaMeL Iterations CaMeL Counter [ ] ( ) ;
rank: 545
score: 98.92178780691964
patch: increment CaMeL Iterations CaMeL Counter ( 1 , - - 1 ) ;
rank: 546
score: 99.03561837332589
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ) ; }
rank: 546
score: 99.03029913651316
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , delta , work 1 ) ;
rank: 546
score: 99.01875232514881
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 546
score: 99.013427734375
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm = 0 ; }
rank: 546
score: 99.00749067826705
patch: increment CaMeL Iterations CaMeL Counter += x CaMeL Norm ;
rank: 546
score: 98.992255859375
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( ) ) increment CaMeL Iterations CaMeL Counter . remove ( 0 ) ;
rank: 546
score: 98.94143676757812
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ||
rank: 547
score: 99.03522406684027
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current . get CaMeL Iterations ( ) ;
rank: 547
score: 99.0302734375
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ;
rank: 547
score: 99.01868257068452
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 547
score: 99.01180326021634
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = this ;
rank: 547
score: 99.00702667236328
patch: if ( diag == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 547
score: 98.99214311079545
patch: increment CaMeL Iterations CaMeL Counter ( this , ) ;
rank: 547
score: 98.94340515136719
patch: tree = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 547
score: 98.94142659505208
patch: increment CaMeL Iterations CaMeL Counter < ( - 0 ) ;
rank: 547
score: 98.921142578125
patch: if ( ) { throw increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 548
score: 99.03487820095486
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 548
score: 99.02969215029762
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new Vectorial CaMeL Point CaMeL Value CaMeL Pair current ;
rank: 548
score: 99.01865844726562
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; } increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 548
score: 99.01109095982143
patch: increment CaMeL Iterations CaMeL Counter 1 ; x CaMeL Norm = 0 ;
rank: 548
score: 98.9917879971591
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 0 . $NUMBER$ ) ;
rank: 548
score: 98.94339752197266
patch: tmp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ) ;
rank: 548
score: 98.92091721754808
patch: final ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 549
score: 99.13734837582237
patch: R current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ;
rank: 549
score: 99.03436957465277
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) break ;
rank: 549
score: 99.02952270507812
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; x CaMeL Norm = 1 . 0 ;
rank: 549
score: 99.01809692382812
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; } increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 549
score: 99.01108805338542
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( point ) ;
rank: 549
score: 99.00689227764423
patch: update CaMeL Jacobian ( ) ; q CaMeL Ty ( ) ;
rank: 549
score: 98.99167306082589
patch: double old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 549
score: 98.94322204589844
patch: state = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 549
score: 98.9208984375
patch: Iterations ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 550
score: 99.13717990451389
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , 1 ) ;
rank: 550
score: 99.03396170479911
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; if ( ;
rank: 550
score: 99.02918061755952
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = true ;
rank: 550
score: 99.01790771484374
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) < ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 550
score: 99.0108642578125
patch: x CaMeL Norm = new double [ rows ] ;
rank: 550
score: 99.00667898995536
patch: if ( objective ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 550
score: 98.99166870117188
patch: increment CaMeL Iterations CaMeL Counter ( current , false ) ;
rank: 550
score: 98.94320475260416
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition = ) ;
rank: 550
score: 98.94126198508523
patch: this . increment CaMeL Iterations CaMeL Counter = ) ;
rank: 550
score: 98.92073567708333
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ 1 false ) ;
rank: 551
score: 99.03392615685097
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ; ;
rank: 551
score: 99.02915261008523
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point ,
rank: 551
score: 99.01788039434524
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 551
score: 99.0066630045573
patch: increment CaMeL Iterations CaMeL Counter ( true , 1 ) ;
rank: 551
score: 98.99162491508152
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 551
score: 98.9431485262784
patch: increment CaMeL Iterations CaMeL Counter ( , diag ) ;
rank: 551
score: 98.92044067382812
patch: increment CaMeL Iterations CaMeL Counter [ 1 ] = 0 ;
rank: 552
score: 99.02901785714286
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ;
rank: 552
score: 99.01777648925781
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter -- ;
rank: 552
score: 99.01036658653847
patch: increment CaMeL Iterations CaMeL Counter >= x CaMeL Norm = 0 ;
rank: 552
score: 99.0056621844952
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum = 1 ;
rank: 552
score: 98.99155970982143
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 552
score: 98.94054236778847
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int * * *
rank: 552
score: 98.92034912109375
patch: increment CaMeL Iterations CaMeL Counter ( true - $NUMBER$ ) ;
rank: 553
score: 99.13697007123162
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; jacobian = current ;
rank: 553
score: 99.03370079627403
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( current ) ;
rank: 553
score: 99.02895972842262
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; * /
rank: 553
score: 99.01771763392857
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; this . increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 553
score: 99.00982666015625
patch: increment CaMeL Iterations CaMeL Counter 1 ; current = current ;
rank: 553
score: 99.00554547991071
patch: if ( first CaMeL Iteration ) { diag = 1 . 0 ;
rank: 553
score: 98.99126727764423
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( ) ; }
rank: 553
score: 98.94026692708333
patch: increment CaMeL Iterations CaMeL Counter >> ( - 1 ) ;
rank: 553
score: 98.92027698863636
patch: / ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 554
score: 99.03328450520833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) . ) ;
rank: 554
score: 99.0289370888158
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception ,
rank: 554
score: 99.00548299153645
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , diag ) ;
rank: 554
score: 98.9911358173077
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( null ) ) ;
rank: 554
score: 98.93979317801339
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; else
rank: 554
score: 98.92019653320312
patch: increment CaMeL Iterations CaMeL Counter ( , $NUMBER$ 1 ) ;
rank: 555
score: 99.13637181332237
patch: if ( this . first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 555
score: 99.03292643229166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . ; }
rank: 555
score: 99.02888627485795
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; }
rank: 555
score: 99.01761067708334
patch: if ( false ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 555
score: 99.00880650111607
patch: x CaMeL Norm = Math . sqrt ( 0 . 0 ) ;
rank: 555
score: 98.99092923677884
patch: increment CaMeL Iterations CaMeL Counter ( ) . remove ( ) ;
rank: 555
score: 98.92010498046875
patch: return increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 556
score: 99.13628472222223
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , permutation ) ;
rank: 556
score: 99.03267728365384
patch: try { current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 556
score: 99.02862141927083
patch: double x CaMeL Norm = Math . sqrt ( jac CaMeL Norm ) ;
rank: 556
score: 99.01753743489583
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) {
rank: 556
score: 99.00832895132211
patch: increment CaMeL Iterations CaMeL Counter ++ ; if ( true ) {
rank: 556
score: 99.00524030412946
patch: if ( first CaMeL Iteration ) { lm CaMeL Par = 0 ;
rank: 556
score: 98.99072265625
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; break ;
rank: 556
score: 98.94212341308594
patch: synchronized ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 556
score: 98.93967848557692
patch: if ( ! increment CaMeL Iterations CaMeL Counter < 0 ) {
rank: 556
score: 98.91973876953125
patch: increment CaMeL Iterations CaMeL Counter ( 0 1 $NUMBER$ ) ;
rank: 557
score: 99.02808295355902
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( x CaMeL Norm , delta , diag ) ;
rank: 557
score: 99.01751239483173
patch: increment CaMeL Iterations CaMeL Counter ( [ 1 ] ) ; }
rank: 557
score: 99.00811298076923
patch: increment CaMeL Iterations CaMeL Counter ++ ; work $NUMBER$ = 0 ;
rank: 557
score: 98.91969807942708
patch: increment CaMeL Iterations CaMeL Counter ( 1 - null ) ;
rank: 558
score: 99.02792697482639
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; lm CaMeL Dir = 0 ;
rank: 558
score: 99.00403849283855
patch: increment CaMeL Iterations CaMeL Counter ( true , $NUMBER$ ) ;
rank: 558
score: 98.99052501860119
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( current . get CaMeL Id ( ) ) )
rank: 558
score: 98.94114283511513
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor : 1 ;
rank: 558
score: 98.93933783637152
patch: increment CaMeL Iterations CaMeL Counter ( ) +
rank: 559
score: 99.13541666666667
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , x CaMeL Norm ) ; }
rank: 559
score: 99.03218994140624
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 559
score: 99.02791341145833
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; x CaMeL Norm = 0 . 0 ; }
rank: 559
score: 99.00721086774554
patch: increment CaMeL Iterations CaMeL Counter ++ ; first CaMeL Iteration = $NUMBER$ ;
rank: 559
score: 99.00357818603516
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm , diag ) ;
rank: 559
score: 98.99041193181819
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) ) ; ;
rank: 559
score: 98.94088745117188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( , ) ;
rank: 559
score: 98.91914876302083
patch: increment CaMeL Iterations CaMeL Counter ( 0 . 1 ) ;
rank: 560
score: 99.0278549194336
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; first CaMeL Iteration = true ;
rank: 560
score: 99.01732235863095
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; this . increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 560
score: 99.00635704627403
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm = 1 ;
rank: 560
score: 99.00348369891827
patch: increment CaMeL Iterations CaMeL Counter ( true , - $NUMBER$ ) ;
rank: 560
score: 98.99006870814732
patch: int start = System . current CaMeL Time CaMeL Millis ( ) ;
rank: 560
score: 98.93867710658482
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) <= 0 ) ;
rank: 560
score: 98.91900634765625
patch: increment CaMeL Iterations CaMeL Counter ( 1 $NUMBER$ false ) ;
rank: 561
score: 99.01634803185097
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) = true ;
rank: 561
score: 99.0060526529948
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = 1 ;
rank: 561
score: 99.00318739149306
patch: if ( jac CaMeL Norm == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 561
score: 98.989990234375
patch: increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 561
score: 98.94027549342105
patch: increment CaMeL Iterations CaMeL Counter ( ) + initial CaMeL Step CaMeL Bound CaMeL Factor : residuals ;
rank: 561
score: 98.9383036295573
patch: tmp [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 561
score: 98.91893717447917
patch: if ( this != ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 562
score: 99.13505249023437
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( qr CaMeL Decomposition ( ) ) ;
rank: 562
score: 99.03155517578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Max CaMeL Iterations ( start ) ;
rank: 562
score: 99.02760145399306
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } x CaMeL Norm += jac CaMeL Norm ;
rank: 562
score: 99.00582885742188
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( true ) ;
rank: 562
score: 99.002685546875
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , ) ;
rank: 562
score: 98.98983060396634
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = 0 ;
rank: 562
score: 98.93804059709821
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) length 0 ) ;
rank: 562
score: 98.91853471235795
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ - ) ;
rank: 563
score: 99.03022904829545
patch: prev = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 563
score: 99.02729877672698
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( {
rank: 563
score: 99.0156719501202
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; break ; }
rank: 563
score: 99.00581868489583
patch: increment CaMeL Iterations CaMeL Counter = point [ cols ] ;
rank: 563
score: 99.00184541590073
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( cols ) ;
rank: 563
score: 98.93962860107422
patch: a = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 563
score: 98.93772194602273
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) {
rank: 563
score: 98.91815185546875
patch: / * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 564
score: 99.03004673549107
patch: if ( ) break ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 564
score: 99.02723388671875
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( null ) ;
rank: 564
score: 99.01493908110119
patch: this . increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 564
score: 99.0018081665039
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter * ) ;
rank: 564
score: 98.98961292613636
patch: root = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 564
score: 98.93960731907895
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; true ;
rank: 564
score: 98.93756658380681
patch: if ( increment CaMeL Iterations CaMeL Counter == ) {
rank: 564
score: 98.9178133877841
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ) ;
rank: 565
score: 99.13461538461539
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , permutation ) ;
rank: 565
score: 99.02721586681548
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 565
score: 99.01475830078125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 565
score: 99.0014404296875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = jac CaMeL Norm ;
rank: 565
score: 98.98923165457589
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = true ; }
rank: 565
score: 98.93942696707589
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) <= 0 ) {
rank: 566
score: 99.13449331430289
patch: update CaMeL Jacobian ( ) ; x CaMeL Norm = 0 ;
rank: 566
score: 99.02909712357955
patch: if ( ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 566
score: 99.01466674804688
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = ) ;
rank: 566
score: 99.00408935546875
patch: increment CaMeL Iterations CaMeL Counter 0 = solved CaMeL Cols ;
rank: 566
score: 99.00130462646484
patch: increment CaMeL Iterations CaMeL Counter ( 1 , x CaMeL Norm , sum ) ;
rank: 566
score: 98.98889741443452
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * $NUMBER$ , ) ;
rank: 566
score: 98.93926130022321
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , 0 ) ;
rank: 566
score: 98.93706805889423
patch: if ( ) { increment CaMeL Iterations CaMeL Counter < ) {
rank: 566
score: 98.91685133713942
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 567
score: 99.13406372070312
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 567
score: 99.02886408025569
patch: block = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 567
score: 99.00404575892857
patch: increment CaMeL Iterations CaMeL Counter 1 ; lm CaMeL Par = 0 ;
rank: 567
score: 99.0006103515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; cols = current ;
rank: 567
score: 98.98860386439732
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = - 1 ;
rank: 567
score: 98.9368184407552
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int ) {
rank: 567
score: 98.916748046875
patch: ) increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 568
score: 99.02877807617188
patch: if ( ) { current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 568
score: 99.02669525146484
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; lm CaMeL Dir = 0 ;
rank: 568
score: 99.01381138392857
patch: m [ 1 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 568
score: 99.00047956194196
patch: if ( true ) { x CaMeL Norm = 0 . 0 ;
rank: 568
score: 98.93869018554688
patch: t = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 568
score: 98.93621826171875
patch: if ( ) increment CaMeL Iterations CaMeL Counter > 0 ;
rank: 568
score: 98.91663614908855
patch: increment CaMeL Iterations CaMeL Counter ( ) throws System . ;
rank: 569
score: 99.13393729073661
patch: update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( residuals ) ;
rank: 569
score: 99.02876499720982
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; current . ;
rank: 569
score: 99.02659970238095
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols ) ; increment CaMeL Iterations CaMeL Counter ( diag ) ;
rank: 569
score: 99.01376577524039
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { }
rank: 569
score: 99.00251988002232
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += $NUMBER$ ;
rank: 569
score: 98.9882421875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) * increment CaMeL Iterations CaMeL Counter , ) ;
rank: 569
score: 98.93840026855469
patch: tmp = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( objective ) ;
rank: 569
score: 98.93584333147321
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) > 0 ) {
rank: 570
score: 99.02851213727679
patch: while ( ; ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 570
score: 99.01365966796875
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 570
score: 99.00213153545673
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current .
rank: 570
score: 98.99948120117188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int max = jac CaMeL Norm ;
rank: 570
score: 98.93762925091912
patch: increment CaMeL Iterations CaMeL Counter ( , increment CaMeL Iterations CaMeL Counter , 0 ) ;
rank: 571
score: 99.13324846540179
patch: increment CaMeL Iterations CaMeL Counter ( current , first CaMeL Iteration ) ;
rank: 571
score: 99.02839878627232
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . ) ; ;
rank: 571
score: 99.0257568359375
patch: boolean first CaMeL Iteration = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 571
score: 99.0135967548077
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ; } }
rank: 571
score: 98.99944598858173
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current .
rank: 571
score: 98.98751953125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ++ ) ;
rank: 571
score: 98.93569113991477
patch: this . increment CaMeL Iterations CaMeL Counter > 0 ;
rank: 571
score: 98.91593794389205
patch: increment CaMeL Iterations CaMeL Counter ( this 1 ) ;
rank: 572
score: 99.13311767578125
patch: { increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( ) ;
rank: 572
score: 99.02780151367188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; do { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 572
score: 99.025537109375
patch: boolean first CaMeL Iteration = false ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = null ;
rank: 572
score: 99.00066266741071
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; {
rank: 572
score: 98.9365234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current .
rank: 572
score: 98.93565150669643
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 573
score: 99.13310546875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( x CaMeL Norm ) ; }
rank: 573
score: 99.02507934570312
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; x CaMeL Norm = 0 . 0 ;
rank: 573
score: 99.01333618164062
patch: result = increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 573
score: 98.9874267578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . remove ( start ) ;
rank: 573
score: 98.93609297902961
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 573
score: 98.93548583984375
patch: if ( ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 573
score: 98.91573079427083
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 ) {
rank: 574
score: 99.02738734654018
patch: if ( ) continue ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 574
score: 99.02500610351562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( 1 ) ;
rank: 574
score: 99.013330078125
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 574
score: 99.00013224283855
patch: increment CaMeL Iterations CaMeL Counter -- ; current = 0 ;
rank: 574
score: 98.99915313720703
patch: if ( point == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 574
score: 98.93485514322917
patch: increment CaMeL Iterations CaMeL Counter > ) {
rank: 574
score: 98.91546630859375
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; ) {
rank: 575
score: 99.13234165736607
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( current , current ) ;
rank: 575
score: 98.9991455078125
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter += x CaMeL Norm ;
rank: 575
score: 98.98731689453125
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; } increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 575
score: 98.93584650213069
patch: m = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 575
score: 98.934326171875
patch: grammar . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 576
score: 99.1319580078125
patch: increment CaMeL Iterations CaMeL Counter ( 0 , permutation ) ;
rank: 576
score: 99.02686767578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 576
score: 99.02434747869319
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( ;
rank: 576
score: 99.01279518821023
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 576
score: 98.99564615885417
patch: x CaMeL Norm = Math . max ( permutation ) ;
rank: 576
score: 98.98710493607955
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; this . increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 576
score: 98.93569766773896
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter >= 0 )
rank: 576
score: 98.93416922433036
patch: increment CaMeL Iterations CaMeL Counter = ( increment CaMeL Iterations CaMeL Counter ;
rank: 577
score: 99.13168334960938
patch: qr CaMeL Decomposition ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 577
score: 99.02685546875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ; }
rank: 577
score: 99.0241943359375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = this ;
rank: 577
score: 98.99901471819196
patch: if ( first CaMeL Iteration ) { q CaMeL Ty ( ) ;
rank: 577
score: 98.98708871694711
patch: current = increment CaMeL Iterations CaMeL Counter ( ) + 1 ;
rank: 577
score: 98.93566131591797
patch: head = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( current ) ;
rank: 577
score: 98.915283203125
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; ) ; ;
rank: 578
score: 99.02650035511364
patch: g = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 578
score: 99.02407691592262
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current .
rank: 578
score: 99.01262817382812
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) && ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 578
score: 98.99900817871094
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols .
rank: 578
score: 98.994140625
patch: increment CaMeL Iterations CaMeL Counter > 0 = solved CaMeL Cols ;
rank: 578
score: 98.9867694561298
patch: switch ( increment CaMeL Iterations CaMeL Counter ) { case 1 :
rank: 578
score: 98.93529052734375
patch: increment CaMeL Iterations CaMeL Counter ( rows ) ;
rank: 578
score: 98.93299357096355
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; int
rank: 578
score: 98.9150390625
patch: increment CaMeL Iterations CaMeL Counter ( 1 + false ) ;
rank: 579
score: 99.13096313476562
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , permutation ) ;
rank: 579
score: 99.02398681640625
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; x CaMeL Norm = 0 ;
rank: 579
score: 99.01259068080357
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 579
score: 98.99886067708333
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 579
score: 98.99258188100961
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; {
rank: 579
score: 98.9865085767663
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 579
score: 98.93525695800781
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition ( ) ; try
rank: 579
score: 98.93280901227679
patch: value [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 580
score: 99.12990112304688
patch: R . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 580
score: 99.0123046875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 580
score: 98.99053955078125
patch: increment CaMeL Iterations CaMeL Counter iterator = solved CaMeL Cols ;
rank: 580
score: 98.98646850585938
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current = current . get CaMeL Parent ( ) ;
rank: 580
score: 98.9351870888158
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( >= 0 ) ;
rank: 580
score: 98.9325702373798
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; if (
rank: 580
score: 98.91263834635417
patch: increment CaMeL Iterations CaMeL Counter ( - 1 - ) ;
rank: 581
score: 99.12979286595395
patch: new = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , objective ) ; }
rank: 581
score: 99.02379557291667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = $NUMBER$ ;
rank: 581
score: 98.99826388888889
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , old CaMeL Res ) ;
rank: 581
score: 98.93224225725446
patch: try { increment CaMeL Iterations CaMeL Counter ( [ 1 ] ) ;
rank: 581
score: 98.91257731119792
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ . 1 ) ;
rank: 582
score: 99.1294009560033
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 582
score: 99.02374267578125
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; first CaMeL Iteration = true ;
rank: 582
score: 98.98987833658855
patch: increment CaMeL Iterations CaMeL Counter 1 = x CaMeL Norm ;
rank: 582
score: 98.98549582741477
patch: event = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 582
score: 98.93440077039931
patch: if ( update CaMeL Jacobian ( ) )
rank: 582
score: 98.93063354492188
patch: this . increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 582
score: 98.91255696614583
patch: if ( start != null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 583
score: 99.0253194173177
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / ;
rank: 583
score: 99.01186988467262
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 583
score: 98.99794006347656
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , x CaMeL Norm , sum ) ;
rank: 583
score: 98.98906598772321
patch: qr CaMeL Decomposition ( residuals ) ; qr CaMeL Decomposition ( ) ;
rank: 583
score: 98.93040882457386
patch: blackboard . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 583
score: 98.91250610351562
patch: increment CaMeL Iterations CaMeL Counter ( + - 0 ) ;
rank: 584
score: 99.02526245117187
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 584
score: 99.01124924879808
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ; ; }
rank: 584
score: 98.99776517427884
patch: qr CaMeL Decomposition ( ) ; lm CaMeL Par = 0 ;
rank: 584
score: 98.98690091646634
patch: increment CaMeL Iterations CaMeL Counter ( - solved CaMeL Cols ) ;
rank: 584
score: 98.93015834263393
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter ; ;
rank: 584
score: 98.91239420572917
patch: increment CaMeL Iterations CaMeL Counter ( , $NUMBER$ $NUMBER$ ) ;
rank: 585
score: 99.12834087171052
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( this ) ;
rank: 585
score: 99.02467041015625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return ) ;
rank: 585
score: 99.02314453125
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; x CaMeL Norm = 0 ;
rank: 585
score: 98.99679361979166
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter 1 ( ) ;
rank: 585
score: 98.9865010579427
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / }
rank: 585
score: 98.98441256009616
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter , ) ;
rank: 585
score: 98.9324886924342
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( , cols ) ;
rank: 585
score: 98.912109375
patch: increment CaMeL Iterations CaMeL Counter ( ? ) / ) ;
rank: 586
score: 99.02425537109374
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 586
score: 99.010986328125
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 586
score: 98.99667154947916
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols && first CaMeL Iteration ;
rank: 586
score: 98.98609008789063
patch: increment CaMeL Iterations CaMeL Counter 0 = 0 ;
rank: 586
score: 98.98431640625
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 586
score: 98.91204223632812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this
rank: 587
score: 99.12765502929688
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( $NUMBER$ ) ;
rank: 587
score: 99.02287946428571
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; increment CaMeL Iterations CaMeL Counter ( max ) ;
rank: 587
score: 99.0107952615489
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 587
score: 98.98570556640625
patch: x CaMeL Norm = 0 . 0 ; }
rank: 587
score: 98.93203895970395
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( == 0 ) ;
rank: 587
score: 98.92825317382812
patch: increment CaMeL Iterations CaMeL Counter ( + ) ;
rank: 587
score: 98.91133626302083
patch: increment CaMeL Iterations CaMeL Counter ( ) + * ) ;
rank: 588
score: 99.1271728515625
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 588
score: 99.02247203480114
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( solved CaMeL Cols ) ;
rank: 588
score: 99.01065673828126
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 588
score: 98.99647739955357
patch: if ( first CaMeL Iteration ) { sum += 1 . 0 ;
rank: 588
score: 98.98403494698661
patch: increment CaMeL Iterations CaMeL Counter ++ ; x CaMeL Norm += 0 ;
rank: 588
score: 98.92799595424107
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 589
score: 99.02365112304688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double delta = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 589
score: 99.01012602306548
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 589
score: 98.93125563401442
patch: i = 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 589
score: 98.9109598795573
patch: increment CaMeL Iterations CaMeL Counter ( ) + - ) ;
rank: 590
score: 99.12530196340461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 590
score: 99.02321213942308
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new ; }
rank: 590
score: 99.01006610576923
patch: else { increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 590
score: 98.98347778320313
patch: double x CaMeL Norm = 0 . 0 ;
rank: 590
score: 98.98327055431548
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) + 1 ;
rank: 590
score: 98.93119303385417
patch: this . increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 590
score: 98.91087123325893
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) throw _
rank: 591
score: 99.12506103515625
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , current ) ;
rank: 591
score: 99.02320274939903
patch: result = current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 591
score: 99.0095447358631
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 591
score: 98.99571736653645
patch: increment CaMeL Iterations CaMeL Counter ( true , residuals ) ;
rank: 591
score: 98.93100992838542
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw null ;
rank: 591
score: 98.92731267755681
patch: viewer . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 591
score: 98.91063435872395
patch: increment CaMeL Iterations CaMeL Counter ( - >= 0 ) ;
rank: 592
score: 99.0091796875
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 592
score: 98.9814922626202
patch: increment CaMeL Iterations CaMeL Counter ( point [ cols ] ) ;
rank: 592
score: 98.93053260216347
patch: if ( increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ;
rank: 592
score: 98.92717950994319
patch: increment CaMeL Iterations CaMeL Counter < - - 1 ;
rank: 592
score: 98.91062233664773
patch: scope = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 593
score: 99.0213623046875
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor * x CaMeL Norm ) ; * /
rank: 593
score: 99.00903930664063
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 593
score: 98.99527740478516
patch: if ( current == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 593
score: 98.98257446289062
patch: increment CaMeL Iterations CaMeL Counter ( max ) ;
rank: 593
score: 98.9813232421875
patch: increment CaMeL Iterations CaMeL Counter ( 1 ] ) ;
rank: 593
score: 98.93052271792763
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current ;
rank: 593
score: 98.91057794744319
patch: increment CaMeL Iterations CaMeL Counter ( ( ) ) ;
rank: 594
score: 99.02186889648438
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 594
score: 98.99508327907986
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 594
score: 98.98018022017045
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( 0 ) ;
rank: 594
score: 98.92709786551339
patch: if ( ! null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 594
score: 98.91056685014205
patch: increment CaMeL Iterations CaMeL Counter ( - != ) ;
rank: 595
score: 99.12381784539474
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 595
score: 99.0216776529948
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = ) ;
rank: 595
score: 99.0072354403409
patch: if ( ! this . increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 595
score: 98.994580078125
patch: if ( first CaMeL Iteration ) { qr CaMeL Decomposition ( residuals ) ;
rank: 595
score: 98.982353515625
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter , ) ;
rank: 595
score: 98.98001708984376
patch: increment CaMeL Iterations CaMeL Counter <= cols ) {
rank: 595
score: 98.92857947716347
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) != 0 )
rank: 595
score: 98.92660958426339
patch: if ( int ) { increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 595
score: 98.91042654854911
patch: increment CaMeL Iterations CaMeL Counter ( [ - - 1 ] ) ;
rank: 596
score: 99.12373657226563
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , cols ) ;
rank: 596
score: 99.02085571289062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Residuals CaMeL And CaMeL Cost ( ) ; ;
rank: 596
score: 99.00723266601562
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ; }
rank: 596
score: 98.982333984375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + increment CaMeL Iterations CaMeL Counter , ) ;
rank: 596
score: 98.92743474786931
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ;
rank: 596
score: 98.92640269886364
patch: handler . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 596
score: 98.9102783203125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) break ;
rank: 597
score: 99.1235821063702
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current += current ;
rank: 597
score: 99.00718383789062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 597
score: 98.98200334821429
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; start = true ;
rank: 597
score: 98.97900390625
patch: increment CaMeL Iterations CaMeL Counter < current = current ;
rank: 597
score: 98.9262362393466
patch: col = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 597
score: 98.91018676757812
patch: int 1 = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 598
score: 99.00705190805289
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; return true ;
rank: 598
score: 98.92618233816964
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) >= 1 ) ;
rank: 599
score: 99.12310791015625
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , 0 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 599
score: 99.02027587890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; current . ;
rank: 599
score: 99.00682431175595
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 599
score: 98.99415079752605
patch: increment CaMeL Iterations CaMeL Counter ( true , diag ) ;
rank: 599
score: 98.98027038574219
patch: if ( is CaMeL Empty ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 599
score: 98.9769795735677
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( false ) ;
rank: 599
score: 98.92591203962054
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter = ) ;
rank: 600
score: 99.01964111328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 600
score: 99.00649879092262
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ( increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 600
score: 98.99373953683036
patch: increment CaMeL Iterations CaMeL Counter ( cols , point , objective ) ;
rank: 600
score: 98.97866675967262
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , new double ) ;
rank: 600
score: 98.97657189002403
patch: increment CaMeL Iterations CaMeL Counter ( ) ; permutation = 0 ;
rank: 600
score: 98.90958658854167
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ $NUMBER$ $NUMBER$ ) ;
rank: 601
score: 99.122705078125
patch: current = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point . point , objective ) ;
rank: 601
score: 99.01986694335938
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int first CaMeL Iteration = current ;
rank: 601
score: 99.01923828125
patch: if ( ! increment CaMeL Iterations CaMeL Counter . ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 601
score: 99.00618843410327
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 601
score: 98.99371744791667
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols ) ; }
rank: 601
score: 98.9785868326823
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 601
score: 98.97646859975961
patch: increment CaMeL Iterations CaMeL Counter - current = solved CaMeL Cols ;
rank: 601
score: 98.92466517857143
patch: result [ 1 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 601
score: 98.92326216264205
patch: increment CaMeL Iterations CaMeL Counter ( ) * ) ;
rank: 602
score: 99.1225341796875
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 602
score: 99.0190185546875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 602
score: 99.00614107572116
patch: increment CaMeL Iterations CaMeL Counter ( * [ 1 ] ) ;
rank: 602
score: 98.99355181525735
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( diag ) ;
rank: 602
score: 98.97817160866477
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . start ( ) ; }
rank: 602
score: 98.97572835286458
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( current ) ;
rank: 602
score: 98.92449951171875
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter > 0 ;
rank: 602
score: 98.9224853515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / ) ;
rank: 603
score: 99.01967551491477
patch: increment CaMeL Iterations CaMeL Counter ( initial CaMeL Step CaMeL Bound CaMeL Factor ) ; x CaMeL Norm = 0 ;
rank: 603
score: 99.01860961914062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * increment CaMeL Iterations CaMeL Counter ( ) * /
rank: 603
score: 99.00558471679688
patch: return new increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 603
score: 98.9932373046875
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 603
score: 98.97538539341518
patch: increment CaMeL Iterations CaMeL Counter ( ) ; work $NUMBER$ = 0 ;
rank: 603
score: 98.92398507254464
patch: results [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 603
score: 98.9094746907552
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 604
score: 99.12232384314903
patch: increment CaMeL Iterations CaMeL Counter ( + 0 , permutation ) ;
rank: 604
score: 99.00546409970238
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 604
score: 98.99320475260417
patch: increment CaMeL Iterations CaMeL Counter ( point , diag ) ;
rank: 604
score: 98.97782566236413
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . out ) ; }
rank: 604
score: 98.923583984375
patch: if ( ! increment CaMeL Iterations CaMeL Counter == ) {
rank: 604
score: 98.90940348307292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ) {
rank: 605
score: 99.0178955078125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 605
score: 98.99310709635417
patch: if ( ! first CaMeL Iteration ) { qr CaMeL Decomposition ( ) ;
rank: 605
score: 98.9777734375
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , current . get CaMeL Iterations ( ) , ) ;
rank: 605
score: 98.9745205965909
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ] ) ;
rank: 605
score: 98.92351740056819
patch: transform . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 605
score: 98.91984049479167
patch: increment CaMeL Iterations CaMeL Counter ( lm CaMeL Dir ) ;
rank: 606
score: 99.01918131510416
patch: increment CaMeL Iterations CaMeL Counter ( lm CaMeL Par [ 0 ] ) ;
rank: 606
score: 99.01758922230114
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ;
rank: 606
score: 98.99309895833333
patch: try { update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( ) ;
rank: 606
score: 98.97757393973214
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . wait ( ) ;
rank: 606
score: 98.92347301136364
patch: Utility . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 606
score: 98.90900127704327
patch: if ( * increment CaMeL Iterations CaMeL Counter < 0 ) {
rank: 607
score: 99.12198486328126
patch: increment CaMeL Iterations CaMeL Counter ( this , current ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 607
score: 99.01656341552734
patch: synchronized ( ) { current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 607
score: 99.004638671875
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 607
score: 98.99273681640625
patch: if ( objective == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 607
score: 98.9234286221591
patch: delegate . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 607
score: 98.90894571940105
patch: return * increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 608
score: 99.01878356933594
patch: increment CaMeL Iterations CaMeL Counter ( point ) ; update CaMeL Jacobian ( ) ;
rank: 608
score: 99.0162353515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ( 1 ) ;
rank: 608
score: 98.99242292131696
patch: increment CaMeL Iterations CaMeL Counter ( point , point , objective ) ;
rank: 608
score: 98.9766796875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter + ) ;
rank: 608
score: 98.97381036931819
patch: increment CaMeL Iterations CaMeL Counter 1 ( 0 ) ;
rank: 608
score: 98.92294311523438
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] ( ) ;
rank: 608
score: 98.9163309733073
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; try {
rank: 609
score: 99.01877848307292
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res ) ;
rank: 609
score: 99.004150390625
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 609
score: 98.99235026041667
patch: increment CaMeL Iterations CaMeL Counter ( 0 , x CaMeL Norm ) ; {
rank: 609
score: 98.90880330403645
patch: increment CaMeL Iterations CaMeL Counter ( , * 1 ) ;
rank: 610
score: 99.01560974121094
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Arrays . sort ( current ) ;
rank: 610
score: 99.00411551339286
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 610
score: 98.99193318684895
patch: increment CaMeL Iterations CaMeL Counter ( true , cost ) ;
rank: 610
score: 98.9761211688702
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sleep ( ) ;
rank: 610
score: 98.97295673076923
patch: increment CaMeL Iterations CaMeL Counter <= x CaMeL Norm = 1 ;
rank: 610
score: 98.9228006998698
patch: increment CaMeL Iterations CaMeL Counter ( < - 1 ) ;
rank: 610
score: 98.9153301532452
patch: increment CaMeL Iterations CaMeL Counter ( , point , objective ) ;
rank: 610
score: 98.90866088867188
patch: increment CaMeL Iterations CaMeL Counter ( ( ) $NUMBER$ ) ;
rank: 611
score: 99.12060546875
patch: increment CaMeL Iterations CaMeL Counter ( do CaMeL Optimize ( ) ) ;
rank: 611
score: 99.0162582397461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = ) 0 ;
rank: 611
score: 99.01556865985577
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 ) break ;
rank: 611
score: 99.00323486328125
patch: break increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 611
score: 98.97240271935097
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = $STRING$ ;
rank: 611
score: 98.92240687779018
patch: increment CaMeL Iterations CaMeL Counter ; increment CaMeL Iterations CaMeL Counter = (
rank: 611
score: 98.91490589488636
patch: head = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 611
score: 98.90859549386161
patch: int ) { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 612
score: 99.12059936523437
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; update CaMeL Jacobian ( ) ; ;
rank: 612
score: 99.0162353515625
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( jac CaMeL Norm ) ;
rank: 612
score: 99.01539306640625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; for ( )
rank: 612
score: 99.002685546875
patch: increment CaMeL Iterations CaMeL Counter ( [ [ 0 ] ) ;
rank: 612
score: 98.97144493689903
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( residuals ) ; }
rank: 612
score: 98.9221524325284
patch: page . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 612
score: 98.91265314275569
patch: increment CaMeL Iterations CaMeL Counter ( && true ) ;
rank: 612
score: 98.90836879185268
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( 1 ) ) {
rank: 613
score: 99.1203857421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 613
score: 99.01426003196023
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 )
rank: 613
score: 99.00251908735795
patch: node = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 613
score: 98.99086216517857
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 613
score: 98.9219082919034
patch: increment CaMeL Iterations CaMeL Counter ( * $NUMBER$ ) ;
rank: 613
score: 98.90829702524039
patch: if ( * increment CaMeL Iterations CaMeL Counter >= 0 ) {
rank: 614
score: 99.12021891276042
patch: increment CaMeL Iterations CaMeL Counter ( 1 , permutation ) ;
rank: 614
score: 99.01356858473558
patch: current = new ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 614
score: 99.00212296195652
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 614
score: 98.90829467773438
patch: increment CaMeL Iterations CaMeL Counter ( this - $NUMBER$ ) ;
rank: 615
score: 99.11985560825893
patch: throw new Function CaMeL Evaluation CaMeL Exception ( point , objective ) ;
rank: 615
score: 99.01316139914773
patch: info = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 615
score: 99.001953125
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 615
score: 98.99040222167969
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm , diag ) ;
rank: 615
score: 98.96848551432292
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = $NUMBER$ ;
rank: 615
score: 98.9209716796875
patch: increment CaMeL Iterations CaMeL Counter ( exp ) ;
rank: 615
score: 98.91009521484375
patch: -- cols ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 615
score: 98.90778459821429
patch: if ( * * increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 616
score: 99.11979166666667
patch: increment CaMeL Iterations CaMeL Counter ( current , point ) ;
rank: 616
score: 99.01579066685268
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm ++ ;
rank: 616
score: 99.01310511997768
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set ) ;
rank: 616
score: 99.00183686755952
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 616
score: 98.99009704589844
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols , objective ) ;
rank: 616
score: 98.97402954101562
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 616
score: 98.9676044170673
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = current ; {
rank: 616
score: 98.90932791573661
patch: Object current = current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 616
score: 98.90774536132812
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) / ;
rank: 617
score: 99.11974225725446
patch: synchronized ( true ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 617
score: 99.0156494140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; old CaMeL X = current ;
rank: 617
score: 99.01287372295673
patch: current = new increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 617
score: 99.00169020432692
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; } ;
rank: 617
score: 98.98987688337054
patch: increment CaMeL Iterations CaMeL Counter ( point , cols , objective ) ;
rank: 617
score: 98.97260076349431
patch: source = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 617
score: 98.96710674579327
patch: increment CaMeL Iterations CaMeL Counter ++ ; while ( true ) {
rank: 617
score: 98.90834738991477
patch: increment CaMeL Iterations CaMeL Counter ( , rows ) ;
rank: 617
score: 98.90773111979166
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) .
rank: 618
score: 99.1197265625
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 618
score: 99.0128173828125
patch: other = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 618
score: 98.98985799153645
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , cost ) ;
rank: 618
score: 98.97228515625
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ;
rank: 618
score: 98.91947428385417
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 618
score: 98.90737479073661
patch: int * * * = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 619
score: 99.11948852539062
patch: increment CaMeL Iterations CaMeL Counter ( current , 0 ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 619
score: 99.01183319091797
patch: increment CaMeL Iterations CaMeL Counter ( ) ; notify CaMeL All ( ) ; }
rank: 619
score: 98.98980712890625
patch: increment CaMeL Iterations CaMeL Counter ( 0 , solved CaMeL Cols , true ) ;
rank: 619
score: 98.97194260817308
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( true ) ;
rank: 619
score: 98.96585083007812
patch: this . q CaMeL Ty ( residuals ) ;
rank: 619
score: 98.91886763139205
patch: rc = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 619
score: 98.90755789620536
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else current = current ;
rank: 619
score: 98.9071044921875
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 620
score: 99.11931903545673
patch: increment CaMeL Iterations CaMeL Counter ( ) ; jacobian = current ;
rank: 620
score: 99.01477922712054
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( q CaMeL Ty ) ;
rank: 620
score: 99.01077974759616
patch: if ( increment CaMeL Iterations CaMeL Counter < 1 ) break ;
rank: 620
score: 98.98870849609375
patch: increment CaMeL Iterations CaMeL Counter ( false , x CaMeL Norm , diag ) ;
rank: 620
score: 98.97171456473214
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) - 1 ;
rank: 620
score: 98.96359487680289
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = current ) ;
rank: 620
score: 98.9073486328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / )
rank: 620
score: 98.90646362304688
patch: / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 621
score: 99.01450020926339
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = )
rank: 621
score: 99.00083229758523
patch: if ( ) this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 621
score: 98.98850661057692
patch: while ( true ) { increment CaMeL Iterations CaMeL Counter -- ;
rank: 621
score: 98.9716159986413
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ;
rank: 621
score: 98.918701171875
patch: peer . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 621
score: 98.90616861979167
patch: increment CaMeL Iterations CaMeL Counter ( ] ) ; ) ;
rank: 621
score: 98.90581403459821
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( false ) {
rank: 622
score: 99.11823381696429
patch: increment CaMeL Iterations CaMeL Counter ( this . point , objective ) ;
rank: 622
score: 99.00994873046875
patch: current = increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ;
rank: 622
score: 98.98805236816406
patch: increment CaMeL Iterations CaMeL Counter ( 0 , 0 , solved CaMeL Cols ) ;
rank: 622
score: 98.97087890625
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 622
score: 98.91839044744319
patch: scheduler . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 622
score: 98.9058837890625
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } =
rank: 623
score: 99.00986735026042
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 623
score: 98.99993426983173
patch: final int ) = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 623
score: 98.98787434895833
patch: increment CaMeL Iterations CaMeL Counter ( 0 , residuals ) ;
rank: 623
score: 98.97085571289062
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; ;
rank: 623
score: 98.9181795987216
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] -- ;
rank: 623
score: 98.90584019252232
patch: increment CaMeL Iterations CaMeL Counter ( - - 0 - 0 ) ;
rank: 623
score: 98.90388997395833
patch: increment CaMeL Iterations CaMeL Counter ( residuals , true ) ;
rank: 624
score: 99.01423645019531
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; lm CaMeL Dir = 0 ;
rank: 624
score: 98.99964971127717
patch: if ( this . increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 624
score: 98.98780059814453
patch: increment CaMeL Iterations CaMeL Counter ( false , x CaMeL Norm , sum ) ;
rank: 624
score: 98.97055199032738
patch: if ( old CaMeL X . length > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 624
score: 98.9610595703125
patch: lm CaMeL Dir = new double [ cols ] ;
rank: 624
score: 98.91791643415179
patch: tmp [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 624
score: 98.90273215553977
patch: retval = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 625
score: 99.01400756835938
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ; }
rank: 625
score: 98.91748918805804
patch: if ( this . increment CaMeL Iterations CaMeL Counter >= 0 ) {
rank: 625
score: 98.90531412760417
patch: if ( ) { try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 626
score: 99.116552734375
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 626
score: 99.01390662560097
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * / }
rank: 626
score: 99.00848858173077
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) > 0 )
rank: 626
score: 98.99948354867789
patch: finally { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 626
score: 98.98675067608173
patch: increment CaMeL Iterations CaMeL Counter ( ) ; point = null ;
rank: 626
score: 98.97015380859375
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ( int ) ) ;
rank: 626
score: 98.96067116477273
patch: qr CaMeL Decomposition = new double [ cols ] ;
rank: 626
score: 98.91747174944196
patch: v [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 627
score: 99.11620221819196
patch: if ( permutation ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 627
score: 99.01376342773438
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( old CaMeL Res , delta , diag , work 1 ,
rank: 627
score: 98.99898856026786
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 627
score: 98.96861775716145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start ++ ;
rank: 627
score: 98.95851643880208
patch: increment CaMeL Iterations CaMeL Counter ( ) ; work $NUMBER$ ;
rank: 627
score: 98.91727992466518
patch: if ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 627
score: 98.89938354492188
patch: try { increment CaMeL Iterations CaMeL Counter ( residuals ) ;
rank: 628
score: 99.0078125
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) break ;
rank: 628
score: 98.99893851902173
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 628
score: 98.95769794170673
patch: increment CaMeL Iterations CaMeL Counter ++ ; work $NUMBER$ = current ;
rank: 628
score: 98.917236328125
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 628
score: 98.90456136067708
patch: increment CaMeL Iterations CaMeL Counter ( ) + - $NUMBER$ ;
rank: 628
score: 98.8990966796875
patch: increment CaMeL Iterations CaMeL Counter ( permutation ) ;
rank: 629
score: 99.00745738636364
patch: cur . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 629
score: 98.99880149147727
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , increment CaMeL Iterations CaMeL Counter ) ;
rank: 629
score: 98.95730590820312
patch: increment CaMeL Iterations CaMeL Counter ( objective ) ;
rank: 629
score: 98.90442766462054
patch: increment CaMeL Iterations CaMeL Counter ( - - - 1 $NUMBER$ ) ;
rank: 629
score: 98.89685997596153
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition (
rank: 630
score: 99.0067138671875
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; if ( ;
rank: 630
score: 98.99843528053977
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; } ;
rank: 630
score: 98.96812855113636
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 630
score: 98.95668538411458
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ; current = current ;
rank: 630
score: 98.91595458984375
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ) ; }
rank: 630
score: 98.9043680826823
patch: increment CaMeL Iterations CaMeL Counter ( 1 - * ) ;
rank: 631
score: 99.11202392578124
patch: lm CaMeL Par = new Vectorial CaMeL Point CaMeL Value CaMeL Pair ( point , 0 ) ;
rank: 631
score: 99.01275024414062
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; = 0 ;
rank: 631
score: 99.00656362680289
patch: synchronized ( this ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 631
score: 98.99834735576923
patch: increment CaMeL Iterations CaMeL Counter ( [ max 1 ] ) ;
rank: 631
score: 98.96809895833333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) )
rank: 631
score: 98.9552978515625
patch: increment CaMeL Iterations CaMeL Counter ++ ; break ;
rank: 631
score: 98.91560581752232
patch: result [ 0 ] = increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 631
score: 98.90425618489583
patch: increment CaMeL Iterations CaMeL Counter ( 1 + - ) ;
rank: 631
score: 98.8953857421875
patch: increment CaMeL Iterations CaMeL Counter ( ) - 0 ;
rank: 632
score: 99.00649007161458
patch: previous = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 632
score: 98.99769810267857
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 632
score: 98.9539794921875
patch: x CaMeL Norm = Math . sqrt ( diag ) ;
rank: 632
score: 98.9154764811198
patch: this . increment CaMeL Iterations CaMeL Counter < - 1 ;
rank: 632
score: 98.9041035970052
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) * /
rank: 633
score: 99.11160481770834
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( current , objective ) ; }
rank: 633
score: 99.01228332519531
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; lm CaMeL Dir = 0 ;
rank: 633
score: 98.99746469350961
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } if ( ;
rank: 633
score: 98.98421478271484
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , x CaMeL Norm , sum ) ;
rank: 633
score: 98.96749745244566
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) , true ) ;
rank: 633
score: 98.9150390625
patch: increment CaMeL Iterations CaMeL Counter ;
rank: 633
score: 98.9038594563802
patch: increment CaMeL Iterations CaMeL Counter ( 1 + null ) ;
rank: 634
score: 99.01203918457031
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; lm CaMeL Dir = 0 ;
rank: 634
score: 98.98419952392578
patch: increment CaMeL Iterations CaMeL Counter ( 1 , solved CaMeL Cols , diag ) ;
rank: 634
score: 98.96749441964286
patch: long start = System . current CaMeL Time CaMeL Millis ( ) ;
rank: 634
score: 98.95322487571023
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / }
rank: 634
score: 98.91495768229167
patch: increment CaMeL Iterations CaMeL Counter >= ) {
rank: 634
score: 98.9034423828125
patch: Iterations [ - 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 634
score: 98.89423828125
patch: if ( qr CaMeL Decomposition ( ) ) {
rank: 635
score: 99.11106363932292
patch: increment CaMeL Iterations CaMeL Counter ( null , current ) ;
rank: 635
score: 99.01115417480469
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Dir = 0 ; }
rank: 635
score: 99.00614107572116
patch: if ( false ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 635
score: 98.99708193824405
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 635
score: 98.98321063701923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; point = 0 ;
rank: 635
score: 98.951904296875
patch: increment CaMeL Iterations CaMeL Counter ++ ; {
rank: 635
score: 98.91468394886364
patch: increment CaMeL Iterations CaMeL Counter ( % 1 ) ;
rank: 635
score: 98.90343299278847
patch: increment CaMeL Iterations CaMeL Counter ( - - 1 ) ; ;
rank: 635
score: 98.89396362304687
patch: increment CaMeL Iterations CaMeL Counter ( delta ) ;
rank: 636
score: 98.99688165838069
patch: if ( this . increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 636
score: 98.98311360677083
patch: increment CaMeL Iterations CaMeL Counter < x CaMeL Norm += jac CaMeL Norm ;
rank: 636
score: 98.96702067057292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ) ;
rank: 636
score: 98.91447310014205
patch: bytes = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 636
score: 98.89376831054688
patch: increment CaMeL Iterations CaMeL Counter ( residuals , cols ) ;
rank: 637
score: 99.10976736886161
patch: qr CaMeL Decomposition ( ) ; qr CaMeL Decomposition ( ) ; }
rank: 637
score: 99.01043090820312
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm ) ; }
rank: 637
score: 98.98196176382211
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum += cols ;
rank: 637
score: 98.96699662642045
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; return current ;
rank: 637
score: 98.9502286044034
patch: x CaMeL Norm = 0 . 0 . 0 ;
rank: 637
score: 98.91405232747395
patch: increment CaMeL Iterations CaMeL Counter ( - 1 [ ) ;
rank: 637
score: 98.90322875976562
patch: increment CaMeL Iterations CaMeL Counter ( true - 0 ) ;
rank: 637
score: 98.89333089192708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( current
rank: 638
score: 99.10902622767857
patch: increment CaMeL Iterations CaMeL Counter ( current , point , objective ) ;
rank: 638
score: 99.01033528645833
patch: increment CaMeL Iterations CaMeL Counter ( ) ; first CaMeL Iteration = ) {
rank: 638
score: 98.98180474175348
patch: increment CaMeL Iterations CaMeL Counter < ) { increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 638
score: 98.9667256673177
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , old CaMeL X . length ) ;
rank: 638
score: 98.94976806640625
patch: x CaMeL Norm = Math . sqrt ( permutation ) ;
rank: 638
score: 98.91402762276786
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int ( $NUMBER$ ) ;
rank: 638
score: 98.90277654474431
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ; ;
rank: 639
score: 99.00906982421876
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols ) ;
rank: 639
score: 99.00352894176136
patch: cursor = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 639
score: 98.99598760190217
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 639
score: 98.98155866350446
patch: if ( first CaMeL Iteration ) { delta = 1 . 0 ;
rank: 639
score: 98.96663724459134
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . append ( ) ;
rank: 639
score: 98.94873046875
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( cols ) ;
rank: 639
score: 98.91331898082386
patch: Disposer . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 639
score: 98.90221058238636
patch: break ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 639
score: 98.89255593039773
patch: increment CaMeL Iterations CaMeL Counter ( + cols ) ;
rank: 640
score: 99.10640462239583
patch: current = ( Vectorial CaMeL Point CaMeL Value CaMeL Pair ) point ;
rank: 640
score: 99.00792585100446
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res , delta ) ;
rank: 640
score: 99.00279947916667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; current = current . ;
rank: 640
score: 98.99541945684524
patch: while ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 640
score: 98.98123168945312
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , x CaMeL Norm == 0 ) ;
rank: 640
score: 98.96657151442308
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , current . get CaMeL Iterations ( ) ) ;
rank: 640
score: 98.91331898082386
patch: cfw . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 640
score: 98.90215509588069
patch: float * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 640
score: 98.89232459435097
patch: increment CaMeL Iterations CaMeL Counter ( ) + 0 . 0 ;
rank: 641
score: 99.10542515345982
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { current = current ;
rank: 641
score: 99.0015869140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = new ) ;
rank: 641
score: 98.98086208767361
patch: increment CaMeL Iterations CaMeL Counter * ) ;
rank: 641
score: 98.91305541992188
patch: increment CaMeL Iterations CaMeL Counter ( ) ; boolean
rank: 641
score: 98.8921231356534
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / :
rank: 642
score: 99.00157581676136
patch: rule = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 642
score: 98.98070526123047
patch: if ( first CaMeL Iteration ) { x CaMeL Norm += 1 . 0 ;
rank: 642
score: 98.96630859375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter - 1 ) ;
rank: 642
score: 98.9471435546875
patch: x CaMeL Norm = diag CaMeL R [ cols ] ;
rank: 642
score: 98.9124755859375
patch: increment CaMeL Iterations CaMeL Counter ( in ) ;
rank: 642
score: 98.90196814903847
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; ; ;
rank: 642
score: 98.89174241286058
patch: increment CaMeL Iterations CaMeL Counter ( ) ; qr CaMeL Decomposition [
rank: 643
score: 99.00687081473214
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , cols ) ;
rank: 643
score: 98.99451264880952
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 643
score: 98.98026529947917
patch: increment CaMeL Iterations CaMeL Counter >= 0 ; x CaMeL Norm += 0 ;
rank: 643
score: 98.96603515625
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter $NUMBER$ ) ;
rank: 643
score: 98.94460042317708
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( this ) ;
rank: 643
score: 98.91229802911931
patch: AOM . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 644
score: 99.1048583984375
patch: increment CaMeL Iterations CaMeL Counter ( current , jacobian ) ;
rank: 644
score: 99.00095778245192
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ; ;
rank: 644
score: 98.94073486328125
patch: increment CaMeL Iterations CaMeL Counter 1 = jac CaMeL Norm ;
rank: 644
score: 98.91215006510417
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( (
rank: 644
score: 98.9017333984375
patch: Iterations [ 1 ] = ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 644
score: 98.88912259615384
patch: cur = current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 645
score: 99.00628662109375
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res , objective ) ;
rank: 645
score: 98.98005894252232
patch: increment CaMeL Iterations CaMeL Counter ] = new double [ cols ] ;
rank: 645
score: 98.96562056107955
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . wait ( $NUMBER$ ) ;
rank: 645
score: 98.91196511008523
patch: buf = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 645
score: 98.90155498798077
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) .
rank: 645
score: 98.8886385830966
patch: increment CaMeL Iterations CaMeL Counter ( , cost ) ;
rank: 646
score: 99.10362897600446
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } while ( true )
rank: 646
score: 99.00572102864584
patch: increment CaMeL Iterations CaMeL Counter ( ) ; x CaMeL Norm = current ;
rank: 646
score: 98.99965413411458
patch: double delta = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 646
score: 98.99405924479167
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = $NUMBER$ ; }
rank: 646
score: 98.97993299696181
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ ) ;
rank: 646
score: 98.96546875
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ) ; ;
rank: 646
score: 98.91051025390625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final
rank: 646
score: 98.9015401204427
patch: increment CaMeL Iterations CaMeL Counter ( , * $NUMBER$ ) ;
rank: 647
score: 99.10288649338942
patch: increment CaMeL Iterations CaMeL Counter ( , 0 . 0 ) ;
rank: 647
score: 99.00569370814732
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL Res , residuals ) ;
rank: 647
score: 98.99938151041667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) . ; }
rank: 647
score: 98.99399636008523
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ; }
rank: 647
score: 98.96527390252976
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) / $NUMBER$ , ) ;
rank: 647
score: 98.91007856889205
patch: reader . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 647
score: 98.90151977539062
patch: if ( increment CaMeL Iterations CaMeL Counter >= 1 ) {
rank: 647
score: 98.887939453125
patch: increment CaMeL Iterations CaMeL Counter ( 1 , residuals ) ;
rank: 648
score: 99.00543619791667
patch: boolean first CaMeL Iteration = true ; boolean first CaMeL Iteration = true ;
rank: 648
score: 98.99927775065105
patch: while ( ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 648
score: 98.99391867897727
patch: element = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 648
score: 98.96522739955357
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( current . get CaMeL Class ( ) ) )
rank: 648
score: 98.93722534179688
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( 0 ) ;
rank: 648
score: 98.91002308238636
patch: state . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 648
score: 98.90142822265625
patch: increment CaMeL Iterations CaMeL Counter ( - - - - 0 ) ;
rank: 648
score: 98.8876065340909
patch: loop = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 649
score: 99.00523376464844
patch: increment CaMeL Iterations CaMeL Counter ( ) ; lm CaMeL Par = - cols ;
rank: 649
score: 98.99890950520833
patch: if ( current != null ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 649
score: 98.99359130859375
patch: state = increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 649
score: 98.97872488839286
patch: if ( diag ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 649
score: 98.96512545072116
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = 1 ;
rank: 649
score: 98.9013163248698
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) continue ;
rank: 649
score: 98.8869120279948
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / ) {
rank: 650
score: 98.99845747514205
patch: done = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 650
score: 98.93553670247395
patch: double [ ] old CaMeL X = 0 . 0 ;
rank: 650
score: 98.90118963068181
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( 1 ) ;
rank: 651
score: 99.10105202414773
patch: R . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 651
score: 99.00485464242789
patch: lm CaMeL Dir = 0 ; update CaMeL Jacobian ( ) ;
rank: 651
score: 98.9983379657452
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) delta ) ;
rank: 651
score: 98.99288504464286
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return false ; }
rank: 651
score: 98.97822570800781
patch: increment CaMeL Iterations CaMeL Counter ( 1 , cols , solved CaMeL Cols ) ;
rank: 651
score: 98.96505972055289
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( new ) ) ;
rank: 651
score: 98.93377130681819
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; {
rank: 651
score: 98.9092508951823
patch: extra $NUMBER$ = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 651
score: 98.90107073102679
patch: increment CaMeL Iterations CaMeL Counter ( ( / 1 ) 1 ) ;
rank: 652
score: 99.09996619591347
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum ( ) ;
rank: 652
score: 98.99260602678571
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 652
score: 98.97820575420673
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = current .
rank: 652
score: 98.96474387428977
patch: increment CaMeL Iterations CaMeL Counter ( work $NUMBER$ ) ;
rank: 652
score: 98.93310546875
patch: increment CaMeL Iterations CaMeL Counter 1 ( cols ) ;
rank: 652
score: 98.88673753004808
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . * /
rank: 653
score: 99.098388671875
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) permutation ) ;
rank: 653
score: 99.00334167480469
patch: if ( jac CaMeL Norm ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 653
score: 98.9969482421875
patch: for ( ; ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 653
score: 98.99259440104167
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 653
score: 98.97768147786458
patch: increment CaMeL Iterations CaMeL Counter ( 0 , sum ) ;
rank: 653
score: 98.96458943684895
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ( ) ) , ) ;
rank: 653
score: 98.90870157877605
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ;
rank: 653
score: 98.90076793323864
patch: increment CaMeL Iterations CaMeL Counter ( 1 && ) ;
rank: 653
score: 98.88631184895833
patch: if ( first CaMeL Iteration || first CaMeL Iteration ) {
rank: 654
score: 99.09708949497768
patch: increment CaMeL Iterations CaMeL Counter ( 1 , 0 . 0 ) ;
rank: 654
score: 99.00275421142578
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; x CaMeL Norm = 0 ;
rank: 654
score: 98.99686373197116
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final ( ) ;
rank: 654
score: 98.99258858816964
patch: if ( ! ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 654
score: 98.9638439360119
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ( int ) increment CaMeL Iterations CaMeL Counter ) ;
rank: 654
score: 98.93039957682292
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ = solved CaMeL Cols ;
rank: 654
score: 98.90774536132812
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) ;
rank: 654
score: 98.90076700846355
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , * ) ;
rank: 654
score: 98.88620827414773
patch: increment CaMeL Iterations CaMeL Counter ( >> $NUMBER$ ) ;
rank: 655
score: 99.0968350497159
patch: current = current ; update CaMeL Jacobian ( ) ;
rank: 655
score: 99.00264739990234
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; first CaMeL Iteration = 0 ;
rank: 655
score: 98.99647739955357
patch: if ( ! increment CaMeL Iterations CaMeL Counter . equals ( ) )
rank: 655
score: 98.99230375744048
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter += $NUMBER$ ; }
rank: 655
score: 98.97657993861607
patch: double [ ] old CaMeL X = new double [ cols ] ;
rank: 655
score: 98.9635897549716
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; this . increment CaMeL Iterations CaMeL Counter ( current ) ; }
rank: 655
score: 98.93016468394886
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; }
rank: 655
score: 98.90724875710227
patch: column = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 655
score: 98.90069025213069
patch: increment CaMeL Iterations CaMeL Counter ( ) ) / /
rank: 655
score: 98.88555438701923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian (
rank: 656
score: 99.0962383563702
patch: update CaMeL Jacobian ( ) ; if ( first CaMeL Iteration )
rank: 656
score: 98.99635823567708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( )
rank: 656
score: 98.99193173363095
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; final increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 656
score: 98.96312537560097
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( current ;
rank: 656
score: 98.9300537109375
patch: increment CaMeL Iterations CaMeL Counter ( null , cols ) ;
rank: 656
score: 98.90067915482955
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) )
rank: 656
score: 98.88522338867188
patch: Object current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 657
score: 99.09593854631696
patch: update CaMeL Jacobian ( ) ; if ( first CaMeL Iteration ) {
rank: 657
score: 98.9961688701923
patch: if ( ) continue ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 657
score: 98.99188787286931
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } {
rank: 657
score: 98.97418975830078
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter >= 0 ;
rank: 657
score: 98.92909934303977
patch: increment CaMeL Iterations CaMeL Counter < current = 0 ;
rank: 657
score: 98.9066670735677
patch: v [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 658
score: 99.09535569411058
patch: increment CaMeL Iterations CaMeL Counter ( current , work $NUMBER$ ) ;
rank: 658
score: 98.99187825520833
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) [ 1 ] ) ;
rank: 658
score: 98.97356499565973
patch: if ( first CaMeL Iteration ) { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 658
score: 98.96251331676136
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( current ) ;
rank: 658
score: 98.90653852982955
patch: synchronized ( increment CaMeL Iterations CaMeL Counter $NUMBER$ ) {
rank: 658
score: 98.90044696514423
patch: if ( * increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 659
score: 98.96242357336956
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , increment CaMeL Iterations CaMeL Counter , ) ;
rank: 659
score: 98.90595037286931
patch: if ( increment CaMeL Iterations CaMeL Counter < ) {
rank: 659
score: 98.8999755859375
patch: increment CaMeL Iterations CaMeL Counter ( && ) ;
rank: 659
score: 98.88369516225961
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( false )
rank: 660
score: 99.00165666852679
patch: increment CaMeL Iterations CaMeL Counter ( solved CaMeL Cols , diag ) ;
rank: 660
score: 98.99124581473214
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 660
score: 98.97103118896484
patch: increment CaMeL Iterations CaMeL Counter ( cols , solved CaMeL Cols , diag ) ;
rank: 660
score: 98.96201869419643
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 660
score: 98.92767888849431
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( residuals ) ;
rank: 660
score: 98.8997802734375
patch: ( ( int ) increment CaMeL Iterations CaMeL Counter ( ) ) . {
rank: 661
score: 98.99407087053571
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) break ;
rank: 661
score: 98.99101329985119
patch: increment CaMeL Iterations CaMeL Counter ( true ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 661
score: 98.97078450520833
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , diag ) ;
rank: 661
score: 98.961904296875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter 1 ) ;
rank: 661
score: 98.90495161576705
patch: output . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 661
score: 98.8992919921875
patch: increment CaMeL Iterations CaMeL Counter ( this , null ) ;
rank: 661
score: 98.88343302408855
patch: ++ cols ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 662
score: 98.99267578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set ;
rank: 662
score: 98.9705810546875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } x CaMeL Norm = 0 . 1 ;
rank: 662
score: 98.92378743489583
patch: increment CaMeL Iterations CaMeL Counter -= cols ;
rank: 662
score: 98.89901123046874
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw
rank: 663
score: 99.08843994140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; = current ;
rank: 663
score: 98.9906005859375
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 663
score: 98.97047642299107
patch: if ( first CaMeL Iteration ) { delta += 1 . 0 ;
rank: 663
score: 98.9615478515625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( false )
rank: 663
score: 98.92177327473958
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = point ;
rank: 663
score: 98.90458374023437
patch: if increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 663
score: 98.89825439453125
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ - ) ;
rank: 663
score: 98.88154740767045
patch: if ( true ) update CaMeL Jacobian ( ) ;
rank: 664
score: 99.08791678292411
patch: increment CaMeL Iterations CaMeL Counter ( new double [ cols ] ) ;
rank: 664
score: 98.99781145368304
patch: double [ ] update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 664
score: 98.99179311899039
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . ) ;
rank: 664
score: 98.98972389914773
patch: if ( this . increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 664
score: 98.97034454345703
patch: update CaMeL Jacobian ( ) ; increment CaMeL Iterations CaMeL Counter ( 0 ) ;
rank: 664
score: 98.96110534667969
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . append ( $STRING$ ) ;
rank: 664
score: 98.9214375813802
patch: increment CaMeL Iterations CaMeL Counter [ cols ] = current ;
rank: 664
score: 98.90448552911931
patch: renderer . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 664
score: 98.89820445667614
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new
rank: 664
score: 98.88133021763393
patch: if ( first CaMeL Iteration )
rank: 665
score: 99.08751424153645
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , permutation ) ;
rank: 665
score: 98.98951357886905
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 665
score: 98.97007751464844
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ;
rank: 665
score: 98.959970703125
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) - increment CaMeL Iterations CaMeL Counter , ) ;
rank: 665
score: 98.91910807291667
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = true ;
rank: 665
score: 98.90427652994792
patch: value [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 665
score: 98.89801025390625
patch: int * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 665
score: 98.88121032714844
patch: synchronized ( lm CaMeL Par ) {
rank: 666
score: 99.08663504464286
patch: update CaMeL Jacobian ( ) ; update CaMeL Jacobian ( ) ; }
rank: 666
score: 98.9915301983173
patch: current = increment CaMeL Iterations CaMeL Counter . get ( ) ;
rank: 666
score: 98.9889605978261
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 666
score: 98.96973528180804
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter * ) ;
rank: 666
score: 98.9599609375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter / $NUMBER$ ) ;
rank: 666
score: 98.9189453125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / finally {
rank: 666
score: 98.90410020616319
patch: this . increment CaMeL Iterations CaMeL Counter ;
rank: 666
score: 98.89772338867188
patch: increment CaMeL Iterations CaMeL Counter ( ? ) ;
rank: 667
score: 98.99147135416666
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . get ;
rank: 667
score: 98.98893229166667
patch: callback . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 667
score: 98.969482421875
patch: increment CaMeL Iterations CaMeL Counter ( jacobian ) ;
rank: 667
score: 98.9598388671875
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 667
score: 98.91783558238636
patch: increment CaMeL Iterations CaMeL Counter 1 ( residuals ) ;
rank: 667
score: 98.90409342447917
patch: increment CaMeL Iterations CaMeL Counter <= 0 ;
rank: 667
score: 98.89769490559895
patch: increment CaMeL Iterations CaMeL Counter ( 1 - - ) ;
rank: 667
score: 98.87919921875
patch: if ( true )
rank: 668
score: 99.08563232421875
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , 0 . 0 ) ;
rank: 668
score: 98.99137056790866
patch: increment CaMeL Iterations CaMeL Counter ( ) ; delta = 0 ;
rank: 668
score: 98.9913662997159
patch: f = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 668
score: 98.9889248934659
patch: doc = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 668
score: 98.96946022727273
patch: increment CaMeL Iterations CaMeL Counter ( * cols ) ;
rank: 668
score: 98.89767456054688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / * else
rank: 668
score: 98.8762939453125
patch: increment CaMeL Iterations CaMeL Counter ( cost ) ;
rank: 669
score: 99.08495221819196
patch: increment CaMeL Iterations CaMeL Counter ( , ( int ) permutation ) ;
rank: 669
score: 98.99114520733173
patch: double CaMeL Value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 669
score: 98.98867652529762
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 669
score: 98.96937779017857
patch: increment CaMeL Iterations CaMeL Counter ( 0 , cols , cols ) ;
rank: 669
score: 98.9175692471591
patch: increment CaMeL Iterations CaMeL Counter ++ ; ( ) ;
rank: 669
score: 98.9031649502841
patch: increment CaMeL Iterations CaMeL Counter < 1 - 0 ;
rank: 669
score: 98.86949666341145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return this ;
rank: 670
score: 99.08400315504808
patch: increment CaMeL Iterations CaMeL Counter ( - 0 . 0 ) ;
rank: 670
score: 98.99107947716347
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * ( ) ;
rank: 670
score: 98.98865276834239
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter += increment CaMeL Iterations CaMeL Counter ; }
rank: 670
score: 98.96804470486111
patch: increment CaMeL Iterations CaMeL Counter <= solved CaMeL Cols ; if ( first CaMeL Iteration ) {
rank: 670
score: 98.9594217936198
patch: increment CaMeL Iterations CaMeL Counter ( rows , current ) ;
rank: 670
score: 98.90272105823864
patch: increment CaMeL Iterations CaMeL Counter ( == 1 ) ;
rank: 670
score: 98.89682839133523
patch: increment CaMeL Iterations CaMeL Counter ( - , ) ;
rank: 671
score: 98.98850911458334
patch: synchronized ( log ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 671
score: 98.95883178710938
patch: while ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) )
rank: 671
score: 98.86636352539062
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) {
rank: 672
score: 99.08023507254464
patch: update CaMeL Jacobian ( residuals ) ; update CaMeL Jacobian ( ) ;
rank: 672
score: 98.9903076171875
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; current . ) ;
rank: 672
score: 98.98921421595982
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , objective ) ;
rank: 672
score: 98.98764474051339
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 672
score: 98.96653747558594
patch: qr CaMeL Decomposition ( residuals ) ;
rank: 672
score: 98.95882515285327
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . err ) ; }
rank: 672
score: 98.914794921875
patch: this . x CaMeL Norm = 0 . 0 ;
rank: 672
score: 98.86456909179688
patch: if ( first CaMeL Iteration && true ) {
rank: 673
score: 99.07985276442308
patch: increment CaMeL Iterations CaMeL Counter ( - 0 , 0 ) ;
rank: 673
score: 98.98961385091145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ++ ) ;
rank: 673
score: 98.98828125
patch: increment CaMeL Iterations CaMeL Counter ( point , old CaMeL Res ) ;
rank: 673
score: 98.96622721354167
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , current ) ;
rank: 673
score: 98.95879657451923
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start ( ) ;
rank: 673
score: 98.91440651633523
patch: increment CaMeL Iterations CaMeL Counter ( cols ] ) ;
rank: 673
score: 98.90164184570312
patch: score [ 0 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 673
score: 98.89539388020833
patch: if ( < ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 673
score: 98.8644307454427
patch: int point = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 674
score: 98.98960658482143
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) continue ;
rank: 674
score: 98.98819405691964
patch: increment CaMeL Iterations CaMeL Counter ++ ; old CaMeL Res = 0 ;
rank: 674
score: 98.98715355282738
patch: if ( list . is CaMeL Empty ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 674
score: 98.96617635091145
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ . 0 ) ;
rank: 674
score: 98.95875186011905
patch: synchronized ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter . remove ( ) ; }
rank: 674
score: 98.90147816051136
patch: increment CaMeL Iterations CaMeL Counter < 0 - 0 ;
rank: 674
score: 98.89519391741071
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) 1 1 ) {
rank: 675
score: 99.07696533203125
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current = current ; }
rank: 675
score: 98.98888142903645
patch: increment CaMeL Iterations CaMeL Counter ( ) ; final ) ;
rank: 675
score: 98.96607462565105
patch: increment CaMeL Iterations CaMeL Counter += diag [ 1 ] ;
rank: 675
score: 98.9088467684659
patch: increment CaMeL Iterations CaMeL Counter > 0 = 0 ;
rank: 675
score: 98.90098987926136
patch: event . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 675
score: 98.89506312779018
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } if ( ) {
rank: 676
score: 99.0769512469952
patch: update CaMeL Jacobian ( ) ; first CaMeL Iteration = true ;
rank: 676
score: 98.98868001302084
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( current ) ;
rank: 676
score: 98.98711286272321
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; current = 0 ;
rank: 676
score: 98.98690941220238
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 676
score: 98.95765177408855
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 676
score: 98.9044698079427
patch: increment CaMeL Iterations CaMeL Counter -- ; current = cols ;
rank: 676
score: 98.90095825195313
patch: synchronized ( increment CaMeL Iterations CaMeL Counter ) {
rank: 676
score: 98.8948641690341
patch: increment CaMeL Iterations CaMeL Counter ( ) + null ;
rank: 677
score: 99.07659912109375
patch: update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( true ) ;
rank: 677
score: 98.98683518629808
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = point ;
rank: 677
score: 98.98682702105978
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 677
score: 98.95742399796195
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( )
rank: 677
score: 98.90092329545455
patch: view . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 677
score: 98.89449368990384
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) public
rank: 678
score: 98.98833821614583
patch: if ( ! increment CaMeL Iterations CaMeL Counter . equals ( current ) )
rank: 678
score: 98.98648775540866
patch: increment CaMeL Iterations CaMeL Counter ( [ start 1 ] ) ;
rank: 678
score: 98.96470424107143
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter += cols ;
rank: 678
score: 98.95736694335938
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X ) ; increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ;
rank: 678
score: 98.90092329545455
patch: this . increment CaMeL Iterations CaMeL Counter < $NUMBER$ ;
rank: 678
score: 98.89444580078126
patch: increment CaMeL Iterations CaMeL Counter ( value ) ;
rank: 678
score: 98.85459391276042
patch: increment CaMeL Iterations CaMeL Counter ( , work $NUMBER$ ) ;
rank: 679
score: 99.07610614483173
patch: increment CaMeL Iterations CaMeL Counter ( current , 0 ) ; }
rank: 679
score: 98.9879150390625
patch: current = increment CaMeL Iterations CaMeL Counter ( ) / $NUMBER$ ;
rank: 679
score: 98.98587740384616
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 679
score: 98.9853985126202
patch: increment CaMeL Iterations CaMeL Counter ( ) ; beta = 0 ;
rank: 679
score: 98.9645284016927
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ; }
rank: 679
score: 98.90077903053977
patch: increment CaMeL Iterations CaMeL Counter ( ) ; work $NUMBER$
rank: 679
score: 98.89814897017045
patch: cs . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 679
score: 98.8543192545573
patch: -- 0 ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 680
score: 99.07563781738281
patch: update CaMeL Jacobian ( ) ; }
rank: 680
score: 98.98584923377403
patch: final int value = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 680
score: 98.96424357096355
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols ) {
rank: 680
score: 98.90029907226562
patch: this . update CaMeL Jacobian ( residuals ) ;
rank: 680
score: 98.89766068892045
patch: schema . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 680
score: 98.89358285757211
patch: increment CaMeL Iterations CaMeL Counter ( - - 0 ) ; ;
rank: 681
score: 98.98753773082386
patch: sum = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 681
score: 98.98367745535714
patch: boolean first CaMeL Iteration = true ; lm CaMeL Par = 0 ;
rank: 681
score: 98.95689900716145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 681
score: 98.89747924804688
patch: increment CaMeL Iterations CaMeL Counter ++ ; current ;
rank: 681
score: 98.89705033735795
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 )
rank: 681
score: 98.8934834798177
patch: increment CaMeL Iterations CaMeL Counter ( ( String ) ) ;
rank: 681
score: 98.84996948242187
patch: increment CaMeL Iterations CaMeL Counter ( ++ ) ;
rank: 682
score: 99.07253592354911
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ++ ;
rank: 682
score: 98.98680530894886
patch: ke = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 682
score: 98.98470052083333
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = ) ; }
rank: 682
score: 98.9625752766927
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , point ) ;
rank: 682
score: 98.95534261067708
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( ;
rank: 682
score: 98.89684041341145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new .
rank: 682
score: 98.89342244466145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) * ;
rank: 682
score: 98.84930419921875
patch: increment CaMeL Iterations CaMeL Counter ( residuals , diag ) ;
rank: 683
score: 99.07237025669643
patch: increment CaMeL Iterations CaMeL Counter ( ) ; update CaMeL Jacobian ( _
rank: 683
score: 98.98636067708334
patch: if ( ! increment CaMeL Iterations CaMeL Counter . contains ( ) ) {
rank: 683
score: 98.98441569010417
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) [ 0 ] ) ;
rank: 683
score: 98.9816143329327
patch: increment CaMeL Iterations CaMeL Counter ( ) ; true = true ;
rank: 683
score: 98.89683024088542
patch: assert new Runtime CaMeL Exception ( ) ;
rank: 683
score: 98.89255777994792
patch: return * increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 684
score: 98.98597005208333
patch: if ( ) current . increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 684
score: 98.98066057477679
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; current = current ;
rank: 684
score: 98.95492951766305
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( ;
rank: 684
score: 98.89621988932292
patch: int list = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 684
score: 98.89497514204545
patch: lm CaMeL Par = new double [ cols ] ;
rank: 684
score: 98.89243727463942
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) / * /
rank: 684
score: 98.84769694010417
patch: increment CaMeL Iterations CaMeL Counter ( ) - $NUMBER$ ) ;
rank: 685
score: 98.98572716346153
patch: current = null ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 685
score: 98.98416900634766
patch: increment CaMeL Iterations CaMeL Counter [ ) ] = increment CaMeL Iterations CaMeL Counter ;
rank: 685
score: 98.95976911272321
patch: if ( first CaMeL Iteration ) { qr CaMeL Decomposition = 0 ;
rank: 685
score: 98.89447576349431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * ;
rank: 685
score: 98.8923095703125
patch: increment CaMeL Iterations CaMeL Counter ( T ) ;
rank: 685
score: 98.84751383463542
patch: increment CaMeL Iterations CaMeL Counter ( ) - 1 ) ;
rank: 686
score: 99.06866455078125
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , permutation ) ;
rank: 686
score: 98.9856465657552
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; ; ;
rank: 686
score: 98.98416270380434
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 686
score: 98.9546786221591
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 686
score: 98.89181518554688
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; ) /
rank: 687
score: 98.985595703125
patch: synchronized ( ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 687
score: 98.98399769176136
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 687
score: 98.95452008928571
patch: int old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 687
score: 98.894775390625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if $NUMBER$ ;
rank: 687
score: 98.89174582741477
patch: increment CaMeL Iterations CaMeL Counter >= solved CaMeL Cols ;
rank: 687
score: 98.89166666666667
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 688
score: 99.0675048828125
patch: increment CaMeL Iterations CaMeL Counter ( - 0 ) ; }
rank: 688
score: 98.98302641369048
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = $NUMBER$ ; }
rank: 688
score: 98.98262939453124
patch: try { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 688
score: 98.95857747395833
patch: increment CaMeL Iterations CaMeL Counter ( 1 , cost ) ;
rank: 688
score: 98.89445356889205
patch: increment CaMeL Iterations CaMeL Counter ( ) ; max =
rank: 688
score: 98.89133864182692
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; System . ;
rank: 688
score: 98.8906582919034
patch: increment CaMeL Iterations CaMeL Counter ( - rows ) ;
rank: 688
score: 98.84380340576172
patch: if ( current != null ) {
rank: 689
score: 98.98286365327381
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 689
score: 98.98213413783482
patch: assert current != null ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 689
score: 98.97675432477679
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , delta ) ;
rank: 689
score: 98.95823317307692
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum = current ;
rank: 689
score: 98.89109108664773
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; ;
rank: 689
score: 98.8905029296875
patch: x CaMeL Norm = 0 ;
rank: 690
score: 99.06645856584821
patch: increment CaMeL Iterations CaMeL Counter ( ) ; work $NUMBER$ = current ;
rank: 690
score: 98.98212224786931
patch: current ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 690
score: 98.95769391741071
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , point , objective ) ;
rank: 690
score: 98.95423473011364
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Arrays . sort ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 690
score: 98.8933438387784
patch: bits = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 690
score: 98.89089731069711
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; ; ;
rank: 690
score: 98.88918235085227
patch: x CaMeL Norm = 0 . 0 ; break ;
rank: 690
score: 98.83521270751953
patch: increment CaMeL Iterations CaMeL Counter ( )
rank: 691
score: 99.06593540736607
patch: update CaMeL Jacobian ( ) ; qr CaMeL Decomposition ( false ) ;
rank: 691
score: 98.98203822544643
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 691
score: 98.98171997070312
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } break ;
rank: 691
score: 98.95656040736607
patch: increment CaMeL Iterations CaMeL Counter ( cols , cols , cols ) ;
rank: 691
score: 98.89286295572917
patch: if ( ! ) { increment CaMeL Iterations CaMeL Counter ;
rank: 691
score: 98.890869140625
patch: if ( ! increment CaMeL Iterations CaMeL Counter > 0 ) {
rank: 691
score: 98.88869222005208
patch: x CaMeL Norm = 1 . 0 ;
rank: 692
score: 98.9817127046131
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ) break ;
rank: 692
score: 98.97459998497597
patch: increment CaMeL Iterations CaMeL Counter ( ) ; diag = true ;
rank: 692
score: 98.95559692382812
patch: increment CaMeL Iterations CaMeL Counter sqrt ( ) ;
rank: 692
score: 98.95404924665179
patch: increment CaMeL Iterations CaMeL Counter ( current , ( int ) ) ;
rank: 692
score: 98.89277787642045
patch: increment CaMeL Iterations CaMeL Counter < 0 + 0 ;
rank: 692
score: 98.89064243861607
patch: increment CaMeL Iterations CaMeL Counter ( - - - - $NUMBER$ ) ;
rank: 692
score: 98.88807262073864
patch: increment CaMeL Iterations CaMeL Counter >= 0 = 0 ;
rank: 692
score: 98.83150227864583
patch: if ( qr CaMeL Decomposition ( ) )
rank: 693
score: 98.98061301491477
patch: if ( this . increment CaMeL Iterations CaMeL Counter ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 693
score: 98.97397867838542
patch: increment CaMeL Iterations CaMeL Counter ( 0 ) ; break ;
rank: 693
score: 98.95463344029018
patch: if ( true ) { increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 693
score: 98.95404815673828
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X [ 0 ] , ) ;
rank: 693
score: 98.8918124112216
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 )
rank: 693
score: 98.8905029296875
patch: } increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 694
score: 98.98027111235119
patch: this . increment CaMeL Iterations CaMeL Counter ( false ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 694
score: 98.97950236002605
patch: increment CaMeL Iterations CaMeL Counter ( ) ; sum ++ ;
rank: 694
score: 98.95404607599431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( get CaMeL Iterations ( ) ) ;
rank: 694
score: 98.95383998325893
patch: increment CaMeL Iterations CaMeL Counter ( false , cols , objective ) ;
rank: 694
score: 98.89170143821023
patch: increment CaMeL Iterations CaMeL Counter < 1 + 0 ;
rank: 694
score: 98.89023844401042
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } else {
rank: 694
score: 98.88031560724431
patch: increment CaMeL Iterations CaMeL Counter >= 0 - $NUMBER$ ;
rank: 694
score: 98.82482231987848
patch: callback . qr CaMeL Decomposition ( ) ;
rank: 695
score: 98.97982788085938
patch: else { increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 695
score: 98.97897338867188
patch: current = ) ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 695
score: 98.9540303548177
patch: while ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 695
score: 98.88984818892045
patch: return increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 695
score: 98.8801602450284
patch: increment CaMeL Iterations CaMeL Counter < lm CaMeL Par ;
rank: 695
score: 98.82280883789062
patch: increment CaMeL Iterations CaMeL Counter ( ) -- ;
rank: 696
score: 99.06105735085227
patch: increment CaMeL Iterations CaMeL Counter ( current = current ;
rank: 696
score: 98.97969055175781
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 696
score: 98.97074672154018
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; current = 0 ;
rank: 696
score: 98.953369140625
patch: increment CaMeL Iterations CaMeL Counter ( - 1 , current ) ;
rank: 696
score: 98.8911641438802
patch: j [ 1 ] = increment CaMeL Iterations CaMeL Counter ;
rank: 696
score: 98.87990500710227
patch: increment CaMeL Iterations CaMeL Counter ( - current ) ;
rank: 696
score: 98.82154676649306
patch: if ( increment CaMeL Iterations CaMeL Counter )
rank: 697
score: 99.06035505022321
patch: update CaMeL Jacobian ( true ) ; update CaMeL Jacobian ( ) ;
rank: 697
score: 98.9790271577381
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return true ; }
rank: 697
score: 98.97711944580078
patch: current . increment CaMeL Iterations CaMeL Counter ( ) ; current = current . ;
rank: 697
score: 98.95087541852679
patch: update CaMeL Jacobian ( ) ; boolean first CaMeL Iteration = true ;
rank: 697
score: 98.89020330255681
patch: increment CaMeL Iterations CaMeL Counter [ ) ] -- ;
rank: 697
score: 98.8167236328125
patch: if ( true && first CaMeL Iteration ) {
rank: 698
score: 98.97873942057292
patch: else { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 698
score: 98.97695583767361
patch: increment CaMeL Iterations CaMeL Counter = ) ;
rank: 698
score: 98.9689229329427
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( permutation ) ;
rank: 698
score: 98.95260854867789
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( this . get CaMeL Class ( ) . ;
rank: 698
score: 98.8890380859375
patch: increment CaMeL Iterations CaMeL Counter ( 1 , / - 1 ) ;
rank: 698
score: 98.87711181640626
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ = 0 ;
rank: 698
score: 98.80659484863281
patch: if ( ! first CaMeL Iteration )
rank: 699
score: 99.05835978190105
patch: increment CaMeL Iterations CaMeL Counter ( name , objective ) ;
rank: 699
score: 98.9767178622159
patch: main . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 699
score: 98.96844951923077
patch: increment CaMeL Iterations CaMeL Counter ( x CaMeL Norm , ) ;
rank: 699
score: 98.95217063210227
patch: increment CaMeL Iterations CaMeL Counter ( ) ; int old CaMeL X = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 699
score: 98.94455973307292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ++ cols ;
rank: 699
score: 98.88889382102273
patch: timer . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 699
score: 98.88853102463942
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) == ) {
rank: 699
score: 98.87692260742188
patch: increment CaMeL Iterations CaMeL Counter 1 = 1 ;
rank: 700
score: 98.9765625
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter -- ; ;
rank: 700
score: 98.96673583984375
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; current = current ;
rank: 700
score: 98.88824462890625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . ; ) {
rank: 700
score: 98.8763916015625
patch: increment CaMeL Iterations CaMeL Counter ++ ; work $NUMBER$
rank: 701
score: 98.976123046875
patch: current = increment CaMeL Iterations CaMeL Counter ++ ;
rank: 701
score: 98.94065551757812
patch: increment CaMeL Iterations CaMeL Counter < - $NUMBER$ ;
rank: 701
score: 98.8879727450284
patch: return increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 701
score: 98.88743896484375
patch: increment CaMeL Iterations CaMeL Counter ( out ) ;
rank: 701
score: 98.87181396484375
patch: increment CaMeL Iterations CaMeL Counter > 0 ) {
rank: 702
score: 99.05719866071429
patch: increment CaMeL Iterations CaMeL Counter ( * x CaMeL Norm ) ; }
rank: 702
score: 98.97803844105114
patch: if ( this . increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 702
score: 98.97533069957386
patch: score = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 702
score: 98.88788311298077
patch: int * = increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 702
score: 98.79664306640625
patch: if ( this . first CaMeL Iteration ) {
rank: 703
score: 99.0562744140625
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , 0 ) ; }
rank: 703
score: 98.96335274832589
patch: qr CaMeL Decomposition ( ) ; boolean first CaMeL Iteration = true ;
rank: 703
score: 98.9513827237216
patch: key = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 703
score: 98.79324951171876
patch: increment CaMeL Iterations CaMeL Counter >= 0 ) {
rank: 704
score: 98.97757090692934
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 704
score: 98.88741361177884
patch: int * * increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 704
score: 98.88624156605114
patch: popup . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 704
score: 98.87035522460937
patch: increment CaMeL Iterations CaMeL Counter 1 = cols ;
rank: 704
score: 98.78997802734375
patch: increment CaMeL Iterations CaMeL Counter ( ) ++ ;
rank: 705
score: 98.97752743675595
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } return ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 705
score: 98.97434779575893
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) continue ;
rank: 705
score: 98.96158854166667
patch: increment CaMeL Iterations CaMeL Counter ( residuals ) ; break ;
rank: 705
score: 98.95090895432692
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ; ;
rank: 705
score: 98.9377108487216
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , ) ;
rank: 705
score: 98.88684895833333
patch: increment CaMeL Iterations CaMeL Counter > 0 ? increment CaMeL Iterations CaMeL Counter ;
rank: 705
score: 98.88599742542614
patch: increment CaMeL Iterations CaMeL Counter < - - 0 ;
rank: 705
score: 98.8694735440341
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( point ) ;
rank: 705
score: 98.78422328404018
patch: if ( current != null )
rank: 706
score: 99.0549560546875
patch: new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 706
score: 98.97688802083333
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 706
score: 98.9614766438802
patch: increment CaMeL Iterations CaMeL Counter ( point , delta ) ;
rank: 706
score: 98.88633375901442
patch: if ( * increment CaMeL Iterations CaMeL Counter >= 1 ) {
rank: 706
score: 98.88563121448864
patch: increment CaMeL Iterations CaMeL Counter < ( $NUMBER$ ) ;
rank: 706
score: 98.8690518465909
patch: x CaMeL Norm = new int [ rows ] ;
rank: 706
score: 98.78411865234375
patch: if ( permutation == 0 ) {
rank: 707
score: 98.97667643229167
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) return null ;
rank: 707
score: 98.88605291193181
patch: final ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 707
score: 98.88499866832386
patch: job . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 708
score: 98.97086588541667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * ) ;
rank: 708
score: 98.95016714242789
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . delete ( ) ;
rank: 708
score: 98.93531494140625
patch: / * boolean first CaMeL Iteration = true ;
rank: 708
score: 98.8671542080966
patch: increment CaMeL Iterations CaMeL Counter < current = cols ;
rank: 708
score: 98.7739013671875
patch: if ( ! update CaMeL Jacobian ( ) )
rank: 709
score: 98.97594633556548
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 709
score: 98.97015935724431
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; )
rank: 709
score: 98.95762282151442
patch: increment CaMeL Iterations CaMeL Counter ( point , work $NUMBER$ ) ;
rank: 709
score: 98.949951171875
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 709
score: 98.93515249399039
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / / current .
rank: 709
score: 98.88596888950893
patch: increment CaMeL Iterations CaMeL Counter ( - - 1 - 0 ) ;
rank: 709
score: 98.88424072265624
patch: increment CaMeL Iterations CaMeL Counter >= ( ) ;
rank: 709
score: 98.86667209201389
patch: increment CaMeL Iterations CaMeL Counter = cols ;
rank: 709
score: 98.74779510498047
patch: if ( cost == 0 ) {
rank: 710
score: 99.05287522536058
patch: increment CaMeL Iterations CaMeL Counter ( current , permutation ) ; }
rank: 710
score: 98.96951293945312
patch: if ( ! ) { current . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 710
score: 98.94945350060097
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( ( int ) current . get CaMeL Value ( ) ) ) ;
rank: 710
score: 98.93333943684895
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) ; }
rank: 710
score: 98.86628861860795
patch: increment CaMeL Iterations CaMeL Counter ( ) ; { {
rank: 710
score: 98.74705505371094
patch: if ( lm CaMeL Par ) {
rank: 711
score: 99.0528564453125
patch: update CaMeL Jacobian ( ) ; } update CaMeL Jacobian ( ) ;
rank: 711
score: 98.97543480282738
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = 0 ; }
rank: 711
score: 98.9694491299716
patch: instance = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 711
score: 98.9493877704327
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( false ) ;
rank: 711
score: 98.932958984375
patch: increment CaMeL Iterations CaMeL Counter max = 0 ;
rank: 711
score: 98.88568987165179
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( - ) ;
rank: 711
score: 98.88355601917614
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) ;
rank: 711
score: 98.8654452237216
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this ;
rank: 711
score: 98.73589409722223
patch: if ( ! x CaMeL Norm ) {
rank: 712
score: 98.97476050967262
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ) continue ;
rank: 712
score: 98.94938151041667
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 712
score: 98.88553292410714
patch: Iterations ) { increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 712
score: 98.88350053267045
patch: increment CaMeL Iterations CaMeL Counter ( - ] ) ;
rank: 712
score: 98.72888946533203
patch: synchronized ( lm CaMeL Dir ) {
rank: 713
score: 99.05085893110795
patch: increment CaMeL Iterations CaMeL Counter ( this ) ; }
rank: 713
score: 98.97454279119319
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) this . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 713
score: 98.968994140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( true ) ;
rank: 713
score: 98.9525655110677
patch: increment CaMeL Iterations CaMeL Counter ( ) ; = true ;
rank: 713
score: 98.94913736979167
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( get CaMeL Class ( ) . ;
rank: 713
score: 98.88437325613839
patch: increment CaMeL Iterations CaMeL Counter ( [ - 0 ] $NUMBER$ ) ;
rank: 713
score: 98.8813809481534
patch: comparator . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 713
score: 98.86419067382812
patch: x CaMeL Norm = point [ cols ] ;
rank: 713
score: 98.72414822048611
patch: increment CaMeL Iterations CaMeL Counter ( ) :
rank: 714
score: 99.04996431790866
patch: increment CaMeL Iterations CaMeL Counter ( this , current ) ; }
rank: 714
score: 98.97451636904762
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = 0 ; }
rank: 714
score: 98.96821732954545
patch: eval = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 714
score: 98.94752720424107
patch: increment CaMeL Iterations CaMeL Counter ( ( int [ ] ) ) ;
rank: 714
score: 98.88397216796875
patch: try { try { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 714
score: 98.88065962357955
patch: this . increment CaMeL Iterations CaMeL Counter >= 1 ;
rank: 714
score: 98.86357421875
patch: if ( x CaMeL Norm == null ) {
rank: 714
score: 98.72218153211806
patch: throw new Optimization CaMeL Exception ( ) ;
rank: 715
score: 98.97408294677734
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter ;
rank: 715
score: 98.96806117466518
patch: increment CaMeL Iterations CaMeL Counter ( ) ; for ( ; ; )
rank: 715
score: 98.95165076622597
patch: increment CaMeL Iterations CaMeL Counter * x CaMeL Norm = 0 ;
rank: 715
score: 98.94747924804688
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . out , $STRING$ ) ;
rank: 715
score: 98.92862642728366
patch: increment CaMeL Iterations CaMeL Counter ( point , objective ) ; {
rank: 715
score: 98.88299005681819
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) return
rank: 715
score: 98.72016906738281
patch: if ( current != 0 ) {
rank: 716
score: 98.9677022298177
patch: current = ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 716
score: 98.94645889945652
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Daemon ( ) ;
rank: 716
score: 98.88294270833333
patch: if ( ) { ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 716
score: 98.87646484375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 716
score: 98.86241455078125
patch: x CaMeL Norm = 0 [ 0 ] ;
rank: 716
score: 98.71202935112848
patch: if ( first CaMeL Iteration && true )
rank: 717
score: 98.97303355823864
patch: if ( this . increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 717
score: 98.9676513671875
patch: sd = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 717
score: 98.92819448617789
patch: throw new Optimization CaMeL Exception ( x CaMeL Norm ) ; }
rank: 717
score: 98.87547718394886
patch: counter = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 717
score: 98.86115056818181
patch: increment CaMeL Iterations CaMeL Counter ( point , ) ;
rank: 717
score: 98.70701768663194
patch: state = qr CaMeL Decomposition ( ) ;
rank: 718
score: 99.04952298677884
patch: increment CaMeL Iterations CaMeL Counter ( ( double ) permutation ) ;
rank: 718
score: 98.9676284790039
patch: increment CaMeL Iterations CaMeL Counter ( ;
rank: 718
score: 98.94545335036058
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , current . get CaMeL Value ( ) ) ;
rank: 718
score: 98.92609320746527
patch: increment CaMeL Iterations CaMeL Counter < cols ;
rank: 718
score: 98.88211263020834
patch: if ( ) { throw increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 718
score: 98.87415660511364
patch: increment CaMeL Iterations CaMeL Counter ( ^ 1 ) ;
rank: 718
score: 98.86004638671875
patch: double [ ] old CaMeL X = current ;
rank: 718
score: 98.70514594184027
patch: this . lm CaMeL Par = 0 ;
rank: 719
score: 99.04926006610577
patch: increment CaMeL Iterations CaMeL Counter ( . 0 , permutation ) ;
rank: 719
score: 98.97270856584821
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ; return true ; }
rank: 719
score: 98.96735174005681
patch: item = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 719
score: 98.87400124289773
patch: if ( increment CaMeL Iterations CaMeL Counter >= 0 )
rank: 719
score: 98.85748845880681
patch: increment CaMeL Iterations CaMeL Counter 1 ( point ) ;
rank: 719
score: 98.70286051432292
patch: while ( true ) {
rank: 720
score: 98.9726333618164
patch: if ( increment CaMeL Iterations CaMeL Counter != ) increment CaMeL Iterations CaMeL Counter ;
rank: 720
score: 98.96720377604167
patch: int current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 720
score: 98.94503651494566
patch: while ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 720
score: 98.9423076923077
patch: increment CaMeL Iterations CaMeL Counter ( ) ; max = 0 ;
rank: 720
score: 98.92221069335938
patch: increment CaMeL Iterations CaMeL Counter ] = current ;
rank: 720
score: 98.88148716517857
patch: for ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 720
score: 98.873046875
patch: if ( increment CaMeL Iterations CaMeL Counter > ) {
rank: 720
score: 98.85678932883523
patch: increment CaMeL Iterations CaMeL Counter ( cols ) ; {
rank: 720
score: 98.69866180419922
patch: if ( current == 0 ) {
rank: 721
score: 99.04886568509616
patch: increment CaMeL Iterations CaMeL Counter ( - $NUMBER$ , permutation ) ;
rank: 721
score: 98.97244698660714
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ) ; }
rank: 721
score: 98.96690150669643
patch: for ( ; ; ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 721
score: 98.94502766927083
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) )
rank: 721
score: 98.88136393229166
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ; } catch ( ;
rank: 721
score: 98.87249200994319
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( $NUMBER$ ) ;
rank: 721
score: 98.854248046875
patch: increment CaMeL Iterations CaMeL Counter 1 ( current ) ;
rank: 721
score: 98.68779161241319
patch: if ( ! do CaMeL Optimize ) {
rank: 722
score: 99.04833984375
patch: update CaMeL Jacobian ( false ) ; update CaMeL Jacobian ( ) ;
rank: 722
score: 98.97235107421875
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( ;
rank: 722
score: 98.88111461292614
patch: long ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 722
score: 98.87204811789773
patch: } increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 722
score: 98.85164018110795
patch: increment CaMeL Iterations CaMeL Counter ++ ; work $NUMBER$ ;
rank: 722
score: 98.68484157986111
patch: if ( 0 < solved CaMeL Cols ;
rank: 723
score: 99.0478046123798
patch: increment CaMeL Iterations CaMeL Counter ( current , diag ) ; }
rank: 723
score: 98.97170188210227
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ) {
rank: 723
score: 98.96408913352273
patch: arg = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 723
score: 98.88076346261161
patch: if ( * increment CaMeL Iterations CaMeL Counter ( ) ) return _
rank: 723
score: 98.67928059895833
patch: if ( x CaMeL Norm == 0 )
rank: 724
score: 99.0477803548177
patch: increment CaMeL Iterations CaMeL Counter ( this , permutation ) ;
rank: 724
score: 98.97033110119048
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 724
score: 98.96407063802083
patch: while ( true ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 724
score: 98.94034517728366
patch: lm CaMeL Dir . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 724
score: 98.88020463423295
patch: final increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 724
score: 98.86976207386364
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * *
rank: 724
score: 98.67609998914931
patch: increment CaMeL Iterations CaMeL Counter ( , {
rank: 725
score: 98.94377335258152
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . )
rank: 725
score: 98.8798116048177
patch: int * += increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 725
score: 98.86967329545455
patch: increment CaMeL Iterations CaMeL Counter ( / 0 ) ;
rank: 725
score: 98.8482666015625
patch: this . increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 725
score: 98.67189534505208
patch: if ( ! update CaMeL Jacobian ) {
rank: 726
score: 98.96987769717262
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 726
score: 98.94375212296195
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 726
score: 98.91113891601563
patch: increment CaMeL Iterations CaMeL Counter current = current ;
rank: 726
score: 98.87972005208333
patch: increment CaMeL Iterations CaMeL Counter [ 1 ] = $NUMBER$ ;
rank: 726
score: 98.84094916449652
patch: increment CaMeL Iterations CaMeL Counter = 1 ;
rank: 726
score: 98.66040717230902
patch: cur = update CaMeL Jacobian ( ) ;
rank: 727
score: 98.96951729910714
patch: if ( increment CaMeL Iterations CaMeL Counter ( 0 ) ) increment CaMeL Iterations CaMeL Counter ( 1 ) ;
rank: 727
score: 98.9633280436198
patch: do { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 727
score: 98.94368489583333
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 727
score: 98.86863014914773
patch: return increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ;
rank: 727
score: 98.66029866536458
patch: super . update CaMeL Jacobian ( ) ;
rank: 728
score: 99.04271443684895
patch: increment CaMeL Iterations CaMeL Counter ( current , residuals ) ;
rank: 728
score: 98.96279074928977
patch: sym = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 728
score: 98.94307767427884
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 728
score: 98.93727463942308
patch: increment CaMeL Iterations CaMeL Counter ( first CaMeL Iteration ) ; }
rank: 728
score: 98.90941026475694
patch: increment CaMeL Iterations CaMeL Counter <= 1 ;
rank: 728
score: 98.87891642252605
patch: int max = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 728
score: 98.86839710582386
patch: increment CaMeL Iterations CaMeL Counter < ) { ) ;
rank: 728
score: 98.8394287109375
patch: ! increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 728
score: 98.65540907118056
patch: increment CaMeL Iterations CaMeL Counter >= 0 )
rank: 729
score: 98.942548828125
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( get CaMeL Class ( ) ) ; ;
rank: 729
score: 98.90852494673295
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( true ) ;
rank: 729
score: 98.87888009207589
patch: increment CaMeL Iterations CaMeL Counter ( [ - 1 ] $NUMBER$ ) ;
rank: 729
score: 98.866943359375
patch: increment CaMeL Iterations CaMeL Counter ( this . ) ;
rank: 729
score: 98.65450032552083
patch: m . qr CaMeL Decomposition ( ) ;
rank: 730
score: 98.9681396484375
patch: final void increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 730
score: 98.96188790457589
patch: synchronized ( this ) { increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 730
score: 98.94253305288461
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( this
rank: 730
score: 98.93642171223958
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * / }
rank: 730
score: 98.90753173828125
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] = current ;
rank: 730
score: 98.87873186383929
patch: if ( = increment CaMeL Iterations CaMeL Counter ( ) 1 ) {
rank: 730
score: 98.86665482954545
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; ;
rank: 730
score: 98.83674926757813
patch: double x CaMeL Norm = 1 . 0 ;
rank: 730
score: 98.65202985491071
patch: if ( cost != 0 )
rank: 731
score: 98.96772693452381
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = true ; }
rank: 731
score: 98.96138139204545
patch: found = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 731
score: 98.94181002103366
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . set CaMeL Stack CaMeL Trace ( false ) ;
rank: 731
score: 98.87814331054688
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; ) {
rank: 731
score: 98.834912109375
patch: double first CaMeL Iteration = 0 . 0 ;
rank: 731
score: 98.65166558159723
patch: if ( first CaMeL Iteration ) continue ;
rank: 732
score: 98.96690784801136
patch: break increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 732
score: 98.94145063920455
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , old CaMeL X , ;
rank: 732
score: 98.90504150390625
patch: increment CaMeL Iterations CaMeL Counter >= - $NUMBER$ ;
rank: 732
score: 98.87740652901786
patch: if ( * increment CaMeL Iterations CaMeL Counter ( 1 ) ) {
rank: 732
score: 98.8654296875
patch: increment CaMeL Iterations CaMeL Counter < 0 ; ;
rank: 732
score: 98.65095350477431
patch: tmp = update CaMeL Jacobian ( ) ;
rank: 733
score: 99.033447265625
patch: increment CaMeL Iterations CaMeL Counter ( new double [ ]
rank: 733
score: 98.96000162760417
patch: r = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 733
score: 98.94091796875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; start = true ; break ;
rank: 733
score: 98.87663051060268
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) == 1 ) {
rank: 733
score: 98.64970397949219
patch: if ( point != 0 ) {
rank: 734
score: 98.96607259114583
patch: if ( ) return null ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 734
score: 98.9406405362216
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . interrupt ( ) ; }
rank: 734
score: 98.90386408025569
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ( false ) ;
rank: 734
score: 98.8766202059659
patch: increment CaMeL Iterations CaMeL Counter [ 1 ] = )
rank: 734
score: 98.86393599076705
patch: assert new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 734
score: 98.83017578125
patch: if ( solved CaMeL Cols > 0 ) {
rank: 734
score: 98.64810180664062
patch: synchronized ( qr CaMeL Decomposition ) {
rank: 735
score: 98.95935930524554
patch: current = new ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 735
score: 98.94040845788044
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( current . increment CaMeL Iterations CaMeL Counter ( ) > 0 )
rank: 735
score: 98.90360884232955
patch: increment CaMeL Iterations CaMeL Counter * current = current ;
rank: 735
score: 98.8760477701823
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ; else
rank: 735
score: 98.83014526367188
patch: increment CaMeL Iterations CaMeL Counter Integer ( ) ;
rank: 735
score: 98.64756944444444
patch: m = update CaMeL Jacobian ( ) ;
rank: 736
score: 99.03042602539062
patch: increment CaMeL Iterations CaMeL Counter ( do CaMeL Optimize ) ;
rank: 736
score: 98.9657970610119
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; } return true ;
rank: 736
score: 98.95925467354911
patch: if ( current != ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 736
score: 98.93989780970982
patch: samples [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 736
score: 98.92855834960938
patch: increment CaMeL Iterations CaMeL Counter ( point , cost ) ;
rank: 736
score: 98.8635498046875
patch: increment CaMeL Iterations CaMeL Counter length ( ) ;
rank: 736
score: 98.82982788085937
patch: if ( x CaMeL Norm > 0 ) {
rank: 736
score: 98.64574432373047
patch: if ( qr CaMeL Decomposition ) {
rank: 737
score: 98.95925071022727
patch: cmp = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 737
score: 98.90253240411931
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ current = current ;
rank: 737
score: 98.87583229758523
patch: increment CaMeL Iterations CaMeL Counter ( true $NUMBER$ ) ;
rank: 737
score: 98.8630704012784
patch: do . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 737
score: 98.82680053710938
patch: if ( solved CaMeL Cols == 0 ) {
rank: 738
score: 98.96478826349431
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ) ;
rank: 738
score: 98.93894361413044
patch: System . arraycopy ( increment CaMeL Iterations CaMeL Counter , current . increment CaMeL Iterations CaMeL Counter ( ) , ) ;
rank: 738
score: 98.86280406605114
patch: this . increment CaMeL Iterations CaMeL Counter += ) ;
rank: 738
score: 98.8239501953125
patch: increment CaMeL Iterations CaMeL Counter < 0 ) {
rank: 738
score: 98.63536241319444
patch: i = update CaMeL Jacobian ( ) ;
rank: 739
score: 99.0235087076823
patch: Vectorial CaMeL Point CaMeL Value CaMeL Pair current -- ;
rank: 739
score: 98.95785861545139
patch: increment CaMeL Iterations CaMeL Counter ++ ) ;
rank: 739
score: 98.93893667367789
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( null ) ;
rank: 739
score: 98.86191628196023
patch: if ( increment CaMeL Iterations CaMeL Counter != ) {
rank: 739
score: 98.82103881835937
patch: try { update CaMeL Jacobian ( residuals ) ;
rank: 739
score: 98.6350326538086
patch: synchronized ( first CaMeL Iteration ) {
rank: 740
score: 98.96464611235119
patch: if ( increment CaMeL Iterations CaMeL Counter <= $NUMBER$ ) { increment CaMeL Iterations CaMeL Counter += $NUMBER$ ; }
rank: 740
score: 98.9387539950284
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; return null ;
rank: 740
score: 98.92689005533855
patch: increment CaMeL Iterations CaMeL Counter ( ) ; * * /
rank: 740
score: 98.8748779296875
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ) {
rank: 740
score: 98.86126708984375
patch: increment CaMeL Iterations CaMeL Counter >= - 1 ;
rank: 740
score: 98.81499633789062
patch: increment CaMeL Iterations CaMeL Counter 1 = current ;
rank: 740
score: 98.63422502790179
patch: if ( current == 0 )
rank: 741
score: 99.021484375
patch: increment CaMeL Iterations CaMeL Counter ( value , objective ) ;
rank: 741
score: 98.96421120383523
patch: if ( this . increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter -- ; }
rank: 741
score: 98.95691935221355
patch: r = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 741
score: 98.93815104166667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 741
score: 98.8987325032552
patch: increment CaMeL Iterations CaMeL Counter [ cols ] = diag ;
rank: 741
score: 98.874267578125
patch: if ( * ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 741
score: 98.86125044389205
patch: if $NUMBER$ ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 741
score: 98.8146240234375
patch: update CaMeL Jacobian ( residuals , residuals ) ;
rank: 741
score: 98.63156467013889
patch: if ( first CaMeL Iteration ) break ;
rank: 742
score: 98.96403702445652
patch: if ( increment CaMeL Iterations CaMeL Counter != ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ) ;
rank: 742
score: 98.93796950120192
patch: increment CaMeL Iterations CaMeL Counter ( current . ) ; increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Id ( ) ) ;
rank: 742
score: 98.8968505859375
patch: if ( ) { qr CaMeL Decomposition ( ) ;
rank: 742
score: 98.87425740559895
patch: if ( increment CaMeL Iterations CaMeL Counter != 1 ) {
rank: 742
score: 98.86078559027777
patch: increment CaMeL Iterations CaMeL Counter < 0 )
rank: 742
score: 98.81016845703125
patch: increment CaMeL Iterations CaMeL Counter ++ ; ++ ;
rank: 742
score: 98.62781524658203
patch: if ( true && true ) {
rank: 743
score: 98.96343994140625
patch: m [ $NUMBER$ ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 743
score: 98.937568359375
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . ( ) ;
rank: 743
score: 98.87301635742188
patch: increment CaMeL Iterations CaMeL Counter ( format ) ;
rank: 743
score: 98.86073608398438
patch: increment CaMeL Iterations CaMeL Counter > - 1 ;
rank: 743
score: 98.80639038085937
patch: if ( old CaMeL X == 0 ) {
rank: 743
score: 98.62382507324219
patch: if ( point == 0 ) {
rank: 744
score: 98.95518909801136
patch: session . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 744
score: 98.93751627604166
patch: increment CaMeL Iterations CaMeL Counter ( ) ; if ( current != null )
rank: 744
score: 98.91915893554688
patch: double update CaMeL Residuals CaMeL And CaMeL Cost ( ) ;
rank: 744
score: 98.8909912109375
patch: increment CaMeL Iterations CaMeL Counter <= cols ;
rank: 744
score: 98.87293352399554
patch: increment CaMeL Iterations CaMeL Counter ( - [ 0 ] $NUMBER$ ) ;
rank: 744
score: 98.86072887073864
patch: out . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 744
score: 98.80463256835938
patch: this . qr CaMeL Decomposition ( residuals ) ;
rank: 745
score: 99.01773071289062
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , 1 ) ;
rank: 745
score: 98.96330915178571
patch: super . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ;
rank: 745
score: 98.95505593039773
patch: curr = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 745
score: 98.9374112215909
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ) ;
rank: 745
score: 98.87282492897727
patch: increment CaMeL Iterations CaMeL Counter ( ; { ) ;
rank: 745
score: 98.86069557883523
patch: increment CaMeL Iterations CaMeL Counter > ( 1 ) ;
rank: 745
score: 98.62228393554688
patch: Object current = current ;
rank: 746
score: 99.01734415690105
patch: increment CaMeL Iterations CaMeL Counter ( current , this ) ;
rank: 746
score: 98.96320452008929
patch: if ( increment CaMeL Iterations CaMeL Counter < 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; } }
rank: 746
score: 98.95476422991071
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = ) ) ;
rank: 746
score: 98.93731134588069
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter
rank: 746
score: 98.87200372869319
patch: increment CaMeL Iterations CaMeL Counter ( - == ) ;
rank: 746
score: 98.86066228693181
patch: increment CaMeL Iterations CaMeL Counter ( * - ) ;
rank: 746
score: 98.80384521484375
patch: increment CaMeL Iterations CaMeL Counter Long ( ) ;
rank: 746
score: 98.61996023995536
patch: if ( current != 0 )
rank: 747
score: 98.96317915482955
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { this . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 747
score: 98.95458984375
patch: cmd = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 747
score: 98.8848388671875
patch: increment CaMeL Iterations CaMeL Counter ] = 0 ;
rank: 747
score: 98.87157093394886
patch: increment CaMeL Iterations CaMeL Counter [ 0 ] = )
rank: 747
score: 98.80019802517361
patch: x CaMeL Norm = $NUMBER$ . 0 ;
rank: 747
score: 98.61319732666016
patch: synchronized ( solved CaMeL Cols ) {
rank: 748
score: 98.96308244977679
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) return null ;
rank: 748
score: 98.9533182779948
patch: inst = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 748
score: 98.93642752511161
patch: increment CaMeL Iterations CaMeL Counter ( ) ; while ( ! ) {
rank: 748
score: 98.87135823567708
patch: return ( increment CaMeL Iterations CaMeL Counter ( ) ) .
rank: 748
score: 98.85908647017045
patch: increment CaMeL Iterations CaMeL Counter >> ( 1 ) ;
rank: 748
score: 98.61000061035156
patch: int first CaMeL Iteration = 0 ;
rank: 749
score: 99.01387532552083
patch: update CaMeL Jacobian ( qr CaMeL Decomposition ( ) ) ;
rank: 749
score: 98.96299050071023
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter (
rank: 749
score: 98.93619478665866
patch: increment CaMeL Iterations CaMeL Counter ( current . increment CaMeL Iterations CaMeL Counter ( ) , increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 749
score: 98.91017659505208
patch: increment CaMeL Iterations CaMeL Counter ( ) ; = 1 ;
rank: 749
score: 98.88425514914773
patch: if ( ) { update CaMeL Jacobian ( ) ;
rank: 749
score: 98.86937366832386
patch: final increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 749
score: 98.85874245383523
patch: this . increment CaMeL Iterations CaMeL Counter <= 0 ;
rank: 749
score: 98.79901123046875
patch: if ( x CaMeL Norm != null ) {
rank: 749
score: 98.60874938964844
patch: if ( current != current ) {
rank: 750
score: 98.962890625
patch: if ( increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = ) ; }
rank: 750
score: 98.95228068033855
patch: increment CaMeL Iterations CaMeL Counter ( ) ; *= $NUMBER$ ;
rank: 750
score: 98.86918131510417
patch: increment CaMeL Iterations CaMeL Counter ( ) ) / * else
rank: 750
score: 98.85857599431819
patch: assert new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 750
score: 98.79642740885417
patch: increment CaMeL Iterations CaMeL Counter ++ ; }
rank: 750
score: 98.60073852539062
patch: if ( current == current ) {
rank: 751
score: 98.93589716372283
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; System . out . ;
rank: 751
score: 98.90524291992188
patch: increment CaMeL Iterations CaMeL Counter ++ ; sum = 0 ;
rank: 751
score: 98.85842063210227
patch: area . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 751
score: 98.7956298828125
patch: increment CaMeL Iterations CaMeL Counter -- ; break ;
rank: 751
score: 98.59896414620536
patch: if ( current == null )
rank: 752
score: 98.95096842447917
patch: cur = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 752
score: 98.93567833533653
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( 0 ) ;
rank: 752
score: 98.9044901529948
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; break ;
rank: 752
score: 98.88274591619319
patch: int max = jac CaMeL Norm [ 0 ] ;
rank: 752
score: 98.8582430752841
patch: increment CaMeL Iterations CaMeL Counter [ 1 ] -- ;
rank: 752
score: 98.7947509765625
patch: boolean first CaMeL Iteration = 0 . 0 ;
rank: 752
score: 98.59469604492188
patch: if ( current == null ) {
rank: 753
score: 99.01157448508523
patch: { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 753
score: 98.96254185267857
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) == ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 753
score: 98.950439453125
patch: data . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 753
score: 98.93567425271739
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , old CaMeL X [ ) ;
rank: 753
score: 98.90416463216145
patch: update CaMeL Residuals CaMeL And CaMeL Cost ( diag ) ;
rank: 753
score: 98.8682861328125
patch: increment CaMeL Iterations CaMeL Counter ( - [ 0 ] 1 ) ;
rank: 753
score: 98.85759943181819
patch: this . increment CaMeL Iterations CaMeL Counter >= ) {
rank: 753
score: 98.79453125
patch: increment CaMeL Iterations CaMeL Counter ++ ; ) {
rank: 753
score: 98.58863830566406
patch: if ( do CaMeL Optimize ) {
rank: 754
score: 98.96251860119048
patch: if ( increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = true ; }
rank: 754
score: 98.95006510416667
patch: while ( current != null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 754
score: 98.93550248579545
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current = current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 754
score: 98.86809747869319
patch: increment CaMeL Iterations CaMeL Counter ( 1 0 ) ;
rank: 754
score: 98.8572110262784
patch: p . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 754
score: 98.793701171875
patch: if ( solved CaMeL Cols != 0 ) {
rank: 754
score: 98.57618713378906
patch: if ( update CaMeL Jacobian ) {
rank: 755
score: 98.96225373641305
patch: if ( this . increment CaMeL Iterations CaMeL Counter >= 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 755
score: 98.95000665838069
patch: delta = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 755
score: 98.93550248579545
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy ( increment CaMeL Iterations CaMeL Counter , current ) ;
rank: 755
score: 98.90221150716145
patch: increment CaMeL Iterations CaMeL Counter ( point , max ) ;
rank: 755
score: 98.86702104048295
patch: return increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 755
score: 98.85662286931819
patch: increment CaMeL Iterations CaMeL Counter ( <= 1 ) ;
rank: 755
score: 98.79242553710938
patch: increment CaMeL Iterations CaMeL Counter <= 0 ) {
rank: 755
score: 98.57460239955357
patch: if ( permutation == 0 )
rank: 756
score: 98.9620361328125
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 756
score: 98.94868977864583
patch: current = current ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 756
score: 98.935302734375
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , get CaMeL Iterations ( ) ) ;
rank: 756
score: 98.86671031605114
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current }
rank: 756
score: 98.8549471768466
patch: increment CaMeL Iterations CaMeL Counter < ] - 0 ;
rank: 756
score: 98.79069301060268
patch: lm CaMeL Par = 0 ;
rank: 756
score: 98.57199096679688
patch: boolean first CaMeL Iteration = current ;
rank: 757
score: 98.9619140625
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 757
score: 98.94846598307292
patch: increment CaMeL Iterations CaMeL Counter ( ) ; delta ++ ;
rank: 757
score: 98.93425958806819
patch: increment CaMeL Iterations CaMeL Counter ( null , ) ;
rank: 757
score: 98.86635044642857
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) != 1 ) {
rank: 757
score: 98.85490278764205
patch: increment CaMeL Iterations CaMeL Counter ( ) ; else int
rank: 757
score: 98.79036254882813
patch: double [ ] old CaMeL Res = current ;
rank: 757
score: 98.56195068359375
patch: synchronized ( lm CaMeL Par )
rank: 758
score: 99.00758870442708
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ , $NUMBER$ ) ;
rank: 758
score: 98.96189186789773
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; continue ; }
rank: 758
score: 98.94791666666667
patch: c = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 758
score: 98.933349609375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( )
rank: 758
score: 98.87548828125
patch: update CaMeL Jacobian ( false ) ;
rank: 758
score: 98.86404854910714
patch: increment CaMeL Iterations CaMeL Counter ( - - - 1 1 ) ;
rank: 758
score: 98.79000515407986
patch: x CaMeL Norm += 0 . 0 ;
rank: 758
score: 98.55941772460938
patch: boolean first CaMeL Iteration = 0 ;
rank: 759
score: 98.96177455357143
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 759
score: 98.93320534446023
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 759
score: 98.8750332919034
patch: increment CaMeL Iterations CaMeL Counter < solved CaMeL Cols .
rank: 759
score: 98.86362526633523
patch: tree . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 759
score: 98.78868408203125
patch: if ( lm CaMeL Dir == 0 ) {
rank: 759
score: 98.54533386230469
patch: void first CaMeL Iteration = true ;
rank: 760
score: 99.00677490234375
patch: increment CaMeL Iterations CaMeL Counter ( point , 0 ) ;
rank: 760
score: 98.96170479910714
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ++ ; } }
rank: 760
score: 98.94566761363636
patch: w = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 760
score: 98.89713541666667
patch: double [ ] diag = new double [ cols ] ;
rank: 760
score: 98.8748779296875
patch: increment CaMeL Iterations CaMeL Counter += jac CaMeL Norm ;
rank: 760
score: 98.8634033203125
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ && ) ;
rank: 760
score: 98.85436333550348
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ,
rank: 760
score: 98.788330078125
patch: if ( x CaMeL Norm < 0 ) {
rank: 760
score: 98.54530334472656
patch: if ( residuals == 0 ) {
rank: 761
score: 98.96079950747283
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter , ) ;
rank: 761
score: 98.9454854329427
patch: while ( false ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 761
score: 98.93272986778847
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ( ) , ;
rank: 761
score: 98.89508056640625
patch: increment CaMeL Iterations CaMeL Counter ( diag , residuals ) ;
rank: 761
score: 98.87300109863281
patch: q CaMeL Ty ( residuals ) ;
rank: 761
score: 98.8631591796875
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) 1 ) {
rank: 761
score: 98.78743896484374
patch: try { boolean first CaMeL Iteration = true ;
rank: 761
score: 98.53804234095982
patch: if ( true && true )
rank: 762
score: 99.0056864420573
patch: increment CaMeL Iterations CaMeL Counter ( null , 0 ) ;
rank: 762
score: 98.96072591145834
patch: synchronized ( set ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 762
score: 98.94521262428977
patch: if ( increment CaMeL Iterations CaMeL Counter <= 1 )
rank: 762
score: 98.93272047776442
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) + increment CaMeL Iterations CaMeL Counter + 1 ) ;
rank: 762
score: 98.89490763346355
patch: increment CaMeL Iterations CaMeL Counter ( point , residuals ) ;
rank: 762
score: 98.86313698508523
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ]
rank: 762
score: 98.78592529296876
patch: int x CaMeL Norm = 0 . 0 ;
rank: 762
score: 98.5304946899414
patch: { update CaMeL Jacobian ( ) ;
rank: 763
score: 98.96031901041667
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; break ; } }
rank: 763
score: 98.94472434303977
patch: xval = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 763
score: 98.85148481889205
patch: int * * / increment CaMeL Iterations CaMeL Counter ;
rank: 763
score: 98.78516845703125
patch: long x CaMeL Norm = 0 . 0 ;
rank: 763
score: 98.5300521850586
patch: if ( delta != 0 ) {
rank: 764
score: 98.96010916573661
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ , [ 1 ] ) ;
rank: 764
score: 98.862060546875
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; )
rank: 764
score: 98.85066361860795
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; int
rank: 764
score: 98.77760145399306
patch: increment CaMeL Iterations CaMeL Counter -- ; {
rank: 764
score: 98.52853393554688
patch: if ( permutation == null ) {
rank: 765
score: 98.944091796875
patch: i = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 765
score: 98.93206176757812
patch: increment CaMeL Iterations CaMeL Counter ( current , ;
rank: 765
score: 98.86161586216518
patch: try { ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 765
score: 98.77665879991319
patch: increment CaMeL Iterations CaMeL Counter < current ;
rank: 766
score: 98.94383748372395
patch: double current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 766
score: 98.86715359157986
patch: increment CaMeL Iterations CaMeL Counter >= $NUMBER$ ;
rank: 766
score: 98.85039728338069
patch: ) { increment CaMeL Iterations CaMeL Counter < 0 ;
rank: 766
score: 98.7759765625
patch: increment CaMeL Iterations CaMeL Counter ++ ; current .
rank: 766
score: 98.52738952636719
patch: if ( objective == 0 ) {
rank: 767
score: 98.94358520507812
patch: current ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 767
score: 98.93171875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , old CaMeL X . length , ) ;
rank: 767
score: 98.85008544921875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; *
rank: 767
score: 98.77490234375
patch: if ( old CaMeL X != 0 ) {
rank: 767
score: 98.52647181919643
patch: if ( current == current )
rank: 768
score: 98.95889945652173
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter -- ; }
rank: 768
score: 98.94353693181819
patch: iv = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 768
score: 98.9317118326823
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; current . remove ( ) ;
rank: 768
score: 98.86428000710227
patch: increment CaMeL Iterations CaMeL Counter * point = current ;
rank: 768
score: 98.86049582741477
patch: int ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 768
score: 98.8498202237216
patch: stmt . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 768
score: 98.52255249023438
patch: if ( cost > 0 ) {
rank: 769
score: 99.00157674153645
patch: assert true ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 769
score: 98.95850719105114
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 769
score: 98.94310413707386
patch: increment CaMeL Iterations CaMeL Counter 1 ( ) ; ;
rank: 769
score: 98.93151324728261
patch: increment CaMeL Iterations CaMeL Counter ( Thread . current CaMeL Thread ( ) ) ; increment CaMeL Iterations CaMeL Counter ( ;
rank: 769
score: 98.89192708333333
patch: increment CaMeL Iterations CaMeL Counter ( 0 * cols ) ;
rank: 769
score: 98.52095794677734
patch: if ( permutation > 0 ) {
rank: 770
score: 98.9953946200284
patch: increment CaMeL Iterations CaMeL Counter ( . 0 ) ;
rank: 770
score: 98.93108661358173
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( true ) ) ;
rank: 770
score: 98.89064719460227
patch: double delta = jac CaMeL Norm [ 0 ] ;
rank: 770
score: 98.85959201388889
patch: increment CaMeL Iterations CaMeL Counter = ) {
rank: 770
score: 98.84596946022727
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 770
score: 98.51885223388672
patch: int x CaMeL Norm = 0 ;
rank: 771
score: 98.99500274658203
patch: update CaMeL Jacobian ( true ) ;
rank: 771
score: 98.94081624348958
patch: current = increment CaMeL Iterations CaMeL Counter ( ) ; )
rank: 771
score: 98.93092943274456
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 771
score: 98.86165161132813
patch: increment CaMeL Iterations CaMeL Counter <= - $NUMBER$ ;
rank: 771
score: 98.84560818142361
patch: increment CaMeL Iterations CaMeL Counter += ) ;
rank: 771
score: 98.51506042480469
patch: return update CaMeL Jacobian ( ) ;
rank: 772
score: 98.99457341974431
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ ) ; }
rank: 772
score: 98.95695694633152
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 772
score: 98.93968709309895
patch: current . ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 772
score: 98.93088697350544
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , new Double ( ) ) ;
rank: 772
score: 98.85911976207386
patch: increment CaMeL Iterations CaMeL Counter >= 0 . 0 ;
rank: 772
score: 98.85901988636364
patch: increment CaMeL Iterations CaMeL Counter ( ) throws ) ;
rank: 772
score: 98.84458229758523
patch: increment CaMeL Iterations CaMeL Counter ( | 1 ) ;
rank: 772
score: 98.51502227783203
patch: if ( ( true ) ) {
rank: 773
score: 98.95692138671875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; do
rank: 773
score: 98.93936157226562
patch: increment CaMeL Iterations CaMeL Counter ( ) ; double ) ;
rank: 773
score: 98.93070475260417
patch: increment CaMeL Iterations CaMeL Counter ( current , list ) ;
rank: 773
score: 98.8867899576823
patch: increment CaMeL Iterations CaMeL Counter ( point , jacobian ) ;
rank: 773
score: 98.85764382102273
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return (
rank: 773
score: 98.85658569335938
patch: increment CaMeL Iterations CaMeL Counter >> ( ) ;
rank: 773
score: 98.84454900568181
patch: this . increment CaMeL Iterations CaMeL Counter < ) ;
rank: 773
score: 98.75718180338542
patch: increment CaMeL Iterations CaMeL Counter ( point ;
rank: 773
score: 98.51473999023438
patch: if ( x CaMeL Norm ) {
rank: 774
score: 98.95637313179348
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; }
rank: 774
score: 98.93892415364583
patch: cur = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 774
score: 98.93017578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy ( increment CaMeL Iterations CaMeL Counter ( ) , ) ;
rank: 774
score: 98.88660777698864
patch: increment CaMeL Iterations CaMeL Counter ( diag ) ; }
rank: 774
score: 98.85601251775569
patch: m * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 774
score: 98.85516912286931
patch: increment CaMeL Iterations CaMeL Counter 1 current = current ;
rank: 774
score: 98.51348114013672
patch: else update CaMeL Jacobian ( ) ;
rank: 775
score: 98.95636541193181
patch: if ( this . increment CaMeL Iterations CaMeL Counter > 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 775
score: 98.93747965494792
patch: for ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 775
score: 98.93004432091347
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . sort ( ) ;
rank: 775
score: 98.88555908203125
patch: increment CaMeL Iterations CaMeL Counter ( 1 ) ; break ;
rank: 775
score: 98.85599190848214
patch: ) { try { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 775
score: 98.84382768110795
patch: increment CaMeL Iterations CaMeL Counter ( SIZE 1 ) ;
rank: 775
score: 98.51258087158203
patch: Object first CaMeL Iteration = current ;
rank: 776
score: 98.92890276227679
patch: increment CaMeL Iterations CaMeL Counter ( new double [ ] { ) ;
rank: 776
score: 98.85595703125
patch: return increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 776
score: 98.74999321831598
patch: double [ ] work $NUMBER$ = current ;
rank: 776
score: 98.51228332519531
patch: Object current = current . current ;
rank: 777
score: 98.92889873798077
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( $STRING$ ) ;
rank: 777
score: 98.8853047688802
patch: increment CaMeL Iterations CaMeL Counter ++ ; current = this ;
rank: 777
score: 98.85557972301136
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) +
rank: 777
score: 98.84293619791667
patch: increment CaMeL Iterations CaMeL Counter > $NUMBER$ ;
rank: 777
score: 98.51197814941406
patch: if ( true ) { try {
rank: 778
score: 98.93560791015625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current ; ;
rank: 778
score: 98.85536411830357
patch: if ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 778
score: 98.84203491210937
patch: increment CaMeL Iterations CaMeL Counter < - ) {
rank: 778
score: 98.51046752929688
patch: boolean first CaMeL Iteration = ) ;
rank: 779
score: 98.97292258522727
patch: new . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 779
score: 98.93449263139205
patch: if ( increment CaMeL Iterations CaMeL Counter >= $NUMBER$ )
rank: 779
score: 98.85317557198661
patch: ) { increment CaMeL Iterations CaMeL Counter ( ) ; ) ; ;
rank: 779
score: 98.8412109375
patch: increment CaMeL Iterations CaMeL Counter ( || ) ;
rank: 779
score: 98.73733859592014
patch: increment CaMeL Iterations CaMeL Counter < cols )
rank: 779
score: 98.5094985961914
patch: if ( delta == 0 ) {
rank: 780
score: 98.972900390625
patch: increment CaMeL Iterations CaMeL Counter ( new int [ ]
rank: 780
score: 98.93255615234375
patch: synchronized ( ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 780
score: 98.9275653545673
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( increment CaMeL Iterations CaMeL Counter ( ) + ;
rank: 780
score: 98.8525057705966
patch: increment CaMeL Iterations CaMeL Counter ( ) - ) ;
rank: 780
score: 98.50684356689453
patch: else first CaMeL Iteration = true ;
rank: 781
score: 98.9536465731534
patch: super . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 781
score: 98.84148615056819
patch: increment CaMeL Iterations CaMeL Counter : current = current ;
rank: 781
score: 98.84053178267045
patch: this . increment CaMeL Iterations CaMeL Counter ( ) +
rank: 781
score: 98.73090955946181
patch: this . q CaMeL Ty ( ) ;
rank: 781
score: 98.50328826904297
patch: double x CaMeL Norm = 0 ;
rank: 782
score: 98.93197631835938
patch: previous = increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 782
score: 98.92661539713542
patch: increment CaMeL Iterations CaMeL Counter ( current + 1 ) ;
rank: 782
score: 98.8516845703125
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( 0 ) ) {
rank: 782
score: 98.84129503038194
patch: increment CaMeL Iterations CaMeL Counter >= cols ;
rank: 782
score: 98.83333129882813
patch: increment CaMeL Iterations CaMeL Counter ( rank ) ;
rank: 782
score: 98.72831895616319
patch: increment CaMeL Iterations CaMeL Counter ( 0 ;
rank: 782
score: 98.50246175130208
patch: if ( false ) {
rank: 783
score: 98.9656494140625
patch: x CaMeL Norm = permutation [ 0 ] ;
rank: 783
score: 98.953564453125
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 783
score: 98.9249267578125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( this ) ;
rank: 783
score: 98.8513516512784
patch: increment CaMeL Iterations CaMeL Counter ( ) && ) ;
rank: 783
score: 98.83806016710069
patch: increment CaMeL Iterations CaMeL Counter += 0 ;
rank: 783
score: 98.83216552734375
patch: increment CaMeL Iterations CaMeL Counter += ( ) ;
rank: 783
score: 98.72639973958333
patch: increment CaMeL Iterations CaMeL Counter - ++ ;
rank: 783
score: 98.49414825439453
patch: int first CaMeL Iteration = current ;
rank: 784
score: 98.962744140625
patch: throw new Optimization CaMeL Exception ( $STRING$ ) ;
rank: 784
score: 98.92429762620192
patch: Thread . current CaMeL Thread ( ) . set CaMeL Context CaMeL Class CaMeL Loader ( new Class CaMeL Loader ( ) ) ; ;
rank: 784
score: 98.85124860491071
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) { {
rank: 784
score: 98.83673095703125
patch: increment CaMeL Iterations CaMeL Counter > - $NUMBER$ ;
rank: 784
score: 98.71729193793402
patch: x CaMeL Norm += 1 . 0 ;
rank: 784
score: 98.49100748697917
patch: Node current = current ;
rank: 785
score: 98.96104847301136
patch: increment CaMeL Iterations CaMeL Counter ( , ) ; }
rank: 785
score: 98.95350748697916
patch: int value = ( int ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 785
score: 98.8507080078125
patch: if ( ! increment CaMeL Iterations CaMeL Counter ( ) ) { )
rank: 785
score: 98.83061387803819
patch: increment CaMeL Iterations CaMeL Counter <= ) {
rank: 785
score: 98.70907253689236
patch: int max = permutation [ 0 ] ;
rank: 785
score: 98.4865493774414
patch: try { while ( true ) {
rank: 786
score: 98.95937278053977
patch: increment CaMeL Iterations CaMeL Counter ( ) ; / finally
rank: 786
score: 98.9532470703125
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) break ; }
rank: 786
score: 98.92882283528645
patch: b = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 786
score: 98.92307447350544
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . out , ) ;
rank: 786
score: 98.8506192294034
patch: Iterations ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 786
score: 98.70878092447917
patch: increment CaMeL Iterations CaMeL Counter = $NUMBER$ ;
rank: 786
score: 98.48497772216797
patch: synchronized ( update CaMeL Jacobian ) {
rank: 787
score: 98.95293634588069
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; continue ; }
rank: 787
score: 98.92861328125
patch: current . increment CaMeL Iterations CaMeL Counter ++ ;
rank: 787
score: 98.92303466796875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) ) ; current . start ( ) ;
rank: 787
score: 98.84958321707589
patch: if ( ! increment CaMeL Iterations CaMeL Counter $NUMBER$ ( ) ) {
rank: 787
score: 98.70823451450893
patch: x CaMeL Norm = current ;
rank: 787
score: 98.48377227783203
patch: if ( permutation != 0 ) {
rank: 788
score: 98.9580965909091
patch: qr CaMeL Decomposition ( ) ; current = current ;
rank: 788
score: 98.95274251302084
patch: result [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 788
score: 98.92816716974431
patch: ret = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 788
score: 98.9219386888587
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter -- ;
rank: 788
score: 98.84906560724431
patch: increment CaMeL Iterations CaMeL Counter ( , / ) ;
rank: 788
score: 98.82948133680556
patch: increment CaMeL Iterations CaMeL Counter ; ) {
rank: 788
score: 98.82499389648437
patch: increment CaMeL Iterations CaMeL Counter iterator = cols ;
rank: 788
score: 98.70614963107639
patch: increment CaMeL Iterations CaMeL Counter = current ;
rank: 788
score: 98.48126983642578
patch: System . arraycopy ( permutation ) ;
rank: 789
score: 98.92760213216145
patch: ; current = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 789
score: 98.9217020670573
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . set CaMeL Name ( increment CaMeL Iterations CaMeL Counter + 1 ) ;
rank: 789
score: 98.8234619140625
patch: int value = increment CaMeL Iterations CaMeL Counter ;
rank: 789
score: 98.69959852430556
patch: x CaMeL Norm = 0 . 1 ;
rank: 789
score: 98.48086983816964
patch: this . current = current ;
rank: 790
score: 98.95348011363636
patch: diag . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 790
score: 98.9518310546875
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { break ; }
rank: 790
score: 98.92755681818181
patch: current = current . get CaMeL Iterations ( ) ;
rank: 790
score: 98.92061941964286
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; start = true ;
rank: 790
score: 98.820947265625
patch: if ( ) increment CaMeL Iterations CaMeL Counter ;
rank: 790
score: 98.69374084472656
patch: increment CaMeL Iterations CaMeL Counter 1 ;
rank: 790
score: 98.47444152832031
patch: while ( first CaMeL Iteration ) {
rank: 791
score: 98.9510498046875
patch: increment CaMeL Iterations CaMeL Counter ( ( int ) $NUMBER$ ) ; }
rank: 791
score: 98.92734781901042
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return new ;
rank: 791
score: 98.84844415838069
patch: j += increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 791
score: 98.81802029079861
patch: increment CaMeL Iterations CaMeL Counter ( 1 ,
rank: 791
score: 98.69214739118304
patch: lm CaMeL Dir = 0 ;
rank: 791
score: 98.4716567993164
patch: if ( ! do CaMeL Optimize )
rank: 792
score: 98.95009068080357
patch: start [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 792
score: 98.92699085582386
patch: expression = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 792
score: 98.919931640625
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter ) ; )
rank: 792
score: 98.81912841796876
patch: / * boolean first CaMeL Iteration = false ;
rank: 792
score: 98.69166395399306
patch: if ( first CaMeL Iteration ) { {
rank: 792
score: 98.46937561035156
patch: System . arraycopy ( current ) ;
rank: 793
score: 98.9507723721591
patch: update CaMeL Jacobian ( ) ; current = current ;
rank: 793
score: 98.94948508522727
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; this . increment CaMeL Iterations CaMeL Counter ( 1 ) ; }
rank: 793
score: 98.9265645345052
patch: s = increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 793
score: 98.91984757133152
patch: increment CaMeL Iterations CaMeL Counter ( old CaMeL X , ( int ) increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 793
score: 98.84733363560268
patch: ) { ) ; increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 793
score: 98.81582980685764
patch: increment CaMeL Iterations CaMeL Counter * cols ;
rank: 793
score: 98.81416625976563
patch: try { increment CaMeL Iterations CaMeL Counter -- ;
rank: 793
score: 98.68750678168402
patch: increment CaMeL Iterations CaMeL Counter <= cols )
rank: 793
score: 98.46817016601562
patch: if ( point > 0 ) {
rank: 794
score: 98.94901899857955
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 794
score: 98.92596990411931
patch: current = increment CaMeL Iterations CaMeL Counter / $NUMBER$ ;
rank: 794
score: 98.91869055706522
patch: increment CaMeL Iterations CaMeL Counter ( current , ( int ) old CaMeL X . to CaMeL String ( ) ) ;
rank: 794
score: 98.84694126674107
patch: while ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 794
score: 98.81559244791667
patch: try { lm CaMeL Par = 0 ;
rank: 794
score: 98.8106689453125
patch: increment CaMeL Iterations CaMeL Counter < ] ;
rank: 794
score: 98.46490478515625
patch: increment CaMeL Iterations CaMeL Counter ( ,
rank: 795
score: 98.94800914417614
patch: callback . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 795
score: 98.92551491477273
patch: orig = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 795
score: 98.91867065429688
patch: if ( ! increment CaMeL Iterations CaMeL Counter . is CaMeL Empty ( ) ) increment CaMeL Iterations CaMeL Counter . ) {
rank: 795
score: 98.84579903738839
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) > 1 ) {
rank: 795
score: 98.8095703125
patch: increment CaMeL Iterations CaMeL Counter <= ( ) ;
rank: 795
score: 98.46244049072266
patch: increment CaMeL Iterations CaMeL Counter ( -
rank: 796
score: 98.94818670099431
patch: if ( first CaMeL Iteration && first CaMeL Iteration )
rank: 796
score: 98.9475830078125
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter ;
rank: 796
score: 98.92462158203125
patch: previous = new increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 796
score: 98.84541538783482
patch: if ( * increment CaMeL Iterations CaMeL Counter ( ) ) { ;
rank: 796
score: 98.68548583984375
patch: int max = permutation [ point ] ;
rank: 796
score: 98.46152169363839
patch: if ( point != 0 )
rank: 797
score: 98.9236727627841
patch: engine . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 797
score: 98.84511893136161
patch: try { try { increment CaMeL Iterations CaMeL Counter ( ) ; ;
rank: 797
score: 98.81151733398437
patch: lm CaMeL Par [ 0 ] = current ;
rank: 797
score: 98.805224609375
patch: increment CaMeL Iterations CaMeL Counter < - 0 ;
rank: 797
score: 98.68464491102431
patch: increment CaMeL Iterations CaMeL Counter < true ;
rank: 798
score: 98.9472989169034
patch: this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 798
score: 98.92343971946023
patch: thread = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 798
score: 98.91844641644022
patch: increment CaMeL Iterations CaMeL Counter ( Arrays . as CaMeL List ( increment CaMeL Iterations CaMeL Counter ) , start ) ;
rank: 798
score: 98.84312133789062
patch: private increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 798
score: 98.84246826171875
patch: int increment CaMeL Iterations CaMeL Counter = 0 ;
rank: 798
score: 98.80982055664063
patch: increment CaMeL Iterations CaMeL Counter Math ( ) ;
rank: 798
score: 98.802294921875
patch: return new . get CaMeL Iterations ( ) ;
rank: 798
score: 98.46044049944196
patch: do CaMeL Optimize ( ) ;
rank: 799
score: 98.9469881924716
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; / * increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 799
score: 98.92310680042614
patch: deleted = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 799
score: 98.917998046875
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , increment CaMeL Iterations CaMeL Counter / ) ;
rank: 799
score: 98.84296209161931
patch: increment CaMeL Iterations CaMeL Counter ( ) ; throw .
rank: 799
score: 98.84128639914773
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System ;
rank: 799
score: 98.68117947048611
patch: diag = new double [ cols ] ;
rank: 799
score: 98.45868791852679
patch: if ( current != current )
rank: 800
score: 98.94649251302083
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 800
score: 98.9400634765625
patch: increment CaMeL Iterations CaMeL Counter ( + permutation ) ;
rank: 800
score: 98.91941139914773
patch: top = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 800
score: 98.84257202148437
patch: m increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 800
score: 98.79682006835938
patch: if ( ! increment CaMeL Iterations CaMeL Counter )
rank: 800
score: 98.6795654296875
patch: this . first CaMeL Iteration = true ;
rank: 800
score: 98.43858119419643
patch: first CaMeL Iteration = true ;
rank: 801
score: 98.84123091264205
patch: increment CaMeL Iterations CaMeL Counter ( - * ) ;
rank: 801
score: 98.83839000355114
patch: increment CaMeL Iterations CaMeL Counter ++ ; = 0 ;
rank: 801
score: 98.79547729492188
patch: assert get CaMeL Iterations ( ) == 0 ;
rank: 801
score: 98.43504987444196
patch: if ( ! true ) {
rank: 802
score: 98.93926447088069
patch: previous = current ; update CaMeL Jacobian ( ) ;
rank: 802
score: 98.9184903231534
patch: cal = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 802
score: 98.91783650716145
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . out , false ) ;
rank: 802
score: 98.79385375976562
patch: increment CaMeL Iterations CaMeL Counter ( - 1 ,
rank: 802
score: 98.67877875434027
patch: x CaMeL Norm = jac CaMeL Norm ;
rank: 802
score: 98.41428920200893
patch: if ( point == 0 )
rank: 803
score: 98.91827947443181
patch: current = increment CaMeL Iterations CaMeL Counter - 1 ;
rank: 803
score: 98.91746985394022
patch: increment CaMeL Iterations CaMeL Counter ( current , ) ; this . increment CaMeL Iterations CaMeL Counter ( current , ) ;
rank: 803
score: 98.8404208096591
patch: increment CaMeL Iterations CaMeL Counter ( ) / ) ;
rank: 803
score: 98.79300537109376
patch: int start = increment CaMeL Iterations CaMeL Counter ;
rank: 803
score: 98.67706298828125
patch: buf = new double [ cols ] ;
rank: 803
score: 98.40870012555804
patch: if ( ( true ) )
rank: 804
score: 98.91726817255434
patch: increment CaMeL Iterations CaMeL Counter ( System . current CaMeL Time CaMeL Millis ( ) , 0 . 0 , ) ;
rank: 804
score: 98.79275512695312
patch: try { q CaMeL Ty ( residuals ) ;
rank: 804
score: 98.79160766601562
patch: if ( ! get CaMeL Iterations ( ) ;
rank: 804
score: 98.40528215680804
patch: first CaMeL Iteration = current ;
rank: 805
score: 98.94534434442934
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; continue ;
rank: 805
score: 98.93577991832386
patch: current = current ; qr CaMeL Decomposition ( ) ;
rank: 805
score: 98.9170254794034
patch: increment CaMeL Iterations CaMeL Counter ( max , ) ;
rank: 805
score: 98.91506125710227
patch: default : increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 805
score: 98.83998801491477
patch: increment CaMeL Iterations CaMeL Counter ( false + ) ;
rank: 805
score: 98.79150390625
patch: increment CaMeL Iterations CaMeL Counter <= $NUMBER$ ;
rank: 805
score: 98.39924839564732
patch: try { current = current ;
rank: 806
score: 98.94512532552083
patch: if ( current == null ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 806
score: 98.9357577237216
patch: increment CaMeL Iterations CaMeL Counter ( + cost ) ;
rank: 806
score: 98.91437322443181
patch: cs = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 806
score: 98.83997691761364
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return _
rank: 806
score: 98.78984239366319
patch: increment CaMeL Iterations CaMeL Counter < ++ ;
rank: 806
score: 98.39889090401786
patch: if ( cost == 0 )
rank: 807
score: 98.9448575106534
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ) ; }
rank: 807
score: 98.91464233398438
patch: state = increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 807
score: 98.91380726207386
patch: rt = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 807
score: 98.78944905598958
patch: increment CaMeL Iterations CaMeL Counter < 1 )
rank: 807
score: 98.78508911132812
patch: try { qr CaMeL Decomposition ( residuals ) ;
rank: 807
score: 98.39366803850446
patch: if ( current != ) {
rank: 808
score: 98.94464111328125
patch: list [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 808
score: 98.92427978515624
patch: increment CaMeL Iterations CaMeL Counter ( . ) ;
rank: 808
score: 98.91350763494319
patch: def = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 808
score: 98.83685857599431
patch: sash . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 808
score: 98.78899468315973
patch: increment CaMeL Iterations CaMeL Counter ( 0 ,
rank: 808
score: 98.66281467013889
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ ;
rank: 808
score: 98.38910784040179
patch: if ( lm CaMeL Par )
rank: 809
score: 98.9215087890625
patch: qr CaMeL Decomposition ( current , objective ) ;
rank: 809
score: 98.91305202907986
patch: current = increment CaMeL Iterations CaMeL Counter ;
rank: 809
score: 98.83632590553977
patch: increment CaMeL Iterations CaMeL Counter > ) { ) ;
rank: 809
score: 98.78889295789931
patch: increment CaMeL Iterations CaMeL Counter ( this ,
rank: 809
score: 98.66118028428819
patch: work $NUMBER$ [ 0 ] = current ;
rank: 809
score: 98.37948172433036
patch: synchronized ( lm CaMeL Dir )
rank: 810
score: 98.94382642663044
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 810
score: 98.912841796875
patch: changed = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 810
score: 98.83530495383523
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) ?
rank: 810
score: 98.78835042317708
patch: if ( increment CaMeL Iterations CaMeL Counter ;
rank: 810
score: 98.37831333705357
patch: if ( true ) current ;
rank: 811
score: 98.91373697916667
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . notify CaMeL All ( ) ; }
rank: 811
score: 98.83526056463069
patch: increment CaMeL Iterations CaMeL Counter ( ) + ) {
rank: 811
score: 98.78555636935764
patch: increment CaMeL Iterations CaMeL Counter > ) ;
rank: 811
score: 98.34828404017857
patch: if ( true ) current .
rank: 812
score: 98.91218705610795
patch: loc = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 812
score: 98.91190962357955
patch: tree = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 812
score: 98.90475463867188
patch: qr CaMeL Decomposition ( ) ; }
rank: 812
score: 98.83451704545455
patch: increment CaMeL Iterations CaMeL Counter ( 0 - ) ;
rank: 812
score: 98.78407592773438
patch: increment CaMeL Iterations CaMeL Counter ( command ) ;
rank: 812
score: 98.65814208984375
patch: if ( x CaMeL Norm != 0 )
rank: 812
score: 98.34123883928571
patch: if ( lm CaMeL Dir ;
rank: 813
score: 98.91075642903645
patch: increment CaMeL Iterations CaMeL Counter ( ) ; Thread . current CaMeL Thread ( ) . print CaMeL Stack CaMeL Trace ( ;
rank: 813
score: 98.83397827148437
patch: increment CaMeL Iterations CaMeL Counter ( ) ) Exception
rank: 813
score: 98.78372531467014
patch: increment CaMeL Iterations CaMeL Counter != 0 ;
rank: 813
score: 98.77341918945312
patch: increment CaMeL Iterations CaMeL Counter iterator = current ;
rank: 814
score: 98.94174630301339
patch: res [ 0 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 814
score: 98.90916907269022
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; start = true ;
rank: 814
score: 98.87706909179687
patch: update CaMeL Jacobian ( point , objective ) ;
rank: 814
score: 98.8333740234375
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this }
rank: 814
score: 98.33529227120536
patch: if ( do CaMeL Optimize )
rank: 815
score: 98.9087801846591
patch: shift = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 815
score: 98.83234252929688
patch: increment CaMeL Iterations CaMeL Counter ( ) { ;
rank: 815
score: 98.78278944227431
patch: synchronized ( increment CaMeL Iterations CaMeL Counter ;
rank: 815
score: 98.33212716238839
patch: if ( ! cost ) {
rank: 816
score: 98.9077657063802
patch: increment CaMeL Iterations CaMeL Counter ( current . get CaMeL Iterations ( ) ) ; current . get CaMeL Iterations ( ) ;
rank: 816
score: 98.83140980113636
patch: final increment CaMeL Iterations CaMeL Counter ( ) ) ;
rank: 816
score: 98.78272162543402
patch: increment CaMeL Iterations CaMeL Counter ( || (
rank: 816
score: 98.65253363715277
patch: increment CaMeL Iterations CaMeL Counter = true ;
rank: 816
score: 98.32895914713542
patch: int current = current ;
rank: 817
score: 98.93994140625
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; this . increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ; }
rank: 817
score: 98.90739302201705
patch: g . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 817
score: 98.8636474609375
patch: increment CaMeL Iterations CaMeL Counter ( - 0 ;
rank: 817
score: 98.8311767578125
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ 0 ) ;
rank: 817
score: 98.78255615234374
patch: increment CaMeL Iterations CaMeL Counter <= - 1 ;
rank: 817
score: 98.75206163194444
patch: increment CaMeL Iterations CaMeL Counter / $NUMBER$ ;
rank: 817
score: 98.64868842230902
patch: increment CaMeL Iterations CaMeL Counter ( 1 ;
rank: 817
score: 98.32177734375
patch: synchronized ( point ) {
rank: 818
score: 98.93909222146739
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 818
score: 98.90671793619792
patch: increment CaMeL Iterations CaMeL Counter ( current . length ) ;
rank: 818
score: 98.86171264648438
patch: increment CaMeL Iterations CaMeL Counter ( SIZE ) ;
rank: 818
score: 98.8306884765625
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ) ) ;
rank: 818
score: 98.78124389648437
patch: increment CaMeL Iterations CaMeL Counter [ ] -- ;
rank: 818
score: 98.64302571614583
patch: increment CaMeL Iterations CaMeL Counter -= current ;
rank: 818
score: 98.31784057617188
patch: synchronized ( this ) {
rank: 819
score: 98.93899739583334
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( false ) ; }
rank: 819
score: 98.90615012428977
patch: increment CaMeL Iterations CaMeL Counter ++ ; break ; }
rank: 819
score: 98.90608723958333
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 819
score: 98.85848388671874
patch: qr CaMeL Decomposition ( point , objective ) ;
rank: 819
score: 98.83030007102273
patch: increment CaMeL Iterations CaMeL Counter ( false - ) ;
rank: 819
score: 98.77896728515626
patch: increment CaMeL Iterations CaMeL Counter ( >> ) ;
rank: 819
score: 98.63849555121527
patch: x CaMeL Norm += $NUMBER$ . 0 ;
rank: 819
score: 98.31658063616071
patch: if ( permutation == ) {
rank: 820
score: 98.905517578125
patch: current = increment CaMeL Iterations CaMeL Counter . ) ;
rank: 820
score: 98.90236409505208
patch: increment CaMeL Iterations CaMeL Counter ( ) ; current . print CaMeL Stack CaMeL Trace ( System . out , true ) ;
rank: 820
score: 98.8583251953125
patch: update CaMeL Jacobian ( first CaMeL Iteration ) ;
rank: 820
score: 98.8289462002841
patch: double ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 820
score: 98.74652099609375
patch: / / lm CaMeL Par = 0 ;
rank: 820
score: 98.31614467075893
patch: if ( true ) continue ;
rank: 821
score: 98.93859332540761
patch: increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ( ) ) ; increment CaMeL Iterations CaMeL Counter ( }
rank: 821
score: 98.90467418323864
patch: position = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 821
score: 98.77594672309027
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ -- ;
rank: 821
score: 98.74407196044922
patch: qr CaMeL Decomposition ( false ) ;
rank: 821
score: 98.63551161024306
patch: this ; update CaMeL Jacobian ( ) ;
rank: 821
score: 98.31542096819196
patch: if ( permutation == null )
rank: 822
score: 98.93776041666666
patch: if ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 822
score: 98.90461869673295
patch: execution = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 822
score: 98.82720392400569
patch: increment CaMeL Iterations CaMeL Counter ( ) ; System }
rank: 822
score: 98.77199978298611
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ||
rank: 822
score: 98.74315728081598
patch: increment CaMeL Iterations CaMeL Counter * current .
rank: 822
score: 98.63494873046875
patch: this . x CaMeL Norm = 0 ;
rank: 822
score: 98.31188092912946
patch: try { while ( true )
rank: 823
score: 98.90398615056819
patch: z = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 823
score: 98.90003458658855
patch: increment CaMeL Iterations CaMeL Counter ( name , current ) ;
rank: 823
score: 98.82713734019886
patch: try { increment CaMeL Iterations CaMeL Counter ( ) {
rank: 823
score: 98.78055572509766
patch: double first CaMeL Iteration = 0 ;
rank: 823
score: 98.77075805664063
patch: increment CaMeL Iterations CaMeL Counter = ( ) ;
rank: 823
score: 98.73323567708333
patch: increment CaMeL Iterations CaMeL Counter * ) {
rank: 823
score: 98.31094796316964
patch: if ( objective == 0 )
rank: 824
score: 98.9023104580966
patch: ii = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 824
score: 98.89764959161931
patch: if ( increment CaMeL Iterations CaMeL Counter > 0 )
rank: 824
score: 98.82578346946023
patch: } increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 824
score: 98.7671875
patch: this . increment CaMeL Iterations CaMeL Counter ) ;
rank: 824
score: 98.30927385602679
patch: if ( true && ) {
rank: 825
score: 98.93666143002717
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter = $NUMBER$ ;
rank: 825
score: 98.8983487215909
patch: character = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 825
score: 98.83323838975694
patch: pk = new double [ cols ] ;
rank: 825
score: 98.82472059461806
patch: increment CaMeL Iterations CaMeL Counter ( ) )
rank: 825
score: 98.76909637451172
patch: double delta = 0 . 0 ;
rank: 825
score: 98.76678466796875
patch: increment CaMeL Iterations CaMeL Counter ( checker ) ;
rank: 825
score: 98.6233901977539
patch: switch ( first CaMeL Iteration ) {
rank: 825
score: 98.3082275390625
patch: if ( ) {
rank: 826
score: 98.93543590198864
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 826
score: 98.89750532670455
patch: matching = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 826
score: 98.76638793945312
patch: increment CaMeL Iterations CaMeL Counter [ ] ++ ;
rank: 826
score: 98.72823333740234
patch: diag [ 0 ] = current ;
rank: 826
score: 98.30681501116071
patch: String point = new ) ;
rank: 827
score: 98.9345066236413
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; } else {
rank: 827
score: 98.89741654829545
patch: atom = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 827
score: 98.82650756835938
patch: qr CaMeL Decomposition ( true ) ;
rank: 827
score: 98.82378595525569
patch: increment CaMeL Iterations CaMeL Counter ( ] ) ; ;
rank: 827
score: 98.72703721788194
patch: increment CaMeL Iterations CaMeL Counter / cols ;
rank: 827
score: 98.30584716796875
patch: tmp = current ;
rank: 828
score: 98.93429432744566
patch: if ( this . increment CaMeL Iterations CaMeL Counter <= 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 828
score: 98.89410955255681
patch: cp = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 828
score: 98.82265218098958
patch: increment CaMeL Iterations CaMeL Counter ( name .
rank: 828
score: 98.82234022352431
patch: update CaMeL Jacobian ( residuals ) ; }
rank: 828
score: 98.76453857421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; String
rank: 828
score: 98.72492133246527
patch: increment CaMeL Iterations CaMeL Counter += 1 ;
rank: 828
score: 98.30402483258929
patch: if ( residuals == 0 )
rank: 829
score: 98.93231756036931
patch: } { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 829
score: 98.89537464488636
patch: new ; increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 829
score: 98.60433959960938
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ;
rank: 829
score: 98.29574584960938
patch: int point = 0 ;
rank: 830
score: 98.89457563920455
patch: pi = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 830
score: 98.82225452769886
patch: Counter * increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 830
score: 98.7624755859375
patch: increment CaMeL Iterations CaMeL Counter ( << ) ;
rank: 830
score: 98.60401153564453
patch: update CaMeL Jacobian ( this ) ;
rank: 830
score: 98.28839983258929
patch: try { if ( true )
rank: 831
score: 98.93107804008152
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ) ;
rank: 831
score: 98.89268909801136
patch: level = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 831
score: 98.89216752485795
patch: dim . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 831
score: 98.82111150568181
patch: increment CaMeL Iterations CaMeL Counter ( ) ; } return
rank: 831
score: 98.59733581542969
patch: update CaMeL Jacobian ( null ) ;
rank: 831
score: 98.28684779575893
patch: if ( current != protected )
rank: 832
score: 98.9308551290761
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ) break ;
rank: 832
score: 98.82110040838069
patch: int += increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 832
score: 98.80142550998264
patch: update CaMeL Jacobian ( , residuals ) ;
rank: 832
score: 98.76019287109375
patch: increment CaMeL Iterations CaMeL Counter < 1 ) {
rank: 832
score: 98.7560546875
patch: try { boolean first CaMeL Iteration = false ;
rank: 832
score: 98.71761745876736
patch: this ; qr CaMeL Decomposition ( ) ;
rank: 832
score: 98.5874252319336
patch: x CaMeL Norm = 0 ; }
rank: 832
score: 98.28549630301339
patch: increment CaMeL Iterations CaMeL Counter (
rank: 833
score: 98.9308349609375
patch: if ( ) { increment CaMeL Iterations CaMeL Counter ( ) ; } ;
rank: 833
score: 98.79794650607639
patch: else { update CaMeL Jacobian ( ) ;
rank: 833
score: 98.75751410590277
patch: increment CaMeL Iterations CaMeL Counter >= ) ;
rank: 833
score: 98.75284576416016
patch: boolean first CaMeL Iteration = null ;
rank: 833
score: 98.71649848090277
patch: / * lm CaMeL Par = 0 ;
rank: 833
score: 98.58458709716797
patch: this . jacobian ( residuals ) ;
rank: 833
score: 98.28471156529018
patch: if ( 0 < cols )
rank: 834
score: 98.92955433238636
patch: } return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 834
score: 98.88835005326705
patch: if ( increment CaMeL Iterations CaMeL Counter <= 0 )
rank: 834
score: 98.818359375
patch: Iterations increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 834
score: 98.75410766601563
patch: increment CaMeL Iterations CaMeL Counter ( % ) ;
rank: 834
score: 98.28323800223214
patch: if ( update CaMeL Jacobian )
rank: 835
score: 98.92921031605114
patch: this . increment CaMeL Iterations CaMeL Counter ( true ) ; increment CaMeL Iterations CaMeL Counter ( true ) ; }
rank: 835
score: 98.8182705965909
patch: increment CaMeL Iterations CaMeL Counter ( false ) ; )
rank: 835
score: 98.74854736328125
patch: increment CaMeL Iterations CaMeL Counter < 1 ; ;
rank: 835
score: 98.7056884765625
patch: if ( lm CaMeL Par = 0 ;
rank: 835
score: 98.58097839355469
patch: update CaMeL Jacobian ( 0 ) ;
rank: 835
score: 98.28265380859375
patch: if ( ! ) {
rank: 836
score: 98.88658558238636
patch: xform . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 836
score: 98.88310102982955
patch: increment CaMeL Iterations CaMeL Counter ( exp , ) ;
rank: 836
score: 98.81752707741477
patch: increment CaMeL Iterations CaMeL Counter ( - ) ; ;
rank: 836
score: 98.748046875
patch: if $NUMBER$ ; increment CaMeL Iterations CaMeL Counter ;
rank: 836
score: 98.27818080357143
patch: if ( true ) { try
rank: 837
score: 98.92862601902173
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter = false ;
rank: 837
score: 98.81693892045455
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) =
rank: 837
score: 98.78358289930556
patch: update CaMeL Jacobian ( true ) ; }
rank: 837
score: 98.74717881944444
patch: increment CaMeL Iterations CaMeL Counter < ) )
rank: 837
score: 98.74580078125
patch: int [ ] old CaMeL X = current ;
rank: 837
score: 98.57454681396484
patch: increment CaMeL Iterations CaMeL Counter < )
rank: 837
score: 98.27142333984375
patch: String point = current ;
rank: 838
score: 98.92848307291666
patch: m [ [ 1 ] = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 838
score: 98.78300645616319
patch: increment CaMeL Iterations CaMeL Counter ( current ;
rank: 838
score: 98.74382934570312
patch: increment CaMeL Iterations CaMeL Counter < >= 1 ;
rank: 838
score: 98.26568603515625
patch: if ( permutation ) {
rank: 839
score: 98.92832253196023
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; ) ; }
rank: 839
score: 98.88457697088069
patch: en = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 839
score: 98.8161288174716
patch: if += increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 839
score: 98.74181450737848
patch: increment CaMeL Iterations CaMeL Counter ( - (
rank: 839
score: 98.57158660888672
patch: lm CaMeL Par ( residuals ) ;
rank: 839
score: 98.26160685221355
patch: int current = 0 ;
rank: 840
score: 98.92793412642045
patch: o = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 840
score: 98.81546020507812
patch: increment CaMeL Iterations CaMeL Counter ( ) { }
rank: 840
score: 98.74123128255208
patch: increment CaMeL Iterations CaMeL Counter == 0 ;
rank: 840
score: 98.25685628255208
patch: synchronized ( current ) {
rank: 841
score: 98.92787236752717
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter = ) ;
rank: 841
score: 98.7374267578125
patch: Iterations = increment CaMeL Iterations CaMeL Counter ;
rank: 841
score: 98.56687927246094
patch: int jacobian = jac CaMeL Norm ;
rank: 841
score: 98.25460815429688
patch: assert ( true ) ;
rank: 842
score: 98.88372247869319
patch: if ( increment CaMeL Iterations CaMeL Counter <= $NUMBER$ )
rank: 842
score: 98.81328125
patch: increment CaMeL Iterations CaMeL Counter ( ) ) }
rank: 842
score: 98.76555718315973
patch: res = new double [ cols ] ;
rank: 842
score: 98.73517523871527
patch: increment CaMeL Iterations CaMeL Counter ( ) -
rank: 842
score: 98.7242202758789
patch: double delta = 1 . 0 ;
rank: 842
score: 98.68378363715277
patch: increment CaMeL Iterations CaMeL Counter += $NUMBER$ ;
rank: 842
score: 98.56471252441406
patch: update CaMeL Jacobian ( $STRING$ ) ;
rank: 842
score: 98.2466532389323
patch: Object current = null ;
rank: 843
score: 98.92551491477273
patch: increment CaMeL Iterations CaMeL Counter ( ) - $NUMBER$ ;
rank: 843
score: 98.76328531901042
patch: update CaMeL Jacobian ( false ) ; }
rank: 843
score: 98.72829861111111
patch: increment CaMeL Iterations CaMeL Counter ( && (
rank: 843
score: 98.21104125976562
patch: while ( true )
rank: 844
score: 98.92542034646739
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter = true ;
rank: 844
score: 98.88350053267045
patch: if ( increment CaMeL Iterations CaMeL Counter > 1 )
rank: 844
score: 98.86902965198864
patch: selection = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 844
score: 98.72196451822917
patch: j = increment CaMeL Iterations CaMeL Counter ;
rank: 844
score: 98.67979600694444
patch: increment CaMeL Iterations CaMeL Counter > cols ;
rank: 844
score: 98.19979858398438
patch: i = 0 ;
rank: 845
score: 98.88273481889205
patch: condition = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 845
score: 98.86873002485795
patch: increment CaMeL Iterations CaMeL Counter ( work 1 ) ;
rank: 845
score: 98.71939425998264
patch: increment CaMeL Iterations CaMeL Counter -= ) ;
rank: 845
score: 98.67687116350446
patch: q CaMeL Ty ( ) ;
rank: 845
score: 98.19137573242188
patch: int 0 = 0 ;
rank: 846
score: 98.9240191915761
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( increment CaMeL Iterations CaMeL Counter ( ) ) continue ;
rank: 846
score: 98.81031383167614
patch: return ( * increment CaMeL Iterations CaMeL Counter ) ;
rank: 846
score: 98.75222778320312
patch: update CaMeL Jacobian ( permutation ) ;
rank: 846
score: 98.70973036024306
patch: increment CaMeL Iterations CaMeL Counter -- ; int
rank: 846
score: 98.19106038411458
patch: else current = current ;
rank: 847
score: 98.88120339133523
patch: time = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 847
score: 98.75035942925348
patch: increment CaMeL Iterations CaMeL Counter ( this ;
rank: 847
score: 98.67583550347223
patch: increment CaMeL Iterations CaMeL Counter < current .
rank: 847
score: 98.54852294921875
patch: first CaMeL Iteration = 0 ;
rank: 847
score: 98.17974853515625
patch: Node current = null ;
rank: 848
score: 98.92274576822916
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter (
rank: 848
score: 98.88108520507812
patch: increment CaMeL Iterations CaMeL Counter ++ ( ) ;
rank: 848
score: 98.86257934570312
patch: increment CaMeL Iterations CaMeL Counter ( min ) ;
rank: 848
score: 98.70172797309027
patch: result = increment CaMeL Iterations CaMeL Counter ;
rank: 848
score: 98.67533365885417
patch: increment CaMeL Iterations CaMeL Counter < cost ;
rank: 848
score: 98.1670654296875
patch: m = current ;
rank: 849
score: 98.92203422214673
patch: if ( this . increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = true ; }
rank: 849
score: 98.8094482421875
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) --
rank: 849
score: 98.74126519097223
patch: x CaMeL Norm = x CaMeL Norm ;
rank: 849
score: 98.69902886284723
patch: i = increment CaMeL Iterations CaMeL Counter ;
rank: 849
score: 98.16590372721355
patch: if ( point ) {
rank: 850
score: 98.92162024456522
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; System . arraycopy ( increment CaMeL Iterations CaMeL Counter , ) ;
rank: 850
score: 98.80797729492187
patch: increment CaMeL Iterations CaMeL Counter ( ) + ;
rank: 850
score: 98.735595703125
patch: qr CaMeL Decomposition ( current ) ;
rank: 850
score: 98.69263373480902
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ ;
rank: 850
score: 98.16086832682292
patch: Element current = current ;
rank: 851
score: 98.92155317826705
patch: best = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 851
score: 98.88007146661931
patch: binding = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 851
score: 98.80791681463069
patch: increment CaMeL Iterations CaMeL Counter ( ) + $NUMBER$ {
rank: 851
score: 98.69058566623264
patch: increment CaMeL Iterations CaMeL Counter ; break ;
rank: 851
score: 98.15756225585938
patch: Node point = current ;
rank: 852
score: 98.92140299479166
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; if ( ) ;
rank: 852
score: 98.879150390625
patch: inst . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 852
score: 98.8070556640625
patch: CaMeL increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 852
score: 98.72981770833333
patch: current ; update CaMeL Jacobian ( ) ;
rank: 852
score: 98.68935818142361
patch: increment CaMeL Iterations CaMeL Counter [ ) ;
rank: 852
score: 98.53456333705357
patch: lm CaMeL Dir = current ;
rank: 852
score: 98.15399169921875
patch: synchronized ( 0 ) {
rank: 853
score: 98.879150390625
patch: if ( increment CaMeL Iterations CaMeL Counter < 1 )
rank: 853
score: 98.85488059303977
patch: input . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 853
score: 98.80612521701389
patch: increment CaMeL Iterations CaMeL Counter != 1 ;
rank: 853
score: 98.728271484375
patch: update CaMeL Jacobian ( ) ; ) ;
rank: 853
score: 98.68544514973958
patch: increment CaMeL Iterations CaMeL Counter -- ; ;
rank: 853
score: 98.53444126674107
patch: qr CaMeL Decomposition = 0 ;
rank: 853
score: 98.15397135416667
patch: int point = current ;
rank: 854
score: 98.92007649739584
patch: if ( ) increment CaMeL Iterations CaMeL Counter ( ) ; break ; }
rank: 854
score: 98.87856223366477
patch: e = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 854
score: 98.80320434570312
patch: public increment CaMeL Iterations CaMeL Counter ( ) {
rank: 854
score: 98.72547743055556
patch: jacobian = new double [ cols ] ;
rank: 854
score: 98.67110188802083
patch: increment CaMeL Iterations CaMeL Counter - ) {
rank: 854
score: 98.53129577636719
patch: double [ ] diag = current ;
rank: 854
score: 98.14542846679687
patch: node = current ;
rank: 855
score: 98.92002175071023
patch: alignment = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 855
score: 98.8538485440341
patch: evt = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 855
score: 98.72127532958984
patch: update CaMeL Jacobian ( current ) ;
rank: 855
score: 98.66901991102431
patch: increment CaMeL Iterations CaMeL Counter != $NUMBER$ ;
rank: 855
score: 98.65471055772569
patch: try { lm CaMeL Dir = 0 ;
rank: 855
score: 98.52336883544922
patch: switch ( x CaMeL Norm ) {
rank: 855
score: 98.13645426432292
patch: while ( false ) {
rank: 856
score: 98.8775301846591
patch: pop = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 856
score: 98.85313831676136
patch: step = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 856
score: 98.63922119140625
patch: final boolean first CaMeL Iteration = true ;
rank: 856
score: 98.52243041992188
patch: double delta = jac CaMeL Norm ;
rank: 856
score: 98.13451538085937
patch: event = current ;
rank: 857
score: 98.91861625339673
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ; increment CaMeL Iterations CaMeL Counter ) ;
rank: 857
score: 98.66443549262152
patch: increment CaMeL Iterations CaMeL Counter == ) {
rank: 857
score: 98.61548614501953
patch: if ( diag == 0 ) {
rank: 857
score: 98.5179214477539
patch: int max = jac CaMeL Norm ;
rank: 857
score: 98.12910970052083
patch: if ( current ) {
rank: 858
score: 98.91700280230978
patch: if ( this . increment CaMeL Iterations CaMeL Counter != 0 ) { increment CaMeL Iterations CaMeL Counter = false ; }
rank: 858
score: 98.79291381835938
patch: increment CaMeL Iterations CaMeL Counter ( ) && else
rank: 858
score: 98.70662689208984
patch: increment CaMeL Iterations CaMeL Counter ( {
rank: 858
score: 98.664306640625
patch: increment CaMeL Iterations CaMeL Counter <= ) ;
rank: 858
score: 98.123974609375
patch: current = current ;
rank: 859
score: 98.8731689453125
patch: double ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 859
score: 98.85035289417614
patch: prop = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 859
score: 98.79108276367188
patch: increment CaMeL Iterations CaMeL Counter ( ; ) ;
rank: 859
score: 98.70163981119792
patch: update CaMeL Jacobian ( ) ; break ;
rank: 859
score: 98.66199408637152
patch: Iterations = new int [ 1 ] ;
rank: 859
score: 98.11775716145833
patch: if ( cost ) {
rank: 860
score: 98.91623757102273
patch: increment CaMeL Iterations CaMeL Counter ( ) ; ) }
rank: 860
score: 98.87285822088069
patch: warn = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 860
score: 98.78762817382812
patch: increment CaMeL Iterations CaMeL Counter ( ) && }
rank: 860
score: 98.60097830636161
patch: int CaMeL Value = 0 ;
rank: 860
score: 98.11441650390626
patch: j = current ;
rank: 861
score: 98.91604746942934
patch: if ( this . increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 861
score: 98.87180397727273
patch: removed = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 861
score: 98.6966781616211
patch: update CaMeL Jacobian ( $NUMBER$ ) ;
rank: 861
score: 98.65829128689236
patch: increment CaMeL Iterations CaMeL Counter [ ) *
rank: 861
score: 98.50325775146484
patch: switch ( solved CaMeL Cols ) {
rank: 861
score: 98.10976155598958
patch: if ( lm CaMeL Dir
rank: 862
score: 98.91590947690217
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ; break ;
rank: 862
score: 98.8715487393466
patch: exit = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 862
score: 98.68819851345486
patch: update CaMeL Jacobian ( true ) ; ;
rank: 862
score: 98.65513780381944
patch: increment CaMeL Iterations CaMeL Counter length -- ;
rank: 862
score: 98.50225830078125
patch: double jacobian = jac CaMeL Norm ;
rank: 862
score: 98.10957641601563
patch: if ( false )
rank: 863
score: 98.91440217391305
patch: if ( increment CaMeL Iterations CaMeL Counter != ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ; }
rank: 863
score: 98.87059437144886
patch: failed = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 863
score: 98.84381658380681
patch: return increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 863
score: 98.68802897135417
patch: point = new double [ cols ] ;
rank: 863
score: 98.65438503689236
patch: increment CaMeL Iterations CaMeL Counter ( ; int
rank: 863
score: 98.49235316685268
patch: if ( true ) { {
rank: 863
score: 98.10874430338542
patch: double delta = 0 ;
rank: 864
score: 98.65243191189236
patch: max = increment CaMeL Iterations CaMeL Counter ;
rank: 864
score: 98.60606553819444
patch: double delta = permutation [ 0 ] ;
rank: 864
score: 98.47758265904018
patch: x CaMeL Norm = 1 ;
rank: 864
score: 98.10829671223958
patch: synchronized ( rows ) {
rank: 865
score: 98.91353175951087
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { current . increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 865
score: 98.86965110085227
patch: while ( ) increment CaMeL Iterations CaMeL Counter ++ ;
rank: 865
score: 98.76963975694444
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ) ;
rank: 865
score: 98.68515353732639
patch: qr CaMeL Decomposition ( , residuals ) ;
rank: 865
score: 98.65137396918402
patch: increment CaMeL Iterations CaMeL Counter ; for (
rank: 865
score: 98.60464138454861
patch: double [ ] work $NUMBER$ = null ;
rank: 865
score: 98.47315325055804
patch: first CaMeL Iteration = false ;
rank: 865
score: 98.10666910807292
patch: if ( ! true )
rank: 866
score: 98.913330078125
patch: increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( increment CaMeL Iterations CaMeL Counter ) ; ;
rank: 866
score: 98.8692959872159
patch: graphics . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 866
score: 98.76809692382812
patch: final increment CaMeL Iterations CaMeL Counter = ) {
rank: 866
score: 98.60097927517361
patch: if ( jac CaMeL Norm == 0 )
rank: 866
score: 98.10308837890625
patch: synchronized ( residuals ) {
rank: 867
score: 98.9125643643466
patch: result += increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 867
score: 98.86830832741477
patch: ok = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 867
score: 98.83979936079545
patch: id = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 867
score: 98.76799926757812
patch: increment CaMeL Iterations CaMeL Counter ( ) ) /
rank: 867
score: 98.64665391710069
patch: throw new Runtime CaMeL Exception ( $STRING$ +
rank: 867
score: 98.45663016183036
patch: lm CaMeL Par = current ;
rank: 867
score: 98.09903971354167
patch: Object point = current ;
rank: 868
score: 98.8672207919034
patch: outer = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 868
score: 98.83896706321023
patch: klass = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 868
score: 98.64421251085069
patch: increment CaMeL Iterations CaMeL Counter ( $STRING$ ,
rank: 868
score: 98.58761935763889
patch: boolean first CaMeL Iteration = - 1 ;
rank: 868
score: 98.4541015625
patch: lm CaMeL Par ( ) ;
rank: 868
score: 98.09822591145833
patch: int delta = 0 ;
rank: 869
score: 98.86638849431819
patch: control = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 869
score: 98.83835671164773
patch: increment CaMeL Iterations CaMeL Counter ( current ) ; )
rank: 869
score: 98.45212227957589
patch: if ( solved CaMeL Cols ;
rank: 869
score: 98.08984375
patch: cur = current ;
rank: 870
score: 98.86625532670455
patch: info . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 870
score: 98.64177788628473
patch: increment CaMeL Iterations CaMeL Counter < $NUMBER$ )
rank: 870
score: 98.40036446707589
patch: x CaMeL Norm = true ;
rank: 870
score: 98.08326416015625
patch: j = 0 ;
rank: 871
score: 98.90821373980978
patch: if ( ! increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ) ;
rank: 871
score: 98.7526611328125
patch: increment CaMeL Iterations CaMeL Counter ( == ) ;
rank: 871
score: 98.65194702148438
patch: update CaMeL Jacobian ( ) ; ;
rank: 871
score: 98.64069281684027
patch: increment CaMeL Iterations CaMeL Counter $NUMBER$ ++ ;
rank: 871
score: 98.39940534319196
patch: x CaMeL Norm = $STRING$ ;
rank: 871
score: 98.08082275390625
patch: head = current ;
rank: 872
score: 98.90713102921195
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; increment CaMeL Iterations CaMeL Counter ( ) ; return false ; }
rank: 872
score: 98.64034016927083
patch: increment CaMeL Iterations CaMeL Counter ; ) ;
rank: 872
score: 98.53878784179688
patch: ! first CaMeL Iteration = true ;
rank: 872
score: 98.39513288225446
patch: x CaMeL Norm = null ;
rank: 872
score: 98.0800069173177
patch: String current = current ;
rank: 873
score: 98.90651537024456
patch: increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; return false ; }
rank: 873
score: 98.8641024502841
patch: truncated = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 873
score: 98.8345614346591
patch: frame . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 873
score: 98.74127197265625
patch: increment CaMeL Iterations CaMeL Counter ( new ) ;
rank: 873
score: 98.64021301269531
patch: logger . out ( $STRING$ ) ;
rank: 873
score: 98.62171173095703
patch: increment CaMeL Iterations CaMeL Counter ( new
rank: 873
score: 98.53215789794922
patch: diag [ 0 ] = 0 ;
rank: 873
score: 98.06932576497395
patch: String point = 0 ;
rank: 874
score: 98.90636676290761
patch: if ( increment CaMeL Iterations CaMeL Counter ) increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter - 1 ;
rank: 874
score: 98.86376953125
patch: enabled = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 874
score: 98.63827175564236
patch: increment CaMeL Iterations CaMeL Counter < 1 &&
rank: 874
score: 98.52957153320312
patch: return do CaMeL Optimize ( ) ;
rank: 874
score: 98.39326695033482
patch: this . jacobian ( ) ;
rank: 874
score: 98.06610107421875
patch: Object current = 0 ;
rank: 875
score: 98.90477454144022
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; ; }
rank: 875
score: 98.8338623046875
patch: ; increment CaMeL Iterations CaMeL Counter ( current ) ;
rank: 875
score: 98.740185546875
patch: increment CaMeL Iterations CaMeL Counter ( ) throws public
rank: 875
score: 98.63796561104911
patch: for ( ; ; ) {
rank: 875
score: 98.59981536865234
patch: update CaMeL Jacobian ( 1 ) ;
rank: 875
score: 98.378173828125
patch: x CaMeL Norm = $NUMBER$ ;
rank: 875
score: 98.06118774414062
patch: Point current = current ;
rank: 876
score: 98.86308149857955
patch: int ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 876
score: 98.73870849609375
patch: increment CaMeL Iterations CaMeL Counter ( ) ) return
rank: 876
score: 98.63661024305556
patch: increment CaMeL Iterations CaMeL Counter == 1 ;
rank: 876
score: 98.53510284423828
patch: double first CaMeL Iteration = true ;
rank: 876
score: 98.05282592773438
patch: long point = 0 ;
rank: 877
score: 98.90394658627717
patch: if ( this . increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = ) ; }
rank: 877
score: 98.86289284446023
patch: other . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 877
score: 98.83311878551136
patch: increment CaMeL Iterations CaMeL Counter ( min , ) ;
rank: 877
score: 98.58187866210938
patch: res [ 0 ] = current ;
rank: 877
score: 98.33322579520089
patch: x CaMeL Norm = false ;
rank: 877
score: 98.05145263671875
patch: Symbol point = current ;
rank: 878
score: 98.83216441761364
patch: increment CaMeL Iterations CaMeL Counter ( name , ) ;
rank: 878
score: 98.32684326171875
patch: diag ( residuals ) ;
rank: 878
score: 98.0484110514323
patch: int permutation = 0 ;
rank: 879
score: 98.63456895616319
patch: increment CaMeL Iterations CaMeL Counter == $NUMBER$ ;
rank: 879
score: 98.57516479492188
patch: do CaMeL Optimize ( ) ; }
rank: 879
score: 98.30057198660714
patch: first CaMeL Iteration = null ;
rank: 879
score: 98.04414876302083
patch: synchronized ( true ) {
rank: 880
score: 98.90261973505434
patch: if ( this . increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = true ; }
rank: 880
score: 98.8308438387784
patch: var = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 880
score: 98.7277099609375
patch: increment CaMeL Iterations CaMeL Counter ( ) ] }
rank: 880
score: 98.63199191623264
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$ &&
rank: 880
score: 98.29956926618304
patch: x CaMeL Norm += 1 ;
rank: 880
score: 98.03823852539062
patch: if ( current != )
rank: 881
score: 98.9021526834239
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; ) { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 881
score: 98.83033336292614
patch: buffer = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 881
score: 98.72579345703124
patch: increment CaMeL Iterations CaMeL Counter > - 0 ;
rank: 881
score: 98.62932671440973
patch: increment CaMeL Iterations CaMeL Counter < 0 &&
rank: 881
score: 98.50047302246094
patch: int first CaMeL Iteration = 1 ;
rank: 881
score: 98.28287179129464
patch: work $NUMBER$ ( residuals ) ;
rank: 881
score: 98.0377197265625
patch: p = current ;
rank: 882
score: 98.84667358398437
patch: current = increment CaMeL Iterations CaMeL Counter ) ;
rank: 882
score: 98.83000044389205
patch: Dim . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 882
score: 98.72572157118056
patch: increment CaMeL Iterations CaMeL Counter != ) {
rank: 882
score: 98.62911648220486
patch: increment CaMeL Iterations CaMeL Counter ( current ,
rank: 882
score: 98.49935150146484
patch: double delta = $NUMBER$ . 0 ;
rank: 882
score: 98.280517578125
patch: diag CaMeL R = 0 ;
rank: 882
score: 98.0315673828125
patch: state = current ;
rank: 883
score: 98.8989894701087
patch: increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter ++ ; increment CaMeL Iterations CaMeL Counter = 1 ;
rank: 883
score: 98.82378595525569
patch: caret = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 883
score: 98.72456665039063
patch: increment CaMeL Iterations CaMeL Counter ( ) ; _
rank: 883
score: 98.62874348958333
patch: increment CaMeL Iterations CaMeL Counter > 0 )
rank: 883
score: 98.5501480102539
patch: qr CaMeL Decomposition ( this ) ;
rank: 883
score: 98.45010811941964
patch: int CaMeL Value = current ;
rank: 883
score: 98.27742222377232
patch: old CaMeL X = 0 ;
rank: 883
score: 98.02640787760417
patch: synchronized ( diag ) {
rank: 884
score: 98.89828889266305
patch: if ( increment CaMeL Iterations CaMeL Counter ( ) ) { increment CaMeL Iterations CaMeL Counter ( ) ; } * /
rank: 884
score: 98.84153442382812
patch: try increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 884
score: 98.48509979248047
patch: double first CaMeL Iteration = current ;
rank: 884
score: 98.26611328125
patch: int max = 0 ;
rank: 884
score: 98.02137451171875
patch: l = current ;
rank: 885
score: 98.898193359375
patch: symbol = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 885
score: 98.72145385742188
patch: increment CaMeL Iterations CaMeL Counter - ( ) ;
rank: 885
score: 98.62447102864583
patch: increment CaMeL Iterations CaMeL Counter ( 1 ||
rank: 885
score: 98.5445327758789
patch: do CaMeL Optimize ( true ) ;
rank: 885
score: 98.48303985595703
patch: increment CaMeL Iterations CaMeL Counter ( }
rank: 885
score: 98.01801147460938
patch: previous = current ;
rank: 886
score: 98.89774753736413
patch: if ( this . increment CaMeL Iterations CaMeL Counter == 0 ) { increment CaMeL Iterations CaMeL Counter = false ; }
rank: 886
score: 98.82188831676136
patch: hint = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 886
score: 98.72123718261719
patch: Iterations [ 0 ] = null ;
rank: 886
score: 98.54257202148438
patch: increment CaMeL Iterations CaMeL Counter ( _
rank: 886
score: 98.48057556152344
patch: double [ ] diag = null ;
rank: 886
score: 98.25612967354911
patch: lm CaMeL Par = true ;
rank: 886
score: 98.01734924316406
patch: return current ;
rank: 887
score: 98.89717433763587
patch: this . increment CaMeL Iterations CaMeL Counter ( ) ; this . increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 887
score: 98.83203125
patch: final ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 887
score: 98.82185502485795
patch: cancelled = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 887
score: 98.71922607421875
patch: increment CaMeL Iterations CaMeL Counter ( | ) ;
rank: 887
score: 98.62013244628906
patch: increment CaMeL Iterations CaMeL Counter ; ;
rank: 887
score: 98.54037475585938
patch: jacobian [ 0 ] = current ;
rank: 887
score: 98.47584533691406
patch: double first CaMeL Iteration = 1 ;
rank: 887
score: 98.25470842633929
patch: qr CaMeL Decomposition = current ;
rank: 887
score: 98.00780029296875
patch: i = current ;
rank: 888
score: 98.8306396484375
patch: do increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 888
score: 98.61924235026042
patch: increment CaMeL Iterations CaMeL Counter < 1 ||
rank: 888
score: 98.25426374162946
patch: x CaMeL Norm = diag ;
rank: 888
score: 97.99837036132813
patch: state = 0 ;
rank: 889
score: 98.89668605638587
patch: if ( increment CaMeL Iterations CaMeL Counter ) { increment CaMeL Iterations CaMeL Counter = increment CaMeL Iterations CaMeL Counter ; ;
rank: 889
score: 98.82748752170139
patch: increment CaMeL Iterations CaMeL Counter -= $NUMBER$ ;
rank: 889
score: 98.5287857055664
patch: diag [ current ] = current ;
rank: 889
score: 98.36670793805804
patch: double CaMeL Value = 0 ;
rank: 889
score: 98.25115966796875
patch: old CaMeL Res = 0 ;
rank: 889
score: 97.99799194335938
patch: n = current ;
rank: 890
score: 98.82470703125
patch: increment CaMeL Iterations CaMeL Counter ( break ) ;
rank: 890
score: 98.71709526909723
patch: increment CaMeL Iterations CaMeL Counter - ) ;
rank: 890
score: 98.61893039279514
patch: increment CaMeL Iterations CaMeL Counter 1 -- ;
rank: 890
score: 98.5281982421875
patch: } update CaMeL Jacobian ( ) ;
rank: 890
score: 97.98250732421874
patch: block = current ;
rank: 891
score: 98.81963556463069
patch: str = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 891
score: 98.71459350585937
patch: increment CaMeL Iterations CaMeL Counter ( ) ; --
rank: 891
score: 98.53173828125
patch: Iterations [ 0 ] = ) ;
rank: 891
score: 98.21914672851562
patch: switch ( true ) {
rank: 891
score: 97.97855224609376
patch: list = current ;
rank: 892
score: 98.81904296875
patch: increment CaMeL Iterations CaMeL Counter ( search ) ;
rank: 892
score: 98.8185702237216
patch: button = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 892
score: 98.52722930908203
patch: qr CaMeL Decomposition ( permutation ) ;
rank: 892
score: 98.52239990234375
patch: logger . out ( this ) ;
rank: 892
score: 98.19569091796875
patch: diag ( ) ;
rank: 892
score: 97.97072143554688
patch: inst = current ;
rank: 893
score: 98.81854802911931
patch: field = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 893
score: 98.52222442626953
patch: increment CaMeL Iterations CaMeL Counter ) {
rank: 893
score: 98.33057512555804
patch: if ( diag == 0 )
rank: 893
score: 98.17957560221355
patch: work $NUMBER$ ( ) ;
rank: 893
score: 97.97044677734375
patch: result = current ;
rank: 894
score: 98.81845925071023
patch: path = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 894
score: 98.70960828993056
patch: increment CaMeL Iterations CaMeL Counter ( ) ||
rank: 894
score: 98.52437591552734
patch: update CaMeL Jacobian ( , ) ;
rank: 894
score: 98.51298522949219
patch: logger . err ( $STRING$ ) ;
rank: 894
score: 98.32754080636161
patch: this . diag ( ) ;
rank: 894
score: 98.17212931315105
patch: int jacobian = 0 ;
rank: 894
score: 97.96615600585938
patch: entry = current ;
rank: 895
score: 98.81497802734376
patch: current = increment CaMeL Iterations CaMeL Counter ; ;
rank: 895
score: 98.5236587524414
patch: println ( x CaMeL Norm ) ;
rank: 895
score: 98.48526763916016
patch: return get CaMeL Iterations ( ) ;
rank: 895
score: 98.16270955403645
patch: int sum = 0 ;
rank: 895
score: 97.96575927734375
patch: prev = current ;
rank: 896
score: 98.46638488769531
patch: result [ 0 ] = ) ;
rank: 896
score: 98.46150970458984
patch: int first CaMeL Iteration = $NUMBER$ ;
rank: 896
score: 98.3046875
patch: double CaMeL Value = current ;
rank: 896
score: 97.9604248046875
patch: g = current ;
rank: 897
score: 98.8858309659091
patch: obj = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 897
score: 98.8021240234375
patch: increment CaMeL Iterations CaMeL Counter ( join ) ;
rank: 897
score: 98.70277913411458
patch: increment CaMeL Iterations CaMeL Counter ( ) /
rank: 897
score: 98.52165222167969
patch: } qr CaMeL Decomposition ( ) ;
rank: 897
score: 98.46113586425781
patch: int q CaMeL Ty = 0 ;
rank: 897
score: 97.9523681640625
patch: item = current ;
rank: 898
score: 98.809765625
patch: if ( increment CaMeL Iterations CaMeL Counter >= )
rank: 898
score: 98.51443481445312
patch: qr CaMeL Decomposition ( ) ; ;
rank: 898
score: 98.45906066894531
patch: double first CaMeL Iteration = $NUMBER$ ;
rank: 898
score: 98.45814732142857
patch: get CaMeL Iterations ( ) ;
rank: 898
score: 97.93958129882813
patch: retval = current ;
rank: 899
score: 98.80720825195313
patch: increment CaMeL Iterations CaMeL Counter ++ ; ; ;
rank: 899
score: 98.68020290798611
patch: increment CaMeL Iterations CaMeL Counter ( - ;
rank: 899
score: 98.45104217529297
patch: Iterations [ 0 ] ( ) ;
rank: 899
score: 98.1225077311198
patch: double max = 0 ;
rank: 899
score: 97.93827514648437
patch: return current ; }
rank: 900
score: 98.78916015625
patch: increment CaMeL Iterations CaMeL Counter * ( ) ;
rank: 900
score: 98.67780219184027
patch: increment CaMeL Iterations CaMeL Counter ( Integer .
rank: 900
score: 98.44866180419922
patch: double sum = 0 . 0 ;
rank: 900
score: 98.44656808035714
patch: logger . out ( ) ;
rank: 900
score: 98.11077880859375
patch: int max = 1 ;
rank: 900
score: 97.928466796875
patch: o = current ;
rank: 901
score: 98.804736328125
patch: increment CaMeL Iterations CaMeL Counter ( double ) ;
rank: 901
score: 98.50151062011719
patch: diag [ permutation ] = current ;
rank: 901
score: 98.44139099121094
patch: double q CaMeL Ty = 0 ;
rank: 901
score: 98.43463897705078
patch: return increment CaMeL Iterations CaMeL Counter ;
rank: 901
score: 97.91478271484375
patch: loop = current ;
rank: 902
score: 98.80223999023437
patch: increment CaMeL Iterations CaMeL Counter ( hash ) ;
rank: 902
score: 98.66457790798611
patch: Iterations [ - 0 ] = null ;
rank: 902
score: 98.50113677978516
patch: return new double [ cols ] ;
rank: 902
score: 98.43871307373047
patch: boolean x CaMeL Norm = 0 ;
rank: 902
score: 98.43305969238281
patch: j [ 0 ] = ) ;
rank: 902
score: 97.9036865234375
patch: z = current ;
rank: 903
score: 98.43531036376953
patch: int [ ] diag = current ;
rank: 903
score: 98.41305977957589
patch: synchronized ( int 1 ) {
rank: 903
score: 98.10071818033855
patch: double sum = 0 ;
rank: 903
score: 97.89368286132813
patch: VM = 0 ;
rank: 904
score: 98.79368286132812
patch: increment CaMeL Iterations CaMeL Counter . ( ) ;
rank: 904
score: 97.89037475585937
patch: statement = current ;
rank: 905
score: 98.79367065429688
patch: ) { increment CaMeL Iterations CaMeL Counter ++ ;
rank: 905
score: 98.42984771728516
patch: boolean x CaMeL Norm = true ;
rank: 905
score: 98.31903076171875
patch: logger . arraycopy ( ) ;
rank: 905
score: 97.88988647460937
patch: c = current ;
rank: 906
score: 98.7932373046875
patch: increment CaMeL Iterations CaMeL Counter ( sum ) ;
rank: 906
score: 98.65240478515625
patch: increment CaMeL Iterations CaMeL Counter ( start .
rank: 906
score: 98.31551688058036
patch: Iterations = new int ) ;
rank: 906
score: 98.068603515625
patch: int max = $NUMBER$ ;
rank: 906
score: 97.87367553710938
patch: if ( current !=
rank: 907
score: 98.79170057508681
patch: increment CaMeL Iterations CaMeL Counter -= 1 ;
rank: 907
score: 98.42671966552734
patch: double [ ] point = current ;
rank: 907
score: 98.41884068080357
patch: if ( x CaMeL Norm )
rank: 907
score: 98.23777553013393
patch: for ( ; ; ) ;
rank: 907
score: 98.06788126627605
patch: int residuals = 0 ;
rank: 907
score: 97.8697509765625
patch: table = current ;
rank: 908
score: 98.78847045898438
patch: previous = increment CaMeL Iterations CaMeL Counter ++ ;
rank: 908
score: 98.64482964409723
patch: increment CaMeL Iterations CaMeL Counter ( , ;
rank: 908
score: 98.42658233642578
patch: boolean first CaMeL Iteration = 1 ;
rank: 908
score: 98.41409737723214
patch: lm CaMeL Par = null ;
rank: 908
score: 98.2247314453125
patch: System . arraycopy ( ) ;
rank: 908
score: 98.05165608723958
patch: x CaMeL Norm ++ ;
rank: 908
score: 97.86795043945312
patch: e = current ;
rank: 909
score: 98.83272094726563
patch: throw new Runtime CaMeL Exception ( ) ; }
rank: 909
score: 98.7385986328125
patch: increment CaMeL Iterations CaMeL Counter ( chars ) ;
rank: 909
score: 98.22418212890625
patch: for ( ; ) {
rank: 909
score: 97.85853271484375
patch: v = current ;
rank: 910
score: 98.62981499565973
patch: increment CaMeL Iterations CaMeL Counter ( ( {
rank: 910
score: 98.42525482177734
patch: int first CaMeL Iteration = true ;
rank: 910
score: 98.21695382254464
patch: int start = - 1 ;
rank: 910
score: 97.85535888671875
patch: tmp = null ;
rank: 911
score: 98.77880859375
patch: increment CaMeL Iterations CaMeL Counter ( float ) ;
rank: 911
score: 98.62642415364583
patch: increment CaMeL Iterations CaMeL Counter ( false ;
rank: 911
score: 98.40472412109375
patch: current = current ; }
rank: 911
score: 98.20734514508929
patch: for ( ; - ) {
rank: 911
score: 97.85296630859375
patch: temp = current ;
rank: 912
score: 98.77877807617188
patch: increment CaMeL Iterations CaMeL Counter ( random ) ;
rank: 912
score: 98.72731323242188
patch: increment CaMeL Iterations CaMeL Counter ( wait ) ;
rank: 912
score: 98.0682373046875
patch: diag = current ;
rank: 912
score: 98.00571695963542
patch: work $NUMBER$ = 0 ;
rank: 912
score: 97.85257568359376
patch: r = current ;
rank: 913
score: 98.60734049479167
patch: increment CaMeL Iterations CaMeL Counter ( ] .
rank: 913
score: 98.20150320870536
patch: if ( ( ) ) {
rank: 913
score: 98.06597900390625
patch: double delta = 1 ;
rank: 913
score: 97.99825032552083
patch: switch ( cols ) {
rank: 913
score: 97.8519999186198
patch: try {
rank: 914
score: 98.8039794921875
patch: continue increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 914
score: 98.77713351779514
patch: final increment CaMeL Iterations CaMeL Counter ++ ;
rank: 914
score: 98.71753540039063
patch: increment CaMeL Iterations CaMeL Counter / ( ) ;
rank: 914
score: 98.6041259765625
patch: increment CaMeL Iterations CaMeL Counter ( ) ,
rank: 914
score: 98.19288853236607
patch: assert new new new ) ;
rank: 914
score: 98.05657958984375
patch: diag = 0 ;
rank: 914
score: 97.9856465657552
patch: jacobian ( residuals ) ;
rank: 914
score: 97.84204711914063
patch: ret = current ;
rank: 915
score: 98.776171875
patch: / * increment CaMeL Iterations CaMeL Counter ++ ;
rank: 915
score: 98.17769077845982
patch: logger . err ( ) ;
rank: 915
score: 98.0545654296875
patch: double max = 1 ;
rank: 915
score: 97.96873982747395
patch: switch ( current ) {
rank: 915
score: 97.84160766601562
patch: event = null ;
rank: 916
score: 98.6016845703125
patch: increment CaMeL Iterations CaMeL Counter = null ;
rank: 916
score: 98.16569010416667
patch: System . out . ;
rank: 916
score: 97.96316528320312
patch: diag ( current ) ;
rank: 916
score: 97.84107055664063
patch: synchronized ( point )
rank: 917
score: 98.77276000976562
patch: increment CaMeL Iterations CaMeL Counter + ( ) ;
rank: 917
score: 98.70435791015625
patch: increment CaMeL Iterations CaMeL Counter ( current . ;
rank: 917
score: 98.4803695678711
patch: if ( ) { System . ;
rank: 917
score: 97.9580078125
patch: work $NUMBER$ = current ;
rank: 917
score: 97.83308715820313
patch: this = current ;
rank: 918
score: 98.70320434570313
patch: increment CaMeL Iterations CaMeL Counter ( stream ) ;
rank: 918
score: 98.28421456473214
patch: x CaMeL Norm += 0 ;
rank: 918
score: 98.01278686523438
patch: boolean delta = true ;
rank: 918
score: 97.8323974609375
patch: s = current ;
rank: 919
score: 98.769775390625
patch: new ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 919
score: 98.46138000488281
patch: Iterations [ 1 ] = null ;
rank: 919
score: 98.31280517578125
patch: diag CaMeL R ( ) ;
rank: 919
score: 98.1073506673177
patch: sleep ( 0 ) ;
rank: 919
score: 97.95428466796875
patch: int jacobian = 1 ;
rank: 919
score: 97.82660522460938
patch: ae = current ;
rank: 920
score: 98.76633029513889
patch: increment CaMeL Iterations CaMeL Counter . ) ;
rank: 920
score: 98.57395426432292
patch: increment CaMeL Iterations CaMeL Counter ( ++ ;
rank: 920
score: 98.45159149169922
patch: throw new Error ( $STRING$ ) ;
rank: 920
score: 98.29757254464286
patch: diag = 0 . 0 ;
rank: 920
score: 98.1054178873698
patch: fail ( $STRING$ ) ;
rank: 920
score: 97.99838256835938
patch: return x CaMeL Norm ;
rank: 920
score: 97.95340983072917
patch: double jacobian = 0 ;
rank: 920
score: 97.82174072265624
patch: if ( ! )
rank: 921
score: 98.7614501953125
patch: increment CaMeL Iterations CaMeL Counter = ) ; ;
rank: 921
score: 98.44047328404018
patch: Iterations [ 0 ] = )
rank: 921
score: 98.28315952845982
patch: boolean first CaMeL Iteration ++ ;
rank: 921
score: 98.10042317708333
patch: int * * ) {
rank: 921
score: 97.94997151692708
patch: diag ( 0 ) ;
rank: 921
score: 97.82103271484375
patch: tree = current ;
rank: 922
score: 98.76124877929688
patch: current = increment CaMeL Iterations CaMeL Counter ( ;
rank: 922
score: 98.41140747070312
patch: throw new Exception ( $STRING$ ) ;
rank: 922
score: 98.08219604492187
patch: int * * /
rank: 922
score: 97.98573811848958
patch: boolean first CaMeL Iteration ;
rank: 922
score: 97.9442138671875
patch: synchronized ( beta ) {
rank: 922
score: 97.82079467773437
patch: current = null ;
rank: 923
score: 98.0751953125
patch: int start = 0 ;
rank: 923
score: 97.94186401367188
patch: switch ( cost ) {
rank: 923
score: 97.81671142578125
patch: i = true ;
rank: 924
score: 98.25666155133929
patch: if ( ) { ) ;
rank: 924
score: 98.06766764322917
patch: this . ( ) ;
rank: 924
score: 97.9774658203125
patch: sum = 0 ;
rank: 924
score: 97.94160970052083
patch: dk ( residuals ) ;
rank: 924
score: 97.80463256835938
patch: synchronized ( ) {
rank: 925
score: 98.75503540039062
patch: increment CaMeL Iterations CaMeL Counter ( cos ) ;
rank: 925
score: 98.24952915736607
patch: if ( ) { break ;
rank: 925
score: 98.04722086588542
patch: Iterations [ 0 ] =
rank: 925
score: 97.79537963867188
patch: m = null ;
rank: 926
score: 98.748291015625
patch: increment CaMeL Iterations CaMeL Counter ( ; ;
rank: 926
score: 98.46898651123047
patch: Thread . sleep ( $NUMBER$ ) ;
rank: 926
score: 98.26301792689732
patch: assert first CaMeL Iteration ) ;
rank: 926
score: 98.04446411132812
patch: int * * * /
rank: 926
score: 97.93231201171875
patch: return diag CaMeL R ;
rank: 926
score: 97.88589477539062
patch: pj = 0 ;
rank: 926
score: 97.79434204101562
patch: g = 0 ;
rank: 927
score: 98.74805365668402
patch: increment CaMeL Iterations CaMeL Counter *= $NUMBER$ ;
rank: 927
score: 98.38691711425781
patch: current . remove ( current ) ;
rank: 927
score: 98.24311174665179
patch: if ( ) { ) {
rank: 927
score: 98.22582135881696
patch: diag CaMeL R = current ;
rank: 927
score: 98.0352294921875
patch: if ( ) ;
rank: 927
score: 97.853173828125
patch: point = current ;
rank: 927
score: 97.791845703125
patch: return true ; }
rank: 928
score: 98.73881700303819
patch: increment CaMeL Iterations CaMeL Counter ++ ; )
rank: 928
score: 98.23753138950893
patch: if ( ) { try {
rank: 928
score: 98.1800537109375
patch: update CaMeL Jacobian ( _
rank: 928
score: 98.01920776367187
patch: for ( ) {
rank: 928
score: 97.86497192382812
patch: current = 0 ;
rank: 928
score: 97.83173828125
patch: pj = current ;
rank: 928
score: 97.78309936523438
patch: try { current .
rank: 929
score: 98.37919616699219
patch: increment CaMeL Iterations CaMeL Counter ( current
rank: 929
score: 98.22629220145089
patch: if ( ) { continue ;
rank: 929
score: 98.00626627604167
patch: int * * int *
rank: 929
score: 97.863720703125
patch: x CaMeL Norm ;
rank: 929
score: 97.829296875
patch: sum = current ;
rank: 929
score: 97.78303833007813
patch: state = true ;
rank: 930
score: 98.73062472873264
patch: increment CaMeL Iterations CaMeL Counter ) ; ;
rank: 930
score: 98.36835479736328
patch: System . exit ( 0 ) ;
rank: 930
score: 98.20736258370536
patch: if ( < 0 ) {
rank: 930
score: 98.11610921223958
patch: update CaMeL Jacobian ++ ;
rank: 930
score: 97.9997049967448
patch: if ( int ) {
rank: 930
score: 97.833740234375
patch: break ;
rank: 930
score: 97.81080932617188
patch: delta = 0 ;
rank: 930
score: 97.78194580078124
patch: node = null ;
rank: 931
score: 97.9957784016927
patch: int * for 0 ;
rank: 931
score: 97.80242919921875
patch: dispose ( ) ;
rank: 931
score: 97.77935791015625
patch: inst = null ;
rank: 932
score: 98.69426812065973
patch: increment CaMeL Iterations CaMeL Counter -- ) ;
rank: 932
score: 98.33617292131696
patch: current . remove ( ) ;
rank: 932
score: 97.989306640625
patch: int * ) {
rank: 932
score: 97.78566284179688
patch: sum = 1 ;
rank: 932
score: 97.77633056640624
patch: m = 0 ;
rank: 933
score: 98.6917724609375
patch: increment CaMeL Iterations CaMeL Counter *= ) ;
rank: 933
score: 98.60690646701389
patch: increment CaMeL Iterations CaMeL Counter 1 ) ;
rank: 933
score: 98.15150669642857
patch: Iterations [ 1 ] = )
rank: 933
score: 98.0620829264323
patch: new = current ; }
rank: 933
score: 97.97810872395833
patch: / * for 0 ;
rank: 933
score: 97.78541259765625
patch: jacobian ( ) ;
rank: 933
score: 97.77557983398438
patch: a = current ;
rank: 934
score: 98.15878295898438
patch: int diag = 0 ;
rank: 934
score: 98.10321044921875
patch: if ( * ) {
rank: 934
score: 97.96661376953125
patch: for ( int ) {
rank: 934
score: 97.77202758789062
patch: synchronized ( current )
rank: 934
score: 97.76362915039063
patch: res = current ;
rank: 935
score: 98.68294270833333
patch: current . get CaMeL Iterations ( ) ;
rank: 935
score: 98.05469767252605
patch: if ( ) { ;
rank: 935
score: 98.02239990234375
patch: previous = current ; }
rank: 935
score: 97.94248453776042
patch: int * * * ;
rank: 935
score: 97.77043151855469
patch: if ( )
rank: 935
score: 97.7576171875
patch: repaint ( ) ;
rank: 936
score: 98.66694471571181
patch: increment CaMeL Iterations CaMeL Counter + ) ;
rank: 936
score: 98.13657633463542
patch: int break = 0 ;
rank: 936
score: 97.9961446126302
patch: qr CaMeL Decomposition ( _
rank: 936
score: 97.928076171875
patch: int * * ;
rank: 936
score: 97.77006225585937
patch: cur = 0 ;
rank: 936
score: 97.74834594726562
patch: dk ( ) ;
rank: 936
score: 97.73642578125
patch: reset ( ) ;
rank: 937
score: 98.66644287109375
patch: ; increment CaMeL Iterations CaMeL Counter ++ ;
rank: 937
score: 98.03392333984375
patch: Iterations ( ) ;
rank: 937
score: 97.9932149251302
patch: return first CaMeL Iteration ;
rank: 937
score: 97.92050170898438
patch: if ( ! ) ;
rank: 937
score: 97.76407470703126
patch: if ( permutation )
rank: 938
score: 98.56501007080078
patch: increment CaMeL Iterations CaMeL Counter ( 1
rank: 938
score: 97.98770141601562
patch: pk = current ; }
rank: 938
score: 97.914794921875
patch: int * * ) ;
rank: 938
score: 97.7616455078125
patch: VM = current ;
rank: 938
score: 97.72803955078125
patch: System . out ;
rank: 939
score: 98.65346950954861
patch: increment CaMeL Iterations CaMeL Counter = false ;
rank: 939
score: 98.51399230957031
patch: increment CaMeL Iterations CaMeL Counter ( $NUMBER$
rank: 939
score: 98.01560974121094
patch: return ) ;
rank: 939
score: 97.982421875
patch: res = current ; }
rank: 939
score: 97.9086405436198
patch: if 0 . 0 ;
rank: 939
score: 97.76026611328125
patch: t = current ;
rank: 939
score: 97.72456665039063
patch: diag = current .
rank: 940
score: 98.50538853236607
patch: if ( ) return null ;
rank: 940
score: 98.14260428292411
patch: Math . max ( ) ;
rank: 940
score: 98.05795288085938
patch: int chars = 0 ;
rank: 940
score: 97.9072977701823
patch: int * int * /
rank: 940
score: 97.75794677734375
patch: VM = null ;
rank: 940
score: 97.71550903320312
patch: diag = null ;
rank: 941
score: 98.63056098090277
patch: previous = increment CaMeL Iterations CaMeL Counter ;
rank: 941
score: 98.13714599609375
patch: Thread . sleep ( ) ;
rank: 941
score: 97.97813924153645
patch: Iterations ( 0 ) ;
rank: 941
score: 97.89989217122395
patch: result [ 0 ] =
rank: 941
score: 97.7541259765625
patch: if ( current ==
rank: 941
score: 97.69619140625
patch: point = 0 ;
rank: 941
score: 97.6193359375
patch: prev = 0 ;
rank: 942
score: 98.45452117919922
patch: if ( ) { break ; }
rank: 942
score: 97.88517252604167
patch: j [ 0 ] =
rank: 942
score: 97.7535400390625
patch: interrupt ( ) ;
rank: 942
score: 97.61723022460937
patch: res = 0 ;
rank: 943
score: 98.61496988932292
patch: new increment CaMeL Iterations CaMeL Counter ++ ;
rank: 943
score: 98.00081380208333
patch: int delta = 1 ;
rank: 943
score: 97.9553955078125
patch: pk = current ;
rank: 943
score: 97.94460042317708
patch: System . out . {
rank: 943
score: 97.87721557617188
patch: int * int *
rank: 943
score: 97.752001953125
patch: if ( permutation ==
rank: 943
score: 97.61676025390625
patch: d = current ;
rank: 944
score: 98.44364929199219
patch: increment CaMeL Iterations CaMeL Counter ( 0
rank: 944
score: 98.08567301432292
patch: while ( ! ) {
rank: 944
score: 97.99920654296875
patch: double delta = $NUMBER$ ;
rank: 944
score: 97.94894409179688
patch: assert first CaMeL Iteration )
rank: 944
score: 97.90205688476563
patch: ) { ) ;
rank: 944
score: 97.75081787109374
patch: ke = current ;
rank: 944
score: 97.67658081054688
patch: c = 0 ;
rank: 944
score: 97.61249389648438
patch: tmp = 0 ;
rank: 945
score: 98.60633087158203
patch: increment CaMeL Iterations CaMeL Counter = ;
rank: 945
score: 98.01564534505208
patch: assert current != null ;
rank: 945
score: 97.99460856119792
patch: double start = 0 ;
rank: 945
score: 97.89145914713542
patch: Iterations [ 0 ] ;
rank: 945
score: 97.81507568359375
patch: start ( ) ;
rank: 945
score: 97.75060424804687
patch: packet = current ;
rank: 945
score: 97.669970703125
patch: jacobian = 0 ;
rank: 945
score: 97.60397338867188
patch: f = 0 ;
rank: 946
score: 98.5784683227539
patch: increment CaMeL Iterations CaMeL Counter . ;
rank: 946
score: 97.99306233723958
patch: double point = 0 ;
rank: 946
score: 97.91619262695312
patch: while ( false )
rank: 946
score: 97.7473876953125
patch: if ( ! current
rank: 946
score: 97.66446533203126
patch: fail ( ) ;
rank: 947
score: 98.42015075683594
patch: increment CaMeL Iterations CaMeL Counter ( this
rank: 947
score: 97.99190266927083
patch: double break = 0 ;
rank: 947
score: 97.97348022460938
patch: if ( ) break ;
rank: 947
score: 97.90233764648437
patch: new = current ;
rank: 947
score: 97.85074462890626
patch: assert ( ) ;
rank: 947
score: 97.80597534179688
patch: end ( ) ;
rank: 947
score: 97.74071655273437
patch: header = current ;
rank: 948
score: 98.54122161865234
patch: increment CaMeL Iterations CaMeL Counter ; )
rank: 948
score: 97.87389526367187
patch: synchronized ( true )
rank: 948
score: 97.84561157226562
patch: skip ( ) ;
rank: 948
score: 97.77467041015625
patch: long * * increment
rank: 948
score: 97.7376220703125
patch: n = current .
rank: 948
score: 97.6602783203125
patch: revalidate ( ) ;
rank: 949
score: 98.27151925223214
patch: Thread . start ( ) ;
rank: 949
score: 97.9801737467448
patch: boolean max = true ;
rank: 949
score: 97.83436279296875
patch: if ( current ;
rank: 949
score: 97.8182373046875
patch: Counter ( ) ;
rank: 949
score: 97.7324951171875
patch: g = null ;
rank: 949
score: 97.56648559570313
patch: if ( cost ;
rank: 950
score: 98.46807098388672
patch: current = new Double ( ) ;
rank: 950
score: 98.24240548270089
patch: fail ( $STRING$ ) ; }
rank: 950
score: 97.8262939453125
patch: if ( ) continue ;
rank: 950
score: 97.80997924804687
patch: return ) ; }
rank: 950
score: 97.72935791015625
patch: cur = null ;
rank: 951
score: 98.46644592285156
patch: increment CaMeL Iterations CaMeL Counter <= )
rank: 951
score: 98.1858901977539
patch: break ; }
rank: 951
score: 97.96649169921875
patch: boolean max = 0 ;
rank: 951
score: 97.8127950032552
patch: char [ ] ) {
rank: 951
score: 97.80835723876953
patch: assert ) ;
rank: 951
score: 97.79328002929688
patch: jacobian = current ;
rank: 951
score: 97.74390869140625
patch: redo ( ) ;
rank: 951
score: 97.72841796875
patch: if ( current .
rank: 951
score: 97.55491333007812
patch: while ( ) {
rank: 952
score: 97.81051635742188
patch: pos = - 1 ;
rank: 952
score: 97.7958984375
patch: int ) {
rank: 952
score: 97.7353515625
patch: int * * else
rank: 952
score: 97.72774658203124
patch: curr = current ;
rank: 952
score: 97.63805541992187
patch: dk = 0 ;
rank: 953
score: 98.4395751953125
patch: increment CaMeL Iterations CaMeL Counter = )
rank: 953
score: 97.95223999023438
patch: int value = 0 ;
rank: 953
score: 97.72421264648438
patch: b = current ;
rank: 953
score: 97.552197265625
patch: pos = 0 ;
rank: 954
score: 97.95168050130208
patch: boolean delta = 0 ;
rank: 954
score: 97.79190063476562
patch: assert current == null ;
rank: 954
score: 97.76821899414062
patch: return * ) ;
rank: 954
score: 97.731103515625
patch: assert new ) ;
rank: 954
score: 97.71576538085938
patch: z = null ;
rank: 954
score: 97.62826538085938
patch: if ( this ;
rank: 955
score: 98.42562103271484
patch: if ( ! ) return false ;
rank: 955
score: 98.13407679966518
patch: if ( ) return false ;
rank: 955
score: 97.76732788085937
patch: changed = true ;
rank: 955
score: 97.71904754638672
patch: int * *
rank: 955
score: 97.7142822265625
patch: member = current ;
rank: 955
score: 97.708203125
patch: commit ( ) ;
rank: 955
score: 97.544482421875
patch: break ; break ;
rank: 956
score: 98.41702270507812
patch: increment CaMeL Iterations CaMeL Counter >= )
rank: 956
score: 97.93501790364583
patch: double delta = point ;
rank: 956
score: 97.76261393229167
patch: int ( - 1 )
rank: 956
score: 97.74187622070312
patch: return ) ) ;
rank: 956
score: 97.7185546875
patch: sleep ( ) ;
rank: 956
score: 97.71409912109375
patch: head = null ;
rank: 956
score: 97.60764770507812
patch: if ( point ;
rank: 957
score: 97.76228841145833
patch: int ( 1 ) ;
rank: 957
score: 97.72591552734374
patch: j ( ) ;
rank: 957
score: 97.7128173828125
patch: z = 0 ;
rank: 957
score: 97.70086669921875
patch: current = true ;
rank: 957
score: 97.69243621826172
patch: if $NUMBER$ ;
rank: 957
score: 97.52545776367188
patch: diag [ ) ;
rank: 958
score: 98.28340366908482
patch: current = current . ) ;
rank: 958
score: 98.1010498046875
patch: return null ; }
rank: 958
score: 97.72567138671874
patch: cancelled = true ;
rank: 958
score: 97.71263427734375
patch: queue = current ;
rank: 958
score: 97.70023803710937
patch: k = current ;
rank: 958
score: 97.647998046875
patch: int * * *
rank: 958
score: 97.60145874023438
patch: delta = 1 ;
rank: 959
score: 98.27772739955357
patch: notify CaMeL All ( ) ;
rank: 959
score: 98.03215942382812
patch: return false ; }
rank: 959
score: 97.70804443359376
patch: loop = 0 ;
rank: 959
score: 97.69920654296875
patch: try { ) ;
rank: 959
score: 97.64716186523438
patch: j = null ;
rank: 960
score: 97.91285196940105
patch: int name = 0 ;
rank: 960
score: 97.70675659179688
patch: obj = current ;
rank: 960
score: 97.6436996459961
patch: int * ;
rank: 960
score: 97.5918701171875
patch: logger . out ;
rank: 961
score: 98.22310093470982
patch: if ( ! ) continue ;
rank: 961
score: 97.70519409179687
patch: iter = current ;
rank: 961
score: 97.689111328125
patch: / * ) {
rank: 961
score: 97.51270751953125
patch: s = 0 ;
rank: 962
score: 98.22023228236607
patch: if ( ) return current ;
rank: 962
score: 97.93270874023438
patch: return new ) ; }
rank: 962
score: 97.89866129557292
patch: List current = current ;
rank: 962
score: 97.699951171875
patch: exception = current ;
rank: 962
score: 97.63377075195312
patch: previous = true ;
rank: 962
score: 97.63331298828125
patch: if ( ) int
rank: 962
score: 97.51061401367187
patch: f = current ;
rank: 963
score: 98.20009358723958
patch: for ( ; ; )
rank: 963
score: 97.9188944498698
patch: wait ( 0 ) ;
rank: 963
score: 97.69894409179688
patch: p = null ;
rank: 963
score: 97.62777709960938
patch: long * * /
rank: 963
score: 97.58829345703126
patch: diag = this ;
rank: 964
score: 98.13871256510417
patch: current = current . ;
rank: 964
score: 97.91323852539062
patch: wait ( ) ;
rank: 964
score: 97.69760131835938
patch: consume ( ) ;
rank: 964
score: 97.655908203125
patch: R = current ;
rank: 964
score: 97.63172607421875
patch: pop ( ) ;
rank: 964
score: 97.627197265625
patch: int * /
rank: 964
score: 97.50369873046876
patch: d = 0 ;
rank: 965
score: 97.68428955078124
patch: m = true ;
rank: 965
score: 97.64926147460938
patch: Optimize ( ) ;
rank: 965
score: 97.62127685546875
patch: Iterations = null ;
rank: 965
score: 97.5755615234375
patch: k = 0 ;
rank: 965
score: 97.458984375
patch: else {
rank: 966
score: 98.06078084309895
patch: sleep ( $NUMBER$ ) ;
rank: 966
score: 97.85009155273437
patch: return this ; }
rank: 966
score: 97.683349609375
patch: synchronized ( this )
rank: 966
score: 97.62022705078125
patch: done = false ;
rank: 966
score: 97.58350830078125
patch: done = true ;
rank: 967
score: 97.67694702148438
patch: var = current ;
rank: 967
score: 97.60726318359374
patch: result [ ) ;
rank: 967
score: 97.60153198242188
patch: System . ;
rank: 967
score: 97.544140625
patch: failed = true ;
rank: 967
score: 97.31452178955078
patch: return 0 ;
rank: 968
score: 97.98812866210938
patch: current = ) ;
rank: 968
score: 97.67540893554687
patch: ch = current ;
rank: 968
score: 97.60152587890624
patch: other = current ;
rank: 968
score: 97.5877456665039
patch: System . *
rank: 968
score: 97.529443359375
patch: lock ( ) ;
rank: 968
score: 97.30412292480469
patch: work $NUMBER$ ;
rank: 969
score: 97.67196044921874
patch: position = 0 ;
rank: 969
score: 97.59921875
patch: System . arraycopy (
rank: 969
score: 97.56383056640625
patch: throw new Optimization CaMeL
rank: 969
score: 97.3019790649414
patch: else { {
rank: 970
score: 97.69986572265626
patch: success = false ;
rank: 970
score: 97.67103881835938
patch: arg = current ;
rank: 970
score: 97.59456787109374
patch: previous = null ;
rank: 970
score: 97.18737030029297
patch: double ) {
rank: 971
score: 97.69315185546876
patch: success = true ;
rank: 971
score: 97.64436340332031
patch: return true ;
rank: 971
score: 97.578515625
patch: int * ) ;
rank: 971
score: 97.47261047363281
patch: logger . {
rank: 971
score: 97.34269714355469
patch: / * /
rank: 971
score: 97.15570068359375
patch: continue ;
rank: 972
score: 97.62843017578125
patch: unlock ( ) ;
rank: 972
score: 97.61940002441406
patch: if ( permutation
rank: 972
score: 97.61206665039063
patch: return - 0 ;
rank: 972
score: 97.5811767578125
patch: current = this ;
rank: 972
score: 97.57211303710938
patch: Iterations = ) ;
rank: 972
score: 97.50079345703125
patch: final int ) {
rank: 972
score: 97.3228530883789
patch: throw null ;
rank: 972
score: 97.08773803710938
patch: this ;
rank: 973
score: 97.61402587890625
patch: return ( ) ;
rank: 973
score: 97.578515625
patch: switch ( true )
rank: 973
score: 97.56746826171874
patch: long * * ;
rank: 973
score: 97.55516560872395
patch: synchronized (
rank: 973
score: 97.41456604003906
patch: / * ;
rank: 973
score: 97.28923034667969
patch: throw current ;
rank: 973
score: 97.08258056640625
patch: return null ;
rank: 974
score: 97.60315551757813
patch: return new ) ;
rank: 974
score: 97.56307983398438
patch: double * * increment
rank: 974
score: 97.54976654052734
patch: -- cols ;
rank: 974
score: 97.482421875
patch: ok = true ;
rank: 974
score: 97.36854553222656
patch: Iterations ) {
rank: 974
score: 97.2676493326823
patch: if (
rank: 975
score: 97.5853271484375
patch: failed = false ;
rank: 975
score: 97.56847534179687
patch: / * / {
rank: 975
score: 97.55341796875
patch: double * * /
rank: 975
score: 97.52445220947266
patch: if ( current
rank: 975
score: 97.46442260742188
patch: changed = false ;
rank: 975
score: 97.32280731201172
patch: throw ) ;
rank: 975
score: 97.04356384277344
patch: this . {
rank: 976
score: 97.73746337890626
patch: for ( ; )
rank: 976
score: 97.58531494140625
patch: ok = false ;
rank: 976
score: 97.53877563476563
patch: int * * increment
rank: 976
score: 97.47545623779297
patch: if ( qr
rank: 976
score: 97.46077270507813
patch: modified = true ;
rank: 976
score: 97.41262817382812
patch: continue ; }
rank: 976
score: 97.29742431640625
patch: } ) ;
rank: 976
score: 97.0360107421875
patch: else continue ;
rank: 977
score: 97.72625732421875
patch: previous = false ;
rank: 977
score: 97.5851318359375
patch: break ; } }
rank: 977
score: 97.53516845703125
patch: double * ) {
rank: 977
score: 97.528857421875
patch: Qt ( ) ;
rank: 977
score: 97.45686645507813
patch: cancelled = false ;
rank: 977
score: 97.39998626708984
patch: ++ cols ;
rank: 977
score: 97.28941345214844
patch: = current ;
rank: 977
score: 97.27583312988281
patch: final ) {
rank: 977
score: 97.1968994140625
patch: if ( }
rank: 977
score: 97.0291976928711
patch: * / {
rank: 978
score: 97.69561767578125
patch: deallocate ( ) ;
rank: 978
score: 97.534375
patch: int * value =
rank: 978
score: 97.38749694824219
patch: -- 0 ;
rank: 978
score: 97.23497009277344
patch: final ) ;
rank: 978
score: 97.16447448730469
patch: if ( !
rank: 978
score: 96.99663543701172
patch: if ( {
rank: 979
score: 97.56332397460938
patch: / * * /
rank: 979
score: 97.444921875
patch: eof = true ;
rank: 979
score: 97.31077575683594
patch: int value =
rank: 979
score: 97.26248168945312
patch: assert true ;
rank: 979
score: 97.23413848876953
patch: return ; .
rank: 979
score: 97.14425659179688
patch: int max ;
rank: 980
score: 97.12770080566406
patch: return diag ;
rank: 981
score: 97.62574462890625
patch: quit ( ) ;
rank: 981
score: 97.5523681640625
patch: state = ) {
rank: 981
score: 97.5074462890625
patch: diag = true ;
rank: 981
score: 97.3481674194336
patch: if ( point
rank: 981
score: 96.64520263671875
patch: { {
rank: 982
score: 97.40714721679687
patch: if ( ! ;
rank: 982
score: 97.23956298828125
patch: int ++ *
rank: 982
score: 97.20106506347656
patch: / ) ;
rank: 982
score: 97.04485321044922
patch: throw this ;
rank: 983
score: 97.61280517578125
patch: found = true ;
rank: 983
score: 97.1551742553711
patch: Counter ) {
rank: 983
score: 97.04437255859375
patch: return this ;
rank: 983
score: 96.44686889648438
patch: {
rank: 984
score: 97.58259887695313
patch: deleted = true ;
rank: 984
score: 97.3683853149414
patch: if ( ;
rank: 984
score: 97.24774932861328
patch: m ++ ;
rank: 984
score: 97.1508560180664
patch: j ++ ;
rank: 984
score: 97.14265441894531
patch: return point ;
rank: 984
score: 96.43724568684895
patch: double {
rank: 985
score: 97.58059692382812
patch: state = ) ;
rank: 985
score: 97.22943115234375
patch: ++ 0 ;
rank: 985
score: 97.20670318603516
patch: int start =
rank: 985
score: 97.06519571940105
patch: ) {
rank: 985
score: 96.99662780761719
patch: current -- ;
rank: 985
score: 96.42748006184895
patch: int {
rank: 986
score: 97.01319885253906
patch: double [ ]
rank: 987
score: 96.89454142252605
patch: ) ;
rank: 987
score: 96.5510762532552
patch: / *
rank: 987
score: 96.40635172526042
patch: * /
rank: 988
score: 97.55316772460938
patch: cleanup ( ) ;
rank: 988
score: 96.66030883789062
patch: / ;
rank: 988
score: 96.46339925130208
patch: System .
rank: 989
score: 97.17728424072266
patch: for ( !
rank: 989
score: 96.98931884765625
patch: for ( )
rank: 989
score: 96.66280110677083
patch: current ;
rank: 989
score: 96.58511352539062
patch: current .
rank: 989
score: 96.43038940429688
patch: this .
rank: 989
score: 96.37120564778645
patch: do {
rank: 990
score: 96.98420715332031
patch: long ) {
rank: 990
score: 96.24568684895833
patch: / /
rank: 991
score: 96.96351623535156
patch: i ++ ;
rank: 991
score: 96.69061279296875
patch: finally {
rank: 991
score: 95.65013885498047
patch: do
rank: 992
score: 97.17304229736328
patch: return false ;
rank: 992
score: 96.52168782552083
patch: break .
rank: 992
score: 96.26654052734375
patch: work $NUMBER$
rank: 992
score: 96.18324788411458
patch: System ;
rank: 992
score: 95.36225891113281
patch: /
rank: 993
score: 96.8494644165039
patch: final int )
rank: 993
score: 96.19015502929688
patch: * ;
rank: 993
score: 96.1703389485677
patch: java ;
rank: 993
score: 96.07159423828125
patch: true ;
rank: 993
score: 95.07717895507812
patch: }
rank: 994
score: 96.61238606770833
patch: int )
rank: 994
score: 96.45986938476562
patch: int *
rank: 994
score: 95.97657775878906
patch: else
rank: 994
score: 94.50480651855469
patch: ;
rank: 995
score: 97.1300048828125
patch: int ) ;
rank: 995
score: 96.34212239583333
patch: m :
rank: 995
score: 96.1200459798177
patch: logger ;
rank: 995
score: 96.0895487467448
patch: double }
rank: 995
score: 96.0111592610677
patch: Object )
rank: 995
score: 95.6007080078125
patch: try
rank: 995
score: 94.46089172363281
patch: current
rank: 996
score: 96.614013671875
patch: break )
rank: 996
score: 96.24530029296875
patch: j =
rank: 996
score: 94.43251037597656
patch: this
rank: 997
score: 95.35173034667969
patch: final
rank: 997
score: 94.37801361083984
patch: int
rank: 998
score: 96.22202555338542
patch: m /
rank: 998
score: 95.95984903971355
patch: double )
rank: 998
score: 94.32804870605469
patch: return
rank: 998
score: 94.3052978515625
patch: double
rank: 998
score: 94.22246551513672
patch: )
rank: 999
score: 94.19306945800781
patch: System
rank: 1000
score: 93.99917602539062
patch: break
rank: 1000
score: 93.90811157226562
patch: finally
