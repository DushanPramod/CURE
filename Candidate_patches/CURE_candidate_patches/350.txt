rank: 1
score: 99.83951822916667
patch: return ;
rank: 1
score: 99.51513671875
patch: else { return ;
rank: 1
score: 99.44438032670455
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) ;
rank: 1
score: 99.4159927368164
patch: return ; }
rank: 1
score: 99.34806315104167
patch: } else { return ;
rank: 1
score: 99.2957763671875
patch: return evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 1
score: 99.20426432291667
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 2
score: 99.36749267578125
patch: return ; } * /
rank: 2
score: 99.36406860351562
patch: return { return ;
rank: 2
score: 99.3566425030048
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ;
rank: 2
score: 99.33114188058036
patch: } else { return ; }
rank: 2
score: 99.32185668945313
patch: return ; return ;
rank: 2
score: 99.25849609375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 2
score: 99.0739517211914
patch: return false ;
rank: 3
score: 99.35255650111607
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ;
rank: 3
score: 99.33932495117188
patch: return return ;
rank: 3
score: 99.323974609375
patch: throw new Optimization CaMeL Exception ( ) ;
rank: 3
score: 99.30589076450893
patch: return ; if ; return ;
rank: 3
score: 99.27207438151042
patch: else { return ; }
rank: 3
score: 99.25490500710227
patch: return comparator . compare ( contracted , best ) ;
rank: 4
score: 99.31382399338942
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ;
rank: 4
score: 99.26510009765624
patch: return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 4
score: 99.25657958984375
patch: return return return ;
rank: 4
score: 99.2534891764323
patch: } else if return ;
rank: 4
score: 99.24834798177083
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 4
score: 99.24739213423295
patch: return evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 4
score: 99.11355251736111
patch: return ; return ; if ; return ;
rank: 4
score: 98.8888931274414
patch: return true ;
rank: 5
score: 99.30562650240384
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) best ;
rank: 5
score: 99.25353325737848
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 5
score: 99.24662780761719
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 5
score: 99.2454833984375
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 5
score: 99.04834856305804
patch: return ; return ; if ;
rank: 5
score: 98.87725219726562
patch: return - 1 ;
rank: 6
score: 99.212890625
patch: throw new Optimization CaMeL Exception ( $STRING$ ) ;
rank: 6
score: 99.15231323242188
patch: } return ;
rank: 6
score: 99.15152413504464
patch: else { return return ; }
rank: 6
score: 99.12268938337054
patch: else { return false ; }
rank: 6
score: 99.0867207845052
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 6
score: 99.04506429036458
patch: return ; return ; }
rank: 6
score: 98.82391967773438
patch: else if ( ;
rank: 7
score: 99.25222778320312
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ;
rank: 7
score: 99.25102095170455
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 7
score: 99.23055826822916
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ;
rank: 7
score: 99.10334777832031
patch: else { return ; } return ;
rank: 7
score: 99.08140211838942
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ;
rank: 7
score: 99.03955078125
patch: return ; return ; if return ;
rank: 8
score: 99.22796075994319
patch: return comparator . compare ( reflected , best ) ;
rank: 8
score: 99.22662353515625
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 8
score: 99.2003173828125
patch: return evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 8
score: 99.10517883300781
patch: } else {
rank: 8
score: 99.0650275735294
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 8
score: 99.03834751674107
patch: return ; return ; return ;
rank: 8
score: 98.79994419642857
patch: else if ( ; return ;
rank: 9
score: 99.24365234375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator ;
rank: 9
score: 99.22455303485577
patch: return evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 9
score: 99.22199358258929
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex
rank: 9
score: 99.19370339133523
patch: return evaluate CaMeL New CaMeL Simplex ( contracted ) ;
rank: 9
score: 99.09218052455357
patch: else { return ; return ;
rank: 9
score: 99.08370971679688
patch: } else { if ; return ;
rank: 9
score: 99.06307373046874
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 9
score: 99.03535461425781
patch: return ; ;
rank: 10
score: 99.21427154541016
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex } ;
rank: 10
score: 99.21059945913461
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , comparator ) ;
rank: 10
score: 99.18504333496094
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best } ;
rank: 10
score: 99.08175223214286
patch: } else if ; return ;
rank: 10
score: 99.07147216796875
patch: return return ; return ;
rank: 10
score: 99.04875352647569
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 10
score: 99.0347391764323
patch: return ; if return ;
rank: 10
score: 99.00023542131696
patch: return ; } * / ;
rank: 10
score: 98.72012765066964
patch: else if ( ; else {
rank: 11
score: 99.23100280761719
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length ] ;
rank: 11
score: 99.205078125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 11
score: 99.18499200994319
patch: return evaluate CaMeL New CaMeL Simplex ( best ) ;
rank: 11
score: 99.066943359375
patch: } else if ;
rank: 11
score: 99.06588745117188
patch: else { return return ;
rank: 11
score: 99.03699493408203
patch: return comparator ;
rank: 11
score: 98.99283272879464
patch: return ; } if ( ;
rank: 11
score: 98.98658752441406
patch: return ; return ; } return ;
rank: 11
score: 98.7030029296875
patch: else { this . return ; }
rank: 12
score: 99.19776262555804
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted
rank: 12
score: 99.06532505580357
patch: else { return ; } }
rank: 12
score: 99.05552978515625
patch: return return ; ;
rank: 12
score: 98.9918441772461
patch: return ; } else { return ;
rank: 12
score: 98.97834608289931
patch: return ; if ; return ; return ;
rank: 13
score: 99.22342936197917
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) ; }
rank: 13
score: 99.05484771728516
patch: } else if ; return return ;
rank: 13
score: 99.03181762695313
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 13
score: 99.01774088541667
patch: if return ; return ;
rank: 13
score: 98.97462463378906
patch: } * /
rank: 13
score: 98.92290387834821
patch: if ; return ; return ;
rank: 13
score: 98.69022042410714
patch: for ( final ; ; )
rank: 14
score: 99.21684184827302
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 14
score: 99.189208984375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected
rank: 14
score: 99.17145739103618
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > ) ;
rank: 14
score: 99.05418701171875
patch: } return return ;
rank: 14
score: 99.02897644042969
patch: return best ;
rank: 14
score: 99.00393676757812
patch: else { return ; if return ;
rank: 14
score: 98.96939849853516
patch: } else { return false ; }
rank: 14
score: 98.91665213448661
patch: return ; ; if return ;
rank: 15
score: 99.2159893329327
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception ;
rank: 15
score: 99.18302917480469
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted } ;
rank: 15
score: 99.1625507061298
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , comparator ) ;
rank: 15
score: 99.0392557779948
patch: } else { if ;
rank: 15
score: 99.00096784319196
patch: else { if return ; }
rank: 15
score: 98.95753173828125
patch: return false ; }
rank: 15
score: 98.91534423828125
patch: return ; return ; ;
rank: 16
score: 99.20928955078125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) khi ;
rank: 16
score: 99.181640625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original
rank: 16
score: 99.1622314453125
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ) ;
rank: 16
score: 99.15096282958984
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { }
rank: 16
score: 99.03593444824219
patch: else { return ; return ; }
rank: 16
score: 99.01551402698864
patch: return Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 16
score: 98.98520333426339
patch: else { return ; break ;
rank: 16
score: 98.94215698242188
patch: return true ; }
rank: 16
score: 98.9033711751302
patch: return ; } return ;
rank: 16
score: 98.67781575520833
patch: if ( ; return ;
rank: 17
score: 99.20396728515625
patch: else increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 17
score: 99.17931256975446
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best
rank: 17
score: 99.14918101917614
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ;
rank: 17
score: 99.03289794921875
patch: } else { } return ;
rank: 17
score: 99.00707329644098
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 17
score: 98.96485246930804
patch: return { return ; return ;
rank: 17
score: 98.93493041992187
patch: return ; * /
rank: 17
score: 98.8818130493164
patch: return ; ; if ; return ;
rank: 17
score: 98.67425537109375
patch: } else if ( ;
rank: 18
score: 99.20298414963942
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original ;
rank: 18
score: 99.0065166766827
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ; }
rank: 18
score: 98.95692661830357
patch: else { return ; } ;
rank: 18
score: 98.93168422154018
patch: return ; } * return ;
rank: 18
score: 98.8792724609375
patch: return ; if ; return ; ;
rank: 18
score: 98.65973772321429
patch: for ( ; ; ) {
rank: 19
score: 99.19867234002976
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 19
score: 99.17198597301136
patch: return increment CaMeL Iterations CaMeL Counter ( comparator ) ;
rank: 19
score: 99.15448676215277
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 19
score: 99.03179059709821
patch: return ; } else return ;
rank: 19
score: 99.00249837239583
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception {
rank: 19
score: 98.9405517578125
patch: else if return ; return ;
rank: 19
score: 98.92461286272321
patch: return ; / * return ;
rank: 19
score: 98.86190032958984
patch: return ; return ; if ; ;
rank: 19
score: 98.65127563476562
patch: finally { return ; }
rank: 20
score: 99.1619808799342
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 20
score: 98.918115234375
patch: i { return ;
rank: 20
score: 98.89252580915179
patch: return false ; } else {
rank: 20
score: 98.8527603149414
patch: return ; if ; ; return ;
rank: 20
score: 98.63502502441406
patch: return super . close ( ) ;
rank: 21
score: 99.1949462890625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original ,
rank: 21
score: 99.158203125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 21
score: 99.1514892578125
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , best ) ;
rank: 21
score: 99.14103560014205
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 21
score: 99.01827392578124
patch: } else return ;
rank: 21
score: 98.98308919270833
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ;
rank: 21
score: 98.88133409288194
patch: } else { this . return ; }
rank: 21
score: 98.81899685329861
patch: return ; if ; return ; if ;
rank: 21
score: 98.61428397042411
patch: } else { return false ;
rank: 22
score: 99.18226725260416
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ; }
rank: 22
score: 99.15716193704044
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 22
score: 99.14853922526042
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 22
score: 99.01404825846355
patch: } else = return ;
rank: 22
score: 98.98299560546874
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair reflected ;
rank: 22
score: 98.90303548177083
patch: else { return ; } if return ;
rank: 22
score: 98.88010079520089
patch: return true ; } * /
rank: 22
score: 98.81177368164063
patch: if ; return ;
rank: 22
score: 98.60446166992188
patch: else if ( ; }
rank: 23
score: 99.1392489346591
patch: return evaluate CaMeL New CaMeL Simplex ( reflected ) ;
rank: 23
score: 98.87943812779018
patch: return false ; } * /
rank: 23
score: 98.80514526367188
patch: return ; if ; return ; }
rank: 23
score: 98.59962681361607
patch: else { return true ; }
rank: 24
score: 99.1810302734375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 24
score: 99.15251608455883
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex (
rank: 24
score: 99.1299057006836
patch: return reflected ;
rank: 24
score: 98.99837493896484
patch: } else { return ; return ;
rank: 24
score: 98.97721862792969
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected } ;
rank: 24
score: 98.88572184244792
patch: else { return ; ;
rank: 24
score: 98.79934353298611
patch: return ; if ; if ; return ;
rank: 24
score: 98.59412384033203
patch: if ( ;
rank: 25
score: 99.16830283717105
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . get CaMeL Value ( ) ;
rank: 25
score: 99.12796630859376
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 25
score: 99.12589808872768
patch: throw throws Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { }
rank: 25
score: 98.99770100911458
patch: else { return ; } } return ;
rank: 25
score: 98.88310241699219
patch: return { return ; if return ;
rank: 25
score: 98.79652913411458
patch: return ; ; return ;
rank: 25
score: 98.5809326171875
patch: for ( final ; ; ) {
rank: 26
score: 99.12650240384616
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , comparator ) ;
rank: 26
score: 99.1253662109375
patch: return super . iterate CaMeL Simplex ( comparator ) ;
rank: 26
score: 98.99325125558036
patch: return return ; } return ;
rank: 26
score: 98.8821512858073
patch: return { return ; }
rank: 26
score: 98.8742904663086
patch: return ; } this . return ;
rank: 26
score: 98.79450819227431
patch: return ; return ; if ; if ;
rank: 27
score: 99.11525656960227
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ;
rank: 27
score: 98.8750508626302
patch: else { if return ;
rank: 27
score: 98.87112862723214
patch: else { throw new ; }
rank: 27
score: 98.79227701822917
patch: return ; if ; ;
rank: 27
score: 98.54303850446429
patch: finally { return false ; }
rank: 28
score: 99.16233915441177
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . ) ;
rank: 28
score: 99.14063856336806
patch: increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 28
score: 99.1233243075284
patch: return evaluate CaMeL New CaMeL Simplex ( simplex ) ;
rank: 28
score: 99.115048828125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair
rank: 28
score: 98.97158203125
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ) ;
rank: 28
score: 98.96410115559895
patch: } return return return ;
rank: 28
score: 98.87091064453125
patch: } ; if ( ;
rank: 28
score: 98.87014770507812
patch: return { return return ;
rank: 28
score: 98.78521050347223
patch: return ; if ; return ; break ;
rank: 29
score: 99.1623065655048
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted ;
rank: 29
score: 99.11251126802884
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] )
rank: 29
score: 98.96006556919643
patch: } if ; return return ;
rank: 29
score: 98.86587524414062
patch: return return ; return { return ;
rank: 29
score: 98.86064801897321
patch: return true ; } else {
rank: 29
score: 98.77894592285156
patch: return ; if ; return ; /
rank: 29
score: 98.53399658203125
patch: return null ;
rank: 30
score: 99.11167555588942
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ;
rank: 30
score: 98.86199951171875
patch: else { return ; break ; }
rank: 30
score: 98.86008126395089
patch: return ; } return false ;
rank: 30
score: 98.77776336669922
patch: return ; return ; if ; return
rank: 30
score: 98.52766636439732
patch: else { final return ; }
rank: 31
score: 99.14578683035714
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ; }
rank: 31
score: 99.13714599609375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original } ;
rank: 31
score: 99.11823272705078
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . true ) ;
rank: 31
score: 99.11141764322916
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) false ;
rank: 31
score: 98.96542840254934
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 31
score: 98.86002604166667
patch: return ; } else { return ; }
rank: 31
score: 98.7763671875
patch: return ; ; if return ; return ;
rank: 31
score: 98.5257797241211
patch: throw new Runtime CaMeL Exception ( ;
rank: 32
score: 99.13349260602679
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 32
score: 98.96332256610577
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception {
rank: 32
score: 98.94696916852679
patch: return ; } else if ;
rank: 32
score: 98.85413614908855
patch: return return ; return {
rank: 32
score: 98.85098266601562
patch: return ; } else {
rank: 32
score: 98.76408386230469
patch: return ; if ; = / /
rank: 32
score: 98.52518136160714
patch: else { super . ; }
rank: 33
score: 99.14259168836806
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . out ) ;
rank: 33
score: 99.1082294170673
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 33
score: 98.95431315104166
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 33
score: 98.94410705566406
patch: } else if return ; return ;
rank: 33
score: 98.84747314453125
patch: return { if return ;
rank: 33
score: 98.83040771484374
patch: return ; } ;
rank: 33
score: 98.75084092881944
patch: return ; return ; return ; if ;
rank: 33
score: 98.52178955078125
patch: return Boolean . TRUE ;
rank: 34
score: 99.14053109975961
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) gamma ;
rank: 34
score: 99.10323079427083
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator ;
rank: 34
score: 98.9493896484375
patch: return evaluate CaMeL New CaMeL Simplex ( original ,
rank: 34
score: 98.84691365559895
patch: return return return return ;
rank: 34
score: 98.82125418526786
patch: return ; default : return ;
rank: 34
score: 98.74984130859374
patch: return ; return ; if ; if ; return
rank: 34
score: 98.51671142578125
patch: } return true ;
rank: 35
score: 99.14048665364584
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception ;
rank: 35
score: 99.12252807617188
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ;
rank: 35
score: 99.1029522235577
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , best ) ;
rank: 35
score: 98.94793701171875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair best ;
rank: 35
score: 98.94113159179688
patch: } else { return ; } }
rank: 35
score: 98.84358433314732
patch: try { return return return ;
rank: 35
score: 98.81834193638393
patch: return ; } return true ;
rank: 35
score: 98.51126098632812
patch: return Integer . MAX _ VALUE ;
rank: 36
score: 99.1403339092548
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ) ;
rank: 36
score: 99.12202962239583
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex ;
rank: 36
score: 99.10197368421052
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 36
score: 98.94259207589286
patch: return original [ 0 ] ;
rank: 36
score: 98.93954467773438
patch: else { if ; return ; }
rank: 36
score: 98.8427734375
patch: / else { return ; }
rank: 36
score: 98.74713745117188
patch: return ; return ; if ; return ; }
rank: 36
score: 98.50977325439453
patch: } else { this . return ;
rank: 37
score: 99.14009363511029
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ;
rank: 37
score: 99.10689051011029
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ;
rank: 37
score: 98.92117309570312
patch: else { return ; } } }
rank: 37
score: 98.84074401855469
patch: else { return ; } break ;
rank: 37
score: 98.81552124023438
patch: } finally { return ;
rank: 37
score: 98.74598999023438
patch: return ; return ; if ; ; return ;
rank: 37
score: 98.50697835286458
patch: else { return false ;
rank: 38
score: 99.13838465073529
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ evaluate CaMeL New CaMeL Simplex ;
rank: 38
score: 99.11900499131944
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 38
score: 99.100537109375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > )
rank: 38
score: 99.10051133897569
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . true ) ;
rank: 38
score: 98.92967529296875
patch: return comparator ; }
rank: 38
score: 98.91708809988839
patch: } else { if return ;
rank: 38
score: 98.84001813616071
patch: else { return ; if ;
rank: 38
score: 98.81461588541667
patch: return ; } * ;
rank: 38
score: 98.74463653564453
patch: return ; return ; return ; }
rank: 39
score: 99.100341796875
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 39
score: 99.09911431206598
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . false ) ;
rank: 39
score: 98.91671316964286
patch: } else if return return ;
rank: 39
score: 98.82863071986607
patch: else { if return ; ;
rank: 39
score: 98.74291120256696
patch: return ; ; } return ;
rank: 39
score: 98.50325775146484
patch: else { return - 1 ; }
rank: 40
score: 99.13441868832237
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 40
score: 99.1167879971591
patch: } else increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 40
score: 99.09871732271634
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 40
score: 99.09862467447917
patch: throw throws Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ;
rank: 40
score: 98.92692260742187
patch: return best ; }
rank: 40
score: 98.91303362165179
patch: return return ; } else {
rank: 40
score: 98.82781982421875
patch: return return ; return ; ;
rank: 40
score: 98.7824935913086
patch: } else { return true ; }
rank: 40
score: 98.74149946732955
patch: return ; return ; if ; return ; return ;
rank: 41
score: 99.13381476151316
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . get CaMeL Point ( ) ;
rank: 41
score: 99.1142513877467
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 41
score: 99.09318273207721
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , comparator ) ;
rank: 41
score: 98.92623901367188
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 41
score: 98.90999058314732
patch: return * * * return ;
rank: 41
score: 98.82633972167969
patch: else { if return ; return ;
rank: 41
score: 98.7359375
patch: return ; return ; if ; return ; ;
rank: 42
score: 99.13347625732422
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex . length ] ;
rank: 42
score: 99.11349722055289
patch: throw throws Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 42
score: 99.0960922241211
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . false ) ;
rank: 42
score: 98.90226745605469
patch: else { return ; } } else
rank: 42
score: 98.82563127790179
patch: return return ; if return ;
rank: 42
score: 98.73590959821429
patch: return ; return ; break ;
rank: 42
score: 98.49283272879464
patch: } else { return true ;
rank: 43
score: 99.1327880859375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . ) ;
rank: 43
score: 99.1111572265625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ;
rank: 43
score: 99.0956522623698
patch: result = comparator . compare ( reflected , best ) ;
rank: 43
score: 98.8245849609375
patch: else { return ; } System . ;
rank: 43
score: 98.78008270263672
patch: } else { throw new ; }
rank: 43
score: 98.73526000976562
patch: return ; if ; if return ;
rank: 44
score: 99.110595703125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { comparator } ;
rank: 44
score: 99.08891216077302
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 44
score: 98.9213134765625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 44
score: 98.89229038783482
patch: } else { if ; }
rank: 44
score: 98.81878662109375
patch: else { return ; } if ;
rank: 44
score: 98.77525983537946
patch: } finally { return ; }
rank: 44
score: 98.73355102539062
patch: return ; return ; try
rank: 44
score: 98.48109130859375
patch: return super . ;
rank: 45
score: 99.12919536389802
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 45
score: 99.11036783854166
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { khi
rank: 45
score: 99.08675130208333
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) null ;
rank: 45
score: 98.91845703125
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 45
score: 98.7646484375
patch: return ; } else { return false ;
rank: 45
score: 98.7325668334961
patch: return ; return ; if ; {
rank: 45
score: 98.48099190848214
patch: else { this . return ;
rank: 46
score: 99.09515380859375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { comparator
rank: 46
score: 98.88519287109375
patch: return ; } else if return ;
rank: 46
score: 98.81857299804688
patch: return = return ;
rank: 46
score: 98.74642944335938
patch: return ; } * return false ;
rank: 46
score: 98.73119439019098
patch: return ; return ; return ; return ;
rank: 46
score: 98.47707112630208
patch: for ( ; ; )
rank: 47
score: 99.10843912760417
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted ;
rank: 47
score: 99.08323072350544
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 47
score: 98.88405936104911
patch: else { return ; ; }
rank: 47
score: 98.80715506417411
patch: else { return ; / /
rank: 47
score: 98.74135916573661
patch: } else { if ( ;
rank: 47
score: 98.72544352213542
patch: return ; return ; while ; return ;
rank: 47
score: 98.47525024414062
patch: else if ( ; else
rank: 48
score: 99.12674967447917
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 48
score: 99.08319561298077
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 48
score: 98.91220238095238
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ; }
rank: 48
score: 98.87418619791667
patch: else { return ; } } catch ;
rank: 48
score: 98.80386352539062
patch: return ; return return ;
rank: 48
score: 98.73926544189453
patch: return ; } / * return ;
rank: 48
score: 98.72295464409723
patch: if ; return ; if ; return ;
rank: 48
score: 98.47381591796875
patch: return this ;
rank: 49
score: 99.12467041015626
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( reflected , best ) ;
rank: 49
score: 99.0909423828125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( this ) ;
rank: 49
score: 98.91184645432692
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 49
score: 98.87298583984375
patch: } else { if return ; }
rank: 49
score: 98.80296107700893
patch: else { ; return ; }
rank: 49
score: 98.72372775607639
patch: if ( ; else { return ; }
rank: 49
score: 98.72149658203125
patch: return ; if ; = return ;
rank: 50
score: 99.12354871961806
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair
rank: 50
score: 99.087646484375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . true ) ;
rank: 50
score: 99.08068316915761
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ;
rank: 50
score: 98.87081909179688
patch: } else return false ;
rank: 50
score: 98.80291748046875
patch: return { return ; ;
rank: 50
score: 98.72288004557292
patch: return ; * return ;
rank: 50
score: 98.72076970880681
patch: return ; if ; return ; if ; return ;
rank: 50
score: 98.47040557861328
patch: } else if ( ; else {
rank: 51
score: 99.097705078125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected ;
rank: 51
score: 98.86831325954861
patch: else { return ; } } else {
rank: 51
score: 98.80178833007812
patch: catch return ; return ;
rank: 51
score: 98.72232055664062
patch: } else { return null ; }
rank: 51
score: 98.7186279296875
patch: return ; return ; } if ; return ;
rank: 51
score: 98.46761648995536
patch: super . close ( ) ;
rank: 52
score: 99.1216681985294
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex (
rank: 52
score: 99.0964111328125
patch: throw new Optimization CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 52
score: 99.08063213641827
patch: return evaluate CaMeL New CaMeL Simplex ( simplex , comparator ) ;
rank: 52
score: 98.90501051682692
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 52
score: 98.86554718017578
patch: } else { if ( return ;
rank: 52
score: 98.72224426269531
patch: return ; } * / * /
rank: 52
score: 98.71530151367188
patch: return ; return ; int
rank: 52
score: 98.46101379394531
patch: return super . iterator ( ) ;
rank: 53
score: 99.12067260742188
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 53
score: 99.09581841362848
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 53
score: 99.08270263671875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( < Real CaMeL Point CaMeL Value CaMeL Pair > ) ;
rank: 53
score: 99.07981520432692
patch: return instanceof Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 53
score: 98.86003766741071
patch: } else if return false ;
rank: 53
score: 98.78901018415179
patch: else { new return ; }
rank: 53
score: 98.7205810546875
patch: return ; } * * /
rank: 53
score: 98.71229248046875
patch: return ; if ; return ; } return ;
rank: 53
score: 98.45746721540179
patch: else { return - 1 ;
rank: 54
score: 99.11997633713942
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair best ) ;
rank: 54
score: 99.095703125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex (
rank: 54
score: 99.08251139322917
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator ) ;
rank: 54
score: 99.07757975260417
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) true ;
rank: 54
score: 98.89617047991071
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 54
score: 98.85643659319196
patch: } else return ; return ;
rank: 54
score: 98.78565216064453
patch: return { return ; } return ;
rank: 54
score: 98.70590209960938
patch: return ; ; if ;
rank: 54
score: 98.452783203125
patch: } if ( ;
rank: 55
score: 99.11874534970238
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ) ] ;
rank: 55
score: 99.09462376644737
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { }
rank: 55
score: 99.08220966045673
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > ) ;
rank: 55
score: 99.0768534342448
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 55
score: 98.85110134548611
patch: else { return ; } else return ;
rank: 55
score: 98.7841796875
patch: i { return ; return ;
rank: 55
score: 98.70890808105469
patch: return ; System . arraycopy ( ;
rank: 55
score: 98.70565795898438
patch: return ; return ; throw return ;
rank: 55
score: 98.45159912109375
patch: } return - 1 ;
rank: 56
score: 99.11815592447917
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception ;
rank: 56
score: 99.09353637695312
patch: return simplex ;
rank: 56
score: 99.07666015625
patch: return comparator . compare ( reflected , evaluate CaMeL New CaMeL Simplex ) ;
rank: 56
score: 98.89537048339844
patch: result = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 56
score: 98.84825439453125
patch: else { return ; } } catch return ;
rank: 56
score: 98.77444022042411
patch: return return ; return return ;
rank: 56
score: 98.70744977678571
patch: } finally { if ( ;
rank: 56
score: 98.70481178977273
patch: return ; return ; if ; if ; return ;
rank: 57
score: 99.1173095703125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( contracted ) ;
rank: 57
score: 99.078857421875
patch: result = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 57
score: 99.07665143694196
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) ;
rank: 57
score: 98.89515686035156
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; }
rank: 57
score: 98.84722900390625
patch: } else { if ; } }
rank: 57
score: 98.76937866210938
patch: else return ; return ;
rank: 57
score: 98.70320347377232
patch: return ; } * / /
rank: 57
score: 98.69976128472223
patch: return ; return ; if ; break ;
rank: 57
score: 98.44813232421875
patch: if ( ; }
rank: 58
score: 99.11635916573661
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length
rank: 58
score: 99.0825439453125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) original ;
rank: 58
score: 99.07623697916667
patch: return comparator . compare ( contracted , evaluate CaMeL New CaMeL Simplex ) ;
rank: 58
score: 98.89349724264706
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; }
rank: 58
score: 98.84524197048611
patch: else { return ; } return false ;
rank: 58
score: 98.76936558314732
patch: else { return ; } /
rank: 58
score: 98.70164489746094
patch: else { return false ; } }
rank: 58
score: 98.69894409179688
patch: return ; return ; if return ; return ;
rank: 58
score: 98.44632393973214
patch: notify CaMeL All ( ) ;
rank: 59
score: 99.11495267427884
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) reflected ;
rank: 59
score: 99.08125523158482
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { gamma
rank: 59
score: 99.0760139016544
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , evaluate CaMeL New CaMeL Simplex ) ;
rank: 59
score: 98.89287923177083
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 59
score: 98.84482150607639
patch: } else { if ; return ; }
rank: 59
score: 98.76258196149554
patch: else { return ; } *
rank: 59
score: 98.70106724330357
patch: } else { throw new ;
rank: 59
score: 98.69829644097223
patch: return ; return ; if return ; }
rank: 60
score: 99.11262817382813
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ] ;
rank: 60
score: 99.07987467447917
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 60
score: 99.0760498046875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( true ) ;
rank: 60
score: 99.0748291015625
patch: return comparator . compare ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 60
score: 98.89263361150569
patch: return Real CaMeL Point CaMeL Value CaMeL Pair reflected ;
rank: 60
score: 98.76157633463542
patch: / else { return ;
rank: 60
score: 98.693994140625
patch: return ; return ; if ; { return ;
rank: 61
score: 99.11262730189732
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ; }
rank: 61
score: 99.07874298095703
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , khi , comparator ) ;
rank: 61
score: 99.07530381944444
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . false ) ;
rank: 61
score: 98.891845703125
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , comparator ) ;
rank: 61
score: 98.76084681919643
patch: try { return return false ;
rank: 61
score: 98.6962661743164
patch: } else { this . ; }
rank: 61
score: 98.69207000732422
patch: return ; return ; return ; ;
rank: 62
score: 99.11086600167411
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair , comparator ) ;
rank: 62
score: 99.07666015625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 62
score: 99.07468548943015
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , best ) ;
rank: 62
score: 98.89096248851104
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ;
rank: 62
score: 98.84093366350446
patch: } return return return return ;
rank: 62
score: 98.76001848493304
patch: return return ; return ; }
rank: 62
score: 98.6915054321289
patch: return ; } else if ( ;
rank: 62
score: 98.69141303168402
patch: return ; return ; } return ; }
rank: 63
score: 99.0765151977539
patch: throw get CaMeL Runtime ( ) . Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 63
score: 99.0744987936581
patch: if ( comparator . compare ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 63
score: 99.07281901041667
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length
rank: 63
score: 98.89061628069196
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 63
score: 98.84031677246094
patch: else { return ; } else {
rank: 63
score: 98.69059448242187
patch: return ; if ; return ; return ; }
rank: 63
score: 98.68915666852679
patch: return ; } return null ;
rank: 63
score: 98.43114362444196
patch: } else { final return ;
rank: 64
score: 99.07435191761364
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 64
score: 98.88709852430556
patch: result = comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 64
score: 98.83979143415179
patch: else { if ; return ;
rank: 64
score: 98.74462890625
patch: i { return ; if return ;
rank: 64
score: 98.68852996826172
patch: return ; default : return ; }
rank: 64
score: 98.68814086914062
patch: return ; if ; { return ;
rank: 64
score: 98.42488316127232
patch: else { return 0 ; }
rank: 65
score: 99.07462565104167
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ;
rank: 65
score: 98.74236188616071
patch: return { return ; break ;
rank: 65
score: 98.68748643663194
patch: return false ; } this . return ;
rank: 65
score: 98.68713989257813
patch: return ; if ; return ; if return ;
rank: 65
score: 98.42479596819196
patch: if ( ; if ( ;
rank: 66
score: 99.10255833675987
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 66
score: 99.0738525390625
patch: return evaluate CaMeL New CaMeL Simplex ( best , comparator ) ;
rank: 66
score: 99.07225748697917
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { comparator ;
rank: 66
score: 98.88531494140625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ;
rank: 66
score: 98.83820452008929
patch: return ; } } return ;
rank: 66
score: 98.68710327148438
patch: return ; if ; return ; if ; return
rank: 66
score: 98.67788696289062
patch: return ; } * / return ;
rank: 66
score: 98.41819763183594
patch: Assert . log ( $STRING$ ) ;
rank: 67
score: 99.10220191592262
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 67
score: 99.07311430431548
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex ) ;
rank: 67
score: 98.88483135516827
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi ,
rank: 67
score: 98.82949829101562
patch: return return ; } else return ;
rank: 67
score: 98.68492780412946
patch: return ; } ; return ;
rank: 68
score: 99.07271902901786
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 68
score: 99.0706787109375
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 68
score: 99.06723022460938
patch: result = comparator . compare ( contracted , best ) ;
rank: 68
score: 98.88423665364583
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best ;
rank: 68
score: 98.8240966796875
patch: return return ; } return return ;
rank: 68
score: 98.73348563058036
patch: else { return ; * /
rank: 68
score: 98.68235948350694
patch: return ; ; if ; ; return ;
rank: 68
score: 98.67723846435547
patch: return ; } else return false ;
rank: 68
score: 98.41377766927083
patch: return super . ; }
rank: 69
score: 99.09897286551339
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) best ; }
rank: 69
score: 99.07169596354167
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) ;
rank: 69
score: 99.06700981987848
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ; }
rank: 69
score: 98.88107735770089
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ; }
rank: 69
score: 98.82315063476562
patch: } else = false ;
rank: 69
score: 98.73256138392857
patch: else { return ; / ;
rank: 69
score: 98.68230438232422
patch: return ; return ; if ; int
rank: 69
score: 98.41336495535714
patch: for ( int ; ; )
rank: 70
score: 99.09825439453125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( contracted , best ) ;
rank: 70
score: 99.07135973478618
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , evaluate CaMeL New CaMeL Simplex ) ;
rank: 70
score: 99.06476440429688
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 70
score: 98.88094075520833
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; }
rank: 70
score: 98.8226318359375
patch: return * * * * /
rank: 70
score: 98.73020717075893
patch: return if return ; return ;
rank: 70
score: 98.67997741699219
patch: return ; return ; } if ;
rank: 70
score: 98.40656280517578
patch: } else { super . ; }
rank: 71
score: 99.07035609654018
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 71
score: 99.06471470424107
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( comparator ) ;
rank: 71
score: 99.06197959498355
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 71
score: 98.8804423014323
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 71
score: 98.81881713867188
patch: } else { }
rank: 71
score: 98.67525482177734
patch: return ; if ; return ; else
rank: 71
score: 98.66741943359375
patch: return false ; } ;
rank: 71
score: 98.40592738560268
patch: else if ( ; break ;
rank: 72
score: 99.06936984592014
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , comparator ) ; }
rank: 72
score: 99.06043090820313
patch: } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 72
score: 98.87995461856617
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 72
score: 98.81659613715277
patch: } else { return ; return ; }
rank: 72
score: 98.72811550564236
patch: else { return ; } return ; }
rank: 72
score: 98.66888427734375
patch: return ; return ; ; if ; return ;
rank: 72
score: 98.6651611328125
patch: } * return false ;
rank: 72
score: 98.40345982142857
patch: finally { return true ; }
rank: 73
score: 99.09603881835938
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original [ 0 ] ;
rank: 73
score: 99.06814575195312
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 73
score: 99.0641559103261
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator ) ;
rank: 73
score: 99.05840594951923
patch: return throws Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 73
score: 98.87731352306548
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair = simplex ;
rank: 73
score: 98.81639268663194
patch: } else throw new Runtime CaMeL Exception ;
rank: 73
score: 98.72799682617188
patch: else { return ; { return ;
rank: 73
score: 98.6679916381836
patch: return ; return ; ; return ;
rank: 73
score: 98.66408962673611
patch: return true ; } this . return ;
rank: 73
score: 98.39802769252232
patch: this . return = true ;
rank: 74
score: 99.09550337357955
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception ;
rank: 74
score: 99.06780536358173
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 74
score: 99.05556852921195
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ;
rank: 74
score: 98.87612017463235
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ) ;
rank: 74
score: 98.7275390625
patch: else { * return ; }
rank: 74
score: 98.66786193847656
patch: return ; if ; return ; throw
rank: 74
score: 98.66195678710938
patch: } finally { if ( ; }
rank: 74
score: 98.39289093017578
patch: } else if ( Comparator . ;
rank: 75
score: 99.09376109730114
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) simplex ;
rank: 75
score: 99.06273600260417
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length
rank: 75
score: 99.05525930304276
patch: final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 75
score: 98.87541118421052
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; }
rank: 75
score: 98.81307983398438
patch: else if ; return ;
rank: 75
score: 98.727294921875
patch: finally { return ;
rank: 75
score: 98.6662368774414
patch: return ; if ; return ; int
rank: 75
score: 98.66094098772321
patch: return ; } this . ;
rank: 75
score: 98.38965606689453
patch: sb . append ( ; return ;
rank: 76
score: 99.06462097167969
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ; }
rank: 76
score: 99.0619784268466
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 76
score: 99.05513269761029
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { khi } ;
rank: 76
score: 98.8747622841283
patch: result = comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 76
score: 98.81131417410714
patch: return ; } return return ;
rank: 76
score: 98.7268310546875
patch: else if return ;
rank: 76
score: 98.66404418945312
patch: return ; if ; return ; throw return ;
rank: 76
score: 98.38811383928571
patch: return finally { return ; }
rank: 77
score: 99.05950249565973
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . class ) ;
rank: 77
score: 99.054443359375
patch: } throw new Function CaMeL Evaluation CaMeL Exception ( ) ;
rank: 77
score: 98.80814361572266
patch: return return ; } return false ;
rank: 77
score: 98.6600341796875
patch: return ; * * /
rank: 77
score: 98.65613471137152
patch: return ; return ; if return ; ;
rank: 77
score: 98.38731384277344
patch: else if ( ; else return ;
rank: 78
score: 99.09119669596355
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ )
rank: 78
score: 99.06193430830793
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair
rank: 78
score: 99.05674743652344
patch: throw throws Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ; }
rank: 78
score: 98.80721706814236
patch: else { return ; } } if ;
rank: 78
score: 98.659912109375
patch: if ( ; return ; }
rank: 78
score: 98.65505545479911
patch: return ; ; ; return ;
rank: 79
score: 99.0618034811581
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma . 0 , comparator ) ;
rank: 79
score: 99.05274225050404
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ;
rank: 79
score: 99.05203450520834
patch: return Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected = simplex ;
rank: 79
score: 98.80457899305556
patch: } else { return ; } return ;
rank: 79
score: 98.72442626953125
patch: return return return ; if return ;
rank: 79
score: 98.65975952148438
patch: return ; default : throw new ;
rank: 79
score: 98.65278455946181
patch: return ; if ; = ; return ;
rank: 79
score: 98.38579450334821
patch: else { this . ; }
rank: 80
score: 99.090087890625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) true ;
rank: 80
score: 99.060791015625
patch: return evaluate CaMeL New CaMeL Simplex ( original , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 80
score: 99.05197975852273
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( ) ) ;
rank: 80
score: 99.05094604492187
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 80
score: 98.72354736328126
patch: else { return ; System . out . ;
rank: 80
score: 98.6590576171875
patch: return ; / * * ;
rank: 80
score: 98.64884730747768
patch: if ; return ; break ;
rank: 80
score: 98.38528878348214
patch: if ( ; return false )
rank: 81
score: 99.087109375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 81
score: 99.05069308810764
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . err ) ;
rank: 81
score: 98.79953342013889
patch: return return ; } else { return ;
rank: 81
score: 98.71878487723214
patch: else { return ; } int
rank: 81
score: 98.65740966796875
patch: return false ; } else { return ;
rank: 81
score: 98.64491102430556
patch: return ; if ; return ; / /
rank: 82
score: 99.08676147460938
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 82
score: 98.87169828869048
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair reflected ; }
rank: 82
score: 98.798828125
patch: } else = return ; return ;
rank: 82
score: 98.71823120117188
patch: else { return ; } if ; return ;
rank: 82
score: 98.6554183959961
patch: return ; } * return true ;
rank: 82
score: 98.64415825737848
patch: return ; ; ; if ; return ;
rank: 82
score: 98.38288116455078
patch: synchronized ( this ) { return ;
rank: 83
score: 99.05906275699013
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ;
rank: 83
score: 99.05001670435855
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . false ) ;
rank: 83
score: 98.86993408203125
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex (
rank: 83
score: 98.79740142822266
patch: return ; } else = return ;
rank: 83
score: 98.71810913085938
patch: } return { return ;
rank: 83
score: 98.65268283420139
patch: else { super . ; return ; }
rank: 83
score: 98.64402770996094
patch: return ; return ; if / /
rank: 84
score: 99.08531087239584
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 84
score: 99.05888227982955
patch: return comparator . compare ( reflected , reflected ) ;
rank: 84
score: 99.0467059795673
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , $STRING$ ) ;
rank: 84
score: 99.04666573660714
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ; }
rank: 84
score: 98.71548025948661
patch: i if return ; return ;
rank: 84
score: 98.65082550048828
patch: return true ; } return false ;
rank: 84
score: 98.642578125
patch: return ; if ; return ; ; return ;
rank: 84
score: 98.37635803222656
patch: return compare CaMeL To ( ; }
rank: 85
score: 99.08514083059211
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) best . get CaMeL Value ( ) ;
rank: 85
score: 99.05760433799342
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , gamma , comparator ) ;
rank: 85
score: 99.04624245383523
patch: } return increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 85
score: 99.04538981119792
patch: throw new Function CaMeL Evaluation CaMeL Exception ( false ) ;
rank: 85
score: 98.86896221454327
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Interrupted CaMeL Exception ;
rank: 85
score: 98.7951431274414
patch: } else if ; else return ;
rank: 85
score: 98.7105484008789
patch: if return ; return ; return ;
rank: 85
score: 98.64977349175348
patch: } else { return this . ; }
rank: 85
score: 98.64241536458333
patch: return ; ; if ; return ; }
rank: 85
score: 98.37159423828125
patch: } return false ;
rank: 86
score: 99.084716796875
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ;
rank: 86
score: 99.0462137858073
patch: } else { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 86
score: 98.79366302490234
patch: } else { return return ; }
rank: 86
score: 98.71052381727431
patch: / else { return ; if return ;
rank: 86
score: 98.6483154296875
patch: / * return ;
rank: 86
score: 98.64202325994319
patch: return ; return ; return ; if ; return ;
rank: 86
score: 98.37128557477679
patch: return compare CaMeL To ( ;
rank: 87
score: 99.08439805772569
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . exit ) ;
rank: 87
score: 98.86466471354167
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi ,
rank: 87
score: 98.79268973214286
patch: } else { break ; }
rank: 87
score: 98.71015082465277
patch: return return ; return ; System . ;
rank: 87
score: 98.6478271484375
patch: return ; default : throw new ; }
rank: 87
score: 98.63901774088542
patch: return ; return ; if ; / /
rank: 88
score: 99.05241255326705
patch: return comparator . compare ( contracted , reflected ) ;
rank: 88
score: 99.04434867527173
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 88
score: 99.04184194711539
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 88
score: 98.8644660500919
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length ] ;
rank: 88
score: 98.79224650065105
patch: } else = null ;
rank: 88
score: 98.70966448102679
patch: return return return ; return ;
rank: 88
score: 98.63605346679688
patch: return ; return ; if ; return ; /
rank: 88
score: 98.36608123779297
patch: if ( ; else { return ;
rank: 89
score: 99.0520751953125
patch: comparator . compare ( reflected , best ) ;
rank: 89
score: 99.04427083333333
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex (
rank: 89
score: 99.04178873697917
patch: throw new Function CaMeL Evaluation CaMeL Exception (
rank: 89
score: 98.86385091145833
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception = null ;
rank: 89
score: 98.792236328125
patch: else { if ; } }
rank: 89
score: 98.70932006835938
patch: else { return ; } if return return ;
rank: 89
score: 98.64555140904018
patch: else { return null ; }
rank: 89
score: 98.635986328125
patch: return ; return ; else
rank: 89
score: 98.36465454101562
patch: } else if ( ; return ;
rank: 90
score: 99.07707868303571
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length
rank: 90
score: 99.05184936523438
patch: comparator . compare ( contracted , best ) ;
rank: 90
score: 98.86380709134616
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( this ) ;
rank: 90
score: 98.7895263671875
patch: else { return ; } } return false ;
rank: 90
score: 98.7067642211914
patch: return return ; return ; return ;
rank: 90
score: 98.6447982788086
patch: return false ; } return false ;
rank: 90
score: 98.63572692871094
patch: return ; if return ; return ;
rank: 90
score: 98.36328125
patch: if ( ; return true )
rank: 91
score: 99.07664137620192
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ } ;
rank: 91
score: 99.04967583550348
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ] ;
rank: 91
score: 99.04264068603516
patch: throw new Optimization CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 91
score: 99.03700657894737
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . true ) ;
rank: 91
score: 98.86335100446429
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 91
score: 98.78931535993304
patch: } else if return ; }
rank: 91
score: 98.70563616071429
patch: if return ; return ; ;
rank: 91
score: 98.64324951171875
patch: / * return ; * /
rank: 91
score: 98.63426862444196
patch: return ; if ; if ;
rank: 91
score: 98.36281912667411
patch: this . return = return ;
rank: 92
score: 99.0489990234375
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 92
score: 99.03988308376736
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 92
score: 99.0367901141827
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 92
score: 98.86196899414062
patch: return comparator . reflected ;
rank: 92
score: 98.78781127929688
patch: } if return ;
rank: 92
score: 98.63110961914063
patch: return ; return ; return ; } return ;
rank: 92
score: 98.35757446289062
patch: return Math . max ( ; }
rank: 93
score: 99.07529810855263
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair
rank: 93
score: 99.04733712332589
patch: return evaluate CaMeL New CaMeL Simplex ( khi , comparator ) ;
rank: 93
score: 99.03976876395089
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , comparator ) ;
rank: 93
score: 99.0308837890625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted ) ;
rank: 93
score: 98.85917663574219
patch: return evaluate CaMeL New CaMeL Simplex (
rank: 93
score: 98.78729248046875
patch: } else { else return ;
rank: 93
score: 98.70255824497768
patch: else { throw return ; }
rank: 93
score: 98.64177788628473
patch: return true ; } else { return ;
rank: 93
score: 98.63101196289062
patch: if ; { return ;
rank: 93
score: 98.35381208147321
patch: } finally { return false ;
rank: 94
score: 99.04714483963816
patch: return evaluate CaMeL New CaMeL Simplex ( simplex , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 94
score: 99.03080610795455
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) simplex ;
rank: 94
score: 98.85694885253906
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ; }
rank: 94
score: 98.78662109375
patch: else return ;
rank: 94
score: 98.69761439732143
patch: else { return return ; ;
rank: 94
score: 98.64173041449652
patch: else { this . return ; } }
rank: 94
score: 98.63063557942708
patch: return ; return ; /
rank: 94
score: 98.35365295410156
patch: } else { return - 1 ;
rank: 95
score: 99.07244194878473
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . contracted ) ;
rank: 95
score: 99.03925637637867
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) simplex . get CaMeL Exception ( ) ;
rank: 95
score: 99.02955386513158
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 95
score: 98.8555972450658
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 95
score: 98.78195626395089
patch: } else if ( false ;
rank: 95
score: 98.69644165039062
patch: else { return ; } / /
rank: 95
score: 98.63965606689453
patch: return ; } / * * ;
rank: 95
score: 98.62935180664063
patch: return ; return ; return ; if return ;
rank: 95
score: 98.35169219970703
patch: return ; } finally { return ;
rank: 96
score: 99.07077205882354
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . ) ;
rank: 96
score: 99.04601440429687
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator ) ;
rank: 96
score: 99.0271883877841
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( ) ) ;
rank: 96
score: 98.8549053485577
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( best ) ;
rank: 96
score: 98.78181457519531
patch: } else = this . return ;
rank: 96
score: 98.69618733723958
patch: if return ; return ; System . ;
rank: 96
score: 98.62883758544922
patch: return ; if ; return ; =
rank: 96
score: 98.34774344308036
patch: return false ; return true ;
rank: 97
score: 99.0703125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] {
rank: 97
score: 99.04590606689453
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] , comparator ) ;
rank: 97
score: 99.037841796875
patch: } throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 97
score: 98.85259399414062
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + comparator ) ;
rank: 97
score: 98.78025309244792
patch: } if ; return ;
rank: 97
score: 98.69344753689236
patch: return return ; return { if return ;
rank: 97
score: 98.637939453125
patch: return true ; } ;
rank: 97
score: 98.62659454345703
patch: return ; return ; ; if ;
rank: 97
score: 98.34740193684895
patch: if ( ; break ;
rank: 98
score: 99.04588826497395
patch: return evaluate CaMeL New CaMeL Simplex ( comparator ) ; }
rank: 98
score: 99.02506256103516
patch: return evaluate CaMeL New CaMeL Simplex ( best , khi , comparator ) ;
rank: 98
score: 98.85239083426339
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ;
rank: 98
score: 98.69278564453126
patch: return return ; }
rank: 98
score: 98.63786097935268
patch: return ; } } * /
rank: 98
score: 98.62089320591518
patch: return ; else if return ;
rank: 98
score: 98.34696960449219
patch: for ( final ; ; ; )
rank: 99
score: 99.04495239257812
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , khi , comparator ) ;
rank: 99
score: 99.0369121844952
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; } }
rank: 99
score: 99.02423773871527
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class ) ;
rank: 99
score: 98.84947620738636
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 99
score: 98.77608032226563
patch: } else { return ; } return false ;
rank: 99
score: 98.69252014160156
patch: else { return ; ; return ;
rank: 99
score: 98.63312639508929
patch: } * / if ( ;
rank: 99
score: 98.61978149414062
patch: if return ;
rank: 99
score: 98.34032185872395
patch: if ( ; else {
rank: 100
score: 99.04428280101104
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , evaluate CaMeL New CaMeL Simplex ) ;
rank: 100
score: 99.03684488932292
patch: else { increment CaMeL Iterations CaMeL Counter ( comparator ) ;
rank: 100
score: 99.02173913043478
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted ) ;
rank: 100
score: 98.84578664679276
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair
rank: 100
score: 98.775146484375
patch: } return return ; return ;
rank: 100
score: 98.68870326450893
patch: else if return ; break ;
rank: 100
score: 98.61676025390625
patch: return ; return ; set
rank: 100
score: 98.33657836914062
patch: final return ;
rank: 101
score: 99.06810302734375
patch: throw new Optimization CaMeL Exception ( ) ; }
rank: 101
score: 99.04357328869048
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 101
score: 99.03666417738971
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . out ,
rank: 101
score: 99.02161754261364
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . to CaMeL String ( ) ) ;
rank: 101
score: 98.77485487196181
patch: else { return ; } return return ;
rank: 101
score: 98.68562825520833
patch: } else { return ; if return ;
rank: 101
score: 98.63207329644098
patch: return ; } * / return false ;
rank: 101
score: 98.61135864257812
patch: return ; return ; if ; if return ;
rank: 102
score: 99.06732536764706
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ; }
rank: 102
score: 99.0434211282169
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator . reflected ;
rank: 102
score: 99.02047025240384
patch: return evaluate CaMeL New CaMeL Simplex ( best , best ) ;
rank: 102
score: 98.84344482421875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ + comparator ) ;
rank: 102
score: 98.77449035644531
patch: } else { else return ; }
rank: 102
score: 98.68356759207589
patch: return return ; ; return ;
rank: 102
score: 98.63077799479167
patch: else { if ( ; return ; }
rank: 102
score: 98.61102294921875
patch: return ; ; if ; return ; ;
rank: 102
score: 98.33097330729167
patch: return Boolean . FALSE ;
rank: 103
score: 99.04132952008929
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 103
score: 99.03633335658482
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Optimization CaMeL Exception ;
rank: 103
score: 99.01869201660156
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Function CaMeL Evaluation CaMeL Exception { }
rank: 103
score: 98.84301079644098
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > ) ;
rank: 103
score: 98.77345493861607
patch: } else { return return ;
rank: 103
score: 98.68314906529018
patch: else { for return ; }
rank: 103
score: 98.6300048828125
patch: return ; * return ; }
rank: 103
score: 98.61021423339844
patch: return ; return ; if ; /
rank: 103
score: 98.3297119140625
patch: assert return ;
rank: 104
score: 99.067138671875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ ] ; }
rank: 104
score: 99.01797485351562
patch: result = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 104
score: 98.76905517578125
patch: else { return ; } } else return ;
rank: 104
score: 98.68267822265625
patch: return return return ; ;
rank: 104
score: 98.62834821428571
patch: } ; / * return ;
rank: 104
score: 98.60811614990234
patch: return ; } if ; return ;
rank: 104
score: 98.32624816894531
patch: else { final ; return ; }
rank: 105
score: 99.06618138363487
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original .
rank: 105
score: 99.04026100852273
patch: return comparator . compare ( reflected , contracted ) ;
rank: 105
score: 99.01755658318015
patch: throw new Function CaMeL Evaluation CaMeL Exception ( . get CaMeL Runtime ( ) ) ;
rank: 105
score: 98.84132893880208
patch: return ; } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 105
score: 98.7684555053711
patch: } else = false ; return ;
rank: 105
score: 98.68079223632813
patch: else { return ; } if return ; }
rank: 105
score: 98.62709045410156
patch: } else { return ; ; }
rank: 105
score: 98.60315813337054
patch: if ; return ; if ;
rank: 105
score: 98.32530721028645
patch: else return - 1 ;
rank: 106
score: 99.03493430397727
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 106
score: 99.01669456845238
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ;
rank: 106
score: 98.84125046502976
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair = contracted ;
rank: 106
score: 98.76737976074219
patch: } else { } return return ;
rank: 106
score: 98.68052164713542
patch: / * return return ;
rank: 106
score: 98.62337239583333
patch: else { this . return false ; }
rank: 106
score: 98.60059356689453
patch: if ; return ; if return ;
rank: 106
score: 98.32442801339286
patch: else if ( Comparator . ;
rank: 107
score: 99.06501908735795
patch: else increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 107
score: 99.01592145647321
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception { }
rank: 107
score: 98.83970642089844
patch: throw new Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 107
score: 98.76701136997768
patch: return return ; else return ;
rank: 107
score: 98.59915597098214
patch: return ; return ; / /
rank: 107
score: 98.32084437779018
patch: final int ; if ( ;
rank: 108
score: 99.06368679470486
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . in ) ;
rank: 108
score: 99.039306640625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 108
score: 99.01552327473958
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . comparator ) ;
rank: 108
score: 98.83906824448529
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 108
score: 98.67967878069196
patch: return return ; return { ;
rank: 108
score: 98.61707560221355
patch: return true ; * /
rank: 108
score: 98.59781646728516
patch: return ; if ; return ; try
rank: 109
score: 99.038330078125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair
rank: 109
score: 99.03447931463069
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ]
rank: 109
score: 99.015380859375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) null ;
rank: 109
score: 98.8386589499081
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ;
rank: 109
score: 98.76297607421876
patch: else { return ; } } return return ;
rank: 109
score: 98.67943464006696
patch: try { return return true ;
rank: 109
score: 98.61651611328125
patch: return false ; * /
rank: 109
score: 98.59596557617188
patch: return ; if ; if return ; return ;
rank: 109
score: 98.3194580078125
patch: else if ( ; * /
rank: 110
score: 99.06269182477679
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ;
rank: 110
score: 99.03787935697116
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ]
rank: 110
score: 99.03314208984375
patch: Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 110
score: 98.76258196149554
patch: else return ; } return ;
rank: 110
score: 98.67604064941406
patch: return { return ; return ; }
rank: 110
score: 98.59546770368304
patch: return ; return ; while ;
rank: 110
score: 98.3157450358073
patch: do { return ; }
rank: 111
score: 99.03687091206395
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 111
score: 99.03192497702206
patch: final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex (
rank: 111
score: 99.01470392400569
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ,
rank: 111
score: 98.83775329589844
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 111
score: 98.76170654296875
patch: } else { return ; } } return ;
rank: 111
score: 98.61393519810268
patch: } else { return ; ;
rank: 111
score: 98.59522094726563
patch: return ; return ; } return ; return ;
rank: 111
score: 98.31480916341145
patch: fail ( $STRING$ ) ;
rank: 112
score: 99.06230333116319
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( }
rank: 112
score: 99.03611653645834
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , best , comparator ) ;
rank: 112
score: 99.03179462139423
patch: } else { increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 112
score: 99.01412353515624
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . true , $STRING$ ) ;
rank: 112
score: 98.75880650111607
patch: } return ; return return ;
rank: 112
score: 98.67097691127232
patch: * else { return ; }
rank: 112
score: 98.61390686035156
patch: } else { return ; } ;
rank: 112
score: 98.594970703125
patch: return ; if ; = break ;
rank: 112
score: 98.31269182477679
patch: } else { super . ;
rank: 113
score: 99.06199428013393
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception ; }
rank: 113
score: 99.03572082519531
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ; }
rank: 113
score: 99.0307373046875
patch: } final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 113
score: 98.83664957682292
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected ;
rank: 113
score: 98.75856236049107
patch: } return ; } return ;
rank: 113
score: 98.66221788194444
patch: else { return ; } System . }
rank: 113
score: 98.61300223214286
patch: return ; } * ; ;
rank: 113
score: 98.59365505642361
patch: return ; if return ; if return ;
rank: 113
score: 98.30959647042411
patch: result [ 0 ] = ;
rank: 114
score: 99.06109328497024
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception ;
rank: 114
score: 99.01363525390624
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . false , $STRING$ ) ;
rank: 114
score: 98.75757853190105
patch: } return ; return ;
rank: 114
score: 98.66199602399554
patch: i { return ; break ;
rank: 114
score: 98.61192491319444
patch: return ; } this . return ; ;
rank: 114
score: 98.59326850043402
patch: if ; return ; return ; return ;
rank: 114
score: 98.30893380301339
patch: return matches [ 0 ] ;
rank: 115
score: 99.0354336825284
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator ) ;
rank: 115
score: 99.030029296875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . err ,
rank: 115
score: 99.01323106553819
patch: return evaluate CaMeL Simplex ( comparator ) ;
rank: 115
score: 98.83538497121711
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > contracted ) ;
rank: 115
score: 98.7565409342448
patch: } else return return ;
rank: 115
score: 98.66153971354167
patch: i { return ; }
rank: 115
score: 98.61121283637152
patch: } else { return - 1 ; }
rank: 115
score: 98.5928955078125
patch: return ; return ; =
rank: 115
score: 98.30784098307292
patch: return [ 0 ] ;
rank: 116
score: 98.833203125
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception = simplex ;
rank: 116
score: 98.7555419921875
patch: } else { return ; } return return ;
rank: 116
score: 98.66070556640625
patch: return return return return {
rank: 116
score: 98.6112060546875
patch: return true ; } }
rank: 116
score: 98.59033203125
patch: return ; ; if ; ;
rank: 116
score: 98.30522918701172
patch: super . run ( this ) ;
rank: 117
score: 99.0606689453125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . in ) ;
rank: 117
score: 99.02772432215073
patch: throw new Function CaMeL Evaluation CaMeL Exception ( . get CaMeL Exception ( ) ) ;
rank: 117
score: 98.754638671875
patch: } else { final return ; }
rank: 117
score: 98.6605712890625
patch: else { return ; System . out . print
rank: 117
score: 98.61102973090277
patch: } else { return super . ; }
rank: 117
score: 98.58997802734375
patch: return ; return ; if ; throw return ;
rank: 118
score: 99.0605801669034
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair . length ] ;
rank: 118
score: 99.033720703125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair
rank: 118
score: 99.02677408854167
patch: evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 118
score: 98.83013153076172
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original ,
rank: 118
score: 98.75234549386161
patch: return * * / return ;
rank: 118
score: 98.60590277777777
patch: return ; default : throw new return ;
rank: 118
score: 98.58989606584821
patch: return ; if ; / /
rank: 118
score: 98.30366734095982
patch: } else if ( ; else
rank: 119
score: 99.05970764160156
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { gamma } ;
rank: 119
score: 99.02586263020834
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { } ;
rank: 119
score: 99.01182047526042
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . this ) ;
rank: 119
score: 98.828857421875
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ) ;
rank: 119
score: 98.74725341796875
patch: return * * * * return ;
rank: 119
score: 98.60315704345703
patch: this . return ; } * /
rank: 119
score: 98.58848876953125
patch: return ; if ; return ; return ; ;
rank: 119
score: 98.30330984933036
patch: do { return false ; }
rank: 120
score: 99.05958557128906
patch: return evaluate CaMeL New CaMeL Simplex ( original . khi , comparator ) ;
rank: 120
score: 99.0240966796875
patch: Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 120
score: 98.82749633789062
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 120
score: 98.74591064453125
patch: } else = null ; return ;
rank: 120
score: 98.65836007254464
patch: else return ; return ; }
rank: 120
score: 98.60276285807292
patch: } * return true ;
rank: 120
score: 98.58647809709821
patch: return ; if ; = ;
rank: 120
score: 98.30172729492188
patch: return Math . min ( ; }
rank: 121
score: 99.0325594815341
patch: return comparator . compare ( contracted , contracted ) ;
rank: 121
score: 99.01007439108456
patch: throw throws Function CaMeL Evaluation CaMeL Exception { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 121
score: 98.82740783691406
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 121
score: 98.7452392578125
patch: } else ; return ;
rank: 121
score: 98.65801130022321
patch: else { } return ; }
rank: 121
score: 98.59849243164062
patch: } * return ;
rank: 121
score: 98.58435736762152
patch: return ; return ; if ; return /
rank: 122
score: 99.03237769717262
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 122
score: 98.82681039663461
patch: return evaluate CaMeL New CaMeL Simplex ( original , this ) ;
rank: 122
score: 98.74485948350694
patch: else { throw new Runtime CaMeL Exception ;
rank: 122
score: 98.657470703125
patch: return if return ;
rank: 122
score: 98.59809027777777
patch: } else if ( comparator . compare ;
rank: 122
score: 98.58362426757813
patch: return ; if return ; if ; return ;
rank: 122
score: 98.29961286272321
patch: else { if ( ; }
rank: 123
score: 99.05724225725446
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) simplex ;
rank: 123
score: 99.0321044921875
patch: return evaluate CaMeL New CaMeL Simplex ( ) ;
rank: 123
score: 99.0212890625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 123
score: 99.00920104980469
patch: = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 123
score: 98.8250399502841
patch: return comparator . evaluate ( reflected , best ) ;
rank: 123
score: 98.74369981553819
patch: } else if return ; return false ;
rank: 123
score: 98.65536063058036
patch: / else { return ; int
rank: 123
score: 98.59708949497768
patch: } ; if ( ; ;
rank: 123
score: 98.58210972377232
patch: if return ; ; return ;
rank: 124
score: 99.05619731702302
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . iterate CaMeL Simplex ( ) ;
rank: 124
score: 99.02124962439903
patch: return evaluate CaMeL New CaMeL Simplex ( original , contracted ) ;
rank: 124
score: 98.740478515625
patch: * * * * * /
rank: 124
score: 98.65242513020833
patch: return return ; return ; if return ;
rank: 124
score: 98.59490966796875
patch: return false ; } }
rank: 124
score: 98.58201599121094
patch: return ; if ; if ; return
rank: 124
score: 98.29569244384766
patch: else { do { return ; }
rank: 125
score: 99.05597601996527
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . out ) ;
rank: 125
score: 99.03187779017857
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) {
rank: 125
score: 99.02070886948529
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception ) ;
rank: 125
score: 99.00836944580078
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . length ] ;
rank: 125
score: 98.8243896484375
patch: return comparator . evaluate CaMeL New CaMeL Simplex (
rank: 125
score: 98.74042426215277
patch: } else { return ; } else {
rank: 125
score: 98.64862932477679
patch: else { if return return ;
rank: 125
score: 98.59339250837054
patch: } ; ; if ( ;
rank: 125
score: 98.58159044053819
patch: return ; return ; } if ; return
rank: 126
score: 99.05555419921875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 126
score: 99.03182279146634
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , best ) ;
rank: 126
score: 99.00782993861607
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception ) ;
rank: 126
score: 98.648486328125
patch: else return return ;
rank: 126
score: 98.59287516276042
patch: return ; } ) ;
rank: 126
score: 98.58086286272321
patch: if ; if ; return ;
rank: 126
score: 98.29415893554688
patch: final ; return false ;
rank: 127
score: 99.05509086277173
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair contracted . length ] ;
rank: 127
score: 99.03104073660714
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 127
score: 99.02037109375
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 127
score: 98.73954554966518
patch: else if ; return ; }
rank: 127
score: 98.64697265625
patch: try { return return ; }
rank: 127
score: 98.59195285373264
patch: else if ( comparator . equals ( ;
rank: 127
score: 98.57974243164062
patch: return ; else if ; return ;
rank: 128
score: 99.05502755301339
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair , best ) ;
rank: 128
score: 99.03080822172619
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 1 ) ;
rank: 128
score: 99.01868547712054
patch: throw get CaMeL Runtime ( ) . Runtime CaMeL Exception ( ) ;
rank: 128
score: 98.739501953125
patch: } else return ; return return ;
rank: 128
score: 98.64618598090277
patch: return return ; return { System . ;
rank: 128
score: 98.59077758789063
patch: this . return ;
rank: 128
score: 98.57554321289062
patch: return ; return ; return ; if ; return
rank: 128
score: 98.292236328125
patch: finally { super . ; }
rank: 129
score: 99.05497602982955
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair . 0 ] ;
rank: 129
score: 99.030166015625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair final Real CaMeL Point CaMeL Value CaMeL Pair
rank: 129
score: 99.01765441894531
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception ;
rank: 129
score: 99.0049579326923
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ;
rank: 129
score: 98.82075500488281
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Runtime CaMeL Exception
rank: 129
score: 98.73807198660714
patch: else { return * ; }
rank: 129
score: 98.64221954345703
patch: else { return ; } * /
rank: 129
score: 98.58757866753473
patch: return ; } this . ; return ;
rank: 129
score: 98.5738858309659
patch: return ; return ; if return ; } return ;
rank: 130
score: 99.05412074497768
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ true ] ;
rank: 130
score: 99.02925166377315
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ++ ;
rank: 130
score: 98.81904153262867
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected } ; }
rank: 130
score: 98.73500279017857
patch: } if return ; return ;
rank: 130
score: 98.64108276367188
patch: else { return ; for return ;
rank: 130
score: 98.58740234375
patch: System . arraycopy ( ; return ; }
rank: 130
score: 98.57289817116477
patch: return ; return ; if ; return ; break ;
rank: 130
score: 98.29056549072266
patch: return Boolean . value CaMeL Of ;
rank: 131
score: 99.029052734375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) false ;
rank: 131
score: 99.0166259765625
patch: increment CaMeL Iterations CaMeL Counter ( comparator ) ;
rank: 131
score: 98.8182861328125
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , this ) ;
rank: 131
score: 98.73456573486328
patch: else { if ; } return ;
rank: 131
score: 98.64083099365234
patch: else { return ; while return ;
rank: 131
score: 98.57131125710227
patch: return ; if ; return ; return ; return ;
rank: 131
score: 98.28829520089286
patch: } if ( ; return ;
rank: 132
score: 99.05352461965461
patch: else { final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair
rank: 132
score: 99.02896728515626
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 132
score: 99.01603868272569
patch: Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected = evaluate CaMeL New CaMeL Simplex (
rank: 132
score: 99.00367320667614
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) true ;
rank: 132
score: 98.8179702758789
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ; }
rank: 132
score: 98.73410470145089
patch: else { return ; } else
rank: 132
score: 98.63924560546874
patch: else { return ; } return ; return ;
rank: 132
score: 98.58698272705078
patch: return ; else { return ; }
rank: 132
score: 98.57039388020833
patch: return ; return ; } if return ;
rank: 133
score: 99.053466796875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 133
score: 99.02893880208333
patch: return evaluate CaMeL New CaMeL Simplex ( original , best , comparator ) ;
rank: 133
score: 99.01435779389881
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . class ) ;
rank: 133
score: 99.00289154052734
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) new Function CaMeL Evaluation CaMeL Exception (
rank: 133
score: 98.81755719866071
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , best ) ;
rank: 133
score: 98.73385959201389
patch: } else if return ; return return ;
rank: 133
score: 98.63863372802734
patch: return return ; else { return ;
rank: 133
score: 98.58696831597223
patch: return ; } * / return true ;
rank: 133
score: 98.56830512152777
patch: return ; ; if ; return ; /
rank: 133
score: 98.28733317057292
patch: else { return true ;
rank: 134
score: 99.05345153808594
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ; } }
rank: 134
score: 99.0287753018466
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) reflected ;
rank: 134
score: 99.00181274414062
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . ) ;
rank: 134
score: 98.81748860677084
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . new CaMeL
rank: 134
score: 98.73273577008929
patch: if ( return ; return ;
rank: 134
score: 98.63836669921875
patch: else { return ; } while return ;
rank: 134
score: 98.58641899956598
patch: synchronized ( this ) { return ; }
rank: 134
score: 98.56812395368304
patch: return ; return ; } ;
rank: 134
score: 98.28592354910714
patch: for ( ; ; ; )
rank: 135
score: 99.05224609375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator ; }
rank: 135
score: 99.02842084099265
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , contracted ) ;
rank: 135
score: 99.01299176897321
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { ;
rank: 135
score: 98.81666782924107
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ ) ;
rank: 135
score: 98.63814871651786
patch: else { for return true ;
rank: 135
score: 98.58638763427734
patch: return ; } * return null ;
rank: 135
score: 98.56681518554687
patch: return ; return ; if ; return ; =
rank: 135
score: 98.28571319580078
patch: if ( best != null ) {
rank: 136
score: 99.0521469116211
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . *
rank: 136
score: 99.02754543138587
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 136
score: 99.01277240953948
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . class ) ;
rank: 136
score: 98.81513006036931
patch: return evaluate CaMeL New CaMeL Simplex ( this ) ;
rank: 136
score: 98.73029327392578
patch: else { return ; } } finally
rank: 136
score: 98.63528781467014
patch: else { return ; } return ; ;
rank: 136
score: 98.5863037109375
patch: } else { return null ;
rank: 136
score: 98.56675889756944
patch: return ; } if return ; return ;
rank: 136
score: 98.28383091517857
patch: finally { if ( ; }
rank: 137
score: 99.05127716064453
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . out ) ;
rank: 137
score: 99.0247051532452
patch: return evaluate CaMeL New CaMeL Simplex ( simplex , best ) ;
rank: 137
score: 98.81429617745536
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ;
rank: 137
score: 98.72903878348214
patch: else if ; return return ;
rank: 137
score: 98.58601888020833
patch: return ; * / ;
rank: 137
score: 98.56620649857955
patch: return ; if ; if ; return ; return ;
rank: 137
score: 98.28321184430804
patch: return false ; return false ;
rank: 138
score: 99.02401733398438
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ;
rank: 138
score: 99.01166326349431
patch: return increment CaMeL Iterations CaMeL Counter ( best ) ;
rank: 138
score: 98.72867160373264
patch: else { return ; ; } return ;
rank: 138
score: 98.633447265625
patch: else { return ; } System . log ;
rank: 138
score: 98.58064270019531
patch: return ; } * / ; ;
rank: 138
score: 98.56427001953125
patch: return ; return ; if ; return ; int
rank: 138
score: 98.28225708007812
patch: else if ( ; if ( ;
rank: 139
score: 99.0225830078125
patch: return comparator . compare ( contracted , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 139
score: 99.0112813313802
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , ) ;
rank: 139
score: 98.81392211914063
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 139
score: 98.72814178466797
patch: } else { if return return ;
rank: 139
score: 98.6313247680664
patch: else { return ; throw return ;
rank: 139
score: 98.57849884033203
patch: return false ; } return true ;
rank: 139
score: 98.56395263671875
patch: return ; return ; if ; return ; throw
rank: 139
score: 98.28069196428571
patch: return - 1 . 0 ;
rank: 140
score: 99.022568359375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 140
score: 99.01036241319444
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 140
score: 98.81263732910156
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best ; }
rank: 140
score: 98.72748480902777
patch: } else { if ; return return ;
rank: 140
score: 98.57520294189453
patch: return ; } else { throw ;
rank: 140
score: 98.56371198381696
patch: return ; } if return ;
rank: 140
score: 98.27948760986328
patch: notify CaMeL All ( return ) ;
rank: 141
score: 99.02183430989584
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , best , comparator ) ;
rank: 141
score: 99.00997721354166
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original ;
rank: 141
score: 98.81241280691964
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception true ;
rank: 141
score: 98.72564086914062
patch: } else { return ; } else return ;
rank: 141
score: 98.62953404017857
patch: if return ; return return ;
rank: 141
score: 98.57489013671875
patch: return ; } / * ;
rank: 141
score: 98.56301540798611
patch: return ; if return ; } return ;
rank: 142
score: 99.04976712740384
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator .
rank: 142
score: 99.02080688476562
patch: ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ) . return ;
rank: 142
score: 99.00970052083333
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , gamma , comparator ) ;
rank: 142
score: 98.99825846354166
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Function CaMeL Evaluation CaMeL Exception {
rank: 142
score: 98.72544352213542
patch: else { this . return return ; }
rank: 142
score: 98.62908935546875
patch: return { if return ; return ;
rank: 142
score: 98.57343207465277
patch: return ; } / * * return ;
rank: 142
score: 98.56224229600694
patch: return ; return ; return ; break ;
rank: 143
score: 99.02001953125
patch: return evaluate CaMeL New CaMeL Simplex ( original , 0 . 0 , comparator ) ;
rank: 143
score: 99.00968794389205
patch: return increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 143
score: 98.9981689453125
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi ] ) ;
rank: 143
score: 98.81144714355469
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ) ; }
rank: 143
score: 98.72310180664063
patch: } else { this . return return ; }
rank: 143
score: 98.62646484375
patch: return return ; ; if return ;
rank: 143
score: 98.57333034939236
patch: else if ( comparator . compare ( ;
rank: 143
score: 98.56214141845703
patch: return ; return ; if ; throw
rank: 143
score: 98.27649688720703
patch: else if ( ; this . ;
rank: 144
score: 99.01996459960938
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > ) ; }
rank: 144
score: 99.00907389322917
patch: } final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex (
rank: 144
score: 98.72012329101562
patch: } else { else { return ;
rank: 144
score: 98.62639617919922
patch: else if return ; return true ;
rank: 144
score: 98.56770324707031
patch: } ; ;
rank: 144
score: 98.56195068359375
patch: return ; return ; if ; return ; else
rank: 144
score: 98.27530670166016
patch: System . arraycopy ( ; return ;
rank: 145
score: 99.01939086914062
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) ;
rank: 145
score: 99.00898293887867
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception
rank: 145
score: 98.62510172526042
patch: int else { return ;
rank: 145
score: 98.56366644965277
patch: } else if ( comparator . equals ;
rank: 145
score: 98.56177978515625
patch: return ; if ; return ; if ; ;
rank: 145
score: 98.27272251674107
patch: } else if ( ; }
rank: 146
score: 99.01822916666667
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair )
rank: 146
score: 99.00870971679687
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 146
score: 98.80865478515625
patch: return Real CaMeL Point CaMeL Value CaMeL Pair contracted ; }
rank: 146
score: 98.718505859375
patch: } else if ; this . return ;
rank: 146
score: 98.62382507324219
patch: else { for return { return ;
rank: 146
score: 98.56013488769531
patch: return ; return ; if ; else
rank: 146
score: 98.27222900390625
patch: final return true ;
rank: 147
score: 99.01691545758929
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair .
rank: 147
score: 99.00855553668478
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( ) ) ;
rank: 147
score: 98.99742974175348
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . length ) ;
rank: 147
score: 98.80865157277961
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair best
rank: 147
score: 98.71717834472656
patch: } return return ; return return ;
rank: 147
score: 98.62263319227431
patch: if return ; return ; if return ;
rank: 147
score: 98.56194390190973
patch: return ; * / this . return ;
rank: 147
score: 98.55935668945312
patch: return ; if ; ; if ; return ;
rank: 147
score: 98.27099609375
patch: } else { return 0 ;
rank: 148
score: 99.04754169170673
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = simplex ;
rank: 148
score: 99.01679021661931
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 148
score: 99.00781968060662
patch: throw get CaMeL Runtime ( ) . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 148
score: 98.80813419117646
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 148
score: 98.71703229631696
patch: } return * * return ;
rank: 148
score: 98.62179565429688
patch: else { return ; } while ;
rank: 148
score: 98.56177629743304
patch: return ; } else { ;
rank: 148
score: 98.558251953125
patch: return ; return ; if ; if ; /
rank: 148
score: 98.26920572916667
patch: assert return ; return ;
rank: 149
score: 99.04737613075658
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . get CaMeL Type ( ) ;
rank: 149
score: 99.01592053865132
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted : evaluate CaMeL New CaMeL Simplex ) {
rank: 149
score: 98.71609497070312
patch: } else = true ;
rank: 149
score: 98.6217041015625
patch: else { return ; } System . ; }
rank: 149
score: 98.56058078342014
patch: else { this . return ; } ;
rank: 149
score: 98.55752224392361
patch: return ; return ; if ; ; ;
rank: 149
score: 98.26715087890625
patch: else {
rank: 150
score: 99.04647216796874
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original ,
rank: 150
score: 99.01525065104167
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( reflected , comparator ) ;
rank: 150
score: 98.80679141773896
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator , comparator ) ;
rank: 150
score: 98.7153828938802
patch: return * * return ;
rank: 150
score: 98.62088012695312
patch: try { return return return return ;
rank: 150
score: 98.5582987467448
patch: return ; / * ;
rank: 150
score: 98.55720350477431
patch: return ; return ; if return ; /
rank: 150
score: 98.26578369140626
patch: return - 0 ;
rank: 151
score: 99.04640794836956
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception . /
rank: 151
score: 99.01511928013393
patch: return evaluate CaMeL New CaMeL Simplex ( original , comparator ) ; }
rank: 151
score: 98.80678304036458
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception
rank: 151
score: 98.71414184570312
patch: else { if ; * * /
rank: 151
score: 98.6197509765625
patch: else ; return ;
rank: 151
score: 98.5560635653409
patch: return ; return ; if ; return ; if ;
rank: 151
score: 98.26483154296875
patch: } } else { return ;
rank: 152
score: 99.01377958409927
patch: return evaluate CaMeL New CaMeL Simplex ( original , evaluate CaMeL New CaMeL Simplex ) ;
rank: 152
score: 99.00618802584134
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception {
rank: 152
score: 98.99636840820312
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected ; }
rank: 152
score: 98.80641802619485
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Runtime CaMeL Exception {
rank: 152
score: 98.71354457310268
patch: return * * * return /
rank: 152
score: 98.61966378348214
patch: finally { return ; return ;
rank: 152
score: 98.55648803710938
patch: return - 1 ; }
rank: 152
score: 98.55543212890625
patch: return ; ; if ; return ; return ;
rank: 152
score: 98.2638168334961
patch: else { for ( ; ; )
rank: 153
score: 99.04603407118056
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . this ) ;
rank: 153
score: 98.806396484375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 153
score: 98.7105712890625
patch: return ; } if ;
rank: 153
score: 98.6185302734375
patch: else { return return ; } if return ;
rank: 153
score: 98.55613878038194
patch: return ; } else { return true ;
rank: 153
score: 98.55540635850694
patch: return ; if ; ; return ; }
rank: 153
score: 98.2637710571289
patch: return ; } return - 1 ;
rank: 154
score: 99.0458984375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ 1 ] ;
rank: 154
score: 99.01325334821429
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 154
score: 99.00577486478366
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 154
score: 98.99513346354166
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , best ) ;
rank: 154
score: 98.80594675164474
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator , comparator ) ;
rank: 154
score: 98.61833190917969
patch: else { return ; if ; {
rank: 154
score: 98.55592176649306
patch: return false ; } else return false ;
rank: 154
score: 98.55525716145833
patch: return ; return ; } return ; ;
rank: 154
score: 98.26375579833984
patch: return super . run ( ) ;
rank: 155
score: 99.04551003196023
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception ) ;
rank: 155
score: 99.01266318873355
patch: ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ) . }
rank: 155
score: 98.70922173394098
patch: else { if return ; } return ;
rank: 155
score: 98.61743774414063
patch: else { return ; System . out . }
rank: 155
score: 98.55550130208333
patch: return ; } else { throw new ;
rank: 155
score: 98.55510919744319
patch: if ; return ; if ; return ; return ;
rank: 156
score: 99.04532020970395
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair best
rank: 156
score: 99.01236698545259
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ;
rank: 156
score: 99.00506270559211
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . out ) ;
rank: 156
score: 98.99490017361111
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . false , $STRING$ ) ;
rank: 156
score: 98.80344525505515
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex (
rank: 156
score: 98.70561981201172
patch: return ; } else return return ;
rank: 156
score: 98.61710611979167
patch: return { return - ;
rank: 156
score: 98.55426025390625
patch: } * / ;
rank: 156
score: 98.55413818359375
patch: return ; if return ; break ;
rank: 156
score: 98.26190948486328
patch: if ( is CaMeL Empty ) {
rank: 157
score: 99.04499053955078
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex ; }
rank: 157
score: 99.01233723958333
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( reflected , best ) ;
rank: 157
score: 99.00498268821023
patch: } } increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 157
score: 98.99443126860119
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> comparator ;
rank: 157
score: 98.80329132080078
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 157
score: 98.70485432942708
patch: } else if ; return return return ;
rank: 157
score: 98.61611599392361
patch: else { return ; ; if return ;
rank: 157
score: 98.55415562220982
patch: if ( ; } * /
rank: 157
score: 98.55103759765625
patch: return ; return ; return ; if ; ;
rank: 157
score: 98.26119232177734
patch: else { super . ; } ;
rank: 158
score: 99.04478624131944
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . ) ; }
rank: 158
score: 99.01218133223684
patch: return comparator . compare ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex ) ;
rank: 158
score: 98.99348958333333
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . true , $STRING$ ) ;
rank: 158
score: 98.79950561523438
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] original ) ;
rank: 158
score: 98.70390973772321
patch: return * return ; return ;
rank: 158
score: 98.54937744140625
patch: return ; if ; return
rank: 158
score: 98.260009765625
patch: Thread . current CaMeL Thread ( ;
rank: 159
score: 99.04413132440476
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 159
score: 99.00466918945312
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 159
score: 98.99342564174107
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( best ) ;
rank: 159
score: 98.61345563616071
patch: return return ; if null ;
rank: 159
score: 98.5513916015625
patch: return ; default : return false ;
rank: 159
score: 98.54719543457031
patch: return ; return ; if ; }
rank: 159
score: 98.259375
patch: else return false ;
rank: 160
score: 99.01132131177326
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 160
score: 99.00210571289062
patch: return comparator . compare ( reflected , best ) < 0
rank: 160
score: 98.99233669704861
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 160
score: 98.79814453125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best )
rank: 160
score: 98.69900076729911
patch: return * * return ; }
rank: 160
score: 98.61260375976562
patch: return ; return ; System . out . ;
rank: 160
score: 98.55097198486328
patch: return ; } if ( ; ;
rank: 160
score: 98.54680786132812
patch: return ; if ; return ; break ; }
rank: 160
score: 98.25804138183594
patch: if ( ; else if ( ;
rank: 161
score: 99.04222954644098
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ original . iterator ( ) ] ;
rank: 161
score: 99.01066450639205
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) this ;
rank: 161
score: 99.00201416015625
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ) ;
rank: 161
score: 98.79794311523438
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair best ;
rank: 161
score: 98.69820731026786
patch: } else ; return false ;
rank: 161
score: 98.61231340680804
patch: } return return return return {
rank: 161
score: 98.5506591796875
patch: return false ; } if ( ;
rank: 161
score: 98.54205322265625
patch: return ; return ; throw
rank: 161
score: 98.25774383544922
patch: sb . append ( $STRING$ ) ;
rank: 162
score: 99.0421854654948
patch: throw new Function CaMeL Evaluation CaMeL Exception ( contracted ) ;
rank: 162
score: 99.00991934317129
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > }
rank: 162
score: 98.79776000976562
patch: return best . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 162
score: 98.6980972290039
patch: } else = true ; return ;
rank: 162
score: 98.55021667480469
patch: else { super . return ; }
rank: 162
score: 98.54106140136719
patch: return ; return ; } break ;
rank: 162
score: 98.25772857666016
patch: this . return = ; return ;
rank: 163
score: 99.04182572798295
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ;
rank: 163
score: 99.00974291424419
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 163
score: 98.99857788085937
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted
rank: 163
score: 98.99167306082589
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( original ) ;
rank: 163
score: 98.7974853515625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception : $STRING$ ;
rank: 163
score: 98.69728306361607
patch: return * * ; return ;
rank: 163
score: 98.61103820800781
patch: else { return return ; return ;
rank: 163
score: 98.54963684082031
patch: return ; * / } * /
rank: 163
score: 98.5400390625
patch: return ; else if return ; return ;
rank: 163
score: 98.25112915039062
patch: final ; return true ;
rank: 164
score: 99.00804307725694
patch: return evaluate CaMeL New CaMeL Simplex ] ;
rank: 164
score: 98.99830457899306
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex (
rank: 164
score: 98.99153442382813
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . class , $STRING$ ) ;
rank: 164
score: 98.6971944173177
patch: } return return false ;
rank: 164
score: 98.53927612304688
patch: if return ; return ; if ; return ;
rank: 165
score: 99.00697393002717
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex ) ;
rank: 165
score: 98.99781436011905
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 165
score: 98.79713270399306
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 165
score: 98.69496154785156
patch: else { return * return ; }
rank: 165
score: 98.61013793945312
patch: return return return ; }
rank: 165
score: 98.54695892333984
patch: } else { if ( ; }
rank: 165
score: 98.53374481201172
patch: return ; return ; return ; /
rank: 165
score: 98.24894714355469
patch: if ( comparator . equals ( ;
rank: 166
score: 99.03973795572917
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ;
rank: 166
score: 99.00674258961396
patch: new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { evaluate CaMeL New CaMeL Simplex
rank: 166
score: 98.99745871803977
patch: try { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 166
score: 98.79705810546875
patch: return comparator . iterate CaMeL Simplex ( original , khi , comparator ) ;
rank: 166
score: 98.60949096679687
patch: else { return ; } if return ; ;
rank: 166
score: 98.54678780691964
patch: } * / return false ;
rank: 166
score: 98.53296661376953
patch: return ; if return ; if ;
rank: 166
score: 98.24894714355469
patch: result [ 0 ] = return ;
rank: 167
score: 99.03932291666666
patch: return evaluate CaMeL New CaMeL Simplex ( original . gamma , comparator ) ;
rank: 167
score: 99.00633861400463
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > )
rank: 167
score: 98.79596557617188
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair simplex ;
rank: 167
score: 98.69377983940973
patch: } else if return ; else return ;
rank: 167
score: 98.60919952392578
patch: i { return ; return ; }
rank: 167
score: 98.54646131727431
patch: return true ; } else return false ;
rank: 167
score: 98.53243582589286
patch: return ; if return ; ;
rank: 168
score: 99.0058952780331
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , original ) ;
rank: 168
score: 98.98857879638672
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi . comparator ) ;
rank: 168
score: 98.79568684895834
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ;
rank: 168
score: 98.60856628417969
patch: else { return ; } * *
rank: 168
score: 98.54490152994792
patch: return ; } ; ;
rank: 168
score: 98.53192138671875
patch: return ; return ; if ; =
rank: 168
score: 98.24746268136161
patch: else { final ; return ;
rank: 169
score: 99.03850911458333
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ khi ] ;
rank: 169
score: 99.00515407986111
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > }
rank: 169
score: 98.98721168154762
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > , best ) ;
rank: 169
score: 98.69260660807292
patch: } if ( return ;
rank: 169
score: 98.60850306919643
patch: try { return false ; }
rank: 169
score: 98.52823893229167
patch: return ; return ; throw return ; }
rank: 169
score: 98.24698311941964
patch: } finally { return true ;
rank: 170
score: 98.99533562911184
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . err ) ;
rank: 170
score: 98.98687385110294
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . current CaMeL
rank: 170
score: 98.79292805989583
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) reflected ) ;
rank: 170
score: 98.69146728515625
patch: } catch ; return ;
rank: 170
score: 98.60814557756696
patch: return return return ; break ;
rank: 170
score: 98.54482014973958
patch: return ; if ( ;
rank: 170
score: 98.52756754557292
patch: return ; if ; ; ; return ;
rank: 171
score: 99.00431780133928
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ;
rank: 171
score: 98.99494018554688
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected
rank: 171
score: 98.7925537109375
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 ) ;
rank: 171
score: 98.69076538085938
patch: return * * * / return ;
rank: 171
score: 98.60604858398438
patch: else { return ; } / ;
rank: 171
score: 98.52752685546875
patch: return ; return ; = ; return ;
rank: 171
score: 98.24661254882812
patch: } finally { super . ; }
rank: 172
score: 99.00342959449405
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 172
score: 98.99410912298387
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception ) ;
rank: 172
score: 98.79147338867188
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . ] ;
rank: 172
score: 98.69064331054688
patch: } else { throw new Runtime CaMeL Exception ;
rank: 172
score: 98.6055908203125
patch: else { return ; System . out . return
rank: 172
score: 98.54251861572266
patch: return true ; } } * /
rank: 172
score: 98.52727593315973
patch: return ; return ; } ; return ;
rank: 172
score: 98.24655151367188
patch: return super . ; } return ;
rank: 173
score: 99.0376335592831
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length ] ; }
rank: 173
score: 98.99399701286765
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex } ; }
rank: 173
score: 98.9849494485294
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Optimization CaMeL Exception . true ) ;
rank: 173
score: 98.7907958984375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$
rank: 173
score: 98.6905288696289
patch: return return ; } catch return ;
rank: 173
score: 98.53874860491071
patch: } * / return true ;
rank: 173
score: 98.52702331542969
patch: return ; if ; return ; System
rank: 173
score: 98.24634552001953
patch: fail ( $STRING$ + ; return ;
rank: 174
score: 99.00255859375
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 174
score: 98.99169921875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ;
rank: 174
score: 98.98490687779018
patch: result = evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 174
score: 98.68995884486607
patch: } * * * * /
rank: 174
score: 98.60484967912946
patch: else { for return false ;
rank: 174
score: 98.53809465680804
patch: return ; * / return ;
rank: 174
score: 98.52634102957589
patch: return ; ; ; if ;
rank: 174
score: 98.24347795758929
patch: } if ( ; else {
rank: 175
score: 99.03682708740234
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . in ) ;
rank: 175
score: 99.00237630208333
patch: return comparator . compare ( evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 175
score: 98.99061279296875
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { break ;
rank: 175
score: 98.98487764246323
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Function CaMeL Evaluation CaMeL Exception { return ;
rank: 175
score: 98.79038599917763
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > reflected ) ;
rank: 175
score: 98.68920026506696
patch: return return ; } catch ;
rank: 175
score: 98.60445827907986
patch: else { return return ; if return ;
rank: 175
score: 98.52622477213542
patch: return ; return ; if ++ return ;
rank: 175
score: 98.24300711495536
patch: else if ( ; else ;
rank: 176
score: 99.0364501953125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 176
score: 99.00167846679688
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 176
score: 98.99044799804688
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex (
rank: 176
score: 98.9847347861842
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 176
score: 98.68878936767578
patch: } else { if ; * /
rank: 176
score: 98.60325404575893
patch: else { while return ; }
rank: 176
score: 98.53439331054688
patch: return false ; } } * /
rank: 176
score: 98.52589246961806
patch: return ; return ; if return ; int
rank: 176
score: 98.24214935302734
patch: return get CaMeL Parent ( ) ;
rank: 177
score: 99.03634878305289
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) false ;
rank: 177
score: 99.0009998139881
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 0 ) ;
rank: 177
score: 98.98997339709052
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 177
score: 98.98398724724265
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Optimization CaMeL Exception . false ) ;
rank: 177
score: 98.78710123697917
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , false ) ;
rank: 177
score: 98.53131866455078
patch: } ; if ( ; return ;
rank: 177
score: 98.52567545572917
patch: return ; if ; {
rank: 178
score: 99.0357894897461
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . this ) ;
rank: 178
score: 99.0008075420673
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 178
score: 98.9895652488426
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception ) ;
rank: 178
score: 98.98389781605114
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . is CaMeL Empty ( ) ) ;
rank: 178
score: 98.68767438616071
patch: return ; } } if ;
rank: 178
score: 98.60076032366071
patch: return { return ; if ;
rank: 178
score: 98.53114318847656
patch: else { return false ; ; }
rank: 178
score: 98.52450997488839
patch: if ; = ; return ;
rank: 178
score: 98.24163818359375
patch: items [ 0 ] = ;
rank: 179
score: 98.99936058407738
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ] > ;
rank: 179
score: 98.98919677734375
patch: throw new Optimization CaMeL Exception ( true ) ;
rank: 179
score: 98.98347981770833
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . err ) ;
rank: 179
score: 98.68660736083984
patch: return * * * return return ;
rank: 179
score: 98.59809221540179
patch: else return ; if return ;
rank: 179
score: 98.53070831298828
patch: return ; System . out . ;
rank: 179
score: 98.52406005859375
patch: return ; return ; if ; = return ;
rank: 179
score: 98.24156951904297
patch: for ( int ; ; ) {
rank: 180
score: 99.03501539963942
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) ; } }
rank: 180
score: 98.99909741950758
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair
rank: 180
score: 98.98857964409723
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ] . get CaMeL Exception ( ) ) ;
rank: 180
score: 98.78610464242789
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 ) ;
rank: 180
score: 98.68568638392857
patch: } else if ( return ;
rank: 180
score: 98.59661865234375
patch: else { return ; if return ; return ;
rank: 180
score: 98.53023856026786
patch: return ; ; } * /
rank: 180
score: 98.52193603515624
patch: return ; return ; if ; } return ;
rank: 180
score: 98.2384033203125
patch: } else { final ;
rank: 181
score: 99.03421783447266
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . comparator ) ;
rank: 181
score: 98.98834228515625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 181
score: 98.98291693793402
patch: else throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ; }
rank: 181
score: 98.78585012335526
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ) ;
rank: 181
score: 98.68486870659723
patch: else { if ; } } return ;
rank: 181
score: 98.59657796223958
patch: / else { return ; } return ;
rank: 181
score: 98.5280532836914
patch: else { return ; } ; }
rank: 181
score: 98.5197509765625
patch: return ; return ; else if ; return ;
rank: 181
score: 98.23693084716797
patch: return ; for ( ; ; )
rank: 182
score: 98.99842325846355
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 182
score: 98.98686137952302
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . err ) ;
rank: 182
score: 98.98239474826389
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 182
score: 98.78453153722427
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Optimization CaMeL Exception {
rank: 182
score: 98.68475341796875
patch: else { if ; return ; } return ;
rank: 182
score: 98.59657505580357
patch: return { for return true ;
rank: 182
score: 98.52767944335938
patch: else { throw new return ; }
rank: 182
score: 98.51942661830357
patch: / if return ; return ;
rank: 182
score: 98.23572649274554
patch: if ( ! ; return ;
rank: 183
score: 99.033203125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate CaMeL New CaMeL Simplex ( original ,
rank: 183
score: 98.99762672601744
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . }
rank: 183
score: 98.98587036132812
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex
rank: 183
score: 98.98231336805556
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . TRUE ) ;
rank: 183
score: 98.68339029947917
patch: } if return return ;
rank: 183
score: 98.59629313151042
patch: return return return true ;
rank: 183
score: 98.52621459960938
patch: return ; / * return false ;
rank: 183
score: 98.51919894748264
patch: return ; return ; if ; continue ;
rank: 183
score: 98.23539733886719
patch: while ( ; ) { return ;
rank: 184
score: 98.99747721354167
patch: return comparator instanceof Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 184
score: 98.98211310891544
patch: else throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ;
rank: 184
score: 98.68253580729167
patch: else { return ; } } else ;
rank: 184
score: 98.59602355957031
patch: else { return ; } ; *
rank: 184
score: 98.52621120876736
patch: return ; } for ( ; ; )
rank: 184
score: 98.51884242466518
patch: if return ; if return ;
rank: 184
score: 98.235107421875
patch: while ( ; ) {
rank: 185
score: 99.03280639648438
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL Simplex ( original ) ;
rank: 185
score: 98.9974032315341
patch: return comparator . compare ( reflected , comparator ) ;
rank: 185
score: 98.78401402064732
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ; } }
rank: 185
score: 98.68245697021484
patch: return return ; } else if ;
rank: 185
score: 98.59588623046875
patch: catch return ;
rank: 185
score: 98.5259017944336
patch: return true ; } if ( ;
rank: 185
score: 98.51878526475694
patch: return ; return ; ; if return ;
rank: 185
score: 98.23276192801339
patch: return super . close ( ;
rank: 186
score: 99.0327481356534
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair > contracted ;
rank: 186
score: 98.99736328125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 186
score: 98.98486328125
patch: throw new Optimization CaMeL Exception ( . get CaMeL Exception ( ) ) ;
rank: 186
score: 98.68170166015625
patch: } else { return false ; } return ;
rank: 186
score: 98.59579467773438
patch: i { return ; } return ;
rank: 186
score: 98.52430943080357
patch: return ; } * / }
rank: 186
score: 98.51814575195313
patch: return ; return ; if return ; break ;
rank: 186
score: 98.23237609863281
patch: finally { return ; } return ;
rank: 187
score: 99.0324642783717
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL Simplex ( ) ;
rank: 187
score: 98.99734061104911
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , comparator ) ; }
rank: 187
score: 98.98458862304688
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original
rank: 187
score: 98.97997283935547
patch: throw new Optimization CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . true ) ;
rank: 187
score: 98.78341674804688
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception true ;
rank: 187
score: 98.68155343191964
patch: return * return * return ;
rank: 187
score: 98.59412231445313
patch: return { return ; System . out . ;
rank: 187
score: 98.51790618896484
patch: return ; return ; -- return ;
rank: 187
score: 98.23192596435547
patch: else { return super . ; }
rank: 188
score: 98.99729817708334
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma . comparator ) ;
rank: 188
score: 98.98342413651316
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . out ) ;
rank: 188
score: 98.78312377929687
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ) ;
rank: 188
score: 98.68124825613839
patch: } else if ; if ;
rank: 188
score: 98.59159633091518
patch: / * return return return ;
rank: 188
score: 98.52128770616319
patch: return ; } else { return null ;
rank: 188
score: 98.5171890258789
patch: return ; return ; = return ;
rank: 188
score: 98.23142787388393
patch: else { return this ; }
rank: 189
score: 98.9972912016369
patch: return comparator . compare ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 189
score: 98.983232421875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 189
score: 98.97942243303571
patch: throw new Function CaMeL Evaluation CaMeL Exception ( this , $STRING$ ) ;
rank: 189
score: 98.78190782335069
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair >> ) ;
rank: 189
score: 98.68075997488839
patch: return * * * * ;
rank: 189
score: 98.59014020647321
patch: return { if return ; ;
rank: 189
score: 98.52097574869792
patch: return ; } * / * return ;
rank: 189
score: 98.51697387695313
patch: return ; ; if ; if ; return ;
rank: 189
score: 98.23141915457589
patch: return - 1 ; return ;
rank: 190
score: 99.03059895833333
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate CaMeL New CaMeL Simplex ;
rank: 190
score: 98.99724469866071
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 190
score: 98.98251953125
patch: throw new Optimization CaMeL Exception ( false ) ;
rank: 190
score: 98.9793636924342
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . true ) ;
rank: 190
score: 98.78099300986842
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 190
score: 98.6806411743164
patch: } else { ( return ; }
rank: 190
score: 98.58975830078126
patch: else { return ; } else { return ;
rank: 190
score: 98.51681857638889
patch: return ; if ; ; if return ;
rank: 191
score: 99.03005642361111
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . reflected ) ;
rank: 191
score: 98.99721808182566
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 191
score: 98.9786376953125
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 ) ;
rank: 191
score: 98.780859375
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( best , comparator ) ;
rank: 191
score: 98.68050711495536
patch: return * * return return ;
rank: 191
score: 98.52022976345486
patch: return ; } else { super . ;
rank: 191
score: 98.51669650607639
patch: return ; return ; break ; if ;
rank: 191
score: 98.23006439208984
patch: else { final return true ; }
rank: 192
score: 99.02987467447916
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare CaMeL
rank: 192
score: 98.99691659432871
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 192
score: 98.98213413783482
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , simplex ) ;
rank: 192
score: 98.9777323404948
patch: result = evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 192
score: 98.78082885742188
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , comparator ) ;
rank: 192
score: 98.58760070800781
patch: / else { return ; if ;
rank: 192
score: 98.51658412388393
patch: return ; ; } else {
rank: 192
score: 98.51652308872768
patch: return ; if return ; }
rank: 193
score: 99.02977576622597
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex ;
rank: 193
score: 98.98203735351562
patch: Real CaMeL Point CaMeL Value CaMeL Pair [ ] contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 193
score: 98.9771484375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . iterate CaMeL Simplex ) ;
rank: 193
score: 98.58582414899554
patch: catch ( $STRING$ ; return ;
rank: 193
score: 98.51629638671875
patch: return ; return ; return ; =
rank: 193
score: 98.51480538504464
patch: } ; / * * ;
rank: 193
score: 98.22610473632812
patch: finally { this . return ; }
rank: 194
score: 99.02960674579327
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ } }
rank: 194
score: 98.99650969328704
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 194
score: 98.78008069490132
patch: return Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 194
score: 98.67872314453125
patch: return * return ;
rank: 194
score: 98.58502875434027
patch: return return ; if return ; return ;
rank: 194
score: 98.5160888671875
patch: return ; return ; return ; return ; }
rank: 194
score: 98.51366424560547
patch: return true ; } return true ;
rank: 195
score: 99.02919108072916
patch: } return new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ;
rank: 195
score: 98.99647013346355
patch: return comparator . compare ( contracted , best ) ; }
rank: 195
score: 98.981640625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Optimization CaMeL Exception ) ;
rank: 195
score: 98.58424377441406
patch: / else { return ; return ;
rank: 195
score: 98.515380859375
patch: return ; ; if ; /
rank: 195
score: 98.5130615234375
patch: / * return ; } * /
rank: 195
score: 98.22238159179688
patch: else { super . ; return ;
rank: 196
score: 99.02892485119048
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair contracted . length
rank: 196
score: 98.99563524199695
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair
rank: 196
score: 98.98157348632813
patch: increment CaMeL Iterations CaMeL Counter ( ) ; }
rank: 196
score: 98.67806570870536
patch: } return return return false ;
rank: 196
score: 98.5841064453125
patch: int else { return return ;
rank: 196
score: 98.51522827148438
patch: return ; return ; if ; if / /
rank: 196
score: 98.51256561279297
patch: return ; / * return ; }
rank: 196
score: 98.22171456473214
patch: else { best = ; }
rank: 197
score: 99.02840169270833
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair = simplex ;
rank: 197
score: 98.99497767857143
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) {
rank: 197
score: 98.77913172104779
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best ) } ;
rank: 197
score: 98.51420762803819
patch: return ; if return ; ; return ;
rank: 197
score: 98.51116943359375
patch: return false ; } catch ( ;
rank: 197
score: 98.22023010253906
patch: else if ( ; return false )
rank: 198
score: 98.9949481670673
patch: return comparator instanceof Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 198
score: 98.97953869047619
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 198
score: 98.77744427849265
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ) ;
rank: 198
score: 98.67474365234375
patch: return ; } } return return ;
rank: 198
score: 98.58248465401786
patch: else { for return return ;
rank: 198
score: 98.51392279730902
patch: return ; ; if return ; if ;
rank: 198
score: 98.51069641113281
patch: return ; } while ( ; )
rank: 199
score: 98.97898512620192
patch: else { increment CaMeL Iterations CaMeL Counter ( comparator ) ; }
rank: 199
score: 98.77726476332721
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , false ) ;
rank: 199
score: 98.5821533203125
patch: return { return ; break ; }
rank: 199
score: 98.51344517299107
patch: return ; ; if ; int
rank: 199
score: 98.50913492838542
patch: catch ( Illegal CaMeL Argument CaMeL Exception ;
rank: 200
score: 98.99473571777344
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , khi , comparator ) ;
rank: 200
score: 98.9781005859375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Interrupted CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 200
score: 98.97273977179276
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . false ) ;
rank: 200
score: 98.77650960286458
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ;
rank: 200
score: 98.67266845703125
patch: else { if ( return ;
rank: 200
score: 98.58180067274306
patch: else { return return ; } return ;
rank: 200
score: 98.51317749023437
patch: return ; return ; return ; ; return ;
rank: 200
score: 98.50887044270833
patch: } * / * /
rank: 200
score: 98.21783447265625
patch: return value ;
rank: 201
score: 99.02742513020833
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ 0
rank: 201
score: 98.97799682617188
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ;
rank: 201
score: 98.77618963068181
patch: return increment CaMeL Iterations CaMeL Counter ( reflected ) ;
rank: 201
score: 98.67213745117188
patch: } else { this . return ; return ;
rank: 201
score: 98.58161163330078
patch: else { return ; } if false
rank: 201
score: 98.51309543185764
patch: return ; return ; else if return ;
rank: 201
score: 98.50885772705078
patch: if ( ; this . return ;
rank: 201
score: 98.21462576729911
patch: } else { final int ;
rank: 202
score: 99.02708675986842
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) best . get CaMeL Point ( ) ;
rank: 202
score: 98.9937744140625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 202
score: 98.97773573133681
patch: Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 202
score: 98.9723129272461
patch: throw new Optimization CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . false ) ;
rank: 202
score: 98.77618815104167
patch: return comparator . iterate CaMeL Simplex ( original , gamma , comparator ) ;
rank: 202
score: 98.67148166232639
patch: return * * * * / return ;
rank: 202
score: 98.51295471191406
patch: return ; return ; break ; }
rank: 202
score: 98.5075454711914
patch: return ; } return super . ;
rank: 202
score: 98.21300397600446
patch: if ( ; else return ;
rank: 203
score: 99.02575102306548
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair best ] ;
rank: 203
score: 98.99286965762867
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 203
score: 98.67095269097223
patch: else { return ; } else if ;
rank: 203
score: 98.57833862304688
patch: while return ; return ;
rank: 203
score: 98.51209106445313
patch: return ; if ; return ; if ; /
rank: 203
score: 98.50717599051339
patch: } / * * return ;
rank: 203
score: 98.21242850167411
patch: return true ; return true ;
rank: 204
score: 99.02524636008523
patch: else increment CaMeL Iterations CaMeL Counter ( comparator ) ;
rank: 204
score: 98.99276529947916
patch: return comparator . compare ( evaluate CaMeL New CaMeL Simplex , best ) ;
rank: 204
score: 98.97748357599431
patch: return increment CaMeL Iterations CaMeL Counter ( contracted ) ;
rank: 204
score: 98.97154017857143
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . true ) ;
rank: 204
score: 98.67053900824652
patch: else { return false ; } return ;
rank: 204
score: 98.5778579711914
patch: else { if return . return ;
rank: 204
score: 98.51081848144531
patch: return ; ; if return ; ;
rank: 204
score: 98.50679524739583
patch: } ; return false ;
rank: 205
score: 99.025146484375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair best ;
rank: 205
score: 98.992431640625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 205
score: 98.97679501488095
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 205
score: 98.57578125
patch: value { return ;
rank: 205
score: 98.51028878348214
patch: return ; if ; break ;
rank: 205
score: 98.50651719835069
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 205
score: 98.2118896484375
patch: final ; return ;
rank: 206
score: 99.025
patch: return throws Function CaMeL Evaluation CaMeL Exception , Function CaMeL Evaluation CaMeL Exception {
rank: 206
score: 98.99227566189236
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( }
rank: 206
score: 98.97123209635417
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair > ( best ) ;
rank: 206
score: 98.77481079101562
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , comparator ) ; }
rank: 206
score: 98.66938781738281
patch: } else { super . return ;
rank: 206
score: 98.57504272460938
patch: else { return - ;
rank: 206
score: 98.51027425130208
patch: return ; if ; return ; = ;
rank: 206
score: 98.50503540039062
patch: } * / return ;
rank: 206
score: 98.20989990234375
patch: } else if ( this . ;
rank: 207
score: 99.0249911221591
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 207
score: 98.99226648667279
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , reflected ) ;
rank: 207
score: 98.97621663411458
patch: return comparator . compare ( contracted , best ) < 0
rank: 207
score: 98.97119750976563
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 207
score: 98.77479248046875
patch: return ; } }
rank: 207
score: 98.66899108886719
patch: } if ; return return return ;
rank: 207
score: 98.57497732979911
patch: / else { return ; ;
rank: 207
score: 98.50958251953125
patch: return ; if ; ; break ;
rank: 207
score: 98.50243462456598
patch: return ; } * / * * /
rank: 207
score: 98.20917510986328
patch: items [ 0 ] = return ;
rank: 208
score: 99.02489295372597
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair comparator ) ;
rank: 208
score: 98.9921123798077
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ==
rank: 208
score: 98.97095540364583
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) best ) ;
rank: 208
score: 98.66780853271484
patch: return * * * * * /
rank: 208
score: 98.50845336914062
patch: return ; return ; while return ;
rank: 208
score: 98.5023701985677
patch: return ; * / }
rank: 208
score: 98.20828683035714
patch: this . return = false ;
rank: 209
score: 98.99168812144886
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 209
score: 98.97034912109375
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { }
rank: 209
score: 98.66766357421875
patch: else { if ; return ; } }
rank: 209
score: 98.57468668619792
patch: else { new return ;
rank: 209
score: 98.50792347301136
patch: return ; return ; } return ; } return ;
rank: 209
score: 98.50111389160156
patch: return ; / * * return ;
rank: 209
score: 98.20683070591518
patch: return Math . max ( ;
rank: 210
score: 99.02479248046875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( reflected , contracted ) ;
rank: 210
score: 98.99126120174633
patch: return evaluate CaMeL New CaMeL Simplex ( simplex , evaluate CaMeL New CaMeL Simplex ) ;
rank: 210
score: 98.97007533482143
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 210
score: 98.574462890625
patch: return return ; return { }
rank: 210
score: 98.5061264038086
patch: return ; return ; return ; int
rank: 210
score: 98.50093587239583
patch: return ; } else { this . ;
rank: 210
score: 98.20626831054688
patch: } else { final ; return ;
rank: 211
score: 98.99115545099431
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) contracted ;
rank: 211
score: 98.96949598524306
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . length ) ;
rank: 211
score: 98.77411852384868
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original , khi ,
rank: 211
score: 98.66431535993304
patch: else { if ; * /
rank: 211
score: 98.5741195678711
patch: else { return ; System . ;
rank: 211
score: 98.50604858398438
patch: return ; return ; if ; if ; ;
rank: 211
score: 98.50029161241319
patch: } else { this . ; ; }
rank: 211
score: 98.20581817626953
patch: else if ( ; } else {
rank: 212
score: 99.02400716145833
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 212
score: 98.9910198709239
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 1 , comparator ) ;
rank: 212
score: 98.96921705163044
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( best ) ;
rank: 212
score: 98.77406939338235
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted , comparator ) ;
rank: 212
score: 98.66299874441964
patch: } else = ; return ;
rank: 212
score: 98.57408989800348
patch: else { if return ; return ; }
rank: 212
score: 98.50595092773438
patch: return ; if ; = / ;
rank: 212
score: 98.50022888183594
patch: } else { throw new return ;
rank: 212
score: 98.20570373535156
patch: return & 0 x $NUMBER$ f ;
rank: 213
score: 99.02383188100961
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted )
rank: 213
score: 98.9907559481534
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] )
rank: 213
score: 98.96887788318452
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . false ) ;
rank: 213
score: 98.77397918701172
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex (
rank: 213
score: 98.662744140625
patch: } else { if ( return ; return ;
rank: 213
score: 98.50575949928977
patch: if ; return ; return ; if ; return ;
rank: 214
score: 99.02364676339286
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . evaluate CaMeL New CaMeL Simplex ( ) ;
rank: 214
score: 98.99055619673295
patch: return instanceof Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 214
score: 98.97320265997024
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . false ) ;
rank: 214
score: 98.96863471137152
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . current CaMeL
rank: 214
score: 98.77389526367188
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted ; }
rank: 214
score: 98.6618423461914
patch: } else { return ; } else
rank: 214
score: 98.57255859375
patch: else { return ; System . out ; }
rank: 214
score: 98.5055440266927
patch: if ; return ; ;
rank: 214
score: 98.49989013671875
patch: } ; * /
rank: 214
score: 98.20488630022321
patch: is CaMeL Empty = true ;
rank: 215
score: 98.99031575520833
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( contracted , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 215
score: 98.97294108072917
patch: Real CaMeL Point CaMeL Value CaMeL Pair [ ] contracted = evaluate CaMeL New CaMeL Simplex (
rank: 215
score: 98.96825453814338
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ++ original . length ] ;
rank: 215
score: 98.57249145507812
patch: else { return ; } System . max ;
rank: 215
score: 98.50536237444196
patch: return ; return ; if /
rank: 215
score: 98.49790649414062
patch: } ; return ;
rank: 215
score: 98.20479583740234
patch: if ( best == null ) {
rank: 216
score: 99.0223159790039
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception ; }
rank: 216
score: 98.98968146829044
patch: return comparator . compare ( reflected , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 216
score: 98.96819513494319
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) true ;
rank: 216
score: 98.77309744698661
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception * /
rank: 216
score: 98.66132269965277
patch: } else if ( is CaMeL Empty ;
rank: 216
score: 98.57210867745536
patch: else { else return ; }
rank: 216
score: 98.49789428710938
patch: } else { if ( ; ;
rank: 216
score: 98.20173863002232
patch: } else { final ; ;
rank: 217
score: 98.9894787016369
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ) ;
rank: 217
score: 98.9717129794034
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Cause ( ) ) ;
rank: 217
score: 98.66080932617187
patch: if ( . is CaMeL Empty ( ) ;
rank: 217
score: 98.5714599609375
patch: else { return ; System . out . add
rank: 217
score: 98.50276402064732
patch: return ; return ; ; /
rank: 217
score: 98.20164271763393
patch: if ( ; } return ;
rank: 218
score: 99.02172241210937
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Optimization CaMeL Exception ) ;
rank: 218
score: 98.97164577907986
patch: return original . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 218
score: 98.77236106178977
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 218
score: 98.660693359375
patch: else { return false ; } return false ;
rank: 218
score: 98.57133483886719
patch: value { return ; if return ;
rank: 218
score: 98.50239393446181
patch: return ; return ; if ; = ;
rank: 218
score: 98.20159912109375
patch: else { if ( ; return ;
rank: 219
score: 99.02129163240132
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted . get CaMeL Value ( ) ;
rank: 219
score: 98.98907001201923
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair +
rank: 219
score: 98.97117513020834
patch: throw new Optimization CaMeL Exception ( . get CaMeL Runtime ( ) ) ;
rank: 219
score: 98.96807861328125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . TRUE ) ;
rank: 219
score: 98.77139282226562
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + reflected ) ;
rank: 219
score: 98.66067504882812
patch: return return ; } if return ;
rank: 219
score: 98.56956990559895
patch: i { return ; ;
rank: 219
score: 98.50228118896484
patch: return ; if ; = start ;
rank: 219
score: 98.49650355747768
patch: return ; } return ; }
rank: 219
score: 98.20150756835938
patch: catch ( ; return ;
rank: 220
score: 98.98906017485119
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( reflected , evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 220
score: 98.97095947265625
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best
rank: 220
score: 98.9680508700284
patch: throw new Function CaMeL Evaluation CaMeL Exception ( this ,
rank: 220
score: 98.77085658482143
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , original ) ;
rank: 220
score: 98.66051567925348
patch: } else { if ; } return ;
rank: 220
score: 98.56925201416016
patch: i { return ; break ; }
rank: 220
score: 98.50225830078125
patch: return ; return ; } throw return ;
rank: 220
score: 98.20035807291667
patch: } return super . ;
rank: 221
score: 99.020458984375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) iterate CaMeL Simplex ;
rank: 221
score: 98.9883968955592
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , original , comparator ) ;
rank: 221
score: 98.97080078125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . class ,
rank: 221
score: 98.96800401475694
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . $STRING$ ) ;
rank: 221
score: 98.7705078125
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , best ) ;
rank: 221
score: 98.660400390625
patch: } return ; } else return ;
rank: 221
score: 98.56905110677083
patch: else { return ; if ; return ;
rank: 221
score: 98.50157165527344
patch: return ; if ; throw return ;
rank: 221
score: 98.49379185267857
patch: return ; } ; * /
rank: 222
score: 99.01876491970486
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ;
rank: 222
score: 98.98797052556819
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ) ;
rank: 222
score: 98.97068434495192
patch: return evaluate CaMeL New CaMeL Simplex ( original , original ) ;
rank: 222
score: 98.96751098632812
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 222
score: 98.77027130126953
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Optimization CaMeL Exception
rank: 222
score: 98.65931919642857
patch: return return ; } if ;
rank: 222
score: 98.5682144165039
patch: return { return ; { return ;
rank: 222
score: 98.50123426649306
patch: return ; if ; ; return ; ;
rank: 222
score: 98.49339076450893
patch: * return ; } * /
rank: 222
score: 98.19887084960938
patch: return - $NUMBER$ ;
rank: 223
score: 99.01852256373355
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . compare ( reflected , best )
rank: 223
score: 98.96992420014881
patch: comparator . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 223
score: 98.77020263671875
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , false ) ;
rank: 223
score: 98.6583251953125
patch: return * * * * * ;
rank: 223
score: 98.5681660970052
patch: else { return ; {
rank: 223
score: 98.50006103515625
patch: return ; return ; if break ;
rank: 223
score: 98.19369942801339
patch: if ( ; break ; }
rank: 224
score: 99.01821067116477
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , khi ,
rank: 224
score: 98.98782552083334
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) list ;
rank: 224
score: 98.77009020353618
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > best ) ;
rank: 224
score: 98.65814887152777
patch: } else { this . return return ;
rank: 224
score: 98.56803131103516
patch: else { if return { return ;
rank: 224
score: 98.49998474121094
patch: return ; return ; if / ;
rank: 224
score: 98.49244907924107
patch: return ; } } finally {
rank: 224
score: 98.19248962402344
patch: else if ( ; return true )
rank: 225
score: 98.96834070542279
patch: throw new Optimization CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 225
score: 98.96661987304688
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . get CaMeL Runtime ( )
rank: 225
score: 98.7696533203125
patch: throw new Optimization CaMeL Exception ( $STRING$ ) ; }
rank: 225
score: 98.49877251519098
patch: return ; ; if return ; break ;
rank: 225
score: 98.49179077148438
patch: return ; } / * * /
rank: 225
score: 98.189208984375
patch: else { final return ;
rank: 226
score: 98.96806504991319
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) original [ 0 ] ;
rank: 226
score: 98.96652221679688
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . length ( ) ) ;
rank: 226
score: 98.76926879882812
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + original ) ;
rank: 226
score: 98.65491943359375
patch: } else { return ; } } catch ;
rank: 226
score: 98.56604875837054
patch: try { return return ; ;
rank: 226
score: 98.49830932617188
patch: return ; return ; if return ; if ;
rank: 226
score: 98.49178059895833
patch: if ( return ) { return ; }
rank: 226
score: 98.18807220458984
patch: while ( true ) { return ;
rank: 227
score: 99.0177001953125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( null ) ;
rank: 227
score: 98.98597005208333
patch: return evaluate CaMeL New CaMeL Simplex ( original , this . comparator ) ;
rank: 227
score: 98.96617431640625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . false , $STRING$ ) ;
rank: 227
score: 98.7692009420956
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 , comparator ) ;
rank: 227
score: 98.65438406808036
patch: } else { continue ; }
rank: 227
score: 98.5658935546875
patch: else { return ; return ; } return ;
rank: 227
score: 98.49717407226562
patch: return ; return ; break ; if return ;
rank: 227
score: 98.4893798828125
patch: return true ; } catch ( ;
rank: 227
score: 98.18712615966797
patch: else { this . return = ;
rank: 228
score: 98.98444475446429
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair contracted , comparator ) ;
rank: 228
score: 98.9671859741211
patch: return evaluate CaMeL New CaMeL Simplex ( simplex , khi , comparator ) ;
rank: 228
score: 98.96602783203124
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . true , $STRING$ ) ;
rank: 228
score: 98.76905924479166
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original )
rank: 228
score: 98.56519775390625
patch: else { return ; } ; if return ;
rank: 228
score: 98.49591064453125
patch: return ; break ; if ; return ;
rank: 228
score: 98.18621063232422
patch: else if ( ; return ; }
rank: 229
score: 99.017431640625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 229
score: 98.98399135044643
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . $NUMBER$ ) ;
rank: 229
score: 98.96712239583333
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . length ) ;
rank: 229
score: 98.96587775735294
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best } ; }
rank: 229
score: 98.76898514597039
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , best ) ;
rank: 229
score: 98.5648422241211
patch: else { return ; return ; ;
rank: 229
score: 98.49573863636364
patch: return ; return ; if return ; return ; }
rank: 229
score: 98.48790825737848
patch: return Boolean . value CaMeL Of ( ;
rank: 229
score: 98.18620082310268
patch: super . run ( ) ;
rank: 230
score: 99.01740056818181
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 230
score: 98.98376012731481
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair final Real CaMeL Point CaMeL Value CaMeL Pair ++ ;
rank: 230
score: 98.96708984375
patch: return evaluate CaMeL New CaMeL Simplex ( original , comparator , comparator ) ;
rank: 230
score: 98.96582903180804
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) contracted ;
rank: 230
score: 98.65164184570312
patch: return return ; } } return ;
rank: 230
score: 98.56288364955357
patch: else { list = return ;
rank: 230
score: 98.4953369140625
patch: return ; if ; return ; if ; int
rank: 230
score: 98.48612213134766
patch: } else { return this ; }
rank: 230
score: 98.18537902832031
patch: return super . ; } else {
rank: 231
score: 98.98309733072917
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) this ;
rank: 231
score: 98.96706321022727
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ) ;
rank: 231
score: 98.76807454427083
patch: return Real CaMeL Point CaMeL Value CaMeL Pair [ ] original = simplex ;
rank: 231
score: 98.64891052246094
patch: } else { new return ; }
rank: 231
score: 98.56272379557292
patch: else { return ; if System . ;
rank: 231
score: 98.49517144097223
patch: return ; return ; break ; return ;
rank: 231
score: 98.48603166852679
patch: return false ; } finally {
rank: 231
score: 98.18518938337054
patch: do { return true ; }
rank: 232
score: 99.01631469726563
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare CaMeL To ( contracted ) ;
rank: 232
score: 98.98288302951389
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ] ;
rank: 232
score: 98.767431640625
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , gamma , comparator ) ;
rank: 232
score: 98.64875139508929
patch: } else return - 1 ;
rank: 232
score: 98.56251356336806
patch: else { return return ; } break ;
rank: 232
score: 98.49442545572917
patch: return ; return ; ; if ; ;
rank: 232
score: 98.48335266113281
patch: } ; / * * return ;
rank: 233
score: 99.0162841796875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL Simplex ( best ) ;
rank: 233
score: 98.98232886904762
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair reflected ;
rank: 233
score: 98.966064453125
patch: throw get CaMeL Runtime ( ) . Illegal CaMeL Argument CaMeL Exception ( ,
rank: 233
score: 98.9642842610677
patch: throw new Function CaMeL Evaluation CaMeL Exception ( simplex ) ;
rank: 233
score: 98.76734834558823
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original ) } ;
rank: 233
score: 98.64865548270089
patch: } else { } if ;
rank: 233
score: 98.18453543526786
patch: else do { return ; }
rank: 234
score: 99.01569680606617
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex (
rank: 234
score: 98.98230852399554
patch: evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 234
score: 98.96575249565973
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ] . get CaMeL Runtime ( ) ) ;
rank: 234
score: 98.9639423076923
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception ;
rank: 234
score: 98.76734076605902
patch: return this . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 234
score: 98.56207275390625
patch: else { if return ; break ;
rank: 234
score: 98.49411843039773
patch: return ; return ; if ; { return ; }
rank: 234
score: 98.48262023925781
patch: return true ; this . return ;
rank: 234
score: 98.18215506417411
patch: else if ( ; } }
rank: 235
score: 99.01565069901316
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 235
score: 98.9815673828125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > } }
rank: 235
score: 98.96547037760416
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL
rank: 235
score: 98.9635342684659
patch: throw throws Function CaMeL Evaluation CaMeL Exception { return ;
rank: 235
score: 98.76719156901042
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , false ) ;
rank: 235
score: 98.56194390190973
patch: else { return ; if return ; }
rank: 235
score: 98.49385986328124
patch: return ; if ; return ; = return ;
rank: 235
score: 98.47984967912946
patch: } else { throw ; }
rank: 235
score: 98.1817626953125
patch: do { return false ;
rank: 236
score: 99.01517944335937
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 236
score: 98.96287434895834
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex return
rank: 236
score: 98.6483154296875
patch: } else { return ; } } else
rank: 236
score: 98.56182183159723
patch: else { return ; } if return {
rank: 236
score: 98.49241129557292
patch: return ; return ; if / / /
rank: 236
score: 98.47963460286458
patch: return ; / * return ; * /
rank: 236
score: 98.1806131998698
patch: return return - 1 ;
rank: 237
score: 99.01497395833333
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 237
score: 98.981171875
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair , Real CaMeL Point CaMeL Value CaMeL Pair
rank: 237
score: 98.96472886029412
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted } ; }
rank: 237
score: 98.96278076171875
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) best ) ;
rank: 237
score: 98.64817504882812
patch: } else { if ; } else return ;
rank: 237
score: 98.56144714355469
patch: else if return ; return false ;
rank: 237
score: 98.49158935546875
patch: return ; return ; return ; throw return ;
rank: 237
score: 98.47714233398438
patch: } else { return 0 ; }
rank: 237
score: 98.1796875
patch: if ( compare CaMeL To ( ;
rank: 238
score: 98.98105256453805
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) ;
rank: 238
score: 98.96456909179688
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 238
score: 98.96224539620536
patch: result = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 238
score: 98.76622721354167
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , false ) ;
rank: 238
score: 98.6480484008789
patch: } else if ; if return ;
rank: 238
score: 98.56043243408203
patch: / else { return ; break ;
rank: 238
score: 98.48779296875
patch: return ; if ; = /
rank: 238
score: 98.17961883544922
patch: else if ( ; } return ;
rank: 239
score: 99.01481119791667
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . compare ( reflected , best ) ] ;
rank: 239
score: 98.98089599609375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] , reflected ) ;
rank: 239
score: 98.96215057373047
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . class ) ;
rank: 239
score: 98.76614040798611
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex (
rank: 239
score: 98.64790562220982
patch: } return return - 1 ;
rank: 239
score: 98.55982317243304
patch: else { return ; ; ;
rank: 239
score: 98.48749334161931
patch: return ; return ; break ; if ; return ;
rank: 239
score: 98.47672816685268
patch: return ; } / * *
rank: 239
score: 98.17764718191964
patch: return new ; } return ;
rank: 240
score: 99.01456298828126
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( contracted ) ;
rank: 240
score: 98.98030598958333
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 240
score: 98.9640625
patch: } final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 240
score: 98.76580403645833
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( best , best ) ;
rank: 240
score: 98.64678192138672
patch: else { if return ; } }
rank: 240
score: 98.55849202473958
patch: else { for return ;
rank: 240
score: 98.48692491319444
patch: return ; ; return ; } return ;
rank: 240
score: 98.47496541341145
patch: } / * return ;
rank: 240
score: 98.17735072544643
patch: super . return = true ;
rank: 241
score: 99.01446533203125
patch: return evaluate CaMeL New CaMeL Simplex ( khi ) ;
rank: 241
score: 98.98001098632812
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ; }
rank: 241
score: 98.96402138157895
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 241
score: 98.96189252068015
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , best ) ;
rank: 241
score: 98.765478515625
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 241
score: 98.64625767299107
patch: } if ; else return ;
rank: 241
score: 98.55707550048828
patch: finally { return ; if return ;
rank: 241
score: 98.48650568181819
patch: return ; ; if ; return ; } return ;
rank: 241
score: 98.47471110026042
patch: } else { super . ; return ;
rank: 241
score: 98.17643519810268
patch: } } finally { return ;
rank: 242
score: 99.01418832632211
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) return ;
rank: 242
score: 98.97991071428571
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 242
score: 98.96259765625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Interrupted CaMeL Exception . get CaMeL Exception ( ) ) ;
rank: 242
score: 98.7651123046875
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , reflected ) ;
rank: 242
score: 98.64624895368304
patch: } return return * return ;
rank: 242
score: 98.55697021484374
patch: else { return ; return ; if return ;
rank: 242
score: 98.4856948852539
patch: return ; return ; ++ return ;
rank: 242
score: 98.47444915771484
patch: return false ; } * / ;
rank: 243
score: 99.0141357421875
patch: else final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 243
score: 98.979140625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 243
score: 98.96254660866477
patch: return { increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 243
score: 98.7650146484375
patch: return comparator . reflected ; }
rank: 243
score: 98.55485316685268
patch: return { for return false ;
rank: 243
score: 98.48539428710937
patch: return ; return ; if ; return ; try
rank: 243
score: 98.47440883091518
patch: return ; } catch ( ;
rank: 243
score: 98.17411041259766
patch: if ( ; return false ) {
rank: 244
score: 99.01397705078125
patch: return Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 244
score: 98.961669921875
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception { return ;
rank: 244
score: 98.96138671875
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 244
score: 98.64267578125
patch: } else { super . return ; return ;
rank: 244
score: 98.55394635881696
patch: return ; if return return ;
rank: 244
score: 98.48535766601563
patch: return ; if ; return ; return ; /
rank: 244
score: 98.47350202287946
patch: return ; * / * /
rank: 244
score: 98.17356872558594
patch: return is CaMeL Empty ( ; }
rank: 245
score: 99.01358835320724
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original .
rank: 245
score: 98.97850501019022
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ 1 ] ;
rank: 245
score: 98.96112670898438
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( ,
rank: 245
score: 98.64152526855469
patch: } if return ; return return ;
rank: 245
score: 98.55377197265625
patch: else { return ; } / *
rank: 245
score: 98.48440115792411
patch: if ; return ; / /
rank: 245
score: 98.47235785590277
patch: } ; if ( ; this . ;
rank: 246
score: 99.01195610894098
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . FALSE ) ;
rank: 246
score: 98.97802734375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 246
score: 98.96079799107143
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; }
rank: 246
score: 98.76425509982639
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator , comparator ) ;
rank: 246
score: 98.64075724283855
patch: } return * * ;
rank: 246
score: 98.55336507161458
patch: else { return ; int
rank: 246
score: 98.48434448242188
patch: return ; if ; int
rank: 246
score: 98.47210693359375
patch: return ; } if ( return ;
rank: 246
score: 98.17192993164062
patch: return return true ;
rank: 247
score: 99.01190185546875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 247
score: 98.97780354817708
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 247
score: 98.96093071831598
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original
rank: 247
score: 98.96058485243056
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ) {
rank: 247
score: 98.76416015625
patch: return this . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 247
score: 98.64015197753906
patch: break ; } else if return ;
rank: 247
score: 98.55290876116071
patch: else { return ; ; /
rank: 247
score: 98.48366292317708
patch: return ; return ; if ; return }
rank: 247
score: 98.16888427734375
patch: throw new ; } return ;
rank: 248
score: 98.97750091552734
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] , best ) ;
rank: 248
score: 98.76361083984375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair
rank: 248
score: 98.63967895507812
patch: } else if ; return ; }
rank: 248
score: 98.552734375
patch: else { return ; / else {
rank: 248
score: 98.48248291015625
patch: return ; return ; { return ;
rank: 248
score: 98.1683349609375
patch: samples [ 0 ] = ;
rank: 249
score: 98.9771259014423
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate , comparator ) ;
rank: 249
score: 98.96027080829327
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 249
score: 98.96001838235294
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length ) ] ;
rank: 249
score: 98.76354166666667
patch: return evaluate CaMeL New CaMeL Simplex ( original , contracted , comparator ) ;
rank: 249
score: 98.63945661272321
patch: else if ; else return ;
rank: 249
score: 98.48198106553819
patch: return ; return ; } return ; /
rank: 249
score: 98.47163609095982
patch: } else if ( ; ;
rank: 250
score: 99.01119290865384
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ original ;
rank: 250
score: 98.97709825303819
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex (
rank: 250
score: 98.95993874289773
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> comparator ) ;
rank: 250
score: 98.95914459228516
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , khi , comparator ) ;
rank: 250
score: 98.76211547851562
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , best ) ;
rank: 250
score: 98.63871765136719
patch: else { if ; } } }
rank: 250
score: 98.55142822265626
patch: return { return ; System . out . return
rank: 250
score: 98.48179931640625
patch: return ; return ; if if ; return ;
rank: 250
score: 98.47161865234375
patch: return true ; } * / ;
rank: 250
score: 98.16785539899554
patch: return true ; return false ;
rank: 251
score: 99.01105346679688
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 251
score: 98.97703552246094
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ) ; }
rank: 251
score: 98.76146850585937
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 251
score: 98.63570404052734
patch: return ; } } return false ;
rank: 251
score: 98.55060424804688
patch: else { return ; } } if return ;
rank: 251
score: 98.48163519965277
patch: return ; return ; if ; ; }
rank: 251
score: 98.16664341517857
patch: finally { return ; } }
rank: 252
score: 98.976806640625
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( contracted , comparator ) ;
rank: 252
score: 98.95880126953125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . sleep ) ;
rank: 252
score: 98.76123809814453
patch: ret = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 252
score: 98.63508436414931
patch: } else return false ; return false ;
rank: 252
score: 98.55025227864583
patch: return { return ; {
rank: 252
score: 98.48101128472223
patch: return ; return ; } if ; ;
rank: 252
score: 98.4708480834961
patch: return ; } ; if ( ;
rank: 252
score: 98.16587829589844
patch: } for ( final ; ; )
rank: 253
score: 99.01038411458333
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) khi ; }
rank: 253
score: 98.97655087425595
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , original , gamma , comparator ) ;
rank: 253
score: 98.95906929347827
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( simplex ) ;
rank: 253
score: 98.95836385091145
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . class . get CaMeL Exception ( ) ) ;
rank: 253
score: 98.76051635742188
patch: return simplex ; }
rank: 253
score: 98.63502502441406
patch: } else { if ; break ;
rank: 253
score: 98.55012512207031
patch: return return ; if ; return ;
rank: 253
score: 98.48041534423828
patch: return ; return ; return ; throw
rank: 253
score: 98.46728515625
patch: return ; } ; this . return ;
rank: 253
score: 98.16323852539062
patch: else { return false ; } ;
rank: 254
score: 99.01035563151042
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . comparator ) ;
rank: 254
score: 98.95891779119319
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Class ( ) ) ;
rank: 254
score: 98.95796130952381
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . true ) ;
rank: 254
score: 98.76026611328125
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + contracted ) ;
rank: 254
score: 98.63394504123264
patch: else { return ; return ; } }
rank: 254
score: 98.54905700683594
patch: else return ; return { return ;
rank: 254
score: 98.48036193847656
patch: return ; return ; else if ;
rank: 254
score: 98.46620008680556
patch: } finally { out . close ( ;
rank: 255
score: 99.00978781960227
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted ;
rank: 255
score: 98.97607421875
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 0 , comparator ) ;
rank: 255
score: 98.95860460069444
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) new Function CaMeL Evaluation CaMeL Exception ( ) ;
rank: 255
score: 98.95677771935097
patch: return evaluate CaMeL New CaMeL Simplex ( original , simplex ) ;
rank: 255
score: 98.7598876953125
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair > contracted ;
rank: 255
score: 98.54736328125
patch: } else { return ; break ;
rank: 255
score: 98.48019409179688
patch: return ; } return ; return ;
rank: 255
score: 98.46609061104911
patch: else { throw new return ;
rank: 255
score: 98.1593017578125
patch: if ( return ) { return ;
rank: 256
score: 99.00958862304688
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 256
score: 98.95831853693181
patch: return original . compare CaMeL To ( comparator ) ;
rank: 256
score: 98.9556194802989
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 256
score: 98.75935872395833
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ; }
rank: 256
score: 98.63013458251953
patch: return return return ; } else {
rank: 256
score: 98.54447631835937
patch: else { return ; } / * return ;
rank: 256
score: 98.4791488647461
patch: return ; if ; return ; this
rank: 256
score: 98.46517605251736
patch: } else { return false ; } ;
rank: 257
score: 99.00944688585069
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original
rank: 257
score: 98.97583946814903
patch: return evaluate CaMeL New CaMeL Simplex ( original , false ) ;
rank: 257
score: 98.95819091796875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( comparator ) ;
rank: 257
score: 98.95554809570312
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { } }
rank: 257
score: 98.62918090820312
patch: } else if ( ! return ;
rank: 257
score: 98.54400634765625
patch: else { return return return ;
rank: 257
score: 98.47906494140625
patch: return ; if ; return ; set
rank: 257
score: 98.46453857421875
patch: if ( ; return true ;
rank: 258
score: 99.00904756433823
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * }
rank: 258
score: 98.95810768821023
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ) ;
rank: 258
score: 98.95509440104166
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex final
rank: 258
score: 98.54354248046874
patch: else return ; ;
rank: 258
score: 98.47882690429688
patch: return ; return ; if ; = / /
rank: 258
score: 98.46409388950893
patch: return null ; } * /
rank: 259
score: 98.9756368001302
patch: return comparator . compare ( reflected , best ) ; }
rank: 259
score: 98.9544318704044
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) ,
rank: 259
score: 98.75839233398438
patch: return comparator . increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 259
score: 98.62779889787946
patch: break ; } else if ;
rank: 259
score: 98.54323323567708
patch: return return return ; return { return ;
rank: 259
score: 98.47787814670139
patch: return ; ; if ; = return ;
rank: 259
score: 98.4638671875
patch: return true ; } } return false ;
rank: 259
score: 98.1524658203125
patch: dialog = new ; return ;
rank: 260
score: 99.00872802734375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ evaluate CaMeL New CaMeL Simplex ; }
rank: 260
score: 98.97553045099431
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ;
rank: 260
score: 98.957275390625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( original , best ) ;
rank: 260
score: 98.95436448317308
patch: return comparator . compare ( reflected , best ) <= 0 ;
rank: 260
score: 98.75764016544117
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , best , comparator ) ;
rank: 260
score: 98.5420150756836
patch: else { return return ; } ;
rank: 260
score: 98.4769775390625
patch: return ; if ; return ; else return ;
rank: 260
score: 98.15206146240234
patch: else { final return false ; }
rank: 261
score: 99.00847516741071
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 261
score: 98.97510782877605
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 261
score: 98.9569979580966
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( ) ;
rank: 261
score: 98.95433285361842
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 261
score: 98.75726928710938
patch: return Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 261
score: 98.62615203857422
patch: } else { return * return ;
rank: 261
score: 98.5419921875
patch: return return return return return ;
rank: 261
score: 98.47586059570312
patch: if return ; if ; return ;
rank: 261
score: 98.15202026367187
patch: else return true ;
rank: 262
score: 99.00789969308036
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original ; }
rank: 262
score: 98.9566650390625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception )
rank: 262
score: 98.95422757056451
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 262
score: 98.62603081597223
patch: else { return ; return ; return ;
rank: 262
score: 98.54193793402777
patch: else { if return ; while return ;
rank: 262
score: 98.47544167258523
patch: return ; return ; } if return ; return ;
rank: 262
score: 98.46098327636719
patch: return ; } ; } * /
rank: 262
score: 98.15152413504464
patch: catch ( Runtime CaMeL Exception ;
rank: 263
score: 99.00768324908088
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception iterate CaMeL Simplex ) ;
rank: 263
score: 98.97433268229166
patch: comparator . compare ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 263
score: 98.95416618795956
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected ; } }
rank: 263
score: 98.75684814453125
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , reflected ) ;
rank: 263
score: 98.62429809570312
patch: } return ; } return false ;
rank: 263
score: 98.54186139787946
patch: return return ; return true ;
rank: 263
score: 98.47504340277777
patch: return ; if return ; return ; }
rank: 263
score: 98.46086120605469
patch: return ; / * return true ;
rank: 263
score: 98.1514892578125
patch: else if ( ; ;
rank: 264
score: 99.00748344089673
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair original . length ] ;
rank: 264
score: 98.97410946800595
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair /
rank: 264
score: 98.95381091889881
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 264
score: 98.75675241570724
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > original ) ;
rank: 264
score: 98.624267578125
patch: break ; } else { return ;
rank: 264
score: 98.54185791015625
patch: else { return ; } / * / /
rank: 264
score: 98.47453308105469
patch: return ; return ; if ; try
rank: 264
score: 98.45840115017361
patch: return ; System . out . ; }
rank: 264
score: 98.15053304036458
patch: finally { return false ;
rank: 265
score: 99.00740269252232
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ $NUMBER$ ] ;
rank: 265
score: 98.9740459735577
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ++
rank: 265
score: 98.62273406982422
patch: else if return ; return ; }
rank: 265
score: 98.541748046875
patch: else { return ; } catch return ;
rank: 265
score: 98.47331099076705
patch: return ; return ; if ; ; return ; }
rank: 265
score: 98.45795549665179
patch: return true ; } finally {
rank: 265
score: 98.15042877197266
patch: if ( comparator . compare ( ;
rank: 266
score: 99.00715855189732
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted ; }
rank: 266
score: 98.9729248046875
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( contracted , best ) ;
rank: 266
score: 98.95599655877976
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> contracted ;
rank: 266
score: 98.95294867621527
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ . get CaMeL Runtime ( ) ) ;
rank: 266
score: 98.75636800130208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 266
score: 98.62224578857422
patch: } else { set ; return ;
rank: 266
score: 98.54163208007813
patch: return { return ; if return ; return ;
rank: 266
score: 98.47315325055804
patch: return ; if ++ return ;
rank: 266
score: 98.45782470703125
patch: } if ( ; this . return ;
rank: 266
score: 98.1498031616211
patch: try { return ; } catch ;
rank: 267
score: 99.00700073242187
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL Simplex ( contracted ) ;
rank: 267
score: 98.97290606831395
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . ;
rank: 267
score: 98.952880859375
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { khi
rank: 267
score: 98.75601196289062
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator , comparator ) ;
rank: 267
score: 98.62181854248047
patch: return return ; } return true ;
rank: 267
score: 98.54150390625
patch: } return return return {
rank: 267
score: 98.47249755859374
patch: return ; if ; = / ; return ;
rank: 267
score: 98.45455593532986
patch: return ; ; } else { return ;
rank: 267
score: 98.14898681640625
patch: else { super . ; ; }
rank: 268
score: 99.00690166766827
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator ;
rank: 268
score: 98.97222137451172
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ;
rank: 268
score: 98.95499965122768
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { 1
rank: 268
score: 98.9528057391827
patch: return evaluate CaMeL New CaMeL Simplex ( original , reflected ) ;
rank: 268
score: 98.54128011067708
patch: else { return ; /
rank: 268
score: 98.47201538085938
patch: return ; if ; -- return ;
rank: 268
score: 98.45262145996094
patch: } else { return super . ;
rank: 268
score: 98.14833068847656
patch: @ Override public void ; * /
rank: 269
score: 99.00677168996711
patch: return evaluate CaMeL New CaMeL Simplex ( final Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ;
rank: 269
score: 98.97206333705357
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > } }
rank: 269
score: 98.95490264892578
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ;
rank: 269
score: 98.95279947916667
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL
rank: 269
score: 98.75582885742188
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 269
score: 98.62116241455078
patch: } else { if ; } else
rank: 269
score: 98.5406494140625
patch: else { return ; int System . ;
rank: 269
score: 98.47197723388672
patch: throw return ;
rank: 269
score: 98.45215861002605
patch: return ; default * /
rank: 269
score: 98.14742279052734
patch: if ( ; return super . ;
rank: 270
score: 99.0067138671875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . out ) ; }
rank: 270
score: 98.97203776041667
patch: ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ;
rank: 270
score: 98.95451554008152
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( original ) ;
rank: 270
score: 98.75551350911458
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair best ) ;
rank: 270
score: 98.6192626953125
patch: return * * * ;
rank: 270
score: 98.54029192243304
patch: finally { return return ; }
rank: 270
score: 98.47191162109375
patch: return ; if ; = * / return ;
rank: 270
score: 98.4521255493164
patch: else { return true ; } }
rank: 270
score: 98.14705657958984
patch: } if ( ; if ( ;
rank: 271
score: 98.97178188590117
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair } }
rank: 271
score: 98.95424517463235
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . comparator ,
rank: 271
score: 98.54010009765625
patch: return { return ; if ; return ;
rank: 271
score: 98.4718017578125
patch: return ; if ; return ; ; ;
rank: 271
score: 98.4511489868164
patch: return ; } else return null ;
rank: 271
score: 98.14590454101562
patch: do { this . return ; }
rank: 272
score: 99.00618489583333
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair . iterator ( ) ] ;
rank: 272
score: 98.97169131324405
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair }
rank: 272
score: 98.95420927159927
patch: ret = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 272
score: 98.7549057006836
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best ) ;
rank: 272
score: 98.61768450055804
patch: return * * return * /
rank: 272
score: 98.54004516601563
patch: else { return ; if ; return ; }
rank: 272
score: 98.47164916992188
patch: return ; else
rank: 272
score: 98.45093451605902
patch: else { return ; } } * /
rank: 272
score: 98.14552815755208
patch: final ; if ( ;
rank: 273
score: 99.00617133246527
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( contracted ) ;
rank: 273
score: 98.97118201622597
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair )
rank: 273
score: 98.95020693824405
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . this ) ;
rank: 273
score: 98.7546630859375
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 , comparator ) ;
rank: 273
score: 98.61713409423828
patch: return return ; } } else {
rank: 273
score: 98.53919474283855
patch: i { return return ;
rank: 273
score: 98.4503173828125
patch: return ; } System . out . ;
rank: 273
score: 98.14541625976562
patch: if ( ; continue ;
rank: 274
score: 99.005859375
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) evaluate CaMeL New CaMeL Simplex ;
rank: 274
score: 98.97115773168103
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ;
rank: 274
score: 98.7542724609375
patch: return Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 274
score: 98.61673990885417
patch: else { return * ; } return ;
rank: 274
score: 98.53886108398437
patch: else { return ; } while return return ;
rank: 274
score: 98.47113037109375
patch: return ; if ; return ; boolean
rank: 274
score: 98.44977484809027
patch: this . return ; } * / ;
rank: 274
score: 98.14497593470982
patch: else if ( ; continue ;
rank: 275
score: 99.00578870271382
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( ) ;
rank: 275
score: 98.95381673177083
patch: throw new Function CaMeL Evaluation CaMeL Exception ( + Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 275
score: 98.95005731997283
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Cause ( ) ) ;
rank: 275
score: 98.75420379638672
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception { }
rank: 275
score: 98.61622619628906
patch: } else { } else return ;
rank: 275
score: 98.53834228515625
patch: else { return ; return ; break ; }
rank: 275
score: 98.469287109375
patch: return ; return ; return ; if ; =
rank: 275
score: 98.44881184895833
patch: return ; * return ; } * /
rank: 276
score: 99.00568590666118
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . get CaMeL Iterations ( ) ;
rank: 276
score: 98.97007649739584
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , reflected , comparator ) ;
rank: 276
score: 98.94988606770833
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { gamma ;
rank: 276
score: 98.75414225260417
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , contracted ) ;
rank: 276
score: 98.61574978298611
patch: else { if ; return ; } else
rank: 276
score: 98.46919759114583
patch: return ; return ; ; return ; }
rank: 277
score: 99.00474243164062
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . get CaMeL Value ( ) ; }
rank: 277
score: 98.96992761948529
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , contracted ) ;
rank: 277
score: 98.95361328125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . true ,
rank: 277
score: 98.7526123046875
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 277
score: 98.614990234375
patch: * * * * / return ;
rank: 277
score: 98.469140625
patch: return ; if ; if ; return ; ;
rank: 277
score: 98.44805908203125
patch: return false ; } * return false ;
rank: 277
score: 98.14231654575893
patch: is CaMeL Empty = false ;
rank: 278
score: 99.00423990885416
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ - 1 ] ;
rank: 278
score: 98.96985802283653
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair /
rank: 278
score: 98.9494295987216
patch: increment CaMeL Iterations CaMeL Counter ( ) ; return ;
rank: 278
score: 98.75254313151042
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original ,
rank: 278
score: 98.61360677083333
patch: return ; } else ;
rank: 278
score: 98.53775634765626
patch: else { return return ; } break ; }
rank: 278
score: 98.46871337890624
patch: return ; if ; return ; -- return ;
rank: 278
score: 98.4468765258789
patch: return ; * / return ; }
rank: 278
score: 98.14230346679688
patch: } else if ( comparator . ;
rank: 279
score: 98.9696044921875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ;
rank: 279
score: 98.95347764756944
patch: throw instanceof Function CaMeL Evaluation CaMeL Exception ? ( Function CaMeL Evaluation CaMeL Exception ) comparator ;
rank: 279
score: 98.94917805989583
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . err ,
rank: 279
score: 98.75250244140625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { evaluate CaMeL New CaMeL Simplex } ;
rank: 279
score: 98.61259242466518
patch: / * * * * /
rank: 279
score: 98.53730010986328
patch: else { return ; int else ;
rank: 279
score: 98.44636366102431
patch: return ; } * / if ( ;
rank: 280
score: 99.0038330078125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ; } }
rank: 280
score: 98.94885971966912
patch: throw new Function CaMeL Evaluation CaMeL Exception ( . get CaMeL Message ( ) ) ;
rank: 280
score: 98.75238037109375
patch: return best . get CaMeL Point ( ) ;
rank: 280
score: 98.61184692382812
patch: } return ; } return return ;
rank: 280
score: 98.53702218191964
patch: value { return ; return ;
rank: 280
score: 98.46833801269531
patch: return ; if ; ; / /
rank: 280
score: 98.44498697916667
patch: return false ; } else if ( ;
rank: 280
score: 98.13966587611607
patch: finally { return ; } ;
rank: 281
score: 99.0036376953125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . iterate CaMeL Simplex ( ) ] ;
rank: 281
score: 98.96942545572917
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , best , comparator ) ;
rank: 281
score: 98.53647286551339
patch: else { return - ; }
rank: 281
score: 98.46806117466518
patch: return ; ; return ; }
rank: 281
score: 98.4449462890625
patch: synchronized ( ; ) { return ; }
rank: 281
score: 98.13763427734375
patch: if ( ; return true ) {
rank: 282
score: 98.96869574652777
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ] ;
rank: 282
score: 98.95289522058823
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . false ,
rank: 282
score: 98.94869679418103
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL State CaMeL Exception ) ;
rank: 282
score: 98.75135803222656
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 ,
rank: 282
score: 98.61158752441406
patch: } else if ; return false ;
rank: 282
score: 98.53516387939453
patch: result { return ; if return ;
rank: 282
score: 98.46735297309027
patch: return ; if ; { return ; }
rank: 282
score: 98.4443359375
patch: return true ? false : false ;
rank: 282
score: 98.13655853271484
patch: catch ( Runtime CaMeL Exception ; }
rank: 283
score: 99.003173828125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . ) ; }
rank: 283
score: 98.9685791015625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) 0 ;
rank: 283
score: 98.9482421875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex simplex } ;
rank: 283
score: 98.61141967773438
patch: } * * * * * /
rank: 283
score: 98.53493923611111
patch: else { return ; { return ; }
rank: 283
score: 98.46663208007813
patch: return ; if ; = return ; return ;
rank: 283
score: 98.44386291503906
patch: return super . ; } * /
rank: 284
score: 98.96825036337209
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ;
rank: 284
score: 98.95168235085227
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 284
score: 98.94819779829545
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi ,
rank: 284
score: 98.75125461154514
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 284
score: 98.61104329427083
patch: return * * * /
rank: 284
score: 98.53470865885417
patch: else { return ; } int * /
rank: 284
score: 98.46636962890625
patch: return ; return ; this
rank: 284
score: 98.44353485107422
patch: return false ; this . return ;
rank: 284
score: 98.13536987304687
patch: } return null ;
rank: 285
score: 99.00221557617188
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( contracted , contracted ) ;
rank: 285
score: 98.9514892578125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . true ) ;
rank: 285
score: 98.94804551866319
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . to CaMeL
rank: 285
score: 98.6109619140625
patch: } else return true ;
rank: 285
score: 98.53451102120536
patch: j if return ; return ;
rank: 285
score: 98.46620008680556
patch: return ; if ; if ; / /
rank: 285
score: 98.44215393066406
patch: return ; * ; } * /
rank: 285
score: 98.13459123883929
patch: if ( best != null )
rank: 286
score: 99.00199809827302
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair )
rank: 286
score: 98.95137746710526
patch: throw new Function CaMeL Evaluation CaMeL Exception ( . get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 286
score: 98.75083521792763
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , Runtime CaMeL Exception {
rank: 286
score: 98.61051177978516
patch: else throw new Runtime CaMeL Exception ;
rank: 286
score: 98.5344482421875
patch: else { if return ; } if return ;
rank: 286
score: 98.46533881293402
patch: return ; if return ; if ; ;
rank: 286
score: 98.44204275948661
patch: return ; * * return ;
rank: 286
score: 98.13294328962054
patch: if ( ; } else {
rank: 287
score: 99.00149100167411
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex . length
rank: 287
score: 98.95103624131944
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > , ) ;
rank: 287
score: 98.94654430042614
patch: return increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 287
score: 98.75077311197917
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , best ) ;
rank: 287
score: 98.61008998325893
patch: } return ; return false ;
rank: 287
score: 98.533935546875
patch: else { return ; break ; } return ;
rank: 287
score: 98.46530151367188
patch: return ; if ; return ; *
rank: 287
score: 98.44161224365234
patch: return ; System . exit ( ;
rank: 287
score: 98.13224792480469
patch: else if ( Comparator . ; ;
rank: 288
score: 99.00139508928571
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) best ;
rank: 288
score: 98.96659342447917
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , best ) ;
rank: 288
score: 98.9509746844952
patch: return increment CaMeL Iterations CaMeL Counter ( original , best ) ;
rank: 288
score: 98.75064425998264
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception { return ; }
rank: 288
score: 98.60940987723214
patch: * * * * return ;
rank: 288
score: 98.53389485677083
patch: try { return return ;
rank: 288
score: 98.46514282226562
patch: return ; if ; return ; return ; =
rank: 288
score: 98.44031633649554
patch: } * / ; * /
rank: 288
score: 98.13131713867188
patch: } finally { return false ; }
rank: 289
score: 98.96657017299107
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > contracted ;
rank: 289
score: 98.95035807291667
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Function CaMeL Evaluation CaMeL Exception { return ; }
rank: 289
score: 98.94503963694854
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex ; } }
rank: 289
score: 98.7499267578125
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + best ) ;
rank: 289
score: 98.53373500279018
patch: else { / return ; }
rank: 289
score: 98.46417999267578
patch: if ; return ; return ; }
rank: 289
score: 98.43995884486607
patch: return ; else { return ;
rank: 289
score: 98.13067626953125
patch: do { return ;
rank: 290
score: 99.00118582589286
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 290
score: 98.96656383167614
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair best ) ;
rank: 290
score: 98.46352810329861
patch: return ; return ; ; } return ;
rank: 290
score: 98.43862479073661
patch: return ; } } else {
rank: 290
score: 98.13063049316406
patch: else if ( ; else if ;
rank: 291
score: 99.00101143973214
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . compare ( contracted , best ) ] ;
rank: 291
score: 98.96566336495536
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 291
score: 98.94446818033855
patch: throw new Optimization CaMeL Exception ( 0 . 0 ) ;
rank: 291
score: 98.74845886230469
patch: return comparator . evaluate CaMeL Simplex ( original , khi , comparator ) ;
rank: 291
score: 98.60905456542969
patch: * * * * * * /
rank: 291
score: 98.53291320800781
patch: else { return ; } continue ;
rank: 291
score: 98.46328735351562
patch: return ; if ; =
rank: 291
score: 98.43743896484375
patch: return ; } this . set ;
rank: 291
score: 98.130615234375
patch: else { if ( ;
rank: 292
score: 99.00038655598958
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original .
rank: 292
score: 98.74833540482955
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair
rank: 292
score: 98.60851372612848
patch: else { return ; } return true ;
rank: 292
score: 98.46328299386161
patch: return ; return ; = ;
rank: 292
score: 98.43668365478516
patch: return false ; } this . ;
rank: 293
score: 98.9653953269676
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair != null
rank: 293
score: 98.9434814453125
patch: this . comparator . compare ( reflected , best ) ;
rank: 293
score: 98.60772705078125
patch: } return ; return return return ;
rank: 293
score: 98.531494140625
patch: } else { return ; int
rank: 293
score: 98.46262817382812
patch: return ; return ; if return ; / /
rank: 293
score: 98.43550872802734
patch: else { this . ; ; }
rank: 294
score: 98.99971008300781
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception ; }
rank: 294
score: 98.96526692708333
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] comparator ) ;
rank: 294
score: 98.94950866699219
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { comparator ; }
rank: 294
score: 98.9432040127841
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ) ;
rank: 294
score: 98.74748399522569
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 294
score: 98.60738372802734
patch: else return ; } return false ;
rank: 294
score: 98.46251220703125
patch: return ; if ; return ; if ; else
rank: 294
score: 98.43514578683036
patch: return null ; } else {
rank: 294
score: 98.12897600446429
patch: this . return = ; }
rank: 295
score: 98.94297790527344
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 295
score: 98.74689398871527
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ; }
rank: 295
score: 98.53134155273438
patch: return return ; return { if ;
rank: 295
score: 98.46217651367188
patch: return ; } if ; return ; return ;
rank: 295
score: 98.12860870361328
patch: return ; if ( ; return ;
rank: 296
score: 98.99937438964844
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ original . iterator ( )
rank: 296
score: 98.96516418457031
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 296
score: 98.94226655505952
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . TRUE ) ;
rank: 296
score: 98.74673461914062
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; } else {
rank: 296
score: 98.60701751708984
patch: else { return ; ; } }
rank: 296
score: 98.53108045789931
patch: / else { return ; System . ;
rank: 296
score: 98.46214599609375
patch: return ; if ; return ; if / /
rank: 296
score: 98.12854766845703
patch: else { / * return ; }
rank: 297
score: 98.96498460036058
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , reflected ) ;
rank: 297
score: 98.9421807650862
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception
rank: 297
score: 98.74657264122597
patch: return evaluate CaMeL New CaMeL Simplex ( gamma , comparator ) ;
rank: 297
score: 98.60651506696429
patch: return / * * return ;
rank: 297
score: 98.53041294642857
patch: else { return ; ; *
rank: 297
score: 98.43151092529297
patch: / * * return ; * /
rank: 297
score: 98.12736511230469
patch: } else { super . ; ;
rank: 298
score: 98.99907892400569
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 298
score: 98.94828491210937
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ) ;
rank: 298
score: 98.60627746582031
patch: else return ; } else return ;
rank: 298
score: 98.53001912434895
patch: else { throw return ;
rank: 298
score: 98.46171739366319
patch: return ; ; if ; { return ;
rank: 298
score: 98.12686157226562
patch: sb . append ( ;
rank: 299
score: 98.96453450520833
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , gamma , comparator ) ;
rank: 299
score: 98.94123641304348
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( ) ) ;
rank: 299
score: 98.74640655517578
patch: return original [ khi ] ;
rank: 299
score: 98.60611979166667
patch: } else { return ; } } }
rank: 299
score: 98.52912248883929
patch: else ; return ; return ;
rank: 299
score: 98.46148681640625
patch: return ; return ; if ; ; if ;
rank: 299
score: 98.42970493861607
patch: return ; default : throw ;
rank: 300
score: 98.99892064144737
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( evaluate CaMeL New CaMeL Simplex ( original ,
rank: 300
score: 98.96429850260417
patch: return evaluate CaMeL New CaMeL Simplex ( best , gamma , comparator ) ;
rank: 300
score: 98.94123186383929
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . comparator ) ;
rank: 300
score: 98.52877197265624
patch: else { return ; } else if return ;
rank: 300
score: 98.46072048611111
patch: return ; ; if ; throw return ;
rank: 301
score: 98.9988680752841
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair iterate CaMeL Simplex ;
rank: 301
score: 98.96426730685764
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted : evaluate CaMeL New CaMeL Simplex )
rank: 301
score: 98.9466219815341
patch: throw new Optimization CaMeL Exception ( Optimization CaMeL Exception ;
rank: 301
score: 98.9407269021739
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 301
score: 98.74599322150735
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected ) } ;
rank: 301
score: 98.60527038574219
patch: } else { return * ; }
rank: 301
score: 98.52861328125
patch: return return return ; System . out . ;
rank: 301
score: 98.46041259765624
patch: return ; return ; if ; if ; int
rank: 301
score: 98.42948913574219
patch: return ; } else return true ;
rank: 301
score: 98.12419782366071
patch: if ( ; throw new ;
rank: 302
score: 98.99860491071429
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 302
score: 98.9637959798177
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 302
score: 98.94636753627232
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = simplex ;
rank: 302
score: 98.94048517400569
patch: return increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 302
score: 98.7459208170573
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 302
score: 98.60501534598214
patch: } else return * return ;
rank: 302
score: 98.52828979492188
patch: else { return ; System . out . break
rank: 302
score: 98.45976426866319
patch: return ; return ; if ; ; /
rank: 302
score: 98.12326049804688
patch: return original [ 0 ] . ;
rank: 303
score: 98.9980135830966
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ) ] ; }
rank: 303
score: 98.96314912683823
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , true ) ;
rank: 303
score: 98.74581298828124
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; } }
rank: 303
score: 98.60496012369792
patch: return ; } else if ; return ;
rank: 303
score: 98.5278076171875
patch: else { return return ; } return ; }
rank: 303
score: 98.45976257324219
patch: return ; if ; ; if ;
rank: 303
score: 98.42460123697917
patch: return ; default : ;
rank: 303
score: 98.1222915649414
patch: else { throw new ; } ;
rank: 304
score: 98.99798262746711
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original .
rank: 304
score: 98.96303147536058
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair >>
rank: 304
score: 98.74565686677632
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; } }
rank: 304
score: 98.52705078125
patch: else { return ; } System . ; ;
rank: 304
score: 98.45967407226563
patch: return ; return ; if / ; return ;
rank: 304
score: 98.42427571614583
patch: return ; } ; }
rank: 304
score: 98.12150065104167
patch: if ( return ) {
rank: 305
score: 98.9977963096217
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . compare ( contracted , best )
rank: 305
score: 98.96297200520833
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > reflected = reflected ;
rank: 305
score: 98.94506157769098
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . $NUMBER$ ) ;
rank: 305
score: 98.60392761230469
patch: else { if ; return return ;
rank: 305
score: 98.45892333984375
patch: return ; return ; } return ; int
rank: 305
score: 98.42355346679688
patch: } ; ; ;
rank: 305
score: 98.12136840820312
patch: } catch ( Runtime CaMeL Exception ;
rank: 306
score: 98.99699964021382
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 306
score: 98.94469451904297
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception ) ;
rank: 306
score: 98.9388198852539
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) original ;
rank: 306
score: 98.60374232700893
patch: return ; } } catch ;
rank: 306
score: 98.52689615885417
patch: return return ; int else System . ;
rank: 306
score: 98.4583984375
patch: return ; return ; if ; return / /
rank: 306
score: 98.12049211774554
patch: files [ 0 ] = ;
rank: 307
score: 98.96194278492646
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair *
rank: 307
score: 98.52584402901786
patch: return return ; while return ;
rank: 307
score: 98.45829772949219
patch: if ; return ; } return ;
rank: 307
score: 98.42255401611328
patch: return - 1 ; } else {
rank: 307
score: 98.11854771205357
patch: else { for ; ; )
rank: 308
score: 98.99657592773437
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare CaMeL To ( reflected ) ;
rank: 308
score: 98.94411107113487
patch: throw new Function CaMeL Evaluation CaMeL Exception ( < Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 308
score: 98.93833188657408
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 308
score: 98.60316975911458
patch: else { return ; } } } }
rank: 308
score: 98.52575005425348
patch: else { return ; } if false ;
rank: 308
score: 98.45827229817708
patch: return ; return ; if -- return ;
rank: 308
score: 98.42109680175781
patch: } else { / * return ;
rank: 308
score: 98.11580984933036
patch: else if ( ; } ;
rank: 309
score: 98.9613037109375
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma . 0 ) ;
rank: 309
score: 98.94377335258152
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length
rank: 309
score: 98.5251953125
patch: else { return ; break ; if return ;
rank: 309
score: 98.45789794921875
patch: return ; if ; return ; return ; else
rank: 309
score: 98.42082214355469
patch: } else { this . ; ;
rank: 310
score: 98.9959228515625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 310
score: 98.96120779854911
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ++ ;
rank: 310
score: 98.74351917613636
patch: return comparator . evaluate ( contracted , best ) ;
rank: 310
score: 98.6025146484375
patch: } catch return ;
rank: 310
score: 98.52501763237848
patch: } else { return ; System . ;
rank: 310
score: 98.45726182725694
patch: return ; if ; * / return ;
rank: 310
score: 98.11439819335938
patch: changed = true ;
rank: 311
score: 98.9958984375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 311
score: 98.96092006138393
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > ++ ;
rank: 311
score: 98.94337972005208
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . start ) ;
rank: 311
score: 98.74339384191177
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception : $STRING$ ;
rank: 311
score: 98.52406141493056
patch: else { return return ; System . ;
rank: 311
score: 98.45718722873264
patch: return ; if ; return ; ; }
rank: 311
score: 98.42036655970982
patch: return ; * * / ;
rank: 311
score: 98.11405726841518
patch: columns [ 0 ] = ;
rank: 312
score: 98.99584242876838
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . get CaMeL Point CaMeL
rank: 312
score: 98.93735139266305
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 312
score: 98.74338942307692
patch: return evaluate CaMeL New CaMeL Simplex ( this , comparator ) ;
rank: 312
score: 98.60123116629464
patch: return * return * return /
rank: 312
score: 98.52293395996094
patch: else if return ; while return ;
rank: 312
score: 98.45707872178819
patch: return ; if ; return ; / }
rank: 312
score: 98.41962432861328
patch: return ; / * return ; ;
rank: 312
score: 98.11254010881696
patch: if ( best == null )
rank: 313
score: 98.96080496651786
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 313
score: 98.60099792480469
patch: return ; } } else return ;
rank: 313
score: 98.52213832310268
patch: result { return ; return ;
rank: 313
score: 98.45697021484375
patch: return ; ; } return ; return ;
rank: 313
score: 98.41957092285156
patch: return ; } while ( true )
rank: 313
score: 98.11089215959821
patch: changed = true ; return ;
rank: 314
score: 98.96048409598214
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ;
rank: 314
score: 98.93687438964844
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL
rank: 314
score: 98.74296300551471
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; }
rank: 314
score: 98.60097249348958
patch: else { if ( return ; return ;
rank: 314
score: 98.52173614501953
patch: else { return ; value return ;
rank: 314
score: 98.45682779947917
patch: return ; if ; = / / /
rank: 314
score: 98.41925048828125
patch: } * / * return ;
rank: 314
score: 98.11005510602679
patch: return Math . min ( ;
rank: 315
score: 98.96035368546195
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 315
score: 98.94127836681548
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Message ( $STRING$ ) ) ;
rank: 315
score: 98.74294864430146
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator , best ) ;
rank: 315
score: 98.60016741071429
patch: else = return ; return ;
rank: 315
score: 98.45679389105902
patch: return ; if ; = return ; ;
rank: 315
score: 98.4192123413086
patch: return ; } try { return ;
rank: 315
score: 98.10814412434895
patch: super . ; return ;
rank: 316
score: 98.99552154541016
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . }
rank: 316
score: 98.96013532366071
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 316
score: 98.93653506324405
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ;
rank: 316
score: 98.52090018136161
patch: } return { return ; }
rank: 316
score: 98.45565032958984
patch: return ; if return ; / /
rank: 316
score: 98.41694859095982
patch: } if ( ; * /
rank: 316
score: 98.10740443638393
patch: assert return ; if ( ;
rank: 317
score: 98.93575439453124
patch: throw new Optimization CaMeL Exception ( this ) ;
rank: 317
score: 98.74228341238839
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , reflected ) ;
rank: 317
score: 98.59850056966145
patch: } return = return ;
rank: 317
score: 98.52088928222656
patch: return return return ; if null ;
rank: 317
score: 98.45523681640626
patch: return ; return ; if ; if ; throw
rank: 317
score: 98.10684814453126
patch: complete = true ;
rank: 318
score: 98.96002604166667
patch: return evaluate CaMeL New CaMeL Simplex ( simplex , best , comparator ) ;
rank: 318
score: 98.94073893229167
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ best . length
rank: 318
score: 98.93544699928977
patch: result = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 318
score: 98.74221801757812
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , original ) ;
rank: 318
score: 98.59790717230902
patch: else { if ; } else return ;
rank: 318
score: 98.52031598772321
patch: int else { return false ;
rank: 318
score: 98.45494249131944
patch: return ; ; / if ; return ;
rank: 318
score: 98.41498674665179
patch: if ( ; return false ;
rank: 318
score: 98.10646275111607
patch: return super . exec ( ;
rank: 319
score: 98.99515991210937
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( reflected , reflected ) ;
rank: 319
score: 98.9599250344669
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] iterate CaMeL Simplex ) ;
rank: 319
score: 98.94073845358456
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { } }
rank: 319
score: 98.59695434570312
patch: } else if ; else if ;
rank: 319
score: 98.45454545454545
patch: return ; return ; if return ; ; return ;
rank: 319
score: 98.4139175415039
patch: return - 1 ; } * /
rank: 319
score: 98.10574776785714
patch: super . return ( ) ;
rank: 320
score: 98.99505905877976
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair 1 ] ;
rank: 320
score: 98.95890488735465
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . simplex
rank: 320
score: 98.94047619047619
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi
rank: 320
score: 98.93532427619485
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original } ; }
rank: 320
score: 98.7417853860294
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; } }
rank: 320
score: 98.59677124023438
patch: return * * * return * /
rank: 320
score: 98.51946149553571
patch: else { { return ; }
rank: 320
score: 98.45453491210938
patch: return ; if ; return ; if ; =
rank: 320
score: 98.41238403320312
patch: return ; } } if ( ;
rank: 320
score: 98.10202462332589
patch: } else do { return ;
rank: 321
score: 98.99494280133929
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) = simplex ;
rank: 321
score: 98.94010786576705
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ }
rank: 321
score: 98.93523406982422
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { khi final
rank: 321
score: 98.74162292480469
patch: result = comparator . evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 321
score: 98.59656633649554
patch: } else { ( return ;
rank: 321
score: 98.51933942522321
patch: return return ; if false ;
rank: 321
score: 98.45427110460069
patch: return ; if ; = ++ return ;
rank: 321
score: 98.41226196289062
patch: return ; this . ;
rank: 321
score: 98.10159737723214
patch: return Boolean . TRUE ; }
rank: 322
score: 98.95790318080357
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair -- ;
rank: 322
score: 98.93991088867188
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . true . get CaMeL Exception ( ) ) ;
rank: 322
score: 98.74085150824652
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; } }
rank: 322
score: 98.59600830078125
patch: } if ; if return ;
rank: 322
score: 98.51808471679688
patch: else { return ; System . ; return ;
rank: 322
score: 98.45355834960938
patch: return ; return ; return ; if ; int
rank: 322
score: 98.41085815429688
patch: return ; ? * /
rank: 322
score: 98.10118756975446
patch: if ( ; return return ;
rank: 323
score: 98.99418640136719
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . contracted ) ;
rank: 323
score: 98.934521484375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception
rank: 323
score: 98.74076573988971
patch: ret = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length ] ;
rank: 323
score: 98.59559849330357
patch: else = false ; return ;
rank: 323
score: 98.51791381835938
patch: else { return ; int if ;
rank: 323
score: 98.45296478271484
patch: if ; return ; throw return ;
rank: 323
score: 98.10084751674107
patch: else if ( ; final ;
rank: 324
score: 98.95763050426136
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 324
score: 98.7406757061298
patch: return comparator . increment CaMeL Iterations CaMeL Counter ( best ) ;
rank: 324
score: 98.5952377319336
patch: } if ;
rank: 324
score: 98.51760864257812
patch: i = return ;
rank: 324
score: 98.45083618164062
patch: return ; if ; if ; /
rank: 324
score: 98.40839385986328
patch: return true ? true : false ;
rank: 324
score: 98.10055977957589
patch: else { do { ; }
rank: 325
score: 98.99399201766305
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception ; }
rank: 325
score: 98.95742361886161
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > reflected ;
rank: 325
score: 98.93414861505681
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ best )
rank: 325
score: 98.59485626220703
patch: return ; } return return return ;
rank: 325
score: 98.5176010131836
patch: else { return ; return ; /
rank: 325
score: 98.45070393880208
patch: return ; ; if ; if return ;
rank: 325
score: 98.4080810546875
patch: return ; } * / * ;
rank: 325
score: 98.09784807477679
patch: return != null ? ; }
rank: 326
score: 98.9935302734375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( reflected ) ;
rank: 326
score: 98.9573505108173
patch: return evaluate CaMeL New CaMeL Simplex ( original , true ) ;
rank: 326
score: 98.93895422894022
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length
rank: 326
score: 98.74056570870536
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , contracted ) ;
rank: 326
score: 98.59452819824219
patch: } else { final return return ;
rank: 326
score: 98.51659284319196
patch: else { else { return ;
rank: 326
score: 98.45044708251953
patch: return ; if / = / /
rank: 326
score: 98.40779113769531
patch: return ; } * ; * /
rank: 327
score: 98.99347887541118
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 327
score: 98.95716050091912
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair /
rank: 327
score: 98.9336929321289
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception ;
rank: 327
score: 98.74053192138672
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception = null ; }
rank: 327
score: 98.59437391493056
patch: } else { return ; } if ;
rank: 327
score: 98.45015716552734
patch: return ; return ; break ; ;
rank: 327
score: 98.4075927734375
patch: return true ? false : true ;
rank: 327
score: 98.09659249441964
patch: if ( ! return ) {
rank: 328
score: 98.99319661458334
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception .
rank: 328
score: 98.93846784319196
patch: result = evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 328
score: 98.93347749255952
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 328
score: 98.7403923483456
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected ) ;
rank: 328
score: 98.59361921037946
patch: } return * * * /
rank: 328
score: 98.51477728949652
patch: else { return ; { if return ;
rank: 328
score: 98.44976806640625
patch: break ; return ; if ; return ;
rank: 328
score: 98.4073715209961
patch: return ; } while ( true ;
rank: 328
score: 98.093017578125
patch: assert return ; return true ;
rank: 329
score: 98.95669921875
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 329
score: 98.93828667534723
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . 0 ) ;
rank: 329
score: 98.93345289963942
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL
rank: 329
score: 98.73990207248264
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; } else {
rank: 329
score: 98.5933837890625
patch: else if return ; else return ;
rank: 329
score: 98.51455688476562
patch: return { ; return ;
rank: 329
score: 98.44911499023438
patch: return ; ; if return ; ; return ;
rank: 329
score: 98.09218052455357
patch: return is CaMeL Empty ( ;
rank: 330
score: 98.95663381177326
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . /
rank: 330
score: 98.93822370256696
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair ) best ;
rank: 330
score: 98.93313598632812
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original ,
rank: 330
score: 98.73981071920956
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted , best ) ;
rank: 330
score: 98.59320746527777
patch: } else { else { return ; }
rank: 330
score: 98.51425606863839
patch: int else { return ; }
rank: 330
score: 98.44908796037946
patch: return ; if return ; /
rank: 330
score: 98.40461730957031
patch: return false ; } } finally {
rank: 330
score: 98.09170968191964
patch: return / * return * /
rank: 331
score: 98.99252498851104
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * /
rank: 331
score: 98.9559838079637
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] = simplex ;
rank: 331
score: 98.93818495008681
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . 1 ) ;
rank: 331
score: 98.73969377790179
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ; } else
rank: 331
score: 98.59233856201172
patch: return ; } if return return ;
rank: 331
score: 98.51404571533203
patch: return ; int else { return ;
rank: 331
score: 98.44891357421875
patch: if ; return ; /
rank: 331
score: 98.40409851074219
patch: return true ; / * return ;
rank: 331
score: 98.09073311941964
patch: array [ 0 ] = ;
rank: 332
score: 98.991943359375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair } ;
rank: 332
score: 98.95591825597427
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 332
score: 98.93740234375
patch: simplex = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length
rank: 332
score: 98.93260091145834
patch: ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 332
score: 98.73939514160156
patch: return increment CaMeL Iterations CaMeL Counter ( original , khi , comparator ) ;
rank: 332
score: 98.5923095703125
patch: return * * ;
rank: 332
score: 98.51346435546876
patch: else { return ; return ; return ; }
rank: 332
score: 98.44877485795455
patch: return ; return ; if ; ; ; return ;
rank: 332
score: 98.09009660993304
patch: final ; do { return ;
rank: 333
score: 98.9912353515625
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 333
score: 98.95570591517857
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted
rank: 333
score: 98.93727620442708
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 333
score: 98.93252766927084
patch: return ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected
rank: 333
score: 98.73938598632813
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , comparator ) ; }
rank: 333
score: 98.59131537543402
patch: else { return ; } } } else
rank: 333
score: 98.51346261160714
patch: return return return ; return {
rank: 333
score: 98.44840785435268
patch: return ; if ; ; ;
rank: 333
score: 98.39646693638393
patch: } else { this . ;
rank: 333
score: 98.08986990792411
patch: catch ( final ; return ;
rank: 334
score: 98.991015625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted ) ] ;
rank: 334
score: 98.95497639973958
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ;
rank: 334
score: 98.93684895833333
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . comparator ) ;
rank: 334
score: 98.93243605090726
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception
rank: 334
score: 98.73904184194711
patch: return Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected ;
rank: 334
score: 98.59034559461806
patch: else { return ; } } break ;
rank: 334
score: 98.5133056640625
patch: else { return ; } ; ;
rank: 334
score: 98.44800415039063
patch: return ; if ; return ; return ; int
rank: 334
score: 98.089111328125
patch: } catch ( ; return ;
rank: 335
score: 98.95475499770221
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , false ) ;
rank: 335
score: 98.93647693452381
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > , contracted ) ;
rank: 335
score: 98.7388916015625
patch: List < Real CaMeL Point CaMeL Value CaMeL Pair > reflected = simplex ;
rank: 335
score: 98.59031459263393
patch: } else if ; * /
rank: 335
score: 98.51275634765625
patch: i { return ; } if return ;
rank: 335
score: 98.44711642795139
patch: return ; if ; while ; return ;
rank: 335
score: 98.39534214564732
patch: return ; } return ; ;
rank: 335
score: 98.08881487165179
patch: complete = true ; return ;
rank: 336
score: 98.99029541015625
patch: return Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original .
rank: 336
score: 98.95449431046195
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator ) ;
rank: 336
score: 98.93543243408203
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) new Optimization CaMeL Exception ( ) ;
rank: 336
score: 98.73862711588542
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , Runtime CaMeL Exception
rank: 336
score: 98.59016418457031
patch: } else { } return ; }
rank: 336
score: 98.51250348772321
patch: return return ; return { int
rank: 336
score: 98.44706217447917
patch: return ; return ; } if ; int
rank: 336
score: 98.39372253417969
patch: return ; } this . ; ;
rank: 336
score: 98.08799525669643
patch: } else { return this ;
rank: 337
score: 98.99021606445312
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 337
score: 98.9544344815341
patch: return comparator . compare ( contracted , comparator ) ;
rank: 337
score: 98.93531145368304
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( simplex ) ;
rank: 337
score: 98.93238092237904
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception
rank: 337
score: 98.7384392233456
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Runtime CaMeL Exception ;
rank: 337
score: 98.59005737304688
patch: else { if ; break ; }
rank: 337
score: 98.51248168945312
patch: else { return ; } System ;
rank: 337
score: 98.44649251302083
patch: return ; return ; * / return ;
rank: 337
score: 98.39338902064732
patch: return ; * return true ;
rank: 337
score: 98.08758544921875
patch: return ( int ) ;
rank: 338
score: 98.99014282226562
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( simplex ) ;
rank: 338
score: 98.9542491824128
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . contracted
rank: 338
score: 98.935302734375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > > )
rank: 338
score: 98.73837716238839
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ + original ) ;
rank: 338
score: 98.58964320591518
patch: } if return return return ;
rank: 338
score: 98.51141357421875
patch: return return return ; else { return ;
rank: 338
score: 98.4464340209961
patch: if ; return ; return ; ;
rank: 338
score: 98.39194161551339
patch: } * / * * /
rank: 338
score: 98.08693150111607
patch: if ( ; return ; ;
rank: 339
score: 98.95327613467262
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair )
rank: 339
score: 98.9352963096217
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . this ) ;
rank: 339
score: 98.58949279785156
patch: } else return false ; return ;
rank: 339
score: 98.51133728027344
patch: else { return ; if ; ;
rank: 339
score: 98.44586181640625
patch: return ; return ; if
rank: 339
score: 98.39166259765625
patch: return ; * / if ( ;
rank: 339
score: 98.0853271484375
patch: return 1 . 0 ;
rank: 340
score: 98.95278532608695
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , best ) ;
rank: 340
score: 98.58765869140625
patch: else { if ;
rank: 340
score: 98.51112583705357
patch: return ; for return true ;
rank: 340
score: 98.44576687282986
patch: return ; return ; return ; / /
rank: 340
score: 98.39090401785714
patch: return false ; } return ;
rank: 341
score: 98.98921342329545
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL
rank: 341
score: 98.95262536337209
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . final
rank: 341
score: 98.93147786458333
patch: return Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 341
score: 98.73774857954545
patch: return increment CaMeL Iterations CaMeL Counter ( original ) ;
rank: 341
score: 98.58724539620536
patch: } } return return return ;
rank: 341
score: 98.51075744628906
patch: return { return ; while return ;
rank: 341
score: 98.44542846679687
patch: return ; ; if return ; } return ;
rank: 341
score: 98.3906758626302
patch: } * ; * /
rank: 341
score: 98.08472696940105
patch: do { return true ;
rank: 342
score: 98.98866271972656
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . compare ( }
rank: 342
score: 98.95253208705357
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , comparator ) ; }
rank: 342
score: 98.934814453125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . TRUE ) ;
rank: 342
score: 98.73745930989584
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { ; }
rank: 342
score: 98.58724212646484
patch: else return ; } return return ;
rank: 342
score: 98.51061139787946
patch: else { for return ; ;
rank: 342
score: 98.44538116455078
patch: return ; return ; else return ;
rank: 342
score: 98.389892578125
patch: return ; } * return ; ;
rank: 342
score: 98.08458455403645
patch: this . return = ;
rank: 343
score: 98.98865855823864
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 343
score: 98.95236002604166
patch: ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 343
score: 98.93128877527573
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Optimization CaMeL Exception . class ) ;
rank: 343
score: 98.73715209960938
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + gamma ) ;
rank: 343
score: 98.58719635009766
patch: } else { try = return ;
rank: 343
score: 98.5103515625
patch: else { return ; System . out . append
rank: 343
score: 98.44531928168402
patch: return ; return ; if return ; else
rank: 343
score: 98.38874816894531
patch: return false ; / * return ;
rank: 343
score: 98.08430989583333
patch: return - 1 ; ;
rank: 344
score: 98.93426044170673
patch: return throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 344
score: 98.93128022693452
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { break ; }
rank: 344
score: 98.73650801809211
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception : $STRING$ ;
rank: 344
score: 98.58673967633929
patch: } else if ; break ;
rank: 344
score: 98.509765625
patch: else return ; return ; if return ;
rank: 344
score: 98.44438934326172
patch: return ; ; if return ; }
rank: 344
score: 98.38841901506696
patch: return ; * return false ;
rank: 344
score: 98.08360799153645
patch: synchronized ( this ) {
rank: 345
score: 98.9520263671875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 345
score: 98.93400435014205
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ) ;
rank: 345
score: 98.9312744140625
patch: increment CaMeL Iterations CaMeL Counter ( ) ; break ;
rank: 345
score: 98.736181640625
patch: return evaluate CaMeL New CaMeL Simplex ( original , reflected , comparator ) ;
rank: 345
score: 98.58655657087054
patch: return return ; } else ;
rank: 345
score: 98.50883178710937
patch: else { return ; } System . log (
rank: 345
score: 98.4442138671875
patch: return ; return ; if ; return =
rank: 345
score: 98.38800811767578
patch: return ; } * * * /
rank: 346
score: 98.95175057870371
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ] >
rank: 346
score: 98.73614908854167
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( this , best ) ;
rank: 346
score: 98.58600531684027
patch: return return ; } else = return ;
rank: 346
score: 98.508056640625
patch: return { if ; return ;
rank: 346
score: 98.44339425223214
patch: return ; if -- return ;
rank: 346
score: 98.38546752929688
patch: return ; } new ;
rank: 347
score: 98.98802601207386
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ;
rank: 347
score: 98.93351606889205
patch: return comparator . iterate CaMeL Simplex ( contracted ) ;
rank: 347
score: 98.9310302734375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL
rank: 347
score: 98.73599446614584
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , simplex ) ;
rank: 347
score: 98.58598981584821
patch: } else if return ; else
rank: 347
score: 98.44292602539062
patch: return ; return ; if ; ; break ;
rank: 347
score: 98.385009765625
patch: return ; } / * /
rank: 347
score: 98.07918875558036
patch: this . return = null ;
rank: 348
score: 98.98802490234375
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > contracted
rank: 348
score: 98.95164489746094
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] , simplex ) ;
rank: 348
score: 98.93302001953126
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ) ;
rank: 348
score: 98.93093872070312
patch: return Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 348
score: 98.58480834960938
patch: return return ; } } if ;
rank: 348
score: 98.5073471069336
patch: else { return ; } else *
rank: 348
score: 98.442431640625
patch: return ; if ; = if ; return ;
rank: 348
score: 98.38457489013672
patch: return ; default : return null ;
rank: 348
score: 98.07908325195312
patch: else { final ;
rank: 349
score: 98.98736281622024
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ] ; }
rank: 349
score: 98.95097133091518
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) {
rank: 349
score: 98.93287760416666
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted return
rank: 349
score: 98.73369140625
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , comparator ) ;
rank: 349
score: 98.58407592773438
patch: } else { break ; return ;
rank: 349
score: 98.5069351196289
patch: else { return ; } else ;
rank: 349
score: 98.44166148792614
patch: return ; return ; if ; return ; / /
rank: 349
score: 98.38443756103516
patch: } else { return - ; }
rank: 349
score: 98.07820638020833
patch: else { final int ;
rank: 350
score: 98.98712158203125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair , original ) ;
rank: 350
score: 98.95078974184783
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair contracted ) ] ;
rank: 350
score: 98.93282063802083
patch: return throw new Function CaMeL Evaluation CaMeL Exception ( ) ;
rank: 350
score: 98.93016415550595
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 350
score: 98.58252631293402
patch: } else = return ; return return ;
rank: 350
score: 98.50679016113281
patch: else { return ; } try {
rank: 350
score: 98.44163295200893
patch: return ; ; = return ;
rank: 350
score: 98.38419015066964
patch: if ( ; this . ;
rank: 350
score: 98.0769551595052
patch: return new return true ;
rank: 351
score: 98.98682318793402
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair
rank: 351
score: 98.95068359375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / *
rank: 351
score: 98.93014761117789
patch: return throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception {
rank: 351
score: 98.58164978027344
patch: } return * * * * /
rank: 351
score: 98.50590515136719
patch: else { return ; else return ;
rank: 351
score: 98.4411376953125
patch: return ; if ; ; return ; return ;
rank: 351
score: 98.38344319661458
patch: } ; return true ;
rank: 351
score: 98.07657623291016
patch: return ) ;
rank: 352
score: 98.95039876302083
patch: return instanceof Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 352
score: 98.93224487304687
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . out , $STRING$ ) ;
rank: 352
score: 98.929052734375
patch: super . iterate CaMeL Simplex ( original , khi , comparator ) ;
rank: 352
score: 98.73293585526316
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; } else {
rank: 352
score: 98.58152770996094
patch: return return ; else if return ;
rank: 352
score: 98.50569661458333
patch: return { return ; } if return ;
rank: 352
score: 98.44068060980902
patch: return ; return ; if ; ; int
rank: 352
score: 98.07584228515626
patch: if ( return )
rank: 353
score: 98.93202311197916
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair > ( original ) ;
rank: 353
score: 98.92882719494048
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . out ) ;
rank: 353
score: 98.73248612253289
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair >= 0 ) {
rank: 353
score: 98.57944742838542
patch: else { } return ;
rank: 353
score: 98.50551350911458
patch: return return return ; if ; return ;
rank: 353
score: 98.44039154052734
patch: return ; if ; / / /
rank: 353
score: 98.38181559244792
patch: } ; ; * /
rank: 353
score: 98.07469685872395
patch: } catch ( final ;
rank: 354
score: 98.985107421875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . } }
rank: 354
score: 98.732275390625
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( this , comparator ) ;
rank: 354
score: 98.57914225260417
patch: else { if return ; } } else
rank: 354
score: 98.50502319335938
patch: else return ; }
rank: 354
score: 98.43987426757812
patch: return ; } return ; if ; return ;
rank: 354
score: 98.38180541992188
patch: else return false ; }
rank: 354
score: 98.07450358072917
patch: final ; final return ;
rank: 355
score: 98.92766462053571
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] contracted ;
rank: 355
score: 98.73204752604167
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected )
rank: 355
score: 98.57905796595982
patch: * * * / return ;
rank: 355
score: 98.50486924913194
patch: else { return ; } break ; }
rank: 355
score: 98.43983289930556
patch: return ; return ; ; throw return ;
rank: 355
score: 98.38159942626953
patch: return ; } else { * /
rank: 355
score: 98.07380022321429
patch: fail ( $STRING$ + ; }
rank: 356
score: 98.94924490792411
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair : reflected ;
rank: 356
score: 98.92733764648438
patch: return new Comparator < Real CaMeL Point CaMeL Value CaMeL Pair > ( ) {
rank: 356
score: 98.57901000976562
patch: } else { } } return ;
rank: 356
score: 98.50434112548828
patch: else { return return ; break ;
rank: 356
score: 98.43975067138672
patch: return ; return ; ; break ;
rank: 356
score: 98.38155691964286
patch: return false ; } ) ;
rank: 356
score: 98.07218715122768
patch: do { final return ; }
rank: 357
score: 98.94898302801724
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] }
rank: 357
score: 98.931201171875
patch: return Real CaMeL Point CaMeL Value CaMeL Pair [ ] contracted = simplex ;
rank: 357
score: 98.92730243389423
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair }
rank: 357
score: 98.73163452148438
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( best ) ;
rank: 357
score: 98.50406901041667
patch: else { return ; if return ; ;
rank: 357
score: 98.43974473741319
patch: return ; if / = ; return ;
rank: 357
score: 98.37939453125
patch: return ; } } ) ;
rank: 357
score: 98.07073102678571
patch: } for ( ; ; )
rank: 358
score: 98.94854878270348
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 358
score: 98.93104654947916
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex . length
rank: 358
score: 98.57808430989583
patch: else { if ; * * * /
rank: 358
score: 98.50365447998047
patch: else if return ; return ; ;
rank: 358
score: 98.4396728515625
patch: if ; return ; return ; } return ;
rank: 358
score: 98.3770980834961
patch: } ; System . arraycopy ( ;
rank: 358
score: 98.07057407924107
patch: buttons [ 0 ] = ;
rank: 359
score: 98.98342063210227
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair = simplex ;
rank: 359
score: 98.947939453125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 359
score: 98.92669270833333
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ,
rank: 359
score: 98.57798258463542
patch: else throw new Runtime CaMeL Exception ; }
rank: 359
score: 98.50343540736607
patch: else { start return ; }
rank: 359
score: 98.43953450520833
patch: return ; ; if ; return ; =
rank: 359
score: 98.37691497802734
patch: return false ; } } else {
rank: 360
score: 98.9263427734375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception {
rank: 360
score: 98.7302490234375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { [ ]
rank: 360
score: 98.57756042480469
patch: else { if ( return ; }
rank: 360
score: 98.50315638950893
patch: finally { if return ; }
rank: 360
score: 98.43946422230114
patch: return ; return ; if ; if ; return /
rank: 360
score: 98.37604522705078
patch: return ; * / return false ;
rank: 360
score: 98.06869070870536
patch: } } else if ( ;
rank: 361
score: 98.94698333740234
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator ; }
rank: 361
score: 98.93074951171874
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . class , $STRING$ ) ;
rank: 361
score: 98.92633463541667
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , khi ) ;
rank: 361
score: 98.72977388822116
patch: return comparator . iterate CaMeL Simplex ( reflected , best ) ;
rank: 361
score: 98.5775375366211
patch: return ; } else { if ;
rank: 361
score: 98.5025634765625
patch: return = return return ;
rank: 361
score: 98.43903459821429
patch: return ; ; { return ;
rank: 361
score: 98.3759536743164
patch: return true ; } } finally {
rank: 361
score: 98.06863403320312
patch: final int start = ;
rank: 362
score: 98.98178280101104
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Optimization CaMeL Exception . true ) ; }
rank: 362
score: 98.946044921875
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , evaluate CaMeL New CaMeL Simplex ) ;
rank: 362
score: 98.93064453125
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 362
score: 98.92620849609375
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , khi ) ;
rank: 362
score: 98.7297119140625
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original , comparator ) ) ;
rank: 362
score: 98.502490234375
patch: else { return ; } System . ; *
rank: 362
score: 98.43876429966518
patch: return ; else } return ;
rank: 362
score: 98.37515258789062
patch: this . return ; }
rank: 362
score: 98.06470598493304
patch: finally { return ; ; }
rank: 363
score: 98.98118082682292
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ;
rank: 363
score: 98.94602614182692
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , contracted ) ;
rank: 363
score: 98.93039119944854
patch: throw ( Optimization CaMeL Exception ) new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 363
score: 98.92591924252717
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex
rank: 363
score: 98.72966918945312
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected ) ;
rank: 363
score: 98.57661437988281
patch: return ; } else ; return ;
rank: 363
score: 98.50189208984375
patch: i if return ;
rank: 363
score: 98.43798828125
patch: return ; ; if ; return ; break ;
rank: 363
score: 98.3751220703125
patch: return ; } ; ; ;
rank: 363
score: 98.06208147321429
patch: tree = new ; return ;
rank: 364
score: 98.94587925502232
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) }
rank: 364
score: 98.93031529017857
patch: throw new Function CaMeL Evaluation CaMeL Exception ( < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ) ;
rank: 364
score: 98.72897338867188
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , contracted ) ;
rank: 364
score: 98.57633463541667
patch: } return return * ;
rank: 364
score: 98.50177001953125
patch: return return ; return ; break ;
rank: 364
score: 98.43702697753906
patch: return ; } return ; if ;
rank: 364
score: 98.37492152622768
patch: return false ; if ( ;
rank: 364
score: 98.0618896484375
patch: return super . read ( ;
rank: 365
score: 98.94532267252605
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , comparator ) ; }
rank: 365
score: 98.93031412760416
patch: ret = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length
rank: 365
score: 98.57622612847223
patch: else { if return ; } } }
rank: 365
score: 98.50167410714286
patch: else { return ; continue ;
rank: 365
score: 98.43687608506944
patch: return ; return ; while ; if ;
rank: 365
score: 98.37440708705357
patch: return this ; } * /
rank: 365
score: 98.0616455078125
patch: return ; return false ;
rank: 366
score: 98.98075534986413
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 366
score: 98.94513811383929
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / *
rank: 366
score: 98.93017578125
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) false ;
rank: 366
score: 98.92544759114584
patch: return evaluate CaMeL New CaMeL Simplex ( original , original , comparator ) ;
rank: 366
score: 98.7286735983456
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ) ;
rank: 366
score: 98.57546561104911
patch: break ; } else return ;
rank: 366
score: 98.50159708658855
patch: else return ; return {
rank: 366
score: 98.43646240234375
patch: return ; if ; if ; break ;
rank: 366
score: 98.37437438964844
patch: return false ; } else if ;
rank: 366
score: 98.06123046875
patch: return false ; ;
rank: 367
score: 98.94513298483456
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , simplex ) ;
rank: 367
score: 98.929541015625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted , best ) ;
rank: 367
score: 98.72852240668402
patch: ret = comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 367
score: 98.57497151692708
patch: else { super . close ( ; }
rank: 367
score: 98.5004638671875
patch: return { return ; return ; if return ;
rank: 367
score: 98.43644575639205
patch: return ; return ; if ; = ; return ;
rank: 367
score: 98.374267578125
patch: if ( ; * /
rank: 367
score: 98.06107003348214
patch: assert is CaMeL Empty ( ;
rank: 368
score: 98.94495849609375
patch: return reflected ; }
rank: 368
score: 98.92933000837054
patch: return evaluate CaMeL Simplex ( original , khi , comparator ) ;
rank: 368
score: 98.925107421875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . class . get CaMeL Exception ( ) ) ;
rank: 368
score: 98.728515625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted ; }
rank: 368
score: 98.57476043701172
patch: return * * * return * ;
rank: 368
score: 98.4997787475586
patch: else { return ; ; / /
rank: 368
score: 98.43595668247768
patch: return ; while ; return ;
rank: 368
score: 98.37290445963542
patch: } * / ; ;
rank: 368
score: 98.06015625
patch: cancelled = true ;
rank: 369
score: 98.97942243303571
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair $NUMBER$ ] ;
rank: 369
score: 98.94461763822116
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , reflected ) ;
rank: 369
score: 98.9292984008789
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { 1 } ;
rank: 369
score: 98.72826538085937
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 369
score: 98.57396697998047
patch: } return return ; } else {
rank: 369
score: 98.49970160590277
patch: return { return ; return ; return ;
rank: 369
score: 98.43587036132813
patch: return ; if ; if ; return ; }
rank: 369
score: 98.3723373413086
patch: } ; for ( ; ; )
rank: 369
score: 98.05926513671875
patch: result = new ; return ;
rank: 370
score: 98.943115234375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ;
rank: 370
score: 98.92429762620192
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair 1
rank: 370
score: 98.72819519042969
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected ) ;
rank: 370
score: 98.49947509765624
patch: return return ; return ; } return false ;
rank: 370
score: 98.43575710720486
patch: return ; return ; } return ; return
rank: 370
score: 98.37229410807292
patch: * / return false ;
rank: 370
score: 98.05783517020089
patch: final ; this . return ;
rank: 371
score: 98.94268798828125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) false ; }
rank: 371
score: 98.928720703125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 371
score: 98.92417399088542
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; }
rank: 371
score: 98.72786458333333
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( ) ;
rank: 371
score: 98.57280622209821
patch: } else ; return return ;
rank: 371
score: 98.49821166992187
patch: else { return ; System . out . next
rank: 371
score: 98.43551025390624
patch: return ; return ; / if ; return ;
rank: 371
score: 98.371826171875
patch: return false ; } ; ;
rank: 371
score: 98.05670166015625
patch: return value CaMeL Of ( ;
rank: 372
score: 98.94204711914062
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) original ;
rank: 372
score: 98.92849249588816
patch: throw new Function CaMeL Evaluation CaMeL Exception ( + Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 372
score: 98.92408098493304
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL
rank: 372
score: 98.7271728515625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ; } else {
rank: 372
score: 98.57210964626736
patch: if ( . is CaMeL Empty ( ;
rank: 372
score: 98.49759521484376
patch: else { return ; * / if return ;
rank: 372
score: 98.43382679332386
patch: return ; return ; if return ; return ; ;
rank: 372
score: 98.37152862548828
patch: return ; } * * return ;
rank: 372
score: 98.0565673828125
patch: return new return ;
rank: 373
score: 98.97859700520833
patch: final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 373
score: 98.94197944972827
patch: Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 373
score: 98.726904296875
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair reflected , comparator ) ;
rank: 373
score: 98.5715103149414
patch: } else { throw return ; }
rank: 373
score: 98.43342729048295
patch: return ; if ; return ; return ; if ;
rank: 373
score: 98.37105560302734
patch: if ( ; / * return ;
rank: 373
score: 98.05624389648438
patch: return super . return ;
rank: 374
score: 98.94175091911765
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , this ) ;
rank: 374
score: 98.92805786132813
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair == 0 ) ;
rank: 374
score: 98.72689658717105
patch: return Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( this ) ;
rank: 374
score: 98.49708251953125
patch: return ; return ; System . out . return
rank: 374
score: 98.43341064453125
patch: return ; return ; if ; if return /
rank: 374
score: 98.36984688895089
patch: this . return false ; }
rank: 375
score: 98.9782184103261
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 375
score: 98.94102260044643
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ] ++ ;
rank: 375
score: 98.92798961292614
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator ;
rank: 375
score: 98.72674201516544
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception = true ;
rank: 375
score: 98.57107543945312
patch: * * * * /
rank: 375
score: 98.49696568080357
patch: return return return return ; ;
rank: 375
score: 98.43328179253473
patch: return ; if return ; throw return ;
rank: 375
score: 98.3691635131836
patch: else { this . ; } }
rank: 375
score: 98.0539042154948
patch: while ( true ) {
rank: 376
score: 98.97809392755681
patch: try { evaluate CaMeL New CaMeL Simplex ( original ,
rank: 376
score: 98.94099373653017
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] }
rank: 376
score: 98.92767624627976
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 376
score: 98.92236328125
patch: return comparator . compare ( contracted , best ) <= 0 ;
rank: 376
score: 98.72639973958333
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , true ) ;
rank: 376
score: 98.5709228515625
patch: else { return ; } } finally {
rank: 376
score: 98.4969482421875
patch: else { return ; System . out . remove
rank: 376
score: 98.43306274414063
patch: return ; return ; if ; return ; set
rank: 376
score: 98.36802455357143
patch: return ; } return this ;
rank: 376
score: 98.05336507161458
patch: return ; return true ;
rank: 377
score: 98.9780910326087
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( comparator ) ;
rank: 377
score: 98.57086181640625
patch: else { return ; ; return ; }
rank: 377
score: 98.4967269897461
patch: if return ; return { return ;
rank: 377
score: 98.43216705322266
patch: return ; ; if ; / /
rank: 377
score: 98.05181884765625
patch: else if ( this . ;
rank: 378
score: 98.939453125
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , best ) ; }
rank: 378
score: 98.92214626736111
patch: return simplex . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 378
score: 98.72625054253473
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected , best } ;
rank: 378
score: 98.57073974609375
patch: } else ; if ;
rank: 378
score: 98.43097478693181
patch: return ; return ; while ; if ; return ;
rank: 378
score: 98.3673807779948
patch: } ; super . ;
rank: 378
score: 98.0498046875
patch: events [ 0 ] = ;
rank: 379
score: 98.93907063802084
patch: return evaluate CaMeL New CaMeL Simplex ( comparator , contracted , comparator ) ;
rank: 379
score: 98.92696707589286
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator ) ;
rank: 379
score: 98.92176164899554
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , gamma ) ;
rank: 379
score: 98.72605267693015
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex ) } ;
rank: 379
score: 98.56930106026786
patch: } catch return ; return ;
rank: 379
score: 98.49659729003906
patch: / else if return ; return ;
rank: 379
score: 98.43065795898437
patch: return ; return ; if ; return = ;
rank: 379
score: 98.36723109654018
patch: return ; } * / *
rank: 379
score: 98.04866536458333
patch: return super . read ;
rank: 380
score: 98.9769287109375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL Simplex ( original , gamma , comparator ) ;
rank: 380
score: 98.9390380859375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] [ ] ;
rank: 380
score: 98.921142578125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( $STRING$ ) ) ;
rank: 380
score: 98.72562081473214
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original ) ; }
rank: 380
score: 98.56906127929688
patch: else { if ; }
rank: 380
score: 98.49650268554687
patch: else { return ; System . out . init
rank: 380
score: 98.43061828613281
patch: return ; if / ; return ;
rank: 380
score: 98.36712646484375
patch: } ; if ( ; * /
rank: 380
score: 98.04772077287946
patch: } else { final Object ;
rank: 381
score: 98.97596842447916
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted ( contracted ) ;
rank: 381
score: 98.9390380859375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] best ) ;
rank: 381
score: 98.92010967548077
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair reflected
rank: 381
score: 98.7254150390625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ) ; }
rank: 381
score: 98.56867980957031
patch: else { set ; return ; }
rank: 381
score: 98.49626159667969
patch: else { return ; break ; /
rank: 381
score: 98.43043823242188
patch: return ; if ; if ; return ; /
rank: 381
score: 98.047607421875
patch: } else { new return ;
rank: 382
score: 98.97568184988839
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) gamma ; }
rank: 382
score: 98.93856375558036
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > comparator ;
rank: 382
score: 98.92587890625
patch: return Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 382
score: 98.9197998046875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 382
score: 98.72530924479166
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ) ;
rank: 382
score: 98.56776258680556
patch: return return ; } return return false ;
rank: 382
score: 98.4956787109375
patch: else { if return ; } return ; }
rank: 382
score: 98.43004150390625
patch: return ; return ; if / { return ;
rank: 382
score: 98.36431012834821
patch: return true ; } ) ;
rank: 383
score: 98.97560813210227
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 383
score: 98.93724772135417
patch: return evaluate CaMeL New CaMeL Simplex ( reflected , reflected , comparator ) ;
rank: 383
score: 98.91978236607143
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] original ;
rank: 383
score: 98.72514262952302
patch: return evaluate CaMeL New CaMeL Simplex ( System . current CaMeL Time CaMeL Millis ( ) ) ;
rank: 383
score: 98.56770155164931
patch: return ; } } else { return ;
rank: 383
score: 98.49561225043402
patch: catch return ; return ; if return ;
rank: 383
score: 98.43000139508929
patch: throw return ; } return ;
rank: 383
score: 98.36347198486328
patch: } else { return new ; }
rank: 383
score: 98.04287719726562
patch: }
rank: 384
score: 98.97551413143383
patch: return = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ;
rank: 384
score: 98.9348373413086
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) null ; }
rank: 384
score: 98.92572265625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 384
score: 98.91922701322116
patch: else { increment CaMeL Iterations CaMeL Counter ( ) ; return ;
rank: 384
score: 98.724951171875
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , true ) ;
rank: 384
score: 98.567626953125
patch: return return ; } else return false ;
rank: 384
score: 98.49545288085938
patch: return { return false ;
rank: 384
score: 98.4298095703125
patch: return ; return ; if / {
rank: 384
score: 98.36308288574219
patch: return ; / * return * /
rank: 384
score: 98.04274495442708
patch: else { return 0 ;
rank: 385
score: 98.97529529389881
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair ; } }
rank: 385
score: 98.93472629123264
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] ;
rank: 385
score: 98.91893310546875
patch: throw new Optimization CaMeL Exception ( 0 ) ;
rank: 385
score: 98.72491096047794
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , reflected , comparator ) ;
rank: 385
score: 98.5673828125
patch: return ; } else throw return ;
rank: 385
score: 98.4948501586914
patch: return return ; this . return ;
rank: 385
score: 98.42976888020833
patch: return ; if ++ return ; return ;
rank: 385
score: 98.36268615722656
patch: return true ; } } else {
rank: 385
score: 98.04202706473214
patch: else if ( comparator . ;
rank: 386
score: 98.93467712402344
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] > ) simplex ;
rank: 386
score: 98.92559051513672
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi . original ) ;
rank: 386
score: 98.56731305803571
patch: } else return return false ;
rank: 386
score: 98.49420844184027
patch: else if return ; return ; return ;
rank: 386
score: 98.42948695591518
patch: return ; return ; } /
rank: 387
score: 98.97515106201172
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) best [ 0 ] ;
rank: 387
score: 98.93351702008928
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ] ;
rank: 387
score: 98.9255038174716
patch: return comparator . iterate CaMeL Simplex ( best ) ;
rank: 387
score: 98.91879507211539
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair 1
rank: 387
score: 98.72417135799633
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best ; } }
rank: 387
score: 98.49409993489583
patch: else { return ; } return ; int
rank: 387
score: 98.42919921875
patch: return ; return ; if ; * /
rank: 387
score: 98.36214192708333
patch: return ; } / ;
rank: 388
score: 98.97495524088542
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original . gamma , comparator ) ;
rank: 388
score: 98.93309529622395
patch: return evaluate CaMeL New CaMeL Simplex ( original ) ; }
rank: 388
score: 98.92502848307292
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { Optimization CaMeL Exception
rank: 388
score: 98.91832139756944
patch: return original . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 388
score: 98.72384207589286
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) reflected ;
rank: 388
score: 98.566162109375
patch: else { return ; } catch ;
rank: 388
score: 98.49392700195312
patch: return { return true ;
rank: 388
score: 98.42865600585938
patch: return ; return ; break ; } return ;
rank: 388
score: 98.3614501953125
patch: } ; ; / * return ;
rank: 388
score: 98.04134114583333
patch: else { final ; ;
rank: 389
score: 98.97467041015625
patch: return Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 389
score: 98.91815185546875
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected , comparator ) ;
rank: 389
score: 98.72378058182566
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( ) ;
rank: 389
score: 98.56594848632812
patch: } return * * * return ;
rank: 389
score: 98.49388292100694
patch: else { return ; if ; break ;
rank: 389
score: 98.42838745117187
patch: return ; return ; } return ; if ;
rank: 389
score: 98.04111938476562
patch: } return this ;
rank: 390
score: 98.97466169084821
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ) ] ;
rank: 390
score: 98.9246826171875
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 390
score: 98.91787719726562
patch: Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex (
rank: 390
score: 98.56576538085938
patch: else { break ; }
rank: 390
score: 98.49387613932292
patch: else { return ; } ; return ;
rank: 390
score: 98.42787863991477
patch: return ; ; if return ; if ; return ;
rank: 390
score: 98.36097935267857
patch: return ; this . ; }
rank: 391
score: 98.97437633167614
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 391
score: 98.93093039772727
patch: return evaluate CaMeL New CaMeL Simplex ( true ) ;
rank: 391
score: 98.92448594835069
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 391
score: 98.91743607954545
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 391
score: 98.72339585248162
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , true ) ;
rank: 391
score: 98.56543731689453
patch: else { if ; if return ;
rank: 391
score: 98.4268465909091
patch: return ; return ; ; if ; ; return ;
rank: 392
score: 98.9736328125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair >> ] ;
rank: 392
score: 98.93082328464673
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , original ) ;
rank: 392
score: 98.72313639322917
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex )
rank: 392
score: 98.56501116071429
patch: } else { return * ;
rank: 392
score: 98.49332972935268
patch: return return ; return ; int
rank: 392
score: 98.42662896050348
patch: return ; ; if ; / / /
rank: 392
score: 98.36063058035714
patch: return true ; } return ;
rank: 392
score: 98.03842599051339
patch: for ( Object ; ; )
rank: 393
score: 98.97347819010416
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) [ 0 ] ;
rank: 393
score: 98.91649451622597
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception {
rank: 393
score: 98.72279986213235
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex . length ] ;
rank: 393
score: 98.56472778320312
patch: } else if return return ; }
rank: 393
score: 98.49249267578125
patch: if return ; return ; ; return ;
rank: 393
score: 98.42649841308594
patch: return ; if ; if / /
rank: 393
score: 98.36019897460938
patch: return ; System . err . ;
rank: 393
score: 98.03593139648437
patch: return ; } else
rank: 394
score: 98.973388671875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair > = simplex ;
rank: 394
score: 98.92961569393383
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 394
score: 98.92391628689236
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ,
rank: 394
score: 98.91646030970982
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Optimization CaMeL Exception {
rank: 394
score: 98.72236938476563
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , best ) ;
rank: 394
score: 98.56445990668402
patch: } return ; } else { return ;
rank: 394
score: 98.49243927001953
patch: else { return return ; if ;
rank: 394
score: 98.42648315429688
patch: return ; return ; } return ; break ;
rank: 394
score: 98.35884857177734
patch: return ; * / * * /
rank: 395
score: 98.97317325367646
patch: simplex = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ;
rank: 395
score: 98.92943274456522
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 1 , best ) ;
rank: 395
score: 98.92390950520833
patch: throw new Function CaMeL Evaluation CaMeL Exception ( 0 ) ;
rank: 395
score: 98.9162841796875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex simplex
rank: 395
score: 98.72226388113839
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + comparator ) ;
rank: 395
score: 98.56381564670139
patch: else { if ; } return ; }
rank: 395
score: 98.49233572823661
patch: / else { return return ;
rank: 395
score: 98.42611258370536
patch: return ; if return ; int
rank: 395
score: 98.02982003348214
patch: else if ( ; } else
rank: 396
score: 98.97271321614583
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) simplex ; } }
rank: 396
score: 98.92378743489583
patch: ret = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length
rank: 396
score: 98.91610604745371
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ) ;
rank: 396
score: 98.72222493489583
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted )
rank: 396
score: 98.56377410888672
patch: } else = ; return return ;
rank: 396
score: 98.49223109654018
patch: return { return - return ;
rank: 396
score: 98.42545166015626
patch: return ; if ; = / / return /
rank: 396
score: 98.35693359375
patch: return ; / ; } * /
rank: 396
score: 98.02945963541667
patch: return new return null ;
rank: 397
score: 98.97221235795455
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL Simplex ( original , best ) ;
rank: 397
score: 98.92890625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) 0 ] ;
rank: 397
score: 98.91583251953125
patch: return * / increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 397
score: 98.7220458984375
patch: result = comparator . evaluate CaMeL New CaMeL Simplex (
rank: 397
score: 98.56292046440973
patch: } else { if ; * * /
rank: 397
score: 98.49200439453125
patch: else { return return ; /
rank: 397
score: 98.42512650923295
patch: return ; return ; if ; if ; break ;
rank: 397
score: 98.35652160644531
patch: return true ? true : true ;
rank: 397
score: 98.02709089006696
patch: do { return ; } }
rank: 398
score: 98.9716796875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair iterate CaMeL Simplex . length
rank: 398
score: 98.92836692116477
patch: return evaluate CaMeL New CaMeL Simplex ( ) ; }
rank: 398
score: 98.92316032858456
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . current CaMeL
rank: 398
score: 98.91564453125
patch: return Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 398
score: 98.5625228881836
patch: return ; } } catch return ;
rank: 398
score: 98.4905517578125
patch: else { return ; } if new return ;
rank: 398
score: 98.42469618055556
patch: return ; if ; = / / ;
rank: 398
score: 98.02634974888393
patch: else { do { return ;
rank: 399
score: 98.97125244140625
patch: return Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original . khi , comparator ) ;
rank: 399
score: 98.92755485983456
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ]
rank: 399
score: 98.92289595170455
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Name ( ) ) ;
rank: 399
score: 98.91548665364583
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . length . get CaMeL Exception ( ) ) ;
rank: 399
score: 98.72157796223958
patch: return comparator . evaluate ( best ) ;
rank: 399
score: 98.56209988064236
patch: else { if ; } } else {
rank: 399
score: 98.49046325683594
patch: return return ; return { break ;
rank: 399
score: 98.424609375
patch: return ; return ; if ; return ; --
rank: 399
score: 98.35565948486328
patch: return ; } while ( false )
rank: 399
score: 98.02454485212054
patch: return ( int ) return ;
rank: 400
score: 98.97118123372395
patch: final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 400
score: 98.9273910522461
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator ;
rank: 400
score: 98.92274876644737
patch: throw ( Illegal CaMeL Argument CaMeL Exception ) new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ;
rank: 400
score: 98.91515661168981
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception
rank: 400
score: 98.56179373604911
patch: else { break ; } }
rank: 400
score: 98.49001736111111
patch: int else { return ; if return ;
rank: 400
score: 98.42422485351562
patch: return ; if ; ++ return ;
rank: 400
score: 98.35493687220982
patch: return true ; } ; ;
rank: 400
score: 98.02362932477679
patch: return ; } finally { ;
rank: 401
score: 98.56026882595486
patch: else return ; } else { return ;
rank: 401
score: 98.48927815755208
patch: * else { return ; if return ;
rank: 401
score: 98.4240951538086
patch: return ; if ; = * ;
rank: 401
score: 98.35460553850446
patch: return ; default * return ;
rank: 401
score: 98.02328491210938
patch: } return - 0 ;
rank: 402
score: 98.97091471354166
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . iterate CaMeL
rank: 402
score: 98.92705939797794
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair )
rank: 402
score: 98.9219462076823
patch: throw throws Function CaMeL Evaluation CaMeL Exception { return ; }
rank: 402
score: 98.91452026367188
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { khi
rank: 402
score: 98.72133501838235
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted ) } ;
rank: 402
score: 98.56026458740234
patch: return ; } } if return ;
rank: 402
score: 98.48909505208333
patch: else { return ; return ; break ;
rank: 402
score: 98.42367553710938
patch: return ; if ; return ; ; if ;
rank: 402
score: 98.35455322265625
patch: return ; } } catch ( ;
rank: 402
score: 98.02305908203125
patch: } catch ( ;
rank: 403
score: 98.97080775669643
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair = contracted ;
rank: 403
score: 98.92703683035714
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair *
rank: 403
score: 98.92137953814338
patch: simplex = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 403
score: 98.914453125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ;
rank: 403
score: 98.72128135279605
patch: return Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( best ) ;
rank: 403
score: 98.55961608886719
patch: if ( ! return ; return ;
rank: 403
score: 98.48899332682292
patch: try { return false ;
rank: 403
score: 98.42351616753473
patch: return ; ; else if ; return ;
rank: 403
score: 98.35433197021484
patch: return false ; } else return ;
rank: 403
score: 98.02267020089286
patch: else if ; final return ;
rank: 404
score: 98.97056477864584
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator . compare CaMeL
rank: 404
score: 98.92688519021739
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , reflected ) ;
rank: 404
score: 98.92106119791667
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi
rank: 404
score: 98.91435389364919
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Optimization CaMeL Exception
rank: 404
score: 98.72121710526316
patch: ret = comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 404
score: 98.55848911830357
patch: } return ; } if ;
rank: 404
score: 98.35395159040179
patch: } ; try { return ;
rank: 404
score: 98.0226318359375
patch: ok = true ;
rank: 405
score: 98.91410006009616
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ;
rank: 405
score: 98.72115285773026
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; } else
rank: 405
score: 98.55815124511719
patch: else return false ; return false ;
rank: 405
score: 98.48855154854911
patch: else { return ; / else
rank: 405
score: 98.42285834418402
patch: return ; return ; } } return ;
rank: 405
score: 98.35356140136719
patch: return ; * / * return ;
rank: 405
score: 98.02180989583333
patch: @ Override public void ;
rank: 406
score: 98.97024739583334
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted ( comparator ) ;
rank: 406
score: 98.9261474609375
patch: void iterate CaMeL Simplex ( final Real CaMeL Point CaMeL Value CaMeL Pair contracted ,
rank: 406
score: 98.72111206054687
patch: result = comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , comparator ) ;
rank: 406
score: 98.55741373697917
patch: else { else return ; } return ;
rank: 406
score: 98.42232666015624
patch: return ; return ; return ; if ; /
rank: 406
score: 98.0193115234375
patch: return new ; }
rank: 407
score: 98.9692153930664
patch: return evaluate CaMeL New CaMeL Simplex ( original . khi , best ) ;
rank: 407
score: 98.92496390964673
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ; }
rank: 407
score: 98.920390625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( original , best ) ;
rank: 407
score: 98.91372680664062
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , original ) ;
rank: 407
score: 98.55609809027777
patch: else if ; return ; } return ;
rank: 407
score: 98.48814561631944
patch: else { return ; } ; break ;
rank: 407
score: 98.42204284667969
patch: return ; return ; = if ;
rank: 407
score: 98.01898193359375
patch: notify CaMeL All ( ;
rank: 408
score: 98.92470296223958
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ; }
rank: 408
score: 98.913330078125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ;
rank: 408
score: 98.72019958496094
patch: return ! evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 408
score: 98.55606079101562
patch: else { * * * * /
rank: 408
score: 98.48792860243056
patch: return return ; return ; } return ;
rank: 408
score: 98.42183227539063
patch: return ; return ; if ; -- return ;
rank: 408
score: 98.3506851196289
patch: return false ; ; } else {
rank: 409
score: 98.968994140625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) gamma ;
rank: 409
score: 98.92464192708333
patch: return evaluate CaMeL New CaMeL Simplex ( contracted , reflected , comparator ) ;
rank: 409
score: 98.91973586309524
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 409
score: 98.91315252130681
patch: throw new Function CaMeL Evaluation CaMeL Exception ( simplex ,
rank: 409
score: 98.72013585707721
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , contracted , comparator ) ;
rank: 409
score: 98.55583844866071
patch: } else return false ; }
rank: 409
score: 98.48786010742188
patch: else { return return ; if return ; }
rank: 409
score: 98.4212890625
patch: return ; ; if return ; return ; ;
rank: 409
score: 98.34859466552734
patch: return ; } * * / ;
rank: 410
score: 98.96810477120536
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ = contracted ;
rank: 410
score: 98.92444378396739
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ) ;
rank: 410
score: 98.919482421875
patch: throw throws Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { } }
rank: 410
score: 98.91306762695312
patch: return original . get CaMeL Value ( ) ;
rank: 410
score: 98.71983846028645
patch: return instanceof Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 410
score: 98.55521065848214
patch: else return ; else return ;
rank: 410
score: 98.48784528459821
patch: return { return ; } ;
rank: 410
score: 98.42074584960938
patch: return ; return ; if ; String
rank: 410
score: 98.01646205357143
patch: else { return false ; ;
rank: 411
score: 98.96807454427083
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { gamma simplex
rank: 411
score: 98.92417841372283
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ] > [ ] ;
rank: 411
score: 98.719775390625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ;
rank: 411
score: 98.55501980251736
patch: } else { if ; } else {
rank: 411
score: 98.48751395089286
patch: else { return ; * ;
rank: 411
score: 98.42066539417614
patch: return ; if ; return ; if ; return /
rank: 411
score: 98.34817504882812
patch: } if ( ; ;
rank: 412
score: 98.92334798177083
patch: return evaluate CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , comparator ) ;
rank: 412
score: 98.91810438368056
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > ) ; }
rank: 412
score: 98.55487738715277
patch: } else { super . return ; }
rank: 412
score: 98.48743286132813
patch: else { return ; System . out . start
rank: 412
score: 98.41990831163194
patch: return ; } return ; if ; return
rank: 412
score: 98.34699358258929
patch: } * ; if ( ;
rank: 412
score: 98.01530238560268
patch: return new return new ; }
rank: 413
score: 98.91801183363971
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . true ,
rank: 413
score: 98.7194580078125
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 413
score: 98.4874267578125
patch: / * else { return ;
rank: 413
score: 98.41923692491319
patch: return ; return ; if / = ;
rank: 413
score: 98.01481119791667
patch: throw new ; return ;
rank: 414
score: 98.92301177978516
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , true ) ;
rank: 414
score: 98.71938605057566
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) ;
rank: 414
score: 98.55440521240234
patch: } else { } return false ;
rank: 414
score: 98.48737335205078
patch: else { return ; return ; *
rank: 414
score: 98.4183016690341
patch: return ; return ; while ; return ; return ;
rank: 414
score: 98.346923828125
patch: return true ; if ( ;
rank: 414
score: 98.0147705078125
patch: if ( ; } }
rank: 415
score: 98.96363414417614
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ;
rank: 415
score: 98.92280910326087
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 1 , reflected ) ;
rank: 415
score: 98.91780598958333
patch: result = evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator ) ;
rank: 415
score: 98.71917114257812
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ , simplex ) ;
rank: 415
score: 98.55409749348958
patch: * * * * * / return ;
rank: 415
score: 98.48731689453125
patch: else { return ; / / * return ;
rank: 415
score: 98.41820068359375
patch: return ; return ; if ; return ; this
rank: 415
score: 98.34513636997768
patch: } finally { return ; ;
rank: 415
score: 98.01468505859376
patch: finally { ; }
rank: 416
score: 98.96343439275569
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex ;
rank: 416
score: 98.92257952008929
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 416
score: 98.91133939302884
patch: new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex
rank: 416
score: 98.55409071180556
patch: return ; } else if return return ;
rank: 416
score: 98.48674665178571
patch: i { return ; if ;
rank: 416
score: 98.3440933227539
patch: return ; default : if ( ;
rank: 416
score: 98.01409912109375
patch: result = new return ;
rank: 417
score: 98.9633076985677
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original . khi , comparator ) ;
rank: 417
score: 98.92184315557066
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 0 , best ) ;
rank: 417
score: 98.91775277944711
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 417
score: 98.91127080502717
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Runtime ( ) , ) ;
rank: 417
score: 98.71913655598958
patch: throw new Function CaMeL Evaluation CaMeL Exception ( original ) ;
rank: 417
score: 98.55227661132812
patch: } else if return ; } }
rank: 417
score: 98.48662651909723
patch: return return ; return ; ; return ;
rank: 417
score: 98.4178466796875
patch: return ; if ; if ; ; return ;
rank: 417
score: 98.34315490722656
patch: return ; } * return ; }
rank: 417
score: 98.01370675223214
patch: throw new Runtime CaMeL Exception ;
rank: 418
score: 98.96321614583333
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ }
rank: 418
score: 98.92153930664062
patch: return = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 418
score: 98.91736653645833
patch: simplex = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length
rank: 418
score: 98.71854945591518
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ + reflected ) ;
rank: 418
score: 98.55204010009766
patch: } else if ; catch return ;
rank: 418
score: 98.48632134331598
patch: return return ; return { } return ;
rank: 418
score: 98.41750081380208
patch: return ; if ; return ; / ;
rank: 418
score: 98.0128682454427
patch: return finally { return ;
rank: 419
score: 98.92144012451172
patch: return contracted ;
rank: 419
score: 98.91114390980114
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL
rank: 419
score: 98.71844482421875
patch: return Real CaMeL Point CaMeL Value CaMeL Pair reflected ; }
rank: 419
score: 98.55161539713542
patch: else { if ; return return ; }
rank: 419
score: 98.48594970703125
patch: result { return ;
rank: 419
score: 98.4174072265625
patch: return ; if ; = * ; return ;
rank: 419
score: 98.01250348772321
patch: else if ( matches ( ;
rank: 420
score: 98.96307927911931
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair = simplex ;
rank: 420
score: 98.9209976196289
patch: expanded = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 420
score: 98.9159294577206
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { ) ;
rank: 420
score: 98.7177734375
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 ,
rank: 420
score: 98.48526763916016
patch: else if return ; if return ;
rank: 420
score: 98.4171630859375
patch: return ; if ; return ; break ; ;
rank: 420
score: 98.34223284040179
patch: else return ; } * /
rank: 420
score: 98.01214599609375
patch: final Object [ ] ;
rank: 421
score: 98.96295720880681
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted ;
rank: 421
score: 98.92099609375
patch: return evaluate CaMeL New CaMeL Simplex ( original , simplex , comparator ) ;
rank: 421
score: 98.91583251953125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 421
score: 98.91085250289352
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 421
score: 98.71761281866776
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 0 . 0 , comparator ) ;
rank: 421
score: 98.55082194010417
patch: } return * return ;
rank: 421
score: 98.48502604166667
patch: else { return ; } return ; /
rank: 421
score: 98.41692352294922
patch: return ; return ; while ; ;
rank: 421
score: 98.34162248883929
patch: return ; else return ; }
rank: 421
score: 98.01123918805804
patch: return super . yield ( ;
rank: 422
score: 98.92093098958334
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , comparator ) ;
rank: 422
score: 98.91067068917411
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , ) ;
rank: 422
score: 98.717529296875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair . simplex ) ;
rank: 422
score: 98.55078996930804
patch: } } else = return ;
rank: 422
score: 98.48413957868304
patch: value { return ; break ;
rank: 422
score: 98.41684977213542
patch: return ; if return ; break ; }
rank: 422
score: 98.01077706473214
patch: do { super . ; }
rank: 423
score: 98.96236165364583
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted
rank: 423
score: 98.92042178199405
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair /
rank: 423
score: 98.91456240699405
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Runtime CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 423
score: 98.71744113498264
patch: return evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , comparator ) ; }
rank: 423
score: 98.55025809151786
patch: } return * * * ;
rank: 423
score: 98.48397216796874
patch: return return return ; System . out . return
rank: 423
score: 98.41644287109375
patch: return ; if * ; return ;
rank: 423
score: 98.34063720703125
patch: return null ; }
rank: 423
score: 98.0103988647461
patch: else if ;
rank: 424
score: 98.9623135653409
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception ; }
rank: 424
score: 98.92031715029762
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair *
rank: 424
score: 98.91447310014205
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . is CaMeL Empty ( ) ) ;
rank: 424
score: 98.90962357954545
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception { return ; } }
rank: 424
score: 98.7166748046875
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + simplex ) ;
rank: 424
score: 98.55023193359375
patch: return * * * return ; }
rank: 424
score: 98.48270670572917
patch: else return ; return { if return ;
rank: 424
score: 98.41641671316964
patch: if return ; } return ;
rank: 424
score: 98.33985900878906
patch: return true ; } else if ;
rank: 424
score: 98.00877162388393
patch: else if ( matches ) {
rank: 425
score: 98.96226917613636
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 425
score: 98.92006022135416
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > contracted = reflected ;
rank: 425
score: 98.91371848366477
patch: return original . iterate CaMeL Simplex ( comparator ) ;
rank: 425
score: 98.9093487079327
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair )
rank: 425
score: 98.71647813585069
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ) ; }
rank: 425
score: 98.5496114095052
patch: return ; else return ;
rank: 425
score: 98.48265584309895
patch: return ; int else {
rank: 425
score: 98.41632080078125
patch: return ; return ; return ; if ; {
rank: 425
score: 98.33901977539062
patch: } else { return this . ;
rank: 425
score: 98.00852748325893
patch: super . ; return ; }
rank: 426
score: 98.91991373697917
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] original ) ;
rank: 426
score: 98.71645220588235
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception / * /
rank: 426
score: 98.48255615234375
patch: else { return ; ; if return ; }
rank: 426
score: 98.416015625
patch: return ; return ; if ; return ; = ;
rank: 426
score: 98.00762939453125
patch: sb . append ( ; }
rank: 427
score: 98.91952912703805
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ $NUMBER$ ] ;
rank: 427
score: 98.91293480282738
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 427
score: 98.90892650462963
patch: return best . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 427
score: 98.71644944411058
patch: result = comparator . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 427
score: 98.54818289620536
patch: } return ; else return ;
rank: 427
score: 98.48213704427083
patch: return ; for return ;
rank: 427
score: 98.4157470703125
patch: return ; if ; return ; ++ return ;
rank: 427
score: 98.00623430524554
patch: else if ; if ( ;
rank: 428
score: 98.9606296705163
patch: return Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 428
score: 98.91935221354167
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] = simplex ;
rank: 428
score: 98.91167658025569
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . to CaMeL String ( ) ) ;
rank: 428
score: 98.71640625
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair reflected , best ) ;
rank: 428
score: 98.54812186104911
patch: / * * * return ;
rank: 428
score: 98.48204956054687
patch: return return return ; if return ; return ;
rank: 428
score: 98.41547309027777
patch: return ; if ; return ; while ;
rank: 428
score: 98.33787027994792
patch: else { throw ; }
rank: 428
score: 98.00558471679688
patch: if ( true ) {
rank: 429
score: 98.96021617542614
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair . iterator ( )
rank: 429
score: 98.91919962565105
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( reflected , comparator ) ;
rank: 429
score: 98.91152121803977
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted ;
rank: 429
score: 98.90834397536058
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair void
rank: 429
score: 98.71621864720395
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; else {
rank: 429
score: 98.54805755615234
patch: } return return ; return false ;
rank: 429
score: 98.48174176897321
patch: finally { return ; break ;
rank: 429
score: 98.41504584418402
patch: return ; if ; = return ; }
rank: 429
score: 98.33640834263393
patch: return ; * / } ;
rank: 429
score: 98.00484619140624
patch: return return false ;
rank: 430
score: 98.95964050292969
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) khi ;
rank: 430
score: 98.91869099934895
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 430
score: 98.91090029761905
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . length ) ;
rank: 430
score: 98.90829702524039
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair }
rank: 430
score: 98.71601104736328
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected ) ;
rank: 430
score: 98.5472412109375
patch: } else throw return ;
rank: 430
score: 98.48169708251953
patch: else { else { return ; }
rank: 430
score: 98.41495090060764
patch: return ; return ; } ; if ;
rank: 430
score: 98.33495330810547
patch: return false ; } } ) ;
rank: 430
score: 98.0023193359375
patch: if ( matches == 0 )
rank: 431
score: 98.9584732055664
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] iterate CaMeL Simplex ;
rank: 431
score: 98.9186374830163
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 0 , reflected ) ;
rank: 431
score: 98.90995788574219
patch: throw throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception { return ; }
rank: 431
score: 98.90825544084821
patch: return evaluate CaMeL New CaMeL Simplex ( khi , best ) ;
rank: 431
score: 98.71540069580078
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , best ) ; }
rank: 431
score: 98.54706488715277
patch: else { if ( return ; } }
rank: 431
score: 98.4815673828125
patch: else { return ; if return .
rank: 431
score: 98.41421508789062
patch: return ; return ; = if ; return ;
rank: 431
score: 98.33434186662946
patch: return this ; } else {
rank: 431
score: 98.00087193080357
patch: final ; final ; return ;
rank: 432
score: 98.91817801339286
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ]
rank: 432
score: 98.90992320667614
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . is CaMeL Sealed ( ) ) ;
rank: 432
score: 98.90823800223214
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , khi ) ;
rank: 432
score: 98.54695129394531
patch: else { return * * ; }
rank: 432
score: 98.48156127929687
patch: else { return ; } ; break ; }
rank: 432
score: 98.4140292080966
patch: return ; if ; ; return ; } return ;
rank: 432
score: 97.99791608537946
patch: else { final return true ;
rank: 433
score: 98.95804850260417
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , comparator , comparator ) ;
rank: 433
score: 98.91749674479166
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate , comparator ) ;
rank: 433
score: 98.90972345525569
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> contracted ) ;
rank: 433
score: 98.90757649739584
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted final
rank: 433
score: 98.71527709960938
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair original ;
rank: 433
score: 98.54666137695312
patch: } else if return return return ;
rank: 433
score: 98.48140171595982
patch: return return ; return false ;
rank: 433
score: 98.41367885044643
patch: return ; if ; continue ;
rank: 433
score: 98.33377838134766
patch: return ; } else return ; }
rank: 433
score: 97.99607631138393
patch: } else { final double ;
rank: 434
score: 98.95801842730978
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ ] ; } }
rank: 434
score: 98.91732788085938
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ;
rank: 434
score: 98.90933227539062
patch: throw throws Function CaMeL Evaluation CaMeL Exception { }
rank: 434
score: 98.9074609375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Runtime ( ) ) ;
rank: 434
score: 98.71510074013158
patch: cached = comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 434
score: 98.54663848876953
patch: else if return ; return return ;
rank: 434
score: 98.48101806640625
patch: else { return ; / return ;
rank: 434
score: 98.41363525390625
patch: return ; if ; if return ; ;
rank: 434
score: 98.33354949951172
patch: return this . ; } else {
rank: 434
score: 97.99557931082589
patch: else if ( return ) {
rank: 435
score: 98.9171832540761
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 1 , contracted ) ;
rank: 435
score: 98.90865652901786
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> 1 ;
rank: 435
score: 98.90666198730469
patch: try { evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 435
score: 98.71494427849265
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception = false ;
rank: 435
score: 98.54661342075893
patch: } else * / return ;
rank: 435
score: 98.48084513346355
patch: return return ; break ;
rank: 435
score: 98.41328260633681
patch: return ; if return ; return ; ;
rank: 435
score: 98.33332061767578
patch: return false ; ; } * /
rank: 435
score: 97.99449811662946
patch: else { super . return ;
rank: 436
score: 98.95717551491477
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair ) gamma ;
rank: 436
score: 98.9170166015625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ++ ;
rank: 436
score: 98.9060302734375
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex
rank: 436
score: 98.71464269301471
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { comparator } ; }
rank: 436
score: 98.54637908935547
patch: else { if ; } else {
rank: 436
score: 98.48052978515625
patch: return { ; return ; }
rank: 436
score: 98.41324191623264
patch: return ; return ; if ; = /
rank: 436
score: 98.33195495605469
patch: return ; / * * * ;
rank: 436
score: 97.99417550223214
patch: return ; else if ( ;
rank: 437
score: 98.95684051513672
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value
rank: 437
score: 98.91688368055556
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * /
rank: 437
score: 98.90812174479167
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . contracted ) ;
rank: 437
score: 98.90548706054688
patch: simplex = ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ;
rank: 437
score: 98.7144775390625
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , true ) ;
rank: 437
score: 98.54618326822917
patch: } else { if return ; return ;
rank: 437
score: 98.48044162326389
patch: else { if return . return ; }
rank: 437
score: 98.41282823350694
patch: return ; if ; = -- return ;
rank: 437
score: 98.33184814453125
patch: return ; default * return ; }
rank: 437
score: 97.99216134207589
patch: } else try { return ;
rank: 438
score: 98.95683149857955
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( gamma ) ;
rank: 438
score: 98.91641727570564
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] = reflected ;
rank: 438
score: 98.907900390625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 438
score: 98.54547797309027
patch: } else if return ; return true ;
rank: 438
score: 98.480322265625
patch: i { return ; System . out . ;
rank: 438
score: 98.41279740767045
patch: return ; return ; if ; if ; return }
rank: 438
score: 98.33059692382812
patch: return ; } else { final ;
rank: 438
score: 97.99090576171875
patch: finally { this . return ;
rank: 439
score: 98.95576615767045
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 439
score: 98.9161865234375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > reflected = reflected ;
rank: 439
score: 98.90785725911458
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $NUMBER$ ) ;
rank: 439
score: 98.90529563210227
patch: simplex = evaluate CaMeL New CaMeL Simplex ( original ,
rank: 439
score: 98.71443256578948
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator , best ) ;
rank: 439
score: 98.54496547154018
patch: else if ; if return ;
rank: 439
score: 98.4126708984375
patch: return ; if ; return ; if ; }
rank: 439
score: 98.32987670898437
patch: } } * /
rank: 439
score: 97.99026489257812
patch: if ( ! return ;
rank: 440
score: 98.95562744140625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma , true ) ;
rank: 440
score: 98.91616423233695
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair >> ( comparator ) ;
rank: 440
score: 98.90733337402344
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( contracted , best ) ;
rank: 440
score: 98.71437474300987
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair . simplex ) ;
rank: 440
score: 98.54451206752232
patch: } / * * * /
rank: 440
score: 98.48000081380208
patch: return { } return ;
rank: 440
score: 98.41188049316406
patch: return ; ; ; if ; return
rank: 440
score: 98.32937622070312
patch: / * * return ;
rank: 440
score: 97.98972865513393
patch: if ( ; return new ;
rank: 441
score: 98.95559692382812
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , best , comparator ) ;
rank: 441
score: 98.91539510091145
patch: return evaluate CaMeL New CaMeL Simplex ( contracted ) ; }
rank: 441
score: 98.9051513671875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL
rank: 441
score: 98.54419962565105
patch: } else if ; else
rank: 441
score: 98.47993977864583
patch: return return ; / else { return ;
rank: 441
score: 98.411865234375
patch: return ; if ; return ; --
rank: 441
score: 98.32927594866071
patch: return true ; } * ;
rank: 441
score: 97.98924763997395
patch: return finally { ; }
rank: 442
score: 98.91530354817708
patch: evaluate CaMeL New CaMeL Simplex ( reflected , comparator ) ;
rank: 442
score: 98.90641276041667
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Runtime ( ) , ) ;
rank: 442
score: 98.90481332632211
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 442
score: 98.71432156032986
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + }
rank: 442
score: 98.54414876302083
patch: } else { return ; } break ;
rank: 442
score: 98.47937883649554
patch: else { value return ; }
rank: 442
score: 98.41162109375
patch: if ; return ; return ; return ; return ;
rank: 442
score: 97.98772430419922
patch: return 0 ;
rank: 443
score: 98.91520889945652
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , contracted ) ;
rank: 443
score: 98.71376953125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ] ;
rank: 443
score: 98.47906494140625
patch: else { return ; } for return ;
rank: 443
score: 98.41147867838542
patch: return ; } return ; } return ;
rank: 443
score: 98.32778494698661
patch: return ; this . return ;
rank: 444
score: 98.9546231356534
patch: return evaluate CaMeL New CaMeL Simplex ( gamma ) ;
rank: 444
score: 98.91512298583984
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ; }
rank: 444
score: 98.71357727050781
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ , gamma , comparator ) ;
rank: 444
score: 98.54239327566964
patch: return * return * * /
rank: 444
score: 98.47837999131944
patch: else { return return ; while return ;
rank: 444
score: 98.4114013671875
patch: return ; return ; if ; else return ;
rank: 444
score: 98.32762654622395
patch: this . return false ;
rank: 444
score: 97.98765345982143
patch: return super . iterator ( ;
rank: 445
score: 98.9543965657552
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 445
score: 98.9151102701823
patch: } Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 445
score: 98.90457589285714
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 445
score: 98.90423583984375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ;
rank: 445
score: 98.71357278262867
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; else {
rank: 445
score: 98.54239327566964
patch: return * * * ; }
rank: 445
score: 98.478076171875
patch: else { return ; } } return true ;
rank: 445
score: 98.411279296875
patch: return ; return ; while ; if ; return
rank: 445
score: 98.32742309570312
patch: } * / ; ; * /
rank: 445
score: 97.98713684082031
patch: return 1 ;
rank: 446
score: 98.9540378736413
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( khi , comparator ) ;
rank: 446
score: 98.9136962890625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ; }
rank: 446
score: 98.904248046875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 446
score: 98.71334035773026
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted
rank: 446
score: 98.47787039620536
patch: return { return return ; }
rank: 446
score: 98.41122097439236
patch: return ; return ; ; if ; /
rank: 446
score: 98.32649739583333
patch: / * return false ;
rank: 446
score: 97.9869384765625
patch: dim = ; return ;
rank: 447
score: 98.95369096235795
patch: else increment CaMeL Iterations CaMeL Counter ( contracted ) ;
rank: 447
score: 98.9135105298913
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . 0 , contracted ) ;
rank: 447
score: 98.9035311612216
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ _
rank: 447
score: 98.71314912683823
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( best , gamma , comparator ) ;
rank: 447
score: 98.54225376674107
patch: } catch ; return return ;
rank: 447
score: 98.47785949707031
patch: return { return ; return ; ;
rank: 447
score: 98.41115993923611
patch: return ; } ; return ; return ;
rank: 447
score: 98.32635498046875
patch: } * / ; return ;
rank: 447
score: 97.98590959821429
patch: return super . run ( ;
rank: 448
score: 98.91348353794643
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 448
score: 98.90335083007812
patch: return super . iterate CaMeL Simplex ( ) ;
rank: 448
score: 98.7130615234375
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; else {
rank: 448
score: 98.54064069475446
patch: return * ; } return ;
rank: 448
score: 98.47672816685268
patch: catch return ; return ; ;
rank: 448
score: 98.41008911132812
patch: return ; return ; if ; ; / /
rank: 448
score: 97.98570760091145
patch: } do { return ;
rank: 449
score: 98.953369140625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . evaluate CaMeL New CaMeL Simplex ( comparator ) ;
rank: 449
score: 98.91303253173828
patch: return evaluate CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ]
rank: 449
score: 98.71295572916667
patch: List < Real CaMeL Point CaMeL Value CaMeL Pair > contracted = simplex ;
rank: 449
score: 98.54060363769531
patch: } else { else = return ;
rank: 449
score: 98.47663116455078
patch: } else { return ; if ;
rank: 449
score: 98.40997992621527
patch: return ; else ; if ; return ;
rank: 450
score: 98.95313609730114
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception ) }
rank: 450
score: 98.90325927734375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Class ( ) ) ;
rank: 450
score: 98.90031294389205
patch: return evaluate CaMeL Simplex ( original , best ) ;
rank: 450
score: 98.71291097005208
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair reflected ) ;
rank: 450
score: 98.54055786132812
patch: } else { / * * /
rank: 450
score: 98.47624206542969
patch: else { return ; } int else
rank: 450
score: 98.40988159179688
patch: if ; ; return ;
rank: 450
score: 98.32566833496094
patch: return false ; } * return ;
rank: 450
score: 97.98350306919643
patch: } else { new ; ;
rank: 451
score: 98.91279153262867
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++
rank: 451
score: 98.9030124830163
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected } ) ;
rank: 451
score: 98.89830186631944
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ) ;
rank: 451
score: 98.7128436748798
patch: return evaluate CaMeL New CaMeL Simplex ( this , best ) ;
rank: 451
score: 98.54028998480902
patch: } else { return ; return return ;
rank: 451
score: 98.47615269252232
patch: / else { return ; /
rank: 451
score: 98.40928141276042
patch: return ; return ; } return ; else
rank: 451
score: 98.32506452287946
patch: if ( ; return null ;
rank: 452
score: 98.95176003196023
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 452
score: 98.91234654017858
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ;
rank: 452
score: 98.90272623697916
patch: simplex = new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex
rank: 452
score: 98.71240234375
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , null ) ;
rank: 452
score: 98.47603759765624
patch: else { return ; / else { return ;
rank: 452
score: 98.40922546386719
patch: return ; ; if ; break ;
rank: 452
score: 98.32450866699219
patch: return ; } else { / ;
rank: 452
score: 97.98195975167411
patch: else { final ; final ;
rank: 453
score: 98.95164905894886
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( contracted ) ;
rank: 453
score: 98.71233723958333
patch: return increment CaMeL Iterations CaMeL Counter ( original , gamma , comparator ) ;
rank: 453
score: 98.54012044270833
patch: else { return * * return ; }
rank: 453
score: 98.47485961914063
patch: else { return ; System . out . clear
rank: 453
score: 98.40922037760417
patch: return ; return ; ; if ; int
rank: 453
score: 98.32373046875
patch: return ; default : break ;
rank: 453
score: 97.98153686523438
patch: assert ; return false ;
rank: 454
score: 98.9115982055664
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate , khi , comparator ) ;
rank: 454
score: 98.902099609375
patch: throw new Optimization CaMeL Exception ( ,
rank: 454
score: 98.89584350585938
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( , $STRING$ ) ) ;
rank: 454
score: 98.71220703125
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma + comparator ) ;
rank: 454
score: 98.54006618923611
patch: } return return ; return return return ;
rank: 454
score: 98.47404174804687
patch: else { return ; } * / return ;
rank: 454
score: 98.40859375
patch: return ; return ; if ; break ; }
rank: 454
score: 98.32352447509766
patch: return true ; ; } * /
rank: 454
score: 97.9813944498698
patch: else { continue ; }
rank: 455
score: 98.95140491832386
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 455
score: 98.9114990234375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > reflected = simplex ;
rank: 455
score: 98.90203450520833
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator ) ;
rank: 455
score: 98.71196432674633
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , null ) ;
rank: 455
score: 98.53974151611328
patch: } else if return ; if ;
rank: 455
score: 98.40845336914063
patch: return ; return ; if ; / / /
rank: 455
score: 97.98063151041667
patch: final ; return null ;
rank: 456
score: 98.95055621603261
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair ( contracted ) ;
rank: 456
score: 98.91135602678571
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 456
score: 98.89476429332386
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate ;
rank: 456
score: 98.53941345214844
patch: return * * * return false ;
rank: 456
score: 98.4738540649414
patch: else return ; return ; return ;
rank: 456
score: 98.40828247070313
patch: return ; ; return ; if ; return ;
rank: 456
score: 98.32151794433594
patch: if ( ; * / return ;
rank: 456
score: 97.97948346819196
patch: return get CaMeL Parent ( ;
rank: 457
score: 98.91093175551471
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ]
rank: 457
score: 98.90198284646739
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Message ( $STRING$ ) ) ;
rank: 457
score: 98.89442027698864
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ comparator .
rank: 457
score: 98.71138305664063
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; } else
rank: 457
score: 98.53868103027344
patch: else return false ; } else {
rank: 457
score: 98.47373962402344
patch: else { return ; } * ;
rank: 457
score: 98.40787353515626
patch: return ; return ; return ; = return ;
rank: 457
score: 98.3213119506836
patch: return ; } else { ; }
rank: 457
score: 97.97937883649554
patch: throw new ; } else {
rank: 458
score: 98.910400390625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) null ; }
rank: 458
score: 98.90135609019886
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) {
rank: 458
score: 98.894287109375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) comparator ;
rank: 458
score: 98.71131049262152
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best , best } ;
rank: 458
score: 98.53856658935547
patch: } if return ; return false ;
rank: 458
score: 98.40781075613839
patch: return ; return ; System ;
rank: 458
score: 98.3204345703125
patch: return ; } ) ; ;
rank: 458
score: 97.97861735026042
patch: finally { return true ;
rank: 459
score: 98.94893022017045
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair ( ) ;
rank: 459
score: 98.91018809442934
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair > ) simplex ;
rank: 459
score: 98.9012959798177
patch: super . iterate CaMeL Simplex ( original , best ) ;
rank: 459
score: 98.53797912597656
patch: } else if ; new return ;
rank: 459
score: 98.47332763671875
patch: return = return ; return ;
rank: 459
score: 98.40739222935268
patch: return ; ; throw return ;
rank: 459
score: 98.3204345703125
patch: / * return ; * * /
rank: 459
score: 97.97844587053571
patch: while ( ; ; ) {
rank: 460
score: 98.94851684570312
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma , false ) ;
rank: 460
score: 98.90977260044643
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ;
rank: 460
score: 98.90120180191532
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception
rank: 460
score: 98.8933636209239
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ best . length
rank: 460
score: 98.53794642857143
patch: } else if ; else {
rank: 460
score: 98.47293090820312
patch: else { return ; } ; return ; }
rank: 460
score: 98.40694427490234
patch: return ; if ; return ; final
rank: 460
score: 98.32026672363281
patch: return false ; } else { ;
rank: 461
score: 98.9479647549716
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( original ,
rank: 461
score: 98.90940259850544
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted ) ;
rank: 461
score: 98.89205078125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > ,
rank: 461
score: 98.71038140190973
patch: return . to CaMeL String ( ) ;
rank: 461
score: 98.53716362847223
patch: } else = null ; else return ;
rank: 461
score: 98.47161865234375
patch: else return ; return ; ;
rank: 461
score: 98.40677218967014
patch: return ; if -- return ; return ;
rank: 461
score: 98.31979806082589
patch: return ; / * ; ;
rank: 461
score: 97.97794015066964
patch: return * / if ( ;
rank: 462
score: 98.94626871744792
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . in . get CaMeL Exception ( ) ) ;
rank: 462
score: 98.9091266134511
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , evaluate CaMeL New CaMeL Simplex , true ) ;
rank: 462
score: 98.90097837094908
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception
rank: 462
score: 98.89163773148148
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 462
score: 98.7101806640625
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 462
score: 98.40659586588542
patch: return ; else if ; return ; }
rank: 462
score: 98.31978934151786
patch: else return - 1 ; }
rank: 462
score: 97.97765241350446
patch: else { this . set ;
rank: 463
score: 98.94619750976562
patch: this . comparator . compare ( contracted , best ) ;
rank: 463
score: 98.90904169497283
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ) ;
rank: 463
score: 98.90066528320312
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ / *
rank: 463
score: 98.89154607599431
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Runtime CaMeL Exception . get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 463
score: 98.53590393066406
patch: * * * * * return ;
rank: 463
score: 98.47137451171875
patch: else { return ; { if return ; }
rank: 463
score: 98.4059170809659
patch: return ; return ; ; if return ; return ;
rank: 463
score: 98.31912231445312
patch: return ; / * * ; ;
rank: 464
score: 98.90727095170455
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair
rank: 464
score: 98.90061598557692
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ,
rank: 464
score: 98.8914794921875
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 464
score: 98.70997837611607
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ + best ) ;
rank: 464
score: 98.53500705295139
patch: return ; } } return return false ;
rank: 464
score: 98.47093200683594
patch: else { return ; ; if ;
rank: 464
score: 98.40529563210227
patch: return ; return ; if ; ; return ; ;
rank: 465
score: 98.94534434442934
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception ) ; }
rank: 465
score: 98.90502251519098
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] ]
rank: 465
score: 98.90047513521634
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair reflected
rank: 465
score: 98.89061438519022
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 465
score: 98.70992337740384
patch: return evaluate CaMeL New CaMeL Simplex ( System . out ) ;
rank: 465
score: 98.53497314453125
patch: return return ; } finally { return ;
rank: 465
score: 98.47073364257812
patch: else { return ; } * if return ;
rank: 465
score: 98.40509033203125
patch: return ; if ; return ; ; /
rank: 465
score: 98.31721496582031
patch: return false ? false : false ;
rank: 465
score: 97.97594342912946
patch: if ( best != null ;
rank: 466
score: 98.94530188519022
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception . *
rank: 466
score: 98.90492757161458
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator ;
rank: 466
score: 98.899755859375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best final
rank: 466
score: 98.89040208899456
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . get CaMeL Runtime ( ) , ) ;
rank: 466
score: 98.70988384046052
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , original ) ;
rank: 466
score: 98.53487723214286
patch: else { } } return ;
rank: 466
score: 98.47061767578126
patch: else { if return ; return ; return ;
rank: 466
score: 98.40480346679688
patch: if ; return ; if ; return ; ;
rank: 466
score: 98.31624603271484
patch: return ; / * return null ;
rank: 466
score: 97.97573416573661
patch: } else { do { ;
rank: 467
score: 98.94365900213069
patch: return evaluate CaMeL New CaMeL Simplex ( return ) ;
rank: 467
score: 98.9047139485677
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected , comparator ) ;
rank: 467
score: 98.89024861653645
patch: ret = comparator . compare ( reflected , best ) ;
rank: 467
score: 98.70947265625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { evaluate } ;
rank: 467
score: 98.46998596191406
patch: else { return ; } } *
rank: 467
score: 98.40460883246527
patch: return ; ; / = ; return ;
rank: 467
score: 98.31618245442708
patch: } else { throw ;
rank: 468
score: 98.94305974786931
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair ) original ;
rank: 468
score: 98.90462000229779
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair }
rank: 468
score: 98.89955205502717
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted } ) ;
rank: 468
score: 98.7093146829044
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( reflected , gamma , comparator ) ;
rank: 468
score: 98.53369140625
patch: else { if ; } } else
rank: 468
score: 98.40433959960937
patch: return ; if return ; while ; return ;
rank: 468
score: 98.31614467075893
patch: } ; / * * /
rank: 468
score: 97.97526041666667
patch: this . ; return ;
rank: 469
score: 98.94282670454545
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma ,
rank: 469
score: 98.90442940848214
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair reflected ;
rank: 469
score: 98.89837646484375
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) original ;
rank: 469
score: 98.89013671875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 469
score: 98.70930750229779
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) reflected , comparator ) ;
rank: 469
score: 98.53267996651786
patch: } else return ( return ;
rank: 469
score: 98.4698257446289
patch: else { return ; ; break ;
rank: 469
score: 98.4043301669034
patch: return ; return ; if return ; throw return ;
rank: 469
score: 98.31610870361328
patch: return ; default : return ; ;
rank: 469
score: 97.97508021763393
patch: else { return - $NUMBER$ ;
rank: 470
score: 98.94124702785327
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( contracted ) ;
rank: 470
score: 98.90435267857143
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair 0 ;
rank: 470
score: 98.89811567826705
patch: throw new Function CaMeL Evaluation CaMeL Exception ( null ,
rank: 470
score: 98.8901034268466
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . iterator ( ) ) ;
rank: 470
score: 98.70919979319854
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; } else
rank: 470
score: 98.53239222935268
patch: } else if ; continue ;
rank: 470
score: 98.46971130371094
patch: else { return ; break ; ;
rank: 470
score: 98.40419514973958
patch: if ; return ; try
rank: 470
score: 98.3149642944336
patch: else { return ; } } ;
rank: 470
score: 97.9742431640625
patch: else { return null ;
rank: 471
score: 98.90432477678571
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair * *
rank: 471
score: 98.89795983355978
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception
rank: 471
score: 98.88978068033855
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 471
score: 98.70917711759868
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , best ) ;
rank: 471
score: 98.53233337402344
patch: } else { synchronized ; return ;
rank: 471
score: 98.40397135416667
patch: return ; return ; if return ; throw
rank: 471
score: 98.3143310546875
patch: return true ; } else return ;
rank: 471
score: 97.97323608398438
patch: fail ( $STRING$ + ;
rank: 472
score: 98.94034476902173
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair . 0 ] ; }
rank: 472
score: 98.90355088975694
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 472
score: 98.88927283653847
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > , ;
rank: 472
score: 98.70889485677084
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception true ) ;
rank: 472
score: 98.53195529513889
patch: return ; return ; } else return ;
rank: 472
score: 98.46908133370536
patch: result { return ; break ;
rank: 472
score: 98.40387641059027
patch: return ; ; if ; if ; return
rank: 472
score: 98.31400844029018
patch: return ; } } ; ;
rank: 472
score: 97.97323608398438
patch: final return new ; }
rank: 473
score: 98.90314797794117
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair --
rank: 473
score: 98.89779663085938
patch: return evaluate CaMeL New CaMeL Simplex ( original + khi , comparator ) ;
rank: 473
score: 98.53136335100446
patch: else return ; } if ;
rank: 473
score: 98.46853298611111
patch: return return return return ; if return ;
rank: 473
score: 98.40386408025569
patch: return ; return ; ; if ; return ; }
rank: 473
score: 98.313720703125
patch: return true ; } * return ;
rank: 473
score: 97.97195870535714
patch: do { this . return ;
rank: 474
score: 98.90289665670956
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++
rank: 474
score: 98.8973858173077
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair 0
rank: 474
score: 98.88895357572116
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 474
score: 98.53135463169643
patch: else return ; } else {
rank: 474
score: 98.46795654296875
patch: else { return ; while ;
rank: 474
score: 98.40375518798828
patch: return ; return ; return ; if
rank: 474
score: 98.31327819824219
patch: finally { if ( ; } }
rank: 474
score: 97.97050258091518
patch: else { super . ; ;
rank: 475
score: 98.9391377766927
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 475
score: 98.90277099609375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) false ;
rank: 475
score: 98.89709051724138
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception
rank: 475
score: 98.70859781901042
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 475
score: 98.53104400634766
patch: else { synchronized ; return ; }
rank: 475
score: 98.46794128417969
patch: try { return return { return ;
rank: 475
score: 98.40368041992187
patch: return ; return ; return ; if / /
rank: 475
score: 98.3131103515625
patch: return ; } return false ; }
rank: 476
score: 98.88702947443181
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) simplex ) ;
rank: 476
score: 98.53102620442708
patch: return * * * return / return ;
rank: 476
score: 98.46780395507812
patch: ++ return ; return ;
rank: 476
score: 98.40360514322917
patch: return ; if ; = / = ;
rank: 476
score: 98.31182861328125
patch: return false ; } * ;
rank: 476
score: 97.967529296875
patch: return new ; } else {
rank: 477
score: 98.93835979959239
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception ) ;
rank: 477
score: 98.9014404296875
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > original = simplex ;
rank: 477
score: 98.89666748046875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Runtime ( ) ) ; }
rank: 477
score: 98.70851353236607
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Interrupted CaMeL Exception ; }
rank: 477
score: 98.53083801269531
patch: } else if ; } return ;
rank: 477
score: 98.46755981445312
patch: else if return ; return - ;
rank: 477
score: 98.4035977450284
patch: return ; if ; return ; return ; break ;
rank: 477
score: 98.3110580444336
patch: } finally { return ; } ;
rank: 477
score: 97.96619524274554
patch: if ( is CaMeL Empty ;
rank: 478
score: 98.90114339192708
patch: return evaluate CaMeL New CaMeL Simplex ( reflected ) ; }
rank: 478
score: 98.896484375
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) best ) ;
rank: 478
score: 98.88666015625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > ;
rank: 478
score: 98.70845540364583
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , original ) ;
rank: 478
score: 98.53083038330078
patch: } else { * * * /
rank: 478
score: 98.46744995117187
patch: else { return ; } System . print CaMeL
rank: 478
score: 98.40354225852273
patch: return ; return ; } if ; return ; return
rank: 478
score: 98.31062316894531
patch: return true ; ; } else {
rank: 478
score: 97.96438598632812
patch: assert ; return true ;
rank: 479
score: 98.90110212053571
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair } }
rank: 479
score: 98.88614908854167
patch: increment CaMeL Iterations CaMeL Counter ( original , best ) ;
rank: 479
score: 98.70845336914063
patch: return contracted ; }
rank: 479
score: 98.53071594238281
patch: } else { break ; } }
rank: 479
score: 98.46723090277777
patch: else { return ; } if null ;
rank: 479
score: 98.40339660644531
patch: return ; return ; return ; else
rank: 479
score: 98.31011199951172
patch: } / * return ; * /
rank: 479
score: 97.96375383649554
patch: final return super . ; }
rank: 480
score: 98.93752219460227
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 480
score: 98.90104406020221
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair 0
rank: 480
score: 98.89617919921875
patch: return simplex . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 480
score: 98.88560901988636
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . get CaMeL Exception ( ) ) ;
rank: 480
score: 98.70830078125
patch: return evaluate CaMeL New CaMeL Simplex ( this , gamma , comparator ) ;
rank: 480
score: 98.53060913085938
patch: } else return * * return ;
rank: 480
score: 98.46703423394098
patch: return { return ; if return ; ;
rank: 480
score: 98.40294799804687
patch: return ; return ; if * ; return ;
rank: 480
score: 98.30973052978516
patch: } else { return ; * /
rank: 480
score: 97.96359688895089
patch: return * / return * /
rank: 481
score: 98.90093587239583
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair >> reflected = reflected ;
rank: 481
score: 98.8960673014323
patch: return evaluate CaMeL New CaMeL Simplex ( original , gamma ;
rank: 481
score: 98.7081807454427
patch: throw new Function CaMeL Evaluation CaMeL Exception ( best ) ;
rank: 481
score: 98.46697126116071
patch: / * ] return return ;
rank: 481
score: 98.40269639756944
patch: return ; return ; } if ; /
rank: 481
score: 98.30941772460938
patch: } ; ; return ;
rank: 482
score: 98.93689495584239
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair ( comparator ) ;
rank: 482
score: 98.89980246803977
patch: return evaluate CaMeL Simplex ( reflected , best ) ;
rank: 482
score: 98.88538953993056
patch: return evaluate CaMeL Simplex ( contracted ) ;
rank: 482
score: 98.70806884765625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ + gamma , comparator ) ;
rank: 482
score: 98.53028700086806
patch: } else { return false ; } else
rank: 482
score: 98.46644422743056
patch: return return ; return { return ; ;
rank: 482
score: 98.40257568359375
patch: return ; return ; if ; if ; try
rank: 482
score: 97.96048409598214
patch: else if ( ; ) {
rank: 483
score: 98.89945475260417
patch: return comparator . equals ( reflected ) ;
rank: 483
score: 98.88453979492188
patch: super . iterate CaMeL Simplex ( comparator ) ;
rank: 483
score: 98.70798068576389
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; else {
rank: 483
score: 98.53018188476562
patch: else if ; return ; return ;
rank: 483
score: 98.46599731445312
patch: return return return {
rank: 483
score: 98.40235731336806
patch: if ; if ; return ; return ;
rank: 483
score: 98.30818481445313
patch: if ( return ;
rank: 483
score: 97.96026611328125
patch: finished = true ;
rank: 484
score: 98.9353739420573
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception . Optimization CaMeL Exception
rank: 484
score: 98.8988037109375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 484
score: 98.89453125
patch: throws Function CaMeL Evaluation CaMeL Exception , Optimization CaMeL Exception , Illegal CaMeL Argument CaMeL Exception , Illegal CaMeL Argument CaMeL Exception {
rank: 484
score: 98.88413492838542
patch: throw new Function CaMeL Evaluation CaMeL Exception ( 1 ) ;
rank: 484
score: 98.70780222039474
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair >> comparator ) ;
rank: 484
score: 98.52982330322266
patch: return * * return * return ;
rank: 484
score: 98.46565077039931
patch: else { return ; } while return {
rank: 484
score: 98.40232155539773
patch: return ; return ; if ; if ; / /
rank: 484
score: 98.30787876674107
patch: return false ; } } ;
rank: 485
score: 98.89847819010417
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] [ ]
rank: 485
score: 98.7076416015625
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair >>
rank: 485
score: 98.52941216362848
patch: } else if return ; } else {
rank: 485
score: 98.46503448486328
patch: else return ; } return true ;
rank: 485
score: 98.40191650390625
patch: return ; if ; return / /
rank: 485
score: 98.30767822265625
patch: * return false ;
rank: 485
score: 97.95848592122395
patch: return is CaMeL Empty ;
rank: 486
score: 98.89444986979167
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair ] +
rank: 486
score: 98.7076171875
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( simplex , comparator ) ;
rank: 486
score: 98.52824401855469
patch: else { } if ; return ;
rank: 486
score: 98.46489800347223
patch: else { if return ; if return ;
rank: 486
score: 98.4018887606534
patch: return ; if ; return ; throw return ; }
rank: 486
score: 98.30726623535156
patch: if ( ; * / * /
rank: 486
score: 97.95845540364583
patch: } if ( ; }
rank: 487
score: 98.89790649414063
patch: return evaluate CaMeL New CaMeL Simplex ] ; }
rank: 487
score: 98.89423479352679
patch: return original . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 487
score: 98.881494140625
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 487
score: 98.70681583180146
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma + comparator ) ;
rank: 487
score: 98.46480102539063
patch: else { return ; break ; break ; }
rank: 487
score: 98.40164620535714
patch: return ; return ; else /
rank: 487
score: 97.95819091796875
patch: else if ( ; * ;
rank: 488
score: 98.9285198709239
patch: return Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original . gamma , comparator ) ;
rank: 488
score: 98.89783432904412
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted
rank: 488
score: 98.89403235394022
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best
rank: 488
score: 98.88144753196023
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) null ;
rank: 488
score: 98.70676556755515
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ; } }
rank: 488
score: 98.52735053168402
patch: } else { return * return ; }
rank: 488
score: 98.46476745605469
patch: return ; int return ( int ;
rank: 488
score: 98.4015380859375
patch: return ; return ; if ; int / /
rank: 488
score: 98.30697631835938
patch: return ; } if ( ! ;
rank: 488
score: 97.95748465401786
patch: else { null = ; }
rank: 489
score: 98.9284912109375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( }
rank: 489
score: 98.89716131036931
patch: return evaluate CaMeL Simplex ( reflected , comparator ) ;
rank: 489
score: 98.7066650390625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Illegal CaMeL Argument CaMeL Exception
rank: 489
score: 98.46409606933594
patch: return ; if return { return ;
rank: 489
score: 98.40106811523438
patch: return ; if ; return ; if ; throw
rank: 489
score: 98.30606515066964
patch: } ; finally { return ;
rank: 489
score: 97.95635986328125
patch: synchronized ( this )
rank: 490
score: 98.92737347146739
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( simplex ) ;
rank: 490
score: 98.89696248372395
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( reflected , best ) ;
rank: 490
score: 98.89338288483796
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair ) ;
rank: 490
score: 98.70662144252232
patch: return evaluate CaMeL New CaMeL Simplex ( original , best ) ; }
rank: 490
score: 98.52575005425348
patch: else if return ; } else return ;
rank: 490
score: 98.46408081054688
patch: else { return ; if null ;
rank: 490
score: 98.4002685546875
patch: return ; ; if return ; return ; }
rank: 490
score: 97.9562479654948
patch: return != null ? ;
rank: 491
score: 98.92698072350544
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Function CaMeL Evaluation CaMeL Exception , ) ;
rank: 491
score: 98.89617745535715
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair best ;
rank: 491
score: 98.70661078559027
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi , null ) ;
rank: 491
score: 98.52542550223214
patch: } catch ; if return ;
rank: 491
score: 98.46361626519098
patch: else { return ; } new return ;
rank: 491
score: 98.39814758300781
patch: return ; if ; return ; last
rank: 491
score: 97.95442417689732
patch: if ( list != null )
rank: 492
score: 98.92572021484375
patch: else { increment CaMeL Iterations CaMeL Counter ( contracted ) ;
rank: 492
score: 98.89567260742187
patch: iterate CaMeL Simplex ( reflected , best ) ;
rank: 492
score: 98.892265625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 492
score: 98.878154296875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( best , best ) ;
rank: 492
score: 98.70654296875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted = simplex ;
rank: 492
score: 98.52498626708984
patch: } else if ; return true ;
rank: 492
score: 98.46356964111328
patch: return return ; if return return ;
rank: 492
score: 98.39788263494319
patch: return ; if ; return ; while ; return ;
rank: 492
score: 97.95427594866071
patch: final int ; final int ;
rank: 493
score: 98.89556884765625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) true ;
rank: 493
score: 98.891435546875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Stack CaMeL Trace ( ) ) ;
rank: 493
score: 98.87790256076389
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 493
score: 98.70647515190973
patch: cached = comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 493
score: 98.52496337890625
patch: } else { break ;
rank: 493
score: 98.4634033203125
patch: else { return ; } System . iterator ;
rank: 493
score: 98.39784071180556
patch: return ; ; } if ; return ;
rank: 493
score: 98.30339050292969
patch: return true ; } } ) ;
rank: 493
score: 97.95248413085938
patch: } else { do {
rank: 494
score: 98.9248046875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length
rank: 494
score: 98.89368045691288
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 494
score: 98.88963099888393
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair >> contracted ;
rank: 494
score: 98.8776346842448
patch: ret = comparator . compare ( contracted , best ) ;
rank: 494
score: 98.70624856387867
patch: return ! evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 494
score: 98.52479553222656
patch: } return * * * return /
rank: 494
score: 98.46316867404514
patch: else { return ; } / * /
rank: 494
score: 98.39776611328125
patch: return ; return ; return ; if ; throw
rank: 494
score: 97.95228794642857
patch: } else { final long ;
rank: 495
score: 98.88917699353448
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , $STRING$ ) ;
rank: 495
score: 98.87743123372395
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this ) ;
rank: 495
score: 98.70616239659927
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { comparator ) } ;
rank: 495
score: 98.52466692243304
patch: return * * return false ;
rank: 495
score: 98.3977279663086
patch: return ; return ; for return ;
rank: 495
score: 98.30206298828125
patch: * / if ( ;
rank: 495
score: 97.9515151977539
patch: return length ;
rank: 496
score: 98.92418902853261
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ( Real CaMeL Point CaMeL Value CaMeL Pair best ) ] ;
rank: 496
score: 98.89333089192708
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair contracted , comparator ) ;
rank: 496
score: 98.88905843098958
patch: Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( original ,
rank: 496
score: 98.87711234714673
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . to CaMeL String ( comparator ) ) ;
rank: 496
score: 98.70596078725961
patch: List < Real CaMeL Point CaMeL Value CaMeL Pair > contracted ;
rank: 496
score: 98.5240478515625
patch: return * * * ; return ;
rank: 496
score: 98.4628662109375
patch: else { return ; ; } if return ;
rank: 496
score: 98.397607421875
patch: return ; return ; if ; return ; ++
rank: 496
score: 98.3018798828125
patch: return ; } * / / ;
rank: 496
score: 97.95083618164062
patch: else { best = ;
rank: 497
score: 98.92398734714673
patch: Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original . gamma , comparator ) ;
rank: 497
score: 98.8770061990489
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 497
score: 98.70591227213542
patch: return comparator . evaluate ( contracted ) ;
rank: 497
score: 98.52397918701172
patch: } else { } if return ;
rank: 497
score: 98.46286010742188
patch: return return ; return ; if ;
rank: 497
score: 98.39745330810547
patch: return ; if ; return ; String
rank: 497
score: 98.30161830357143
patch: return ; } * * ;
rank: 497
score: 97.94984654017857
patch: return substring ( 0 , ;
rank: 498
score: 98.88861762152777
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair / }
rank: 498
score: 98.8767726732337
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 498
score: 98.70562065972223
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ; } else
rank: 498
score: 98.52322387695312
patch: } else { new return return ;
rank: 498
score: 98.46272277832031
patch: else { return ; if ; }
rank: 498
score: 98.396923828125
patch: return ; return ; return ; break ; }
rank: 498
score: 98.30160522460938
patch: return ; } while ( false ;
rank: 499
score: 98.9238993326823
patch: Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 499
score: 98.8913933249081
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 499
score: 98.52231270926339
patch: } else { return ; else
rank: 499
score: 98.4623514811198
patch: return { for return ;
rank: 499
score: 98.39682839133523
patch: return ; ; ; if ; return ; return ;
rank: 499
score: 97.94889613560268
patch: if ( best == null ;
rank: 500
score: 98.89121500651042
patch: return ! comparator . compare ( contracted , best ) ;
rank: 500
score: 98.88808371803977
patch: throw new Function CaMeL Evaluation CaMeL Exception ( / *
rank: 500
score: 98.87593410326087
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Runtime ( ) ) ; }
rank: 500
score: 98.70513916015625
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair [ ] original = simplex ;
rank: 500
score: 98.5220718383789
patch: } return * * return return ;
rank: 500
score: 98.46224212646484
patch: else { return ; * return ;
rank: 500
score: 98.39677211216518
patch: return ; if ; return /
rank: 500
score: 98.30075509207589
patch: } * ; / * /
rank: 500
score: 97.94815673828126
patch: repaint ( ) ;
rank: 501
score: 98.92188561480978
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length
rank: 501
score: 98.89105224609375
patch: increment CaMeL Iterations CaMeL Counter ( reflected , comparator ) ;
rank: 501
score: 98.88723958333334
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception {
rank: 501
score: 98.875693359375
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair > = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 501
score: 98.70489095052083
patch: return evaluate CaMeL New CaMeL Simplex ( System . out , best ) ;
rank: 501
score: 98.52204241071429
patch: } else = ( return ;
rank: 501
score: 98.4620361328125
patch: else { break ; } return ;
rank: 501
score: 98.39647081163194
patch: return ; return ; if return ; =
rank: 501
score: 98.3004150390625
patch: return ; } for ; ; )
rank: 501
score: 97.94597516741071
patch: else { new ; ; }
rank: 502
score: 98.92130533854167
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) simplex ; }
rank: 502
score: 98.8908182779948
patch: Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 502
score: 98.88717447916666
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; }
rank: 502
score: 98.87478515625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( simplex , best ) ;
rank: 502
score: 98.70487467447917
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 502
score: 98.52191162109375
patch: * * * * * ;
rank: 502
score: 98.46166229248047
patch: else { return ; } ; {
rank: 502
score: 98.39618474786931
patch: return ; if ; return ; if ; / /
rank: 502
score: 98.29981994628906
patch: * / return ; } * /
rank: 502
score: 97.94549560546875
patch: else { throw new ;
rank: 503
score: 98.9207073709239
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair
rank: 503
score: 98.89081217447917
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ++ ;
rank: 503
score: 98.88671875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( ) ) ; }
rank: 503
score: 98.87391728940217
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . true , best ) ;
rank: 503
score: 98.704345703125
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( System . out ) ;
rank: 503
score: 98.5218505859375
patch: return * * * * return /
rank: 503
score: 98.39600626627605
patch: if ; = return ;
rank: 503
score: 97.94443184988839
patch: } else if ( return )
rank: 504
score: 98.9206012228261
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ 0 ] ; }
rank: 504
score: 98.890380859375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair contracted ; }
rank: 504
score: 98.88663736979167
patch: for ( final Real CaMeL Point CaMeL Value CaMeL Pair contracted
rank: 504
score: 98.87330163043478
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . value CaMeL Of ( contracted ) ) ;
rank: 504
score: 98.70392922794117
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ +
rank: 504
score: 98.52120535714286
patch: } return [ 1 ] ;
rank: 504
score: 98.46095581054688
patch: return { return ; System . out ; }
rank: 504
score: 98.39591761997768
patch: break ; if ; return ;
rank: 504
score: 98.29849243164062
patch: else if ( comparator . equals ;
rank: 505
score: 98.89028930664062
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) reflected , best ) ;
rank: 505
score: 98.88634314903847
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 505
score: 98.87218017578125
patch: return original . iterate CaMeL Simplex ( ) ;
rank: 505
score: 98.70338134765625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 505
score: 98.5206069946289
patch: return ; } return return false ;
rank: 505
score: 98.46060616629464
patch: else { new return ; ;
rank: 505
score: 98.39533025568181
patch: return ; return ; throw return ; } return ;
rank: 505
score: 98.29756927490234
patch: for ( ; ; ; ) {
rank: 505
score: 97.94294084821429
patch: super . ; if ( ;
rank: 506
score: 98.9201327237216
patch: throw new Function CaMeL Evaluation CaMeL Exception ( } }
rank: 506
score: 98.88975306919643
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / *
rank: 506
score: 98.88557235054348
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { simplex } ) ;
rank: 506
score: 98.70326143152573
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , $STRING$ , comparator ) ;
rank: 506
score: 98.52043321397569
patch: else { return ; } } else }
rank: 506
score: 98.46053641183036
patch: return return ; return ; /
rank: 506
score: 98.39498901367188
patch: if ; return ; if ; return
rank: 506
score: 98.29720052083333
patch: return false ; ; }
rank: 506
score: 97.94151960100446
patch: return super . evaluate ( ;
rank: 507
score: 98.91980511209239
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value
rank: 507
score: 98.88532624421296
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > contracted
rank: 507
score: 98.87084056712963
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Class CaMeL Name ( ) ) ;
rank: 507
score: 98.70321890024039
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected ; }
rank: 507
score: 98.52028401692708
patch: else { return ; } else { }
rank: 507
score: 98.46045532226563
patch: else { return ; System . out ; ;
rank: 507
score: 98.39486355251736
patch: return ; else if ; ; return ;
rank: 507
score: 98.29655238560268
patch: return true ; } } ;
rank: 507
score: 97.94090924944196
patch: final int start = 0 ;
rank: 508
score: 98.88934916834677
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] { simplex ;
rank: 508
score: 98.8707421875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator , best ) ;
rank: 508
score: 98.70297037760416
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted ; }
rank: 508
score: 98.51969909667969
patch: else { break ; return ; }
rank: 508
score: 98.45973423549107
patch: return { if return return ;
rank: 508
score: 98.39474051339286
patch: return ; } return ; /
rank: 508
score: 98.29593912760417
patch: return ; / ; }
rank: 508
score: 97.93865966796875
patch: if ( false ) {
rank: 509
score: 98.91892408288044
patch: Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 509
score: 98.88792928059895
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ - 0 ] ;
rank: 509
score: 98.88494403545673
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair ]
rank: 509
score: 98.51956939697266
patch: } else { } else if ;
rank: 509
score: 98.45956420898438
patch: else { return ; if ; break ; }
rank: 509
score: 98.3941650390625
patch: return ; if ; return ; if ; break ;
rank: 509
score: 98.29592459542411
patch: return ; } super . ;
rank: 510
score: 98.91872240149456
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , comparator ) ; }
rank: 510
score: 98.88772583007812
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] [ ] ;
rank: 510
score: 98.88478190104166
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ;
rank: 510
score: 98.70275268554687
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( ;
rank: 510
score: 98.51956939697266
patch: return * * return * * /
rank: 510
score: 98.45934295654297
patch: else { return ; } ; /
rank: 510
score: 98.39405653211806
patch: return ; if ; return ; else ;
rank: 510
score: 98.29470825195312
patch: return ; } ; ; * /
rank: 511
score: 98.88694196428571
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / /
rank: 511
score: 98.8844881924716
patch: throw new Function CaMeL Evaluation CaMeL Exception ( 0 ,
rank: 511
score: 98.70269775390625
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 511
score: 98.51924351283482
patch: } else { } else {
rank: 511
score: 98.45923614501953
patch: return { return ; ; return ;
rank: 511
score: 98.39386749267578
patch: return ; return ; if ; System
rank: 511
score: 98.29449462890625
patch: return ; throw new ; }
rank: 511
score: 97.93783133370536
patch: return super . ; } }
rank: 512
score: 98.8861572265625
patch: iterate CaMeL Simplex ( reflected , comparator ) ;
rank: 512
score: 98.8838641826923
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair 0
rank: 512
score: 98.86985426682692
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 512
score: 98.70264389935662
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 ) ;
rank: 512
score: 98.51922607421875
patch: } else { return * * ;
rank: 512
score: 98.45909118652344
patch: return return ; return ; ; ;
rank: 512
score: 98.39328002929688
patch: return ; ; ; if return ;
rank: 512
score: 98.294482421875
patch: } * / /
rank: 512
score: 97.93720703125
patch: added = true ;
rank: 513
score: 98.9166259765625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , reflected , comparator ) ;
rank: 513
score: 98.88608127170139
patch: return comparator . contains ( contracted ) ;
rank: 513
score: 98.883056640625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Class ( ) ) ;
rank: 513
score: 98.86984375
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . evaluate CaMeL New CaMeL Simplex ) ;
rank: 513
score: 98.51866997612848
patch: else { } return ; } return ;
rank: 513
score: 98.458935546875
patch: i { return ; if return ; return ;
rank: 513
score: 98.39283336292614
patch: return ; return ; if ; ; } return ;
rank: 513
score: 97.93684895833333
patch: else if ( ; )
rank: 514
score: 98.91652425130208
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator ) ; }
rank: 514
score: 98.88596413352273
patch: return comparator . reflected ( reflected , best ) ;
rank: 514
score: 98.88287353515625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . is CaMeL Empty ( ) ) ;
rank: 514
score: 98.86978515625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ) original [ 0 ] ;
rank: 514
score: 98.70211029052734
patch: return best . get CaMeL Point ( ) . get CaMeL Value ( ) ;
rank: 514
score: 98.51865931919643
patch: / * * / return ;
rank: 514
score: 98.4588623046875
patch: else { return ; } try ;
rank: 514
score: 98.39272732204861
patch: return ; if ; return ; continue ;
rank: 514
score: 98.29428100585938
patch: return ; * return ; * /
rank: 514
score: 97.93562622070313
patch: result = return ;
rank: 515
score: 98.91651452105978
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ simplex . length
rank: 515
score: 98.88579767400569
patch: return comparator . compare ( best , best ) ;
rank: 515
score: 98.88265991210938
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted , comparator ) ;
rank: 515
score: 98.70189208984375
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 515
score: 98.5183334350586
patch: else if ; } else return ;
rank: 515
score: 98.45864432198661
patch: else { value = return ;
rank: 515
score: 98.39220081676136
patch: return ; if ; ; if return ; return ;
rank: 515
score: 98.29418182373047
patch: return ; } ; return false ;
rank: 515
score: 97.93458775111607
patch: } else if ( ! ;
rank: 516
score: 98.91603685461956
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair ( original ) ;
rank: 516
score: 98.88566300675676
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * * /
rank: 516
score: 98.88194056919643
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ,
rank: 516
score: 98.86928923233695
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 516
score: 98.70181710379464
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ ) ; return ;
rank: 516
score: 98.51798502604167
patch: else { break ; } } return ;
rank: 516
score: 98.45821126302083
patch: else { return ; *
rank: 516
score: 98.39166259765625
patch: return ; if ; try
rank: 516
score: 97.93393380301339
patch: else { / * return ;
rank: 517
score: 98.88552517361111
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > comparator ;
rank: 517
score: 98.8817578125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( reflected ) ) ;
rank: 517
score: 98.86886831430289
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair > = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 517
score: 98.70164271763393
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ + contracted ) ;
rank: 517
score: 98.51772054036458
patch: return return ; } } return false ;
rank: 517
score: 98.45820448133681
patch: return return return ; return ; return ;
rank: 517
score: 98.39166259765625
patch: return ; else ; return ;
rank: 517
score: 98.29356166294643
patch: return ; } final ; ;
rank: 517
score: 97.93329467773438
patch: final return null ;
rank: 518
score: 98.88551199776786
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ) {
rank: 518
score: 98.88106282552083
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( , $STRING$ ) ) ;
rank: 518
score: 98.86867112379808
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( best ) ) ;
rank: 518
score: 98.70139447380515
patch: return evaluate CaMeL New CaMeL Simplex ( original . 0 . 0 , comparator ) ;
rank: 518
score: 98.51741245814732
patch: if ; } else return ;
rank: 518
score: 98.4581298828125
patch: else { ; if return ;
rank: 518
score: 98.3916259765625
patch: return ; return ; if ; if ; {
rank: 518
score: 98.29312569754464
patch: return ; / * * /
rank: 518
score: 97.93223353794643
patch: if ( min == 0 )
rank: 519
score: 98.91396696671195
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 519
score: 98.8847147623698
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ - 1 ] ;
rank: 519
score: 98.88041355298913
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL State ( ) ) ;
rank: 519
score: 98.86860988451087
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . iterator ( ) ) ;
rank: 519
score: 98.70128676470588
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ reflected . length ] ;
rank: 519
score: 98.51575385199652
patch: } else = false ; else return ;
rank: 519
score: 98.45682198660714
patch: return return ; return = ;
rank: 519
score: 98.39088270399306
patch: return ; if ; return ; } ;
rank: 519
score: 98.29302215576172
patch: return true ; } else { ;
rank: 519
score: 97.93173217773438
patch: return compare CaMeL To ;
rank: 520
score: 98.91392450747283
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair [ ) ] ;
rank: 520
score: 98.8680419921875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . true . get CaMeL Runtime ( ) ) ;
rank: 520
score: 98.51553780691964
patch: } } return return false ;
rank: 520
score: 98.45615059988839
patch: if return ; return ; }
rank: 520
score: 98.39075816761364
patch: return ; return ; } return ; throw return ;
rank: 520
score: 98.29289899553571
patch: / * return false * /
rank: 520
score: 97.93084716796875
patch: Assert . log ( $STRING$ ;
rank: 521
score: 98.9136250813802
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , contracted , comparator ) ;
rank: 521
score: 98.88382975260417
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator )
rank: 521
score: 98.88005859375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Error CaMeL Stream ( ) ) ;
rank: 521
score: 98.867900390625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( best ) ) ;
rank: 521
score: 98.69992244944854
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception = null ;
rank: 521
score: 98.51511056082589
patch: } return return return ; }
rank: 521
score: 98.45511474609376
patch: else { return ; if ; { return ;
rank: 521
score: 98.390673828125
patch: return ; if ; { if ; return ;
rank: 521
score: 98.29192243303571
patch: return - 1 ; } ;
rank: 521
score: 97.930615234375
patch: super . return ;
rank: 522
score: 98.91293334960938
patch: Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original . khi , comparator ) ;
rank: 522
score: 98.88365071614584
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] [ ]
rank: 522
score: 98.8800560735887
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( ,
rank: 522
score: 98.86745876736111
patch: return evaluate CaMeL Simplex ( best ) ;
rank: 522
score: 98.69985064338235
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , simplex , comparator ) ;
rank: 522
score: 98.45439453125
patch: else { return return ; System . ; }
rank: 522
score: 98.390185546875
patch: return ; return ; if ; if ; else
rank: 522
score: 98.2908935546875
patch: return false ? false : true ;
rank: 522
score: 97.929736328125
patch: assert ; return ;
rank: 523
score: 98.9126485188802
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( comparator , gamma , comparator ) ;
rank: 523
score: 98.8800390625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( contracted ) ) ;
rank: 523
score: 98.867275390625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( original , comparator ) ;
rank: 523
score: 98.69974557976974
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 523
score: 98.51483832465277
patch: } else if return ; } return ;
rank: 523
score: 98.45437622070312
patch: return return return return { return ;
rank: 523
score: 98.38911655970982
patch: return ; return ; try /
rank: 523
score: 97.92946370442708
patch: return ; } catch ;
rank: 524
score: 98.91226196289062
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 524
score: 98.88246663411458
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] Real CaMeL Point CaMeL Value CaMeL Pair contracted , simplex ) ;
rank: 524
score: 98.86669921875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted , comparator ) ;
rank: 524
score: 98.69967990451389
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ * }
rank: 524
score: 98.51441955566406
patch: } } return return return return ;
rank: 524
score: 98.45414225260417
patch: return return ; else { if return ;
rank: 524
score: 98.38857421875
patch: return ; return ; if ; return / }
rank: 524
score: 98.28940836588542
patch: return ; break ; }
rank: 524
score: 97.92640904017857
patch: if ( abs == null )
rank: 525
score: 98.88230387369792
patch: return evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex , comparator ) ) ;
rank: 525
score: 98.87972005208333
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ) ; }
rank: 525
score: 98.86649576822917
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ) ; ;
rank: 525
score: 98.69966125488281
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , null ) ;
rank: 525
score: 98.51418631417411
patch: else { return * return ;
rank: 525
score: 98.45333862304688
patch: return return ; return = return ;
rank: 525
score: 98.38850541548295
patch: return ; if ; return ; break ; return ;
rank: 525
score: 98.28892517089844
patch: } else { return false ; ;
rank: 525
score: 97.92568359375
patch: return true ; ;
rank: 526
score: 98.88080240885417
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > contracted = reflected ;
rank: 526
score: 98.87941576086956
patch: } throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . get CaMeL Runtime ( ) ) ;
rank: 526
score: 98.86619059244792
patch: return comparator . compare ( contracted ) ;
rank: 526
score: 98.69953356291118
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original [ 0 ] } ;
rank: 526
score: 98.51416015625
patch: return * * return return /
rank: 526
score: 98.45326450892857
patch: else { return - return ;
rank: 526
score: 98.38841552734375
patch: return ; if ; return ; return ; throw
rank: 526
score: 98.28860473632812
patch: if ( ; } if ( ;
rank: 527
score: 98.91046142578125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair contracted . length ] ; }
rank: 527
score: 98.88055826822917
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] -- ;
rank: 527
score: 98.87894984654018
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception {
rank: 527
score: 98.51397705078125
patch: else { if return ; } else {
rank: 527
score: 98.38836669921875
patch: if ; return ; while ; return ;
rank: 527
score: 98.28855387369792
patch: return true ; ; }
rank: 527
score: 97.92319742838542
patch: } } if ( ;
rank: 528
score: 98.9101031759511
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) new Real CaMeL Point CaMeL Value CaMeL Pair ( simplex ) ;
rank: 528
score: 98.8804931640625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > best = simplex ;
rank: 528
score: 98.8649371603261
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 528
score: 98.69940185546875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) contracted [ 0 ] ;
rank: 528
score: 98.51361846923828
patch: else { if return return ; }
rank: 528
score: 98.45236206054688
patch: else { return return ; } }
rank: 528
score: 98.38829456676136
patch: return ; return ; } if ; ; return ;
rank: 528
score: 98.28826904296875
patch: } else if ( ; * /
rank: 528
score: 97.923046875
patch: if ( ; else
rank: 529
score: 98.91006071671195
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . Optimization CaMeL Exception , Optimization CaMeL Exception ;
rank: 529
score: 98.88022682883523
patch: return comparator . compare ( comparator , best ) ;
rank: 529
score: 98.87861965013587
patch: return evaluate CaMeL New CaMeL Simplex ( new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { best } ) ;
rank: 529
score: 98.86405613111413
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > . false , best ) ;
rank: 529
score: 98.51354108537946
patch: } * * * return ;
rank: 529
score: 98.4522705078125
patch: return return return - ;
rank: 529
score: 98.38829210069444
patch: return ; return ; if ; / }
rank: 529
score: 98.2877197265625
patch: return ; } finally {
rank: 529
score: 97.92260131835937
patch: if ( ! ;
rank: 530
score: 98.90946451822917
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma , best ) ;
rank: 530
score: 98.879541015625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] } }
rank: 530
score: 98.87851388113839
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception ) ; }
rank: 530
score: 98.86384383491848
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> ( contracted ) ;
rank: 530
score: 98.69901315789474
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair . evaluate CaMeL New CaMeL Simplex ( original ,
rank: 530
score: 98.51350911458333
patch: } else { return false ; } }
rank: 530
score: 98.4520034790039
patch: else { return ; / / /
rank: 530
score: 98.38786177201705
patch: return ; if return ; if return ; return ;
rank: 530
score: 98.2874043782552
patch: / * return true ;
rank: 530
score: 97.92205200195312
patch: fail ( ) ;
rank: 531
score: 98.90924072265625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) original . evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 531
score: 98.87917073567708
patch: return ! comparator . compare ( reflected , best ) ;
rank: 531
score: 98.8780517578125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair [ ] +
rank: 531
score: 98.863525390625
patch: throw new Optimization CaMeL Exception ( $STRING$ ;
rank: 531
score: 98.69875863882211
patch: List < Real CaMeL Point CaMeL Value CaMeL Pair > reflected ;
rank: 531
score: 98.51258850097656
patch: if ( < 0 ; return ;
rank: 531
score: 98.45189751519098
patch: } return { return ; if return ;
rank: 531
score: 98.3875732421875
patch: return ; if ; if ; / / /
rank: 531
score: 97.91989135742188
patch: changed = true ; }
rank: 532
score: 98.87854333826013
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] ] ;
rank: 532
score: 98.87804361979167
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL
rank: 532
score: 98.69823540581598
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Function CaMeL Evaluation CaMeL Exception
rank: 532
score: 98.45170593261719
patch: catch return ; return ; return ;
rank: 532
score: 98.38740844726563
patch: return ; return ; while ; ; return ;
rank: 532
score: 98.2865219116211
patch: return ; default : break ; }
rank: 532
score: 97.91900634765625
patch: if ( ; return null )
rank: 533
score: 98.87808227539062
patch: return instanceof Real CaMeL Point CaMeL Value CaMeL Pair ; }
rank: 533
score: 98.87740773168103
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception
rank: 533
score: 98.8622265625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . is CaMeL Empty ( ) ) ;
rank: 533
score: 98.69782172309027
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair comparator . evaluate CaMeL New CaMeL Simplex (
rank: 533
score: 98.5124740600586
patch: else { if ( ! return ;
rank: 533
score: 98.38695068359375
patch: return ; return ; if / = / /
rank: 533
score: 97.918701171875
patch: final int start = return ;
rank: 534
score: 98.87725830078125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception {
rank: 534
score: 98.87706841362848
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair -- ] ;
rank: 534
score: 98.6977180032169
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) reflected , best ) ;
rank: 534
score: 98.51240539550781
patch: } return * * return return /
rank: 534
score: 98.4508544921875
patch: else { return ; } if System . ;
rank: 534
score: 98.38604736328125
patch: return ; } return ; if return ;
rank: 534
score: 97.91861397879464
patch: Set < String > return ;
rank: 535
score: 98.9075215657552
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma . comparator ) ;
rank: 535
score: 98.87716238839286
patch: return best . final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 535
score: 98.87691243489583
patch: return evaluate CaMeL New CaMeL Simplex ( original , ) ;
rank: 535
score: 98.86134935461956
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair > ) evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 535
score: 98.51222229003906
patch: return return return ; } return ;
rank: 535
score: 98.45081922743056
patch: / else { return ; for return ;
rank: 535
score: 98.38535766601562
patch: return ; return ; while ; return ; }
rank: 535
score: 98.28376007080078
patch: * return false ; } * /
rank: 535
score: 97.91847737630208
patch: System . arraycopy ( ;
rank: 536
score: 98.90736455502717
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ ] ; return ;
rank: 536
score: 98.87655978732639
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair : reflected ;
rank: 536
score: 98.87630521334134
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( contracted ) ) ;
rank: 536
score: 98.85986328125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 536
score: 98.6972297219669
patch: throw new Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 536
score: 98.51204136439732
patch: } return ; } else {
rank: 536
score: 98.44990539550781
patch: / else { return ; } ;
rank: 536
score: 98.38469102647569
patch: return ; if ; ; if ; return
rank: 536
score: 98.28302873883929
patch: } * / ; ; ;
rank: 537
score: 98.9065578294837
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair [ ] = simplex ;
rank: 537
score: 98.87623087565105
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception ;
rank: 537
score: 98.87566460503473
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * *
rank: 537
score: 98.51194932725694
patch: } else { if ; break ; }
rank: 537
score: 98.4498291015625
patch: return return return return ; }
rank: 537
score: 98.3843106356534
patch: return ; if return ; if ; ; return ;
rank: 537
score: 98.2821273803711
patch: return ; } else throw new ;
rank: 537
score: 97.91776529947917
patch: return original . length ;
rank: 538
score: 98.90554942255434
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( ) ; }
rank: 538
score: 98.87578755040323
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Access CaMeL Exception
rank: 538
score: 98.8753150201613
patch: return < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > . evaluate CaMeL New CaMeL Simplex ( original , comparator ) ;
rank: 538
score: 98.85888671875
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 538
score: 98.6959292763158
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , $NUMBER$ . 0 , comparator ) ;
rank: 538
score: 98.5113754272461
patch: else if ; * * * /
rank: 538
score: 98.44955105251736
patch: * else { return ; } return ;
rank: 538
score: 98.38413492838542
patch: return ; ; if ; return ; throw
rank: 538
score: 98.28158569335938
patch: } ; this . ;
rank: 538
score: 97.9169209798177
patch: for ; ; ) {
rank: 539
score: 98.90547511888587
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair . true : simplex ;
rank: 539
score: 98.87544102822581
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Access CaMeL Exception ) ;
rank: 539
score: 98.87468126085069
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair -- ; }
rank: 539
score: 98.85841966711956
patch: throw ( Function CaMeL Evaluation CaMeL Exception ) evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 539
score: 98.69581298828125
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair contracted , reflected ) ;
rank: 539
score: 98.51127115885417
patch: } else { } else { return ;
rank: 539
score: 98.4487533569336
patch: else { return ; break ; *
rank: 539
score: 98.38409423828125
patch: return ; return ; boolean
rank: 539
score: 98.28103637695312
patch: } ; else { return ; }
rank: 539
score: 97.91688842773438
patch: final return false ;
rank: 540
score: 98.90498683763587
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair = new Real CaMeL Point CaMeL Value CaMeL Pair ( original ) ;
rank: 540
score: 98.875341796875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Property ( $STRING$ ) ) ;
rank: 540
score: 98.87337764616936
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair : evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 540
score: 98.85725203804348
patch: result = evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) comparator ) ;
rank: 540
score: 98.69563123914931
patch: throw new Function CaMeL Evaluation CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;
rank: 540
score: 98.51082611083984
patch: return * * return ; return ;
rank: 540
score: 98.38389892578125
patch: return ; if ; else if ; return ;
rank: 540
score: 98.28038024902344
patch: return ; ; } if ( ;
rank: 540
score: 97.9134521484375
patch: Thread . current CaMeL Thread ;
rank: 541
score: 98.9048488451087
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ;
rank: 541
score: 98.874267578125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ;
rank: 541
score: 98.8730532997533
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > reflected = reflected ;
rank: 541
score: 98.85626953125
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 541
score: 98.51058523995536
patch: } } else return false ;
rank: 541
score: 98.44766998291016
patch: else { return ; } for ;
rank: 541
score: 98.38376686789773
patch: return ; return ; if / = ; return ;
rank: 541
score: 98.27971649169922
patch: this . return ; } else {
rank: 542
score: 98.90362548828125
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , gamma , this ) ;
rank: 542
score: 98.8727139559659
patch: return comparator . compare ( contracted , simplex ) ;
rank: 542
score: 98.85614013671875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( _
rank: 542
score: 98.69498291015626
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > , comparator ) ;
rank: 542
score: 98.51010131835938
patch: } else if return ; else {
rank: 542
score: 98.44747488839286
patch: else { return return ; *
rank: 542
score: 98.3837158203125
patch: return ; if ; return ; if ; try
rank: 542
score: 98.27967834472656
patch: } else { throw new ; ;
rank: 542
score: 97.91202218191964
patch: else if ( ; return )
rank: 543
score: 98.90330921519886
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 543
score: 98.87323588709677
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value
rank: 543
score: 98.85601806640625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair >
rank: 543
score: 98.6949821920956
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { original [ 0 ]
rank: 543
score: 98.44712829589844
patch: else { * ; if return ;
rank: 543
score: 98.38267933238636
patch: return ; return ; = ; if ; return ;
rank: 543
score: 97.91051228841145
patch: else if ( ! ;
rank: 544
score: 98.90289306640625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , simplex , comparator ) ;
rank: 544
score: 98.87262834821429
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > contracted =
rank: 544
score: 98.69491756663604
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original . gamma , comparator ) ;
rank: 544
score: 98.50927734375
patch: } else break ; return ;
rank: 544
score: 98.44646538628473
patch: return return ; ; if return return ;
rank: 544
score: 98.38232421875
patch: return ; } ; if ; return ;
rank: 544
score: 97.90903727213542
patch: final ; super . ;
rank: 545
score: 98.87256673177083
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL
rank: 545
score: 98.86664373224431
patch: return evaluate CaMeL New CaMeL Simplex ] ; } }
rank: 545
score: 98.69487561677632
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator , reflected ) ;
rank: 545
score: 98.50885687934027
patch: } else { return ; } catch ;
rank: 545
score: 98.44632975260417
patch: return return ; ; ;
rank: 545
score: 98.38221435546875
patch: return ; return ; return ; return ; ;
rank: 545
score: 98.27880096435547
patch: return true ; * return false ;
rank: 545
score: 97.90816243489583
patch: if ( ! ; }
rank: 546
score: 98.90260823567708
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( gamma , comparator ) ;
rank: 546
score: 98.87235966435185
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > contracted
rank: 546
score: 98.85426682692308
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > comparator ,
rank: 546
score: 98.69470932904412
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception { return ;
rank: 546
score: 98.44628295898437
patch: else { return ; } / * return /
rank: 546
score: 98.38144753196023
patch: return ; if ; return ; ; } return ;
rank: 546
score: 98.27876281738281
patch: return false ; * return false ;
rank: 546
score: 97.90803745814732
patch: else if ( ; if ;
rank: 547
score: 98.90224202473958
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 547
score: 98.86625671386719
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] reflected = simplex ;
rank: 547
score: 98.85373046875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Type ( ) ) ;
rank: 547
score: 98.69450109145221
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( this , gamma , comparator ) ;
rank: 547
score: 98.50872802734375
patch: else { if ; if return ; }
rank: 547
score: 98.44605712890625
patch: else { return ; * / return ; }
rank: 547
score: 98.37961647727273
patch: return ; ; if return ; return ; return ;
rank: 547
score: 98.27728271484375
patch: return ; } else return ; ;
rank: 547
score: 97.90660603841145
patch: } catch ( Exception ;
rank: 548
score: 98.9012451171875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , khi ,
rank: 548
score: 98.87111328125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( comparator ) ) ;
rank: 548
score: 98.86565607244319
patch: } catch ( Function CaMeL Evaluation CaMeL Exception { }
rank: 548
score: 98.69443359375
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ . length ) ;
rank: 548
score: 98.50786675347223
patch: } else if ; else { return ;
rank: 548
score: 98.4457275390625
patch: else { return ; } return ; break ;
rank: 548
score: 98.37872869318181
patch: return ; if ; return ; = ; return ;
rank: 548
score: 98.27702331542969
patch: return false ? true : false ;
rank: 548
score: 97.90653483072917
patch: else if ( return )
rank: 549
score: 98.90053304036458
patch: Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original . khi , comparator ) ;
rank: 549
score: 98.8709228515625
patch: throw new Optimization CaMeL Exception ( simplex ) ;
rank: 549
score: 98.86482484879032
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] { reflected ;
rank: 549
score: 98.851083984375
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 549
score: 98.69382611443015
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception true ) ;
rank: 549
score: 98.50737762451172
patch: } else { if ( false ;
rank: 549
score: 98.44507446289063
patch: return { return ; System . out ; ;
rank: 549
score: 98.37848455255681
patch: if ; return ; if ; return ; break ;
rank: 549
score: 98.2767333984375
patch: * / return false ; }
rank: 549
score: 97.90631103515625
patch: super . close ( ;
rank: 550
score: 98.89853922526042
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception . / }
rank: 550
score: 98.870693359375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair reflected = new Real CaMeL Point CaMeL Value CaMeL Pair [ original . length ] ;
rank: 550
score: 98.86480034722223
patch: return comparator . equals ( contracted ) ;
rank: 550
score: 98.85053846571181
patch: return comparator . compare ( comparator ) ;
rank: 550
score: 98.693603515625
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception , Optimization CaMeL Exception ;
rank: 550
score: 98.50722830636161
patch: else if ; } return ;
rank: 550
score: 98.44503784179688
patch: return = return ; if return ;
rank: 550
score: 98.3783846768466
patch: return ; return ; } if ; return ; }
rank: 550
score: 97.90625
patch: Set < ; return ;
rank: 551
score: 98.8964131673177
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , 1 , comparator ) ;
rank: 551
score: 98.86980794270833
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . get CaMeL
rank: 551
score: 98.86461221018145
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] = null ;
rank: 551
score: 98.84999593098958
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 551
score: 98.44487847222223
patch: return return ; return { return ; }
rank: 551
score: 98.37836303710938
patch: return ; if ; = start ; return ;
rank: 551
score: 97.90610961914062
patch: if ( ; ;
rank: 552
score: 98.86949462890625
patch: return best . get CaMeL Value ( ) ;
rank: 552
score: 98.86397705078124
patch: comparator . compare ( reflected , contracted ) ;
rank: 552
score: 98.84972613790761
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair >> ( comparator ) ;
rank: 552
score: 98.69305098684211
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , Optimization CaMeL Exception {
rank: 552
score: 98.5066146850586
patch: return return ; } } catch ;
rank: 552
score: 98.376953125
patch: if ; return ; int
rank: 552
score: 97.90582275390625
patch: } finally { ; }
rank: 553
score: 98.89479758522727
patch: else increment CaMeL Iterations CaMeL Counter ( reflected ) ;
rank: 553
score: 98.86920635516827
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair $NUMBER$
rank: 553
score: 98.86353824013158
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * * * /
rank: 553
score: 98.84944291548295
patch: result = increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 553
score: 98.69304741753473
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception ( $STRING$ + comparator ) ;
rank: 553
score: 98.50636800130208
patch: } } return return ;
rank: 553
score: 98.4447021484375
patch: return { return ; return ; } return ;
rank: 553
score: 98.3765869140625
patch: return ; return ; ; if ; return ; ;
rank: 553
score: 98.27470397949219
patch: return ; } } * / ;
rank: 553
score: 97.90469360351562
patch: } finally { ;
rank: 554
score: 98.86319547086148
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] ; }
rank: 554
score: 98.848388671875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 554
score: 98.69272189670139
patch: return ( final Real CaMeL Point CaMeL Value CaMeL Pair [ ] reflected , comparator ) ;
rank: 554
score: 98.50625271267361
patch: return * * * return * * /
rank: 554
score: 98.44457397460937
patch: else { return ; ; / * return ;
rank: 554
score: 98.375830078125
patch: return ; return ; return ; if ; }
rank: 554
score: 98.27424621582031
patch: return ; / * if ( ;
rank: 554
score: 97.90366617838542
patch: return >= 0 ? ;
rank: 555
score: 98.89284261067708
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception ; } }
rank: 555
score: 98.868818359375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair contracted = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . length ] ;
rank: 555
score: 98.86200116131756
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ; } }
rank: 555
score: 98.84713745117188
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ;
rank: 555
score: 98.69253540039062
patch: throw new Function CaMeL Evaluation CaMeL Exception ( reflected ) ;
rank: 555
score: 98.50623321533203
patch: } else * * * * /
rank: 555
score: 98.44451226128473
patch: else { return ; } / break ;
rank: 555
score: 98.37530517578125
patch: return ; ; -- return ;
rank: 555
score: 98.27410016741071
patch: / * return true * /
rank: 555
score: 97.90221557617187
patch: lock ( ) ;
rank: 556
score: 98.89224243164062
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , this , comparator ) ;
rank: 556
score: 98.86170543323864
patch: return comparator . compare ( comparator , reflected ) ;
rank: 556
score: 98.84681114783653
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( comparator ) ) ;
rank: 556
score: 98.6923828125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected } ; } }
rank: 556
score: 98.5062255859375
patch: } else return / * return ;
rank: 556
score: 98.44451226128473
patch: i if return ; return ; return ;
rank: 556
score: 98.37508544921874
patch: if ; return ; if ; return ; }
rank: 556
score: 98.27401297433036
patch: return ; if ( ; ;
rank: 556
score: 97.900146484375
patch: finally if ( ; }
rank: 557
score: 98.8905258178711
patch: return original ;
rank: 557
score: 98.8609718116554
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] [ ]
rank: 557
score: 98.846435546875
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 557
score: 98.69232536764706
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ contracted . 0 ] ;
rank: 557
score: 98.5052490234375
patch: } if ; return false ;
rank: 557
score: 98.3748291015625
patch: return ; if ; return ; ; break ;
rank: 557
score: 98.27317810058594
patch: return ; } * return * /
rank: 557
score: 97.89662679036458
patch: final ; ; return ;
rank: 558
score: 98.8892313639323
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) evaluate CaMeL New CaMeL Simplex ( original , original , comparator ) ;
rank: 558
score: 98.86822979266827
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ; }
rank: 558
score: 98.86069557883523
patch: return comparator . reflected ( contracted , best ) ;
rank: 558
score: 98.8463604266827
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > , }
rank: 558
score: 98.69228786892361
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > [ ]
rank: 558
score: 98.50486755371094
patch: / * * * * * /
rank: 558
score: 98.44423130580357
patch: else { return value ; }
rank: 558
score: 98.37257893880208
patch: return ; throw return ;
rank: 558
score: 98.27304077148438
patch: return ; . * /
rank: 558
score: 97.89597574869792
patch: else { return this ;
rank: 559
score: 98.86791053185097
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception {
rank: 559
score: 98.69173177083333
patch: return evaluate CaMeL New CaMeL Simplex ( original , khi , comparator , best ) ;
rank: 559
score: 98.50440131293402
patch: break ; } else { return ; }
rank: 559
score: 98.37227783203124
patch: return ; ; if return ; if ; return
rank: 560
score: 98.86787632533482
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL
rank: 560
score: 98.85934369991988
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( reflected , best ) ;
rank: 560
score: 98.8436328125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator , comparator ) ;
rank: 560
score: 98.69118245442708
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) contracted ; } else {
rank: 560
score: 98.50389946831598
patch: else { return ; return ; } else
rank: 560
score: 98.443115234375
patch: else return ; return { }
rank: 560
score: 98.37189275568181
patch: return ; if ; if ; return ; break ;
rank: 560
score: 98.27013397216797
patch: else { if ( ; } }
rank: 560
score: 97.88979085286458
patch: id = ; return ;
rank: 561
score: 98.8871561686198
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL Simplex ( original , gamma , comparator ) ;
rank: 561
score: 98.867724609375
patch: increment CaMeL Iterations CaMeL Counter ( false ) ;
rank: 561
score: 98.85842063210227
patch: return evaluate CaMeL New CaMeL Simplex ( original , ;
rank: 561
score: 98.69102647569444
patch: return comparator . evaluate ( reflected ) ;
rank: 561
score: 98.50371442522321
patch: } else return * * ;
rank: 561
score: 98.44305419921875
patch: return return return return { ;
rank: 561
score: 98.37181507457386
patch: return ; return ; if return ; if ; return
rank: 561
score: 98.27001953125
patch: return ; } new Thread ( ;
rank: 561
score: 97.88905029296875
patch: throw new ; }
rank: 562
score: 98.867314453125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception
rank: 562
score: 98.85719348538306
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] [ ] ;
rank: 562
score: 98.84255746694711
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 562
score: 98.69057210286458
patch: return evaluate CaMeL New CaMeL Simplex ( original , get CaMeL
rank: 562
score: 98.50357055664062
patch: else if return ; } else {
rank: 562
score: 98.44292340959821
patch: return return return { return ;
rank: 562
score: 98.37158203125
patch: return ; return ; } if ; return ; /
rank: 562
score: 98.2693379720052
patch: return ; ; * /
rank: 562
score: 97.88767700195312
patch: found = true ;
rank: 563
score: 98.88608805338542
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . * Function CaMeL Evaluation CaMeL Exception . * }
rank: 563
score: 98.86729213169643
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . get CaMeL
rank: 563
score: 98.85658929286859
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value
rank: 563
score: 98.84189453125
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator , contracted ) ;
rank: 563
score: 98.69037224264706
patch: result = new Real CaMeL Point CaMeL Value CaMeL Pair [ best . length ] ;
rank: 563
score: 98.5034688313802
patch: if ; return return ;
rank: 563
score: 98.44268798828125
patch: else { insert new return ;
rank: 563
score: 98.37149658203126
patch: return ; if ; return ; final return ;
rank: 563
score: 98.2690185546875
patch: return ; default :
rank: 563
score: 97.8873046875
patch: removed = true ;
rank: 564
score: 98.86708984375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ,
rank: 564
score: 98.85612199113176
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > [ ] ;
rank: 564
score: 98.8416796875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Class ( ) ) ;
rank: 564
score: 98.69029325597427
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , khi ) ) ;
rank: 564
score: 98.44244995117188
patch: return { return ; } if return return ;
rank: 564
score: 98.37135009765625
patch: if ; return ; if ; ; return ;
rank: 564
score: 98.268798828125
patch: this . ; this . ;
rank: 564
score: 97.88683064778645
patch: } else
rank: 565
score: 98.88411458333333
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted ) ; }
rank: 565
score: 98.86668043870192
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair (
rank: 565
score: 98.85481400923295
patch: return evaluate CaMeL Simplex ( contracted , best ) ;
rank: 565
score: 98.841611328125
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , khi ] ) ;
rank: 565
score: 98.68960910373264
patch: result = evaluate CaMeL New CaMeL Simplex ( original , 1 . 0 , comparator ) ;
rank: 565
score: 98.50199127197266
patch: } else = false ; if ;
rank: 565
score: 98.37098388671875
patch: return ; if ; if return ; break ;
rank: 565
score: 98.26824951171875
patch: return ; ; } else return ;
rank: 565
score: 97.88580322265625
patch: return false ; } else
rank: 566
score: 98.88345336914062
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ Real CaMeL Point CaMeL Value CaMeL Pair = original [ 0 ] ;
rank: 566
score: 98.866572265625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( , $STRING$ ) ) ;
rank: 566
score: 98.84134615384616
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( contracted ) ) ;
rank: 566
score: 98.50162760416667
patch: else { return ; return false ; }
rank: 566
score: 98.44202423095703
patch: else { / else { return ;
rank: 566
score: 98.37008056640624
patch: return ; if ;
rank: 566
score: 98.26783970424107
patch: } ; while ( ; )
rank: 566
score: 97.88448079427083
patch: else { super . ;
rank: 567
score: 98.883056640625
patch: throw evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 567
score: 98.86642795138889
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair 1 ;
rank: 567
score: 98.85454731602823
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] += reflected ;
rank: 567
score: 98.84103628305289
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . is CaMeL Empty ( best ) ) ;
rank: 567
score: 98.68843347886029
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( this . gamma , comparator ) ;
rank: 567
score: 98.50151715959821
patch: } else = return ; }
rank: 567
score: 98.44199829101562
patch: else { return ; } System . out ;
rank: 567
score: 98.36979536576705
patch: return ; if ; return ; } return ; }
rank: 567
score: 98.26746622721355
patch: * return false ; }
rank: 567
score: 97.883544921875
patch: } return 0 ;
rank: 568
score: 98.8826192220052
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted ) ;
rank: 568
score: 98.86620154747597
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL
rank: 568
score: 98.853515625
patch: return comparator . compare ( reflected , simplex ) ;
rank: 568
score: 98.68794519761029
patch: res = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 568
score: 98.50114610460069
patch: return * * * * * * /
rank: 568
score: 98.44199044363839
patch: else return ; ; return ;
rank: 568
score: 98.36954956054687
patch: return ; ; if ; = ; return ;
rank: 568
score: 97.8795674641927
patch: super . run ( ;
rank: 569
score: 98.8655078125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Properties ( ) ) ;
rank: 569
score: 98.85331107474663
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point
rank: 569
score: 98.68711344401042
patch: throw throws Function CaMeL Evaluation CaMeL Exception {
rank: 569
score: 98.50093841552734
patch: } else { } catch return ;
rank: 569
score: 98.44190325055804
patch: else { for return [ ;
rank: 569
score: 98.36818237304688
patch: return ; return ; if ; ++ return ;
rank: 569
score: 97.87913004557292
patch: return super . ; ;
rank: 570
score: 98.86494140625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ,
rank: 570
score: 98.85126410590277
patch: return comparator . contains ( reflected ) ;
rank: 570
score: 98.8406982421875
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , gamma ) ;
rank: 570
score: 98.68706198299633
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ *
rank: 570
score: 98.49990408761161
patch: return * return / return ;
rank: 570
score: 98.367138671875
patch: return ; if ; return ; / return ;
rank: 570
score: 97.87845611572266
patch: catch ( ;
rank: 571
score: 98.85106811523437
patch: comparator . compare ( reflected , reflected ) ;
rank: 571
score: 98.84001953125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . is CaMeL Empty ( best ) ) ;
rank: 571
score: 98.68645276521382
patch: return evaluate CaMeL New CaMeL Simplex ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) ;
rank: 571
score: 98.44103393554687
patch: else { return ; } System . ; /
rank: 571
score: 98.366650390625
patch: return ; if ; return ; if ; {
rank: 571
score: 98.26663208007812
patch: return false ; } } return ;
rank: 571
score: 97.87706502278645
patch: assert ; if ( ;
rank: 572
score: 98.8646240234375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , Optimization CaMeL Exception ;
rank: 572
score: 98.85101483319256
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( reflected ) ;
rank: 572
score: 98.83977801983173
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ) ;
rank: 572
score: 98.68610696231617
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( System . out , best ) ;
rank: 572
score: 98.49905395507812
patch: } return return ; } return ;
rank: 572
score: 98.44089762369792
patch: else return ; return ; System . ;
rank: 572
score: 98.36591796875
patch: return ; return ; return ; } if ;
rank: 572
score: 98.26656668526786
patch: } * / return null ;
rank: 572
score: 97.8759521484375
patch: false = true ;
rank: 573
score: 98.86376953125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair extends
rank: 573
score: 98.85989990234376
patch: throw new Optimization CaMeL Exception ( contracted ) ;
rank: 573
score: 98.85099653764205
patch: return evaluate CaMeL Simplex ( contracted , comparator ) ;
rank: 573
score: 98.6860710592831
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( original , original , comparator ) ;
rank: 573
score: 98.49905395507812
patch: if ; } else { return ;
rank: 573
score: 98.44068400065105
patch: if return ; return {
rank: 573
score: 98.36561168323864
patch: return ; return ; } ; if ; return ;
rank: 573
score: 97.8757080078125
patch: return - true ;
rank: 574
score: 98.86356295072116
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( reflected ) ) ;
rank: 574
score: 98.85073020241477
patch: return comparator . compare ( simplex , best ) ;
rank: 574
score: 98.68561754728618
patch: super . iterate CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > simplex ) ;
rank: 574
score: 98.49900987413194
patch: else { return ; return return ; }
rank: 574
score: 98.43995971679688
patch: else { return ; } while ; return ;
rank: 574
score: 98.36559448242187
patch: return ; return ; if ; if ; =
rank: 574
score: 98.26529947916667
patch: return ; * ; }
rank: 574
score: 97.87565104166667
patch: if ( matches ) {
rank: 575
score: 98.863525390625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > contracted =
rank: 575
score: 98.85046716638513
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( contracted ) ;
rank: 575
score: 98.837958984375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 575
score: 98.68402777777777
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair evaluate CaMeL New CaMeL Simplex ( original ,
rank: 575
score: 98.49837820870536
patch: return return ; } } }
rank: 575
score: 98.43993377685547
patch: try { return return return return {
rank: 575
score: 98.3655497233073
patch: return ; else if ;
rank: 575
score: 98.26524861653645
patch: } * return null ;
rank: 575
score: 97.87534586588542
patch: final return true ; }
rank: 576
score: 98.8632179542824
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair / }
rank: 576
score: 98.8503358422256
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair
rank: 576
score: 98.49784851074219
patch: } else return ; } return ;
rank: 576
score: 98.3650790127841
patch: return ; return ; } if ; throw return ;
rank: 576
score: 98.26493835449219
patch: else { return null ; } }
rank: 576
score: 97.8732198079427
patch: while ( ; ; )
rank: 577
score: 98.86317274305556
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair 1 )
rank: 577
score: 98.84942072088069
patch: return comparator . compare ( original , best ) ;
rank: 577
score: 98.8370361328125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Function CaMeL Evaluation CaMeL Exception . < Real CaMeL Point CaMeL Value CaMeL Pair > $STRING$ ,
rank: 577
score: 98.68367084703948
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( $STRING$ + reflected ;
rank: 577
score: 98.49751112196181
patch: * * * * * * * /
rank: 577
score: 98.43909912109375
patch: else { return ; out . out ; }
rank: 577
score: 98.36380615234376
patch: return ; return ; if * / return ;
rank: 577
score: 98.26479085286458
patch: throw new return ; }
rank: 577
score: 97.8729736328125
patch: final return ; }
rank: 578
score: 98.86255900065105
patch: return evaluate CaMeL New CaMeL Simplex ( ( Real CaMeL Point CaMeL Value CaMeL Pair [ ] ) original , comparator ) ;
rank: 578
score: 98.814453125
patch: throw ( Optimization CaMeL Exception ) simplex ;
rank: 578
score: 98.68366834852431
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { contracted , best } ;
rank: 578
score: 98.49729919433594
patch: } else { for ; return ;
rank: 578
score: 98.43763078962054
patch: return = new return ( ;
rank: 578
score: 98.3627596768466
patch: return ; if ; return ; ; return ; }
rank: 578
score: 98.26423863002232
patch: return ; } if ; ;
rank: 578
score: 97.86759033203126
patch: return = true ;
rank: 579
score: 98.86226399739583
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( ) ) ; }
rank: 579
score: 98.84920873397436
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( reflected , comparator ) ;
rank: 579
score: 98.83571370442708
patch: Iterator < Real CaMeL Point CaMeL Value CaMeL Pair > < Real CaMeL Point CaMeL Value CaMeL Pair > contracted = simplex ;
rank: 579
score: 98.49683973524306
patch: else { return ; } else break ;
rank: 579
score: 98.43758816189236
patch: else { return ; } * * /
rank: 579
score: 98.36160888671876
patch: return ; if ; if ; throw return ;
rank: 579
score: 98.26214599609375
patch: } / * * ; * /
rank: 579
score: 97.8672383626302
patch: if ( enable ) {
rank: 580
score: 98.86169885706019
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair == null
rank: 580
score: 98.8343505859375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Exception ( ) , $STRING$ ) ;
rank: 580
score: 98.7943603515625
patch: throw new Optimization CaMeL Exception ( 1 ) ;
rank: 580
score: 98.68299102783203
patch: return original [ 0 ] ; }
rank: 580
score: 98.43748643663194
patch: return return ; ; if ; return ;
rank: 580
score: 98.36152787642045
patch: return ; return ; if ; break ; return ;
rank: 580
score: 98.2607421875
patch: } ) ; if ( ;
rank: 580
score: 97.86642456054688
patch: n = ; return ;
rank: 581
score: 98.860546875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception .
rank: 581
score: 98.84755637428977
patch: return comparator . compare ( comparator , contracted ) ;
rank: 581
score: 98.832822265625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair ( evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ) ;
rank: 581
score: 98.68297054893092
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair evaluate CaMeL New CaMeL Simplex ( original ) ;
rank: 581
score: 98.49667697482639
patch: else { if ( is CaMeL Empty ;
rank: 581
score: 98.43672398158482
patch: else { return return return }
rank: 581
score: 98.36089477539062
patch: return ; return ; if ; break ; ;
rank: 581
score: 98.26060267857143
patch: if ( ; * / /
rank: 581
score: 97.86554565429688
patch: return / * ;
rank: 582
score: 98.8602734375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( original ) ) ;
rank: 582
score: 98.84745649857955
patch: return comparator . evaluate ( reflected , comparator ) ;
rank: 582
score: 98.83193359375
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , comparator , comparator ) ;
rank: 582
score: 98.7793701171875
patch: throw new Optimization CaMeL Exception ( $NUMBER$ ) ;
rank: 582
score: 98.68277138157895
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , Runtime CaMeL Exception ;
rank: 582
score: 98.49649483816964
patch: return * return ; } }
rank: 582
score: 98.43669128417969
patch: else { return return ; } *
rank: 582
score: 98.35967462713069
patch: return ; return ; return ; if ; return /
rank: 582
score: 98.2599868774414
patch: return ; * return ; } ;
rank: 583
score: 98.8590576171875
patch: increment CaMeL Iterations CaMeL Counter ( true ) ;
rank: 583
score: 98.8458740234375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL
rank: 583
score: 98.831884765625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted , contracted ) ;
rank: 583
score: 98.76976182725694
patch: else { return . ( ) ; }
rank: 583
score: 98.49606662326389
patch: } else { * * * * /
rank: 583
score: 98.43666076660156
patch: else { return ; int * /
rank: 583
score: 98.35964133522727
patch: return ; return ; } return ; return ; }
rank: 583
score: 98.2596435546875
patch: return super . ; } ;
rank: 583
score: 97.86268615722656
patch: final int ;
rank: 584
score: 98.84522094726563
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . int CaMeL Value ( ) ;
rank: 584
score: 98.76773681640626
patch: return evaluate CaMeL New CaMeL Simplex ( original .
rank: 584
score: 98.68226453993056
patch: result = evaluate CaMeL New CaMeL Simplex (
rank: 584
score: 98.43654959542411
patch: i = return ; return ;
rank: 584
score: 98.35858154296875
patch: return ; if ; if ; = return ;
rank: 584
score: 98.25959995814732
patch: } * return false ; ;
rank: 584
score: 97.86228434244792
patch: return new return new ;
rank: 585
score: 98.85798891129032
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , Optimization CaMeL Exception ) ;
rank: 585
score: 98.84471130371094
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] reflected = reflected ;
rank: 585
score: 98.68223063151042
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected , best ) ;
rank: 585
score: 98.49505615234375
patch: return * * * return return /
rank: 585
score: 98.43598937988281
patch: else { if return ; while ;
rank: 585
score: 98.35712280273438
patch: return ; return ; if ; return / ;
rank: 585
score: 98.259033203125
patch: * return ; * /
rank: 585
score: 97.8616455078125
patch: return * $NUMBER$ ;
rank: 586
score: 98.84194946289062
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > [ ] original = simplex ;
rank: 586
score: 98.49482727050781
patch: / * * * / return ;
rank: 586
score: 98.43563842773438
patch: if return { return ;
rank: 586
score: 98.35703125
patch: return ; ; if return ; if return ;
rank: 586
score: 98.2587381998698
patch: return this . ; }
rank: 586
score: 97.86046142578125
patch: while ( ; )
rank: 587
score: 98.85721261160714
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair > contracted ;
rank: 587
score: 98.84182739257812
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] original = simplex ;
rank: 587
score: 98.8313496907552
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Illegal CaMeL Argument CaMeL Exception . get CaMeL Class ( ) , $STRING$ ) ;
rank: 587
score: 98.68129475911458
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( evaluate CaMeL New CaMeL Simplex . get CaMeL
rank: 587
score: 98.49467468261719
patch: else { / * * * /
rank: 587
score: 98.35663396661931
patch: return ; return ; if return ; break ; }
rank: 587
score: 98.25853729248047
patch: else { return true ; ; }
rank: 587
score: 97.85730997721355
patch: else return super . ;
rank: 588
score: 98.85654994419643
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ,
rank: 588
score: 98.84152221679688
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > [ ] reflected = simplex ;
rank: 588
score: 98.83133638822116
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair [
rank: 588
score: 98.68126085069444
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( best , khi , comparator ) ;
rank: 588
score: 98.49461534288194
patch: } else { return false ; return ;
rank: 588
score: 98.43489837646484
patch: else { / ; if return ;
rank: 588
score: 98.35624389648437
patch: if ; return ; return ; if return ;
rank: 588
score: 98.2582778930664
patch: return ; * / / * /
rank: 588
score: 97.85723876953125
patch: return remove ( ; }
rank: 589
score: 98.85622151692708
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , ! comparator ) ;
rank: 589
score: 98.83984375
patch: return evaluate CaMeL New CaMeL Simplex ++ ;
rank: 589
score: 98.830927734375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( original , gamma ) ;
rank: 589
score: 98.68097534179688
patch: throw new Function CaMeL Evaluation CaMeL Exception ) ;
rank: 589
score: 98.49424235026042
patch: else { return false ; } catch ;
rank: 589
score: 98.43473597935268
patch: else { return return ; int
rank: 589
score: 98.3559903231534
patch: return ; return ; if ; return } return ;
rank: 589
score: 98.25814819335938
patch: return ; null ; } * /
rank: 589
score: 97.85701497395833
patch: added = true ; }
rank: 590
score: 98.85532563308189
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , comparator ) ;
rank: 590
score: 98.83903423108552
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > reflected = reflected ;
rank: 590
score: 98.82994140625
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( best , comparator ) ;
rank: 590
score: 98.72317843967014
patch: return comparator . reflected ( contracted ) ;
rank: 590
score: 98.6804443359375
patch: break increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 590
score: 98.49390326605902
patch: else { return ; } } finally ;
rank: 590
score: 98.43469916449652
patch: return { return ; } return false ;
rank: 590
score: 98.35504760742188
patch: return ; if ; = ; return ; }
rank: 590
score: 98.25802176339286
patch: } ; else { return ;
rank: 590
score: 97.85596923828125
patch: dirty = true ;
rank: 591
score: 98.854658203125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Value ( reflected ) ) ;
rank: 591
score: 98.83895713404605
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ; return reflected ;
rank: 591
score: 98.828681640625
patch: return protected Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 591
score: 98.68037923177083
patch: throw throws Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 591
score: 98.49317932128906
patch: } else if return * return ;
rank: 591
score: 98.4343490600586
patch: return ; / else { return ;
rank: 591
score: 98.35498046875
patch: return ; return ; if ; return ; *
rank: 591
score: 98.25737762451172
patch: return ; ; / * return ;
rank: 591
score: 97.85440673828126
patch: completed = true ;
rank: 592
score: 98.8546142578125
patch: } throw new Optimization CaMeL Exception ( ) ;
rank: 592
score: 98.83868729440789
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair >> reflected = reflected ;
rank: 592
score: 98.82863362630208
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair reflected = evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 592
score: 98.69688585069444
patch: return iterate CaMeL Simplex ( comparator ) ;
rank: 592
score: 98.67971462673611
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair [ ] { reflected , reflected } ;
rank: 592
score: 98.49288940429688
patch: } else { in ; return ;
rank: 592
score: 98.43410915798611
patch: return ; return ; } return false ;
rank: 592
score: 98.35422585227273
patch: if ; return ; break ; if ; return ;
rank: 593
score: 98.82735188802083
patch: return ( ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original ) ) ;
rank: 593
score: 98.69190979003906
patch: else { return . true ; }
rank: 593
score: 98.67805311414931
patch: return comparator . evaluate CaMeL New CaMeL Simplex ( reflected , khi , comparator ) ;
rank: 593
score: 98.49274359809027
patch: } else if ; } else return ;
rank: 593
score: 98.43394252232143
patch: return { if return ; }
rank: 593
score: 98.3542147549716
patch: return ; return ; return ; if ; break ;
rank: 593
score: 98.2568588256836
patch: * / if ( ; return ;
rank: 593
score: 97.85007731119792
patch: if ( ! return )
rank: 594
score: 98.85289713541667
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , ) ;
rank: 594
score: 98.83843672902961
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > ( comparator ) ;
rank: 594
score: 98.8267313639323
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > > ( comparator ) ;
rank: 594
score: 98.66984419389205
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 594
score: 98.49250139508929
patch: return ; } else break ;
rank: 594
score: 98.35359330610795
patch: return ; return ; } if ; return ; ;
rank: 594
score: 98.25679524739583
patch: return super . evaluate ;
rank: 594
score: 97.84945068359374
patch: filtered = true ;
rank: 595
score: 98.852783203125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception ;
rank: 595
score: 98.83800956530449
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( contracted , best ) ;
rank: 595
score: 98.82505859375
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted , original ) ;
rank: 595
score: 98.66365559895833
patch: throw throws Illegal CaMeL Argument CaMeL Exception {
rank: 595
score: 98.4924545288086
patch: } else { if ; * ;
rank: 595
score: 98.43292236328125
patch: return ; for return { return ;
rank: 595
score: 98.35348510742188
patch: return ; return ; } ; if ; return
rank: 595
score: 98.25663248697917
patch: / * return ; }
rank: 595
score: 97.8493423461914
patch: return new ;
rank: 596
score: 98.83659532335069
patch: return comparator . compare ( reflected ) ;
rank: 596
score: 98.8249609375
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , 1 , comparator ) ;
rank: 596
score: 98.67937469482422
patch: else { return . false ; }
rank: 596
score: 98.65761108398438
patch: return comparator . iterate CaMeL Simplex ( ) ;
rank: 596
score: 98.49224853515625
patch: } else if ; * * /
rank: 596
score: 98.43270534939236
patch: else { if return ; return ; ;
rank: 596
score: 98.3534823330966
patch: if ; return ; if ; return ; if ;
rank: 596
score: 97.84920654296874
patch: return this ; }
rank: 597
score: 98.82431030273438
patch: return evaluate CaMeL New CaMeL Simplex ( < Real CaMeL Point CaMeL Value CaMeL Pair > , khi , comparator ) ;
rank: 597
score: 98.65670776367188
patch: continue increment CaMeL Iterations CaMeL Counter ( ) ;
rank: 597
score: 98.49208068847656
patch: } return * * return false ;
rank: 597
score: 98.43214925130208
patch: return return return ; if return return ;
rank: 597
score: 98.3531494140625
patch: return ; if return ; return ; } return ;
rank: 597
score: 98.255859375
patch: return ; } return true ; }
rank: 597
score: 97.8472412109375
patch: complete = false ;
rank: 598
score: 98.84925579202586
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , contracted ) ;
rank: 598
score: 98.83524889823718
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * * * * /
rank: 598
score: 98.824248046875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( original , contracted ) ;
rank: 598
score: 98.67079162597656
patch: throw evaluate CaMeL New CaMeL Simplex ;
rank: 598
score: 98.65528700086806
patch: throw new Interrupted CaMeL Exception ( ) ;
rank: 598
score: 98.49168395996094
patch: return * return ; } return ;
rank: 598
score: 98.43205043247768
patch: return return ; int else ;
rank: 598
score: 98.25577218191964
patch: this . return ; } ;
rank: 598
score: 97.84642333984375
patch: success = true ;
rank: 599
score: 98.84830078125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Value ( original ) ) ;
rank: 599
score: 98.83367309570312
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 599
score: 98.82302856445312
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair best = evaluate CaMeL New CaMeL Simplex ( original , khi ) ;
rank: 599
score: 98.65308837890625
patch: return original . get CaMeL Point ( ) ;
rank: 599
score: 98.64991760253906
patch: System . else { return ; }
rank: 599
score: 98.49149867466518
patch: } return return * * ;
rank: 599
score: 98.35252685546875
patch: return ; if ; return ; / / /
rank: 599
score: 98.25462995256696
patch: return ; } new Thread ;
rank: 600
score: 98.83180236816406
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > throws Function CaMeL Evaluation CaMeL Exception
rank: 600
score: 98.49144744873047
patch: } return return return return return ;
rank: 600
score: 98.43122863769531
patch: else { for ; { return ;
rank: 600
score: 98.35252685546875
patch: return ; return ; if ; return ; Throwable
rank: 600
score: 98.25446319580078
patch: } finally { if ( ; ;
rank: 600
score: 97.84518432617188
patch: else { final Object ;
rank: 601
score: 98.84575363685344
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; } }
rank: 601
score: 98.8315179286859
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( reflected , reflected ) ;
rank: 601
score: 98.820302734375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Value ( ) ) ;
rank: 601
score: 98.63522338867188
patch: return evaluate CaMeL New CaMeL Simplex ;
rank: 601
score: 98.49098036024306
patch: } else { } finally { return ;
rank: 601
score: 98.43014090401786
patch: try { return return return return
rank: 601
score: 98.35214233398438
patch: return ; return ; final
rank: 601
score: 98.25328717912946
patch: } * ; ; * /
rank: 601
score: 97.84370930989583
patch: if ( this . ;
rank: 602
score: 98.82993035567434
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair [ ] / * /
rank: 602
score: 98.82022798978366
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( original ) ) ;
rank: 602
score: 98.65005832248264
patch: return evaluate CaMeL New CaMeL Simplex ( ;
rank: 602
score: 98.49093191964286
patch: } } else if return ;
rank: 602
score: 98.42976597377232
patch: i { return return ; }
rank: 602
score: 98.35193980823864
patch: return ; return ; } if ; return / /
rank: 602
score: 98.25282287597656
patch: return true ; } } return ;
rank: 602
score: 97.84356689453125
patch: / * do * /
rank: 603
score: 98.84547526041666
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL State CaMeL Exception ) ; }
rank: 603
score: 98.829345703125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair : evaluate CaMeL New CaMeL Simplex ( original , khi , comparator ) ;
rank: 603
score: 98.82013617621527
patch: return evaluate CaMeL Simplex ( original ) ;
rank: 603
score: 98.62123107910156
patch: catch ( Function CaMeL Evaluation CaMeL Exception
rank: 603
score: 98.49041748046875
patch: else { if ; return ; return ;
rank: 603
score: 98.42954799107143
patch: else { return ; for ;
rank: 603
score: 98.351416015625
patch: return ; if ; if ; return / /
rank: 603
score: 98.25215366908482
patch: return ; } new ; ;
rank: 603
score: 97.8427225748698
patch: final return super . ;
rank: 604
score: 98.84515787760417
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception {
rank: 604
score: 98.82897636217949
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( contracted , comparator ) ;
rank: 604
score: 98.818505859375
patch: result = ( Real CaMeL Point CaMeL Value CaMeL Pair ) comparator . evaluate CaMeL New CaMeL Simplex ( original , best ) ;
rank: 604
score: 98.64341227213542
patch: super . iterate CaMeL Simplex ( ) ;
rank: 604
score: 98.49022565569196
patch: else return false ; return ;
rank: 604
score: 98.42952183314732
patch: else { / ; return ;
rank: 604
score: 98.35132945667614
patch: return ; return ; ; return ; } return ;
rank: 604
score: 98.25159563337054
patch: return false ; * / ;
rank: 604
score: 97.84129028320312
patch: } } else {
rank: 605
score: 98.84484469506049
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception , $STRING$ ) ;
rank: 605
score: 98.82297770182292
patch: return comparator . reflected ( reflected ) ;
rank: 605
score: 98.81640625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( $STRING$ Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Id ( ) ) ;
rank: 605
score: 98.48961046006944
patch: else { return false ; } else {
rank: 605
score: 98.42912292480469
patch: else { return ; throw null ;
rank: 605
score: 98.3512295809659
patch: return ; return ; if return ; if return ;
rank: 605
score: 98.25105503627232
patch: return ; } ? * /
rank: 605
score: 97.8407470703125
patch: return - ; }
rank: 606
score: 98.843779296875
patch: return final Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( comparator , gamma , comparator ) ;
rank: 606
score: 98.82268504607372
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( simplex , best ) ;
rank: 606
score: 98.816162109375
patch: return original . equals ( comparator ) ;
rank: 606
score: 98.64208221435547
patch: return comparator . compare ( reflected ,
rank: 606
score: 98.48912048339844
patch: } * * * * return ;
rank: 606
score: 98.42835998535156
patch: return { int else ( return ;
rank: 606
score: 98.34970703125
patch: return ; if ; if ; return ; else
rank: 606
score: 97.83518473307292
patch: logger . log ( ;
rank: 607
score: 98.843544921875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . get CaMeL Value ( comparator ) ) ;
rank: 607
score: 98.82216186523438
patch: comparator . compare ( contracted , contracted ) ;
rank: 607
score: 98.81614379882812
patch: result = comparator . compare ( contracted ) ;
rank: 607
score: 98.4886474609375
patch: else { if ; } } if ;
rank: 607
score: 98.34962158203125
patch: return ; if ; if ; return ; int
rank: 607
score: 98.25057547433036
patch: return true ; * / ;
rank: 607
score: 97.835107421875
patch: else if ; ;
rank: 608
score: 98.84221780711206
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , null ) ;
rank: 608
score: 98.82105712890625
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > [ ] reflected = simplex ;
rank: 608
score: 98.81529296875
patch: return new Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair > ( simplex , comparator ) ;
rank: 608
score: 98.63526000976563
patch: return evaluate CaMeL New CaMeL Simplex ( reflected ,
rank: 608
score: 98.48829481336806
patch: } else return false ; return true ;
rank: 608
score: 98.34961547851563
patch: return ; ; if ; return ; if ;
rank: 608
score: 98.25053100585937
patch: return ; ; }
rank: 608
score: 97.8347412109375
patch: final int return ;
rank: 609
score: 98.819287109375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . long CaMeL Value ( ) ;
rank: 609
score: 98.6278305053711
patch: continue ; }
rank: 609
score: 98.57903442382812
patch: return original ; }
rank: 609
score: 98.48720974392361
patch: } else if ; if return return ;
rank: 609
score: 98.42795138888889
patch: return return ; return ; if return {
rank: 609
score: 98.34954223632812
patch: return ; if ; return ; throw if ;
rank: 609
score: 98.2503662109375
patch: } ; if ( return ;
rank: 609
score: 97.83418579101563
patch: } return value ;
rank: 610
score: 98.8413322202621
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , $STRING$ ) ;
rank: 610
score: 98.81918569711539
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( reflected , simplex ) ;
rank: 610
score: 98.61842041015625
patch: return ( Real CaMeL Point CaMeL Value CaMeL Pair
rank: 610
score: 98.57855224609375
patch: return comparator [ 0 ] ;
rank: 610
score: 98.48654513888889
patch: } return return ; } else return ;
rank: 610
score: 98.34940795898437
patch: return ; return ; if ; = break ;
rank: 610
score: 98.24886648995536
patch: return ; default : continue ;
rank: 610
score: 97.82965087890625
patch: else { this . ;
rank: 611
score: 98.83971774193549
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Exception ) ;
rank: 611
score: 98.81241183810764
patch: return comparator . reflected ( best ) ;
rank: 611
score: 98.808505859375
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . to CaMeL String ( simplex ) ) ;
rank: 611
score: 98.48619079589844
patch: else { return ; ; } else
rank: 611
score: 98.4271011352539
patch: else { return ; ; * /
rank: 611
score: 98.3489102450284
patch: return ; ; if ; return ; return ; }
rank: 611
score: 98.24825613839286
patch: } / * return ; ;
rank: 611
score: 97.8295654296875
patch: CLOSED = true ;
rank: 612
score: 98.83954067887932
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , simplex ) ;
rank: 612
score: 98.811767578125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( simplex , comparator ) ;
rank: 612
score: 98.80845703125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( Real CaMeL Point CaMeL Value CaMeL Pair . contains ( reflected , best ) ) ;
rank: 612
score: 98.57225036621094
patch: return ( 0 . 0 ) ;
rank: 612
score: 98.48617553710938
patch: } if ; } else return ;
rank: 612
score: 98.42684173583984
patch: return ; ; else { return ;
rank: 612
score: 98.34831099076705
patch: return ; return ; if ; while ; return ;
rank: 612
score: 98.24798583984375
patch: return ; } for ( ; )
rank: 612
score: 97.82356770833333
patch: final int ; return ;
rank: 613
score: 98.8389892578125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL State CaMeL Exception ,
rank: 613
score: 98.81023387419872
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * / return reflected ;
rank: 613
score: 98.80782470703124
patch: throw instanceof Function CaMeL Evaluation CaMeL Exception * /
rank: 613
score: 98.60903591579861
patch: return . get CaMeL Value ( ) ;
rank: 613
score: 98.48503282335069
patch: } else = false ; return return ;
rank: 613
score: 98.42664446149554
patch: int else { return - ;
rank: 613
score: 98.3482998934659
patch: return ; return ; if ; throw return ; }
rank: 613
score: 98.24789864676339
patch: while ( ; ) { ;
rank: 614
score: 98.81007737379808
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( contracted , reflected ) ;
rank: 614
score: 98.8071484375
patch: for ( Real CaMeL Point CaMeL Value CaMeL Pair contracted = evaluate CaMeL New CaMeL Simplex ( original , gamma , comparator ) ;
rank: 614
score: 98.56615339006696
patch: return ( int ) simplex ;
rank: 614
score: 98.48477172851562
patch: return * return * ;
rank: 614
score: 98.42664337158203
patch: return { return ; if null ;
rank: 614
score: 98.34721235795455
patch: return ; return ; else / if ; return ;
rank: 615
score: 98.83380533854167
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception , ) ;
rank: 615
score: 98.80997721354167
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair . int CaMeL Value ( )
rank: 615
score: 98.48472086588542
patch: return return ; } else
rank: 615
score: 98.42618815104167
patch: try { return return return return return ;
rank: 615
score: 98.34685724431819
patch: return ; return ; if ; return ; } return
rank: 615
score: 98.24710083007812
patch: return ; } } ; * /
rank: 616
score: 98.83267106681035
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; break ;
rank: 616
score: 98.8091571514423
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ++ ; reflected = reflected ;
rank: 616
score: 98.596484375
patch: return best . to CaMeL String ( ) ;
rank: 616
score: 98.56551361083984
patch: return gamma ;
rank: 616
score: 98.48434109157986
patch: return * * * * * return ;
rank: 616
score: 98.42618233816964
patch: else { new new return ;
rank: 616
score: 98.3466463955966
patch: return ; ; if ; return ; throw return ;
rank: 617
score: 98.83183436239919
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , }
rank: 617
score: 98.808056640625
patch: comparator . compare ( contracted , reflected ) ;
rank: 617
score: 98.79845581054687
patch: increment CaMeL Iterations CaMeL Counter ( best ) ;
rank: 617
score: 98.59053548177083
patch: throw throws Function CaMeL Evaluation CaMeL Exception ;
rank: 617
score: 98.56275285993304
patch: return return . ( ) ;
rank: 617
score: 98.48405456542969
patch: } else { if ; continue ;
rank: 617
score: 98.42594401041667
patch: return { return ; } return ; ;
rank: 617
score: 98.3454256924716
patch: return ; return ; if ; { return ; ;
rank: 617
score: 98.24659423828125
patch: * return ; }
rank: 617
score: 97.81602478027344
patch: return break ;
rank: 618
score: 98.83010962701613
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value
rank: 618
score: 98.80792392828526
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > [ ] = simplex ;
rank: 618
score: 98.78334350585938
patch: return Real CaMeL Point CaMeL Value CaMeL Pair ;
rank: 618
score: 98.58916625976562
patch: return ( increment CaMeL Iterations CaMeL Counter ) ;
rank: 618
score: 98.56188092912946
patch: return simplex [ 0 ] ;
rank: 618
score: 98.48404693603516
patch: return * return * * return ;
rank: 618
score: 98.42592366536458
patch: return { return ; return ; break ;
rank: 618
score: 98.34511496803977
patch: return ; ; if ; if return ; return ;
rank: 618
score: 98.24652099609375
patch: else if ( ; ; return ;
rank: 618
score: 97.81524658203125
patch: try { return ; }
rank: 619
score: 98.82993636592742
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , ;
rank: 619
score: 98.806982421875
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > [ ] reflected = reflected ;
rank: 619
score: 98.42486572265625
patch: return = return ; ;
rank: 619
score: 98.3445157137784
patch: return ; return ; if ; * / return ;
rank: 619
score: 98.24604034423828
patch: } * / ; if ( ;
rank: 619
score: 97.8150390625
patch: super . ; }
rank: 620
score: 98.829345703125
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Access CaMeL
rank: 620
score: 98.80662841796875
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > ( reflected , best ) ;
rank: 620
score: 98.57343139648438
patch: return evaluate CaMeL New CaMeL Simplex ( get CaMeL
rank: 620
score: 98.55003356933594
patch: throw null ;
rank: 620
score: 98.48255920410156
patch: else if ; if ; return ;
rank: 620
score: 98.4240951538086
patch: else { if ; { return ;
rank: 620
score: 98.34450461647727
patch: return ; if ; = ; if ; return ;
rank: 620
score: 98.24603271484375
patch: } finally { return true ; }
rank: 620
score: 97.8129170735677
patch: / * if ( ;
rank: 621
score: 98.80636596679688
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair / * * * * * /
rank: 621
score: 98.77278137207031
patch: throw final Function CaMeL Evaluation CaMeL Exception
rank: 621
score: 98.54965209960938
patch: return * /
rank: 621
score: 98.42397054036458
patch: * else { return ;
rank: 621
score: 98.34422718394886
patch: return ; ; if ; return ; ; return ;
rank: 621
score: 98.24501037597656
patch: return ; } else if ; ;
rank: 621
score: 97.8120849609375
patch: try { return ;
rank: 622
score: 98.82763671875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) ; return ;
rank: 622
score: 98.805908203125
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair ( original , comparator ) ;
rank: 622
score: 98.76016235351562
patch: return original . iterator ( ) ;
rank: 622
score: 98.56873914930556
patch: return . get CaMeL Point ( ) ;
rank: 622
score: 98.48196411132812
patch: } } else return ;
rank: 622
score: 98.34372780539773
patch: return ; return ; if ; ; if ; return
rank: 622
score: 98.24479675292969
patch: * return true ; } * /
rank: 622
score: 97.81093139648438
patch: done = true ;
rank: 623
score: 98.82703857421875
patch: throw new Optimization CaMeL Exception ( , ) ;
rank: 623
score: 98.75968627929687
patch: result = comparator . evaluate ( contracted ) ;
rank: 623
score: 98.48171997070312
patch: return return return ; return return ;
rank: 623
score: 98.42240142822266
patch: else { try { break ; }
rank: 623
score: 98.34318033854167
patch: return ; return ; {
rank: 623
score: 98.24475860595703
patch: else { throw new ; } }
rank: 623
score: 97.81050618489583
patch: Assert . log ( ;
rank: 624
score: 98.825390625
patch: throw new Function CaMeL Evaluation CaMeL Exception ( *
rank: 624
score: 98.80153198242188
patch: return evaluate CaMeL New CaMeL Simplex ( } }
rank: 624
score: 98.75545654296874
patch: throw new Optimization CaMeL Exception ( comparator ) ;
rank: 624
score: 98.56279161241319
patch: return comparator . evaluate ( original ) ;
rank: 624
score: 98.54684448242188
patch: return * / }
rank: 624
score: 98.48168182373047
patch: } else = null ; if ;
rank: 624
score: 98.41960906982422
patch: else { return ; return ; {
rank: 624
score: 98.3430508700284
patch: return ; if ; return ; / } return ;
rank: 624
score: 97.80899658203126
patch: result = null ;
rank: 625
score: 98.82435263356855
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Access CaMeL Error ) ;
rank: 625
score: 98.80112915039062
patch: iterate CaMeL Simplex ( contracted , best ) ;
rank: 625
score: 98.75429280598958
patch: return original . evaluate ( comparator ) ;
rank: 625
score: 98.48136901855469
patch: } else { * return ; }
rank: 625
score: 98.41944122314453
patch: else { for return return return ;
rank: 625
score: 98.34259588068181
patch: return ; return ; if ; return ; } ;
rank: 625
score: 98.2440185546875
patch: return ; } final ; return ;
rank: 625
score: 97.80572509765625
patch: return super . clone ;
rank: 626
score: 98.79993896484375
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > ( reflected , comparator ) ;
rank: 626
score: 98.55465262276786
patch: return original [ 1 ] ;
rank: 626
score: 98.54425048828125
patch: return * / return ;
rank: 626
score: 98.48128255208333
patch: } else = null ; return return ;
rank: 626
score: 98.3424405184659
patch: return ; return ; if ; ; throw return ;
rank: 626
score: 98.24388122558594
patch: do { return ; } * /
rank: 626
score: 97.8050537109375
patch: return ; break ;
rank: 627
score: 98.82007649739583
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception )
rank: 627
score: 98.79828491210938
patch: iterate CaMeL Simplex ( contracted , comparator ) ;
rank: 627
score: 98.74641927083333
patch: throw ( Optimization CaMeL Exception ) true ;
rank: 627
score: 98.55420793805804
patch: return best [ 0 ] ;
rank: 627
score: 98.48091634114583
patch: } else if ( false ; return ;
rank: 627
score: 98.41854858398438
patch: for return true ;
rank: 627
score: 98.3419522372159
patch: return ; return ; return ; if ; if ;
rank: 627
score: 98.24378967285156
patch: return true ; } * / /
rank: 627
score: 97.805029296875
patch: l = return ;
rank: 628
score: 98.7447021484375
patch: result = comparator . compare ( comparator ) ;
rank: 628
score: 98.55290391710069
patch: return comparator . reflected ; } else {
rank: 628
score: 98.54008265904018
patch: return gamma [ 0 ] ;
rank: 628
score: 98.48039245605469
patch: } if ; else { return ;
rank: 628
score: 98.41795349121094
patch: } if return ; return true ;
rank: 628
score: 98.34166370738636
patch: return ; return ; if ; if return / /
rank: 628
score: 98.24284362792969
patch: } else { return $STRING$ ; }
rank: 629
score: 98.8182373046875
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception }
rank: 629
score: 98.79382934570313
patch: final Real CaMeL Point CaMeL Value CaMeL Pair < Real CaMeL Point CaMeL Value CaMeL Pair extends Real CaMeL Point CaMeL Value CaMeL Pair . Real CaMeL Point CaMeL Value CaMeL Pair > ( contracted , best ) ;
rank: 629
score: 98.54419817243304
patch: return best ; } else {
rank: 629
score: 98.48015001085069
patch: } else { if ; } } }
rank: 629
score: 98.41786193847656
patch: return * return ; if return ;
rank: 629
score: 98.34060668945312
patch: if ; if return ;
rank: 629
score: 98.2418441772461
patch: } } else { return false ;
rank: 629
score: 97.8045145670573
patch: do { final return ;
rank: 630
score: 98.8181861139113
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Illegal CaMeL Argument CaMeL Exception , comparator ) ;
rank: 630
score: 98.78860134548611
patch: return evaluate CaMeL New CaMeL Simplex ( }
rank: 630
score: 98.74028862847223
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 630
score: 98.54250662667411
patch: return comparator ; } else {
rank: 630
score: 98.4801025390625
patch: return * * return ; } return ;
rank: 630
score: 98.41776529947917
patch: i { return ; if ; return ;
rank: 630
score: 98.33045196533203
patch: return ; int
rank: 630
score: 98.24053955078125
patch: } else { ;
rank: 630
score: 97.80448404947917
patch: final ; final int ;
rank: 631
score: 98.81698116179436
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . }
rank: 631
score: 98.73587646484376
patch: throw new Function CaMeL Evaluation CaMeL Exception ( )
rank: 631
score: 98.53456333705357
patch: else { return 1 ; }
rank: 631
score: 98.47935485839844
patch: return * return ; } else {
rank: 631
score: 98.41771697998047
patch: result { return ; break ; }
rank: 631
score: 98.3278096516927
patch: if ; return ; }
rank: 631
score: 98.24049682617188
patch: * return true ;
rank: 631
score: 97.80366516113281
patch: dim = ;
rank: 632
score: 98.81634324596774
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ; }
rank: 632
score: 98.52967180524554
patch: return list [ 0 ] ;
rank: 632
score: 98.47894287109375
patch: } return * * return * /
rank: 632
score: 98.41644287109375
patch: else { return ; * / /
rank: 632
score: 98.32259114583333
patch: return ; if ; /
rank: 632
score: 98.23997497558594
patch: return ; } / * ; ;
rank: 632
score: 97.80291748046875
patch: return / * return ;
rank: 633
score: 98.81474451864919
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception { }
rank: 633
score: 98.73347981770833
patch: return comparator . evaluate ( comparator ) ;
rank: 633
score: 98.52897426060268
patch: throw new Optimization CaMeL Exception (
rank: 633
score: 98.47872161865234
patch: if ; * * * * /
rank: 633
score: 98.41635470920139
patch: else { return ; } if ; ;
rank: 633
score: 98.3179219563802
patch: return ; return ; check
rank: 633
score: 98.23972574869792
patch: return ; } } ;
rank: 633
score: 97.80271402994792
patch: return value CaMeL Of ;
rank: 634
score: 98.81186995967742
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Throwable ) ;
rank: 634
score: 98.78294677734375
patch: comparator . compare ( reflected , comparator ) ;
rank: 634
score: 98.73085530598958
patch: return comparator . compare ( best ) ;
rank: 634
score: 98.47816975911458
patch: else if ( ! return ; return ;
rank: 634
score: 98.41604953342014
patch: / else { return ; while return ;
rank: 634
score: 98.30820719401042
patch: return ; if ; else
rank: 634
score: 98.23811848958333
patch: return ; super . ;
rank: 634
score: 97.80074055989583
patch: if ( super . ;
rank: 635
score: 98.81041802300348
patch: return best . evaluate ( comparator ) ;
rank: 635
score: 98.5333251953125
patch: throw new Illegal CaMeL Argument CaMeL Exception (
rank: 635
score: 98.52796282087054
patch: else { return * / }
rank: 635
score: 98.47777099609375
patch: } else { else
rank: 635
score: 98.41573333740234
patch: return { return ; for return ;
rank: 635
score: 98.30081176757812
patch: return ; return ; --
rank: 635
score: 97.79909261067708
patch: else if ( matches ;
rank: 636
score: 98.80913715977823
patch: throw new Function CaMeL Evaluation CaMeL Exception ( , Function CaMeL Evaluation CaMeL Exception . Runtime CaMeL Exception . Runtime CaMeL Exception . Illegal CaMeL Argument CaMeL Exception ) }
rank: 636
score: 98.76511056082589
patch: return reflected [ 0 ] ;
rank: 636
score: 98.52583530970982
patch: else { return simplex ; }
rank: 636
score: 98.52223714192708
patch: return original [ khi ] ; }
rank: 636
score: 98.47743225097656
patch: if ( return ; return return ;
rank: 636
score: 98.41554260253906
patch: return return ; value { return ;
rank: 636
score: 98.23623657226562
patch: * / return true ;
rank: 636
score: 97.79852294921875
patch: if ( ; } ;
rank: 637
score: 98.80594482421876
patch: throw new Optimization CaMeL Exception ( null ) ;
rank: 637
score: 98.76412963867188
patch: iterate CaMeL Simplex ( original , comparator ) ;
rank: 637
score: 98.52095794677734
patch: throw new Optimization CaMeL Exception ( }
rank: 637
score: 98.51315646701389
patch: return evaluate CaMeL New CaMeL Simplex ( [
rank: 637
score: 98.47728814019098
patch: } return return ; } return false ;
rank: 637
score: 98.41510009765625
patch: return return ; if return ; ;
rank: 637
score: 98.29196166992188
patch: return ; final return ;
rank: 638
score: 98.80291748046875
patch: return iterate CaMeL Simplex ;
rank: 638
score: 98.75880940755208
patch: return reflected ; } }
rank: 638
score: 98.51144409179688
patch: throw new Runtime CaMeL Exception ( $STRING$
rank: 638
score: 98.47694905598958
patch: } return ; } else = return ;
rank: 638
score: 98.41470336914062
patch: return { int return ( int ;
rank: 638
score: 97.7978759765625
patch: cached = return ;
rank: 639
score: 98.7569580078125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ?
rank: 639
score: 98.51788330078125
patch: else { return . ( ) ;
rank: 639
score: 98.50603485107422
patch: return increment CaMeL Iterations CaMeL Counter ;
rank: 639
score: 98.47650146484375
patch: } else { if ; } if ;
rank: 639
score: 98.41458129882812
patch: else { for return {
rank: 639
score: 98.28021240234375
patch: if ; = / /
rank: 639
score: 98.23037719726562
patch: * / return ; }
rank: 639
score: 97.79773559570313
patch: cached = true ;
rank: 640
score: 98.75308227539062
patch: throw new Function CaMeL Evaluation CaMeL Exception ( ?
rank: 640
score: 98.51681082589286
patch: else { return . true ;
rank: 640
score: 98.50064086914062
patch: return comparator . compare ( contracted ,
rank: 640
score: 98.41350555419922
patch: / else { return { return ;
rank: 640
score: 98.2781982421875
patch: return ; return ; ++
rank: 640
score: 97.79705810546875
patch: } if ( ! ;
rank: 641
score: 98.71198272705078
patch: return original . run ( ) ;
rank: 641
score: 98.49607340494792
patch: return ( evaluate CaMeL New CaMeL Simplex (
rank: 641
score: 98.47608778211806
patch: else { return * return ; } }
rank: 641
score: 98.4127909342448
patch: i return ; return ;
rank: 641
score: 98.26710001627605
patch: return ; ; / /
rank: 641
score: 98.22630818684895
patch: return ; : * /
rank: 641
score: 97.79584350585938
patch: revalidate ( ) ;
rank: 642
score: 98.744873046875
patch: return [ 0 ] ; }
rank: 642
score: 98.71144612630208
patch: throw ( Optimization CaMeL Exception ) null ;
rank: 642
score: 98.41153971354167
patch: / else if return ;
rank: 642
score: 98.2662862141927
patch: return ; return ; Throwable
rank: 642
score: 98.22536214192708
patch: if ; return false ;
rank: 642
score: 97.79566650390625
patch: changed = false ;
rank: 643
score: 98.70425075954861
patch: return evaluate CaMeL Simplex ( simplex ) ;
rank: 643
score: 98.51011657714844
patch: return Math . iterator ( ) ;
rank: 643
score: 98.47515869140625
patch: return ; } } else = return ;
rank: 643
score: 98.26578776041667
patch: return ; { return ;
rank: 643
score: 97.79386393229167
patch: return new Integer ( ;
rank: 644
score: 98.70305718315973
patch: throw new Function CaMeL Evaluation CaMeL Exception ;
rank: 644
score: 98.50853620256696
patch: return evaluate ( comparator ) ;
rank: 644
score: 98.48745388454861
patch: return original [ simplex . length ] ;
rank: 644
score: 98.4102783203125
patch: i { else { return ; }
rank: 644
score: 98.26487223307292
patch: return ; if ; throw
rank: 644
score: 98.2197265625
patch: return ; continue ; }
rank: 645
score: 98.70065646701389
patch: throw ( Optimization CaMeL Exception ) false ;
rank: 645
score: 98.48401896158855
patch: return best ; } }
rank: 645
score: 98.47486114501953
patch: else if ; return ; } else
rank: 645
score: 98.40977478027344
patch: else { return ; } if true
rank: 645
score: 98.25925699869792
patch: return ; return ; String
rank: 645
score: 98.21856689453125
patch: / * return ; ;
rank: 646
score: 98.69795057508681
patch: return original . equals ( best ) ;
rank: 646
score: 98.47463989257812
patch: } if ; return return false ;
rank: 646
score: 98.40956115722656
patch: finally { return ; return ; }
rank: 646
score: 98.2584737141927
patch: if ; return ; else
rank: 646
score: 97.78762817382812
patch: return equals ( ; }
rank: 647
score: 98.50284830729167
patch: return ( best ) ;
rank: 647
score: 98.47415924072266
patch: else { if return ; } else
rank: 647
score: 98.40941026475694
patch: else if return ; return ; break ;
rank: 647
score: 98.25685628255208
patch: return ; ; break ;
rank: 647
score: 98.21365356445312
patch: return ; - 1 ;
rank: 647
score: 97.78757731119792
patch: else { final ; }
rank: 648
score: 98.69343566894531
patch: return original . close ( ) ;
rank: 648
score: 98.50273786272321
patch: return ( int ) best ;
rank: 648
score: 98.47393035888672
patch: } if ; * * * /
rank: 648
score: 98.25180053710938
patch: return ; ; ; ;
rank: 648
score: 98.2128194173177
patch: return ; ; } ;
rank: 648
score: 97.78329467773438
patch: break ;
rank: 649
score: 98.69073486328125
patch: return original . equals ( contracted ) ;
rank: 649
score: 98.50169677734375
patch: return khi ;
rank: 649
score: 98.47797309027777
patch: return original [ best . length ] ;
rank: 649
score: 98.47364044189453
patch: return ; } else = false ;
rank: 649
score: 98.40874481201172
patch: else { * / if return ;
rank: 649
score: 98.2473856608073
patch: return ; return ; *
rank: 650
score: 98.47625732421875
patch: return comparator . reflected ; } }
rank: 650
score: 98.4736328125
patch: } else if ; final return ;
rank: 650
score: 98.408203125
patch: else { try { return return ;
rank: 650
score: 98.24642333984374
patch: return ; ; ;
rank: 650
score: 98.20571899414062
patch: return ; } this ;
rank: 650
score: 97.78171793619792
patch: else { / * ;
rank: 651
score: 98.49354771205357
patch: else { return . false ;
rank: 651
score: 98.47245788574219
patch: break ; }
rank: 651
score: 98.40782165527344
patch: else { return ; } return {
rank: 651
score: 98.23947143554688
patch: return ; if ; String
rank: 652
score: 98.69955105251736
patch: return evaluate CaMeL Simplex ( reflected ) ;
rank: 652
score: 98.68282318115234
patch: return original . trim ( ) ;
rank: 652
score: 98.4920654296875
patch: else { return . null ; }
rank: 652
score: 98.47292073567708
patch: / * * * /
rank: 652
score: 98.4718729654948
patch: return comparator ; } }
rank: 652
score: 98.4078140258789
patch: else { return ; } } return
rank: 652
score: 98.20384724934895
patch: return ; * / /
rank: 652
score: 97.7801513671875
patch: dim = return ;
rank: 653
score: 98.47158474392361
patch: return increment CaMeL Iterations CaMeL Counter ; }
rank: 653
score: 98.22871907552083
patch: throw return ; return ;
rank: 653
score: 98.20121256510417
patch: } / * * ;
rank: 653
score: 97.77864583333333
patch: } catch ( Throwable ;
rank: 654
score: 98.48701477050781
patch: list . get ( contracted ) ;
rank: 654
score: 98.4726333618164
patch: else { return * ; } }
rank: 654
score: 98.47150336371527
patch: return evaluate CaMeL New CaMeL Simplex ; }
rank: 654
score: 98.40757751464844
patch: else { return ; if ; *
rank: 654
score: 98.22774251302083
patch: if return ; break ;
rank: 654
score: 97.77859497070312
patch: tree . remove ( ;
rank: 655
score: 98.68955775669643
patch: else { simplex = reflected ;
rank: 655
score: 98.48236083984375
patch: return simplex ; } }
rank: 655
score: 98.47222137451172
patch: } else if ; if ; }
rank: 655
score: 98.46962193080357
patch: return contracted [ 0 ] ;
rank: 655
score: 98.40731811523438
patch: else { return return ; while ;
rank: 655
score: 98.22340901692708
patch: return ; if / /
rank: 655
score: 98.20005289713542
patch: return ; default return ;
rank: 656
score: 98.747509765625
patch: return original ) ;
rank: 656
score: 98.47049713134766
patch: return ; return ; } else {
rank: 656
score: 98.46861572265625
patch: break ; } }
rank: 656
score: 98.40679253472223
patch: else { return return ; return ; }
rank: 656
score: 98.21787516276042
patch: return ; return ; count
rank: 656
score: 97.77794392903645
patch: final ; throw new ;
rank: 657
score: 98.74165174696181
patch: return original . evaluate ( original ) ;
rank: 657
score: 98.65498352050781
patch: result = original [ 0 ] ;
rank: 657
score: 98.46952311197917
patch: else if ; return ; } else {
rank: 657
score: 98.46726481119792
patch: return comparator . simplex ;
rank: 657
score: 98.4058609008789
patch: return { return ; return ; {
rank: 657
score: 98.21729532877605
patch: if ; return ; throw
rank: 657
score: 97.77716064453125
patch: return / * ; }
rank: 658
score: 98.7308349609375
patch: return ( reflected , best ) ;
rank: 658
score: 98.67660522460938
patch: iterate CaMeL Simplex ( comparator ) ;
rank: 658
score: 98.47688511439732
patch: else { return ) ; }
rank: 658
score: 98.46939849853516
patch: return * * ; } return ;
rank: 658
score: 98.46221923828125
patch: return . [ 0 ] ;
rank: 658
score: 98.40506320529514
patch: else { if return ; } break ;
rank: 658
score: 98.21117146809895
patch: return ; return ; do
rank: 658
score: 98.19332885742188
patch: } else { ; }
rank: 658
score: 97.77615356445312
patch: result = true ;
rank: 659
score: 98.47571672712054
patch: out . run ( ) ;
rank: 659
score: 98.46878814697266
patch: } finally { return ; return ;
rank: 659
score: 98.45599365234375
patch: throw throws Optimization CaMeL Exception {
rank: 659
score: 98.40436469184027
patch: else { return ; } while false ;
rank: 659
score: 98.20838419596355
patch: return ; ; = ;
rank: 659
score: 98.19241333007812
patch: * return true ; }
rank: 659
score: 97.7756591796875
patch: } return ; }
rank: 660
score: 98.64315456814236
patch: throw ( Optimization CaMeL Exception ) comparator ;
rank: 660
score: 98.40436469184027
patch: else { return ; } if false {
rank: 660
score: 98.20688883463542
patch: return ; return ; Exception
rank: 660
score: 98.19225056966145
patch: return ; } null ;
rank: 660
score: 97.7750732421875
patch: final return this ;
rank: 661
score: 98.62303924560547
patch: result [ 0 ] = comparator ;
rank: 661
score: 98.46830240885417
patch: return * return return ;
rank: 661
score: 98.43809000651042
patch: return true ; } else
rank: 661
score: 98.40398406982422
patch: return return ; return ; / ;
rank: 661
score: 98.20069376627605
patch: return ; if / ;
rank: 661
score: 98.18961588541667
patch: this . return ; ;
rank: 661
score: 97.77403767903645
patch: if ( ; } else
rank: 662
score: 98.61650848388672
patch: return original . clone ( ) ;
rank: 662
score: 98.46822781032986
patch: } else { this . return ; ;
rank: 662
score: 98.46732003348214
patch: return ( int ) contracted ;
rank: 662
score: 98.43743896484375
patch: return comparator . simplex ; }
rank: 662
score: 98.40375434027777
patch: else { return ; ; System . ;
rank: 662
score: 98.19615681966145
patch: if ; return ; set
rank: 662
score: 98.18807983398438
patch: else return ; } ;
rank: 662
score: 97.77360026041667
patch: complete = true ; }
rank: 663
score: 98.61527709960937
patch: result = simplex ;
rank: 663
score: 98.4681167602539
patch: return ; } else } return ;
rank: 663
score: 98.46213204520089
patch: return . iterator ( ) ;
rank: 663
score: 98.43628540039063
patch: return ; else {
rank: 663
score: 98.19615173339844
patch: ; return ;
rank: 663
score: 97.77337646484375
patch: / * return ; /
rank: 664
score: 98.70621337890626
patch: return reflected ) ;
rank: 664
score: 98.64126586914062
patch: else { simplex = reflected ; }
rank: 664
score: 98.46767171223958
patch: return * * * return ; return ;
rank: 664
score: 98.46092006138393
patch: return * / return ; }
rank: 664
score: 98.43585205078125
patch: return comparator . ; } else {
rank: 664
score: 98.40327284071181
patch: return { return ; if ; break ;
rank: 664
score: 98.19411214192708
patch: return ; ; / ;
rank: 664
score: 98.18556722005208
patch: return null ; } ;
rank: 664
score: 97.77317301432292
patch: final int ; final ;
rank: 665
score: 98.46736653645833
patch: } return return return ; return return ;
rank: 665
score: 98.4273193359375
patch: result = best ;
rank: 665
score: 98.4021987915039
patch: return { ; ; if return ;
rank: 665
score: 98.18968709309895
patch: return ; if ; System
rank: 665
score: 98.18367004394531
patch: * return ;
rank: 665
score: 97.7702392578125
patch: cancelled = false ;
rank: 666
score: 98.46702745225694
patch: else if ; * * * * /
rank: 666
score: 98.45614624023438
patch: return $NUMBER$ ;
rank: 666
score: 98.401611328125
patch: return { return ; if ; {
rank: 666
score: 98.18704223632812
patch: return ; return ; public
rank: 666
score: 98.17966715494792
patch: } ; * / ;
rank: 666
score: 97.76812744140625
patch: final int length = ;
rank: 667
score: 98.60002899169922
patch: return System . iterator ( ) ;
rank: 667
score: 98.466796875
patch: } else return true ; return false ;
rank: 667
score: 98.4520975748698
patch: return * / simplex ;
rank: 667
score: 98.42594909667969
patch: return comparator . reflected ; } else
rank: 667
score: 98.17901611328125
patch: return ; / ;
rank: 667
score: 97.7678934733073
patch: else do { return ;
rank: 668
score: 98.6146240234375
patch: return contracted ; } }
rank: 668
score: 98.46562957763672
patch: } return return return ; return ;
rank: 668
score: 98.45057896205357
patch: return ( Integer ) best ;
rank: 668
score: 98.42539760044643
patch: throw throws Runtime CaMeL Exception {
rank: 668
score: 98.3995849609375
patch: catch return ; ;
rank: 668
score: 98.17665608723958
patch: if ; return ; boolean
rank: 668
score: 97.76785278320312
patch: if ( comparator . ;
rank: 669
score: 98.63706665039062
patch: return best ) ;
rank: 669
score: 98.6100565592448
patch: return evaluate CaMeL Simplex ;
rank: 669
score: 98.46548461914062
patch: } else ; if ; return ;
rank: 669
score: 98.3990478515625
patch: return { while return ;
rank: 669
score: 98.17685953776042
patch: return ; / * /
rank: 669
score: 98.17451985677083
patch: return ; return ; Stack
rank: 669
score: 97.76685791015625
patch: result = ; }
rank: 670
score: 98.46443939208984
patch: } if ; if return return ;
rank: 670
score: 98.41962890625
patch: return comparator . ;
rank: 670
score: 98.39888000488281
patch: else ; if return ; return ;
rank: 670
score: 98.17041015625
patch: / ; return ;
rank: 670
score: 97.76629638671875
patch: } else { new ;
rank: 671
score: 98.46441650390625
patch: } if ( return ; return ;
rank: 671
score: 98.44126383463542
patch: else { return * /
rank: 671
score: 98.17460123697917
patch: } ; ; ; ;
rank: 671
score: 98.16439819335938
patch: return ; if * ;
rank: 671
score: 97.76353963216145
patch: } if ( ; else
rank: 672
score: 98.597412109375
patch: else { reflected = reflected ; }
rank: 672
score: 98.46440124511719
patch: } else if return false ; }
rank: 672
score: 98.41392299107143
patch: return simplex ; } else {
rank: 672
score: 98.3985107421875
patch: i return return ;
rank: 672
score: 98.16354370117188
patch: return ; return ; max
rank: 672
score: 97.76304117838542
patch: final int max = ;
rank: 673
score: 98.59978485107422
patch: return ( contracted , best ) ;
rank: 673
score: 98.46407063802083
patch: return return ; } else if return ;
rank: 673
score: 98.41095581054688
patch: return 0 ; }
rank: 673
score: 98.39722442626953
patch: else { * / return ; }
rank: 673
score: 98.16237386067708
patch: return ; int if ;
rank: 673
score: 97.7627665201823
patch: else { final double ;
rank: 674
score: 98.46377563476562
patch: } else return null ;
rank: 674
score: 98.39717864990234
patch: if return ; return ; ; ;
rank: 674
score: 98.15871175130208
patch: return ; return ; long
rank: 674
score: 97.7598164876302
patch: ok = true ; }
rank: 675
score: 98.46369086371527
patch: else { return ; ; } if ;
rank: 675
score: 98.43511090959821
patch: else { return * * /
rank: 675
score: 98.40038299560547
patch: throw new Optimization CaMeL Exception ( $STRING$
rank: 675
score: 98.3965072631836
patch: return return ; return ; } ;
rank: 675
score: 98.15504964192708
patch: throw if ; return ;
rank: 675
score: 97.75935872395833
patch: } return true ; }
rank: 676
score: 98.57787475585937
patch: return simplex ) ;
rank: 676
score: 98.57332938058036
patch: return evaluate CaMeL Simplex ] ;
rank: 676
score: 98.46357557508681
patch: else { if ; } } } }
rank: 676
score: 98.43386404854911
patch: out . close ( ) ;
rank: 676
score: 98.40016682942708
patch: return comparator ; } else
rank: 676
score: 98.39650472005208
patch: return return ; return { while return ;
rank: 676
score: 98.16417439778645
patch: return ; null ; }
rank: 676
score: 98.15273030598958
patch: return ; return ; start
rank: 676
score: 97.7577896118164
patch: final ; ;
rank: 677
score: 98.55030822753906
patch: result [ 0 ] = best ;
rank: 677
score: 98.46273803710938
patch: else { return * false ; }
rank: 677
score: 98.3963851928711
patch: return return return ; return ; ;
rank: 677
score: 98.1626220703125
patch: throw new return ;
rank: 677
score: 98.1453857421875
patch: return ; if ; Throwable
rank: 677
score: 97.75386352539063
patch: @ Override public ;
rank: 678
score: 98.5674057006836
patch: iterate CaMeL Simplex ( reflected ) ;
rank: 678
score: 98.46158175998264
patch: else { if ; } } catch ;
rank: 678
score: 98.43077741350446
patch: return ( Integer ) simplex ;
rank: 678
score: 98.39596896701389
patch: else { ; return ; } return ;
rank: 678
score: 98.39441680908203
patch: return comparator . evaluate ( reflected ,
rank: 678
score: 98.1612548828125
patch: return ; 1 * /
rank: 678
score: 98.14464314778645
patch: return ; return ; out
rank: 678
score: 97.75269571940105
patch: final ; this . ;
rank: 679
score: 98.55929129464286
patch: return iterate CaMeL Simplex ; }
rank: 679
score: 98.53219604492188
patch: return original [ 0 ] ) ;
rank: 679
score: 98.46149291992188
patch: } return += ;
rank: 679
score: 98.4261983235677
patch: return * / } }
rank: 679
score: 98.39595031738281
patch: else { if return ; } ;
rank: 679
score: 98.1608174641927
patch: } ; final return ;
rank: 679
score: 97.7525146484375
patch: assert return true ;
rank: 680
score: 98.46148003472223
patch: } return ; } else return return ;
rank: 680
score: 98.39573160807292
patch: else { return ; } int * ;
rank: 680
score: 98.16015625
patch: return return false ; }
rank: 680
score: 98.13829549153645
patch: if ; / / /
rank: 680
score: 97.7521484375
patch: return if ( ;
rank: 681
score: 98.5486068725586
patch: throw new Optimization CaMeL Exception ( _
rank: 681
score: 98.46121978759766
patch: return / * * * return ;
rank: 681
score: 98.39568413628473
patch: else { return ; } if true ;
rank: 681
score: 98.1380106608073
patch: return ; ; System ;
rank: 681
score: 97.74671630859375
patch: return << $NUMBER$ ;
rank: 682
score: 98.46104431152344
patch: * * * * return ; }
rank: 682
score: 98.39556121826172
patch: else { return ; { break ;
rank: 682
score: 98.38008880615234
patch: throw new Function CaMeL Evaluation CaMeL Exception
rank: 682
score: 98.12537638346355
patch: return ; return ; log
rank: 682
score: 97.7461181640625
patch: return >> $NUMBER$ ;
rank: 683
score: 98.53758021763393
patch: else { reflected = reflected ;
rank: 683
score: 98.4609375
patch: } else { if ; if return ;
rank: 683
score: 98.40910993303571
patch: return ( Integer ) contracted ;
rank: 683
score: 98.39495849609375
patch: else { * else { return ;
rank: 683
score: 98.156396484375
patch: * / return ;
rank: 683
score: 98.12119547526042
patch: return ; return ; case
rank: 683
score: 97.7455810546875
patch: final ; final ;
rank: 684
score: 98.46080864800348
patch: return ; } else return ; return ;
rank: 684
score: 98.40332903180804
patch: return synchronized ( comparator ) {
rank: 684
score: 98.39495086669922
patch: catch ( $STRING$ ) { return ;
rank: 684
score: 98.37775530133929
patch: return contracted ; } else {
rank: 684
score: 98.15597534179688
patch: } * * /
rank: 684
score: 98.11796061197917
patch: if return ; if ;
rank: 684
score: 97.74142456054688
patch: return default ;
rank: 685
score: 98.52192034040179
patch: return reflected = reflected ) ;
rank: 685
score: 98.50920758928571
patch: return original [ best ] ;
rank: 685
score: 98.46080864800348
patch: } else { if return ; } }
rank: 685
score: 98.40298897879464
patch: return evaluate ( contracted ) ;
rank: 685
score: 98.39409722222223
patch: else { if return ; for return ;
rank: 685
score: 98.15451049804688
patch: } ; if ; ;
rank: 685
score: 98.11578369140625
patch: return ; if ; boolean
rank: 685
score: 97.73814900716145
patch: return throw new ; }
rank: 686
score: 98.50852966308594
patch: break ; else { return ; }
rank: 686
score: 98.46073150634766
patch: } else / * * * /
rank: 686
score: 98.3753662109375
patch: return best ; } else
rank: 686
score: 98.15407307942708
patch: return ; } / *
rank: 686
score: 98.11173502604167
patch: return ; return ; add
rank: 686
score: 97.73805541992188
patch: retval = return ;
rank: 687
score: 98.52214704241071
patch: return reflected ; break ; }
rank: 687
score: 98.3933334350586
patch: return { else { return ; }
rank: 687
score: 98.3905537923177
patch: return original ; } }
rank: 687
score: 98.37494506835938
patch: break { } }
rank: 687
score: 98.1519063313802
patch: return ; * * ;
rank: 687
score: 98.10805257161458
patch: if ; ! return ;
rank: 687
score: 97.7375996907552
patch: else { default = ;
rank: 688
score: 98.52169363839286
patch: else { contracted = reflected ;
rank: 688
score: 98.46029663085938
patch: } return ; } else if ;
rank: 688
score: 98.39244249131944
patch: return return ; break ; if return ;
rank: 688
score: 98.38761683872768
patch: else { throw null ; }
rank: 688
score: 98.37068176269531
patch: return khi [ 0 ] ;
rank: 688
score: 98.1432393391927
patch: if ( ; else ;
rank: 688
score: 98.1070048014323
patch: int if ; return ;
rank: 688
score: 97.73373413085938
patch: n = ; }
rank: 689
score: 98.52143859863281
patch: return [ 0 ] ; } }
rank: 689
score: 98.50047302246094
patch: throw new Optimization CaMeL Exception ( ;
rank: 689
score: 98.39151000976562
patch: result { return ; } return ;
rank: 689
score: 98.38692801339286
patch: else if ( true ) {
rank: 689
score: 98.14256795247395
patch: return * / * /
rank: 689
score: 98.10005696614583
patch: return ; if ; --
rank: 689
score: 97.73236083984375
patch: } return new ;
rank: 690
score: 98.4960225423177
patch: return ( comparator ) ;
rank: 690
score: 98.46016438802083
patch: } if ; if ;
rank: 690
score: 98.3913345336914
patch: else { new return { return ;
rank: 690
score: 98.36424037388393
patch: return comparator ; } return ;
rank: 690
score: 98.14139811197917
patch: return ; - * /
rank: 690
score: 98.09724426269531
patch: return ; /
rank: 691
score: 98.5209732055664
patch: return reflected ; } return false ;
rank: 691
score: 98.46008978949652
patch: return return ; } } else return ;
rank: 691
score: 98.38448486328124
patch: throw null ; }
rank: 691
score: 98.35993957519531
patch: return comparator . iterate CaMeL Simplex ;
rank: 691
score: 98.13983154296875
patch: else if ( return ;
rank: 691
score: 98.09170532226562
patch: return ; -- return ;
rank: 691
score: 97.73067626953124
patch: return ) ; }
rank: 692
score: 98.52063860212054
patch: return evaluate CaMeL Simplex ; }
rank: 692
score: 98.45960998535156
patch: } else if ; } if ;
rank: 692
score: 98.39040798611111
patch: / * return return ; if return ;
rank: 692
score: 98.35378011067708
patch: return comparator . ; }
rank: 692
score: 98.13800048828125
patch: } this . return ;
rank: 692
score: 98.0840555826823
patch: return ; if break ;
rank: 692
score: 97.73051452636719
patch: result = ;
rank: 693
score: 98.48697509765626
patch: } return simplex ;
rank: 693
score: 98.45893690321181
patch: return return return ; } else return ;
rank: 693
score: 98.38904571533203
patch: else { return ; } int *
rank: 693
score: 98.38132731119792
patch: return * * / }
rank: 693
score: 98.08048706054687
patch: break ; return ;
rank: 693
score: 97.72947184244792
patch: this . original = ;
rank: 694
score: 98.45867241753473
patch: } if return ; else { return ;
rank: 694
score: 98.38871765136719
patch: return ; } return { return ;
rank: 694
score: 98.37833658854167
patch: return ( 0 ) ;
rank: 694
score: 98.13226318359375
patch: else return true ; }
rank: 694
score: 98.04817504882813
patch: result ; return ;
rank: 694
score: 97.72469482421874
patch: } return ; ;
rank: 695
score: 98.51448059082031
patch: return ( simplex , best ) ;
rank: 695
score: 98.4754130045573
patch: return ( contracted ) ;
rank: 695
score: 98.4586181640625
patch: else return ; } else = return ;
rank: 695
score: 98.38849555121527
patch: else return ; if return ; return ;
rank: 695
score: 98.37748209635417
patch: synchronized ( comparator ) {
rank: 695
score: 98.13081868489583
patch: return ; } false ;
rank: 695
score: 98.02982177734376
patch: return ; ; /
rank: 695
score: 97.7232666015625
patch: return return null ;
rank: 696
score: 98.51015799386161
patch: return reflected ; } } }
rank: 696
score: 98.45859103732639
patch: } else if ; new return return ;
rank: 696
score: 98.12677001953125
patch: else ; return false ;
rank: 696
score: 98.02976989746094
patch: return ; try
rank: 696
score: 97.72051239013672
patch: throw new ;
rank: 697
score: 98.51008605957031
patch: return evaluate CaMeL Simplex ] ; }
rank: 697
score: 98.48030090332031
patch: return original [ best ) ] ;
rank: 697
score: 98.45806884765625
patch: } } else if ;
rank: 697
score: 98.38601684570312
patch: return return return false ;
rank: 697
score: 98.12459309895833
patch: } ; * return ;
rank: 697
score: 97.72045288085937
patch: ok = false ;
rank: 698
score: 98.4575907389323
patch: return original ) ; }
rank: 698
score: 98.45665147569444
patch: } else return ; return return return ;
rank: 698
score: 98.38559977213542
patch: value { return ; }
rank: 698
score: 98.37635294596355
patch: return false ; else {
rank: 698
score: 98.3366470336914
patch: return best [ 0 ] ; }
rank: 698
score: 98.1226806640625
patch: return 0 . 0 ;
rank: 698
score: 98.013134765625
patch: throw ; return ;
rank: 699
score: 98.45657687717014
patch: / * * * * / return ;
rank: 699
score: 98.37022705078125
patch: return 1 ; }
rank: 699
score: 97.71695963541667
patch: final int [ ] ;
rank: 700
score: 98.45570882161458
patch: } else { continue ;
rank: 700
score: 98.38506401909723
patch: else { return ; / / break ;
rank: 700
score: 98.36989920479911
patch: else { simplex = simplex ;
rank: 700
score: 98.33455113002232
patch: return comparator . ; } }
rank: 700
score: 98.1175028483073
patch: } ;
rank: 700
score: 97.99678344726563
patch: System ; return ;
rank: 700
score: 97.7158915201823
patch: final int compare = ;
rank: 701
score: 98.47293853759766
patch: result [ 0 ] = simplex ;
rank: 701
score: 98.455078125
patch: else { if ; this . return ;
rank: 701
score: 98.38375515407986
patch: return return ; ; return ; return ;
rank: 701
score: 98.33390045166016
patch: return original [ 1 ] ; }
rank: 701
score: 97.99529266357422
patch: return ; boolean
rank: 701
score: 97.713671875
patch: finished = false ;
rank: 702
score: 98.47237723214286
patch: return original ( comparator ) ;
rank: 702
score: 98.45439995659723
patch: else { return true ; } return ;
rank: 702
score: 98.43836466471355
patch: return return - 0 ;
rank: 702
score: 98.38306342230902
patch: else { return ; throw new return ;
rank: 702
score: 98.36400349934895
patch: return simplex ; else {
rank: 702
score: 98.11549886067708
patch: Iterator < return : ;
rank: 702
score: 97.9951416015625
patch: throw return ; ;
rank: 702
score: 97.7127685546875
patch: return ; } final ;
rank: 703
score: 98.46998087565105
patch: return ( true ) ;
rank: 703
score: 98.45374891493056
patch: else { if ( return ; break ;
rank: 703
score: 98.43098958333333
patch: return reflected ) ; }
rank: 703
score: 98.38289388020833
patch: else { for return { return ; }
rank: 703
score: 98.36373465401786
patch: else while ( true ) {
rank: 703
score: 98.32737513950893
patch: return best ; } return ;
rank: 703
score: 98.11448160807292
patch: return ; ) ; }
rank: 703
score: 97.71042887369792
patch: if ( min ) {
rank: 704
score: 98.48581949869792
patch: return ( simplex ) ;
rank: 704
score: 98.45337592230902
patch: } else = return ; else return ;
rank: 704
score: 98.38273111979167
patch: return ; int else { return false ;
rank: 704
score: 98.36368233816964
patch: return } else { return ;
rank: 704
score: 98.32442801339286
patch: return comparator . ; } else
rank: 704
score: 98.1128438313802
patch: } * return ; ;
rank: 704
score: 97.70992431640624
patch: } else * /
rank: 705
score: 98.48536173502605
patch: return ( reflected ) ;
rank: 705
score: 98.45964050292969
patch: throw throws Optimization CaMeL Exception { }
rank: 705
score: 98.3819580078125
patch: return { return ; if return return ;
rank: 705
score: 98.36234537760417
patch: return } return false ;
rank: 705
score: 97.94517211914062
patch: / if return ;
rank: 706
score: 98.45921107700893
patch: break ; else { return ;
rank: 706
score: 98.45123969184027
patch: return return ; } else return return ;
rank: 706
score: 98.36222621372768
patch: else { contracted = simplex ;
rank: 706
score: 98.32209014892578
patch: return comparator . compare ( contracted ;
rank: 706
score: 97.70418090820313
patch: assert return ; }
rank: 707
score: 98.47889055524554
patch: return reflected [ 1 ] ;
rank: 707
score: 98.45630900065105
patch: result ( comparator ) ;
rank: 707
score: 98.45101589626736
patch: } else { / * * * /
rank: 707
score: 98.38100179036458
patch: while return { return ;
rank: 707
score: 98.31892395019531
patch: return comparator ; } return false ;
rank: 707
score: 98.10640462239583
patch: } while ( ; )
rank: 707
score: 97.9130126953125
patch: throw if return ;
rank: 707
score: 97.69969482421875
patch: asynchronous = true ;
rank: 708
score: 98.4725850423177
patch: return reflected ; break ;
rank: 708
score: 98.45024278428819
patch: } return * * * / return ;
rank: 708
score: 98.37936740451389
patch: / finally { return ; if return ;
rank: 708
score: 98.36124965122768
patch: return / * * / }
rank: 708
score: 98.10560099283855
patch: return ; false ; }
rank: 708
score: 97.88793334960937
patch: ; ; return ;
rank: 708
score: 97.69931640625
patch: catch ( Exception ;
rank: 709
score: 98.37910970052083
patch: else { if return { return ; }
rank: 709
score: 98.31676483154297
patch: return comparator ; } return true ;
rank: 709
score: 98.10500081380208
patch: if ( return ; }
rank: 709
score: 97.87078857421875
patch: return ; set
rank: 709
score: 97.6980712890625
patch: n = return ;
rank: 710
score: 98.46348063151042
patch: return null ; } }
rank: 710
score: 98.44868977864583
patch: else return ; return ; } return ;
rank: 710
score: 98.37863159179688
patch: return { return ; int
rank: 710
score: 98.35992431640625
patch: } / * * /
rank: 710
score: 98.30636160714286
patch: return original ; } else {
rank: 710
score: 98.10382080078125
patch: fail ( $STRING$ return ;
rank: 710
score: 97.84349365234375
patch: return ; ; try
rank: 710
score: 97.69760131835938
patch: if ( ; )
rank: 711
score: 98.45839146205357
patch: return false ; } } }
rank: 711
score: 98.44858805338542
patch: } else if ; if ; return ;
rank: 711
score: 98.43287004743304
patch: } else { return * /
rank: 711
score: 98.37777370876736
patch: else { if return ; ; return ;
rank: 711
score: 98.30506134033203
patch: throw new Optimization CaMeL Exception ) ;
rank: 711
score: 98.10183715820312
patch: } else { / ;
rank: 711
score: 97.8418212890625
patch: return ; System ;
rank: 711
score: 97.69391479492188
patch: } } return ;
rank: 712
score: 98.448486328125
patch: } else return false ; else return ;
rank: 712
score: 98.37724473741319
patch: return return ; ; else { return ;
rank: 712
score: 98.35675048828125
patch: else { return original ; }
rank: 712
score: 98.30345153808594
patch: return best ; } return false ;
rank: 712
score: 98.10098266601562
patch: } ; / * ;
rank: 712
score: 97.69248657226562
patch: return % $NUMBER$ ;
rank: 713
score: 98.45286865234375
patch: / * * /
rank: 713
score: 98.44818793402777
patch: } else if return ; return value ;
rank: 713
score: 98.42718505859375
patch: result = simplex ) ;
rank: 713
score: 98.39325823102679
patch: throw new Optimization CaMeL Exception ;
rank: 713
score: 98.377197265625
patch: return return ; return { ; return ;
rank: 713
score: 98.35589599609375
patch: return simplex ; break ;
rank: 713
score: 98.30149841308594
patch: return best ; } return true ;
rank: 713
score: 97.8386474609375
patch: throw return ; }
rank: 713
score: 97.69072265625
patch: for ; ; )
rank: 714
score: 98.4520263671875
patch: return [ 1 ] ;
rank: 714
score: 98.39261300223214
patch: return reflected , best ) ;
rank: 714
score: 98.3756612141927
patch: / return ; return ;
rank: 714
score: 98.35421316964286
patch: else { original = simplex ;
rank: 714
score: 97.830859375
patch: return ; else ;
rank: 714
score: 97.68890380859375
patch: final return return ;
rank: 715
score: 98.44765218098958
patch: else { return ; } } false ;
rank: 715
score: 98.37460666232639
patch: ++ return ; return ; if return ;
rank: 715
score: 98.0930887858073
patch: return ; } while ;
rank: 715
score: 97.822998046875
patch: while ; return ;
rank: 715
score: 97.68878173828125
patch: checked = true ;
rank: 716
score: 98.44683159722223
patch: return return ; } return return return ;
rank: 716
score: 98.44410051618304
patch: return value [ 0 ] ;
rank: 716
score: 98.42165120442708
patch: result = best ) ;
rank: 716
score: 98.37449137369792
patch: else { return ; } ; * /
rank: 716
score: 98.35134451729911
patch: System . else { return ;
rank: 716
score: 98.09241739908855
patch: / ; ; * /
rank: 716
score: 97.68311767578125
patch: fail ( $STRING$ ;
rank: 717
score: 98.44635687934027
patch: } else = return ; } else {
rank: 717
score: 98.37424723307292
patch: else { return ; * if return ;
rank: 717
score: 98.35019938151042
patch: else { return 1 ;
rank: 717
score: 98.09234619140625
patch: } ; final ; ;
rank: 717
score: 97.68094482421876
patch: this . ; }
rank: 718
score: 98.44485812717014
patch: } return ; } return return return ;
rank: 718
score: 98.4397481282552
patch: return this ; } }
rank: 718
score: 98.41392299107143
patch: return iterator [ 0 ] ;
rank: 718
score: 98.37422688802083
patch: } return if return ;
rank: 718
score: 98.08718872070312
patch: else return null ; }
rank: 718
score: 97.8099136352539
patch: if ; return
rank: 718
score: 97.67951965332031
patch: return - ;
rank: 719
score: 98.44485134548611
patch: } else ; if ; return return ;
rank: 719
score: 98.41250174386161
patch: return original [ 0 ] ?
rank: 719
score: 98.37392171223958
patch: return ; return - ;
rank: 719
score: 98.34829275948661
patch: return ( Object ) best ;
rank: 719
score: 98.29435729980469
patch: throw throws Function CaMeL Evaluation CaMeL Exception
rank: 719
score: 97.8068115234375
patch: start ; return ;
rank: 719
score: 97.67619018554687
patch: assert return ; ;
rank: 720
score: 98.44443766276042
patch: else if ; } else { return ;
rank: 720
score: 98.43777465820312
patch: } / * /
rank: 720
score: 98.41182454427083
patch: throw instanceof Optimization CaMeL Exception
rank: 720
score: 98.37381998697917
patch: else { return ; } System ; }
rank: 720
score: 98.34706333705357
patch: return - 1 ; } }
rank: 720
score: 98.08633422851562
patch: } * ;
rank: 720
score: 97.80096435546875
patch: if return ; ;
rank: 720
score: 97.67265625
patch: return ; ) ;
rank: 721
score: 98.44420708550348
patch: else { if ; } return return ;
rank: 721
score: 98.43720354352679
patch: return ; } else { }
rank: 721
score: 98.41172572544643
patch: return original ( best ) ;
rank: 721
score: 98.37800816127232
patch: return simplex ; } return ;
rank: 721
score: 98.37314860026042
patch: return return return ; } if return ;
rank: 721
score: 98.08591715494792
patch: if ( return ; ;
rank: 721
score: 97.79459228515626
patch: return ; ; int
rank: 722
score: 98.43611363002232
patch: return reflected ; } return ;
rank: 722
score: 98.34632364908855
patch: return true ; else {
rank: 722
score: 98.08563232421875
patch: return null ; * /
rank: 722
score: 97.77083129882813
patch: return ; else /
rank: 722
score: 97.67030029296875
patch: return ( ( ;
rank: 723
score: 98.44380696614583
patch: } else = true ; else return ;
rank: 723
score: 98.4315185546875
patch: return ( int ) false ;
rank: 723
score: 98.37195841471355
patch: return if return ; ;
rank: 723
score: 98.34353637695312
patch: return Boolean . 0 ;
rank: 723
score: 98.26414271763393
patch: return this . simplex ; }
rank: 723
score: 98.0840087890625
patch: } * ; ;
rank: 723
score: 97.76260986328126
patch: this ; return ;
rank: 723
score: 97.66431274414063
patch: else { continue ;
rank: 724
score: 98.44341362847223
patch: } else if ( return ; return ;
rank: 724
score: 98.3697509765625
patch: return * / contracted ;
rank: 724
score: 98.26399739583333
patch: return khi ; }
rank: 724
score: 97.66339111328125
patch: else return value ;
rank: 725
score: 98.44337972005208
patch: return ; } } finally { return ;
rank: 725
score: 98.40047200520833
patch: result = simplex ; }
rank: 725
score: 98.369140625
patch: return best ) ; }
rank: 725
score: 98.26051839192708
patch: return this . simplex ;
rank: 725
score: 98.08269500732422
patch: } ) ;
rank: 725
score: 97.75780029296875
patch: logger ; return ;
rank: 725
score: 97.66064453125
patch: catch ( final ;
rank: 726
score: 98.443359375
patch: return * * * ; } return ;
rank: 726
score: 98.42776053292411
patch: return false ; break ; }
rank: 726
score: 98.3597412109375
patch: catch false { return ;
rank: 726
score: 98.25040690104167
patch: return original [ khi
rank: 726
score: 98.08236694335938
patch: return ; * ;
rank: 726
score: 97.74917602539062
patch: ; if return ;
rank: 726
score: 97.66053466796875
patch: while ( true )
rank: 727
score: 98.44321695963542
patch: return ; } if ; return return ;
rank: 727
score: 98.39494105747768
patch: return original [ $NUMBER$ ] ;
rank: 727
score: 98.35484822591145
patch: result { return ; }
rank: 727
score: 98.2415771484375
patch: return contracted ; } return ;
rank: 728
score: 98.4427490234375
patch: } else return false ; } else {
rank: 728
score: 98.39202008928571
patch: ++ original [ 0 ] ;
rank: 728
score: 98.3633321126302
patch: return ( false ) ;
rank: 728
score: 98.35418701171875
patch: } return return true ;
rank: 728
score: 98.33786446707589
patch: return ( Object ) simplex ;
rank: 728
score: 98.2413330078125
patch: return simplex ; } else
rank: 728
score: 97.74185180664062
patch: return ; continue ;
rank: 728
score: 97.65898895263672
patch: super . ;
rank: 729
score: 98.44227430555556
patch: } if ; } else { return ;
rank: 729
score: 98.42320033482143
patch: return ( reflected ) ; }
rank: 729
score: 98.39031982421875
patch: return / * * * /
rank: 729
score: 98.3504130045573
patch: return return ; if ;
rank: 729
score: 98.24012974330357
patch: throw new Runtime CaMeL Exception (
rank: 729
score: 98.0789286295573
patch: return this ; } ;
rank: 729
score: 97.72916412353516
patch: if ; {
rank: 729
score: 97.655322265625
patch: do { final ;
rank: 730
score: 98.44226752387152
patch: } else { set ; return ; }
rank: 730
score: 98.35374232700893
patch: return reflected = best ) ;
rank: 730
score: 98.34946695963542
patch: return { value return ;
rank: 730
score: 98.07888793945312
patch: } else if ; ;
rank: 730
score: 97.72479248046875
patch: return ; ; =
rank: 730
score: 97.65324096679687
patch: notify CaMeL All ;
rank: 731
score: 98.44224717881944
patch: return * * * / } return ;
rank: 731
score: 98.38109334309895
patch: result = original ) ;
rank: 731
score: 98.35071672712054
patch: return != null ? comparator ;
rank: 731
score: 98.3487548828125
patch: if false ; return ;
rank: 731
score: 98.23512776692708
patch: return comparator ; else {
rank: 731
score: 98.07598876953125
patch: * / * return ;
rank: 731
score: 97.723779296875
patch: return ; ; else
rank: 731
score: 97.652880859375
patch: catch ; return ;
rank: 732
score: 98.44224717881944
patch: else { if ; } } } else
rank: 732
score: 98.41556222098214
patch: return [ 1 ] ; }
rank: 732
score: 98.38039143880208
patch: return / * * /
rank: 732
score: 98.34922572544643
patch: return ; } return simplex ;
rank: 732
score: 98.07558186848958
patch: * / ; * /
rank: 732
score: 97.65185546875
patch: return remove ( ;
rank: 733
score: 98.44122992621527
patch: else { return ; ; } else {
rank: 733
score: 98.41501871744792
patch: return - 0 ; }
rank: 733
score: 98.34689331054688
patch: else { ; return ;
rank: 733
score: 98.32761637369792
patch: return false ; break ;
rank: 733
score: 98.2275390625
patch: result = comparator . reflected ;
rank: 733
score: 97.66555786132812
patch: return ; final
rank: 734
score: 98.44081624348958
patch: else { return ; } finally return ;
rank: 734
score: 98.41152518136161
patch: return ( simplex ) ; }
rank: 734
score: 98.3465067545573
patch: return return ; else {
rank: 734
score: 98.2257568359375
patch: continue ; } }
rank: 734
score: 98.07296752929688
patch: return ; throw new ;
rank: 734
score: 97.6592529296875
patch: return ; / /
rank: 734
score: 97.64999389648438
patch: return matches ;
rank: 735
score: 98.41055733816964
patch: return [ - 1 ] ;
rank: 735
score: 98.37456403459821
patch: throw new Throwable ( ) ;
rank: 735
score: 98.34555053710938
patch: assert false ; return ;
rank: 735
score: 98.22419956752232
patch: return original [ ) ] ;
rank: 735
score: 98.07068888346355
patch: update ; return false ;
rank: 735
score: 97.65081787109375
patch: for ; return ;
rank: 735
score: 97.6467529296875
patch: catch ( ; }
rank: 736
score: 98.43970404730902
patch: else { return return ; } } else
rank: 736
score: 98.40522984095982
patch: return ( int ) reflected ;
rank: 736
score: 98.34482828776042
patch: return ( original ) ;
rank: 736
score: 97.648974609375
patch: ; return ; ;
rank: 737
score: 98.43959554036458
patch: else if ; else return ; return ;
rank: 737
score: 98.40402657645089
patch: return [ - 0 ] ;
rank: 737
score: 98.21988932291667
patch: break ; } else {
rank: 737
score: 97.64853515625
patch: buffer ; return ;
rank: 737
score: 97.64136962890625
patch: cached = ; }
rank: 738
score: 98.43922932942708
patch: else if ; else { return ; }
rank: 738
score: 98.39932686941964
patch: return contracted ; break ; }
rank: 738
score: 98.308837890625
patch: else { return simplex ;
rank: 738
score: 98.06719970703125
patch: } ) ; * /
rank: 738
score: 97.58583068847656
patch: if ; int
rank: 739
score: 98.43881564670139
patch: else { } else { return ; }
rank: 739
score: 98.39700753348214
patch: return ( Integer ) reflected ;
rank: 739
score: 98.36269124348958
patch: return original : false ;
rank: 739
score: 98.34322102864583
patch: if ( { return ;
rank: 739
score: 98.3084228515625
patch: return gamma ; }
rank: 739
score: 98.06599731445313
patch: return this . ;
rank: 739
score: 97.63819580078125
patch: final return ; ;
rank: 739
score: 97.56834411621094
patch: { return ;
rank: 740
score: 98.43880886501736
patch: } return * * * * return ;
rank: 740
score: 98.3948974609375
patch: return reflected ; } break ;
rank: 740
score: 98.3431396484375
patch: else if return ; ;
rank: 740
score: 98.30764770507812
patch: return - $NUMBER$ ; }
rank: 740
score: 98.0641377766927
patch: } else { ; ;
rank: 740
score: 97.63682556152344
patch: this . ;
rank: 740
score: 97.55402374267578
patch: return ; *
rank: 741
score: 98.35727945963542
patch: return comparator ; break ;
rank: 741
score: 98.34058634440105
patch: else ; return return ;
rank: 741
score: 98.21399943033855
patch: return best ; else {
rank: 741
score: 97.636376953125
patch: } return default ;
rank: 741
score: 97.53722381591797
patch: / return ;
rank: 742
score: 98.43820529513889
patch: } return ; } finally { return ;
rank: 742
score: 98.3345947265625
patch: throw new Function CaMeL Evaluation CaMeL
rank: 742
score: 98.30567423502605
patch: return true ; break ;
rank: 742
score: 97.62998657226562
patch: Collections . return ;
rank: 742
score: 97.52999877929688
patch: for return ;
rank: 743
score: 98.4378662109375
patch: else if return ; } } return ;
rank: 743
score: 98.35452706473214
patch: else { return - 0 ;
rank: 743
score: 98.33824462890625
patch: if return return ;
rank: 743
score: 98.05799357096355
patch: return true ; * ;
rank: 743
score: 97.62969207763672
patch: n = ;
rank: 743
score: 97.51872253417969
patch: if ; try
rank: 744
score: 98.43712022569444
patch: } else { if ; return false ;
rank: 744
score: 98.38863699776786
patch: if ( reflected ) { }
rank: 744
score: 98.347509765625
patch: result = contracted ;
rank: 744
score: 98.3349100748698
patch: if 0 ; return ;
rank: 744
score: 98.30179850260417
patch: return } return true ;
rank: 744
score: 98.05795288085938
patch: } } * / ;
rank: 744
score: 97.61992797851562
patch: else if ; }
rank: 744
score: 97.49690246582031
patch: return ; throw
rank: 745
score: 98.43709988064236
patch: else { return * ; } } else
rank: 745
score: 98.38764299665179
patch: return contracted ; } } }
rank: 745
score: 98.34339250837054
patch: return ( contracted ) true ;
rank: 745
score: 98.33421325683594
patch: return { ;
rank: 745
score: 98.32176971435547
patch: / * /
rank: 745
score: 97.61854858398438
patch: return equals ( ;
rank: 745
score: 97.49356079101562
patch: return ; count
rank: 746
score: 98.43686930338542
patch: return * * * * return ; }
rank: 746
score: 98.3863525390625
patch: return 0 ; } }
rank: 746
score: 98.33681233723958
patch: return original : true ;
rank: 746
score: 98.33119710286458
patch: return return return value ;
rank: 746
score: 98.19790649414062
patch: return contracted ; } else
rank: 746
score: 98.055078125
patch: } this . ;
rank: 746
score: 97.61817626953125
patch: synchronized ( this ;
rank: 746
score: 97.49061584472656
patch: break ; ;
rank: 747
score: 98.43683539496527
patch: } else if ; catch ; return ;
rank: 747
score: 98.38572474888393
patch: return ( int ) 0 ;
rank: 747
score: 98.3306172688802
patch: else { if return {
rank: 747
score: 98.3146260579427
patch: return simplex ) ; }
rank: 747
score: 98.296630859375
patch: else { }
rank: 747
score: 98.1951192220052
patch: continue ; } else {
rank: 747
score: 98.0537821451823
patch: return false ; * ;
rank: 747
score: 97.61708068847656
patch: return $STRING$ ;
rank: 748
score: 98.4366455078125
patch: } else * return ;
rank: 748
score: 98.38567243303571
patch: return - 0 ; } }
rank: 748
score: 98.32942708333333
patch: return return = return ;
rank: 748
score: 98.32707214355469
patch: return list ;
rank: 748
score: 98.18756975446429
patch: return original [ gamma ] ;
rank: 748
score: 97.61595153808594
patch: return super ;
rank: 748
score: 97.46903991699219
patch: if ; ;
rank: 749
score: 98.43622504340277
patch: } else { if ( ; return ;
rank: 749
score: 98.32572021484376
patch: return = false ;
rank: 749
score: 98.2918701171875
patch: return original ; else {
rank: 749
score: 98.18754359654018
patch: throw throws Optimization CaMeL Exception ;
rank: 749
score: 97.61583862304687
patch: final return new ;
rank: 749
score: 97.45381164550781
patch: return ; =
rank: 750
score: 98.43610297309027
patch: finally { return ; } } return ;
rank: 750
score: 98.38387044270833
patch: return - - 1 ;
rank: 750
score: 98.18666294642857
patch: return reflected ; } else {
rank: 750
score: 98.0504150390625
patch: / * return * /
rank: 750
score: 97.42383575439453
patch: return ; this
rank: 751
score: 98.435791015625
patch: } else = ;
rank: 751
score: 98.3834228515625
patch: return ( Integer ) false ;
rank: 751
score: 98.32380981445313
patch: return { break ;
rank: 751
score: 98.306982421875
patch: } return best ;
rank: 751
score: 98.04811604817708
patch: this . return true ;
rank: 751
score: 97.41181945800781
patch: return ; if
rank: 752
score: 98.43578423394098
patch: } else { break ; } return ;
rank: 752
score: 98.38199869791667
patch: return - - 0 ;
rank: 752
score: 98.32277425130208
patch: return = ; return ;
rank: 752
score: 98.177734375
patch: continue ;
rank: 752
score: 98.04627482096355
patch: * / } * /
rank: 752
score: 97.60591888427734
patch: return ] ;
rank: 752
score: 97.39601135253906
patch: return ; {
rank: 753
score: 98.32162475585938
patch: return ; for return {
rank: 753
score: 98.31390380859375
patch: return else { return ; }
rank: 753
score: 98.17618233816964
patch: return original [ true ] ;
rank: 753
score: 98.0458984375
patch: } ; ? * /
rank: 753
score: 97.605712890625
patch: } throw new ;
rank: 753
score: 97.39240264892578
patch: -- return ;
rank: 754
score: 98.43383110894098
patch: } else { return ; break ; }
rank: 754
score: 98.37923758370536
patch: return ; break ; } }
rank: 754
score: 98.32028198242188
patch: / * / return ;
rank: 754
score: 98.30250040690105
patch: return reflected = reflected ;
rank: 754
score: 98.0440673828125
patch: throw new return false ;
rank: 754
score: 97.6054931640625
patch: return new ; ;
rank: 754
score: 97.38929748535156
patch: return ; String
rank: 755
score: 98.43316650390625
patch: else { if ; ; } return ;
rank: 755
score: 98.37797328404018
patch: else { return reflected ; }
rank: 755
score: 98.31978352864583
patch: return return return return =
rank: 755
score: 98.31032017299107
patch: throw $NUMBER$ * * * /
rank: 755
score: 98.26258341471355
patch: return . ( ) ;
rank: 755
score: 97.5963134765625
patch: state = ;
rank: 755
score: 97.37633514404297
patch: return ; long
rank: 756
score: 98.43307156032986
patch: else { } else if ; return ;
rank: 756
score: 98.37655203683036
patch: return * * * / }
rank: 756
score: 98.31906127929688
patch: while ( { return ;
rank: 756
score: 98.30577741350446
patch: throw instanceof Optimization CaMeL Exception ;
rank: 756
score: 98.28804524739583
patch: return reflected = simplex ;
rank: 756
score: 98.04068756103516
patch: } finally {
rank: 756
score: 97.59545288085937
patch: else { do {
rank: 756
score: 97.36823272705078
patch: return ; finally
rank: 757
score: 98.43248833550348
patch: } else { if return return ; }
rank: 757
score: 98.37501743861607
patch: / / * * * /
rank: 757
score: 98.31825764973958
patch: if null ; return ;
rank: 757
score: 98.30152587890625
patch: result = false ;
rank: 757
score: 98.28705444335938
patch: return contracted ) ;
rank: 757
score: 98.25905354817708
patch: return return . true ;
rank: 757
score: 98.172412109375
patch: return $NUMBER$ ; }
rank: 757
score: 98.04001871744792
patch: else return ; * /
rank: 757
score: 97.59495849609375
patch: return Boolean . ;
rank: 757
score: 97.34968566894531
patch: if ; /
rank: 758
score: 98.37396240234375
patch: return ( String ) reflected ;
rank: 758
score: 98.31559244791667
patch: return ; while return ;
rank: 758
score: 98.30032784598214
patch: result . iterator ( ) ;
rank: 758
score: 97.59442138671875
patch: else * /
rank: 758
score: 97.33380126953125
patch: } return return
rank: 759
score: 98.4320068359375
patch: } else { synchronized ; return ; }
rank: 759
score: 98.37311662946429
patch: return simplex ; break ; }
rank: 759
score: 98.3148193359375
patch: / * ] return ;
rank: 759
score: 98.29983084542411
patch: return simplex * * * /
rank: 759
score: 97.32572937011719
patch: if false ;
rank: 760
score: 98.43185763888889
patch: else { if ; break ; } }
rank: 760
score: 98.3711446126302
patch: return ; } } }
rank: 760
score: 98.31031290690105
patch: while return return return ;
rank: 760
score: 98.03610229492188
patch: } return ; * /
rank: 760
score: 97.32118225097656
patch: return ; out
rank: 761
score: 98.43176947699652
patch: return * return ; } } return ;
rank: 761
score: 98.36697823660714
patch: return - - 0 ; }
rank: 761
score: 98.28807373046875
patch: result = comparator ;
rank: 761
score: 98.25667114257813
patch: else { else {
rank: 761
score: 97.59290771484375
patch: throw new ; ;
rank: 761
score: 97.32086944580078
patch: } return /
rank: 762
score: 98.4306640625
patch: } * * * /
rank: 762
score: 98.30502319335938
patch: return ; if return {
rank: 762
score: 98.27933349609376
patch: } return comparator ;
rank: 762
score: 98.253076171875
patch: return * * /
rank: 762
score: 98.16457112630208
patch: return comparator . compare CaMeL
rank: 762
score: 97.5910400390625
patch: return compare ( ;
rank: 762
score: 97.31503295898438
patch: } ; return
rank: 763
score: 98.36505998883929
patch: / * * * / }
rank: 763
score: 98.30415852864583
patch: return ; int else ;
rank: 763
score: 98.27926025390624
patch: return ! simplex ;
rank: 763
score: 98.25304158528645
patch: return original ; break ;
rank: 763
score: 98.02789306640625
patch: return ; ; } }
rank: 763
score: 97.5888427734375
patch: return null ; ;
rank: 763
score: 97.3025131225586
patch: return ; return
rank: 764
score: 98.36299351283482
patch: return simplex ; } } }
rank: 764
score: 98.30335489908855
patch: -- return ; return ;
rank: 764
score: 98.28418986002605
patch: result = comparator . ;
rank: 764
score: 98.27799072265626
patch: return comparator ) ;
rank: 764
score: 97.58819580078125
patch: } catch ;
rank: 764
score: 97.28208923339844
patch: return ; add
rank: 765
score: 98.43015543619792
patch: } else if ; return ; return ;
rank: 765
score: 98.30332438151042
patch: return { else return ;
rank: 765
score: 98.02455647786458
patch: } * return * /
rank: 765
score: 97.23591613769531
patch: return ; append
rank: 766
score: 98.43014187282986
patch: else if return ; else { return ;
rank: 766
score: 98.30303955078125
patch: value { return ; ;
rank: 766
score: 98.2804667154948
patch: return best ; break ;
rank: 766
score: 98.26961059570313
patch: } return reflected ;
rank: 766
score: 98.15853445870536
patch: return 0 ; } else {
rank: 766
score: 98.02421061197917
patch: return true - 1 ;
rank: 766
score: 97.22223663330078
patch: return ; do
rank: 767
score: 98.43006388346355
patch: } if ; break ;
rank: 767
score: 98.35721261160714
patch: return - - 1 ; }
rank: 767
score: 98.24795532226562
patch: fail ( contracted ) ;
rank: 767
score: 98.15172467912946
patch: return null ; } return ;
rank: 767
score: 98.0238037109375
patch: } * ; return ;
rank: 767
score: 97.569580078125
patch: final ;
rank: 767
score: 97.2138442993164
patch: int -- ;
rank: 768
score: 98.42974853515625
patch: } if ; * * * * /
rank: 768
score: 98.35509381975446
patch: return * * / } }
rank: 768
score: 98.30167643229167
patch: i { if return ;
rank: 768
score: 98.02206420898438
patch: return ; } true ;
rank: 768
score: 97.56434326171875
patch: return ( ; }
rank: 768
score: 97.21134948730469
patch: if $NUMBER$ ;
rank: 769
score: 98.42951117621527
patch: } * * * * * * /
rank: 769
score: 98.30044555664062
patch: catch new new return ;
rank: 769
score: 98.24593098958333
patch: return simplex ; * /
rank: 769
score: 98.1431884765625
patch: return best [ 1 ] ;
rank: 769
score: 98.0219217936198
patch: if ; return true ;
rank: 769
score: 97.56426391601562
patch: return this ; ;
rank: 769
score: 97.204833984375
patch: while return ;
rank: 770
score: 98.42936197916667
patch: } else throw null ;
rank: 770
score: 98.26475016276042
patch: return iterator ( ) ;
rank: 770
score: 98.25563557942708
patch: return original . simplex ;
rank: 770
score: 98.14175851004464
patch: return true ; } } }
rank: 770
score: 98.0186055501302
patch: return ; default * ;
rank: 770
score: 97.56183624267578
patch: cached = ;
rank: 770
score: 97.19837951660156
patch: result return ;
rank: 771
score: 98.42930094401042
patch: } else = null ; } catch ;
rank: 771
score: 98.3525390625
patch: return ( int ) null ;
rank: 771
score: 98.25757853190105
patch: return simplex : false ;
rank: 771
score: 98.23809814453125
patch: else { throw null ;
rank: 771
score: 97.56119384765626
patch: return ( new ;
rank: 771
score: 97.15943908691406
patch: throw ; ;
rank: 772
score: 98.42862955729167
patch: } else { } return return return ;
rank: 772
score: 98.34742954799107
patch: return false ; } break ;
rank: 772
score: 98.01563517252605
patch: } else { * /
rank: 772
score: 97.55958251953125
patch: Disposer . return ;
rank: 772
score: 97.14671325683594
patch: return ; System
rank: 773
score: 98.42855495876736
patch: else { return ; ; } catch ;
rank: 773
score: 98.29608154296875
patch: if null { return ;
rank: 773
score: 98.2452392578125
patch: return best . compare ;
rank: 773
score: 98.24503580729167
patch: return simplex : true ;
rank: 773
score: 98.13759068080357
patch: return best . 0 ; }
rank: 773
score: 98.015380859375
patch: final ; return ; }
rank: 773
score: 97.5575180053711
patch: return TRUE ;
rank: 773
score: 97.14502716064453
patch: synchronized return ;
rank: 774
score: 98.33316040039062
patch: return contracted ; break ;
rank: 774
score: 98.2958272298177
patch: try { return true ;
rank: 774
score: 98.24510701497395
patch: return original . compare ;
rank: 774
score: 98.24490356445312
patch: return comparator ; * /
rank: 774
score: 98.23183186848958
patch: fail ( 0 ) ;
rank: 774
score: 97.1429672241211
patch: return ; check
rank: 775
score: 98.42476399739583
patch: break ; } return ;
rank: 775
score: 98.29358927408855
patch: return ; new return ;
rank: 775
score: 98.0140889485677
patch: / ; if ( ;
rank: 775
score: 97.54436645507812
patch: ; if ( ;
rank: 775
score: 97.124755859375
patch: return
rank: 776
score: 98.29146321614583
patch: else { while return ;
rank: 776
score: 98.23748779296875
patch: return original . best ;
rank: 776
score: 98.13553292410714
patch: throw new Runtime CaMeL Exception {
rank: 776
score: 98.01407877604167
patch: return ; , * /
rank: 776
score: 97.5409423828125
patch: return value ; }
rank: 776
score: 97.12344360351562
patch: int ; return
rank: 777
score: 98.28980509440105
patch: return if return return ;
rank: 777
score: 98.23215738932292
patch: } return simplex ; }
rank: 777
score: 98.01322428385417
patch: return ; $NUMBER$ * /
rank: 777
score: 97.53356323242187
patch: else { this .
rank: 777
score: 97.12162017822266
patch: return ; current
rank: 778
score: 98.2288309733073
patch: return best . simplex ;
rank: 778
score: 98.22774251302083
patch: return } / * /
rank: 778
score: 98.0131327311198
patch: return ; ; ; }
rank: 778
score: 97.52666625976562
patch: tree = new ;
rank: 779
score: 98.28910319010417
patch: else if return ; }
rank: 779
score: 98.22869873046875
patch: result = comparator ) ;
rank: 779
score: 98.22664388020833
patch: return 1 ; } }
rank: 779
score: 98.01214599609375
patch: / ; return false ;
rank: 779
score: 97.526220703125
patch: ret = ; }
rank: 779
score: 97.1102523803711
patch: return ; max
rank: 780
score: 98.28763427734376
patch: i ; return ;
rank: 780
score: 98.22825113932292
patch: return original > 0 ;
rank: 780
score: 98.2222900390625
patch: throw final Optimization CaMeL Exception
rank: 780
score: 98.00958251953125
patch: return new Long ( ;
rank: 780
score: 97.10204315185547
patch: return ; --
rank: 781
score: 98.22702026367188
patch: return original [ 0 ]
rank: 781
score: 98.00772094726562
patch: } super . ;
rank: 781
score: 97.52159423828125
patch: else { this ;
rank: 781
score: 97.06913757324219
patch: m return ;
rank: 782
score: 98.41444905598958
patch: } else { else {
rank: 782
score: 98.30950927734375
patch: return comparator . length ;
rank: 782
score: 98.2867431640625
patch: int else = return ;
rank: 782
score: 98.21900431315105
patch: return return . false ;
rank: 782
score: 98.21676635742188
patch: } return original ) ;
rank: 782
score: 98.1307373046875
patch: return null ; } else
rank: 782
score: 98.0067647298177
patch: else return ; } }
rank: 782
score: 97.51828002929688
patch: if ( matches ;
rank: 782
score: 97.06764221191406
patch: if ; String
rank: 783
score: 98.40236409505208
patch: } return return ; }
rank: 783
score: 98.22659301757812
patch: return original . ) ;
rank: 783
score: 98.21898396809895
patch: else { / * /
rank: 783
score: 98.1303202311198
patch: return original ; } else
rank: 783
score: 97.51797485351562
patch: return ; } finally
rank: 783
score: 97.0649185180664
patch: if ; else
rank: 784
score: 98.21400960286458
patch: return return ; } }
rank: 784
score: 98.12913004557292
patch: return ; } } else
rank: 784
score: 98.00487263997395
patch: return ; false * /
rank: 784
score: 97.51457214355469
patch: fail ( ;
rank: 784
score: 97.05829620361328
patch: ! return ;
rank: 785
score: 98.40093994140625
patch: return * return ; }
rank: 785
score: 98.12819417317708
patch: return < 0 ? ;
rank: 785
score: 97.99439697265625
patch: else { throw ;
rank: 785
score: 97.5133056640625
patch: j = ;
rank: 785
score: 97.05072021484375
patch: if ; System
rank: 786
score: 98.40086873372395
patch: } else return * ;
rank: 786
score: 98.2849833170573
patch: if ( reflected ) {
rank: 786
score: 98.28263346354167
patch: i = return ; ;
rank: 786
score: 98.20994059244792
patch: } } / * /
rank: 786
score: 97.98001098632812
patch: * / * /
rank: 786
score: 97.51309967041016
patch: my return ;
rank: 786
score: 97.05070495605469
patch: return ; in
rank: 787
score: 98.28424072265625
patch: / / * /
rank: 787
score: 98.28041585286458
patch: return ; value return ;
rank: 787
score: 98.2065938313802
patch: } } return false ;
rank: 787
score: 97.512841796875
patch: if ( matches )
rank: 787
score: 97.03707885742188
patch: return ; value
rank: 788
score: 98.3992411295573
patch: } ; return return ;
rank: 788
score: 98.28406778971355
patch: throw null ; } }
rank: 788
score: 98.27944946289062
patch: return return ; int else
rank: 788
score: 97.0361099243164
patch: return ; public
rank: 789
score: 98.2794189453125
patch: return { return ; /
rank: 789
score: 98.20158081054687
patch: } return contracted ;
rank: 789
score: 97.95477294921875
patch: else { ; }
rank: 789
score: 97.50574340820313
patch: if ( enable )
rank: 789
score: 97.03406524658203
patch: return ; last
rank: 790
score: 98.2788594563802
patch: return { * return ;
rank: 790
score: 98.20442708333333
patch: else { return ) ;
rank: 790
score: 98.11128743489583
patch: break { return ; }
rank: 790
score: 97.50559997558594
patch: return ( ;
rank: 790
score: 97.03340148925781
patch: return ; Illegal
rank: 791
score: 98.27884928385417
patch: i { new return ;
rank: 791
score: 98.26358032226562
patch: return ; } break ;
rank: 791
score: 98.20027669270833
patch: break ; break ; }
rank: 791
score: 98.10460205078125
patch: found = false ;
rank: 791
score: 97.50473022460938
patch: if ( true )
rank: 791
score: 97.01241048177083
patch: } return
rank: 792
score: 98.19524536132812
patch: } return original ;
rank: 792
score: 98.10167439778645
patch: return true ; return ;
rank: 792
score: 97.500830078125
patch: final return ( ;
rank: 792
score: 97.00835418701172
patch: int else ;
rank: 793
score: 98.27272542317708
patch: value { return return ;
rank: 793
score: 98.199560546875
patch: return return simplex ;
rank: 793
score: 98.19784545898438
patch: result = simplex . ;
rank: 793
score: 98.19481404622395
patch: } } return simplex ;
rank: 793
score: 98.09854888916016
patch: break { }
rank: 793
score: 97.94351806640626
patch: } ) ; ;
rank: 794
score: 98.38351440429688
patch: else if ; * /
rank: 794
score: 98.27260335286458
patch: / * return return {
rank: 794
score: 98.2573750813802
patch: return simplex : reflected ;
rank: 794
score: 98.1995137532552
patch: return ( void ) {
rank: 794
score: 97.49671630859375
patch: dim = ; }
rank: 794
score: 96.9903335571289
patch: return ; to
rank: 795
score: 98.38058471679688
patch: } else ;
rank: 795
score: 98.27178955078125
patch: else { return value ;
rank: 795
score: 98.19774373372395
patch: result ( contracted ) ;
rank: 795
score: 98.19662475585938
patch: return * / comparator ;
rank: 795
score: 97.9388656616211
patch: * / ;
rank: 795
score: 97.49647216796875
patch: else { remove ;
rank: 796
score: 98.26978759765625
patch: ] { return ;
rank: 796
score: 98.19647216796875
patch: result ( best ) ;
rank: 796
score: 98.09112548828125
patch: continue ; } return ;
rank: 796
score: 97.49615478515625
patch: id = ;
rank: 796
score: 96.98826599121094
patch: } return =
rank: 797
score: 98.37411499023438
patch: } else if null ;
rank: 797
score: 98.26580810546875
patch: return = return ; }
rank: 797
score: 98.23691813151042
patch: return / * / }
rank: 797
score: 98.18977864583333
patch: } return best ) ;
rank: 797
score: 98.18973795572917
patch: } } return true ;
rank: 797
score: 98.0906473795573
patch: result = best ; }
rank: 797
score: 97.93368530273438
patch: } ; ) ;
rank: 797
score: 97.49337158203124
patch: } else new ;
rank: 797
score: 96.97903442382812
patch: throw ;
rank: 798
score: 98.26475016276042
patch: return { break ; }
rank: 798
score: 98.1844482421875
patch: return gamma ; } }
rank: 798
score: 98.09014892578125
patch: return ( ) ;
rank: 798
score: 97.93094482421876
patch: * ; * /
rank: 798
score: 97.48594970703125
patch: synchronized ( return )
rank: 798
score: 96.97441101074219
patch: if true ;
rank: 799
score: 98.37149047851562
patch: } else { synchronized ;
rank: 799
score: 98.18375651041667
patch: return return - $NUMBER$ ;
rank: 799
score: 98.08778889973958
patch: return . length ; }
rank: 799
score: 97.93069458007812
patch: / ; * /
rank: 799
score: 97.48402099609375
patch: return finally { ;
rank: 799
score: 96.97250366210938
patch: if ; *
rank: 800
score: 98.371142578125
patch: else = return ;
rank: 800
score: 98.19174194335938
patch: break ; } break ;
rank: 800
score: 97.48244222005208
patch: } }
rank: 800
score: 96.96931457519531
patch: return ; print
rank: 801
score: 98.3704833984375
patch: } else break ;
rank: 801
score: 98.26209106445313
patch: else { break ;
rank: 801
score: 97.48228759765625
patch: String name = ;
rank: 801
score: 96.96542358398438
patch: return ; double
rank: 802
score: 98.37014770507812
patch: } if ; * /
rank: 802
score: 98.26051839192708
patch: ; return ; return ;
rank: 802
score: 98.229248046875
patch: return reflected ; * /
rank: 802
score: 98.18501790364583
patch: return best * * /
rank: 802
score: 97.907568359375
patch: } ; if ;
rank: 802
score: 97.48185424804687
patch: if ( ; return
rank: 802
score: 96.96480560302734
patch: return ; default
rank: 803
score: 98.17942301432292
patch: result = true ; }
rank: 803
score: 98.16864013671875
patch: return * / ;
rank: 803
score: 98.07161458333333
patch: return best . 0 ;
rank: 803
score: 97.48124694824219
patch: return = ;
rank: 803
score: 96.95590209960938
patch: if ; boolean
rank: 804
score: 98.25967407226562
patch: / finally { return ;
rank: 804
score: 98.22584025065105
patch: / * * / }
rank: 804
score: 98.17941284179688
patch: ret = simplex ;
rank: 804
score: 98.0687764485677
patch: return comparator ; return ;
rank: 804
score: 97.8982421875
patch: } ; / ;
rank: 804
score: 97.47840576171875
patch: l = ; }
rank: 804
score: 96.9556655883789
patch: return ; get
rank: 805
score: 98.36529541015625
patch: } return return $NUMBER$ ;
rank: 805
score: 98.25879923502605
patch: final else { return ;
rank: 805
score: 98.06715901692708
patch: break { } } }
rank: 805
score: 97.46961975097656
patch: return continue ;
rank: 805
score: 96.95127868652344
patch: new return ;
rank: 806
score: 98.25674438476562
patch: else if new return ;
rank: 806
score: 98.16495768229167
patch: else { return original ;
rank: 806
score: 97.89506225585937
patch: else return null ;
rank: 806
score: 97.46708170572917
patch: * /
rank: 806
score: 96.93375396728516
patch: throw if ;
rank: 807
score: 98.35725911458333
patch: } return = false ;
rank: 807
score: 98.21595255533855
patch: / / * * /
rank: 807
score: 98.17641194661458
patch: return comparator . compare ;
rank: 807
score: 98.1714375813802
patch: return best ; * /
rank: 807
score: 98.16397094726562
patch: return ; else { }
rank: 807
score: 97.88194580078125
patch: return ; null ;
rank: 807
score: 97.45948791503906
patch: text = ;
rank: 807
score: 96.93301391601562
patch: start return ;
rank: 808
score: 98.25637817382812
patch: return return return out ;
rank: 808
score: 98.21572875976562
patch: } / * / }
rank: 808
score: 98.17630004882812
patch: return khi ) ;
rank: 808
score: 97.88001708984375
patch: return ; / *
rank: 808
score: 97.4586669921875
patch: finally if ( ;
rank: 808
score: 96.93024444580078
patch: return ; start
rank: 809
score: 98.35145060221355
patch: } return * * /
rank: 809
score: 98.25596110026042
patch: try { return return {
rank: 809
score: 97.45323944091797
patch: label = ;
rank: 809
score: 96.92549133300781
patch: if null ;
rank: 810
score: 98.2511698404948
patch: / ; return return ;
rank: 810
score: 98.17030843098958
patch: return simplex * * /
rank: 810
score: 97.44898071289063
patch: } final int ;
rank: 810
score: 96.92447662353516
patch: return ; Array
rank: 811
score: 98.34906005859375
patch: else { return ; else
rank: 811
score: 98.25110473632813
patch: / else return ;
rank: 811
score: 98.16676839192708
patch: } return false ; }
rank: 811
score: 98.0532470703125
patch: continue ) ; }
rank: 811
score: 97.44861450195313
patch: else { null ;
rank: 812
score: 98.34825642903645
patch: } if return ; }
rank: 812
score: 98.2472635904948
patch: assert true ; return ;
rank: 812
score: 96.91590118408203
patch: if * /
rank: 813
score: 98.247216796875
patch: return return ; int
rank: 813
score: 98.15622965494792
patch: return ) ; } }
rank: 813
score: 97.85907592773438
patch: } finally return ;
rank: 813
score: 97.444091796875
patch: finally return ;
rank: 813
score: 96.91439819335938
patch: if this ;
rank: 814
score: 98.34740193684895
patch: } else if ; }
rank: 814
score: 98.24650065104167
patch: return return ; value {
rank: 814
score: 98.20313517252605
patch: } / / * /
rank: 814
score: 98.16372680664062
patch: result = contracted ; }
rank: 814
score: 98.04019165039062
patch: result = reflected ;
rank: 814
score: 96.9056396484375
patch: return ; Object
rank: 815
score: 98.24625651041667
patch: value return ; return ;
rank: 815
score: 98.2014892578125
patch: / * / }
rank: 815
score: 98.16260782877605
patch: result = comparator ; }
rank: 815
score: 98.15327962239583
patch: return * / } /
rank: 815
score: 97.44287109375
patch: catch ( Throwable ;
rank: 816
score: 98.3442891438802
patch: } else } return ;
rank: 816
score: 98.24586995442708
patch: finally { return return ;
rank: 816
score: 98.15528361002605
patch: return ( void ) ;
rank: 816
score: 98.1490478515625
patch: throw iterate CaMeL Simplex ;
rank: 816
score: 98.0390625
patch: break ; } else
rank: 816
score: 97.84954833984375
patch: done = false ;
rank: 816
score: 97.44134521484375
patch: * * /
rank: 816
score: 96.78898111979167
patch: if ;
rank: 817
score: 98.33560180664062
patch: } return return 1 ;
rank: 817
score: 98.24515787760417
patch: finally { if return ;
rank: 817
score: 98.1458028157552
patch: return original ; * /
rank: 817
score: 97.8456787109375
patch: return ; default ;
rank: 817
score: 97.440234375
patch: result = ( ;
rank: 817
score: 96.78434244791667
patch: System ;
rank: 818
score: 98.33019409179687
patch: } return * ;
rank: 818
score: 98.24512736002605
patch: else if return return ;
rank: 818
score: 97.43948364257812
patch: repaint ( ;
rank: 818
score: 96.67113240559895
patch: result ;
rank: 819
score: 98.2447509765625
patch: finally { return ; ;
rank: 819
score: 96.5652364095052
patch: / ;
rank: 820
score: 98.24454752604167
patch: for return return return ;
rank: 820
score: 98.1448465983073
patch: return this ; else {
rank: 820
score: 98.14180501302083
patch: return return * / ;
rank: 820
score: 98.025439453125
patch: return original [ ;
rank: 820
score: 96.501708984375
patch: this ;
rank: 821
score: 98.3264668782552
patch: } else return ; }
rank: 821
score: 98.24158732096355
patch: * * return return ;
rank: 821
score: 98.19326782226562
patch: return Boolean . false ;
rank: 821
score: 98.13167114257813
patch: throw new Optimization CaMeL
rank: 821
score: 97.42543538411458
patch: assert ;
rank: 821
score: 96.45138549804688
patch: /
rank: 822
score: 98.2403055826823
patch: result { return return ;
rank: 822
score: 98.18709309895833
patch: return this . reflected ;
rank: 822
score: 98.15228271484375
patch: return ( contracted )
rank: 822
score: 98.14219156901042
patch: if ( gamma ) {
rank: 822
score: 98.02325439453125
patch: return $STRING$ ; }
rank: 822
score: 97.42388916015625
patch: return reversed ;
rank: 822
score: 96.45045979817708
patch: logger ;
rank: 823
score: 98.32480875651042
patch: } else { * ;
rank: 823
score: 98.2396240234375
patch: return { for return {
rank: 823
score: 98.18487548828125
patch: return / / * /
rank: 823
score: 98.14200846354167
patch: else original = simplex ;
rank: 823
score: 97.42379760742188
patch: tree = ;
rank: 823
score: 96.4280293782552
patch: else ;
rank: 824
score: 98.23870849609375
patch: return { int else ;
rank: 824
score: 98.1835205078125
patch: return / * /
rank: 824
score: 98.14501953125
patch: throw $NUMBER$ ;
rank: 824
score: 98.1273905436198
patch: } } return comparator ;
rank: 824
score: 97.42247924804687
patch: / * * ;
rank: 824
score: 96.33944702148438
patch: try
rank: 825
score: 98.23384602864583
patch: i if return ; ;
rank: 825
score: 98.14347330729167
patch: break ; } * /
rank: 825
score: 98.133203125
patch: else { } }
rank: 825
score: 98.1257080078125
patch: return ! contracted ;
rank: 825
score: 97.81192626953126
patch: return ; false ;
rank: 825
score: 97.40538024902344
patch: return void ;
rank: 825
score: 96.31451416015625
patch: int ;
rank: 826
score: 98.321044921875
patch: return * ;
rank: 826
score: 98.23336791992188
patch: int return ( int ;
rank: 826
score: 98.17764282226562
patch: simplex = reflected ;
rank: 826
score: 98.14104614257812
patch: break ; break ;
rank: 826
score: 98.1323974609375
patch: return . true ;
rank: 826
score: 98.01767985026042
patch: return original [ comparator .
rank: 826
score: 97.39667510986328
patch: return ++ ;
rank: 827
score: 98.23211669921875
patch: * return ; return ;
rank: 827
score: 98.01729736328124
patch: continue ; } else
rank: 827
score: 97.81024169921875
patch: } * ; /
rank: 827
score: 97.39295959472656
patch: return clone ;
rank: 827
score: 96.27852376302083
patch: return else
rank: 828
score: 98.31702677408855
patch: return * ; return ;
rank: 828
score: 98.23049926757812
patch: else { value return ;
rank: 828
score: 98.1624043782552
patch: return ( final ) ;
rank: 828
score: 98.11808268229167
patch: return return true ; }
rank: 828
score: 98.01690673828125
patch: return false ; return ;
rank: 828
score: 97.37723541259766
patch: return && ;
rank: 828
score: 96.23739624023438
patch: / /
rank: 829
score: 98.31241861979167
patch: else { return * ;
rank: 829
score: 98.23004150390625
patch: / ] { return ;
rank: 829
score: 98.121337890625
patch: return null ; else {
rank: 829
score: 98.11564127604167
patch: return ! simplex ; }
rank: 829
score: 98.0162353515625
patch: throw throws Runtime CaMeL Exception
rank: 829
score: 97.37654113769531
patch: else { ;
rank: 829
score: 96.20181274414062
patch: int
rank: 830
score: 98.31190999348958
patch: } return return in ;
rank: 830
score: 98.22994384765624
patch: return return ; /
rank: 830
score: 98.11678466796874
patch: return return 1 ;
rank: 830
score: 98.01588134765625
patch: return comparator ; else
rank: 830
score: 96.20029703776042
patch: return /
rank: 831
score: 98.3097635904948
patch: return * * return /
rank: 831
score: 98.22923787434895
patch: return return return ; /
rank: 831
score: 98.15690104166667
patch: if ( contracted ) {
rank: 831
score: 98.13114420572917
patch: return ( null ) ;
rank: 831
score: 98.1147969563802
patch: else { { return ;
rank: 831
score: 98.0134989420573
patch: return best ; return ;
rank: 831
score: 97.80164794921875
patch: success = false ;
rank: 831
score: 97.35608673095703
patch: return FALSE ;
rank: 831
score: 96.16912841796875
patch: try ;
rank: 832
score: 98.30797322591145
patch: * * * return ;
rank: 832
score: 98.22913614908855
patch: case return ; return ;
rank: 832
score: 98.15541585286458
patch: return [ $NUMBER$ ] ;
rank: 832
score: 97.80056762695312
patch: } ? * /
rank: 832
score: 96.1558837890625
patch: ; ;
rank: 833
score: 98.2283935546875
patch: catch new return ;
rank: 833
score: 98.09839884440105
patch: ret = simplex ; }
rank: 833
score: 98.0123046875
patch: return best ; else
rank: 833
score: 97.3547134399414
patch: return get ;
rank: 833
score: 96.14896647135417
patch: buf ;
rank: 834
score: 98.22786865234374
patch: for return false ;
rank: 834
score: 98.1077880859375
patch: synchronized ( original ) {
rank: 834
score: 98.0947977701823
patch: } return best ; }
rank: 834
score: 97.79229736328125
patch: dirty = false ;
rank: 834
score: 97.35314178466797
patch: finally { ;
rank: 834
score: 96.13519287109375
patch: buffer ;
rank: 835
score: 98.29416910807292
patch: return * return false ;
rank: 835
score: 98.2259521484375
patch: return { if ;
rank: 835
score: 98.14903767903645
patch: return this ; break ;
rank: 835
score: 98.12428588867188
patch: result = original ;
rank: 835
score: 97.34993743896484
patch: update return ;
rank: 835
score: 96.05183919270833
patch: String ;
rank: 836
score: 98.2926534016927
patch: * * * * ;
rank: 836
score: 98.2231201171875
patch: return - return ;
rank: 836
score: 98.1194356282552
patch: return original * * /
rank: 836
score: 97.789013671875
patch: } ; / *
rank: 836
score: 97.34841918945312
patch: return & ;
rank: 836
score: 96.05039978027344
patch: throw
rank: 837
score: 98.21378784179687
patch: j if return ;
rank: 837
score: 98.08603922526042
patch: return * / original ;
rank: 837
score: 98.0029296875
patch: ret = best ;
rank: 837
score: 97.34617614746094
patch: l = ;
rank: 837
score: 96.03786214192708
patch: LOG ;
rank: 838
score: 98.13912963867188
patch: iterate CaMeL Simplex ++ ;
rank: 838
score: 98.09671020507812
patch: return } }
rank: 838
score: 97.99857584635417
patch: return best . get CaMeL
rank: 838
score: 97.78535766601563
patch: * / ; ;
rank: 838
score: 97.33363342285156
patch: return max ;
rank: 838
score: 95.98812866210938
patch: else
rank: 839
score: 98.20289306640625
patch: assert return false ;
rank: 839
score: 98.10215250651042
patch: result = contracted ) ;
rank: 839
score: 98.08943481445313
patch: return break ; }
rank: 839
score: 97.78421020507812
patch: } } ) ;
rank: 839
score: 97.33203125
patch: else break ;
rank: 839
score: 95.9747314453125
patch: start ;
rank: 840
score: 98.20155029296875
patch: return return ; else
rank: 840
score: 98.13472493489583
patch: / * / } }
rank: 840
score: 98.08592732747395
patch: throw null ; else {
rank: 840
score: 98.08316040039062
patch: } return khi ;
rank: 840
score: 97.77835693359376
patch: update ; return ;
rank: 840
score: 97.3301010131836
patch: pos = ;
rank: 840
score: 95.9718017578125
patch: super ;
rank: 841
score: 98.28322347005208
patch: return * * false ;
rank: 841
score: 98.09604899088542
patch: throw * / * /
rank: 841
score: 98.08230590820312
patch: return . false ;
rank: 841
score: 98.07591552734375
patch: simplex = null ;
rank: 841
score: 97.777392578125
patch: } ; * ;
rank: 841
score: 97.31969451904297
patch: final Object ;
rank: 842
score: 98.28269449869792
patch: return * - 1 ;
rank: 842
score: 98.19599914550781
patch: i return ;
rank: 842
score: 98.12242635091145
patch: return null ; break ;
rank: 842
score: 98.0922139485677
patch: return reflected = best ;
rank: 842
score: 97.77640380859376
patch: final ; ; ;
rank: 842
score: 97.31645965576172
patch: cmp = ;
rank: 842
score: 95.92681884765625
patch: Logger ;
rank: 843
score: 98.28258260091145
patch: } return += return ;
rank: 843
score: 98.19188842773437
patch: n { return ;
rank: 843
score: 98.12041015625
patch: Simplex = reflected ;
rank: 843
score: 98.09158325195312
patch: result [ 0 ] ;
rank: 843
score: 97.31512451171875
patch: } break ;
rank: 844
score: 98.28175862630208
patch: } if return false ;
rank: 844
score: 98.18145751953125
patch: catch ( $STRING$ ;
rank: 844
score: 98.11998494466145
patch: result = false ; }
rank: 844
score: 98.0684102376302
patch: return contracted ) ; }
rank: 844
score: 98.06575927734374
patch: return } else {
rank: 844
score: 97.31287384033203
patch: return do ;
rank: 844
score: 95.91424560546875
patch: ret ;
rank: 845
score: 98.27860514322917
patch: return * return * /
rank: 845
score: 98.17920532226563
patch: return { ; ;
rank: 845
score: 98.11883544921875
patch: if ( ! reflected ;
rank: 845
score: 97.98634643554688
patch: break { else {
rank: 845
score: 97.76554565429687
patch: } / * ;
rank: 845
score: 97.31222534179688
patch: style = ;
rank: 845
score: 95.84171549479167
patch: log ;
rank: 846
score: 98.27505493164062
patch: } ; if return ;
rank: 846
score: 97.98419189453125
patch: return ; } {
rank: 846
score: 97.76536865234375
patch: } ; new ;
rank: 846
score: 97.31167602539062
patch: return compare ;
rank: 846
score: 95.83856201171875
patch: sb ;
rank: 847
score: 98.1664326985677
patch: return {
rank: 847
score: 98.11342366536458
patch: return * * simplex ;
rank: 847
score: 98.08260091145833
patch: return original <= 0 ?
rank: 847
score: 98.0509521484375
patch: else { * /
rank: 847
score: 97.30839538574219
patch: initialize ( ;
rank: 847
score: 95.83267211914062
patch: / else
rank: 848
score: 98.27213541666667
patch: } else return 0 ;
rank: 848
score: 98.15975952148438
patch: return return ; *
rank: 848
score: 97.7641845703125
patch: } return reversed ;
rank: 848
score: 97.30815887451172
patch: frame = ;
rank: 848
score: 95.79662068684895
patch: else /
rank: 849
score: 98.27178955078125
patch: } } if return ;
rank: 849
score: 98.14816284179688
patch: / catch return ;
rank: 849
score: 98.07712809244792
patch: throw $NUMBER$ * * /
rank: 849
score: 98.04928588867188
patch: simplex = simplex ;
rank: 849
score: 98.035986328125
patch: return return original ;
rank: 849
score: 97.9752705891927
patch: return reflected ; } else
rank: 849
score: 97.30099487304688
patch: return start ;
rank: 849
score: 95.79432169596355
patch: throw int
rank: 850
score: 98.26907348632812
patch: else if return ; else
rank: 850
score: 98.14715576171875
patch: / return return ;
rank: 850
score: 98.10909016927083
patch: return return reflected ; }
rank: 850
score: 98.03372192382812
patch: return return comparator ;
rank: 850
score: 97.76357421875
patch: loaded = true ;
rank: 850
score: 95.78551228841145
patch: boolean else
rank: 851
score: 98.26873779296875
patch: } else { } else
rank: 851
score: 98.14314575195313
patch: return ; int else
rank: 851
score: 98.0391845703125
patch: } } }
rank: 851
score: 97.9681396484375
patch: break { * /
rank: 851
score: 97.29002888997395
patch: catch ;
rank: 851
score: 95.778076171875
patch: Assert ;
rank: 852
score: 98.13567504882812
patch: value = return ;
rank: 852
score: 98.10565795898438
patch: reflected = reflected ;
rank: 852
score: 97.96746215820312
patch: return true ; else
rank: 852
score: 97.28714752197266
patch: root = ;
rank: 852
score: 95.69889322916667
patch: else else
rank: 853
score: 98.26751708984375
patch: * * * /
rank: 853
score: 98.1051737467448
patch: result = null ; }
rank: 853
score: 98.03749389648438
patch: } throw null ;
rank: 853
score: 98.02476196289062
patch: return = simplex ;
rank: 853
score: 97.96685791015625
patch: return contracted ; else {
rank: 853
score: 97.75050659179688
patch: * return null ;
rank: 853
score: 97.28181457519531
patch: return name ;
rank: 853
score: 95.6978047688802
patch: ; else
rank: 854
score: 98.26727294921875
patch: } if ( false ;
rank: 854
score: 98.12846069335937
patch: while return return ;
rank: 854
score: 97.280517578125
patch: loop = ;
rank: 854
score: 95.6857401529948
patch: int else
rank: 855
score: 98.26575724283855
patch: } return * false ;
rank: 855
score: 98.099853515625
patch: return best : false ;
rank: 855
score: 97.95825805664063
patch: return . length ;
rank: 855
score: 97.74666748046874
patch: } } ; ;
rank: 855
score: 97.28033447265625
patch: lock ( ;
rank: 855
score: 95.6827901204427
patch: throw else
rank: 856
score: 98.12509155273438
patch: return + return ;
rank: 856
score: 98.09852091471355
patch: return reflected ; } ;
rank: 856
score: 98.01019287109375
patch: return / * }
rank: 856
score: 97.74653930664063
patch: return true * /
rank: 856
score: 97.27934265136719
patch: return remove ;
rank: 856
score: 95.67323811848958
patch: value ;
rank: 857
score: 98.124462890625
patch: return return return ||
rank: 857
score: 98.06716918945312
patch: result = original ; }
rank: 857
score: 97.99315795898437
patch: return return ) ;
rank: 857
score: 97.2793197631836
patch: t = ;
rank: 857
score: 95.64377848307292
patch: e ;
rank: 858
score: 98.26381429036458
patch: } return return ; ;
rank: 858
score: 98.1212158203125
patch: if ( true ;
rank: 858
score: 98.00078125
patch: return simplex . ;
rank: 858
score: 97.740869140625
patch: } * / }
rank: 858
score: 97.27873992919922
patch: return exp ;
rank: 858
score: 95.62727864583333
patch: do ;
rank: 859
score: 98.11597900390625
patch: i return ; ;
rank: 859
score: 98.0543721516927
patch: return contracted * * /
rank: 859
score: 98.0004150390625
patch: return return reflected ;
rank: 859
score: 97.95128377278645
patch: return 0 ; } else
rank: 859
score: 97.73549194335938
patch: } if ; ;
rank: 859
score: 97.27836608886719
patch: inst = ;
rank: 859
score: 95.6224873860677
patch: out ;
rank: 860
score: 98.26156616210938
patch: } return return += ;
rank: 860
score: 97.99943237304687
patch: } return ) ;
rank: 860
score: 97.94464111328125
patch: throw throws Optimization CaMeL Exception
rank: 860
score: 97.2690658569336
patch: priority = ;
rank: 860
score: 95.59956868489583
patch: found ;
rank: 861
score: 98.25552368164062
patch: } return out ;
rank: 861
score: 97.94448852539062
patch: return ! best ;
rank: 861
score: 97.724609375
patch: return ; final ;
rank: 861
score: 97.26741027832031
patch: cp = ;
rank: 861
score: 95.59615071614583
patch: long ;
rank: 862
score: 98.1091064453125
patch: synchronized return true ;
rank: 862
score: 98.04520670572917
patch: assert best != null ;
rank: 862
score: 97.94338989257812
patch: break {
rank: 862
score: 97.72257690429687
patch: return false * /
rank: 862
score: 97.26657104492188
patch: return cast ;
rank: 862
score: 95.59156036376953
patch: result
rank: 863
score: 98.10847778320313
patch: * return return ;
rank: 863
score: 98.06722412109374
patch: return ! reflected ;
rank: 863
score: 98.04458618164062
patch: return else { return ;
rank: 863
score: 97.99572143554687
patch: } break ; }
rank: 863
score: 97.94234212239583
patch: return this ; } else
rank: 863
score: 97.7193115234375
patch: return new Double ;
rank: 863
score: 97.26608276367188
patch: alias = ;
rank: 863
score: 95.58899943033855
patch: text ;
rank: 864
score: 98.22673950195312
patch: else = false ;
rank: 864
score: 97.93502807617188
patch: return false ; else
rank: 864
score: 97.715673828125
patch: return ; case ;
rank: 864
score: 97.26564025878906
patch: return static ;
rank: 864
score: 95.5888671875
patch: return *
rank: 865
score: 98.20881958007813
patch: } } if ;
rank: 865
score: 98.10154418945312
patch: while ( return ;
rank: 865
score: 98.04005126953125
patch: ret = true ;
rank: 865
score: 97.98602294921875
patch: / * * }
rank: 865
score: 97.93496704101562
patch: return [ ] ;
rank: 865
score: 97.2528305053711
patch: resolved = ;
rank: 865
score: 95.58856201171875
patch: final return
rank: 866
score: 98.198095703125
patch: } return * /
rank: 866
score: 98.09882202148438
patch: return = ; ;
rank: 866
score: 98.03624267578125
patch: return * simplex ;
rank: 866
score: 98.02316284179688
patch: break ; * /
rank: 866
score: 97.98308715820312
patch: return } return ;
rank: 866
score: 97.70662231445313
patch: } } finally {
rank: 866
score: 97.25249481201172
patch: retval = ;
rank: 866
score: 95.58753458658855
patch: error ;
rank: 867
score: 98.17304077148438
patch: } else { try
rank: 867
score: 98.08717651367188
patch: return . return ;
rank: 867
score: 98.01651000976562
patch: if ( reflected ;
rank: 867
score: 97.98143920898437
patch: throw new Illegal CaMeL
rank: 867
score: 97.945751953125
patch: return } ) ;
rank: 867
score: 97.92750854492188
patch: throw simplex ; }
rank: 867
score: 97.70341796875
patch: return ; default ?
rank: 867
score: 97.24987030029297
patch: constructor = ;
rank: 867
score: 95.57852172851562
patch: default ;
rank: 868
score: 98.1729248046875
patch: } else continue ;
rank: 868
score: 98.0834716796875
patch: return return return }
rank: 868
score: 97.94412231445312
patch: return }
rank: 868
score: 97.24984741210938
patch: return digit ;
rank: 868
score: 95.578125
patch: tree ;
rank: 869
score: 98.0810302734375
patch: else { / ;
rank: 869
score: 97.94194946289062
patch: break ; else {
rank: 869
score: 97.91480102539063
patch: throw new $STRING$ ;
rank: 869
score: 97.70147094726562
patch: this . ; ;
rank: 869
score: 97.24623107910156
patch: filtered = ;
rank: 869
score: 95.57558186848958
patch: throw new
rank: 870
score: 97.995751953125
patch: return list ; }
rank: 870
score: 97.9777587890625
patch: original = simplex ;
rank: 870
score: 97.24424743652344
patch: return trim ;
rank: 870
score: 95.56929524739583
patch: try /
rank: 871
score: 97.24213409423828
patch: tp = ;
rank: 871
score: 95.52912902832031
patch: ;
rank: 872
score: 98.14803466796874
patch: else throw return ;
rank: 872
score: 98.0026123046875
patch: convergence = reflected ;
rank: 872
score: 97.6984130859375
patch: if ; * /
rank: 872
score: 95.50199127197266
patch: boolean
rank: 873
score: 98.072021484375
patch: return return = ;
rank: 873
score: 97.93475341796875
patch: return * 0 ;
rank: 873
score: 97.69769287109375
patch: finally return ; }
rank: 873
score: 97.22935485839844
patch: ws = ;
rank: 873
score: 95.26438903808594
patch: 
rank: 874
score: 98.13341674804687
patch: return * false ;
rank: 874
score: 98.06717529296876
patch: else { * ;
rank: 874
score: 97.8897705078125
patch: break { return ;
rank: 874
score: 97.2258529663086
patch: complete = ;
rank: 874
score: 95.18939208984375
patch: String
rank: 875
score: 98.133349609375
patch: } if ; else
rank: 875
score: 98.06676635742187
patch: ++ return return ;
rank: 875
score: 97.969580078125
patch: return ! true ;
rank: 875
score: 97.88740234375
patch: match = true ;
rank: 875
score: 97.22301483154297
patch: assert true ;
rank: 875
score: 95.11595153808594
patch: do
rank: 876
score: 98.12042999267578
patch: else { else
rank: 876
score: 98.06484375
patch: / ++ return ;
rank: 876
score: 97.92886352539062
patch: throw simplex ;
rank: 876
score: 97.87974243164062
patch: return comparator simplex ;
rank: 876
score: 97.68906860351562
patch: running = true ;
rank: 876
score: 97.2226791381836
patch: return in ;
rank: 876
score: 95.10346984863281
patch: System
rank: 877
score: 98.11705322265625
patch: } else { finally
rank: 877
score: 98.06278991699219
patch: return return return
rank: 877
score: 97.96075439453125
patch: result = 0 ;
rank: 877
score: 95.09744262695312
patch: last
rank: 878
score: 97.95505981445312
patch: return original * /
rank: 878
score: 97.21952819824219
patch: def = ;
rank: 878
score: 95.03816223144531
patch: finally
rank: 879
score: 98.055859375
patch: i = false ;
rank: 879
score: 97.95394287109374
patch: return reflected $NUMBER$ ;
rank: 879
score: 97.95276489257813
patch: } return gamma ;
rank: 879
score: 97.86517333984375
patch: return true ) ;
rank: 879
score: 97.67954711914062
patch: loaded = false ;
rank: 879
score: 97.21228790283203
patch: block = ;
rank: 879
score: 94.8577880859375
patch: long
rank: 880
score: 98.08529663085938
patch: return * return /
rank: 880
score: 97.94197387695313
patch: } / * }
rank: 880
score: 97.67898559570312
patch: global . return ;
rank: 880
score: 97.21163177490234
patch: do { ;
rank: 880
score: 94.76483154296875
patch: count
rank: 881
score: 98.05357055664062
patch: return { for ;
rank: 881
score: 97.9081039428711
patch: else { {
rank: 881
score: 97.67208862304688
patch: * return ; ;
rank: 881
score: 97.21001434326172
patch: ret = ;
rank: 881
score: 94.66107177734375
patch: ret
rank: 882
score: 98.04903564453124
patch: ] return return ;
rank: 882
score: 97.93768310546875
patch: return original 1 ;
rank: 882
score: 97.8420166015625
patch: case 0 : {
rank: 882
score: 97.20600891113281
patch: return ; ,
rank: 882
score: 94.63497924804688
patch: Logger
rank: 883
score: 98.07057495117188
patch: } return = ;
rank: 883
score: 97.6651123046875
patch: } ; final ;
rank: 883
score: 97.20538330078125
patch: key = ;
rank: 883
score: 94.41058349609375
patch: current
rank: 884
score: 98.06582641601562
patch: } return ; else
rank: 884
score: 98.0460693359375
patch: v { return ;
rank: 884
score: 97.93340454101562
patch: return original [ 0
rank: 884
score: 97.20500183105469
patch: return reverse ;
rank: 884
score: 94.35932922363281
patch: default
rank: 885
score: 98.05792846679688
patch: else if ; else
rank: 885
score: 98.044287109375
patch: s { return ;
rank: 885
score: 97.96246948242188
patch: return ! false ;
rank: 885
score: 97.93094482421876
patch: result = this ;
rank: 885
score: 97.83270874023438
patch: return return best ;
rank: 885
score: 97.20237731933594
patch: previous = ;
rank: 885
score: 94.33380126953125
patch: f
rank: 886
score: 98.04342651367188
patch: i return true ;
rank: 886
score: 97.93045654296876
patch: throw $NUMBER$ ; }
rank: 886
score: 97.91350555419922
patch: throw 0 ;
rank: 886
score: 97.82907104492188
patch: return { } }
rank: 886
score: 97.64708862304687
patch: ? * return ;
rank: 886
score: 97.20037841796875
patch: wreturn ;
rank: 886
score: 94.33268737792969
patch: value
rank: 887
score: 98.04114990234375
patch: i * return ;
rank: 887
score: 97.94869995117188
patch: return = reflected ;
rank: 887
score: 97.92810821533203
patch: return iterator ;
rank: 887
score: 97.89534301757813
patch: else { comparator ;
rank: 887
score: 97.19944763183594
patch: node = ;
rank: 887
score: 94.32656860351562
patch: start
rank: 888
score: 98.04076538085937
patch: it { return ;
rank: 888
score: 97.94529418945312
patch: expanded = reflected ;
rank: 888
score: 97.9030517578125
patch: return return $NUMBER$ ;
rank: 888
score: 97.89310302734376
patch: else { return }
rank: 888
score: 97.64500122070312
patch: } ; ; }
rank: 888
score: 97.19444274902344
patch: contact = ;
rank: 888
score: 94.31431579589844
patch: max
rank: 889
score: 98.0404541015625
patch: text { return ;
rank: 889
score: 97.90003662109375
patch: return . 0 ;
rank: 889
score: 97.82130126953125
patch: case - 1 :
rank: 889
score: 97.637451171875
patch: running = false ;
rank: 889
score: 94.30327606201172
patch: found
rank: 890
score: 98.03714599609376
patch: l { return ;
rank: 890
score: 98.03017578125
patch: } return break ;
rank: 890
score: 97.91767578125
patch: return comparator ; ;
rank: 890
score: 97.8194580078125
patch: return simplex ; else
rank: 890
score: 97.18721008300781
patch: switch ( ;
rank: 890
score: 94.23329162597656
patch: final
rank: 891
score: 97.89537353515625
patch: f = simplex ;
rank: 891
score: 97.81699829101562
patch: return ! ; }
rank: 891
score: 97.62935638427734
patch: / ; ;
rank: 891
score: 97.1797866821289
patch: return command ;
rank: 891
score: 94.22039794921875
patch: buf
rank: 892
score: 98.0336669921875
patch: ++ return ; ;
rank: 892
score: 98.0273681640625
patch: * * return ;
rank: 892
score: 97.923388671875
patch: return * ; }
rank: 892
score: 97.89838256835938
patch: ret = false ;
rank: 892
score: 97.1683349609375
patch: final double ;
rank: 892
score: 94.19691467285156
patch: this
rank: 893
score: 98.03187866210938
patch: else return ; int
rank: 893
score: 97.62200927734375
patch: } / ;
rank: 893
score: 94.18212890625
patch: logger
rank: 894
score: 97.90676879882812
patch: expanded = false ;
rank: 894
score: 97.888671875
patch: throw > 0 ;
rank: 894
score: 97.8699951171875
patch: else { simplex ;
rank: 894
score: 97.16435241699219
patch: action = ;
rank: 894
score: 94.09819030761719
patch: break
rank: 895
score: 98.02163696289062
patch: } return -= ;
rank: 895
score: 97.9052978515625
patch: if ( contracted ;
rank: 895
score: 97.88729248046874
patch: return reflected 1 ;
rank: 895
score: 97.8807144165039
patch: / * }
rank: 895
score: 97.86466064453126
patch: System . else {
rank: 895
score: 97.16429138183594
patch: name = ;
rank: 895
score: 94.0722885131836
patch: end
rank: 896
score: 98.01810302734376
patch: i = true ;
rank: 896
score: 98.01552734375
patch: } if ; }
rank: 896
score: 97.80592041015625
patch: return original [ }
rank: 896
score: 97.16122436523438
patch: super return ;
rank: 896
score: 94.02645111083984
patch: c
rank: 897
score: 98.01444702148437
patch: return { / ;
rank: 897
score: 97.86309204101562
patch: return . null ;
rank: 897
score: 97.80332641601562
patch: return false ) ;
rank: 897
score: 94.00218963623047
patch: m
rank: 898
score: 98.01402587890625
patch: for return return ;
rank: 898
score: 97.90078125
patch: contracted = reflected ;
rank: 898
score: 97.87232666015625
patch: return gamma ) ;
rank: 898
score: 97.79949340820312
patch: return continue ; }
rank: 898
score: 97.15652465820312
patch: it = ;
rank: 898
score: 93.99407958984375
patch: public
rank: 899
score: 97.15430450439453
patch: } do {
rank: 899
score: 93.95890808105469
patch: *
rank: 900
score: 98.00770263671875
patch: result return return ;
rank: 900
score: 97.87185668945312
patch: throw 1 ;
rank: 900
score: 97.86487426757813
patch: old = simplex ;
rank: 900
score: 97.79827270507812
patch: case - 0 :
rank: 900
score: 97.1535415649414
patch: } } else
rank: 900
score: 93.9584732055664
patch: to
rank: 901
score: 98.00670776367187
patch: while return ; ;
rank: 901
score: 98.00123291015625
patch: return * break ;
rank: 901
score: 97.86036376953125
patch: return simplex ; ;
rank: 901
score: 97.79801940917969
patch: return original [
rank: 901
score: 97.14997863769531
patch: return enable ;
rank: 901
score: 93.949951171875
patch: iterator
rank: 902
score: 98.00462646484375
patch: element { return ;
rank: 902
score: 97.9997802734375
patch: else return ; else
rank: 902
score: 97.8525146484375
patch: return return * ;
rank: 902
score: 97.79708251953124
patch: continue simplex ; }
rank: 902
score: 97.14623260498047
patch: return delete ;
rank: 902
score: 93.8967056274414
patch: LOG
rank: 903
score: 97.99776611328124
patch: } return continue ;
rank: 903
score: 97.99735107421876
patch: value ; return ;
rank: 903
score: 97.88595581054688
patch: return * reflected ;
rank: 903
score: 97.7962890625
patch: continue ; else {
rank: 903
score: 97.14290618896484
patch: } / *
rank: 903
score: 93.87613677978516
patch: next
rank: 904
score: 97.99729614257812
patch: else { synchronized ;
rank: 904
score: 97.85345458984375
patch: return } * /
rank: 904
score: 97.14271545410156
patch: return final ;
rank: 904
score: 93.82344818115234
patch: buffer
rank: 905
score: 97.85257568359376
patch: return } } }
rank: 905
score: 97.14112854003906
patch: return split ;
rank: 905
score: 93.78271484375
patch: b
rank: 906
score: 97.99412841796875
patch: return { return {
rank: 906
score: 97.97152709960938
patch: } else ; }
rank: 906
score: 97.8485595703125
patch: throw = false ;
rank: 906
score: 97.79130859375
patch: continue true ; }
rank: 906
score: 97.13973999023438
patch: txt = ;
rank: 906
score: 93.77665710449219
patch: {
rank: 907
score: 97.993408203125
patch: if new return ;
rank: 907
score: 97.96896362304688
patch: } return arraycopy ;
rank: 907
score: 97.8754638671875
patch: expanded = null ;
rank: 907
score: 97.84429321289062
patch: return - ) ;
rank: 907
score: 97.78982543945312
patch: match = false ;
rank: 907
score: 97.46261596679688
patch: * / /
rank: 907
score: 97.13545989990234
patch: renderer . ;
rank: 907
score: 93.68687438964844
patch: s
rank: 908
score: 97.98930053710937
patch: assert return return ;
rank: 908
score: 97.96829833984376
patch: } ( return ;
rank: 908
score: 97.84424438476563
patch: return value ) ;
rank: 908
score: 97.84046020507813
patch: throw = true ;
rank: 908
score: 97.46199798583984
patch: ? * /
rank: 908
score: 97.13508605957031
patch: email = ;
rank: 908
score: 93.6857681274414
patch: pos
rank: 909
score: 97.98858032226562
patch: else * return ;
rank: 909
score: 97.83983154296875
patch: return * / /
rank: 909
score: 97.83677368164062
patch: return > 0 ;
rank: 909
score: 97.13203430175781
patch: cb = ;
rank: 909
score: 93.66807556152344
patch: sb
rank: 910
score: 97.98746948242187
patch: synchronized ( return ;
rank: 910
score: 97.83892211914062
patch: return . this ;
rank: 910
score: 97.78638916015625
patch: added = false ;
rank: 910
score: 97.12832641601562
patch: z = ;
rank: 910
score: 93.6573257446289
patch: error
rank: 911
score: 97.96243896484376
patch: return ? return ;
rank: 911
score: 97.83983154296875
patch: } } break ;
rank: 911
score: 97.832275390625
patch: return list ) ;
rank: 911
score: 97.12704467773438
patch: assert ; ;
rank: 911
score: 93.64649963378906
patch: in
rank: 912
score: 97.9833984375
patch: return return return =
rank: 912
score: 97.780517578125
patch: break { break ;
rank: 912
score: 97.126220703125
patch: contents = ;
rank: 912
score: 93.62409973144531
patch: new
rank: 913
score: 97.97949829101563
patch: j { return ;
rank: 913
score: 97.77962646484374
patch: return ( original ;
rank: 913
score: 97.40458679199219
patch: this ; ;
rank: 913
score: 97.12118530273438
patch: year = ;
rank: 913
score: 93.61412048339844
patch: Assert
rank: 914
score: 97.97479248046875
patch: return / return ;
rank: 914
score: 97.84232177734376
patch: reflected = null ;
rank: 914
score: 97.8347412109375
patch: else if ( }
rank: 914
score: 97.8328857421875
patch: return final ) ;
rank: 914
score: 97.82090454101562
patch: return original . ;
rank: 914
score: 97.39891815185547
patch: * ; ;
rank: 914
score: 97.1190185546875
patch: template = ;
rank: 914
score: 93.61201477050781
patch: Throwable
rank: 915
score: 97.94046020507812
patch: else { } else
rank: 915
score: 97.83656616210938
patch: throw false ; }
rank: 915
score: 97.82836303710937
patch: return this ) ;
rank: 915
score: 97.11395263671875
patch: final ; }
rank: 915
score: 93.6083755493164
patch: super
rank: 916
score: 97.97107543945313
patch: return throw return ;
rank: 916
score: 97.9322021484375
patch: else ; if ;
rank: 916
score: 97.83046264648438
patch: return = null ;
rank: 916
score: 97.82848358154297
patch: throw false ;
rank: 916
score: 97.81363525390626
patch: return best ; ;
rank: 916
score: 97.3879623413086
patch: } } ;
rank: 916
score: 97.11143493652344
patch: loop return ;
rank: 916
score: 93.60082244873047
patch: r
rank: 917
score: 97.9653076171875
patch: list { return ;
rank: 917
score: 97.93034057617187
patch: * * * ;
rank: 917
score: 97.62550354003906
patch: continue ) ;
rank: 917
score: 97.11090850830078
patch: c = ;
rank: 917
score: 93.60057067871094
patch: state
rank: 918
score: 97.96520385742187
patch: return ; for ;
rank: 918
score: 97.92999267578125
patch: } return in ;
rank: 918
score: 97.82257690429688
patch: throw 0 ; }
rank: 918
score: 97.8037841796875
patch: return iterator ; }
rank: 918
score: 97.61964416503906
patch: return ! ;
rank: 918
score: 97.35357666015625
patch: update ; ;
rank: 918
score: 97.10769653320312
patch: dp = ;
rank: 918
score: 93.58309936523438
patch: index
rank: 919
score: 97.9630126953125
patch: i return false ;
rank: 919
score: 97.80731201171875
patch: throw true ;
rank: 919
score: 97.61727905273438
patch: case 0 :
rank: 919
score: 93.57701110839844
patch: e
rank: 920
score: 97.92777709960937
patch: else = true ;
rank: 920
score: 97.79750061035156
patch: return / /
rank: 920
score: 97.1047134399414
patch: p = ;
rank: 920
score: 93.56184387207031
patch: iter
rank: 921
score: 97.9618408203125
patch: return return return return
rank: 921
score: 97.57633209228516
patch: return { }
rank: 921
score: 97.10307312011719
patch: expected = ;
rank: 921
score: 93.53839111328125
patch: first
rank: 922
score: 97.96148681640625
patch: value return return ;
rank: 922
score: 97.10206604003906
patch: expr = ;
rank: 922
score: 93.53006744384766
patch: t
rank: 923
score: 97.959619140625
patch: name { return ;
rank: 923
score: 97.91428833007812
patch: else } return ;
rank: 923
score: 97.56571197509766
patch: return out ;
rank: 923
score: 97.10096740722656
patch: first = ;
rank: 923
score: 93.51959991455078
patch: remaining
rank: 924
score: 97.9094970703125
patch: } return * }
rank: 924
score: 97.8131591796875
patch: return FALSE ; }
rank: 924
score: 97.70792388916016
patch: throw this ;
rank: 924
score: 97.55860137939453
patch: return comparator .
rank: 924
score: 97.29763793945312
patch: return replace ;
rank: 924
score: 97.09959411621094
patch: assert ; }
rank: 924
score: 93.50383758544922
patch: type
rank: 925
score: 97.95549926757812
patch: if ( false ;
rank: 925
score: 97.81195068359375
patch: throw true ; }
rank: 925
score: 97.806494140625
patch: ret = null ;
rank: 925
score: 97.79019165039062
patch: return original ; ;
rank: 925
score: 97.51121520996094
patch: true ) ;
rank: 925
score: 97.29661560058594
patch: new ; ;
rank: 925
score: 97.09686279296875
patch: outer = ;
rank: 925
score: 93.50086975097656
patch: =
rank: 926
score: 97.80616455078125
patch: reflected = simplex ;
rank: 926
score: 97.78326416015625
patch: result = evaluate ;
rank: 926
score: 97.69904327392578
patch: } / /
rank: 926
score: 97.50939178466797
patch: throw reflected ;
rank: 926
score: 97.28772735595703
patch: return ; ?
rank: 926
score: 97.095947265625
patch: namespace = ;
rank: 926
score: 93.49313354492188
patch: copy
rank: 927
score: 97.9482666015625
patch: d { return ;
rank: 927
score: 97.89022827148438
patch: return += ;
rank: 927
score: 97.805615234375
patch: } return 1 ;
rank: 927
score: 97.80218505859375
patch: return reflected ; ;
rank: 927
score: 97.09386444091797
patch: target = ;
rank: 927
score: 93.48178100585938
patch: h
rank: 928
score: 97.947900390625
patch: catch ( return ;
rank: 928
score: 97.80380859375
patch: expanded = simplex ;
rank: 928
score: 97.76184844970703
patch: else { return
rank: 928
score: 97.09310913085938
patch: return else {
rank: 928
score: 93.45592498779297
patch: val
rank: 929
score: 97.9476806640625
patch: j * return ;
rank: 929
score: 97.796875
patch: return evaluate ; }
rank: 929
score: 97.6688232421875
patch: throw original ;
rank: 929
score: 93.45016479492188
patch: tree
rank: 930
score: 97.9473388671875
patch: p { return ;
rank: 930
score: 97.79757690429688
patch: original = null ;
rank: 930
score: 97.79249267578125
patch: return * * *
rank: 930
score: 97.74681091308594
patch: else = ;
rank: 930
score: 97.27486419677734
patch: * / }
rank: 930
score: 97.087158203125
patch: indent = ;
rank: 930
score: 93.44209289550781
patch: l
rank: 931
score: 97.94560546875
patch: if return true ;
rank: 931
score: 97.49224853515625
patch: throw { throw
rank: 931
score: 97.08280944824219
patch: s = ;
rank: 931
score: 93.42945098876953
patch: java
rank: 932
score: 97.64176940917969
patch: return * }
rank: 932
score: 97.24437713623047
patch: } ; }
rank: 932
score: 97.08223724365234
patch: removed = ;
rank: 932
score: 93.41692352294922
patch: row
rank: 933
score: 97.62553405761719
patch: result ++ ;
rank: 933
score: 97.48368835449219
patch: found = ;
rank: 933
score: 97.08100128173828
patch: base = ;
rank: 933
score: 93.41583251953125
patch: height
rank: 934
score: 97.78697509765625
patch: return - false ;
rank: 934
score: 97.61766560872395
patch: try {
rank: 934
score: 97.46272277832031
patch: break ) {
rank: 934
score: 97.06791178385417
patch: do {
rank: 934
score: 93.41079711914062
patch: out
rank: 935
score: 97.92506103515625
patch: * if return ;
rank: 935
score: 97.77605590820312
patch: i = 0 ;
rank: 935
score: 97.61279296875
patch: return System .
rank: 935
score: 97.22369384765625
patch: return SURROGATE ;
rank: 935
score: 97.06584167480469
patch: put ( ;
rank: 935
score: 93.40484619140625
patch: n
rank: 936
score: 97.92421875
patch: else return ; /
rank: 936
score: 97.77470092773437
patch: / * } }
rank: 936
score: 97.06535339355469
patch: prefix = ;
rank: 936
score: 93.39056396484375
patch: v
rank: 937
score: 97.6023178100586
patch: throw * /
rank: 937
score: 97.58714294433594
patch: ++ contracted ;
rank: 937
score: 97.43873596191406
patch: throw new throw
rank: 937
score: 97.21195220947266
patch: callback . ;
rank: 937
score: 97.0643310546875
patch: tok = ;
rank: 937
score: 93.37774658203125
patch: offset
rank: 938
score: 97.86018371582031
patch: ++ return ;
rank: 938
score: 97.43354797363281
patch: case 1 :
rank: 938
score: 97.19517517089844
patch: / * ;
rank: 938
score: 93.36018371582031
patch: --
rank: 939
score: 97.85299682617188
patch: value return ;
rank: 939
score: 97.57955169677734
patch: return return *
rank: 939
score: 97.0628433227539
patch: table = ;
rank: 939
score: 93.3453369140625
patch: results
rank: 940
score: 97.58689880371094
patch: } else }
rank: 940
score: 97.18219757080078
patch: else ; }
rank: 940
score: 97.06066131591797
patch: tag = ;
rank: 940
score: 93.3128662109375
patch: can
rank: 941
score: 97.58186340332031
patch: else continue ;
rank: 941
score: 97.56243133544922
patch: return evaluate ;
rank: 941
score: 97.39968872070312
patch: throw best ;
rank: 941
score: 97.17688751220703
patch: return insert ;
rank: 941
score: 97.056640625
patch: me = ;
rank: 941
score: 93.301513671875
patch: dim
rank: 942
score: 97.39089965820312
patch: continue simplex ;
rank: 942
score: 97.05606842041016
patch: temp = ;
rank: 942
score: 93.30024719238281
patch: array
rank: 943
score: 97.81102752685547
patch: return { int
rank: 943
score: 97.66809844970703
patch: } continue ;
rank: 943
score: 97.53351593017578
patch: return return }
rank: 943
score: 97.38059997558594
patch: return best {
rank: 943
score: 97.05029296875
patch: path = ;
rank: 943
score: 93.2972412109375
patch: list
rank: 944
score: 97.55604044596355
patch: return return
rank: 944
score: 97.04995727539062
patch: public void ;
rank: 944
score: 93.29481506347656
patch: cached
rank: 945
score: 97.53924560546875
patch: result ; }
rank: 945
score: 97.1632080078125
patch: update ; }
rank: 945
score: 97.0486068725586
patch: toplevel = ;
rank: 945
score: 93.2942886352539
patch: data
rank: 946
score: 97.15821838378906
patch: catch ; ;
rank: 946
score: 97.04763793945312
patch: cm = ;
rank: 946
score: 93.29151916503906
patch: g
rank: 947
score: 97.53402709960938
patch: return / ;
rank: 947
score: 97.35562133789062
patch: return best [
rank: 947
score: 97.1492919921875
patch: } finally ;
rank: 947
score: 97.04676818847656
patch: selected = ;
rank: 947
score: 93.2751693725586
patch: text
rank: 948
score: 97.7332763671875
patch: j return ;
rank: 948
score: 97.52564239501953
patch: return original :
rank: 948
score: 97.51937103271484
patch: ( return ;
rank: 948
score: 97.0459213256836
patch: width = ;
rank: 948
score: 93.25439453125
patch: x
rank: 949
score: 97.73041534423828
patch: assert false ;
rank: 949
score: 97.61897277832031
patch: throw list ;
rank: 949
score: 97.51622009277344
patch: else { try
rank: 949
score: 97.12738037109375
patch: / ; }
rank: 949
score: 97.0454330444336
patch: final long ;
rank: 949
score: 93.25325012207031
patch: This
rank: 950
score: 97.51283264160156
patch: return -= ;
rank: 950
score: 97.503662109375
patch: ++ best ;
rank: 950
score: 97.12641143798828
patch: return ; :
rank: 950
score: 96.92979939778645
patch: ) ;
rank: 950
score: 93.24392700195312
patch: p
rank: 951
score: 97.50080108642578
patch: return reflected _
rank: 951
score: 97.4991455078125
patch: break ; else
rank: 951
score: 97.45915985107422
patch: return return {
rank: 951
score: 97.12618255615234
patch: done = ;
rank: 951
score: 96.91147867838542
patch: update ;
rank: 951
score: 93.23726654052734
patch: param
rank: 952
score: 97.4964599609375
patch: } return {
rank: 952
score: 97.34554290771484
patch: continue true ;
rank: 952
score: 96.90805053710938
patch: / *
rank: 952
score: 93.2326431274414
patch: comp
rank: 953
score: 97.67674255371094
patch: return { else
rank: 953
score: 97.49211883544922
patch: else { finally
rank: 953
score: 97.41250610351562
patch: } try {
rank: 953
score: 97.11259460449219
patch: } false ;
rank: 953
score: 93.1951675415039
patch: obj
rank: 954
score: 97.11202239990234
patch: ) ; ;
rank: 954
score: 93.19010925292969
patch: after
rank: 955
score: 97.67452239990234
patch: return if ;
rank: 955
score: 97.39630889892578
patch: System . }
rank: 955
score: 97.33740997314453
patch: break { else
rank: 955
score: 96.75698852539062
patch: my ;
rank: 955
score: 93.18345642089844
patch: item
rank: 956
score: 97.67425537109375
patch: / else {
rank: 956
score: 97.39281463623047
patch: return } ;
rank: 956
score: 97.3332748413086
patch: true ++ ;
rank: 956
score: 97.10718536376953
patch: update ( ;
rank: 956
score: 96.64662679036458
patch: process ;
rank: 956
score: 93.16861724853516
patch: y
rank: 957
score: 97.53145599365234
patch: return . ;
rank: 957
score: 97.4540023803711
patch: return original .
rank: 957
score: 97.38288879394531
patch: return min ;
rank: 957
score: 97.33158874511719
patch: return get CaMeL
rank: 957
score: 96.62667846679688
patch: } finally
rank: 957
score: 93.16694641113281
patch: sub
rank: 958
score: 97.64468383789062
patch: int else {
rank: 958
score: 97.50750732421875
patch: throw value ;
rank: 958
score: 97.3725814819336
patch: return ) {
rank: 958
score: 97.09103393554688
patch: comparator . ;
rank: 958
score: 96.60544840494792
patch: finally {
rank: 958
score: 93.15724182128906
patch: modified
rank: 959
score: 97.4271240234375
patch: } else else
rank: 959
score: 97.30557250976562
patch: return ? ;
rank: 959
score: 97.09056091308594
patch: return ^ ;
rank: 959
score: 96.57680257161458
patch: } ,
rank: 959
score: 93.15673065185547
patch: before
rank: 960
score: 97.40379333496094
patch: else { do
rank: 960
score: 97.29218292236328
patch: } throw {
rank: 960
score: 93.15470886230469
patch: scope
rank: 961
score: 97.59576416015625
patch: i { ;
rank: 961
score: 97.35130310058594
patch: return / *
rank: 961
score: 97.2743148803711
patch: return : ;
rank: 961
score: 96.51698811848958
patch: while ;
rank: 961
score: 93.14891052246094
patch: cur
rank: 962
score: 97.42613220214844
patch: result ) ;
rank: 962
score: 97.3598861694336
patch: * * ;
rank: 962
score: 97.08587646484375
patch: matching = ;
rank: 962
score: 93.13845825195312
patch: cmp
rank: 963
score: 97.34851837158203
patch: } while ;
rank: 963
score: 97.25691223144531
patch: continue false ;
rank: 963
score: 97.08502960205078
patch: throw ; }
rank: 963
score: 96.5020751953125
patch: select ;
rank: 963
score: 93.13764953613281
patch: left
rank: 964
score: 97.31858825683594
patch: true * /
rank: 964
score: 97.25094604492188
patch: return contracted [
rank: 964
score: 96.47601318359375
patch: reload ;
rank: 964
score: 93.13711547851562
patch: context
rank: 965
score: 97.4029541015625
patch: / / }
rank: 965
score: 97.38941955566406
patch: return contains ;
rank: 965
score: 97.34159851074219
patch: if ( }
rank: 965
score: 96.47487386067708
patch: match ;
rank: 965
score: 93.13483428955078
patch: status
rank: 966
score: 97.3868637084961
patch: -- contracted ;
rank: 966
score: 97.33369954427083
patch: System .
rank: 966
score: 97.31585693359375
patch: if ; }
rank: 966
score: 96.456298828125
patch: complete ;
rank: 966
score: 93.13072967529297
patch: tmp
rank: 967
score: 97.38670349121094
patch: i ++ ;
rank: 967
score: 97.31503295898438
patch: else throw ;
rank: 967
score: 93.13072204589844
patch: values
rank: 968
score: 93.12356567382812
patch: not
rank: 969
score: 97.37023162841797
patch: throw iterator ;
rank: 969
score: 97.28694152832031
patch: } else try
rank: 969
score: 97.22200520833333
patch: e .
rank: 969
score: 97.21749877929688
patch: throw { }
rank: 969
score: 96.78697713216145
patch: * ;
rank: 969
score: 96.39947509765625
patch: apply ;
rank: 969
score: 93.12149047851562
patch: double
rank: 970
score: 97.36634826660156
patch: throw ) ;
rank: 970
score: 93.115234375
patch: parent
rank: 971
score: 97.52496337890625
patch: return { value
rank: 971
score: 97.3597640991211
patch: } return }
rank: 971
score: 97.35760498046875
patch: return / ?
rank: 971
score: 97.27608489990234
patch: else ; else
rank: 971
score: 96.95753987630208
patch: throw {
rank: 971
score: 93.1061019897461
patch: Error
rank: 972
score: 97.51347351074219
patch: i { else
rank: 972
score: 97.33873748779297
patch: return set ;
rank: 972
score: 96.36973063151042
patch: repaint ;
rank: 972
score: 93.09896850585938
patch: internal
rank: 973
score: 97.33351135253906
patch: return random ;
rank: 973
score: 96.90555826822917
patch: return comparator
rank: 973
score: 96.36647542317708
patch: detach ;
rank: 973
score: 93.09518432617188
patch: total
rank: 974
score: 97.4901123046875
patch: return [ ;
rank: 974
score: 97.32737731933594
patch: result -- ;
rank: 974
score: 97.27777099609375
patch: throw contracted ;
rank: 974
score: 96.90549723307292
patch: continue {
rank: 974
score: 96.74720255533855
patch: throw ,
rank: 974
score: 96.36159261067708
patch: initialize ;
rank: 974
score: 93.07960510253906
patch: Thread
rank: 975
score: 97.48611450195312
patch: case return ;
rank: 975
score: 97.27091217041016
patch: return |= ;
rank: 975
score: 96.90492757161458
patch: return best
rank: 975
score: 93.07901763916016
patch: token
rank: 976
score: 97.14093017578125
patch: return (
rank: 976
score: 96.9041748046875
patch: return [
rank: 976
score: 93.07889556884766
patch: key
rank: 977
score: 97.31105041503906
patch: return ceil ;
rank: 977
score: 96.7356669108073
patch: result {
rank: 977
score: 96.34945678710938
patch: fail ;
rank: 977
score: 93.07034301757812
patch: thread
rank: 978
score: 97.30431365966797
patch: return err ;
rank: 978
score: 96.38734944661458
patch: finally ;
rank: 978
score: 96.33835856119792
patch: ++ ;
rank: 978
score: 93.0692138671875
patch: node
rank: 979
score: 97.4601058959961
patch: += return ;
rank: 979
score: 96.6567891438802
patch: else }
rank: 979
score: 96.33347574869792
patch: cached ;
rank: 979
score: 93.06510925292969
patch: added
rank: 980
score: 96.77926635742188
patch: if (
rank: 980
score: 96.62642415364583
patch: simplex ;
rank: 980
score: 96.53407796223958
patch: true ;
rank: 980
score: 96.3275858561198
patch: this .
rank: 980
score: 96.23011271158855
patch: matching ;
rank: 980
score: 93.06099700927734
patch: element
rank: 981
score: 96.51519775390625
patch: result [
rank: 981
score: 96.21575927734375
patch: selected ;
rank: 981
score: 93.05758666992188
patch: Iterator
rank: 982
score: 96.31983439127605
patch: show ;
rank: 982
score: 93.05219268798828
patch: message
rank: 983
score: 96.82569376627605
patch: i {
rank: 983
score: 96.80397542317708
patch: return original
rank: 983
score: 96.58009847005208
patch: convergence ;
rank: 983
score: 96.31151326497395
patch: false ;
rank: 983
score: 93.04434967041016
patch: j
rank: 984
score: 96.19931030273438
patch: search ;
rank: 984
score: 93.03880310058594
patch: chunk
rank: 985
score: 96.65859985351562
patch: result _
rank: 985
score: 96.28390502929688
patch: refresh ;
rank: 985
score: 96.18527221679688
patch: fire ;
rank: 985
score: 93.03872680664062
patch: input
rank: 986
score: 96.34906005859375
patch: continue :
rank: 986
score: 96.28382364908855
patch: save ;
rank: 986
score: 96.16867065429688
patch: invoke ;
rank: 986
score: 93.03683471679688
patch: pref
rank: 987
score: 96.5272216796875
patch: result :
rank: 987
score: 96.51139322916667
patch: contracted ;
rank: 987
score: 96.27737426757812
patch: skip ;
rank: 987
score: 93.03413391113281
patch: ignore
rank: 988
score: 96.63234456380208
patch: } *
rank: 988
score: 96.51587931315105
patch: return simplex
rank: 988
score: 96.13336181640625
patch: http :
rank: 988
score: 93.0302734375
patch: removed
rank: 989
score: 96.28797403971355
patch: } throw
rank: 989
score: 96.26369222005208
patch: synchronized ;
rank: 989
score: 93.0164794921875
patch: msg
rank: 990
score: 96.28165690104167
patch: result =
rank: 990
score: 93.01632690429688
patch: loc
rank: 991
score: 96.44012451171875
patch: ex .
rank: 991
score: 96.25494384765625
patch: ) {
rank: 991
score: 96.201416015625
patch: return in
rank: 991
score: 96.11397298177083
patch: all ;
rank: 991
score: 93.01473999023438
patch: best
rank: 992
score: 96.5322977701823
patch: return reflected
rank: 992
score: 96.09623209635417
patch: progress ;
rank: 992
score: 93.01332092285156
patch: i
rank: 993
score: 96.43739827473958
patch: else ,
rank: 993
score: 96.24267578125
patch: public ;
rank: 993
score: 96.1665547688802
patch: synchronized (
rank: 993
score: 96.09051513671875
patch: output ;
rank: 993
score: 93.0129165649414
patch: post
rank: 994
score: 96.21631876627605
patch: return ,
rank: 994
score: 96.0899149576823
patch: ? ;
rank: 994
score: 94.58872985839844
patch: void
rank: 994
score: 93.00489044189453
patch: runnable
rank: 995
score: 96.380615234375
patch: catch (
rank: 995
score: 96.10542805989583
patch: ( ;
rank: 995
score: 94.87897491455078
patch: continue
rank: 995
score: 93.00344848632812
patch: @
rank: 996
score: 96.3746337890625
patch: / ?
rank: 996
score: 96.07779947916667
patch: done ;
rank: 996
score: 94.72644805908203
patch: :
rank: 996
score: 94.53507995605469
patch: true
rank: 996
score: 94.37239074707031
patch: )
rank: 996
score: 92.99630737304688
patch: size
rank: 997
score: 96.06103515625
patch: dirty ;
rank: 997
score: 94.71051788330078
patch: Integer
rank: 997
score: 92.99235534667969
patch: line
rank: 998
score: 94.71467590332031
patch: $
rank: 998
score: 92.98843383789062
patch: min
rank: 999
score: 94.64585876464844
patch: ,
rank: 999
score: 93.96566772460938
patch: case
rank: 999
score: 92.98579406738281
patch: -=
rank: 1000
score: 94.57009887695312
patch: false
rank: 1000
score: 94.4662857055664
patch: ++
rank: 1000
score: 92.9793701171875
patch: content
