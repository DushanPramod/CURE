rank: 1
score: 99.63836669921875
patch: break ; break ;
rank: 1
score: 99.53376908735795
patch: throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 1
score: 99.46917724609375
patch: break ;
rank: 1
score: 99.42271728515625
patch: return x 1 ;
rank: 1
score: 99.3304672241211
patch: break ; default : break ; }
rank: 1
score: 99.28647286551339
patch: break ; break ; } }
rank: 2
score: 99.41828264508929
patch: f 1 *= f 1 ;
rank: 2
score: 99.40708229758523
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 2
score: 99.40706089564732
patch: f 0 *= f 1 ;
rank: 2
score: 99.31367631392045
patch: break ; case REGULA _ FALSI :
rank: 2
score: 99.28125
patch: break ; ;
rank: 2
score: 99.27320207868304
patch: break ; default : break ;
rank: 2
score: 99.24834333147321
patch: break ; } break ; }
rank: 2
score: 99.172119140625
patch: break ; default :
rank: 3
score: 99.37109375
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 3
score: 99.36641148158482
patch: break ; break ; break ;
rank: 3
score: 99.36130196707589
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 3
score: 99.3092041015625
patch: f 0 *= 0 . $NUMBER$ ;
rank: 3
score: 99.26625279017857
patch: break ; default : ; }
rank: 3
score: 99.25368245442708
patch: return break ; break ;
rank: 3
score: 99.24171142578125
patch: return break ; }
rank: 4
score: 99.35429164341518
patch: f 1 = f 1 ;
rank: 4
score: 99.33145141601562
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 4
score: 99.25807189941406
patch: break ; break ; if break ;
rank: 4
score: 99.23318142361111
patch: break ; default : break ; } }
rank: 4
score: 99.22269439697266
patch: break ; } } break ; }
rank: 4
score: 99.17301432291667
patch: break ; case PEGASUS :
rank: 4
score: 99.04488118489583
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 5
score: 99.35328020368304
patch: f 1 = x 1 ;
rank: 5
score: 99.30435616629464
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 5
score: 99.29634094238281
patch: f 0 *= 0 . 0 ;
rank: 5
score: 99.26820882161458
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 5
score: 99.25753784179688
patch: break ; break ; ;
rank: 5
score: 99.20878092447917
patch: break ; * break ;
rank: 5
score: 99.17592366536458
patch: break ; break ; }
rank: 5
score: 99.15880237926136
patch: continue ; case REGULA _ FALSI :
rank: 5
score: 99.01046752929688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 6
score: 99.19283040364583
patch: break ; default ; }
rank: 6
score: 99.15772356305804
patch: break ; } } break ;
rank: 6
score: 98.98585001627605
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 7
score: 99.22689056396484
patch: f 1 *= 0 . $NUMBER$ ;
rank: 7
score: 99.20252336774554
patch: break ; break ; if ;
rank: 7
score: 99.1516825358073
patch: } break ; break ;
rank: 7
score: 99.13181559244792
patch: break ; } } }
rank: 7
score: 99.07007514105902
patch: break ; default : throw new ; }
rank: 7
score: 99.06373901367188
patch: return x 0 ;
rank: 8
score: 99.29976981026786
patch: f 1 *= x 1 ;
rank: 8
score: 99.25608473557692
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 8
score: 99.21759905133929
patch: f 0 = f 1 ;
rank: 8
score: 99.196044921875
patch: break ; if ; break ;
rank: 8
score: 99.11943054199219
patch: return break ;
rank: 8
score: 99.09821319580078
patch: break ; break ; } } }
rank: 8
score: 99.06329345703125
patch: break ; default : ;
rank: 8
score: 99.05812072753906
patch: break ; case ANY _ SIDE :
rank: 8
score: 98.95623309795673
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 9
score: 99.25447591145833
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 9
score: 99.21009063720703
patch: f 1 *= 0 . 0 ;
rank: 9
score: 99.12476942274306
patch: break ; break ; if ; break ;
rank: 9
score: 99.09327915736607
patch: break ; } } } }
rank: 9
score: 99.05364520733173
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 9
score: 99.0517578125
patch: break ; default : System . ; }
rank: 9
score: 98.93170720880681
patch: switch ( method . get CaMeL Type ( ) )
rank: 10
score: 99.2037353515625
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 10
score: 99.1478780110677
patch: else throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 10
score: 99.10488552517361
patch: break ; break ; break ; break ;
rank: 10
score: 99.09323120117188
patch: return break ; } break ; }
rank: 10
score: 99.0459716796875
patch: break ; default : f 0 = ; }
rank: 10
score: 99.0447265625
patch: break ; ; ;
rank: 10
score: 99.04459635416667
patch: case REGULA _ FALSI :
rank: 10
score: 98.92632587139423
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 11
score: 99.13417154947916
patch: break ; case PEGASUS : f 0 *= f 1 ;
rank: 11
score: 99.10406494140625
patch: break ; if break ;
rank: 11
score: 99.0856689453125
patch: break ; } }
rank: 11
score: 99.04271589006696
patch: break ; * * break ;
rank: 11
score: 99.0342305501302
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 11
score: 99.01801409040179
patch: break ; default ; } }
rank: 11
score: 98.92586844308036
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;
rank: 12
score: 99.2298095703125
patch: f 0 *= 0 . $NUMBER$ ; break ;
rank: 12
score: 99.17992401123047
patch: f 0 *= 0 . 1 ;
rank: 12
score: 99.08714294433594
patch: break ; break ; break ; ;
rank: 12
score: 99.08541434151786
patch: break ; else break ; }
rank: 12
score: 99.0321044921875
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 12
score: 99.0087890625
patch: break ; default : System . out . ; }
rank: 12
score: 98.92316436767578
patch: break ; case ; case ; :
rank: 13
score: 99.23995535714286
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 13
score: 99.16640625
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 13
score: 99.0829849243164
patch: break ; } } return break ;
rank: 13
score: 99.06704711914062
patch: break ; ; break ;
rank: 13
score: 99.03028282752403
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 13
score: 99.02537231445312
patch: return break ; ;
rank: 13
score: 99.00726928710938
patch: break ; default : f 0 . ; }
rank: 13
score: 98.917431640625
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 14
score: 99.23649379185268
patch: f 0 = x 1 ;
rank: 14
score: 99.207763671875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 14
score: 99.12424879807692
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 14
score: 99.08238220214844
patch: break ; } } if break ;
rank: 14
score: 99.05088806152344
patch: break ; break ; return break ;
rank: 14
score: 99.02315266927083
patch: continue ; case PEGASUS :
rank: 14
score: 99.01482282366071
patch: break ; break ; / /
rank: 14
score: 99.00645228794643
patch: break ; case ; default :
rank: 14
score: 98.9147616299716
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 15
score: 99.21482631138393
patch: f 0 *= x 1 ;
rank: 15
score: 99.15362141927083
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 15
score: 99.11754432091347
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 15
score: 99.06966727120536
patch: break ; * break ; }
rank: 15
score: 99.04429626464844
patch: break ; break ; ; break ;
rank: 15
score: 99.0145263671875
patch: break ; / /
rank: 15
score: 98.99267578125
patch: break ; default : System . err . ; }
rank: 15
score: 98.90808868408203
patch: break ; default : return ; }
rank: 16
score: 99.19959435096153
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 16
score: 99.06807708740234
patch: break ; } else return break ;
rank: 16
score: 99.01155853271484
patch: break ; break ; break ; }
rank: 16
score: 99.00860595703125
patch: break ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 16
score: 98.99523053850446
patch: return break ; break ; ;
rank: 16
score: 98.98148018973214
patch: break ; default break ; }
rank: 16
score: 98.90428748497597
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }
rank: 17
score: 99.14032451923077
patch: super . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 17
score: 99.10133990119485
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 17
score: 99.06704711914062
patch: break ; * * break ; }
rank: 17
score: 99.00699615478516
patch: break ; break ; if ; {
rank: 17
score: 98.99946594238281
patch: break ; case PEGASUS : f 0 *= 0 . $NUMBER$ ;
rank: 17
score: 98.97047008167614
patch: break ; default : f 0 . break ; }
rank: 17
score: 98.8917236328125
patch: break ; default : return 0 . 0 ; }
rank: 18
score: 99.19077555338542
patch: ftol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 18
score: 99.0891342163086
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 18
score: 99.00164794921875
patch: break ; break ; try
rank: 18
score: 98.98428955078126
patch: break ; * /
rank: 18
score: 98.94818987165179
patch: break ; default ; break ;
rank: 18
score: 98.89101155598958
patch: if ( break ) {
rank: 19
score: 99.10701497395833
patch: f 0 *= f 1 . $NUMBER$ ;
rank: 19
score: 99.04158782958984
patch: break ; }
rank: 19
score: 98.993896484375
patch: break ; break ; } break ;
rank: 19
score: 98.98398263113839
patch: break ; * break ; ;
rank: 19
score: 98.96717247596153
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 19
score: 98.94276936848958
patch: break ; default : f 0 . break ; } }
rank: 19
score: 98.8887939453125
patch: break ; default : return break ; }
rank: 20
score: 99.15495300292969
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 20
score: 99.08660888671875
patch: inverted = ! inverted ;
rank: 20
score: 99.0394515991211
patch: break ; } } } break ;
rank: 20
score: 98.98756917317708
patch: break ; break ; break ; if ;
rank: 20
score: 98.98271833147321
patch: break ; break ; * /
rank: 20
score: 98.9664776141827
patch: logger . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 20
score: 98.94142150878906
patch: break ; default : ; } }
rank: 20
score: 98.87326882102273
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 21
score: 99.15125042459239
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 21
score: 99.13186209542411
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 21
score: 99.02257537841797
patch: return break ; } } break ;
rank: 21
score: 98.97476806640626
patch: break ; break ; break ; if break ;
rank: 21
score: 98.97140502929688
patch: } else { break ;
rank: 21
score: 98.9618148803711
patch: break ; case RIGHT _ SIDE :
rank: 21
score: 98.93501281738281
patch: break ; default : throw ; }
rank: 21
score: 98.865673828125
patch: if ( break )
rank: 22
score: 99.15073939732143
patch: rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 22
score: 99.1265360514323
patch: } throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 22
score: 99.09809875488281
patch: final double rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 22
score: 99.06754557291667
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ;
rank: 22
score: 99.01297760009766
patch: break ; } if break ; }
rank: 22
score: 98.96916852678571
patch: break ; break ; ; ;
rank: 22
score: 98.95960150824652
patch: break ; if ; break ; break ;
rank: 22
score: 98.9540786743164
patch: case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 22
score: 98.92250061035156
patch: break ; default ; break ; }
rank: 22
score: 98.84007771809895
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; }
rank: 23
score: 99.09508338341347
patch: final double fx = compute CaMeL Objective CaMeL Value ( ) ;
rank: 23
score: 99.06238471137152
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 23
score: 99.00526646205357
patch: break ; } if break ;
rank: 23
score: 98.96701049804688
patch: if break ; break ;
rank: 23
score: 98.9475830078125
patch: break ; break ; if ; { break ;
rank: 23
score: 98.9464580829327
patch: exception . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 23
score: 98.92242431640625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 24
score: 99.11076354980469
patch: f 1 *= f 1 ; }
rank: 24
score: 99.09463065011161
patch: final double fx = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 24
score: 99.00248718261719
patch: } break ; } break ; }
rank: 24
score: 98.95943450927734
patch: break ; * * * break ;
rank: 24
score: 98.93694598858173
patch: state . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 24
score: 98.93534851074219
patch: break ; break ; else break ;
rank: 24
score: 98.91243896484374
patch: break ; default : break ; } } ;
rank: 24
score: 98.83370971679688
patch: break ; default : return break ;
rank: 25
score: 99.12530517578125
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 25
score: 99.10962785993304
patch: f 1 *= f 0 ;
rank: 25
score: 99.0921859741211
patch: f 1 *= 0 . 1 ;
rank: 25
score: 99.00233459472656
patch: break ; } break ; } }
rank: 25
score: 98.94651285807292
patch: break ; break ; *
rank: 25
score: 98.93360137939453
patch: break ; break ; if ; ;
rank: 25
score: 98.932373046875
patch: break ; case REGULA _ FALSI : return x 1 ;
rank: 25
score: 98.91065809461806
patch: break ; default : break ; ; }
rank: 25
score: 98.8167724609375
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 26
score: 99.1210300611413
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 26
score: 99.0892333984375
patch: final double fx = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 26
score: 98.99674987792969
patch: break break ; } break ; }
rank: 26
score: 98.94610595703125
patch: return break ; ; ;
rank: 26
score: 98.92448425292969
patch: break ; case LEFT _ SIDE :
rank: 26
score: 98.92157745361328
patch: break ; break ; break ; /
rank: 26
score: 98.9012451171875
patch: break ; default ; ; }
rank: 27
score: 99.12099202473958
patch: ftol = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 27
score: 99.08693284254808
patch: final double fx = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 27
score: 99.05223592122395
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 27
score: 98.9902114868164
patch: break ; else return break ; }
rank: 27
score: 98.93474469866071
patch: break ; break ; / ;
rank: 27
score: 98.92440795898438
patch: break ; case REGULA _ FALSI : /
rank: 27
score: 98.91287231445312
patch: break ; break ; throw break ;
rank: 27
score: 98.90101453993056
patch: break ; default : f 0 ; }
rank: 27
score: 98.79918323863636
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;
rank: 28
score: 99.11858723958333
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 28
score: 99.0853740985577
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; } }
rank: 28
score: 99.04851888020833
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 28
score: 98.98872593470982
patch: return 0 . 0 ; }
rank: 28
score: 98.93224334716797
patch: break break ;
rank: 28
score: 98.91720920138889
patch: continue ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 28
score: 98.9073486328125
patch: break ; break ; /
rank: 28
score: 98.89169311523438
patch: break ; default : System . break ; }
rank: 28
score: 98.79768202039931
patch: break ; default : return 1 ; }
rank: 29
score: 99.07882690429688
patch: f 0 *= 1 . $NUMBER$ ;
rank: 29
score: 99.07850138346355
patch: f 1 = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 29
score: 99.044677734375
patch: else throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 29
score: 98.98794119698661
patch: break ; break ; } else
rank: 29
score: 98.92788696289062
patch: break ; ; / /
rank: 29
score: 98.9129638671875
patch: continue ; case PEGASUS : f 0 *= 0 . $NUMBER$ ;
rank: 29
score: 98.90535481770833
patch: break ; return break ;
rank: 29
score: 98.88286675347223
patch: break ; default ; break ; } }
rank: 29
score: 98.79494406960227
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 30
score: 99.1063232421875
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 30
score: 99.07872596153847
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 30
score: 99.07543073381696
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 30
score: 99.04173060825893
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 30
score: 98.98581271701389
patch: break ; } } } return break ;
rank: 30
score: 98.9270731608073
patch: } * * break ;
rank: 30
score: 98.9113018329327
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 30
score: 98.89497884114583
patch: break ; } break ;
rank: 30
score: 98.87233276367188
patch: break ; default : break ; } } }
rank: 31
score: 99.10545349121094
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 31
score: 99.07456752232143
patch: f 1 = x 0 ;
rank: 31
score: 99.03201059194711
patch: default : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 31
score: 98.98178100585938
patch: } break ; break ; } }
rank: 31
score: 98.92170061383929
patch: break ; ; / / /
rank: 31
score: 98.90775240384616
patch: log . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 31
score: 98.88896484375
patch: break ; break ; if ; return break ;
rank: 31
score: 98.86931501116071
patch: break ; case break ; }
rank: 31
score: 98.7889404296875
patch: break ; default : this . break ; }
rank: 32
score: 99.07266000600961
patch: case PEGASUS : f 0 *= f 1 ;
rank: 32
score: 99.07265799386161
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 32
score: 98.98006439208984
patch: return break ; break ; } }
rank: 32
score: 98.91775076729911
patch: break ; * break ; /
rank: 32
score: 98.90635329026442
patch: e . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 32
score: 98.86614435369319
patch: break ; default : f 0 . ; } }
rank: 32
score: 98.78568812779018
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + method ) ;
rank: 33
score: 99.06989288330078
patch: f 1 = x 1 ; }
rank: 33
score: 98.97909545898438
patch: return 0 . 0 ; break ;
rank: 33
score: 98.91718401227679
patch: break ; / * break ;
rank: 33
score: 98.90359262319711
patch: children = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 33
score: 98.86357879638672
patch: break ; default : continue ; }
rank: 33
score: 98.8612289428711
patch: break ; if ; { break ;
rank: 33
score: 98.78466796875
patch: break ; default : return - 1 ; }
rank: 34
score: 99.06410725911458
patch: f 1 = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 34
score: 99.06111653645833
patch: f 1 *= f 1 . $NUMBER$ ;
rank: 34
score: 99.0279541015625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ;
rank: 34
score: 98.97891671316964
patch: break ; for break ; }
rank: 34
score: 98.91425432477679
patch: break ; * return break ;
rank: 34
score: 98.90348597935268
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 34
score: 98.85675811767578
patch: break ; break ; break ; int
rank: 34
score: 98.7825594815341
patch: break ; default : f 1 = break ; }
rank: 35
score: 99.06084442138672
patch: f 1 = f 1 ; }
rank: 35
score: 99.0603496844952
patch: this . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 35
score: 99.02708082932692
patch: fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 35
score: 98.97280544704861
patch: return 0 . 0 ; break ; }
rank: 35
score: 98.91191755022321
patch: break ; ; return break ;
rank: 35
score: 98.90114182692308
patch: result = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 35
score: 98.85634155273438
patch: break ; break ; break ; return break ;
rank: 35
score: 98.85615370008681
patch: break ; default : break ; } ;
rank: 35
score: 98.77324829101562
patch: break ; default : f 1 = break ;
rank: 36
score: 99.0995624248798
patch: f 0 = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 36
score: 99.05559747869319
patch: inverted = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 36
score: 99.05065239800348
patch: f 0 *= f 0 . $NUMBER$ ;
rank: 36
score: 98.97270856584821
patch: break break ; } } }
rank: 36
score: 98.89627838134766
patch: break ; * else { break ;
rank: 36
score: 98.89312744140625
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 36
score: 98.84733072916667
patch: break ; break ; else
rank: 36
score: 98.7710469563802
patch: break ; default : }
rank: 37
score: 99.05181884765625
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 37
score: 99.02394205729166
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 37
score: 98.97257486979167
patch: return break ; } }
rank: 37
score: 98.89461844308036
patch: } break ; break ; ;
rank: 37
score: 98.88895357572116
patch: break ; case PEGASUS : return x 1 ;
rank: 37
score: 98.84180450439453
patch: break ; break ; break ; {
rank: 37
score: 98.76186301491477
patch: break ; default : return 1 . 0 ; }
rank: 38
score: 98.96096462673611
patch: return 0 . 0 ; break ; else
rank: 38
score: 98.88765462239583
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 1 ;
rank: 38
score: 98.85184733072917
patch: b 0 = Double . parse CaMeL Double ( ; }
rank: 38
score: 98.83965301513672
patch: break ; break ; { break ;
rank: 38
score: 98.75895472935268
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( break ) ;
rank: 39
score: 99.0923602764423
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ $STRING$ ) ;
rank: 39
score: 99.03378295898438
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 39
score: 99.01029205322266
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 39
score: 98.96090698242188
patch: } else { break ; } }
rank: 39
score: 98.88538469587054
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 39
score: 98.84810014204545
patch: break ; default : f 0 = ; } }
rank: 39
score: 98.8304951985677
patch: break ; break ; int
rank: 39
score: 98.75573120117187
patch: break ; default : f 0 = break ;
rank: 40
score: 99.09119873046875
patch: f 0 = 0 . $NUMBER$ ; break ;
rank: 40
score: 99.03934478759766
patch: f 1 = 0 . $NUMBER$ ;
rank: 40
score: 99.03358459472656
patch: break ; case PEGASUS : f 0 *= 0 . 0 ;
rank: 40
score: 99.00945685891544
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ;
rank: 40
score: 98.95653424944196
patch: break ; if break ; }
rank: 40
score: 98.89061737060547
patch: break ; / / * break ;
rank: 40
score: 98.88385009765625
patch: break ; case ABOVE _ SIDE :
rank: 40
score: 98.84175618489583
patch: break ; default : System . out . ; } ;
rank: 40
score: 98.82393973214286
patch: break ; break ; return ;
rank: 40
score: 98.75540161132812
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }
rank: 41
score: 99.0909194946289
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 41
score: 99.03355189732143
patch: final double rtol = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 41
score: 99.00857309194711
patch: buf = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 41
score: 98.93911743164062
patch: return 0 . 0 ; } break ; }
rank: 41
score: 98.8843994140625
patch: break ; ; * /
rank: 41
score: 98.88357979910714
patch: case PEGASUS : f 0 *= 0 . $NUMBER$ ;
rank: 41
score: 98.841357421875
patch: break ; default : System . ; } }
rank: 41
score: 98.81837047230114
patch: break ; break ; break ; if ; break ;
rank: 41
score: 98.75506591796875
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 42
score: 99.08873401988636
patch: inverted = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 42
score: 98.93844604492188
patch: break break ; } }
rank: 42
score: 98.88432312011719
patch: break ; ; * * break ;
rank: 42
score: 98.88162434895834
patch: Object ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 42
score: 98.8376973470052
patch: break ; default : System . err . ; } ;
rank: 42
score: 98.81591796875
patch: break ; break ; ( break ;
rank: 42
score: 98.75452677408855
patch: throw new Illegal CaMeL State CaMeL Exception ( break ) ;
rank: 43
score: 99.08171081542969
patch: f 0 *= f 1 ; }
rank: 43
score: 99.03075299944196
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 43
score: 98.93539428710938
patch: break ; else break ; } }
rank: 43
score: 98.88330078125
patch: break ; ; / / / /
rank: 43
score: 98.88152606670673
patch: it . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 43
score: 98.83664957682292
patch: f 0 = ; }
rank: 43
score: 98.80739135742188
patch: break ; break ; break ; break ; }
rank: 43
score: 98.75332406850961
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ;
rank: 44
score: 99.08069610595703
patch: f 0 = 0 . $NUMBER$ ;
rank: 44
score: 99.02900041852679
patch: f 0 *= f 0 ;
rank: 44
score: 99.00113351004464
patch: return x 0 . $NUMBER$ ;
rank: 44
score: 98.93513793945313
patch: return 0 . 0 ; } } break ;
rank: 44
score: 98.88057708740234
patch: continue ; case ANY _ SIDE :
rank: 44
score: 98.87920270647321
patch: break ; * / break ;
rank: 44
score: 98.83284301757813
patch: break ; default : f 1 = ; }
rank: 44
score: 98.80117458767361
patch: break ; break ; if ; / /
rank: 44
score: 98.7517977627841
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 45
score: 99.07950533353366
patch: ftol = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 45
score: 99.02273559570312
patch: f 0 = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 45
score: 99.00113351004464
patch: f 0 : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 45
score: 98.93351745605469
patch: return 0 . 0 ; } }
rank: 45
score: 98.87863595145089
patch: break ; ; catch break ;
rank: 45
score: 98.82992892795139
patch: break ; default : f 0 = ;
rank: 45
score: 98.79821099175348
patch: break ; break ; ; if break ;
rank: 45
score: 98.74693080357143
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + method ) ;
rank: 46
score: 99.07389322916667
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 46
score: 99.02571868896484
patch: f 0 *= 1 . 0 ;
rank: 46
score: 99.02175467354911
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 46
score: 98.9904052734375
patch: f 0 *= 0 . 0 ; break ;
rank: 46
score: 98.92979213169643
patch: break ; } } else {
rank: 46
score: 98.87782505580357
patch: break ; / / / /
rank: 46
score: 98.87643667367789
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 46
score: 98.82732282366071
patch: break ; default : f 0 . to CaMeL String ( ; }
rank: 46
score: 98.79334174262152
patch: break ; break ; ; return break ;
rank: 46
score: 98.74578302556819
patch: break ; default : f 0 = break ; }
rank: 47
score: 99.0729268391927
patch: throw new Math CaMeL Internal CaMeL Error ( true ) ;
rank: 47
score: 99.016845703125
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 47
score: 98.92920684814453
patch: } break ; } } break ;
rank: 47
score: 98.87575857979911
patch: } else { break ; }
rank: 47
score: 98.87245530348558
patch: table = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 47
score: 98.82596842447917
patch: break ; default : System . err . ; } }
rank: 47
score: 98.78955841064453
patch: break ; break ; if / /
rank: 48
score: 99.07235717773438
patch: f 1 *= 0 . $NUMBER$ ; break ;
rank: 48
score: 98.98568960336539
patch: break ; case REGULA _ FALSI : break ;
rank: 48
score: 98.928466796875
patch: break ; } return break ;
rank: 48
score: 98.86744907924107
patch: break ; * else break ;
rank: 48
score: 98.78925170898438
patch: break ; break ; if break ; break ;
rank: 48
score: 98.74464000355114
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 49
score: 99.01715959821429
patch: final double rtol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 49
score: 99.00745646158855
patch: f 0 = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 49
score: 98.92555454799107
patch: break ; return break ; }
rank: 49
score: 98.87015474759616
patch: res = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 49
score: 98.86643981933594
patch: break ; * / if break ;
rank: 49
score: 98.82434692382813
patch: break ; case ; default : break ; }
rank: 49
score: 98.78559875488281
patch: break ; break ; if ; /
rank: 49
score: 98.7405536358173
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ; }
rank: 50
score: 99.06882149832589
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 50
score: 99.01642166940789
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 50
score: 99.00560167100694
patch: f 1 *= f 0 . $NUMBER$ ;
rank: 50
score: 98.92504272460937
patch: break break ; }
rank: 50
score: 98.86867112379808
patch: context . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 50
score: 98.86640625
patch: } break ; ;
rank: 50
score: 98.7834981282552
patch: break ; else break ;
rank: 50
score: 98.74046107700893
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 51
score: 99.06709428267045
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 51
score: 99.01641845703125
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 51
score: 99.00222439236111
patch: f 1 *= 0 . $NUMBER$ ; }
rank: 51
score: 98.92354583740234
patch: break ; } else if break ;
rank: 51
score: 98.86843872070312
patch: return x 1 ; }
rank: 51
score: 98.82229953342014
patch: break ; default : this . ; }
rank: 51
score: 98.78199598524306
patch: break ; break ; if ; if ;
rank: 51
score: 98.73828125
patch: break ; default : throw break ; }
rank: 52
score: 99.01409912109375
patch: final double atol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 52
score: 98.92176649305556
patch: break ; } } } break ; }
rank: 52
score: 98.86559186662946
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 52
score: 98.86151123046875
patch: break ; ; / * break ;
rank: 52
score: 98.81892700195313
patch: break ; default : break ; } ; }
rank: 52
score: 98.77692413330078
patch: break ; break ; break ; throw
rank: 52
score: 98.7354248046875
patch: break ; case ; case ; : break ;
rank: 53
score: 99.06039826766305
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 53
score: 98.92165798611111
patch: break ; break ; } break ; }
rank: 53
score: 98.86418805803571
patch: int fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 53
score: 98.86033412388393
patch: break ; ; if break ;
rank: 53
score: 98.8153788248698
patch: break ; case break ;
rank: 53
score: 98.77579498291016
patch: break ; if ; ; break ;
rank: 53
score: 98.73487548828125
patch: break ; case ; case ; case ; :
rank: 54
score: 99.0015360514323
patch: f 1 = compute CaMeL Objective CaMeL Value ( ) ;
rank: 54
score: 98.97112165178571
patch: x 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 54
score: 98.86053107766544
patch: if ( Fast CaMeL Math . abs ( f 1 ) <= ftol ) {
rank: 54
score: 98.86012486049107
patch: break ; try { break ;
rank: 54
score: 98.81131417410714
patch: break ; ; case break ;
rank: 54
score: 98.77562255859375
patch: break ; break ; if ; if break ;
rank: 54
score: 98.73443603515625
patch: break ; default : return ;
rank: 55
score: 99.05394694010417
patch: rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 55
score: 99.00885881696429
patch: case PEGASUS : f 0 *= 0 . 0 ;
rank: 55
score: 98.97057166466347
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ;
rank: 55
score: 98.91680908203125
patch: break break ; } } break ;
rank: 55
score: 98.8585205078125
patch: break ; * catch break ;
rank: 55
score: 98.85720590444711
patch: System . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 55
score: 98.81052809495192
patch: break ; default : System . out . ; break ; }
rank: 55
score: 98.77511257595486
patch: break ; break ; break ; / /
rank: 55
score: 98.72950236002605
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( break ) ;
rank: 56
score: 99.0526123046875
patch: throw new Math CaMeL Internal CaMeL Error ( false ) ;
rank: 56
score: 98.99742296006944
patch: f 1 *= x 0 . $NUMBER$ ;
rank: 56
score: 98.97053745814732
patch: default : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 56
score: 98.9161376953125
patch: break ; * break ; } }
rank: 56
score: 98.85706329345703
patch: break ; / / if break ;
rank: 56
score: 98.85177612304688
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 56
score: 98.8097811612216
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; }
rank: 56
score: 98.77490912543402
patch: break ; break ; if break ; }
rank: 57
score: 98.99722726004464
patch: f 1 = f 0 ;
rank: 57
score: 98.96358548677884
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / ) ;
rank: 57
score: 98.85365295410156
patch: break ; break ; * break ;
rank: 57
score: 98.84912109375
patch: break ; case BELOW _ SIDE :
rank: 57
score: 98.80891723632813
patch: break ; default : f 0 . break ;
rank: 57
score: 98.77322823660714
patch: if ; break ; break ;
rank: 58
score: 99.04653695913461
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x ) ;
rank: 58
score: 98.99388776506696
patch: f 1 *= x 0 ;
rank: 58
score: 98.84896414620536
patch: break ; * if break ;
rank: 58
score: 98.84810093470982
patch: logger . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 58
score: 98.80486188616071
patch: break ; default : f 0 . to CaMeL String ( ) ;
rank: 58
score: 98.76668090820313
patch: break ; break ; if ; / / /
rank: 58
score: 98.72324044363839
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 59
score: 98.98894391741071
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 59
score: 98.96220179966518
patch: x 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 59
score: 98.91375732421875
patch: break ; } } catch break ;
rank: 59
score: 98.84700230189732
patch: break ; ; ; * /
rank: 59
score: 98.76512562144886
patch: break ; break ; if ; break ; break ;
rank: 59
score: 98.72316487630208
patch: break ; case ; ; case ; :
rank: 60
score: 99.04435221354167
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 60
score: 98.9882061298077
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; default :
rank: 60
score: 98.90431043836806
patch: return 0 . 0 ; } break ;
rank: 60
score: 98.84548950195312
patch: break ; ; else { break ;
rank: 60
score: 98.79905192057292
patch: break ; default : System . out . ; break ;
rank: 60
score: 98.72135416666667
patch: sb . append ( $STRING$ ) ; }
rank: 61
score: 99.04075622558594
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 61
score: 99.00105285644531
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 61
score: 98.98668494591347
patch: f 1 = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 61
score: 98.96092006138393
patch: } else { throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 61
score: 98.9023208618164
patch: return break ; } } } }
rank: 61
score: 98.84519740513393
patch: } break ; break ; }
rank: 61
score: 98.84081159319196
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x ;
rank: 61
score: 98.79620916193181
patch: b 0 . to CaMeL String ( ) ; }
rank: 61
score: 98.75855255126953
patch: break ; break ; for break ;
rank: 61
score: 98.71963936941964
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ;
rank: 62
score: 99.0360576923077
patch: ftol = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 62
score: 99.00060017903645
patch: throw new Math CaMeL Internal CaMeL Error ( this ) ;
rank: 62
score: 98.96086883544922
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 62
score: 98.90188259548611
patch: break ; break ; } } break ;
rank: 62
score: 98.83891296386719
patch: break ; break ; ; / /
rank: 62
score: 98.83853488498264
patch: break ; case REGULA _ FALSI : f 0 *= 0 . 0 ;
rank: 62
score: 98.75748443603516
patch: break ; break ; break ; if
rank: 62
score: 98.71726481119792
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; }
rank: 63
score: 99.03367262620192
patch: ftol = get CaMeL Relative CaMeL Accuracy ( ) ; }
rank: 63
score: 98.98318045479911
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 63
score: 98.83734130859375
patch: } if break ; break ;
rank: 63
score: 98.83668736049107
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 63
score: 98.79349772135417
patch: break ; default : f 0 . ;
rank: 63
score: 98.7569808959961
patch: break ; if ; break ; ;
rank: 63
score: 98.71576538085938
patch: break ; default : return 0 . 0 ;
rank: 64
score: 98.99998474121094
patch: return x 1 - x 1 ;
rank: 64
score: 98.96015276227679
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . 0 ) ;
rank: 64
score: 98.89765930175781
patch: break ; break ; } else {
rank: 64
score: 98.8363037109375
patch: break ; * / { break ;
rank: 64
score: 98.8355712890625
patch: break ; case REGULA _ FALSI : f
rank: 64
score: 98.7932637532552
patch: b 1 = Double . parse CaMeL Double ( ; }
rank: 64
score: 98.75508117675781
patch: break ; break ; break ; return
rank: 64
score: 98.71541050502232
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 65
score: 99.03137885199652
patch: f 0 *= 0 . $NUMBER$ ; }
rank: 65
score: 98.99984741210938
patch: f 0 *= 1 ;
rank: 65
score: 98.97831726074219
patch: f 1 *= x 1 ; }
rank: 65
score: 98.8924789428711
patch: break ; } catch break ; }
rank: 65
score: 98.83589935302734
patch: break ; * break ; break ;
rank: 65
score: 98.75337219238281
patch: break ; break ; ; if ;
rank: 65
score: 98.71417236328125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( break ) ;
rank: 66
score: 99.02897135416667
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 66
score: 98.997802734375
patch: switch ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) {
rank: 66
score: 98.975830078125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 66
score: 98.95809500558036
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 66
score: 98.89227294921875
patch: return break ; } } }
rank: 66
score: 98.83313860212054
patch: break ; case ; out ;
rank: 66
score: 98.82765706380208
patch: ! Fast CaMeL Math . abs ( f 1 ) ;
rank: 66
score: 98.78644476996527
patch: break ; default : return x ; }
rank: 66
score: 98.75318400065105
patch: break ; int break ;
rank: 66
score: 98.7140884399414
patch: break ; > 0 . $NUMBER$ :
rank: 67
score: 98.99443054199219
patch: final double fx 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 67
score: 98.9757792154948
patch: f 1 *= compute CaMeL Objective CaMeL Value ( ) ;
rank: 67
score: 98.89109293619792
patch: break ; * * * break ; }
rank: 67
score: 98.83089773995536
patch: break ; else return break ;
rank: 67
score: 98.8249755859375
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 67
score: 98.78566487630208
patch: break ; case ; }
rank: 67
score: 98.75202178955078
patch: break ; if break ; break ;
rank: 67
score: 98.70821126302083
patch: break ; default : f 1 ; }
rank: 68
score: 99.02657877604166
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 68
score: 98.95791391225961
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 68
score: 98.89022827148438
patch: break ; break ; } } return break ;
rank: 68
score: 98.828857421875
patch: return break ; ; break ;
rank: 68
score: 98.7842508951823
patch: break ; default : System . out . ; } }
rank: 68
score: 98.75164794921875
patch: break ; break ; } if break ;
rank: 69
score: 98.97266496930804
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; } }
rank: 69
score: 98.95277756911058
patch: else { throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 69
score: 98.88980538504464
patch: return break ; break ; }
rank: 69
score: 98.82667541503906
patch: break ; / * if break ;
rank: 69
score: 98.82327270507812
patch: break ; case REGULA _ FALSI : {
rank: 69
score: 98.77961730957031
patch: break ; default break ; } }
rank: 69
score: 98.75125558035714
patch: break ; break ; try /
rank: 70
score: 99.0257568359375
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 70
score: 98.97254943847656
patch: f 0 = f 1 ; }
rank: 70
score: 98.88662719726562
patch: } else { return break ; }
rank: 70
score: 98.82278442382812
patch: break ; / * * break ;
rank: 70
score: 98.8215801532452
patch: case REGULA _ FALSI : return x 1 ;
rank: 70
score: 98.77759399414063
patch: break ; default : f 0 ++ ; }
rank: 70
score: 98.74907769097223
patch: break ; break ; } return break ;
rank: 70
score: 98.70254516601562
patch: break ; > 0 . 0 :
rank: 71
score: 99.02308146158855
patch: f 0 = compute CaMeL Objective CaMeL Value ( ) ;
rank: 71
score: 98.88471984863281
patch: break ; } else break ; }
rank: 71
score: 98.82124546595982
patch: break ; break ; ; /
rank: 71
score: 98.82009887695312
patch: { Fast CaMeL Math . abs ( f 1 ) ;
rank: 71
score: 98.77712180397727
patch: break ; default : System . break ; } }
rank: 71
score: 98.74873860677083
patch: break ; break ; if / / /
rank: 71
score: 98.70024956597223
patch: break ; default : f 1 = ;
rank: 72
score: 98.98572591145833
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 72
score: 98.9658447265625
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS ) ;
rank: 72
score: 98.94845377604166
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 72
score: 98.82069396972656
patch: return break ; break ; break ;
rank: 72
score: 98.81910705566406
patch: t 0 *= 0 . $NUMBER$ ;
rank: 72
score: 98.775830078125
patch: break ; default : System . out . ;
rank: 72
score: 98.7484130859375
patch: break ; break ; if break ; ;
rank: 72
score: 98.69917515345982
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + method ) ;
rank: 73
score: 98.98484293619792
patch: break throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 73
score: 98.96581159319196
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ ) ;
rank: 73
score: 98.94779459635417
patch: break ; case PEGASUS : f 0 *= 0 . $NUMBER$ ; break ;
rank: 73
score: 98.88158307756696
patch: break ; * * * /
rank: 73
score: 98.81943766276042
patch: } * break ; /
rank: 73
score: 98.81797438401442
patch: break ; case REGULA _ FALSI : / /
rank: 73
score: 98.77472686767578
patch: break ; default : ; ; }
rank: 73
score: 98.74821472167969
patch: break ; break ; } if ;
rank: 73
score: 98.69898332868304
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; }
rank: 74
score: 98.94547816685268
patch: else { throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 74
score: 98.88077121310764
patch: break ; } } } if break ;
rank: 74
score: 98.81934204101563
patch: break ; ; *
rank: 74
score: 98.81695149739583
patch: continue ; case REGULA _ FALSI : return x 1 ;
rank: 74
score: 98.77249849759616
patch: throw new Illegal CaMeL Argument CaMeL Exception ( break ) ; }
rank: 74
score: 98.74748011997768
patch: break ; ; ; break ;
rank: 74
score: 98.69527762276786
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ ) ;
rank: 75
score: 98.96488131009616
patch: } throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 75
score: 98.88074493408203
patch: break ; } if ( break ;
rank: 75
score: 98.81732177734375
patch: } break ; ; ;
rank: 75
score: 98.77230224609374
patch: break ; default : throw new ; } }
rank: 75
score: 98.74686431884766
patch: break ; if ; return break ;
rank: 75
score: 98.69498697916667
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ;
rank: 76
score: 98.98302350725446
patch: final double atol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 76
score: 98.96279471261161
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 76
score: 98.9424579326923
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 76
score: 98.87931060791016
patch: break ; else if break ; }
rank: 76
score: 98.8165512084961
patch: break ; break ; case ; *
rank: 76
score: 98.81202392578125
patch: return f 1 ;
rank: 76
score: 98.77136840820313
patch: break ; default : System . ; } ;
rank: 76
score: 98.74639892578125
patch: break ; break ; return ; break ;
rank: 76
score: 98.69302804129464
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;
rank: 77
score: 99.00818980823864
patch: approximation = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 77
score: 98.98146565755208
patch: throw new Math CaMeL Internal CaMeL Error ( $NUMBER$ ) ;
rank: 77
score: 98.96218436104911
patch: f 0 = x 0 ;
rank: 77
score: 98.87864854600694
patch: break ; } else { break ; }
rank: 77
score: 98.81370849609375
patch: break ; ; /
rank: 77
score: 98.8098895733173
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 77
score: 98.74613952636719
patch: break ; break ; / / /
rank: 77
score: 98.69299994574652
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 78
score: 99.0075174967448
patch: f 0 *= compute CaMeL Objective CaMeL Value ( ) ;
rank: 78
score: 98.98031955295139
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) {
rank: 78
score: 98.96124267578125
patch: f 0 = x 1 ; }
rank: 78
score: 98.93746744791666
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 78
score: 98.87645612444196
patch: break ; } catch break ;
rank: 78
score: 98.81292724609375
patch: break ; ; * if break ;
rank: 78
score: 98.76950073242188
patch: f 1 = Double . parse CaMeL Double ( ; }
rank: 78
score: 98.7449618252841
patch: break ; break ; if ; if ; break ;
rank: 78
score: 98.69224964488636
patch: switch ( method . get CaMeL Type ( ) ;
rank: 79
score: 99.0060526529948
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 79
score: 98.9600830078125
patch: f 1 *= fx ;
rank: 79
score: 98.87457275390625
patch: } break ; }
rank: 79
score: 98.80961390904018
patch: break ; ; / ; /
rank: 79
score: 98.80724487304687
patch: break ; case PEGASUS : f
rank: 79
score: 98.74163818359375
patch: break ; break ; if * break ;
rank: 79
score: 98.69178989955357
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + break ) ;
rank: 80
score: 98.97739083426339
patch: super . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 80
score: 98.87405395507812
patch: break ; } break ; break ;
rank: 80
score: 98.808349609375
patch: break ; break ; out ;
rank: 80
score: 98.8054707845052
patch: break ; case REGULA _ FALSI : }
rank: 80
score: 98.76766967773438
patch: break ; default : f 0 = x 1 ; }
rank: 80
score: 98.74129638671874
patch: break ; if ; break ; return break ;
rank: 81
score: 98.99869210379464
patch: System . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 81
score: 98.93416654146634
patch: default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 81
score: 98.87312147352431
patch: break ; } else return break ; }
rank: 81
score: 98.80520290798611
patch: break ; case REGULA _ FALSI : f 1 *= 0 . $NUMBER$ ;
rank: 81
score: 98.76754056490384
patch: break ; default : System . err . ; } break ;
rank: 81
score: 98.74121856689453
patch: break ; break ; break ; else
rank: 81
score: 98.68866521661931
patch: break ; > 0 . 0 = x 1 ;
rank: 82
score: 98.97444370814732
patch: final double atol = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 82
score: 98.93291272615132
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ; }
rank: 82
score: 98.87271118164062
patch: break break ; } catch break ;
rank: 82
score: 98.8047207919034
patch: tmp = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 82
score: 98.80228097098214
patch: break ; * ++ break ;
rank: 82
score: 98.7616854580966
patch: b 0 = Double . parse CaMeL Double ( ;
rank: 82
score: 98.74002838134766
patch: break ; break ; if ; int
rank: 82
score: 98.6843994140625
patch: break ; default : break ; } break ;
rank: 83
score: 98.97394353693181
patch: return x 1 ; case PEGASUS :
rank: 83
score: 98.95255533854167
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 83
score: 98.93250229779412
patch: throw new Math CaMeL Internal CaMeL Error ( ) . to CaMeL String ( ) ;
rank: 83
score: 98.86753845214844
patch: break ; } return break ; }
rank: 83
score: 98.8006591796875
patch: break ; super . break ; }
rank: 83
score: 98.80056326729911
patch: exception . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 83
score: 98.76129913330078
patch: break ; default : ; } ;
rank: 83
score: 98.7396240234375
patch: break ; break ; break ; *
rank: 83
score: 98.68274864783653
patch: sb . append ( $STRING$ ) . append ( break ) ;
rank: 84
score: 98.99341759314903
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 84
score: 98.9520199424342
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + ) ;
rank: 84
score: 98.93137904575893
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ;
rank: 84
score: 98.86534423828125
patch: throw new Illegal CaMeL Argument CaMeL Exception break ;
rank: 84
score: 98.79983956473214
patch: break ; ; * ; /
rank: 84
score: 98.7989971454327
patch: throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 84
score: 98.76070462740384
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + method ;
rank: 84
score: 98.73956909179688
patch: break ; break ; if / { break ;
rank: 84
score: 98.68040248325893
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 85
score: 98.96751403808594
patch: return x 1 - f 1 ;
rank: 85
score: 98.8626220703125
patch: break ; break ; } } break ; }
rank: 85
score: 98.79777018229167
patch: break ; for break ;
rank: 85
score: 98.79757254464286
patch: result = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 85
score: 98.75986328125
patch: break ; case ;
rank: 85
score: 98.73900756835937
patch: break ; break ; break ; if ; {
rank: 85
score: 98.67540564903847
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 86
score: 98.95095825195312
patch: f 1 *= get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 86
score: 98.79708426339286
patch: } * * * break ;
rank: 86
score: 98.79466901506696
patch: break ; case REGULA _ FALSI : / * /
rank: 86
score: 98.75518798828125
patch: b 0 = Double . value CaMeL Of ( ; }
rank: 86
score: 98.73046112060547
patch: break ; break ; break ; try
rank: 86
score: 98.67445068359375
patch: throw new Assertion CaMeL Error ( $STRING$ ) ;
rank: 87
score: 98.962890625
patch: switch ( method ) {
rank: 87
score: 98.95074932391827
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 87
score: 98.8563232421875
patch: break ; } } } } }
rank: 87
score: 98.795654296875
patch: return break ; break ; ; ;
rank: 87
score: 98.79362487792969
patch: break ; case REGULA _ FALSI : return x 1 ; }
rank: 87
score: 98.75236293247768
patch: break ; default ; } ;
rank: 87
score: 98.73038940429687
patch: break ; break ; if ; * break ;
rank: 87
score: 98.67443169487848
patch: break ; default : return false ; }
rank: 88
score: 98.98915608723958
patch: ftol = compute CaMeL Objective CaMeL Value ( ) ;
rank: 88
score: 98.95071176382211
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x ) ;
rank: 88
score: 98.85530090332031
patch: break ; } } break ; else
rank: 88
score: 98.79558563232422
patch: break ; break ; ; ; *
rank: 88
score: 98.75208629261364
patch: break ; case ; default : break ; } }
rank: 88
score: 98.72966003417969
patch: break ; ; if ; break ;
rank: 88
score: 98.67327880859375
patch: break ; default : return 0 ; }
rank: 89
score: 98.95997450086806
patch: f 0 *= f 1 . 1 ;
rank: 89
score: 98.94952862079327
patch: inverted : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 89
score: 98.92726487379808
patch: f 0 = compute CaMeL Objective CaMeL Value ( ) ; }
rank: 89
score: 98.85368347167969
patch: break break ; } } } }
rank: 89
score: 98.79556274414062
patch: break ; * * if break ;
rank: 89
score: 98.7908935546875
patch: break ; case PEGASUS : f 0 *= 0 . $NUMBER$ ; }
rank: 89
score: 98.75103759765625
patch: break ; default : throw ; } }
rank: 89
score: 98.72941371372768
patch: break ; break ; System ;
rank: 90
score: 98.94349888392857
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } } }
rank: 90
score: 98.85100446428571
patch: return * * break ; }
rank: 90
score: 98.79513113839286
patch: break ; break ; ; *
rank: 90
score: 98.78977748325893
patch: state . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 90
score: 98.74680582682292
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 91
score: 98.95915876116071
patch: super . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 91
score: 98.92532687717014
patch: f 0 *= f 1 ; break ;
rank: 91
score: 98.79274495442708
patch: break ; * ; /
rank: 91
score: 98.78825073242187
patch: return get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 91
score: 98.71858723958333
patch: break ; break ; while ; break ;
rank: 91
score: 98.66749064127605
patch: break ; > 0 . 0 = 0 . 0 ;
rank: 92
score: 98.95845947265624
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$
rank: 92
score: 98.92418619791667
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ;
rank: 92
score: 98.848681640625
patch: return 0 . 0 ; } } else {
rank: 92
score: 98.79237583705357
patch: } * * break ; /
rank: 92
score: 98.7882080078125
patch: continue ; case RIGHT _ SIDE :
rank: 92
score: 98.74368286132812
patch: f 0 = Double . parse CaMeL Double ( ; }
rank: 92
score: 98.71851806640625
patch: break ; break ; break ; break ; ;
rank: 92
score: 98.66231863839286
patch: break ; break ; default :
rank: 93
score: 98.95778982979911
patch: final double ftol = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 93
score: 98.94057791573661
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 93
score: 98.92418077256944
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ; }
rank: 93
score: 98.84852905273438
patch: return 0 . 0 ; break ; } }
rank: 93
score: 98.79053606305804
patch: break ; ; else break ;
rank: 93
score: 98.78699669471153
patch: state = Fast CaMeL Math . abs ( f 1 ) ;
rank: 93
score: 98.71636962890625
patch: break ; return ; break ;
rank: 93
score: 98.66168212890625
patch: break ; default : f 1 = x 1 ; }
rank: 94
score: 98.98432752821181
patch: f 0 *= x 0 . $NUMBER$ ;
rank: 94
score: 98.95753696986607
patch: final double ftol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 94
score: 98.9398193359375
patch: f 1 *= get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 94
score: 98.78517503004808
patch: continue ; case PEGASUS : return x 1 ;
rank: 94
score: 98.78384835379464
patch: break ; ; break ; ;
rank: 94
score: 98.7418545809659
patch: break ; default : f 0 . ; } ;
rank: 94
score: 98.71480305989583
patch: break ; break ; break ; return ;
rank: 94
score: 98.65927124023438
patch: break ; default : case ; }
rank: 95
score: 98.84429168701172
patch: break ; } } } if ;
rank: 95
score: 98.77913120814732
patch: break ; break ; * ;
rank: 95
score: 98.74143676757812
patch: break ; default : break ; ; } }
rank: 95
score: 98.65908578725961
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + method ;
rank: 96
score: 98.9558349609375
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 96
score: 98.84335327148438
patch: break ; } else { return break ; }
rank: 96
score: 98.78127615792411
patch: children = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 96
score: 98.77725219726562
patch: break ; break ; ; * *
rank: 96
score: 98.74022827148437
patch: break ; default : return x 0 ; }
rank: 96
score: 98.71456909179688
patch: break ; break ; throw
rank: 96
score: 98.65871360085227
patch: break . x 0 = break . x 1 ;
rank: 97
score: 98.98347778320313
patch: f 0 = 0 . 0 ; break ;
rank: 97
score: 98.95484270368304
patch: inverted = ! inverted ; }
rank: 97
score: 98.9207992553711
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + ) ;
rank: 97
score: 98.843017578125
patch: return break ; } } break ; }
rank: 97
score: 98.78050648082386
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) .
rank: 97
score: 98.7387451171875
patch: break ; default : return x 1 ; }
rank: 97
score: 98.71300159801136
patch: break ; break ; break ; break ; break ;
rank: 98
score: 98.98316446940105
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 98
score: 98.93681989397321
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 98
score: 98.92049967447916
patch: fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 98
score: 98.8419189453125
patch: break ; } } if break ; }
rank: 98
score: 98.7791239420573
patch: continue ; case REGULA _ FALSI : /
rank: 98
score: 98.77549525669643
patch: break ; case = break ;
rank: 98
score: 98.73627263849431
patch: throw new Illegal CaMeL State CaMeL Exception ( ; }
rank: 98
score: 98.71204833984375
patch: break ; break ; if ; break ; }
rank: 99
score: 98.97825113932292
patch: inverted = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 99
score: 98.95409046519886
patch: break ; case PEGASUS : break ;
rank: 99
score: 98.92017279730902
patch: throw new Internal CaMeL Error ( ) ;
rank: 99
score: 98.84024810791016
patch: return break ; } } else {
rank: 99
score: 98.7774658203125
patch: break ; case ANY _ SIDE : return x 1 ;
rank: 99
score: 98.77423967633929
patch: break ; ; * break ;
rank: 99
score: 98.70973205566406
patch: break ; break ; if / ;
rank: 99
score: 98.65025111607143
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 100
score: 98.97792405348558
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 100
score: 98.95403497869319
patch: case PEGASUS : return x 1 ;
rank: 100
score: 98.91964111328124
patch: break ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; break ;
rank: 100
score: 98.83795166015625
patch: break ; } } } } break ;
rank: 100
score: 98.7761001586914
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 100
score: 98.77358669704861
patch: return break ; break ; if break ;
rank: 100
score: 98.70818481445312
patch: break ; break ; break ; { break ;
rank: 100
score: 98.64810791015626
patch: throw new Illegal CaMeL State CaMeL Exception ( ;
rank: 101
score: 98.95241873604911
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } break ;
rank: 101
score: 98.93323567708333
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 101
score: 98.9188983623798
patch: * / throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 101
score: 98.83384486607143
patch: break ; } } if ;
rank: 101
score: 98.77491106305804
patch: break ; case REGULA _ FALSI : / / ;
rank: 101
score: 98.7733154296875
patch: break ; break ; ; / *
rank: 101
score: 98.73359375
patch: break ; default : System . err ; }
rank: 101
score: 98.70612182617188
patch: break ; break ; if ; break ; /
rank: 101
score: 98.64565022786458
patch: break ; default : if ( break )
rank: 102
score: 98.975810546875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 102
score: 98.95035494290866
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 102
score: 98.9182373046875
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 102
score: 98.83316040039062
patch: } break ; break ; break ;
rank: 102
score: 98.77286783854167
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . double CaMeL Value ( ) ;
rank: 102
score: 98.77001953125
patch: break ; ; * * /
rank: 102
score: 98.70546875
patch: break ; break ; break ; if ; int
rank: 102
score: 98.64564005533855
patch: break . $NUMBER$ : f 0 = break . $NUMBER$ ;
rank: 103
score: 98.97542027064732
patch: f 0 = compute CaMeL Objective CaMeL Value ( x ) ; }
rank: 103
score: 98.95028921274039
patch: break ; case PEGASUS : return x 0 ;
rank: 103
score: 98.92947998046876
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) ) ;
rank: 103
score: 98.83134155273437
patch: break ; break ; } } if break ;
rank: 103
score: 98.76982964409723
patch: } break ; break ; if break ;
rank: 103
score: 98.76915631975446
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 103
score: 98.72882080078125
patch: return x 0 ; }
rank: 103
score: 98.70532836914063
patch: break ; break ; if / / / /
rank: 103
score: 98.64346749441964
patch: break ; case ; TRUE :
rank: 104
score: 98.92919921875
patch: f 1 ; throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 104
score: 98.91333984375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 104
score: 98.83107212611607
patch: break ; } else break ;
rank: 104
score: 98.76847621372768
patch: exception . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 104
score: 98.76805114746094
patch: break ; / / / / /
rank: 104
score: 98.702880859375
patch: break ; break ; } ;
rank: 104
score: 98.64289994673295
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ;
rank: 105
score: 98.94188842773437
patch: f 1 *= 0 . 0 ; break ;
rank: 105
score: 98.91228170955883
patch: break ; case REGULA _ FALSI : f 0 = f 1 ;
rank: 105
score: 98.82886352539063
patch: return 0 . 0 ; } return break ;
rank: 105
score: 98.76763916015625
patch: break ; case REGULA _ FALSI : f 0 *= 0 . 1 ;
rank: 105
score: 98.76568603515625
patch: break ; case ; break ;
rank: 105
score: 98.72601787860577
patch: break ; default : System . out . ; } break ;
rank: 105
score: 98.70215454101563
patch: break ; break ; if ; break ; ;
rank: 105
score: 98.6402587890625
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;
rank: 106
score: 98.94182671440973
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 106
score: 98.92786516462054
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 106
score: 98.9116439819336
patch: break ; case PEGASUS : f 0 *= f 1 ; }
rank: 106
score: 98.82848103841145
patch: } if break ; }
rank: 106
score: 98.76717703683036
patch: res = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 106
score: 98.76493072509766
patch: break ; ; ; if break ;
rank: 106
score: 98.72462972005208
patch: b 0 = ; }
rank: 106
score: 98.70172882080078
patch: break ; break ; if ; *
rank: 106
score: 98.63915405273437
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 107
score: 98.82802908761161
patch: return break ; } break ;
rank: 107
score: 98.7669906616211
patch: break ; case REGULA _ FALSI : f 0 *= 0 ;
rank: 107
score: 98.76395961216518
patch: break ; ; / * /
rank: 107
score: 98.71933322482639
patch: break ; case ; default : break ;
rank: 107
score: 98.69927106584821
patch: break ; break ; while ;
rank: 107
score: 98.63840157645089
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + break ) ;
rank: 108
score: 98.94141642252605
patch: throw new new Math CaMeL Internal CaMeL Error ( ) ;
rank: 108
score: 98.92659214564732
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ;
rank: 108
score: 98.82623291015625
patch: return 0 . 0 ; } else {
rank: 108
score: 98.76679338727679
patch: e . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 108
score: 98.76124790736607
patch: break ; ; ++ break ;
rank: 108
score: 98.69835205078125
patch: break ; break ; break ; ; break ;
rank: 109
score: 98.92517961774554
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 109
score: 98.82369995117188
patch: break ; } } break ; break ; }
rank: 109
score: 98.76676940917969
patch: break ; case REGULA _ FALSI : inverted = ! inverted ;
rank: 109
score: 98.76117621527777
patch: break ; * * * * break ;
rank: 109
score: 98.71649724786931
patch: break ; default : f 0 ++ ; } }
rank: 109
score: 98.6374003092448
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ; }
rank: 110
score: 98.93853759765625
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ;
rank: 110
score: 98.90049641927084
patch: break ; case PEGASUS : f 0 = f 1 ;
rank: 110
score: 98.82302517361111
patch: break break ; } } return break ;
rank: 110
score: 98.76650390625
patch: break ; case REGULA _ FALSI : return x 0 ;
rank: 110
score: 98.75691528320313
patch: break break ; ;
rank: 110
score: 98.71516636439732
patch: break ; default : System . err . ; } break ; }
rank: 110
score: 98.69755249023437
patch: break ; break ; break ; if / /
rank: 110
score: 98.63720703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 111
score: 98.9693359375
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 111
score: 98.92272271050348
patch: f 1 = x 1 ; break ;
rank: 111
score: 98.9004638671875
patch: } f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 111
score: 98.82250213623047
patch: break ; this . break ; }
rank: 111
score: 98.76503208705357
patch: state . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 111
score: 98.7554931640625
patch: break ; ; ; / /
rank: 111
score: 98.71492513020833
patch: break ; default : {
rank: 111
score: 98.69746229383681
patch: break ; break ; ; / / /
rank: 111
score: 98.63682725694444
patch: break ; default : this . break ;
rank: 112
score: 98.96921793619792
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 112
score: 98.81940307617188
patch: break ; } else
rank: 112
score: 98.76186899038461
patch: break ; case REGULA _ FALSI : / :
rank: 112
score: 98.75338745117188
patch: break ; * / * break ;
rank: 112
score: 98.63560994466145
patch: default : break ; }
rank: 113
score: 98.9222881610577
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL
rank: 113
score: 98.81845528738839
patch: break ; x ++ ; }
rank: 113
score: 98.75940813337054
patch: break ; case REGULA _ FALSI : / / :
rank: 113
score: 98.75326102120536
patch: break ; ; * / /
rank: 113
score: 98.71192423502605
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; } }
rank: 113
score: 98.694287109375
patch: break ; break ; break ; if ; ;
rank: 113
score: 98.63506208147321
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ; }
rank: 114
score: 98.93255615234375
patch: f 0 *= 0 . 0 ; }
rank: 114
score: 98.92213439941406
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 114
score: 98.89749908447266
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 114
score: 98.81777615017361
patch: return 0 . ; * break ; }
rank: 114
score: 98.75290352957589
patch: break ; out = break ;
rank: 114
score: 98.70982008713942
patch: break ; default : f 0 . break ; } } }
rank: 114
score: 98.69307250976563
patch: break ; break ; break ; if ; /
rank: 114
score: 98.63442160866477
patch: break ; > 0 . 0 = x $NUMBER$ ;
rank: 115
score: 98.96546427408855
patch: throw new Math CaMeL Internal CaMeL Error ( + ) ;
rank: 115
score: 98.9324951171875
patch: throw Math CaMeL Internal CaMeL Error ( ) ;
rank: 115
score: 98.89671107700893
patch: f 0 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 115
score: 98.81747872488839
patch: return * break ; } }
rank: 115
score: 98.75843811035156
patch: continue ; case LEFT _ SIDE :
rank: 115
score: 98.75220598493304
patch: if break ; break ; ;
rank: 115
score: 98.70951538085937
patch: break ; default : System . ; ; }
rank: 115
score: 98.69056047712054
patch: break ; break ; if /
rank: 115
score: 98.63186306423611
patch: break ; default : return null ; }
rank: 116
score: 98.96372884114584
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 116
score: 98.9285888671875
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 116
score: 98.89516038161058
patch: x 0 throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 116
score: 98.81729888916016
patch: } if break ; break ; }
rank: 116
score: 98.75799560546875
patch: exception . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 116
score: 98.75211588541667
patch: break ; ; / ;
rank: 116
score: 98.70851353236607
patch: break ; default : System . out . ; break ; } }
rank: 116
score: 98.68885498046875
patch: break ; break ; break ; break ; /
rank: 116
score: 98.63107299804688
patch: break ; > 0 . 0 = x 1 ; }
rank: 117
score: 98.96297781808036
patch: System . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 117
score: 98.927734375
patch: case PEGASUS : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 117
score: 98.92111002604166
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 ) ;
rank: 117
score: 98.89353434244792
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; }
rank: 117
score: 98.75720977783203
patch: break ; case REGULA _ FALSI : switch ( method ) {
rank: 117
score: 98.75013078962054
patch: break ; else { break ;
rank: 117
score: 98.68729400634766
patch: break ; break ; if ; }
rank: 117
score: 98.63001360212054
patch: if ( break . get CaMeL Type ( ) . equals ( ;
rank: 118
score: 98.96028645833333
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 118
score: 98.92772001378677
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( )
rank: 118
score: 98.89303823617789
patch: f 0 throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 118
score: 98.81406656901042
patch: } break ; } }
rank: 118
score: 98.7561767578125
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 118
score: 98.74646868024554
patch: break ; * * ; /
rank: 118
score: 98.70674272017045
patch: b 1 = Double . parse CaMeL Double ( ;
rank: 118
score: 98.68671417236328
patch: break ; break ; if / {
rank: 118
score: 98.62861938476563
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 119
score: 98.95924886067708
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 119
score: 98.92728969029018
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + value ) ;
rank: 119
score: 98.91497802734375
patch: f 0 *= x 0 ;
rank: 119
score: 98.81351143973214
patch: break ; if ( break ;
rank: 119
score: 98.75602722167969
patch: m 0 *= 0 . $NUMBER$ ;
rank: 119
score: 98.74534606933594
patch: break ; break ; * ; *
rank: 119
score: 98.7060546875
patch: break ; default : f 0 = break ; } }
rank: 119
score: 98.68604532877605
patch: break ; break ; check
rank: 119
score: 98.62795003255208
patch: default : throw new Illegal CaMeL State CaMeL Exception ; }
rank: 120
score: 98.92693328857422
patch: break ; case PEGASUS : f 0 *= 0 . 1 ;
rank: 120
score: 98.89167131696429
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ; }
rank: 120
score: 98.81258719308036
patch: } else if break ; }
rank: 120
score: 98.75513634314903
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . break ;
rank: 120
score: 98.74344211154514
patch: break ; ; * * * break ;
rank: 120
score: 98.6857401529948
patch: break ; if ; ;
rank: 120
score: 98.626708984375
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;
rank: 121
score: 98.81219482421875
patch: return 0 . ; } break ; }
rank: 121
score: 98.75506591796875
patch: double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 121
score: 98.74320765904018
patch: break ; ; / / ;
rank: 121
score: 98.70053439670139
patch: break ; default : ; } } ;
rank: 121
score: 98.6824951171875
patch: break ; break ; try / ;
rank: 121
score: 98.62642124720982
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 122
score: 98.92317000679348
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 122
score: 98.88994891826923
patch: } } throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 122
score: 98.80780029296875
patch: break ; break ; } else return break ;
rank: 122
score: 98.75421142578125
patch: } Fast CaMeL Math . abs ( f 1 ) ;
rank: 122
score: 98.74242292131696
patch: } * * break ; ;
rank: 122
score: 98.67891693115234
patch: break ; break ; if ; try
rank: 123
score: 98.95273263113839
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ $STRING$ ) ; }
rank: 123
score: 98.91312662760417
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 123
score: 98.88987731933594
patch: return x 0 . x 1 ;
rank: 123
score: 98.80670166015625
patch: break ; break ; ; }
rank: 123
score: 98.75345284598214
patch: log . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 123
score: 98.73814174107143
patch: } break ; break ; *
rank: 123
score: 98.69741586538461
patch: break ; default : f 0 . break ; } } ;
rank: 123
score: 98.67841932508681
patch: break ; if break ; if break ;
rank: 123
score: 98.61935860770089
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 124
score: 98.95193246694711
patch: throw new Math CaMeL Internal CaMeL Error ( true ) ; }
rank: 124
score: 98.92130533854167
patch: f 0 *= f 0 . 1 ;
rank: 124
score: 98.80636935763889
patch: break ; break ; } } } }
rank: 124
score: 98.75155436197916
patch: case REGULA _ FALSI : f 0 *= f 1 ;
rank: 124
score: 98.73723493303571
patch: } * break ; break ;
rank: 124
score: 98.69684709821429
patch: break ; default : throw ;
rank: 124
score: 98.67742919921875
patch: break ; break ; / if break ;
rank: 125
score: 98.92119140625
patch: break ; this . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 125
score: 98.88880072699652
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 125
score: 98.80503336588542
patch: } return break ; }
rank: 125
score: 98.75102887834821
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 125
score: 98.73690795898438
patch: break ; ; / ; / /
rank: 125
score: 98.69647686298077
patch: break ; default : System . err . ; break ; }
rank: 125
score: 98.67703586154514
patch: break ; break ; if break ; /
rank: 125
score: 98.61644568810097
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 126
score: 98.92094421386719
patch: f 1 *= 1 . $NUMBER$ ;
rank: 126
score: 98.90808977399554
patch: f 0 = f 0 ;
rank: 126
score: 98.88868001302083
patch: buf = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 126
score: 98.80281982421874
patch: break ; } break ; } break ; }
rank: 126
score: 98.75062779017857
patch: break ; case REGULA _ FALSI : / / /
rank: 126
score: 98.69587846235795
patch: break ; default : throw System . err ; }
rank: 126
score: 98.67585754394531
patch: break ; ; break ; break ;
rank: 126
score: 98.61598557692308
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 127
score: 98.90706010298295
patch: throw new Math CaMeL Internal CaMeL Error ( Math ;
rank: 127
score: 98.88818359375
patch: break ; default : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 127
score: 98.80215115017361
patch: return break ; } } if break ;
rank: 127
score: 98.75040980747768
patch: table = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 127
score: 98.73561314174107
patch: break ; for break ; ;
rank: 127
score: 98.694580078125
patch: break ; case ; case ;
rank: 127
score: 98.67543334960938
patch: break ; if ; break ; if break ;
rank: 127
score: 98.61565399169922
patch: sb . append ( $STRING$ ) ;
rank: 128
score: 98.94765218098958
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 128
score: 98.91732025146484
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : ) ;
rank: 128
score: 98.80150604248047
patch: break ; } if ; break ;
rank: 128
score: 98.75003051757812
patch: case REGULA _ FALSI : f 1 *= 0 . $NUMBER$ ;
rank: 128
score: 98.7347412109375
patch: break ; / else { break ;
rank: 128
score: 98.69403076171875
patch: break ; default : throw new ; } ;
rank: 128
score: 98.67314453125
patch: break ; break ; break ; throw break ;
rank: 128
score: 98.61564127604167
patch: break ; > 0 . 0 = ;
rank: 129
score: 98.94659423828125
patch: inverted = get CaMeL Relative CaMeL Accuracy ( ) ; }
rank: 129
score: 98.91717998798077
patch: return x 1 ; case REGULA _ FALSI :
rank: 129
score: 98.90281459263393
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; } } }
rank: 129
score: 98.8863525390625
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 129
score: 98.80095757378473
patch: return 0 . length ; break ; }
rank: 129
score: 98.74810028076172
patch: case REGULA _ FALSI : f 0 *= 0 . 0 ;
rank: 129
score: 98.73464529854911
patch: break ; * ; * /
rank: 129
score: 98.69382731119792
patch: break ; default : f 0 = x 0 ; }
rank: 129
score: 98.67266167534723
patch: break ; break ; / / / /
rank: 129
score: 98.61318359375
patch: throw new Illegal CaMeL State CaMeL Exception ; }
rank: 130
score: 98.88603659237133
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ;
rank: 130
score: 98.8006820678711
patch: break ; } break ; } else
rank: 130
score: 98.74706313189338
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ;
rank: 130
score: 98.69315962357955
patch: break ; default : f 0 = x ; }
rank: 130
score: 98.67211042131696
patch: break ; break ; } /
rank: 130
score: 98.61283365885417
patch: break ; default : return - 1 ;
rank: 131
score: 98.9455078125
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 131
score: 98.8983154296875
patch: f 1 *= f 1 ; break ;
rank: 131
score: 98.8005142211914
patch: } else if break ; } }
rank: 131
score: 98.74693196614584
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 131
score: 98.73407745361328
patch: break ; break ; while break ;
rank: 131
score: 98.69020589192708
patch: break ; default : break false ; }
rank: 131
score: 98.67210693359375
patch: break ; break ; if ; ; break ;
rank: 131
score: 98.6107510653409
patch: break ; default : f 1 = x 1 ;
rank: 132
score: 98.89821079799107
patch: throw new Math CaMeL Internal CaMeL Error ( ANY _ SIDE ) ;
rank: 132
score: 98.88439223345588
patch: throw new Math CaMeL Internal CaMeL Error ( ) . get CaMeL Message ( ) ;
rank: 132
score: 98.79993785511364
patch: throw new Illegal CaMeL Argument CaMeL Exception break ; }
rank: 132
score: 98.73165893554688
patch: break ; / * { break ;
rank: 132
score: 98.689208984375
patch: throw new Illegal CaMeL State CaMeL Exception ( break ) ; }
rank: 132
score: 98.6713638305664
patch: break ; break ; } / /
rank: 132
score: 98.61016082763672
patch: break ; default : return 1 ;
rank: 133
score: 98.79866027832031
patch: return break ; } } if ;
rank: 133
score: 98.74571881975446
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 133
score: 98.73133341471355
patch: } * break ; ;
rank: 133
score: 98.68883260091145
patch: f 1 = ; }
rank: 133
score: 98.66806466238839
patch: break ; if ; / /
rank: 133
score: 98.60924072265625
patch: this . break ; default : break ; }
rank: 134
score: 98.9445088704427
patch: verify CaMeL Bracketing ( x 0 , x 1 ) ;
rank: 134
score: 98.9136962890625
patch: throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE ) ;
rank: 134
score: 98.89724295479911
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + fx ) ;
rank: 134
score: 98.79722764756944
patch: break ; break ; } catch break ;
rank: 134
score: 98.74434037642045
patch: case REGULA _ FALSI : / /
rank: 134
score: 98.73123931884766
patch: break ; ; * / break ;
rank: 134
score: 98.68250868055556
patch: break ; ; default : break ; }
rank: 134
score: 98.6651382446289
patch: break ; if ; break ; /
rank: 134
score: 98.60834209735577
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ;
rank: 135
score: 98.91344633556548
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 135
score: 98.89625901442308
patch: f 1 throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 135
score: 98.88154871323529
patch: break ; case REGULA _ FALSI : f 1 *= f 1 ;
rank: 135
score: 98.79412078857422
patch: break ; / * break ; }
rank: 135
score: 98.74407958984375
patch: continue ; case REGULA _ FALSI : f 0 *= 0 . 0 ;
rank: 135
score: 98.73082817925348
patch: break ; ; / * * break ;
rank: 135
score: 98.66492462158203
patch: break ; if ; / / /
rank: 135
score: 98.60781521267361
patch: break ; > 0 . 0 : }
rank: 136
score: 98.94324544270833
patch: x 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 136
score: 98.91265869140625
patch: final double fx 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 136
score: 98.89555358886719
patch: f 0 *= x 1 ; }
rank: 136
score: 98.88064139229911
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 ;
rank: 136
score: 98.79259490966797
patch: } else if break ; break ;
rank: 136
score: 98.74274758731617
patch: if ( Fast CaMeL Math . abs ( f 1 ) < ftol ) {
rank: 136
score: 98.72907366071429
patch: } * * / break ;
rank: 136
score: 98.67840576171875
patch: break ; ; default : break ; } }
rank: 136
score: 98.66400146484375
patch: break ; if ; break ; if ;
rank: 136
score: 98.60697798295455
patch: break ; default : return 0 . $NUMBER$ ; }
rank: 137
score: 98.91195913461539
patch: throw new Math CaMeL Internal CaMeL Error ( this + ) ;
rank: 137
score: 98.89500075120192
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 137
score: 98.878857421875
patch: } else { throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 137
score: 98.79255894252232
patch: break ; } } * /
rank: 137
score: 98.67579234730114
patch: break ; default : f 1 = ; } }
rank: 137
score: 98.66295369466145
patch: break ; break ; break ; if ; return break ;
rank: 137
score: 98.606201171875
patch: break ; default : f 1 ++ ; }
rank: 138
score: 98.9422940340909
patch: approximation = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 138
score: 98.91142134232955
patch: throw Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 138
score: 98.89421001233552
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + $STRING$ ;
rank: 138
score: 98.87864685058594
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 138
score: 98.79216003417969
patch: break ; break ; } } else
rank: 138
score: 98.7421405498798
patch: break ; case REGULA _ FALSI : / ;
rank: 138
score: 98.72642822265625
patch: break { break ;
rank: 138
score: 98.67446560329861
patch: break ; default : continue ; } }
rank: 138
score: 98.6621322631836
patch: break ; break ; if ; else
rank: 138
score: 98.6048075358073
patch: break ; > 0 . 0 = x $NUMBER$ ; }
rank: 139
score: 98.94022310697116
patch: f 0 *= compute CaMeL Objective CaMeL Value ( ) ; }
rank: 139
score: 98.91044786241319
patch: f 1 *= f 1 . 1 ;
rank: 139
score: 98.87857491629464
patch: break default : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 139
score: 98.79117160373264
patch: break ; } } return break ; }
rank: 139
score: 98.74209158761161
patch: this . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 139
score: 98.72549874441964
patch: } * * if break ;
rank: 139
score: 98.65871853298611
patch: break ; if ; if ; break ;
rank: 139
score: 98.60468885633681
patch: break ; default : break ; default :
rank: 140
score: 98.93953704833984
patch: rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 140
score: 98.90938568115234
patch: f 0 *= 1 . 1 ;
rank: 140
score: 98.89302785773026
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ;
rank: 140
score: 98.87845865885417
patch: f 0 : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 140
score: 98.79066467285156
patch: return 0 ; } break ; }
rank: 140
score: 98.74097442626953
patch: state . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 140
score: 98.72486877441406
patch: break ; ; / * / /
rank: 140
score: 98.67014770507812
patch: break ; default : this . ; } }
rank: 140
score: 98.65361938476562
patch: break ; break ; if break ; / /
rank: 141
score: 98.93922776442308
patch: throw new Math CaMeL Internal CaMeL Error ( false ) ; }
rank: 141
score: 98.9093526204427
patch: { throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 141
score: 98.89250044389205
patch: throw new Math CaMeL Internal CaMeL Error ( 0 ;
rank: 141
score: 98.8770751953125
patch: default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 141
score: 98.79026489257812
patch: break ; } else { break ; } }
rank: 141
score: 98.74036754261364
patch: break new Math CaMeL Internal CaMeL Error ( ) ;
rank: 141
score: 98.72367640904018
patch: } break ; ; break ;
rank: 141
score: 98.65258110894098
patch: break ; break ; try if break ;
rank: 141
score: 98.60296630859375
patch: f 0 = x $NUMBER$ ;
rank: 142
score: 98.93897545855978
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 142
score: 98.87622942243304
patch: return x 0 . 0 ;
rank: 142
score: 98.78962707519531
patch: break break ; break ; } }
rank: 142
score: 98.73992919921875
patch: it . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 142
score: 98.72252061631944
patch: break ; break ; case ; out ;
rank: 142
score: 98.66971435546876
patch: break ; default : System . err . ;
rank: 142
score: 98.65107421875
patch: break ; break ; if / * break ;
rank: 142
score: 98.60198419744319
patch: break ; default : f 0 = x 1 ;
rank: 143
score: 98.90797642299107
patch: final double fx 0 = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 143
score: 98.88991001674107
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 143
score: 98.87589518229167
patch: break ; case RIGHT _ SIDE : return x 1 ;
rank: 143
score: 98.78769938151042
patch: } else if break ;
rank: 143
score: 98.739013671875
patch: int fx = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 143
score: 98.72177124023438
patch: break ; * * break ; ;
rank: 143
score: 98.66959635416667
patch: break ; default : System . err . ; break ;
rank: 143
score: 98.65053013392857
patch: break ; } ; break ;
rank: 143
score: 98.60013580322266
patch: sb . append ( break ) ;
rank: 144
score: 98.93798065185547
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ;
rank: 144
score: 98.87523542131696
patch: f 0 = get CaMeL Absolute CaMeL Accuracy ( ) ; break ;
rank: 144
score: 98.78704833984375
patch: break ; break ; } } else {
rank: 144
score: 98.73772321428571
patch: break ; case REGULA _ FALSI : / / {
rank: 144
score: 98.66956583658855
patch: break ; default : System . out . break ; }
rank: 144
score: 98.59951782226562
patch: break ; default : throw new ;
rank: 145
score: 98.93632956112133
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } break ;
rank: 145
score: 98.90735444568452
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 145
score: 98.87488731971153
patch: throw new Math CaMeL Internal CaMeL Error ( f 1 ) ;
rank: 145
score: 98.78595842633929
patch: break ; } } } else
rank: 145
score: 98.73722017728366
patch: break ; case REGULA _ FALSI : do {
rank: 145
score: 98.66614641462054
patch: break ; default : continue ;
rank: 145
score: 98.64942084418402
patch: break ; break ; if ; return ;
rank: 145
score: 98.59920828683036
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; }
rank: 146
score: 98.93499755859375
patch: ftol = get CaMeL Absolute CaMeL Accuracy ( ) ; break ;
rank: 146
score: 98.9072021484375
patch: f 0 *= 0 . 1 ; break ;
rank: 146
score: 98.78433837890626
patch: throw new Illegal CaMeL State CaMeL Exception break ;
rank: 146
score: 98.71794782366071
patch: break ; / / / ;
rank: 146
score: 98.66546630859375
patch: break ; case ; default : ; }
rank: 146
score: 98.59913330078125
patch: throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 147
score: 98.90675706129808
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; break ;
rank: 147
score: 98.88677509014423
patch: inverted : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 147
score: 98.78245544433594
patch: return 0 . ; } break ;
rank: 147
score: 98.73583984375
patch: break ; case REGULA _ FALSI : if ( inverted ) {
rank: 147
score: 98.71773274739583
patch: return break ; ; else { break ;
rank: 147
score: 98.66405140269886
patch: break ; default : super . break ; } }
rank: 147
score: 98.6475830078125
patch: break ; break ; break ; if /
rank: 147
score: 98.59791782924107
patch: if ( ! break ) {
rank: 148
score: 98.93455287388393
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x ) ; }
rank: 148
score: 98.8847885131836
patch: f 1 = 0 . 0 ;
rank: 148
score: 98.8736328125
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 148
score: 98.71771240234375
patch: break ; ; / / break ;
rank: 148
score: 98.6453857421875
patch: break ; break ; if ; * /
rank: 148
score: 98.5977783203125
patch: break ; case ; case ; : return ;
rank: 149
score: 98.90628487723214
patch: final double fx 0 = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 149
score: 98.88467567845395
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ) ;
rank: 149
score: 98.87342325846355
patch: throw new Math CaMeL Internal CaMeL Error ( 0 ) ;
rank: 149
score: 98.78112030029297
patch: return break ; for break ; }
rank: 149
score: 98.73383440290179
patch: e . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 149
score: 98.71588897705078
patch: break ; ; / if break ;
rank: 149
score: 98.64471435546875
patch: break ; break ; ; break ; }
rank: 149
score: 98.59736851283482
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + break ) ;
rank: 150
score: 98.93393961588542
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 150
score: 98.9056865985577
patch: super . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 150
score: 98.88200160435268
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 150
score: 98.78093872070312
patch: break ; } } } } return break ;
rank: 150
score: 98.73369598388672
patch: break ; case REGULA _ FALSI : *= 0 . $NUMBER$ ;
rank: 150
score: 98.71517944335938
patch: break ; try { break ; }
rank: 150
score: 98.66245727539062
patch: break ; default : f 0 += ; }
rank: 150
score: 98.64408874511719
patch: break ; if ; break ; }
rank: 150
score: 98.59577026367188
patch: break ; default : return 0 . ; }
rank: 151
score: 98.93342391304348
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 151
score: 98.90353054470486
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this ) ;
rank: 151
score: 98.87327357700893
patch: default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 151
score: 98.78082275390625
patch: break ; } else { break ;
rank: 151
score: 98.73314666748047
patch: log . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 151
score: 98.71499633789062
patch: break ; * / return break ;
rank: 151
score: 98.662353515625
patch: break ; default : ; ;
rank: 151
score: 98.64396667480469
patch: break ; if ; = break ;
rank: 151
score: 98.59570922851563
patch: if ( f 1 < 0 . 0 )
rank: 152
score: 98.93117268880208
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 152
score: 98.87281036376953
patch: x 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 152
score: 98.78013780381944
patch: break ; } break ; break ; }
rank: 152
score: 98.7130126953125
patch: return break ; ; if break ;
rank: 152
score: 98.66200608473558
patch: break ; default : f 0 . to CaMeL String ( ;
rank: 152
score: 98.64261881510417
patch: break ; ; break ; if break ;
rank: 152
score: 98.59489135742187
patch: if ( break ) return 0 . 0 ;
rank: 153
score: 98.9015643780048
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) {
rank: 153
score: 98.87254987444196
patch: buf = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 153
score: 98.73255208333333
patch: break ; case REGULA _ FALSI : f 0 -- ;
rank: 153
score: 98.7118631998698
patch: } break ; * /
rank: 153
score: 98.66188557942708
patch: throw new Illegal CaMeL State CaMeL Exception ( ; } }
rank: 153
score: 98.64124298095703
patch: break ; break ; / / {
rank: 153
score: 98.59487680288461
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 154
score: 98.87845458984376
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + $STRING$ ) ;
rank: 154
score: 98.87254333496094
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ; }
rank: 154
score: 98.77918352399554
patch: break ; } else { }
rank: 154
score: 98.73218587239583
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 154
score: 98.711669921875
patch: break ; ; ; / ;
rank: 154
score: 98.66094970703125
patch: break ; default : f 0 . ; } } ;
rank: 154
score: 98.63959350585938
patch: break ; break ; break ; / / /
rank: 154
score: 98.59286159939236
patch: break ; default : return - ; }
rank: 155
score: 98.90098741319444
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ ) ;
rank: 155
score: 98.87791683799342
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ;
rank: 155
score: 98.87211778428819
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 155
score: 98.77907889229911
patch: } else return break ; }
rank: 155
score: 98.73193359375
patch: break ; case PEGASUS : return x 1 ; }
rank: 155
score: 98.70960235595703
patch: break ; break ; * ; /
rank: 155
score: 98.65730424360795
patch: break ; default : break ; } } ; }
rank: 155
score: 98.63890380859375
patch: break ; break ; if ; else break ;
rank: 156
score: 98.92692347935268
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ $STRING$ $STRING$ ) ;
rank: 156
score: 98.8987149325284
patch: throw Math CaMeL Internal CaMeL Error ( ) ; }
rank: 156
score: 98.77642144097223
patch: break ; } } else return break ;
rank: 156
score: 98.7316032858456
patch: case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; }
rank: 156
score: 98.70883178710938
patch: return break ; try { break ;
rank: 156
score: 98.65671950120192
patch: break ; default : f 0 . double CaMeL Value ( ;
rank: 156
score: 98.63758544921875
patch: break ; break ; break ; } break ;
rank: 156
score: 98.59055397727273
patch: throw new Assertion CaMeL Error ( $STRING$ ) ; }
rank: 157
score: 98.92586263020833
patch: inverted = ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 157
score: 98.89818318684895
patch: throw new Math CaMeL Internal CaMeL Error ( 1 ) ;
rank: 157
score: 98.87670180376838
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 157
score: 98.871337890625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ /
rank: 157
score: 98.77554660373264
patch: return break ; } } return break ;
rank: 157
score: 98.73089958639706
patch: break ; case REGULA _ FALSI : inverted *= 0 . $NUMBER$ ;
rank: 157
score: 98.6552734375
patch: break ; default : break ; } } break ;
rank: 157
score: 98.63360595703125
patch: break ; break ; break ; if ; { break ;
rank: 157
score: 98.58832256610577
patch: sb . append ( $STRING$ ) . append ( $STRING$ ) ;
rank: 158
score: 98.876416015625
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 158
score: 98.7745849609375
patch: break ; } } break ; } break ;
rank: 158
score: 98.73078070746527
patch: break ; case REGULA _ FALSI : f 0 = 0 . $NUMBER$ ;
rank: 158
score: 98.70842633928571
patch: break ; / * ; /
rank: 158
score: 98.65510559082031
patch: break ; default ; ; } }
rank: 158
score: 98.63186984592014
patch: break ; break ; } ; break ;
rank: 158
score: 98.58792114257812
patch: break ; case ; case ; : break ; default :
rank: 159
score: 98.9253921508789
patch: final double x 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 159
score: 98.89777483258929
patch: case PEGASUS : f 0 *= 0 . 1 ;
rank: 159
score: 98.876171875
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 159
score: 98.86963762555804
patch: fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 159
score: 98.7730712890625
patch: break break ; } } else {
rank: 159
score: 98.7291259765625
patch: case REGULA _ FALSI : /
rank: 159
score: 98.70758056640625
patch: break ; / catch break ;
rank: 159
score: 98.65388627485795
patch: break ; default : f 0 . ; ; }
rank: 159
score: 98.6315689086914
patch: break ; break ; return ; {
rank: 159
score: 98.58443196614583
patch: break ; ; case ; case ; :
rank: 160
score: 98.8975830078125
patch: case ILLINOIS : f 0 *= f 1 ;
rank: 160
score: 98.87600368923611
patch: f 1 = 0 . $NUMBER$ ; }
rank: 160
score: 98.868408203125
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 160
score: 98.77290852864583
patch: break ; } } else
rank: 160
score: 98.7291259765625
patch: break ; case REGULA _ FALSI : f 0 += 0 . $NUMBER$ ;
rank: 160
score: 98.70734514508929
patch: break ; ; / ; ;
rank: 160
score: 98.65309836647727
patch: break ; default : f 0 = ; } ;
rank: 160
score: 98.63133409288194
patch: break ; break ; ; ; break ;
rank: 160
score: 98.584228515625
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( break ) ; }
rank: 161
score: 98.92390950520833
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = false ;
rank: 161
score: 98.89580620659723
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ;
rank: 161
score: 98.87562779017857
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + inverted ) ;
rank: 161
score: 98.86729329427084
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 161
score: 98.77267116970486
patch: break ; } else if break ; }
rank: 161
score: 98.72887369791667
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ;
rank: 161
score: 98.70719691685268
patch: } * ; if break ;
rank: 161
score: 98.65225982666016
patch: break ; case ; default : ;
rank: 161
score: 98.63091278076172
patch: break ; break ; if ; _
rank: 161
score: 98.58262282151442
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ; }
rank: 162
score: 98.92294747488839
patch: inverted : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 162
score: 98.89553397042411
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . $STRING$ ) ;
rank: 162
score: 98.87486921037946
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ $STRING$ ;
rank: 162
score: 98.77028586647727
patch: return 0 . 0 ; } } break ; }
rank: 162
score: 98.70657348632812
patch: break ; / / / break ;
rank: 162
score: 98.65216674804688
patch: break ; default : f 0 ; } }
rank: 162
score: 98.63086809430804
patch: break ; break ; this ;
rank: 162
score: 98.58205159505208
patch: sb . append ( $STRING$ ) . append ( $STRING$ ;
rank: 163
score: 98.92218376608456
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } } }
rank: 163
score: 98.86653137207031
patch: x 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 163
score: 98.76963588169643
patch: break ; } else if ;
rank: 163
score: 98.7274528952206
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 = x 1 ;
rank: 163
score: 98.70555877685547
patch: } break ; try { break ;
rank: 163
score: 98.62952338324652
patch: break ; break ; ; { break ;
rank: 163
score: 98.58035278320312
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ; }
rank: 164
score: 98.921630859375
patch: final int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 164
score: 98.89410400390625
patch: this . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 164
score: 98.87476264105902
patch: f 1 = x 0 . $NUMBER$ ;
rank: 164
score: 98.7685317993164
patch: break ; * / break ; }
rank: 164
score: 98.72734723772321
patch: break ; case REGULA _ FALSI : / / }
rank: 164
score: 98.70517403738839
patch: } * break ; ; /
rank: 164
score: 98.65158081054688
patch: break ; default : f 0 . break ; ; }
rank: 164
score: 98.62921752929688
patch: break ; break ; break ; break ; int
rank: 165
score: 98.89407009548611
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 165
score: 98.87409125434027
patch: f 1 *= x 0 . 0 ;
rank: 165
score: 98.86341616981908
patch: return x 1 ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 165
score: 98.76513671875
patch: return break ; } } else
rank: 165
score: 98.72709517045455
patch: return compute CaMeL Objective CaMeL Value ( x ) ;
rank: 165
score: 98.7047119140625
patch: } break ; ; / /
rank: 165
score: 98.65144486860795
patch: f 1 = Double . parse CaMeL Double ( ;
rank: 165
score: 98.62879289899554
patch: break ; break ; = ;
rank: 165
score: 98.5789043719952
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ;
rank: 166
score: 98.89258751502403
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 166
score: 98.87343924386161
patch: f 1 ; throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 166
score: 98.86243960731908
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , ) ;
rank: 166
score: 98.76481797960069
patch: return break ; } } } break ;
rank: 166
score: 98.72687639508929
patch: context . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 166
score: 98.6494140625
patch: break ; case ; ;
rank: 166
score: 98.62836303710938
patch: break ; break ; break ; else break ;
rank: 166
score: 98.57776896158855
patch: throw new Runtime CaMeL Exception ( $STRING$ + method ) ;
rank: 167
score: 98.91923828125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } }
rank: 167
score: 98.89161028180804
patch: compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 167
score: 98.76405843098958
patch: return 0 . length ; } break ;
rank: 167
score: 98.7267837524414
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 167
score: 98.70425075954861
patch: break ; break ; * * break ;
rank: 167
score: 98.64914957682292
patch: break ; default : System . err . ; ; }
rank: 167
score: 98.62553100585937
patch: break ; break ; break ; * break ;
rank: 167
score: 98.57713826497395
patch: break . 0 : f 0 = break . 0 ;
rank: 168
score: 98.86160982572116
patch: else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 168
score: 98.76399230957031
patch: return 0 . ; break ; }
rank: 168
score: 98.72574869791667
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) *= 0 . $NUMBER$ ;
rank: 168
score: 98.70278930664062
patch: break ; break ; / ; /
rank: 168
score: 98.64905802408855
patch: break ; default : f 0 . break ; } ;
rank: 168
score: 98.62284342447917
patch: break ; break ; } / / /
rank: 168
score: 98.5761489868164
patch: return ; default : break ; }
rank: 169
score: 98.9184337797619
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 169
score: 98.86963568793402
patch: f 1 *= x 1 . $NUMBER$ ;
rank: 169
score: 98.76356506347656
patch: return * break ; break ; }
rank: 169
score: 98.72499084472656
patch: t 1 *= 0 . $NUMBER$ ;
rank: 169
score: 98.64705403645833
patch: break ; default : f 0 . remove ( ; }
rank: 169
score: 98.62186104910714
patch: break ; if * break ;
rank: 169
score: 98.57573106553819
patch: sb . append ( break ) ; }
rank: 170
score: 98.91816057477679
patch: ftol = compute CaMeL Objective CaMeL Value ( x ) ; }
rank: 170
score: 98.88759543678977
patch: return f 1 ; case PEGASUS :
rank: 170
score: 98.86037772042411
patch: } else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 170
score: 98.76229095458984
patch: break ; else if ( break ;
rank: 170
score: 98.72299373851104
patch: break ; case REGULA _ FALSI : / / return x 1 ;
rank: 170
score: 98.69937133789062
patch: break { break ; ;
rank: 170
score: 98.64591471354167
patch: break ; default : System . err . break ; }
rank: 170
score: 98.57572115384616
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + method ;
rank: 171
score: 98.91796196831598
patch: f 0 = 0 . $NUMBER$ ; }
rank: 171
score: 98.88640747070312
patch: this . f 0 *= 0 . 0 ;
rank: 171
score: 98.86912318638393
patch: f 1 += f 1 ;
rank: 171
score: 98.86014229910714
patch: else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 171
score: 98.69794464111328
patch: break ; * * / break ;
rank: 171
score: 98.6443379720052
patch: b 0 . to CaMeL String ( ) ; break ;
rank: 171
score: 98.6180419921875
patch: break ; break ; return break ; }
rank: 171
score: 98.5752840909091
patch: break . to CaMeL String ( ) ; default :
rank: 172
score: 98.91744656032986
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 172
score: 98.868896484375
patch: f 1 *= x 1 ; break ;
rank: 172
score: 98.76203070746527
patch: break break ; } else return break ;
rank: 172
score: 98.72172995174633
patch: continue ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 172
score: 98.69788275824652
patch: } break ; break ; System . ;
rank: 172
score: 98.64262559678819
patch: break ; default : ; break ; }
rank: 172
score: 98.61787414550781
patch: break ; break ; final break ;
rank: 172
score: 98.57504708426339
patch: break ; if ( break )
rank: 173
score: 98.91708809988839
patch: ftol = get CaMeL Absolute CaMeL Accuracy ( ) ; } }
rank: 173
score: 98.86885892427884
patch: f 1 = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 173
score: 98.85926106770833
patch: f 0 = compute CaMeL Objective CaMeL Value ( x ) ; break ;
rank: 173
score: 98.76199340820312
patch: return 0 . length ; } } break ;
rank: 173
score: 98.69747161865234
patch: break ; break ; case ; ;
rank: 173
score: 98.64235229492188
patch: break ; default : ; break ; } }
rank: 173
score: 98.61778259277344
patch: break ; if ; if break ;
rank: 173
score: 98.57482147216797
patch: break ; if ( break ) {
rank: 174
score: 98.91441999162946
patch: throw new Math CaMeL Internal CaMeL Error ( + f 1 ) ;
rank: 174
score: 98.8837381998698
patch: break ; this . f 0 *= 0 . 0 ;
rank: 174
score: 98.86809624565973
patch: verify CaMeL Bracketing ( x 0 ) ;
rank: 174
score: 98.85709054129464
patch: f 0 = get CaMeL Relative CaMeL Accuracy ( ) ; break ;
rank: 174
score: 98.76165093315973
patch: break break ; } } break ; }
rank: 174
score: 98.72090657552083
patch: tmp = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 174
score: 98.69740513392857
patch: break ; out ; break ;
rank: 174
score: 98.64191143329327
patch: break ; No CaMeL Such CaMeL Method CaMeL Error ( ) ;
rank: 174
score: 98.61544799804688
patch: break ; break ; = break ;
rank: 174
score: 98.5733642578125
patch: break ; default : f 1 += break ; }
rank: 175
score: 98.8818868001302
patch: fx = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 175
score: 98.8680355674342
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , ) ;
rank: 175
score: 98.85557725694444
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) ) ;
rank: 175
score: 98.76137869698661
patch: break ; x 1 ; }
rank: 175
score: 98.72034505208333
patch: logger . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 175
score: 98.69564056396484
patch: break ; ; / / / ;
rank: 175
score: 98.64139404296876
patch: break ; default ;
rank: 175
score: 98.57315499441964
patch: b 1 = x $NUMBER$ ;
rank: 176
score: 98.91400146484375
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 176
score: 98.8802490234375
patch: { throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 176
score: 98.85536104090073
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) ;
rank: 176
score: 98.76076049804688
patch: return 0 . 0 ; break ; else }
rank: 176
score: 98.7198486328125
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x ;
rank: 176
score: 98.6951395670573
patch: break ; ; ; ;
rank: 176
score: 98.64063262939453
patch: break ; default ; } } ;
rank: 176
score: 98.61402893066406
patch: break ; break ; break ; this
rank: 176
score: 98.57238091362848
patch: if ( break ) { break ; }
rank: 177
score: 98.87985409007354
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 0 ) ;
rank: 177
score: 98.86732700892857
patch: inverted : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 177
score: 98.76016235351562
patch: return 0 . 0 ; break ; break ;
rank: 177
score: 98.71941375732422
patch: e . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 177
score: 98.69501604352679
patch: break ; super . break ;
rank: 177
score: 98.63955453725961
patch: break ; default : System . out . ; continue ; }
rank: 177
score: 98.57135009765625
patch: this . x 0 = x 1 ;
rank: 178
score: 98.87860576923077
patch: double fx = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 178
score: 98.86646864149306
patch: f 1 *= f 1 ; } }
rank: 178
score: 98.7591885653409
patch: return 0 . 0 ; } } if break ;
rank: 178
score: 98.7191913311298
patch: continue ; case REGULA _ FALSI : break ;
rank: 178
score: 98.69363839285714
patch: break { break ; break ;
rank: 178
score: 98.63852267795139
patch: break ; default : ; } ; }
rank: 178
score: 98.61228942871094
patch: break ; break ; try / /
rank: 178
score: 98.57113211495536
patch: sb . append ( $STRING$ ) . append ( break ) ; }
rank: 179
score: 98.87824041193181
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Message ( ) ) ;
rank: 179
score: 98.8651123046875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) ) ;
rank: 179
score: 98.85404698988971
patch: break ; case REGULA _ FALSI : f 0 *= x 1 ;
rank: 179
score: 98.75885009765625
patch: break ; * / } }
rank: 179
score: 98.71876627604166
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 179
score: 98.69247872488839
patch: break ; int else break ;
rank: 179
score: 98.61193237304687
patch: break ; break ; if ; ( break ;
rank: 179
score: 98.56971232096355
patch: throw new Null CaMeL Pointer CaMeL Exception ( break ) ;
rank: 180
score: 98.87797715928819
patch: f 1 *= f 0 . 1 ;
rank: 180
score: 98.86339314778645
patch: inverted = x 1 ;
rank: 180
score: 98.85391395970395
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + ) ;
rank: 180
score: 98.75840250651042
patch: } break ; } } break ; }
rank: 180
score: 98.71846771240234
patch: break ; case REGULA _ FALSI : f 0 *= $NUMBER$ ;
rank: 180
score: 98.69203694661458
patch: return break ; ; ; if break ;
rank: 180
score: 98.63661702473958
patch: break ; } * /
rank: 180
score: 98.56881713867188
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ;
rank: 181
score: 98.91193033854167
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 181
score: 98.87758963448661
patch: case ILLINOIS : f 0 *= 0 . $NUMBER$ ;
rank: 181
score: 98.86131286621094
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS ) ; }
rank: 181
score: 98.75674874441964
patch: } break ; } } }
rank: 181
score: 98.69120788574219
patch: break ; break ; ; * /
rank: 181
score: 98.63465372721355
patch: break ; default : f 0 = ; } } ;
rank: 181
score: 98.61134643554688
patch: break ; break ; ; if ; break ;
rank: 181
score: 98.56858607700893
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , method ) ;
rank: 182
score: 98.75590209960937
patch: return 0 . 0 ; } else break ;
rank: 182
score: 98.71774526742789
patch: continue ; case REGULA _ FALSI : / /
rank: 182
score: 98.69083949497768
patch: break ; else if break ;
rank: 182
score: 98.63411088423295
patch: break ; default : System . out . ; ;
rank: 182
score: 98.61070556640625
patch: break ; if ; break ; break ; }
rank: 182
score: 98.56825086805556
patch: break ; case ; case ; default :
rank: 183
score: 98.9116719563802
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ $STRING$ ;
rank: 183
score: 98.85945347377232
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 183
score: 98.85256060431985
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) ;
rank: 183
score: 98.75581190321181
patch: break break ; } } if break ;
rank: 183
score: 98.71663120814732
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 183
score: 98.68919372558594
patch: break ; * ; * break ;
rank: 183
score: 98.63379923502605
patch: break ; default : f 0 = ; } ; }
rank: 183
score: 98.61068289620536
patch: return ; break ; break ;
rank: 183
score: 98.5680440266927
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 184
score: 98.91053682215073
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; }
rank: 184
score: 98.87640380859375
patch: throw new Math CaMeL Internal CaMeL Error ( get CaMeL Runtime ( ) ) ;
rank: 184
score: 98.8592529296875
patch: f 0 *= fx ;
rank: 184
score: 98.85237943209134
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } ;
rank: 184
score: 98.755615234375
patch: break break ; else break ; }
rank: 184
score: 98.71656145368304
patch: log . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 184
score: 98.63330078125
patch: break ; default : System . out . ; } ; ;
rank: 184
score: 98.61018202039931
patch: break ; break ; if ( break ;
rank: 184
score: 98.56785365513393
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( break ) ;
rank: 185
score: 98.90963541666666
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 185
score: 98.859130859375
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ 0 ) ;
rank: 185
score: 98.75526936848958
patch: break ; * * break ; } }
rank: 185
score: 98.7164776141827
patch: case REGULA _ FALSI = 0 . $NUMBER$ ;
rank: 185
score: 98.68795437282986
patch: break ; * break ; case ; /
rank: 185
score: 98.63309733072917
patch: break ; default : f 0 . append ( ; }
rank: 185
score: 98.61005193536931
patch: break ; break ; break ; ; return break ;
rank: 185
score: 98.56734793526786
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 186
score: 98.90817057291666
patch: } else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 186
score: 98.87590680803571
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 186
score: 98.85856797960069
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 186
score: 98.75304412841797
patch: return 0 . length ; } }
rank: 186
score: 98.71577671595982
patch: it . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 186
score: 98.68749128069196
patch: break ; if break ; ;
rank: 186
score: 98.60606800426136
patch: break ; break ; if break ; return break ;
rank: 186
score: 98.56478445870536
patch: break ; default : case ;
rank: 187
score: 98.90751647949219
patch: inverted = ! inverted : get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 187
score: 98.87528076171876
patch: new Math CaMeL Internal CaMeL Error ( ) ;
rank: 187
score: 98.85636080228366
patch: f 1 = get CaMeL Relative CaMeL Accuracy ( ) ; }
rank: 187
score: 98.85195583767361
patch: throw new Math CaMeL Internal CaMeL Error ( ) . to CaMeL String ( ) ; }
rank: 187
score: 98.75200653076172
patch: { break ; } break ; }
rank: 187
score: 98.7132797241211
patch: break ; case REGULA _ FALSI : case ANY _ SIDE :
rank: 187
score: 98.68732452392578
patch: break ; ; ; ; / /
rank: 187
score: 98.63035074869792
patch: break ; default : f 0 . ; } ; }
rank: 187
score: 98.60482788085938
patch: break ; break ; {
rank: 187
score: 98.56421576605902
patch: break . x 0 = x 1 ;
rank: 188
score: 98.87497287326389
patch: final double fx = 0 . 0 ;
rank: 188
score: 98.85160609654018
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ; }
rank: 188
score: 98.71180138221153
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 188
score: 98.68660191127232
patch: } * * break ; }
rank: 188
score: 98.63031005859375
patch: break ; default : System . out . ; ; }
rank: 188
score: 98.60455322265625
patch: break ; if ; break ; / /
rank: 188
score: 98.56414794921875
patch: } break ; default : break ; }
rank: 189
score: 98.8491455078125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 189
score: 98.75119357638889
patch: break ; break ; break ; } }
rank: 189
score: 98.71134185791016
patch: continue ; case ABOVE _ SIDE :
rank: 189
score: 98.68593052455357
patch: } break ; } break ;
rank: 189
score: 98.6043930053711
patch: break ; break ; set / /
rank: 189
score: 98.56411307198661
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( this ) ;
rank: 190
score: 98.90662434895833
patch: break ; case PEGASUS : f 0 *= x 1 ;
rank: 190
score: 98.8744873046875
patch: break ; case PEGASUS : f 0 *= f 0 ;
rank: 190
score: 98.85590471540179
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . 1 ) ;
rank: 190
score: 98.84747023809524
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 190
score: 98.71120042067308
patch: break ; case REGULA _ FALSI : try {
rank: 190
score: 98.604248046875
patch: break ; break ; if / break ;
rank: 190
score: 98.56354437934027
patch: break ; > 0 . $NUMBER$ : }
rank: 191
score: 98.90574428013393
patch: f 0 += f 1 ;
rank: 191
score: 98.87442355685764
patch: f 0 *= f 1 . 0 ;
rank: 191
score: 98.74954659598214
patch: break ; * * / }
rank: 191
score: 98.71009318033855
patch: return Fast CaMeL Math . abs ( f 1 ) ;
rank: 191
score: 98.68330891927083
patch: break ; catch break ;
rank: 191
score: 98.60342407226562
patch: break ; break ; break ; String
rank: 191
score: 98.56294759114583
patch: throw new Illegal CaMeL State CaMeL Exception ;
rank: 192
score: 98.87278238932292
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 192
score: 98.74917602539062
patch: } else if ; return break ;
rank: 192
score: 98.7100341796875
patch: break ; case PEGASUS : start *= 0 . $NUMBER$ ;
rank: 192
score: 98.68174525669643
patch: } break ; if break ;
rank: 192
score: 98.62820434570312
patch: break ; case break ; } }
rank: 192
score: 98.60295104980469
patch: break ; break ; return / ;
rank: 192
score: 98.56205610795455
patch: break ; default : f 1 . break ; }
rank: 193
score: 98.87262573242188
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + ) ;
rank: 193
score: 98.84725189208984
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 + ) ;
rank: 193
score: 98.74909973144531
patch: } else if ; break ; }
rank: 193
score: 98.70997971754808
patch: exception . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 193
score: 98.62812635633681
patch: break ; default : if ( ; }
rank: 193
score: 98.60112847222223
patch: break ; break ; ; throw break ;
rank: 193
score: 98.56094360351562
patch: throw new Runtime CaMeL Exception ( $STRING$ + name ) ;
rank: 194
score: 98.872119140625
patch: break ; case REGULA _ FALSI : return f 1 ;
rank: 194
score: 98.74884033203125
patch: { break ; } } } }
rank: 194
score: 98.70951334635417
patch: continue ; case REGULA _ FALSI : f 1 *= 0 . $NUMBER$ ;
rank: 194
score: 98.67988586425781
patch: break ; ; / ; break ;
rank: 194
score: 98.62806285511364
patch: break ; default : throw new ; } ; }
rank: 194
score: 98.60111083984376
patch: break ; break ; if ; throw break ;
rank: 194
score: 98.56086948939732
patch: sb . append ( $STRING$ ) . append ( $STRING$ ) ; }
rank: 195
score: 98.9026211825284
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 195
score: 98.85143103966347
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ ;
rank: 195
score: 98.84587545955883
patch: break ; case PEGASUS : f 0 *= f 1 ; break ;
rank: 195
score: 98.74721272786458
patch: return 0 . 0 ; } } }
rank: 195
score: 98.70785861545139
patch: break ; case REGULA _ FALSI : x 0 *= 0 . $NUMBER$ ;
rank: 195
score: 98.67975616455078
patch: break ; ; * { break ;
rank: 195
score: 98.62792029747597
patch: break ; default : throw new Runtime CaMeL Exception ( ; }
rank: 195
score: 98.60106201171875
patch: break ; break ; break ; break ; throw
rank: 195
score: 98.5599032315341
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 196
score: 98.90260225183823
patch: } final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 196
score: 98.8678866299716
patch: Math . abs ( f 1 + fx ) ;
rank: 196
score: 98.85100446428571
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . out ) ;
rank: 196
score: 98.74478912353516
patch: break ; * * * / }
rank: 196
score: 98.70759133731617
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 = x 0 ;
rank: 196
score: 98.67863464355469
patch: break ; break ; int break ;
rank: 196
score: 98.62596546519886
patch: break ; default : f 0 = ; ; }
rank: 196
score: 98.60007731119792
patch: break ; if ; * / break ;
rank: 196
score: 98.55922288161058
patch: break ; > 0 . 0 = 0 . 0 ; }
rank: 197
score: 98.90253448486328
patch: rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 197
score: 98.8676424893466
patch: fx = compute CaMeL Objective CaMeL Value ( ) ;
rank: 197
score: 98.8510009765625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; } }
rank: 197
score: 98.74408721923828
patch: } break ; * break ; }
rank: 197
score: 98.70758928571429
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ;
rank: 197
score: 98.67862701416016
patch: break ; ; / * ; /
rank: 197
score: 98.62583229758523
patch: break ; default : System . ; } ; }
rank: 197
score: 98.5992098721591
patch: break ; if ; break ; break ; break ;
rank: 197
score: 98.55913696289062
patch: break ; break ; default : break ; }
rank: 198
score: 98.90224821671195
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 198
score: 98.86651000976562
patch: this . f 1 *= 0 . 0 ;
rank: 198
score: 98.84913048377403
patch: f 1 = compute CaMeL Objective CaMeL Value ( ) ; }
rank: 198
score: 98.84352463942308
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 198
score: 98.74404907226562
patch: break ; * * / } }
rank: 198
score: 98.70744105747768
patch: return f 0 . $NUMBER$ ;
rank: 198
score: 98.67789132254464
patch: return break ; if break ;
rank: 198
score: 98.62559000651042
patch: b 0 . to CaMeL String ( ) ; ; }
rank: 198
score: 98.59878879123264
patch: break ; break ; if ; continue ;
rank: 198
score: 98.55912780761719
patch: b 1 = x $NUMBER$ ; }
rank: 199
score: 98.86646446814903
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ $NUMBER$ ) ;
rank: 199
score: 98.74348449707031
patch: return ; * * break ; }
rank: 199
score: 98.67760009765625
patch: break ; * ;
rank: 199
score: 98.62542169744319
patch: break ; case break ; default : break ; }
rank: 199
score: 98.59852905273438
patch: break ; break ; / / if break ;
rank: 199
score: 98.55853740985577
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ )
rank: 200
score: 98.90182059151786
patch: f 1 = compute CaMeL Objective CaMeL Value ( x ) ; }
rank: 200
score: 98.8658916766827
patch: throw new Math CaMeL Internal CaMeL Error ( this , ) ;
rank: 200
score: 98.84782579210069
patch: f 1 = x 1 . $NUMBER$ ;
rank: 200
score: 98.84154401506696
patch: break ; case PEGASUS : f 0 *= $NUMBER$ ;
rank: 200
score: 98.74259643554687
patch: break break ; } } } return break ;
rank: 200
score: 98.70379279641544
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ;
rank: 200
score: 98.67681884765625
patch: break ; out . break ; }
rank: 200
score: 98.62451171875
patch: break ; default : System . out . ; } ; }
rank: 200
score: 98.55841064453125
patch: break ; > 0 . 0 : f 0 = ;
rank: 201
score: 98.84765625
patch: f 0 = x 1 ; break ;
rank: 201
score: 98.74246978759766
patch: break break ; } if break ;
rank: 201
score: 98.70252336774554
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 201
score: 98.67565155029297
patch: break ; * * break ; /
rank: 201
score: 98.62366661658653
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } }
rank: 201
score: 98.59679412841797
patch: break ; break ; / / ;
rank: 201
score: 98.55790571732955
patch: break ; case ; case ; : f 1 ;
rank: 202
score: 98.90158260569854
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } break ;
rank: 202
score: 98.86465219350961
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ 1 ) ;
rank: 202
score: 98.84118041992187
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , $STRING$ ) ;
rank: 202
score: 98.74245876736111
patch: break ; else this . break ; }
rank: 202
score: 98.70249720982143
patch: case REGULA _ FALSI : return x 1 ; }
rank: 202
score: 98.67542375837054
patch: break ; / / break ;
rank: 202
score: 98.59677463107639
patch: if ; break ; break ; break ;
rank: 202
score: 98.5577059659091
patch: return Integer . parse CaMeL Int ( break ) ;
rank: 203
score: 98.86444091796875
patch: f 1 *= 1 . 0 ;
rank: 203
score: 98.74155970982143
patch: return 0 . length ; }
rank: 203
score: 98.70206451416016
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 203
score: 98.67538888113839
patch: break ; value * break ;
rank: 203
score: 98.59516906738281
patch: break ; break ; if ; throw
rank: 203
score: 98.55768291766827
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; break ;
rank: 204
score: 98.84649658203125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . err ) ;
rank: 204
score: 98.74125162760417
patch: } break ; } } if break ;
rank: 204
score: 98.70197405133929
patch: context . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 204
score: 98.67413330078125
patch: break ; ; ; ; ;
rank: 204
score: 98.62238103693181
patch: break ; default : break ; } } * /
rank: 204
score: 98.59482643821023
patch: break ; break ; break ; if ; / /
rank: 204
score: 98.55750528971355
patch: break ; > 0 . 0 = 1 . 0 ;
rank: 205
score: 98.89950796274039
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ true ) ;
rank: 205
score: 98.8392333984375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; }
rank: 205
score: 98.7410888671875
patch: break break ; } break ;
rank: 205
score: 98.70075988769531
patch: break ; case PEGASUS : f 0 = 0 . $NUMBER$ ;
rank: 205
score: 98.62233323317308
patch: break ; default : f 0 . double CaMeL Value = ;
rank: 205
score: 98.55716378348214
patch: f 1 = x $NUMBER$ ;
rank: 206
score: 98.89912923177083
patch: inverted = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 206
score: 98.86217498779297
patch: throw new Math CaMeL Internal CaMeL Error ( get CaMeL Message ( ) ) ;
rank: 206
score: 98.84615478515624
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ;
rank: 206
score: 98.73977661132812
patch: return 0 . ; * break ;
rank: 206
score: 98.70044663373162
patch: continue ; case PEGASUS : f 0 *= 0 . $NUMBER$ ; }
rank: 206
score: 98.67224993024554
patch: } else { return break ;
rank: 206
score: 98.62092729048295
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ; }
rank: 206
score: 98.59217664930556
patch: break ; if break ; return break ;
rank: 206
score: 98.55610795454545
patch: break . $NUMBER$ = break . $NUMBER$ ; default :
rank: 207
score: 98.83794202302632
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 207
score: 98.73954772949219
patch: break break ; } } if ;
rank: 207
score: 98.70030975341797
patch: it . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 207
score: 98.67216796875
patch: break ; ; }
rank: 207
score: 98.61946614583333
patch: break ; default : f 0 ++ ;
rank: 207
score: 98.59079318576389
patch: break ; break ; = ; break ;
rank: 207
score: 98.55574253627232
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ; }
rank: 208
score: 98.89870287024456
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 208
score: 98.86190975413604
patch: break ; case REGULA _ FALSI : verify CaMeL Bracketing ( ) ;
rank: 208
score: 98.84513346354167
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ;
rank: 208
score: 98.69933268229167
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 0 ;
rank: 208
score: 98.67198835100446
patch: break ; ; ; * ;
rank: 208
score: 98.61919403076172
patch: break ; default : { ; }
rank: 208
score: 98.58995903862848
patch: break ; break ; else if break ;
rank: 208
score: 98.55568625710227
patch: break ; case ; case ; : f 1 :
rank: 209
score: 98.89818572998047
patch: f 0 = 0 . 0 ;
rank: 209
score: 98.8608627319336
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this ) ;
rank: 209
score: 98.84333038330078
patch: f 1 : return x 1 ;
rank: 209
score: 98.83748372395833
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 209
score: 98.73835100446429
patch: break ; return 0 ; }
rank: 209
score: 98.67153930664062
patch: } break ;
rank: 209
score: 98.6190655048077
patch: break ; default : System . err . ; } ; }
rank: 209
score: 98.58889770507812
patch: break ; break ; if ; int break ;
rank: 209
score: 98.55552978515625
patch: break ; default : return 1 . 0 ;
rank: 210
score: 98.86042924360795
patch: case PEGASUS : return x 0 ;
rank: 210
score: 98.73759321732955
patch: return 0 . 0 ; break ; break ; }
rank: 210
score: 98.69852447509766
patch: break ; case PEGASUS : f 0 += 0 . $NUMBER$ ;
rank: 210
score: 98.67149353027344
patch: break ; break ; case ; /
rank: 210
score: 98.6179668719952
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } ;
rank: 210
score: 98.58888075086806
patch: break ; break ; try { break ;
rank: 211
score: 98.89743939568015
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 211
score: 98.85786576704545
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Runtime ( ) ) ;
rank: 211
score: 98.84266662597656
patch: f 1 *= f 0 ; }
rank: 211
score: 98.83746337890625
patch: ftol = get CaMeL Relative CaMeL Accuracy ( ) ; break ;
rank: 211
score: 98.7363037109375
patch: break ; } } } return break ; }
rank: 211
score: 98.69816080729167
patch: state throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 211
score: 98.6706314086914
patch: break ; break ; / ; *
rank: 211
score: 98.61776123046874
patch: if ( break ) { break ; } }
rank: 211
score: 98.58821105957031
patch: break ; if ; * break ;
rank: 212
score: 98.89735514322916
patch: System . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 212
score: 98.85708618164062
patch: double fx = compute CaMeL Objective CaMeL Value ( ) ;
rank: 212
score: 98.84262982536765
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 212
score: 98.73619495738636
patch: return 0 . 0 ; } } return break ;
rank: 212
score: 98.69745427911931
patch: state = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 212
score: 98.67007882254464
patch: return break ; while break ;
rank: 212
score: 98.61707652698864
patch: break ; case ; default : throw new ; }
rank: 212
score: 98.58751678466797
patch: break ; if ; ( break ;
rank: 212
score: 98.55343191964286
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; } }
rank: 213
score: 98.89734758649554
patch: ftol = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 213
score: 98.85631452287946
patch: final double rtol = compute CaMeL Objective CaMeL Value ( ) ;
rank: 213
score: 98.8419548483456
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 213
score: 98.83616286057692
patch: f 0 = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 213
score: 98.7357421875
patch: break ; } break ; } catch break ;
rank: 213
score: 98.69664510091145
patch: exception = new Math CaMeL Internal CaMeL Error ( ) ;
rank: 213
score: 98.66925048828125
patch: break ; / / * * break ;
rank: 213
score: 98.61618041992188
patch: break ; case break ; default : break ; } }
rank: 213
score: 98.55333709716797
patch: f 0 = x $NUMBER$ ; }
rank: 214
score: 98.85586547851562
patch: break ; this . f 0 *= 0 . $NUMBER$ ;
rank: 214
score: 98.840576171875
patch: * / throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 214
score: 98.83486703725961
patch: try { throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 214
score: 98.735595703125
patch: break ; } * * /
rank: 214
score: 98.69656808035714
patch: n *= 0 . $NUMBER$ ;
rank: 214
score: 98.66844940185547
patch: } break ; ; / * /
rank: 214
score: 98.58553059895833
patch: break ; break ; / ; break ;
rank: 214
score: 98.5531717936198
patch: break ; default : break ; default : break ; }
rank: 215
score: 98.84054361979166
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . 0 ) ; }
rank: 215
score: 98.833251953125
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; break ;
rank: 215
score: 98.61497913707386
patch: f 0 = Double . parse CaMeL Double ( ;
rank: 215
score: 98.58494873046875
patch: break ; break ; try if ; break ;
rank: 215
score: 98.55300903320312
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$
rank: 216
score: 98.85547814002403
patch: break ; case PEGASUS : return f 1 ;
rank: 216
score: 98.84003363715277
patch: f 1 = f 1 ; break ;
rank: 216
score: 98.73511420355902
patch: break ; this . break ; } }
rank: 216
score: 98.69590928819444
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 *= 0 . $NUMBER$ ;
rank: 216
score: 98.66707938058036
patch: break ; * * / /
rank: 216
score: 98.61472731370192
patch: break ; No CaMeL Such CaMeL Method CaMeL Exception break ; }
rank: 216
score: 98.58486938476562
patch: if ; break ; return break ;
rank: 216
score: 98.552978515625
patch: break . x 0 = break . x $NUMBER$ ;
rank: 217
score: 98.89448816636029
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; final
rank: 217
score: 98.85469970703124
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ; }
rank: 217
score: 98.8397575827206
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : $STRING$ ) ;
rank: 217
score: 98.73484802246094
patch: } break ; } } } }
rank: 217
score: 98.69493910845588
patch: while ( Fast CaMeL Math . abs ( f 1 ) <= ftol ) {
rank: 217
score: 98.66656494140625
patch: break ; *
rank: 217
score: 98.61444091796875
patch: break ; default : { break ; } }
rank: 217
score: 98.58451334635417
patch: break ; if ; {
rank: 217
score: 98.55256958007813
patch: throw new Illegal CaMeL Argument CaMeL Exception ; }
rank: 218
score: 98.85458034939236
patch: { f 0 *= 0 . $NUMBER$ ;
rank: 218
score: 98.83910260881696
patch: f 0 ; throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 218
score: 98.73432752821181
patch: return break ; break ; break ; }
rank: 218
score: 98.6944580078125
patch: break ; case REGULA _ FALSI = 0 . $NUMBER$ ;
rank: 218
score: 98.5835693359375
patch: break ; break ; if ; break ; int
rank: 218
score: 98.55169677734375
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + ;
rank: 219
score: 98.89398871527777
patch: return x 0 . x 0 ; }
rank: 219
score: 98.85428873697917
patch: f 0 *= f 0 . 0 ;
rank: 219
score: 98.83885846819196
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / ) ; }
rank: 219
score: 98.83231608072917
patch: x 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 219
score: 98.73429361979167
patch: return 0 . length ; break ; else
rank: 219
score: 98.69325256347656
patch: continue ; case PEGASUS : f 0 *= 0 . 0 ;
rank: 219
score: 98.66484832763672
patch: break ; break ; * / /
rank: 219
score: 98.58339436848958
patch: break ; if ; = * break ;
rank: 219
score: 98.55137125651042
patch: break ; > 0 . 0 : break ; default :
rank: 220
score: 98.89375813802083
patch: approximation = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 220
score: 98.85408935546874
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) {
rank: 220
score: 98.83885091145834
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) ;
rank: 220
score: 98.73419952392578
patch: return 0 . length ; break ;
rank: 220
score: 98.69242589613971
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 220
score: 98.66433279854911
patch: } else { break ; ;
rank: 220
score: 98.61335584852431
patch: break ; default : return ; } }
rank: 220
score: 98.58189808238636
patch: break ; break ; if ; { return break ;
rank: 220
score: 98.55086844308036
patch: b 1 = x 1 ;
rank: 221
score: 98.89366566051136
patch: throw new Math . Internal CaMeL Error ( ) ;
rank: 221
score: 98.85392930772569
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) }
rank: 221
score: 98.838623046875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 0 ;
rank: 221
score: 98.73387145996094
patch: return * * break ; } }
rank: 221
score: 98.69190470377605
patch: break ; case LEFT _ SIDE : return x 1 ;
rank: 221
score: 98.66358947753906
patch: return break ; else { break ;
rank: 221
score: 98.6133524576823
patch: break ; default : System . break ; } } ;
rank: 221
score: 98.58099365234375
patch: break ; ; ; break ; break ;
rank: 221
score: 98.5506591796875
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + method ) ;
rank: 222
score: 98.89313507080078
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ;
rank: 222
score: 98.85332641601562
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , ) ;
rank: 222
score: 98.83838568793402
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ;
rank: 222
score: 98.7334213256836
patch: return 0 ; } } break ;
rank: 222
score: 98.6915283203125
patch: m 1 *= 0 . $NUMBER$ ;
rank: 222
score: 98.66322544642857
patch: return break ; * break ;
rank: 222
score: 98.61226712740384
patch: break ; default : f 0 = ; break ; } }
rank: 222
score: 98.58095296223958
patch: break ; break ; / / if ;
rank: 222
score: 98.54957932692308
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; ;
rank: 223
score: 98.89306640625
patch: ftol = compute CaMeL Objective CaMeL Value ( ) ; }
rank: 223
score: 98.85237339564732
patch: case ILLINOIS : f 0 *= 0 . 0 ;
rank: 223
score: 98.83819025213069
patch: inverted = compute CaMeL Objective CaMeL Value ( ) ;
rank: 223
score: 98.73289184570312
patch: return 0 . length ; } break ; }
rank: 223
score: 98.69150797526042
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 223
score: 98.6629638671875
patch: break ; ; finally { break ;
rank: 223
score: 98.61209869384766
patch: break ; case ; default : }
rank: 223
score: 98.58038330078125
patch: break ; break ; do
rank: 223
score: 98.54867117745536
patch: default : throw new Illegal CaMeL State CaMeL Exception ( break ) ;
rank: 224
score: 98.89232042100694
patch: return x 0 . x 1 ; }
rank: 224
score: 98.8380615234375
patch: f 1 *= 0 . $NUMBER$ ; } }
rank: 224
score: 98.82885064019098
patch: throw new Internal CaMeL Error ( $STRING$ ;
rank: 224
score: 98.73277064732143
patch: return * break ; break ;
rank: 224
score: 98.69132995605469
patch: this . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 224
score: 98.66276041666667
patch: } break ; / /
rank: 224
score: 98.6116610440341
patch: if ( f 0 . compare CaMeL To ( ;
rank: 224
score: 98.580322265625
patch: break ; break ; break ; if break ; }
rank: 225
score: 98.89115767045455
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 225
score: 98.85172526041667
patch: final double rtol = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 225
score: 98.83757781982422
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 225
score: 98.73206787109375
patch: break ; break ; } } catch break ;
rank: 225
score: 98.69032287597656
patch: continue ; case REGULA _ FALSI : return x 1 ; }
rank: 225
score: 98.66202218191964
patch: break ; out { break ;
rank: 225
score: 98.57977294921875
patch: break ; ; ; if ; break ;
rank: 226
score: 98.89078097873264
patch: throw new Math CaMeL Internal CaMeL Error ( System . get CaMeL Message ( ) ) ;
rank: 226
score: 98.82789024939903
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ - ) ;
rank: 226
score: 98.7314786044034
patch: break ; } } } break ; break ; }
rank: 226
score: 98.68990071614583
patch: continue ; case REGULA _ FALSI : f
rank: 226
score: 98.66128976004464
patch: break ; * break ; *
rank: 226
score: 98.61151123046875
patch: break ; default : f 0 . double CaMeL Value ;
rank: 226
score: 98.57826063368056
patch: break ; break ; if ; System ;
rank: 226
score: 98.54747425426136
patch: sb . append ( $STRING$ ) . append ( ;
rank: 227
score: 98.89071655273438
patch: } double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 227
score: 98.85014038085937
patch: return fx ; case PEGASUS :
rank: 227
score: 98.83565266927083
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ $STRING$ ) ;
rank: 227
score: 98.73121337890625
patch: return 0 . 0 ; } if break ;
rank: 227
score: 98.68956580528847
patch: state . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 227
score: 98.6610819498698
patch: break ; * / /
rank: 227
score: 98.61130981445312
patch: break ; default : System . out ; }
rank: 227
score: 98.57657470703126
patch: break ; break ; break ; break ; else
rank: 227
score: 98.54624245383523
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ +
rank: 228
score: 98.8903096516927
patch: throw new Math . Internal CaMeL Error ( $STRING$ ) ;
rank: 228
score: 98.84959059495192
patch: switch ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) )
rank: 228
score: 98.83529227120536
patch: else throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 228
score: 98.8271484375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Cause ( ) ) ;
rank: 228
score: 98.73057861328125
patch: return break ; } } else return break ;
rank: 228
score: 98.68932342529297
patch: context . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 228
score: 98.6104227701823
patch: break ; default : f 1 . break ; } }
rank: 228
score: 98.57632785373264
patch: break ; break ; else break ; }
rank: 228
score: 98.54471529447116
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ ;
rank: 229
score: 98.88997650146484
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ;
rank: 229
score: 98.84934303977273
patch: return x 0 ; case PEGASUS :
rank: 229
score: 98.8349609375
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ ) ; }
rank: 229
score: 98.730419921875
patch: break ; break ; } catch break ; }
rank: 229
score: 98.68842230902777
patch: break ; case REGULA _ FALSI : f 0 -= 0 . $NUMBER$ ;
rank: 229
score: 98.66090393066406
patch: break ; ; ; * break ;
rank: 229
score: 98.61028497869319
patch: break ; default : break ; } } } ;
rank: 229
score: 98.57627360026042
patch: break ; break ; this ; break ;
rank: 229
score: 98.54438920454545
patch: break . 0 = break . 0 ; default :
rank: 230
score: 98.88996887207031
patch: * double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 230
score: 98.84930778952206
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : $NUMBER$ ) ;
rank: 230
score: 98.82632010323661
patch: else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 230
score: 98.73005981445313
patch: break ; } } } } break ; }
rank: 230
score: 98.68838500976562
patch: System . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 230
score: 98.66081019810268
patch: break ; ; break ; }
rank: 230
score: 98.6100565592448
patch: break ; default : f 0 . 0 = ; }
rank: 230
score: 98.57521565755208
patch: break ; break ; break ; if break ; break ;
rank: 230
score: 98.54354422433036
patch: b 0 = x $NUMBER$ ;
rank: 231
score: 98.83421107700893
patch: f 1 = compute CaMeL Objective CaMeL Value ( f 1 ) ;
rank: 231
score: 98.72967529296875
patch: return break ; } catch break ;
rank: 231
score: 98.68636067708333
patch: case ANY _ SIDE :
rank: 231
score: 98.65918840680804
patch: break ; * ; / /
rank: 231
score: 98.60941569010417
patch: break ; default : System . break ;
rank: 231
score: 98.57516479492188
patch: break ; break ; return ; { break ;
rank: 231
score: 98.54350142045455
patch: return 0 . 0 ; default : break ; }
rank: 232
score: 98.8476092998798
patch: e . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 232
score: 98.83400268554688
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + ) ; }
rank: 232
score: 98.82501220703125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 + ) ;
rank: 232
score: 98.72943987165179
patch: break break ; break ; }
rank: 232
score: 98.68568420410156
patch: break ; case REGULA _ FALSI : case LEFT _ SIDE :
rank: 232
score: 98.65880669487848
patch: break ; ; / * / break ;
rank: 232
score: 98.60851111778847
patch: break ; case ; No CaMeL Such CaMeL Method CaMeL Exception :
rank: 233
score: 98.84644493689903
patch: throw new Math CaMeL Internal CaMeL Error ( this ) ; }
rank: 233
score: 98.83342895507812
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ;
rank: 233
score: 98.72876654730902
patch: } break ; } } return break ;
rank: 233
score: 98.60786268446181
patch: } else { f 0 = ; }
rank: 233
score: 98.54222954644098
patch: break ; default : { break ; }
rank: 234
score: 98.72835286458333
patch: break ; } this . break ; }
rank: 234
score: 98.65750122070312
patch: } * ; break ;
rank: 234
score: 98.60762023925781
patch: f 0 = x 0 ; }
rank: 234
score: 98.57212524414062
patch: break ; break ; if ; if / /
rank: 234
score: 98.5413106282552
patch: break ; > 0 . 0 : f 1 = ;
rank: 235
score: 98.88869406960227
patch: f 0 *= 0 . $NUMBER$ ; break ; }
rank: 235
score: 98.84562174479167
patch: f 1 *= 0 . 0 ; }
rank: 235
score: 98.83282470703125
patch: f 1 = x 1 ; } }
rank: 235
score: 98.82294108072917
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ - f 1 ) ;
rank: 235
score: 98.728271484375
patch: break ; else break ; } else
rank: 235
score: 98.68398030598958
patch: case REGULA _ FALSI : / / /
rank: 235
score: 98.6570536295573
patch: break ; * else {
rank: 235
score: 98.60590069110577
patch: break ; default : f 0 . break ; } ; }
rank: 235
score: 98.57190958658855
patch: break ; break ; if ; break ; return break ;
rank: 236
score: 98.88839588994566
patch: switch ( Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) {
rank: 236
score: 98.84393717447917
patch: return compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 236
score: 98.832275390625
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 236
score: 98.72763061523438
patch: break ; } } else { break ; }
rank: 236
score: 98.68362630208334
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 236
score: 98.65659586588542
patch: break ; / / /
rank: 236
score: 98.60557250976562
patch: break ; case break ; default : break ;
rank: 236
score: 98.57132975260417
patch: break ; break ; this
rank: 237
score: 98.83198765345982
patch: inverted : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 237
score: 98.7264633178711
patch: } else { break ; ; }
rank: 237
score: 98.65652029854911
patch: } return break ; break ;
rank: 237
score: 98.60480346679688
patch: break ; default : return x ; } }
rank: 237
score: 98.56955295138889
patch: break ; break ; ; break ; ;
rank: 238
score: 98.88775344122024
patch: switch ( Fast CaMeL Math . abs ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) {
rank: 238
score: 98.84288736979167
patch: break ; case ILLINOIS : f 0 *= f 1 ;
rank: 238
score: 98.72517903645833
patch: return break ; this . break ; }
rank: 238
score: 98.6826883951823
patch: / throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 238
score: 98.65634591238839
patch: break ; * / ; /
rank: 238
score: 98.60451253255208
patch: break ; default : f 0 = ; break ; }
rank: 238
score: 98.56952514648438
patch: break ; break ; break ; if / ;
rank: 238
score: 98.53985595703125
patch: break ; default : throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 239
score: 98.8853759765625
patch: ftol = compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 239
score: 98.72425672743056
patch: return 0 . length - break ; }
rank: 239
score: 98.68264770507812
patch: break ; case PEGASUS : f 1 *= 0 . $NUMBER$ ;
rank: 239
score: 98.65609305245536
patch: break break ; catch break ;
rank: 239
score: 98.56904740767045
patch: break ; break ; break ; if / / /
rank: 239
score: 98.53884887695312
patch: break ; > 0 . 0 = 0 . $NUMBER$ ;
rank: 240
score: 98.88468424479167
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 240
score: 98.72382354736328
patch: break ; } } } * /
rank: 240
score: 98.68159993489583
patch: break ; case REGULA _ FALSI : switch ( method )
rank: 240
score: 98.65591430664062
patch: break { break ; }
rank: 240
score: 98.60117797851562
patch: break ; default : break false ; } }
rank: 240
score: 98.56851806640626
patch: break ; break ; if ; ; / /
rank: 240
score: 98.53819861778847
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( ; }
rank: 241
score: 98.88446044921875
patch: approximation = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 241
score: 98.72352905273438
patch: return break ; } } } break ; }
rank: 241
score: 98.68137032645089
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 241
score: 98.65488106863839
patch: break ; value return break ;
rank: 241
score: 98.60103665865384
patch: break ; default : f 0 = x 1 ; } }
rank: 241
score: 98.56824840198864
patch: break ; break ; break ; } return break ;
rank: 241
score: 98.53797403971355
patch: } break ; default :
rank: 242
score: 98.8409359580592
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . verify CaMeL Bracketing ( ) ;
rank: 242
score: 98.83013509114583
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 242
score: 98.81886291503906
patch: break ; default : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 242
score: 98.68061828613281
patch: continue ; case BELOW _ SIDE :
rank: 242
score: 98.65416608537946
patch: return break ; ; ; ;
rank: 242
score: 98.60093383789062
patch: break ; default : super . break ; }
rank: 242
score: 98.5675048828125
patch: break ; break ; if ; * / /
rank: 242
score: 98.53788757324219
patch: if ( break ) { break ;
rank: 243
score: 98.84076397235577
patch: break : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 243
score: 98.83012120863971
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 243
score: 98.81856496710526
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 243
score: 98.72157592773438
patch: break ; break ; } } } break ;
rank: 243
score: 98.68056815011161
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( false ) ;
rank: 243
score: 98.65364583333333
patch: return break ; break ; System . ;
rank: 243
score: 98.60041046142578
patch: break ; case ; case ; }
rank: 243
score: 98.56729125976562
patch: break ; if / = break ;
rank: 243
score: 98.53648681640625
patch: break ; default : return - $NUMBER$ ; }
rank: 244
score: 98.84049849076705
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) {
rank: 244
score: 98.82935680042614
patch: if ( f 1 == 0 . 0 ) {
rank: 244
score: 98.81827799479167
patch: return x 0 . 0 ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 244
score: 98.72041015625
patch: return break ; } } } return break ;
rank: 244
score: 98.68008422851562
patch: continue ; case REGULA _ FALSI : {
rank: 244
score: 98.65262603759766
patch: break ; / / int break ;
rank: 244
score: 98.600341796875
patch: break ; default : f 0 . break ; ; } }
rank: 244
score: 98.56599564985795
patch: break ; break ; break ; break ; if ;
rank: 244
score: 98.5349872295673
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 245
score: 98.88094075520833
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 245
score: 98.8404541015625
patch: this . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 245
score: 98.65255737304688
patch: } break ; ; / / /
rank: 245
score: 98.60028545673077
patch: break ; default : System . err . ; } } ;
rank: 245
score: 98.5345458984375
patch: break ; > 0 . 0 : f 1 ;
rank: 246
score: 98.82839731069711
patch: f 1 throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 246
score: 98.71791076660156
patch: break ; break ; false ; }
rank: 246
score: 98.67933067908653
patch: break ; case PEGASUS : f 0 -- ;
rank: 246
score: 98.59976900540866
patch: break ; default : System . out . ; } } ;
rank: 246
score: 98.56521606445312
patch: break ; break ; return break ; break ;
rank: 247
score: 98.88054063585069
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = false ;
rank: 247
score: 98.83861083984375
patch: f 1 *= 0 . 1 ; break ;
rank: 247
score: 98.81720842633929
patch: break ; case RIGHT _ SIDE : f 0 *= f 1 ;
rank: 247
score: 98.71756998697917
patch: break ; } } break ; break ;
rank: 247
score: 98.67933000837054
patch: continue ; case REGULA _ FALSI : / * /
rank: 247
score: 98.65240478515625
patch: } break ; ; *
rank: 247
score: 98.59935584435097
patch: break ; default : System . break ; } } break ;
rank: 247
score: 98.56507025824652
patch: break ; break ; ; else break ;
rank: 247
score: 98.53429158528645
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 248
score: 98.87982177734375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 248
score: 98.83835018382354
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( ) ; break ;
rank: 248
score: 98.82763671875
patch: throw new Internal CaMeL Error ( $STRING$ ) ;
rank: 248
score: 98.81703186035156
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 ) ; break ;
rank: 248
score: 98.71662248883929
patch: break break ; } } else
rank: 248
score: 98.67902080829327
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x ;
rank: 248
score: 98.65209089006696
patch: } break ; ; * /
rank: 248
score: 98.59935584435097
patch: break ; No CaMeL Such CaMeL Method CaMeL Error ( ; }
rank: 248
score: 98.5650146484375
patch: break ; break ; if / if break ;
rank: 249
score: 98.83785400390624
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE ) ;
rank: 249
score: 98.82665076622597
patch: f 1 *= compute CaMeL Objective CaMeL Value ( ) ; }
rank: 249
score: 98.71651458740234
patch: break ; } } break ; ;
rank: 249
score: 98.6784912109375
patch: assert Fast CaMeL Math . abs ( f 1 ) <= ftol ;
rank: 249
score: 98.59894268329327
patch: break ; default : f 0 = ; } } break ;
rank: 249
score: 98.56490071614583
patch: break ; break ; break ; this ;
rank: 250
score: 98.83780611478366
patch: return f 1 ; case REGULA _ FALSI :
rank: 250
score: 98.82647094726562
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ;
rank: 250
score: 98.71513227982955
patch: break ; break ; } else return break ; }
rank: 250
score: 98.67819213867188
patch: case REGULA _ FALSI : f 0 = 0 . $NUMBER$ ;
rank: 250
score: 98.65126037597656
patch: } * * * break ; /
rank: 250
score: 98.59849196213942
patch: break ; default : System . err . ; } ; ;
rank: 250
score: 98.56434122721355
patch: break ; break ; break ; if ; / / /
rank: 250
score: 98.5325458233173
patch: default : throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 251
score: 98.83755154079861
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) ) ;
rank: 251
score: 98.8261782997533
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) ;
rank: 251
score: 98.71481759207589
patch: } if ; return break ;
rank: 251
score: 98.67800005744485
patch: break ; case REGULA _ FALSI : if ( ! inverted ) {
rank: 251
score: 98.65003313337054
patch: break ; * ; ; /
rank: 251
score: 98.59762573242188
patch: break ; default : f 0 = - 1 ; }
rank: 251
score: 98.56364135742187
patch: break ; break ; ; / / / /
rank: 251
score: 98.53146798270089
patch: } if ( break ) {
rank: 252
score: 98.83704833984375
patch: f 0 *= 1 . $NUMBER$ ; break ;
rank: 252
score: 98.8259521484375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 0 ) ;
rank: 252
score: 98.6767578125
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return ;
rank: 252
score: 98.64948187934027
patch: break ; / * * * break ;
rank: 252
score: 98.56329345703125
patch: break ; break ; } { break ;
rank: 252
score: 98.53144182477679
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ; }
rank: 253
score: 98.87683977399554
patch: ftol = get CaMeL Relative CaMeL Accuracy ( ) ; } }
rank: 253
score: 98.83690185546875
patch: this . f 0 *= 0 . $NUMBER$ ;
rank: 253
score: 98.81554236778847
patch: f 0 = get CaMeL Relative CaMeL Accuracy ( ) ; }
rank: 253
score: 98.71422230113636
patch: break ; } } else { return break ; }
rank: 253
score: 98.59653727213542
patch: break ; default : break null ; }
rank: 253
score: 98.56306966145833
patch: break ; break ; String
rank: 253
score: 98.53131103515625
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( break ) ;
rank: 254
score: 98.8251953125
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 254
score: 98.71342468261719
patch: break ; ; } break ; }
rank: 254
score: 98.67581176757812
patch: case REGULA _ FALSI : f 0 *= 0 . 1 ;
rank: 254
score: 98.6475830078125
patch: break ; / * / /
rank: 254
score: 98.59528459821429
patch: break ; default : { }
rank: 254
score: 98.56285511363636
patch: break ; if ; break ; if ; break ;
rank: 254
score: 98.53111436631944
patch: break . $NUMBER$ : f 0 = ;
rank: 255
score: 98.82416178385417
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / f 1 ) ;
rank: 255
score: 98.71189186789773
patch: throw new Illegal CaMeL State CaMeL Exception break ; }
rank: 255
score: 98.67544555664062
patch: continue ; }
rank: 255
score: 98.64705657958984
patch: break ; * finally { break ;
rank: 255
score: 98.59482985276442
patch: b 0 = Double . parse CaMeL Double ( ; } }
rank: 255
score: 98.56245727539063
patch: break ; break ; ; break ; break ;
rank: 255
score: 98.5310809795673
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ; }
rank: 256
score: 98.87610802283653
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 256
score: 98.83523123604911
patch: break ; case PEGASUS : f 0 *= 0 ;
rank: 256
score: 98.82299126519098
patch: f 1 = f 1 ; } }
rank: 256
score: 98.71175808376736
patch: break ; } } catch break ; }
rank: 256
score: 98.67540147569444
patch: continue ; case REGULA _ FALSI : f 0 *= 0 . 1 ;
rank: 256
score: 98.64704132080078
patch: break ; / / * ; /
rank: 256
score: 98.56228637695312
patch: break ; break ; ! break ;
rank: 256
score: 98.52988978794643
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; } ;
rank: 257
score: 98.87527029854911
patch: return x 1 ; } }
rank: 257
score: 98.83519151475694
patch: { f 0 *= 0 . 0 ;
rank: 257
score: 98.71174839564732
patch: } if ; break ; }
rank: 257
score: 98.67534528459821
patch: synchronized ( Fast CaMeL Math . abs ( f 1 ) ) {
rank: 257
score: 98.64614868164062
patch: break ; ; / int break ;
rank: 257
score: 98.5940274325284
patch: b 0 = Double . value CaMeL Of ( ;
rank: 257
score: 98.56187947591145
patch: break ; break ; break ; break ; return break ;
rank: 257
score: 98.52952357700893
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }
rank: 258
score: 98.87516021728516
patch: final double x 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 258
score: 98.82272774832589
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; default :
rank: 258
score: 98.81423468338816
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 258
score: 98.71166120256696
patch: break ; } break ; else
rank: 258
score: 98.67533735795455
patch: result = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 258
score: 98.64605712890625
patch: break ; super . break ; ;
rank: 258
score: 98.5934549967448
patch: break ; default : System . ; } } break ;
rank: 258
score: 98.56149727957589
patch: break ; if ; * /
rank: 258
score: 98.52743530273438
patch: break ; case ; case ; case ; : break ;
rank: 259
score: 98.8346923828125
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) {
rank: 259
score: 98.81398411800987
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( method ) ) ;
rank: 259
score: 98.71164957682292
patch: return 0 . 0 ;
rank: 259
score: 98.64547729492188
patch: break ; ; else {
rank: 259
score: 98.59318033854167
patch: break ; default : System . out . ; continue ;
rank: 259
score: 98.56132676866319
patch: break ; break ; break ; ; /
rank: 259
score: 98.52641296386719
patch: f 1 = x $NUMBER$ ; }
rank: 260
score: 98.87508719308036
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x ) ; }
rank: 260
score: 98.8345947265625
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( ) ; break ;
rank: 260
score: 98.71060943603516
patch: break ; ; else break ; }
rank: 260
score: 98.67499651227679
patch: break ; case PEGASUS : if ( inverted ) {
rank: 260
score: 98.645263671875
patch: return break ; ; ; break ;
rank: 260
score: 98.59317016601562
patch: b 0 = x 1 ; }
rank: 260
score: 98.52604166666667
patch: this . x 0 = x $NUMBER$ ;
rank: 261
score: 98.8330965909091
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ }
rank: 261
score: 98.81299591064453
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + $STRING$ ;
rank: 261
score: 98.71053314208984
patch: } break ; } catch break ;
rank: 261
score: 98.64426967075893
patch: break ; ; } break ;
rank: 261
score: 98.59154256184895
patch: break ; default : f 0 . ; } break ;
rank: 261
score: 98.56039767795139
patch: break ; break ; if ; try /
rank: 261
score: 98.5256014737216
patch: break ; default : return 0 . 1 ; }
rank: 262
score: 98.873876953125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x ) ;
rank: 262
score: 98.83250209263393
patch: final double ftol = compute CaMeL Objective CaMeL Value ( ) ;
rank: 262
score: 98.82144165039062
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 262
score: 98.70975952148437
patch: return 0 . 0 ; else return break ;
rank: 262
score: 98.6744384765625
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 1 ; }
rank: 262
score: 98.59132690429688
patch: break ; default : f 0 ; ; }
rank: 262
score: 98.55983479817708
patch: break ; return break ; if break ;
rank: 262
score: 98.52538190569196
patch: break . to CaMeL String ( ) ; default : break ; }
rank: 263
score: 98.87369140625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } }
rank: 263
score: 98.83247205946181
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Message ( ) ) ;
rank: 263
score: 98.70949978298611
patch: return 0 . 0 ; } } else
rank: 263
score: 98.6742172241211
patch: break ; case REGULA _ FALSI : f 0 *= 1 ;
rank: 263
score: 98.64280192057292
patch: break break ; / * * break ;
rank: 263
score: 98.59022105823864
patch: break ; default : System . err . ; ;
rank: 263
score: 98.55976019965277
patch: break ; ; if break ; break ;
rank: 263
score: 98.52471923828125
patch: throw new Illegal CaMeL State CaMeL Exception ; default : break ; }
rank: 264
score: 98.87348090277777
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 264
score: 98.82058279854911
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + 0 ) ;
rank: 264
score: 98.70803493923611
patch: break ; super . break ; } }
rank: 264
score: 98.67421177455357
patch: case REGULA _ FALSI : inverted = ! inverted ;
rank: 264
score: 98.64253452845982
patch: } * ; return break ;
rank: 264
score: 98.59009728064903
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ break ) ;
rank: 264
score: 98.55965423583984
patch: break ; if ; break ; try
rank: 265
score: 98.8731753700658
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = false ; }
rank: 265
score: 98.83240855823864
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ;
rank: 265
score: 98.82026672363281
patch: f 1 *= fx ; break ;
rank: 265
score: 98.81121826171875
patch: break ; case PEGASUS : f 0 *= 0 . 0 ; break ;
rank: 265
score: 98.7078369140625
patch: break ; } } } } if break ;
rank: 265
score: 98.67368727463942
patch: case REGULA _ FALSI | 0 . $NUMBER$ :
rank: 265
score: 98.64155796595982
patch: break ; finally { break ;
rank: 265
score: 98.58968505859374
patch: break ; case ; default : throw ; }
rank: 265
score: 98.55839320591518
patch: break ; break ; log ;
rank: 265
score: 98.5244140625
patch: } break ; default : break ;
rank: 266
score: 98.83129010881696
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( this ) ;
rank: 266
score: 98.81000627790179
patch: * / throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 266
score: 98.70716094970703
patch: } break ; * * break ;
rank: 266
score: 98.64083862304688
patch: } break ; ; /
rank: 266
score: 98.5893046061198
patch: break ; default : f 0 . ; } } }
rank: 266
score: 98.55660400390624
patch: break ; break ; if ; break ; try
rank: 266
score: 98.52356896033653
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; } ;
rank: 267
score: 98.87246704101562
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 267
score: 98.81932237413194
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . do CaMeL Solve ( ) ) ;
rank: 267
score: 98.70692443847656
patch: break break ; else return break ;
rank: 267
score: 98.67283630371094
patch: continue ; case REGULA _ FALSI : inverted = ! inverted ;
rank: 267
score: 98.64071655273438
patch: break ; break ; } * *
rank: 267
score: 98.5892803485577
patch: break ; default : f 0 . ; break ; } }
rank: 267
score: 98.55621337890625
patch: break ; break ; if
rank: 267
score: 98.52249581473214
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , method ) ;
rank: 268
score: 98.87214491102431
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 268
score: 98.83029174804688
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Internal CaMeL Error ) ;
rank: 268
score: 98.80954318576389
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) ) ;
rank: 268
score: 98.7064437866211
patch: throw new Runtime CaMeL Exception ; }
rank: 268
score: 98.67108154296875
patch: break ; case REGULA _ FALSI : switch ( allowed ) {
rank: 268
score: 98.64046223958333
patch: if null ; break ;
rank: 268
score: 98.5892803485577
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ; }
rank: 268
score: 98.55615234375
patch: break ; if ; break ; throw break ;
rank: 268
score: 98.5220947265625
patch: case ; case ; :
rank: 269
score: 98.87138671875
patch: final double x = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 269
score: 98.81850857204861
patch: f 1 *= x 0 . 1 ;
rank: 269
score: 98.80953640407986
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ; }
rank: 269
score: 98.7054672241211
patch: return break ; } else break ;
rank: 269
score: 98.63928900824652
patch: break ; break ; ; / * /
rank: 269
score: 98.55573064630681
patch: break ; break ; break ; if * break ;
rank: 269
score: 98.52171741832386
patch: if ( f 1 < 0 . 0 ) {
rank: 270
score: 98.8299893465909
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ;
rank: 270
score: 98.81842510516827
patch: inverted = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 270
score: 98.70537651909723
patch: } break ; break ; break ; }
rank: 270
score: 98.67029680524554
patch: case PEGASUS :
rank: 270
score: 98.63926696777344
patch: return break ; break ; / ;
rank: 270
score: 98.5883456143466
patch: break ; default : System . ; } } ;
rank: 270
score: 98.55561065673828
patch: break ; break ; if ; String
rank: 270
score: 98.52121988932292
patch: break ; default : return true ; }
rank: 271
score: 98.82953287760417
patch: final double atol = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 271
score: 98.8184063251202
patch: inverted = compute CaMeL Objective CaMeL Value ( x 1 ) ;
rank: 271
score: 98.80931939019098
patch: f 0 = f 1 ; break ;
rank: 271
score: 98.70419311523438
patch: break ; * break ; } else
rank: 271
score: 98.66958618164062
patch: continue ; case REGULA _ FALSI : }
rank: 271
score: 98.63923863002232
patch: break ; / / ; /
rank: 271
score: 98.58807373046875
patch: break ; default : f 0 . ; break ; }
rank: 271
score: 98.52114868164062
patch: break ; case ; case ; : f 1 ; }
rank: 272
score: 98.8698959350586
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; * /
rank: 272
score: 98.82903693704044
patch: throw new Math CaMeL Internal CaMeL Error ( get CaMeL Runtime ( ) , ) ;
rank: 272
score: 98.81822374131944
patch: f 0 *= x 1 ; break ;
rank: 272
score: 98.80931507457386
patch: throw new Math CaMeL Internal CaMeL Error ( this ;
rank: 272
score: 98.70394558376736
patch: return 0 . value ; break ; }
rank: 272
score: 98.66939290364583
patch: if ( ! Fast CaMeL Math . abs ( f 1 ) <= ftol ) {
rank: 272
score: 98.63922882080078
patch: break ; break ; } ; *
rank: 272
score: 98.58768310546876
patch: break ; default ; break ; } } ;
rank: 272
score: 98.55506480823864
patch: break ; break ; if ; { break ; }
rank: 272
score: 98.52049560546875
patch: break ; default : System . arraycopy ( ;
rank: 273
score: 98.81741768973214
patch: f 1 = compute CaMeL Objective CaMeL Value ( f 0 ) ;
rank: 273
score: 98.70375061035156
patch: } } break ; break ; }
rank: 273
score: 98.66827033547794
patch: break ; case REGULA _ FALSI : f 0 *= f 0 ;
rank: 273
score: 98.63883972167969
patch: break ; / * / break ;
rank: 273
score: 98.58735795454545
patch: break ; default : return x 1 ; } }
rank: 273
score: 98.55413818359375
patch: break ; break ; break ; if ; }
rank: 273
score: 98.52036354758523
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ )
rank: 274
score: 98.82793317522321
patch: super . do CaMeL Solve ( x 0 , x 1 ) ;
rank: 274
score: 98.8173319498698
patch: throw new Math CaMeL Internal CaMeL Error ( Math ; }
rank: 274
score: 98.80901740579044
patch: return x 1 ; case PEGASUS : f 0 *= f 1 ;
rank: 274
score: 98.66805013020833
patch: exception . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 274
score: 98.63836669921875
patch: break ; / ;
rank: 274
score: 98.5867919921875
patch: b 0 . to CaMeL String ( ) ; } }
rank: 274
score: 98.55406494140625
patch: break ; break ; return ; return break ;
rank: 274
score: 98.51966271033653
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; break ;
rank: 275
score: 98.82792394301471
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 275
score: 98.81731567382812
patch: f 1 = 0 . $NUMBER$ ; break ;
rank: 275
score: 98.80869547526042
patch: throw new Math CaMeL Internal CaMeL Error ( method ) ;
rank: 275
score: 98.70177459716797
patch: return break ; * break ; }
rank: 275
score: 98.66757202148438
patch: break ; case ABOVE _ SIDE : return x 1 ;
rank: 275
score: 98.63800048828125
patch: break ; * break ; ; /
rank: 275
score: 98.58462289663461
patch: break ; default : f 0 . to CaMeL String ; }
rank: 275
score: 98.55344645182292
patch: break ; break ; set
rank: 275
score: 98.51919555664062
patch: b 0 = x $NUMBER$ ; }
rank: 276
score: 98.70126003689236
patch: break ; else break ; } } }
rank: 276
score: 98.66733224051339
patch: ! Fast CaMeL Math . abs ( f 1 + fx ) ;
rank: 276
score: 98.63749694824219
patch: break ; * ; / break ;
rank: 276
score: 98.55287475585938
patch: break ; if ; break ; break ; ;
rank: 276
score: 98.5184326171875
patch: break . to CaMeL String ( ) ;
rank: 277
score: 98.86847686767578
patch: return x 0 . $NUMBER$ ; }
rank: 277
score: 98.82631138392857
patch: throw new Math CaMeL Internal CaMeL Error ( + x 1 ) ;
rank: 277
score: 98.80818684895833
patch: break ; case REGULA _ FALSI : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 277
score: 98.70025634765625
patch: return 0 ; break ; } }
rank: 277
score: 98.66717529296875
patch: continue ; case REGULA _ FALSI : / / ;
rank: 277
score: 98.63580322265625
patch: return break ; ; / /
rank: 277
score: 98.55286407470703
patch: break ; return break ; break ;
rank: 277
score: 98.51821899414062
patch: break ; default : f 1 ;
rank: 278
score: 98.81545584542411
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; } break ;
rank: 278
score: 98.69934844970703
patch: return break ; } else if ;
rank: 278
score: 98.66702035757211
patch: log . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 278
score: 98.63523864746094
patch: break ; case ; * break ;
rank: 278
score: 98.5825664813702
patch: break ; default : f 0 = 0 . 0 ; }
rank: 278
score: 98.55268998579545
patch: break ; break ; try / if ; break ;
rank: 278
score: 98.51661173502605
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ;
rank: 279
score: 98.82526711856617
patch: break ; case PEGASUS : f 0 *= f 1 + fx ;
rank: 279
score: 98.80705180921052
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 279
score: 98.6987060546875
patch: break ; } } } if break ; }
rank: 279
score: 98.66671932444854
patch: break ; case REGULA _ FALSI : f 0 = x 1 ;
rank: 279
score: 98.5518798828125
patch: break ; if ; / / / /
rank: 279
score: 98.51650168678977
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ )
rank: 280
score: 98.82521275111607
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 280
score: 98.80668131510417
patch: throw new Math CaMeL Internal CaMeL Error ( ) . get CaMeL Message ( ) ; }
rank: 280
score: 98.69868774414063
patch: break ; } break ; } } break ;
rank: 280
score: 98.6339823404948
patch: break ; out ; ;
rank: 280
score: 98.57990858289931
patch: return ; default : break ; } }
rank: 280
score: 98.55149332682292
patch: break ; break ; return / break ;
rank: 280
score: 98.51641235351562
patch: break . to CaMeL String ( ) ; }
rank: 281
score: 98.86572265625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ;
rank: 281
score: 98.82418484157986
patch: f 1 *= f 1 . 0 ;
rank: 281
score: 98.81414794921875
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 281
score: 98.69820149739583
patch: break ; break ; } else break ;
rank: 281
score: 98.633544921875
patch: return break ; ; / * break ;
rank: 281
score: 98.57799421037946
patch: break ; } if ( ;
rank: 281
score: 98.5509033203125
patch: break ; break ; return * break ;
rank: 281
score: 98.51639229910714
patch: z 0 = x 1 ;
rank: 282
score: 98.86503462357955
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 282
score: 98.82361949573864
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) {
rank: 282
score: 98.80642465444711
patch: f 0 throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 282
score: 98.69744873046875
patch: return break ; } else return break ;
rank: 282
score: 98.66516927083333
patch: state . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 282
score: 98.63170708550348
patch: break ; ; / / System . ;
rank: 282
score: 98.5771484375
patch: break ; default ; continue ; }
rank: 282
score: 98.55000305175781
patch: break ; break ; break ; check
rank: 282
score: 98.51595052083333
patch: default : throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 283
score: 98.864853515625
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 283
score: 98.82350786994485
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 1 ) ;
rank: 283
score: 98.80585186298077
patch: fx = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 283
score: 98.69510650634766
patch: break break ; } else break ;
rank: 283
score: 98.66432698567708
patch: tmp = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 283
score: 98.57681274414062
patch: break ; default : System ; }
rank: 283
score: 98.5494051846591
patch: break ; break ; if ; / / / /
rank: 283
score: 98.5156494140625
patch: break ; case ; default : return ; }
rank: 284
score: 98.8644686612216
patch: f 0 *= x 0 . $NUMBER$ ; break ;
rank: 284
score: 98.80441720145089
patch: f 0 throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 284
score: 98.69434271918402
patch: break ; } break ; } break ;
rank: 284
score: 98.66425432477679
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ , method ) ;
rank: 284
score: 98.63036431206598
patch: break ; ; * * / break ;
rank: 284
score: 98.57673645019531
patch: break ; default ; } } }
rank: 284
score: 98.5482421875
patch: break ; break ; try / if break ;
rank: 284
score: 98.51504516601562
patch: continue ; default : break ; }
rank: 285
score: 98.86367797851562
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( f 0 ) ;
rank: 285
score: 98.82279459635417
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ftol ) ;
rank: 285
score: 98.81270658052884
patch: { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 285
score: 98.69207085503473
patch: return 0 . ; ; break ; }
rank: 285
score: 98.6641357421875
patch: continue ; case PEGASUS : f
rank: 285
score: 98.62949625651042
patch: } finally { break ;
rank: 285
score: 98.57533772786458
patch: break ; default : throw System . err ; } }
rank: 285
score: 98.54742431640625
patch: break ; break ; break ; set
rank: 285
score: 98.51435198102679
patch: b 0 = x 1 ;
rank: 286
score: 98.82216233473558
patch: break ; case PEGASUS : return f 0 ;
rank: 286
score: 98.81215994698661
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ f 1 ) ;
rank: 286
score: 98.80393473307292
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Runtime ( ) ) ;
rank: 286
score: 98.69203186035156
patch: break ; } } * * /
rank: 286
score: 98.62914360894098
patch: return break ; ; * * break ;
rank: 286
score: 98.57478471235795
patch: break ; default : System . out . break ;
rank: 286
score: 98.54691314697266
patch: break ; break ; if ; System
rank: 286
score: 98.51352761008523
patch: break ; case ; case ; ; case ; :
rank: 287
score: 98.8611309344952
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 287
score: 98.8218994140625
patch: f 0 *= 0 . 1 ; }
rank: 287
score: 98.69172014508929
patch: break ; ; } } }
rank: 287
score: 98.66248372395833
patch: break ; case REGULA _ FALSI : f 0 ++ ;
rank: 287
score: 98.62842559814453
patch: return break ; ; ; * /
rank: 287
score: 98.5466537475586
patch: break ; if ; ! break ;
rank: 287
score: 98.51304274338942
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ;
rank: 288
score: 98.8607666015625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 288
score: 98.82184600830078
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error (
rank: 288
score: 98.81166294642857
patch: } throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 288
score: 98.80278930664062
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ;
rank: 288
score: 98.69133966619319
patch: return 0 . 0 ; } else return break ;
rank: 288
score: 98.662353515625
patch: continue ; case REGULA _ FALSI : f 0 *= 0 ;
rank: 288
score: 98.62811957465277
patch: } break ; ; / * break ;
rank: 288
score: 98.54519314236111
patch: break ; break ; return ; if ;
rank: 289
score: 98.86051119290866
patch: inverted = get CaMeL Absolute CaMeL Accuracy ( ) ; break ;
rank: 289
score: 98.81147317325367
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + ) ;
rank: 289
score: 98.80274722450658
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) + ) ;
rank: 289
score: 98.6910400390625
patch: return 0 ; }
rank: 289
score: 98.66217510516827
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 289
score: 98.62687683105469
patch: if break ; break ; break ;
rank: 289
score: 98.57332669771634
patch: break ; default : f 0 . ; } } break ;
rank: 289
score: 98.54392496744792
patch: break ; break ; throw break ; }
rank: 289
score: 98.51232299804687
patch: break ; default : f 1 += break ;
rank: 290
score: 98.85953776041667
patch: double x 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 290
score: 98.82142549402573
patch: final double rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 290
score: 98.81136067708333
patch: f 1 *= f 0 . x ;
rank: 290
score: 98.80270182291666
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ; }
rank: 290
score: 98.6908935546875
patch: break ; else break ; } break ; }
rank: 290
score: 98.66132269965277
patch: case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; break ;
rank: 290
score: 98.6241963704427
patch: break break ; break ;
rank: 290
score: 98.54275173611111
patch: break ; break ; if break ; int
rank: 290
score: 98.51189422607422
patch: break ; > 0 . 1 :
rank: 291
score: 98.85920715332031
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; / /
rank: 291
score: 98.82036994485294
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 291
score: 98.81113009982639
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ;
rank: 291
score: 98.69052734375
patch: break ; } } } super . break ;
rank: 291
score: 98.66127115885416
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 291
score: 98.62391008649554
patch: try { break ; break ;
rank: 291
score: 98.5712890625
patch: break ; default : System . err ; } }
rank: 291
score: 98.54254828559027
patch: break ; break ; if ; * ;
rank: 291
score: 98.51167436079545
patch: break . $NUMBER$ : f 0 = x 1 ;
rank: 292
score: 98.85854867788461
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ false ) ;
rank: 292
score: 98.81991577148438
patch: this . f 1 *= 0 . $NUMBER$ ;
rank: 292
score: 98.80247860863095
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ;
rank: 292
score: 98.68993030894886
patch: throw new Runtime CaMeL Exception ( $STRING$ + break ;
rank: 292
score: 98.66106770833333
patch: logger . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 292
score: 98.62353515625
patch: break ; * ; if break ;
rank: 292
score: 98.57110040838069
patch: break ; default : return x 0 ; } }
rank: 292
score: 98.5424296061198
patch: break ; break ; break ; break ; if break ;
rank: 292
score: 98.5113525390625
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ;
rank: 293
score: 98.81952373798077
patch: case REGULA _ FALSI : return x 0 ;
rank: 293
score: 98.81037248883929
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; } }
rank: 293
score: 98.80219116210938
patch: break ; case REGULA _ FALSI : f 0 *= 0 . 0 ; break ;
rank: 293
score: 98.6897705078125
patch: break ; } } else return break ; }
rank: 293
score: 98.6609115600586
patch: continue ; case REGULA _ FALSI : switch ( method ) {
rank: 293
score: 98.62259928385417
patch: break ; ( break ;
rank: 293
score: 98.569091796875
patch: break ; default : f 0 = f 1 ; }
rank: 293
score: 98.54145812988281
patch: break ; break ; ; / ;
rank: 293
score: 98.51085205078125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$
rank: 294
score: 98.85763729319854
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } } }
rank: 294
score: 98.81912667410714
patch: return x 1 - 0 ;
rank: 294
score: 98.80951690673828
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x ;
rank: 294
score: 98.68863932291667
patch: break ; else return x 1 ; }
rank: 294
score: 98.6594707782452
patch: break ; case REGULA _ FALSI : / }
rank: 294
score: 98.62206268310547
patch: break ; / / return break ;
rank: 294
score: 98.56868489583333
patch: break ; default : f 0 = ; } } }
rank: 294
score: 98.54129028320312
patch: break ; if break ; / /
rank: 294
score: 98.510693359375
patch: throw new Runtime CaMeL Exception ( break ) ;
rank: 295
score: 98.81884087456598
patch: case PEGASUS : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 295
score: 98.68817693536931
patch: break ; break ; } } return break ; }
rank: 295
score: 98.65911865234375
patch: throw new Math CaMeL Internal CaMeL Error (
rank: 295
score: 98.6219482421875
patch: return break ; ; ; / /
rank: 295
score: 98.56859588623047
patch: break ; default : f 0 ;
rank: 295
score: 98.54094102647569
patch: break ; if * break ; break ;
rank: 295
score: 98.50948079427083
patch: break ; default : f 1 = x $NUMBER$ ; }
rank: 296
score: 98.85679716222427
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 296
score: 98.80886840820312
patch: { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 296
score: 98.7999496459961
patch: return x 1 . x 1 ;
rank: 296
score: 98.62141636439732
patch: break ; int catch break ;
rank: 296
score: 98.56854248046875
patch: break ; default : f 1 . ; }
rank: 296
score: 98.54077826605902
patch: break ; return ; break ; break ;
rank: 297
score: 98.68740844726562
patch: break ; } } } else {
rank: 297
score: 98.65873718261719
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } else {
rank: 297
score: 98.62088775634766
patch: return break ; ; ; * ;
rank: 297
score: 98.56847205528847
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ break ) ;
rank: 297
score: 98.54045274522569
patch: break ; break ; } break ; ;
rank: 297
score: 98.5084698016827
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ; }
rank: 298
score: 98.81569417317708
patch: case PEGASUS : f 0 *= $NUMBER$ ;
rank: 298
score: 98.808349609375
patch: f 1 ; throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 298
score: 98.68740234375
patch: return 0 . value ; } } break ;
rank: 298
score: 98.65822928292411
patch: throw new Math CaMeL Internal CaMeL Error ( + method ) ; }
rank: 298
score: 98.62073625837054
patch: / * * break ; /
rank: 298
score: 98.56817626953125
patch: break ; default : throw new Runtime ; }
rank: 298
score: 98.540283203125
patch: break ; break ; } throw break ;
rank: 298
score: 98.50835712139423
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; ;
rank: 299
score: 98.855498046875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ;
rank: 299
score: 98.81533331620066
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this , ) ;
rank: 299
score: 98.80727251838235
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 299
score: 98.79961836965461
patch: return x 0 . $NUMBER$ ; case PEGASUS : f 0 *= f 1 ;
rank: 299
score: 98.68720245361328
patch: { break ; break ; } }
rank: 299
score: 98.62062290736607
patch: break ; / / * /
rank: 299
score: 98.5681485262784
patch: break ; default : f 0 . remove ; }
rank: 299
score: 98.54007568359376
patch: break ; break ; if ; break ; throw
rank: 299
score: 98.50815651633523
patch: break . to CaMeL String ( ) ; break ;
rank: 300
score: 98.85499209449405
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 300
score: 98.81532046669408
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this + ) ;
rank: 300
score: 98.80715506417411
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ - fx ) ;
rank: 300
score: 98.7990253155048
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL
rank: 300
score: 98.68693542480469
patch: break ; } } else break ;
rank: 300
score: 98.65654754638672
patch: case REGULA _ FALSI : f 0 += 0 . $NUMBER$ ;
rank: 300
score: 98.62059783935547
patch: break ; / / / / ;
rank: 300
score: 98.56737670898437
patch: break ; default : throw new break ; }
rank: 300
score: 98.54005737304688
patch: break ; break ; break ; if ; try
rank: 300
score: 98.50800115411931
patch: break ; > 0 . $NUMBER$ = x 1 ;
rank: 301
score: 98.85493977864583
patch: approximation = get CaMeL Relative CaMeL Accuracy ( ) ; }
rank: 301
score: 98.81464979383681
patch: else f 0 *= 0 . $NUMBER$ ;
rank: 301
score: 98.7990234375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 ) ) ;
rank: 301
score: 98.68582916259766
patch: } return break ; break ; }
rank: 301
score: 98.6564053622159
patch: case REGULA _ FALSI : break ;
rank: 301
score: 98.61981201171875
patch: break ; break ; ; ; /
rank: 301
score: 98.56727818080357
patch: break * break * / /
rank: 301
score: 98.5395278930664
patch: break ; if ; else break ;
rank: 301
score: 98.5079345703125
patch: b 1 = x 1 ; }
rank: 302
score: 98.68502807617188
patch: } if ; break ;
rank: 302
score: 98.65541294642857
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( this ) ;
rank: 302
score: 98.61812591552734
patch: if break ; break ; ; ;
rank: 302
score: 98.5393778483073
patch: break ; break ; break ; if ; * break ;
rank: 302
score: 98.50767008463542
patch: break ; case ; case ; : f 0 = ;
rank: 303
score: 98.854130859375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ;
rank: 303
score: 98.68449096679687
patch: break ; * break ; } break ; }
rank: 303
score: 98.65492876838235
patch: break ; case REGULA _ FALSI : start *= 0 . $NUMBER$ ;
rank: 303
score: 98.6165771484375
patch: } break ; break ; case ; *
rank: 303
score: 98.56552124023438
patch: break ; default : throw new Runtime CaMeL Exception ; }
rank: 303
score: 98.53919813368056
patch: break ; break ; else return break ;
rank: 304
score: 98.85340881347656
patch: } else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 304
score: 98.81426680715461
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ;
rank: 304
score: 98.80685763888889
patch: f 0 *= x 0 . 0 ;
rank: 304
score: 98.68447536892361
patch: break ; else break ; break ; }
rank: 304
score: 98.65483542049633
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 304
score: 98.61553955078125
patch: break ; break ; } *
rank: 304
score: 98.56524188701923
patch: break ; default : System . out . ; return ; }
rank: 304
score: 98.53883192274306
patch: break ; if ; = ; break ;
rank: 304
score: 98.50663539341518
patch: break . $NUMBER$ = break . $NUMBER$ ; default : break ; }
rank: 305
score: 98.85340294471153
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; }
rank: 305
score: 98.81412506103516
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 305
score: 98.8050537109375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ;
rank: 305
score: 98.68444213867187
patch: break ; } } this . break ; }
rank: 305
score: 98.65445149739584
patch: continue ; case PEGASUS : f 0 *= f 1 ;
rank: 305
score: 98.61524200439453
patch: break ; int else { break ;
rank: 305
score: 98.56493123372395
patch: break ; default : throw System . err . ; }
rank: 305
score: 98.53870239257813
patch: break ; break ; } break ; break ;
rank: 305
score: 98.50581577845982
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; break ;
rank: 306
score: 98.81384955512152
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 306
score: 98.80430094401042
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / ;
rank: 306
score: 98.79717610677083
patch: f 0 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 306
score: 98.68377075195312
patch: return break ; } } if break ; }
rank: 306
score: 98.65416463216145
patch: break ; case Fast CaMeL Math . ANY _ SIDE :
rank: 306
score: 98.61509704589844
patch: break ; ; * * ; /
rank: 306
score: 98.56382057883523
patch: break ; default : break ; } } else {
rank: 306
score: 98.53858778211806
patch: break ; break ; break ; * /
rank: 306
score: 98.50578090122768
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + this ) ;
rank: 307
score: 98.85313063401442
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 307
score: 98.81383666992187
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 307
score: 98.80382582720588
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 307
score: 98.79685465494792
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 307
score: 98.68261108398437
patch: } else { break ; break ; } }
rank: 307
score: 98.65398763020833
patch: case REGULA _ FALSI : / / return x 1 ;
rank: 307
score: 98.61478097098214
patch: } break ; return break ;
rank: 307
score: 98.5636494954427
patch: break ; default : f 1 = break ; } }
rank: 307
score: 98.53847045898438
patch: break ; if ; break ; break ; /
rank: 307
score: 98.50576346261161
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } ;
rank: 308
score: 98.85304953835227
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 308
score: 98.81345040457589
patch: final double fx 1 = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 308
score: 98.68247680664062
patch: return 0 . length ; } } else {
rank: 308
score: 98.65390249399039
patch: byte fx = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 308
score: 98.6136703491211
patch: break ; case ; out ; ;
rank: 308
score: 98.56266566685268
patch: break ; default : } }
rank: 308
score: 98.53778686523438
patch: break ; break ; break ; if ; throw
rank: 308
score: 98.50570678710938
patch: break . $NUMBER$ : f 1 = break . $NUMBER$ ;
rank: 309
score: 98.85162823016827
patch: throw new Math CaMeL Internal CaMeL Error ( + ) ; }
rank: 309
score: 98.68240356445312
patch: return break ; } break ; else
rank: 309
score: 98.65373992919922
patch: break ; case PEGASUS : f 0 -= 0 . $NUMBER$ ;
rank: 309
score: 98.61255754743304
patch: return break ; ; ; *
rank: 309
score: 98.56053577769886
patch: break ; default : f 0 . set ; }
rank: 309
score: 98.53694291548295
patch: break ; break ; if break ; if break ;
rank: 309
score: 98.50559488932292
patch: throw new Illegal CaMeL State CaMeL Exception ( this ) ;
rank: 310
score: 98.8499004657452
patch: double ftol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 310
score: 98.81329345703125
patch: break ; case ILLINOIS : f 0 *= 0 . $NUMBER$ ;
rank: 310
score: 98.80194854736328
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 ) ; }
rank: 310
score: 98.68234592013889
patch: break break ; } } } break ;
rank: 310
score: 98.6531982421875
patch: continue ; case ANY _ SIDE : return x 1 ;
rank: 310
score: 98.61067962646484
patch: } * * break ; break ;
rank: 310
score: 98.56040261008523
patch: if ( f 0 < 0 . 0 ) {
rank: 310
score: 98.53629150390626
patch: break ; break ; } if ; break ;
rank: 310
score: 98.50553676060268
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ; }
rank: 311
score: 98.81270658052884
patch: throw new Math CaMeL Internal CaMeL Error ( , $STRING$ ) ;
rank: 311
score: 98.80144391741071
patch: f 1 throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 311
score: 98.79608623798077
patch: x 0 throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 311
score: 98.68230590820312
patch: return 0 . 0 ; } } } }
rank: 311
score: 98.65315464564732
patch: case REGULA _ FALSI : switch ( method ) {
rank: 311
score: 98.61049107142857
patch: return break ; ; else {
rank: 311
score: 98.5597675030048
patch: b 0 = Double . value CaMeL Of ( break ) ;
rank: 311
score: 98.53591918945312
patch: break ; break ; if ; { / /
rank: 311
score: 98.50552368164062
patch: if ( break ) { this . break ; } }
rank: 312
score: 98.81227805397727
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ;
rank: 312
score: 98.80136108398438
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 312
score: 98.79600423177084
patch: } else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 312
score: 98.68179321289062
patch: return 0 . value ; } }
rank: 312
score: 98.65287272135417
patch: break ; case REGULA _ FALSI : f 0 *= 1 . $NUMBER$ ;
rank: 312
score: 98.61022077287946
patch: } break ; break ; int
rank: 312
score: 98.55940385298295
patch: break ; default : System . arraycopy ( ; }
rank: 312
score: 98.53585815429688
patch: break ; break ; break ; if / {
rank: 312
score: 98.50546264648438
patch: break ; > 0 . $NUMBER$ : break ; default :
rank: 313
score: 98.84948149181548
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( compute CaMeL Objective CaMeL Value ( ) ) ;
rank: 313
score: 98.81204986572266
patch: return x 0 - f 1 ;
rank: 313
score: 98.8012336282169
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) ;
rank: 313
score: 98.79524536132813
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ;
rank: 313
score: 98.68084716796875
patch: break ; } break ; } return break ;
rank: 313
score: 98.65252685546875
patch: res = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 313
score: 98.5591708096591
patch: break ; default : break ; } ; } }
rank: 313
score: 98.53564453125
patch: break ; break ; ; / if break ;
rank: 313
score: 98.50528971354167
patch: break ; > 0 . $NUMBER$ : f 0 = ;
rank: 314
score: 98.84912923177083
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( 0 ) ;
rank: 314
score: 98.81199645996094
patch: if ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) <= 0 ) {
rank: 314
score: 98.68082427978516
patch: return * break ; } } }
rank: 314
score: 98.65133463541666
patch: break ; case REGULA _ FALSI | 0 . $NUMBER$ :
rank: 314
score: 98.60962785993304
patch: break ; try ; break ;
rank: 314
score: 98.55870903862848
patch: break ; default : throw ; ; }
rank: 314
score: 98.53549533420139
patch: break ; break ; return break ; ;
rank: 315
score: 98.84890512319711
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 315
score: 98.81136067708333
patch: f 0 = f 1 . $NUMBER$ ;
rank: 315
score: 98.79464518229166
patch: f 0 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 315
score: 98.68041314019098
patch: return break ; break ; break ; else
rank: 315
score: 98.60917358398437
patch: } * break ;
rank: 315
score: 98.55862426757812
patch: break ; case break ; default :
rank: 315
score: 98.53544311523437
patch: break ; break ; break ; if ; *
rank: 315
score: 98.50436837332589
patch: break ; > 0 . 0 : f 1 = x 1 ;
rank: 316
score: 98.84797469429348
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 316
score: 98.8109130859375
patch: int fx = compute CaMeL Objective CaMeL Value ( ) ;
rank: 316
score: 98.79443359375
patch: break ; default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 316
score: 98.68028913225446
patch: break ; f 1 ; }
rank: 316
score: 98.65073939732143
patch: continue ; case REGULA _ FALSI : / / /
rank: 316
score: 98.60895538330078
patch: break ; for break ; break ;
rank: 316
score: 98.5584716796875
patch: break ; default : f 0 . value = ; }
rank: 316
score: 98.53502197265625
patch: break ; break ; break ; break ; return
rank: 316
score: 98.50425889756944
patch: if ( break == 0 . 0 )
rank: 317
score: 98.84781044407895
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Min ( ) ) ;
rank: 317
score: 98.79937744140625
patch: f 0 *= f 1 ; } }
rank: 317
score: 98.79290301983173
patch: approximation = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 317
score: 98.67912153764205
patch: break ; } } break ; } break ; }
rank: 317
score: 98.6506817157452
patch: state = Fast CaMeL Math . max ( f 1 ) ;
rank: 317
score: 98.60809326171875
patch: break ; * ; * ;
rank: 317
score: 98.55807059151786
patch: f 0 = ; ; }
rank: 317
score: 98.53487141927083
patch: break ; break ; break ; if ; break ; }
rank: 317
score: 98.50296020507812
patch: break ; default : f 1 = ; break ; }
rank: 318
score: 98.84745025634766
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( f 1 ) ;
rank: 318
score: 98.81013319227431
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Exception ( ) ) ;
rank: 318
score: 98.65057983398438
patch: case ANY _ SIDE : return x 1 ;
rank: 318
score: 98.60649108886719
patch: break ; * else if break ;
rank: 318
score: 98.55780498798077
patch: break ; default : f 0 = ; } break ; }
rank: 318
score: 98.53459028764205
patch: break ; break ; if ; { break ; ;
rank: 318
score: 98.5025634765625
patch: break ; default : throw new Illegal CaMeL Argument CaMeL Exception ; }
rank: 319
score: 98.84742320667614
patch: approximation = compute CaMeL Objective CaMeL Value ( ) ;
rank: 319
score: 98.79888916015625
patch: f 1 = x 0 ; }
rank: 319
score: 98.79238409745066
patch: return x 0 ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 319
score: 98.678955078125
patch: break ; } } catch ;
rank: 319
score: 98.65020345052083
patch: case REGULA _ FALSI : inverted *= 0 . $NUMBER$ ;
rank: 319
score: 98.60570271809895
patch: } if break ; ;
rank: 319
score: 98.53447875976562
patch: break ; if ; break ; / / /
rank: 319
score: 98.50163922991071
patch: case ; break ; default :
rank: 320
score: 98.81002807617188
patch: fx = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 320
score: 98.67809041341145
patch: return * break ; }
rank: 320
score: 98.64984489889706
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 320
score: 98.60514831542969
patch: } break ; ; ; * /
rank: 320
score: 98.55702427455357
patch: break * break * / }
rank: 320
score: 98.53434244791667
patch: break ; ; break ; return break ;
rank: 320
score: 98.50092909071181
patch: break ; > 0 . 0 -- ;
rank: 321
score: 98.84654296875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; }
rank: 321
score: 98.80894978841145
patch: break ; this . f 1 *= 0 . 0 ;
rank: 321
score: 98.79861215444711
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + fx ;
rank: 321
score: 98.676806640625
patch: return break ; break ; } break ; }
rank: 321
score: 98.64870383522727
patch: break ; case REGULA _ FALSI ?
rank: 321
score: 98.60470581054688
patch: break ; * * /
rank: 321
score: 98.53413391113281
patch: break ; if ; * / /
rank: 321
score: 98.5009256998698
patch: break ; > 0 . 0 : f 1 ; }
rank: 322
score: 98.84590970552884
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ $STRING$ ; }
rank: 322
score: 98.80881173270089
patch: throw new Math CaMeL Internal CaMeL Error ( Math . TRUE ) ;
rank: 322
score: 98.79840446920956
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : ) ; }
rank: 322
score: 98.79155530427632
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) + ) ;
rank: 322
score: 98.6763687133789
patch: break ; } * break ; }
rank: 322
score: 98.64867350260417
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x ; }
rank: 322
score: 98.60430908203125
patch: break ; break ; / else {
rank: 322
score: 98.55655343191964
patch: return x 0 * ; }
rank: 322
score: 98.5338363647461
patch: break ; break ; = / ;
rank: 322
score: 98.50052897135417
patch: throw new Runtime CaMeL Exception ( $STRING$ + break ) ;
rank: 323
score: 98.79837196751645
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ;
rank: 323
score: 98.79132952008929
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 323
score: 98.67573547363281
patch: break ; } ; break ; }
rank: 323
score: 98.64849175347223
patch: continue ; case REGULA _ FALSI : f 0 = 0 . $NUMBER$ ;
rank: 323
score: 98.6039810180664
patch: break ; / * return break ;
rank: 323
score: 98.55598958333333
patch: break ; default : System . ; } ; } ;
rank: 323
score: 98.53379313151042
patch: break ; break ; break ; if / / / /
rank: 323
score: 98.50052584134616
patch: if ( break . get CaMeL Type ( ) . equals ;
rank: 324
score: 98.84549560546876
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 324
score: 98.80837576729911
patch: finally { throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 324
score: 98.79745483398438
patch: f 0 *= 0 . $NUMBER$ ; } }
rank: 324
score: 98.67530822753906
patch: } else return break ; } }
rank: 324
score: 98.6035664876302
patch: return * break ; ;
rank: 324
score: 98.55562337239583
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ; } }
rank: 324
score: 98.53297932942708
patch: break ; break ; System ; break ;
rank: 324
score: 98.4993896484375
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } }
rank: 325
score: 98.80832345145089
patch: final double fx 1 = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 325
score: 98.79733072916666
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 325
score: 98.79074096679688
patch: return x 0 = x 1 ;
rank: 325
score: 98.67498016357422
patch: break ; * * * * /
rank: 325
score: 98.64824884588069
patch: return get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 325
score: 98.60341099330357
patch: break ; ; - * /
rank: 325
score: 98.55538236177884
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; } }
rank: 325
score: 98.53209686279297
patch: break ; break ; set / ;
rank: 325
score: 98.49873860677083
patch: break ; default : f 0 = x $NUMBER$ ; }
rank: 326
score: 98.80799278846153
patch: case PEGASUS : return x 0 . $NUMBER$ ;
rank: 326
score: 98.79705810546875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , $STRING$ ) ;
rank: 326
score: 98.64793294270834
patch: continue ; case REGULA _ FALSI : return x 0 ;
rank: 326
score: 98.60340118408203
patch: break ; / * break ; ;
rank: 326
score: 98.55528913225446
patch: b 0 = ; break ;
rank: 326
score: 98.53189522879464
patch: break ; if ; = ;
rank: 326
score: 98.49872589111328
patch: case ; case ; case ; :
rank: 327
score: 98.84481107271634
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; / /
rank: 327
score: 98.674560546875
patch: } else { if break ; }
rank: 327
score: 98.64761555989584
patch: return Fast CaMeL Math . abs ( f 1 ) <= ftol ;
rank: 327
score: 98.60187639508929
patch: break ; ; * ; ;
rank: 327
score: 98.5551288311298
patch: throw new Illegal CaMeL Argument CaMeL Exception ( break , $STRING$ ;
rank: 327
score: 98.5317138671875
patch: break ; break ; break ; if ; else
rank: 327
score: 98.49840436662946
patch: break . 0 = break . 0 ; default : break ; }
rank: 328
score: 98.84455078125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ;
rank: 328
score: 98.8075534986413
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Runtime ( ) , ) ;
rank: 328
score: 98.7903823852539
patch: } f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 328
score: 98.67388153076172
patch: break break ; } break ; else
rank: 328
score: 98.60173034667969
patch: } break ; else { break ;
rank: 328
score: 98.55494907924107
patch: break ; ; ; default :
rank: 328
score: 98.53094482421875
patch: break ; if ; break ; break ; return break ;
rank: 328
score: 98.498388671875
patch: if ( f 1 < 0 . 0 ;
rank: 329
score: 98.807421875
patch: break ; case REGULA _ FALSI : return f 0 ;
rank: 329
score: 98.79680524553571
patch: f 1 *= fx ; }
rank: 329
score: 98.64714499080883
patch: break ; case REGULA _ FALSI : / *= 0 . $NUMBER$ ;
rank: 329
score: 98.60145399305556
patch: break ; ; / / * break ;
rank: 329
score: 98.55483572823661
patch: if ( ; break ; }
rank: 329
score: 98.5304931640625
patch: break ; break ; if / ? break ;
rank: 329
score: 98.49832589285714
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + method ; }
rank: 330
score: 98.84386393229167
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ;
rank: 330
score: 98.80734252929688
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( ) ; } break ;
rank: 330
score: 98.789794921875
patch: x 0 throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 330
score: 98.64714499080883
patch: break ; case REGULA _ FALSI : f 0 = x 0 ;
rank: 330
score: 98.6003646850586
patch: break ; ; try { break ;
rank: 330
score: 98.55464311079545
patch: break ; default : { break ; } } }
rank: 330
score: 98.53004964192708
patch: break ; break ; break ; break ; break ; }
rank: 330
score: 98.49724469866071
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; default :
rank: 331
score: 98.84375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ;
rank: 331
score: 98.80722527754934
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( )
rank: 331
score: 98.79578575721153
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; default :
rank: 331
score: 98.67100016276042
patch: } else { break ; break ; }
rank: 331
score: 98.64711216517857
patch: break ; case REGULA _ FALSI : f 0 *=
rank: 331
score: 98.59964752197266
patch: try { break ; } break ;
rank: 331
score: 98.52959442138672
patch: break ; break ; if ; return
rank: 331
score: 98.49714799360795
patch: break . 0 : f 0 = x 1 ;
rank: 332
score: 98.84366005345395
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = false ; }
rank: 332
score: 98.80709228515624
patch: return x 1 ; case LEFT _ SIDE :
rank: 332
score: 98.79509735107422
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : $STRING$ ;
rank: 332
score: 98.78841458834134
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( f
rank: 332
score: 98.67053900824652
patch: break break ; } catch break ; }
rank: 332
score: 98.64661516462054
patch: { Fast CaMeL Math . abs ( f 1 + fx ) ;
rank: 332
score: 98.59953090122768
patch: break ; } break ; ;
rank: 332
score: 98.55420860877403
patch: break ; default : System . exit ( 0 ) ; }
rank: 332
score: 98.52935180664062
patch: break ; if ; break ; ; break ;
rank: 332
score: 98.49709065755208
patch: break . 1 : f 0 = break . $NUMBER$ ;
rank: 333
score: 98.84302775065105
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ;
rank: 333
score: 98.80699744591347
patch: break ; case REGULA _ FALSI : * /
rank: 333
score: 98.79430389404297
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x ;
rank: 333
score: 98.78782435825893
patch: inverted = ! f 1 ;
rank: 333
score: 98.67052459716797
patch: return ; * break ; } }
rank: 333
score: 98.64561552159927
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 = x 1 ;
rank: 333
score: 98.59908294677734
patch: break { break ; * break ;
rank: 333
score: 98.55377197265625
patch: break ; default : System . err ;
rank: 333
score: 98.52881469726563
patch: break ; break ; if ; break ; else
rank: 333
score: 98.49684361049107
patch: break ; > 0 . 0 : f 0 = x 1 ;
rank: 334
score: 98.79427337646484
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 334
score: 98.67012023925781
patch: } break ; return break ; }
rank: 334
score: 98.64469088040866
patch: break ; case REGULA _ FALSI : continue ;
rank: 334
score: 98.59884643554688
patch: for break ; break ;
rank: 334
score: 98.55368041992188
patch: break ; No CaMeL Such CaMeL Method CaMeL Exception break ;
rank: 334
score: 98.52815551757813
patch: break ; break ; } / if break ;
rank: 335
score: 98.84203162560097
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; }
rank: 335
score: 98.79411764705883
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 335
score: 98.6697998046875
patch: break ; break ; } } if break ; }
rank: 335
score: 98.64460100446429
patch: case REGULA _ FALSI : if ( inverted ) {
rank: 335
score: 98.59836251395089
patch: } / * * break ;
rank: 335
score: 98.5532559481534
patch: break ; default : f 0 . append ; }
rank: 335
score: 98.52756569602273
patch: break ; break ; break ; return ; break ;
rank: 335
score: 98.49608612060547
patch: break ; default : f 1 :
rank: 336
score: 98.84189740349265
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 ;
rank: 336
score: 98.80610874720982
patch: final double atol = compute CaMeL Objective CaMeL Value ( ) ;
rank: 336
score: 98.79384068080357
patch: inverted = x 1 ; }
rank: 336
score: 98.6697265625
patch: } if break ;
rank: 336
score: 98.64420572916667
patch: break ; case REGULA _ FALSI : / 0 *= 0 . $NUMBER$ ;
rank: 336
score: 98.59809705946181
patch: break ; break ; super . break ;
rank: 336
score: 98.52670288085938
patch: break ; break ; while ; return break ;
rank: 336
score: 98.49555315290179
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + name ) ;
rank: 337
score: 98.84177652994792
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ;
rank: 337
score: 98.80586381392045
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ;
rank: 337
score: 98.79370727539063
patch: if ( fx == 0 . 0 ) {
rank: 337
score: 98.78714328342014
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Min ( ) ) ;
rank: 337
score: 98.66919623480902
patch: return 0 . ; } break ; else
rank: 337
score: 98.64418538411458
patch: break ; case BELOW _ SIDE : return x 1 ;
rank: 337
score: 98.59793526785714
patch: break ; ; * * ;
rank: 337
score: 98.55296912560097
patch: break ; default : System . out . ; System . ;
rank: 337
score: 98.52637736002605
patch: break ; break ; return
rank: 337
score: 98.49485270182292
patch: break . 1 : f 0 = break . 1 ;
rank: 338
score: 98.84172257133152
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 338
score: 98.80562097886029
patch: ftol = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 338
score: 98.79344831194196
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL
rank: 338
score: 98.6689453125
patch: break break ; } } } break ; }
rank: 338
score: 98.6438232421875
patch: exception . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 338
score: 98.52560424804688
patch: break ; if ; break ; throw
rank: 338
score: 98.49473876953125
patch: throw new Unsupported CaMeL Operation CaMeL Exception ; }
rank: 339
score: 98.841630859375
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ;
rank: 339
score: 98.79299926757812
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break }
rank: 339
score: 98.78666381835937
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ; }
rank: 339
score: 98.66862487792969
patch: return break ; else break ; }
rank: 339
score: 98.643603515625
patch: e . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 339
score: 98.59638129340277
patch: } break ; ; / / / /
rank: 339
score: 98.55250549316406
patch: break ; default ; } ; }
rank: 339
score: 98.52552625868056
patch: break ; break ; / / break ;
rank: 339
score: 98.49445134943181
patch: return Integer . parse CaMeL Int ( x 1 ;
rank: 340
score: 98.84076397235577
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ;
rank: 340
score: 98.80560857599431
patch: f 0 *= ( f 1 + fx ) ;
rank: 340
score: 98.79297746930804
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . x ) ;
rank: 340
score: 98.66754913330078
patch: break ; else if ; } }
rank: 340
score: 98.64269147600446
patch: continue ; case PEGASUS : return x 1 ; }
rank: 340
score: 98.59619140625
patch: break ; ; * ;
rank: 340
score: 98.55220336914063
patch: break ; > 0 . 0 : break ;
rank: 340
score: 98.52531602647569
patch: break ; break ; break ; ; }
rank: 340
score: 98.49373372395833
patch: break . $NUMBER$ : f 0 = x 1 ; }
rank: 341
score: 98.84070502387152
patch: f 0 = x 0 . $NUMBER$ ;
rank: 341
score: 98.80552842881944
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 1 , x 0 ) ;
rank: 341
score: 98.78582763671875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ; } }
rank: 341
score: 98.66741265190973
patch: } break ; } } } break ;
rank: 341
score: 98.64259338378906
patch: case REGULA _ FALSI : x 0 *= 0 . $NUMBER$ ;
rank: 341
score: 98.5959701538086
patch: break ; break ; * * /
rank: 341
score: 98.55133056640625
patch: break ; default : break ; ;
rank: 341
score: 98.5243408203125
patch: if ; break ; break ; return break ;
rank: 341
score: 98.49350210336539
patch: throw new Runtime CaMeL Exception ( $STRING$ + method ) ; }
rank: 342
score: 98.84009552001953
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 342
score: 98.79131401909723
patch: f 0 *= x 1 . $NUMBER$ ;
rank: 342
score: 98.66731770833333
patch: break break ; } else
rank: 342
score: 98.64207240513393
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . break ;
rank: 342
score: 98.59546661376953
patch: break ; ; / / ; /
rank: 342
score: 98.55069986979167
patch: break ; default : f 0 = x ; } }
rank: 342
score: 98.52309841579861
patch: break ; if break ; ; break ;
rank: 342
score: 98.49346923828125
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ;
rank: 343
score: 98.83979936079545
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 343
score: 98.80486188616071
patch: compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 343
score: 98.79037655101104
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + $STRING$ ) ;
rank: 343
score: 98.66719193892045
patch: break ; break ; } } } return break ;
rank: 343
score: 98.64206167367789
patch: tmp = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 343
score: 98.59507921006944
patch: break ; * * * break ; /
rank: 343
score: 98.54962627704327
patch: break ; default : System . exit ( $STRING$ ) ; }
rank: 343
score: 98.52305908203125
patch: break ; break ; break ; ; / /
rank: 343
score: 98.49296739366319
patch: break ; default : return ) ; }
rank: 344
score: 98.80479079026442
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ , ) ;
rank: 344
score: 98.6670150756836
patch: return break ; return break ; }
rank: 344
score: 98.6419677734375
patch: break ; case REGULA _ FALSI : / {
rank: 344
score: 98.5947494506836
patch: break ; ; * * / /
rank: 344
score: 98.5492655436198
patch: break ; default : System . break ; } ; }
rank: 344
score: 98.5228983561198
patch: break ; break ; if ; return break ; break ;
rank: 344
score: 98.49259643554687
patch: break ; default : return 1 . ; }
rank: 345
score: 98.83946814903847
patch: x 0 = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 345
score: 98.8047344501202
patch: return x 0 ; case REGULA _ FALSI :
rank: 345
score: 98.66673278808594
patch: return 0 . 0 ; } else
rank: 345
score: 98.59467424665179
patch: break = break ; break ;
rank: 345
score: 98.54913799579327
patch: break ; default : f 0 . break - 1 ; }
rank: 345
score: 98.52267795138889
patch: break ; break ; if ; / ;
rank: 345
score: 98.49241420200893
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ) ;
rank: 346
score: 98.80467936197917
patch: final double ftol = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 346
score: 98.66667938232422
patch: break ; else if ; break ;
rank: 346
score: 98.64154052734375
patch: continue ; case PEGASUS : f 0 *= 0 . 1 ;
rank: 346
score: 98.59454345703125
patch: break ; * * * = break ;
rank: 346
score: 98.54881795247395
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ break ;
rank: 346
score: 98.522412109375
patch: break ; break ; break ; break ; try
rank: 346
score: 98.49212646484375
patch: break ; default : throw break ;
rank: 347
score: 98.80459594726562
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) {
rank: 347
score: 98.7894756610577
patch: throw new Math CaMeL Internal CaMeL Error ( - 1 ) ;
rank: 347
score: 98.78482216282895
patch: break ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; }
rank: 347
score: 98.52239312065973
patch: break ; break ; ; break ; /
rank: 347
score: 98.49181019176136
patch: break ; default : this . break ; } }
rank: 348
score: 98.83650207519531
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; * /
rank: 348
score: 98.80404897836539
patch: case PEGASUS : case PEGASUS :
rank: 348
score: 98.7893954190341
patch: throw new Math CaMeL Internal CaMeL Error ( ) .
rank: 348
score: 98.7843505859375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method + ) ;
rank: 348
score: 98.64007568359375
patch: ; Fast CaMeL Math . abs ( f 1 ) ;
rank: 348
score: 98.59436798095703
patch: } break ; break ; ; ;
rank: 348
score: 98.52214050292969
patch: if ; break ; if break ;
rank: 348
score: 98.49055698939732
patch: break ; equals = true ;
rank: 349
score: 98.83565063476563
patch: switch ( Fast CaMeL Math . abs ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) )
rank: 349
score: 98.80404663085938
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; default
rank: 349
score: 98.78921508789062
patch: throw new Math CaMeL Internal CaMeL Error ( null ) ;
rank: 349
score: 98.78422995174633
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ;
rank: 349
score: 98.66636827256944
patch: return break ; } } break ; else
rank: 349
score: 98.64003092447916
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 349
score: 98.59371948242188
patch: break ; out { break ; }
rank: 349
score: 98.54725477430556
patch: b 0 . x 1 = ; }
rank: 349
score: 98.5221176147461
patch: break ; break ; break ; =
rank: 349
score: 98.48983425564236
patch: break ; default : return 0 . ;
rank: 350
score: 98.83548990885417
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ;
rank: 350
score: 98.80387369791667
patch: else f 0 *= 0 . 0 ;
rank: 350
score: 98.78907993861607
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / $NUMBER$ ) ;
rank: 350
score: 98.78392028808594
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 + $STRING$ ;
rank: 350
score: 98.66560194227431
patch: return 0 . value ; break ; else
rank: 350
score: 98.63927350725446
patch: return x 1 . $NUMBER$ ;
rank: 350
score: 98.59347098214286
patch: } break ; for break ;
rank: 350
score: 98.54674421037946
patch: f 0 = x ; }
rank: 350
score: 98.52184186662946
patch: break ; ; break ; /
rank: 350
score: 98.48968505859375
patch: break . 0 : f 0 = break . 1 ;
rank: 351
score: 98.83511465567129
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 351
score: 98.80351257324219
patch: break ; case ILLINOIS : f 0 *= 0 . 0 ;
rank: 351
score: 98.78888260690789
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ; } }
rank: 351
score: 98.7832095497533
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + $STRING$ ;
rank: 351
score: 98.6653823852539
patch: return * * break ; break ;
rank: 351
score: 98.6392333984375
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 351
score: 98.59342651367187
patch: return * break ;
rank: 351
score: 98.52163696289062
patch: if ; break ;
rank: 351
score: 98.4895528157552
patch: break . $NUMBER$ = x 1 ; break . $NUMBER$ ;
rank: 352
score: 98.83507690429687
patch: f 0 += 0 . $NUMBER$ ; break ;
rank: 352
score: 98.78319498697917
patch: break ; case PEGASUS : f 0 += f 1 ;
rank: 352
score: 98.66448974609375
patch: return 0 . 0 ; } } if ;
rank: 352
score: 98.63920593261719
patch: break ; case REGULA _ FALSI : return x 0 ; }
rank: 352
score: 98.5910415649414
patch: break ; ; if break ; ;
rank: 352
score: 98.5445556640625
patch: break ; No CaMeL Such CaMeL Method CaMeL Error ( ;
rank: 352
score: 98.52142333984375
patch: break ; return ; { break ;
rank: 352
score: 98.48819308810764
patch: break . 0 : f 0 = ;
rank: 353
score: 98.83504486083984
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( f 0 ) ;
rank: 353
score: 98.80252779447116
patch: case PEGASUS : f 0 *= f 0 ;
rank: 353
score: 98.7869873046875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; } } }
rank: 353
score: 98.78059525923295
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) {
rank: 353
score: 98.66409737723214
patch: break ; while break ; }
rank: 353
score: 98.63885904947917
patch: case PEGASUS : f 0 *= 0 . $NUMBER$ ; }
rank: 353
score: 98.59056854248047
patch: break ; * / / break ;
rank: 353
score: 98.54432983398438
patch: f 0 = x 1 - break ; }
rank: 353
score: 98.5205307006836
patch: break ; break ; / break ;
rank: 353
score: 98.48788888113839
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ;
rank: 354
score: 98.834736328125
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 354
score: 98.80237755408653
patch: throw new Math CaMeL Internal CaMeL Error ( $NUMBER$ ) ; }
rank: 354
score: 98.78619063527961
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) 1 ) ;
rank: 354
score: 98.78048706054688
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( f 1 ) ) ;
rank: 354
score: 98.6640116373698
patch: return 0 ; } }
rank: 354
score: 98.63883463541667
patch: exception . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 354
score: 98.59026336669922
patch: } break ; break ; / ;
rank: 354
score: 98.54425518329327
patch: b 1 = Double . parse CaMeL Double ( ; } }
rank: 354
score: 98.52030029296876
patch: break ; break ; if break ; if ;
rank: 355
score: 98.83467371323529
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 355
score: 98.80236235119048
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ) ;
rank: 355
score: 98.7804816750919
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + ) ; }
rank: 355
score: 98.66336669921876
patch: break ; } } } break ; break ;
rank: 355
score: 98.63864135742188
patch: int fx = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 355
score: 98.59007263183594
patch: break ; * break ; ; ;
rank: 355
score: 98.54420979817708
patch: throw new Illegal CaMeL Argument CaMeL Exception ( break ; }
rank: 355
score: 98.52025604248047
patch: break ; break ; break ; start
rank: 356
score: 98.83406205610795
patch: switch ( Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) )
rank: 356
score: 98.80189344618056
patch: f 0 *= - 0 . $NUMBER$ ;
rank: 356
score: 98.78561401367188
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / }
rank: 356
score: 98.78047943115234
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 1 ) ; break ;
rank: 356
score: 98.6633071899414
patch: break ; * if break ; }
rank: 356
score: 98.63862827845982
patch: continue ; case REGULA _ FALSI : / / :
rank: 356
score: 98.58950805664062
patch: break ; / finally { break ;
rank: 356
score: 98.54409790039062
patch: break ; default : f 0 . close ( ; }
rank: 356
score: 98.52005615234376
patch: break ; break ; / / / / /
rank: 356
score: 98.48750443892045
patch: break ; case ; ; case ; : break ;
rank: 357
score: 98.8331298828125
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 357
score: 98.80187377929687
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this ) ) ;
rank: 357
score: 98.78547937729779
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 , x ] ) ;
rank: 357
score: 98.78037958559783
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 357
score: 98.66287994384766
patch: break ; } if ; } }
rank: 357
score: 98.63814290364583
patch: break ; case REGULA _ FALSI : return x 1 :
rank: 357
score: 98.58941650390625
patch: } break ; while break ;
rank: 357
score: 98.5438983623798
patch: break ; default : f 0 . double CaMeL Value ; }
rank: 357
score: 98.51949055989583
patch: break ; break ; break ; if ; break ; /
rank: 357
score: 98.4853515625
patch: break ; default : f 1 = x ;
rank: 358
score: 98.833056640625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ;
rank: 358
score: 98.78523254394531
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x ;
rank: 358
score: 98.77999877929688
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ; }
rank: 358
score: 98.6622314453125
patch: break ; } } else if ;
rank: 358
score: 98.63802337646484
patch: continue ; case REGULA _ FALSI : *= 0 . $NUMBER$ ;
rank: 358
score: 98.588623046875
patch: break ; / / * / /
rank: 358
score: 98.54335530598958
patch: break ; case ; default : f 0 = ; }
rank: 358
score: 98.51889038085938
patch: break ; break ; if ; void
rank: 358
score: 98.48526436941964
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ; }
rank: 359
score: 98.83225504557292
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } }
rank: 359
score: 98.80172390407986
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ) ;
rank: 359
score: 98.78510284423828
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( )
rank: 359
score: 98.77948961759868
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) + $STRING$ ;
rank: 359
score: 98.661865234375
patch: return ; * break ; }
rank: 359
score: 98.63800920758929
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( true ) ;
rank: 359
score: 98.58855523003473
patch: } break ; break ; while break ;
rank: 359
score: 98.54324340820312
patch: break ; } / * break ;
rank: 359
score: 98.5184814453125
patch: break ; break ; break ; return / ;
rank: 359
score: 98.48453463040866
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ +
rank: 360
score: 98.80058458116319
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( ) ; } break ;
rank: 360
score: 98.77882385253906
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . format ( ) ) ;
rank: 360
score: 98.66148681640625
patch: break break ; } else return break ; }
rank: 360
score: 98.63786315917969
patch: continue ; case REGULA _ FALSI : if ( inverted ) {
rank: 360
score: 98.58793334960937
patch: break = break ;
rank: 360
score: 98.54261271158855
patch: z 0 = ; }
rank: 361
score: 98.83163597470238
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ) ;
rank: 361
score: 98.80015055338542
patch: f 1 *= f 0 . 0 ;
rank: 361
score: 98.77818080357143
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ; }
rank: 361
score: 98.66086251395089
patch: break break ; } else {
rank: 361
score: 98.58734130859375
patch: break ; ; super . break ;
rank: 361
score: 98.54205791766827
patch: break ; default : f 0 . x 1 = ; }
rank: 361
score: 98.5177978515625
patch: break ; break ; if ; / / ;
rank: 361
score: 98.48213704427083
patch: break . $NUMBER$ = break . $NUMBER$ ;
rank: 362
score: 98.78386579241071
patch: f 0 ; throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 362
score: 98.66079275948661
patch: return break ; } else {
rank: 362
score: 98.6370849609375
patch: tmp 0 *= 0 . $NUMBER$ ;
rank: 362
score: 98.5873031616211
patch: break ; * if break ; ;
rank: 362
score: 98.51668701171874
patch: break ; break ; if ; ++ break ;
rank: 362
score: 98.48158569335938
patch: sb . append ( $STRING$ ) ; } }
rank: 363
score: 98.7832275390625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + fx + ) ;
rank: 363
score: 98.77772216796875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( f 1 ) ) ;
rank: 363
score: 98.6365966796875
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . switch ( method ) {
rank: 363
score: 98.5871810913086
patch: break ; ; - * break ;
rank: 363
score: 98.54143676757812
patch: break ; default ; break ; } } }
rank: 363
score: 98.51665649414062
patch: break ; break ; return ; if break ;
rank: 363
score: 98.480712890625
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + break ) ;
rank: 364
score: 98.79913330078125
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 364
score: 98.7830810546875
patch: f 1 *= f 0 . x 1 ;
rank: 364
score: 98.77692119891827
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; break ;
rank: 364
score: 98.6600830078125
patch: break ; } } } else return break ;
rank: 364
score: 98.63628680889423
patch: result = Fast CaMeL Math . abs ( f 1 ) ;
rank: 364
score: 98.58624267578125
patch: break ; * ; break ;
rank: 364
score: 98.54093424479167
patch: break ; default : System . break ; } } }
rank: 364
score: 98.51632351345486
patch: break ; break ; else break ; ;
rank: 364
score: 98.48057338169643
patch: throw new Runtime CaMeL Exception ( $STRING$ + name + $STRING$ ) ;
rank: 365
score: 98.83072916666667
patch: throw new Math CaMeL Internal CaMeL Error ( + get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 365
score: 98.79910982572116
patch: throw new new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 365
score: 98.77681692023026
patch: return f 1 ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 365
score: 98.65992567274306
patch: return 0 . break ; break ; else
rank: 365
score: 98.63567645733173
patch: it . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 365
score: 98.586181640625
patch: break ; ; super . break ; ;
rank: 365
score: 98.54021661931819
patch: break ; default : f 0 += ; } }
rank: 365
score: 98.51606889204545
patch: break ; break ; break ; / / / /
rank: 365
score: 98.48024495442708
patch: return break ; default : break ; }
rank: 366
score: 98.79840087890625
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Class ( ) ) ;
rank: 366
score: 98.7827899639423
patch: throw new Math CaMeL Internal CaMeL Error ( 0 ) ; }
rank: 366
score: 98.7763671875
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 366
score: 98.65982818603516
patch: return 0 . break ; } }
rank: 366
score: 98.6355842141544
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Min ( ) ) ;
rank: 366
score: 98.58591037326389
patch: return break ; break ; * break ;
rank: 366
score: 98.53961181640625
patch: break ; default : ; ; } }
rank: 366
score: 98.51565551757812
patch: break ; int break ; break ;
rank: 367
score: 98.8302589699074
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 367
score: 98.7755485983456
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Min ( ) ;
rank: 367
score: 98.65958658854167
patch: break ; } else {
rank: 367
score: 98.63495279947917
patch: state = Fast CaMeL Math . abs ( f 1 + fx ) ;
rank: 367
score: 98.58577473958333
patch: break ; ; / / / / /
rank: 367
score: 98.5393954190341
patch: b 0 . to CaMeL String ( ) ; ;
rank: 367
score: 98.51498074001736
patch: break ; } ; break ; break ;
rank: 367
score: 98.4800313313802
patch: break ; > 0 . $NUMBER$ = x 1 ; }
rank: 368
score: 98.78193495008681
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 368
score: 98.7752352627841
patch: fx = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 368
score: 98.65946197509766
patch: return start ; } } break ;
rank: 368
score: 98.63459123883929
patch: case REGULA _ FALSI : f 0 *= 0 ;
rank: 368
score: 98.5855484008789
patch: break ; / ; if break ;
rank: 368
score: 98.53894914899554
patch: f 0 = ; } ;
rank: 368
score: 98.5147216796875
patch: break ; break ; if ; if ; /
rank: 368
score: 98.47986711774554
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + ;
rank: 369
score: 98.829814453125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ;
rank: 369
score: 98.78165690104167
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 ) ; }
rank: 369
score: 98.77520751953125
patch: f 0 *= f 1 ; inverted = ! inverted ;
rank: 369
score: 98.659423828125
patch: break ; } finally { break ; }
rank: 369
score: 98.633984375
patch: state . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 369
score: 98.51437813895089
patch: break ; break ; else ;
rank: 369
score: 98.47869873046875
patch: return Integer . parse CaMeL Int ( x 1 ) ;
rank: 370
score: 98.82972627527573
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ; }
rank: 370
score: 98.79595947265625
patch: break ; case PEGASUS : f 0 *= 1 ;
rank: 370
score: 98.78143310546875
patch: f 1 *= compute CaMeL Objective CaMeL Value ( f 1 ) ;
rank: 370
score: 98.77468872070312
patch: break ; case PEGASUS : f 0 ;
rank: 370
score: 98.65939670138889
patch: break ; } } break ; } }
rank: 370
score: 98.63395472935268
patch: break ; case REGULA _ FALSI : return x ;
rank: 370
score: 98.58469063895089
patch: return break ; for break ;
rank: 370
score: 98.5373026529948
patch: break ; default : f 0 = ; ; } }
rank: 370
score: 98.51433648003473
patch: break ; break ; ; if ; ;
rank: 370
score: 98.47850690569196
patch: throw new Illegal CaMeL Argument CaMeL Exception ; default : break ; }
rank: 371
score: 98.82747025923295
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 371
score: 98.7956771850586
patch: if ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) == 0 ) {
rank: 371
score: 98.65906524658203
patch: } else return break ; break ;
rank: 371
score: 98.63357747395834
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) *= 0 . 0 ;
rank: 371
score: 98.58419036865234
patch: break ; / ; * break ;
rank: 371
score: 98.53726196289062
patch: if ( ; else f 0 . ; }
rank: 371
score: 98.47821044921875
patch: ; break ; default : break ; }
rank: 372
score: 98.82568359375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ) ;
rank: 372
score: 98.79551866319444
patch: this . f 0 = f 1 ;
rank: 372
score: 98.78093719482422
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . length ;
rank: 372
score: 98.77437551398026
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 372
score: 98.65885416666667
patch: } if break ; break ; break ;
rank: 372
score: 98.63289642333984
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . if ( inverted ) {
rank: 372
score: 98.58406575520833
patch: break ; ; / / / break ;
rank: 372
score: 98.5372314453125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + break ;
rank: 372
score: 98.51369222005208
patch: break ; break ; if return break ;
rank: 372
score: 98.47794966264205
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ +
rank: 373
score: 98.82502577039931
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = true ;
rank: 373
score: 98.7951892671131
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( )
rank: 373
score: 98.77388080797698
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 373
score: 98.65885162353516
patch: return break ; } } * /
rank: 373
score: 98.583251953125
patch: break ; ; catch break ; ;
rank: 373
score: 98.53722034801136
patch: break ; default : f 0 = x 0 ;
rank: 373
score: 98.51313781738281
patch: break ; break ; -- break ;
rank: 373
score: 98.47794886997768
patch: / * break ; default :
rank: 374
score: 98.82481892903645
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + ) ;
rank: 374
score: 98.79515245225694
patch: case PEGASUS : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 374
score: 98.63250732421875
patch: continue ;
rank: 374
score: 98.58324178059895
patch: break ; * / {
rank: 374
score: 98.53680889423077
patch: break ; default : f 0 . set CaMeL Length ; }
rank: 374
score: 98.51307373046875
patch: break ; if ; = / / / /
rank: 374
score: 98.47762357271634
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; default :
rank: 375
score: 98.82477883731617
patch: inverted = ! inverted : get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 375
score: 98.78014322916667
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 ) ; }
rank: 375
score: 98.65829903738839
patch: return break ; break ; else
rank: 375
score: 98.6324462890625
patch: log . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 375
score: 98.58299255371094
patch: return break ; ; return break ;
rank: 375
score: 98.5367431640625
patch: if ( f 0 < 0 . 0 ) break ;
rank: 375
score: 98.51163736979167
patch: break ; break ; break ; if ; break ; ;
rank: 375
score: 98.47667439778645
patch: break . 0 : f 0 = x 1 ; }
rank: 376
score: 98.82448323567708
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; / /
rank: 376
score: 98.79419962565105
patch: break ; new Math CaMeL Internal CaMeL Error ( ) ;
rank: 376
score: 98.77303274054276
patch: return x 0 . 0 ; case PEGASUS : f 0 *= f 1 ;
rank: 376
score: 98.65823800223214
patch: } if break ; } }
rank: 376
score: 98.6318359375
patch: System . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 376
score: 98.58167266845703
patch: } break ; ; * * /
rank: 376
score: 98.53640512319711
patch: break ; default : f 0 . ; } break ; }
rank: 376
score: 98.4762674967448
patch: break ; default : f 1 += x 1 ; }
rank: 377
score: 98.82342888327206
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 377
score: 98.79411315917969
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 377
score: 98.65804617745536
patch: return 0 . value ; }
rank: 377
score: 98.6317889873798
patch: continue ; case PEGASUS : return x 0 ;
rank: 377
score: 98.5814208984375
patch: break ; value = break ;
rank: 377
score: 98.5357666015625
patch: break ; * break * /
rank: 377
score: 98.51114230685764
patch: break ; if ; ; return break ;
rank: 377
score: 98.47573852539062
patch: break ; default : return 0 . 0 ; } }
rank: 378
score: 98.79352770353618
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 0 . $NUMBER$ ) ;
rank: 378
score: 98.65782165527344
patch: return * break ; } break ;
rank: 378
score: 98.63164411272321
patch: break ; case REGULA _ FALSI : f 0 ;
rank: 378
score: 98.58107503255208
patch: break ; ; ; *
rank: 378
score: 98.53554280598958
patch: break ; default : f 0 = f 0 ; }
rank: 378
score: 98.51107788085938
patch: break ; break ; break ; for break ;
rank: 378
score: 98.4755108173077
patch: break ; > 0 . 0 = 1 . 0 ; }
rank: 379
score: 98.82286487926136
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 379
score: 98.7933349609375
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$
rank: 379
score: 98.77806854248047
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . trim ( ) ) ;
rank: 379
score: 98.65696207682292
patch: break ; * break ; } } }
rank: 379
score: 98.63068498883929
patch: case REGULA _ FALSI : *= 0 . $NUMBER$ ;
rank: 379
score: 98.58101399739583
patch: return break ; break ; ; break ;
rank: 379
score: 98.53525612571023
patch: break ; default : f 0 = 0 ; }
rank: 379
score: 98.51029205322266
patch: break ; break ; ; / {
rank: 379
score: 98.47496448863636
patch: break ; default : return 1 . $NUMBER$ ; }
rank: 380
score: 98.82269287109375
patch: return x 0 . $NUMBER$ ; } }
rank: 380
score: 98.79324106069711
patch: break throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 380
score: 98.7779541015625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ 1 ;
rank: 380
score: 98.65593719482422
patch: break ; break ; ; } }
rank: 380
score: 98.6305908203125
patch: break ; case REGULA _ FALSI : / / / :
rank: 380
score: 98.58076695033482
patch: break ; this . break ;
rank: 380
score: 98.53433837890626
patch: b 0 . to CaMeL String ( ) ;
rank: 380
score: 98.51007634943181
patch: break ; break ; if ; break ; / /
rank: 380
score: 98.47493802584134
patch: break ; default : throw new Error ( $STRING$ ) ; }
rank: 381
score: 98.79319852941177
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 1 ;
rank: 381
score: 98.77765655517578
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL
rank: 381
score: 98.7718505859375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + $STRING$ ) ;
rank: 381
score: 98.65585327148438
patch: return start ; } break ; }
rank: 381
score: 98.63031005859375
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; case ANY _ SIDE :
rank: 381
score: 98.58033752441406
patch: break ; else { break ; }
rank: 381
score: 98.5341796875
patch: break ; ; default : throw new ; }
rank: 381
score: 98.509521484375
patch: break ; break ; if ; break ; if ;
rank: 381
score: 98.47484130859375
patch: break ; default : f 1 . break ;
rank: 382
score: 98.7930419921875
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ;
rank: 382
score: 98.65548706054688
patch: return break ; } else return break ; }
rank: 382
score: 98.63008626302083
patch: break ; case REGULA _ FALSI : / / / }
rank: 382
score: 98.58011300223214
patch: break { break ; / ;
rank: 382
score: 98.5335360440341
patch: break ; default : f 1 ++ ; } }
rank: 382
score: 98.50947570800781
patch: break ; break ; System ; ;
rank: 382
score: 98.47455388849431
patch: return 1 . 0 ; default : break ; }
rank: 383
score: 98.7926737467448
patch: break ; this . f 1 *= 0 . $NUMBER$ ;
rank: 383
score: 98.77735246930804
patch: * / throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 383
score: 98.77134794347427
patch: break ; case REGULA _ FALSI : f 0 += f 1 ;
rank: 383
score: 98.65548095703124
patch: break ; * * * break ; } }
rank: 383
score: 98.629736328125
patch: break ; case REGULA _ FALSI : / / / /
rank: 383
score: 98.57976616753473
patch: break ; / / / System . ;
rank: 383
score: 98.53273518880208
patch: break ; default : System . out . ; ; ;
rank: 383
score: 98.50923665364583
patch: break ; break ; if ; if ; return break ;
rank: 383
score: 98.47449747721355
patch: } catch ( No CaMeL Such CaMeL Method CaMeL Exception ;
rank: 384
score: 98.82163649338942
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; / /
rank: 384
score: 98.79183197021484
patch: return x 1 - x 0 ;
rank: 384
score: 98.77130126953125
patch: break ; default : return x 1 ;
rank: 384
score: 98.65543038504464
patch: break ; false ; } }
rank: 384
score: 98.629638671875
patch: break ; case Fast CaMeL Math . LEFT _ SIDE :
rank: 384
score: 98.57965850830078
patch: break break ; / * break ;
rank: 384
score: 98.53263716264205
patch: break ; default : throw new break ; } }
rank: 384
score: 98.47394268329327
patch: default : throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 385
score: 98.821484375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } }
rank: 385
score: 98.77668980189732
patch: f 0 = compute CaMeL Objective CaMeL Value ( f 1 ) ;
rank: 385
score: 98.655029296875
patch: return break ; this . break ;
rank: 385
score: 98.62961050180289
patch: continue ; case REGULA _ FALSI : / :
rank: 385
score: 98.57964409722223
patch: return break ; ; ; System . ;
rank: 385
score: 98.53255521334134
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } }
rank: 385
score: 98.50870361328126
patch: break ; break ; if ; ? break ;
rank: 385
score: 98.47235979352679
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; / *
rank: 386
score: 98.82095336914062
patch: verify CaMeL Bracketing ( x 0 , x 0 ) ;
rank: 386
score: 98.79114708533653
patch: case PEGASUS : return x 0 . 0 ;
rank: 386
score: 98.77664184570312
patch: f 1 = fx ;
rank: 386
score: 98.65476481119792
patch: return start ; } }
rank: 386
score: 98.62922807173295
patch: if ( f 1 * fx < 0 ) {
rank: 386
score: 98.57941545758929
patch: break ; ; / break ;
rank: 386
score: 98.50790066189236
patch: break ; break ; if break ; else
rank: 386
score: 98.47196960449219
patch: break ; default : } break ;
rank: 387
score: 98.79070081208882
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) {
rank: 387
score: 98.77650669642857
patch: f 1 = get CaMeL Absolute CaMeL Accuracy ( ) ; break ;
rank: 387
score: 98.76994323730469
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 387
score: 98.65455211292614
patch: break ; break ; } super . break ; }
rank: 387
score: 98.62921549479167
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x ;
rank: 387
score: 98.57794867621527
patch: break ; / / * / break ;
rank: 387
score: 98.53118896484375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ break ;
rank: 387
score: 98.50775756835938
patch: break ; break ; if / return break ;
rank: 387
score: 98.47196451822917
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 388
score: 98.8203125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ;
rank: 388
score: 98.77634974888393
patch: x 1 = x 1 ;
rank: 388
score: 98.76989164806548
patch: return x 0 . 1 ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 388
score: 98.65430297851563
patch: break ; } break ; super . break ;
rank: 388
score: 98.62904663085938
patch: case REGULA _ FALSI : {
rank: 388
score: 98.57785034179688
patch: break ; ; / / * ;
rank: 388
score: 98.5310528094952
patch: break ; default : f 0 = x 1 ; ; }
rank: 388
score: 98.50705788352273
patch: break ; break ; if ; ; return break ;
rank: 388
score: 98.47100830078125
patch: break . $NUMBER$ ; case ; case ; :
rank: 389
score: 98.819580078125
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 389
score: 98.78969504616477
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . to CaMeL String ( ) ) ;
rank: 389
score: 98.76953125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) ) ; }
rank: 389
score: 98.65346272786458
patch: } if ( break ;
rank: 389
score: 98.62865339006696
patch: continue ; case REGULA _ FALSI : / / {
rank: 389
score: 98.57766384548611
patch: throw new Interrupted CaMeL Exception ( ) ;
rank: 389
score: 98.50687662760417
patch: break ; break ; break ; try /
rank: 389
score: 98.47097778320312
patch: break . $NUMBER$ = x 1 ;
rank: 390
score: 98.81922104779412
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 390
score: 98.77541678292411
patch: f 1 = get CaMeL Relative CaMeL Accuracy ( ) ; break ;
rank: 390
score: 98.76844787597656
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL
rank: 390
score: 98.65340423583984
patch: break ; else return 0 ; }
rank: 390
score: 98.62855631510416
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ;
rank: 390
score: 98.57757568359375
patch: break ; ; / while break ;
rank: 390
score: 98.52951882102273
patch: break ; default : f 0 . ++ ; }
rank: 390
score: 98.50628662109375
patch: break ; break ; if ; break ; if break ;
rank: 390
score: 98.47055392795139
patch: throw new Assertion CaMeL Error ( $STRING$ ;
rank: 391
score: 98.81906362680289
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ;
rank: 391
score: 98.78917846679687
patch: f 0 *= 1 . 0 ; break ;
rank: 391
score: 98.77525111607143
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL
rank: 391
score: 98.6531982421875
patch: break ; break ; } finally
rank: 391
score: 98.5775146484375
patch: break ; ; } if break ;
rank: 391
score: 98.52848307291667
patch: break ; default : throw ; } ;
rank: 391
score: 98.50626627604167
patch: break ; break ; break ; if ; if break ;
rank: 391
score: 98.47006225585938
patch: if ( break . get CaMeL Type ( ) == ;
rank: 392
score: 98.8184765625
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 392
score: 98.78896077473958
patch: case PEGASUS : f 0 *= 0 ;
rank: 392
score: 98.77525024414062
patch: f 1 *= f 0 . $NUMBER$ ; }
rank: 392
score: 98.76749913832721
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 392
score: 98.65299224853516
patch: return 0 . value ; break ;
rank: 392
score: 98.62838309151786
patch: break ; case REGULA _ FALSI : / / ?
rank: 392
score: 98.57750592912946
patch: break ; out . break ;
rank: 392
score: 98.52783203125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ break ) ;
rank: 392
score: 98.50579833984375
patch: break ; break ; if / ; break ;
rank: 392
score: 98.469970703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; break ;
rank: 393
score: 98.77507188585069
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 ) ) ;
rank: 393
score: 98.65200466579861
patch: return 0 . length ; } else {
rank: 393
score: 98.6281967163086
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ , method ) ;
rank: 393
score: 98.57728576660156
patch: } else { break ; break ;
rank: 393
score: 98.52767944335938
patch: b 0 = x 0 ; }
rank: 393
score: 98.50568389892578
patch: break ; break ; set / {
rank: 393
score: 98.46920776367188
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 394
score: 98.81808471679688
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ) ;
rank: 394
score: 98.78853934151786
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , $STRING$ ) ;
rank: 394
score: 98.77507188585069
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 394
score: 98.76695556640625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , ) ; }
rank: 394
score: 98.65199788411458
patch: break ; } else return 0 . ;
rank: 394
score: 98.62801106770833
patch: strbuff = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 394
score: 98.57691786024306
patch: break break ; / else { break ;
rank: 394
score: 98.52763061523437
patch: break ; default : f 1 += ; }
rank: 394
score: 98.5053939819336
patch: break ; break ; ; return ;
rank: 394
score: 98.46917724609375
patch: break ; default : throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 395
score: 98.81794176603618
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } return x 1 ;
rank: 395
score: 98.78834117542614
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) ) ;
rank: 395
score: 98.774951171875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + value 1 ) ;
rank: 395
score: 98.65148247612848
patch: break ; } break ; } } }
rank: 395
score: 98.62798665364583
patch: break ; case REGULA _ FALSI : / / / ;
rank: 395
score: 98.576904296875
patch: break ; ; ; / / /
rank: 395
score: 98.52760667067308
patch: b 0 = Double . parse CaMeL Double ( break ) ;
rank: 395
score: 98.50467936197917
patch: break ; break ; try / break ;
rank: 395
score: 98.46869768415179
patch: z 0 = x $NUMBER$ ;
rank: 396
score: 98.81740500710227
patch: f 0 *= f 0 . $NUMBER$ ; break ;
rank: 396
score: 98.78822835286458
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . false ) ;
rank: 396
score: 98.6510009765625
patch: break ; } } } return ;
rank: 396
score: 98.57663399832589
patch: break { break ; ; ;
rank: 396
score: 98.5267842610677
patch: break ; ; default : System . err . ; }
rank: 396
score: 98.50448947482639
patch: break ; ; return break ; break ;
rank: 396
score: 98.46792941623264
patch: break . $NUMBER$ = x 1 ; }
rank: 397
score: 98.81724330357143
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Absolute CaMeL Accuracy ( ) ) ;
rank: 397
score: 98.78809311810662
patch: break ; case PEGASUS : f 0 *= f 1 / fx ;
rank: 397
score: 98.65055541992187
patch: break ; } } if break ; break ;
rank: 397
score: 98.6260627297794
patch: continue ; case REGULA _ FALSI : / / return x 1 ;
rank: 397
score: 98.57650756835938
patch: break ; * return break ; ;
rank: 397
score: 98.5267822265625
patch: break false ; default : break false ; }
rank: 397
score: 98.50431685014205
patch: break ; break ; break ; if break ; ;
rank: 397
score: 98.46790907118056
patch: throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 398
score: 98.78724670410156
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . Integer ( ) ) ;
rank: 398
score: 98.77444458007812
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + ) ;
rank: 398
score: 98.76615397135417
patch: throw new Math CaMeL Internal CaMeL Error ( ) . get CaMeL Message ( $STRING$ ) ;
rank: 398
score: 98.65022277832031
patch: break ; } } else { }
rank: 398
score: 98.62600272042411
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 398
score: 98.57623291015625
patch: return break ; break ; *
rank: 398
score: 98.5262451171875
patch: break ; ; default :
rank: 398
score: 98.50429280598958
patch: break ; break ; if ; break ; break ; }
rank: 398
score: 98.46785191127232
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 399
score: 98.81532981178977
patch: break ; case REGULA _ FALSI ;
rank: 399
score: 98.77383422851562
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; } }
rank: 399
score: 98.76566808363971
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; }
rank: 399
score: 98.65012428977273
patch: return 0 . 0 ; else return break ; }
rank: 399
score: 98.62582194010416
patch: state . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 399
score: 98.57524108886719
patch: break ; / * break ; /
rank: 399
score: 98.52590942382812
patch: if ( break ) { ; }
rank: 399
score: 98.50413004557292
patch: break ; break ; break ; if / { break ;
rank: 399
score: 98.4678485576923
patch: throw new Runtime CaMeL Exception ( $STRING$ + name ) ; }
rank: 400
score: 98.78683471679688
patch: case PEGASUS : f 0 *= 0 . $NUMBER$ ; break ;
rank: 400
score: 98.7729022686298
patch: throw new Math CaMeL Internal CaMeL Error ( x 1 ) ;
rank: 400
score: 98.64990234375
patch: return break ; super . break ; }
rank: 400
score: 98.62579815204327
patch: continue ; case REGULA _ FALSI : / ;
rank: 400
score: 98.57449340820312
patch: break ; ; * return break ;
rank: 400
score: 98.52484600360577
patch: break ; default : f 0 = x 0 ; } }
rank: 400
score: 98.50401475694444
patch: break ; break ; start ; break ;
rank: 400
score: 98.46775124289773
patch: default : throw new Illegal CaMeL State CaMeL Exception ;
rank: 401
score: 98.8140007467831
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return inverted ;
rank: 401
score: 98.78665161132812
patch: f 0 *= $NUMBER$ ;
rank: 401
score: 98.77255249023438
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + ) ;
rank: 401
score: 98.64974975585938
patch: break ; break ; } else if break ;
rank: 401
score: 98.57373918805804
patch: } break ; ( break ;
rank: 401
score: 98.50349934895833
patch: break ; break ; / { break ;
rank: 401
score: 98.46675618489583
patch: break ; default : break ; } break ; default :
rank: 402
score: 98.81390671502976
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 402
score: 98.78655450994319
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + ) ;
rank: 402
score: 98.76483917236328
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get ( ) ) ;
rank: 402
score: 98.64940049913194
patch: } break ; } else return break ;
rank: 402
score: 98.62574259440105
patch: case REGULA _ FALSI : / / ;
rank: 402
score: 98.57372174944196
patch: break ; / ; / /
rank: 402
score: 98.52445845170455
patch: break ; default : break ; } ; } ;
rank: 402
score: 98.50335138494319
patch: break ; break ; ; if break ; break ;
rank: 402
score: 98.46651204427083
patch: if ( break != 0 . 0 )
rank: 403
score: 98.81314453125
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ;
rank: 403
score: 98.78641967773437
patch: return x 1 ; case RIGHT _ SIDE :
rank: 403
score: 98.77220153808594
patch: f 1 ] = x 1 ;
rank: 403
score: 98.76460535386029
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 , x ] ) ;
rank: 403
score: 98.64910888671875
patch: } break ; } return break ;
rank: 403
score: 98.624755859375
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } break ;
rank: 403
score: 98.57371303013393
patch: } finally { break ; }
rank: 403
score: 98.52259657118056
patch: break ; default : f 0 . }
rank: 403
score: 98.50321821732955
patch: break ; break ; if ; * / break ;
rank: 403
score: 98.4659893329327
patch: throw new Illegal CaMeL State CaMeL Exception ( this ) ; }
rank: 404
score: 98.81306537828948
patch: throw new Math CaMeL Internal CaMeL Error ( System . get CaMeL Message ( ) ) ; }
rank: 404
score: 98.64881727430556
patch: break ; else return break ; } }
rank: 404
score: 98.52232008713942
patch: break ; default : f 0 . x 0 = ; }
rank: 404
score: 98.50321655273437
patch: break ; break ; if / * break /
rank: 404
score: 98.46550641741071
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; } break ;
rank: 405
score: 98.81297718394886
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL
rank: 405
score: 98.78600202287946
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; break ;
rank: 405
score: 98.77153463924633
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 + $STRING$ ) ;
rank: 405
score: 98.76324821920956
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 405
score: 98.64860395951705
patch: break ; break ; } } } break ; }
rank: 405
score: 98.6246109008789
patch: break ; case REGULA _ FALSI : return 0 . $NUMBER$ ;
rank: 405
score: 98.57346888950893
patch: break break ; ; * /
rank: 405
score: 98.5222500887784
patch: break ; default : throw new ; } } ;
rank: 405
score: 98.50313023158482
patch: break ; break ; throw ;
rank: 405
score: 98.46535818917411
patch: width = x 1 ; }
rank: 406
score: 98.81218155570652
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 406
score: 98.6482177734375
patch: return break ; } break ; break ; }
rank: 406
score: 98.57298278808594
patch: break ; * return * break ;
rank: 406
score: 98.52208362926136
patch: break ; default : break ; } break ; }
rank: 406
score: 98.5029805501302
patch: break ; break ; if ; { break ; break ;
rank: 406
score: 98.46365356445312
patch: this . break ; default : return - 1 ; }
rank: 407
score: 98.76192220052083
patch: inverted = f 1 ;
rank: 407
score: 98.648193359375
patch: break ; } else throw break ; }
rank: 407
score: 98.6239013671875
patch: break ; case REGULA _ FALSI : return x 1 ; } }
rank: 407
score: 98.57294379340277
patch: break ; / * * = break ;
rank: 407
score: 98.52197265625
patch: if ( f 0 . index CaMeL Of ( ; break ;
rank: 407
score: 98.50286865234375
patch: break ; break ; ; if ; / /
rank: 407
score: 98.46286010742188
patch: default : throw new Illegal CaMeL State CaMeL Exception ( $STRING$
rank: 408
score: 98.81137084960938
patch: return x 0 . x 0 ;
rank: 408
score: 98.78557990579044
patch: double fx = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 408
score: 98.76152886284723
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Max ( ) ) ;
rank: 408
score: 98.64792702414773
patch: break ; } } if break ; break ; }
rank: 408
score: 98.62380981445312
patch: continue ; case PEGASUS : f 0 = 0 . $NUMBER$ ;
rank: 408
score: 98.57275390625
patch: } * break ; }
rank: 408
score: 98.52127075195312
patch: break ; default ; } * /
rank: 408
score: 98.46283428485577
patch: break ; default : return 0 . 0 ; } break ;
rank: 409
score: 98.81134765625
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; }
rank: 409
score: 98.7854362936581
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ;
rank: 409
score: 98.7704833984375
patch: throw new Math CaMeL Internal CaMeL Error ( ANY _ SIDE ) ; }
rank: 409
score: 98.761376953125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . double CaMeL Value ( ) ;
rank: 409
score: 98.57266998291016
patch: break ; ; ; { break ;
rank: 409
score: 98.52113850911458
patch: b 0 . ; break ; default :
rank: 409
score: 98.50232696533203
patch: break ; if break ; if ;
rank: 409
score: 98.46282958984375
patch: break . 0 : f 1 = break . 0 ;
rank: 410
score: 98.81057504507211
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 410
score: 98.77011447482639
patch: f 1 *= x 0 . x ;
rank: 410
score: 98.64629255022321
patch: break ; } else } }
rank: 410
score: 98.6233642578125
patch: continue ; case REGULA _ FALSI : f 0 -- ;
rank: 410
score: 98.52099609375
patch: break ; default : f 0 . ; break ;
rank: 410
score: 98.5019775390625
patch: break ; if ; / / / / /
rank: 410
score: 98.46251220703125
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$
rank: 411
score: 98.81046875
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 411
score: 98.78449358258929
patch: final double fx 0 = compute CaMeL Objective CaMeL Value ( ) ;
rank: 411
score: 98.76999240451389
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get ( ) ;
rank: 411
score: 98.76073540581598
patch: break ; case REGULA _ FALSI : verify CaMeL Bracketing ( ) ; }
rank: 411
score: 98.6461181640625
patch: break ; break ; } } if ;
rank: 411
score: 98.62303924560547
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 411
score: 98.57222202845982
patch: break break ; / / /
rank: 411
score: 98.5205547626202
patch: break ; default : System . out . break ; } }
rank: 411
score: 98.50161404079861
patch: if ; break ; if ; break ;
rank: 411
score: 98.46223588423295
patch: break ; > 0 . $NUMBER$ = x $NUMBER$ ;
rank: 412
score: 98.810302734375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } break ;
rank: 412
score: 98.7691650390625
patch: f 0 *= f 0 ; }
rank: 412
score: 98.76054382324219
patch: throw new Math CaMeL Internal CaMeL Error ( get CaMeL Min ( ) ) ;
rank: 412
score: 98.64572143554688
patch: break ; } else return 0 ;
rank: 412
score: 98.62249348958333
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( this , ) ;
rank: 412
score: 98.57186126708984
patch: break break ; ; if break ;
rank: 412
score: 98.52052659254808
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } }
rank: 412
score: 98.50154113769531
patch: break ; break ; while ; {
rank: 413
score: 98.81027401194854
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 413
score: 98.75960286458333
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ; }
rank: 413
score: 98.64533342633929
patch: return 0 . break ; }
rank: 413
score: 98.62234061104911
patch: ! Fast CaMeL Math . abs ( f 1 * fx ) ;
rank: 413
score: 98.57180786132812
patch: break ; ; * int break ;
rank: 413
score: 98.52042330228366
patch: break ; default : System . out . ; ; break ;
rank: 413
score: 98.50084686279297
patch: break ; if ; break ; int
rank: 413
score: 98.46137237548828
patch: throw new Error ( $STRING$ ) ;
rank: 414
score: 98.80990234375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; / /
rank: 414
score: 98.7835205078125
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 414
score: 98.75932874177632
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( $STRING$ ) ) ;
rank: 414
score: 98.6452407836914
patch: } if ; break ; } }
rank: 414
score: 98.6223373413086
patch: logger . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 414
score: 98.57170274522569
patch: return break ; ; ; * break ;
rank: 414
score: 98.52030436197917
patch: break ; default : f 0 . break - ; }
rank: 414
score: 98.50034790039062
patch: break ; if ; break ; * break ;
rank: 414
score: 98.46070692274306
patch: break ; default : return $NUMBER$ ; }
rank: 415
score: 98.8096211751302
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ;
rank: 415
score: 98.78351702008929
patch: throw new Math CaMeL Internal CaMeL Error ( this + $STRING$ ) ;
rank: 415
score: 98.76841517857143
patch: x 1 *= f 1 ;
rank: 415
score: 98.75898822985198
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ; break ;
rank: 415
score: 98.64510769314236
patch: } else { break ; } } }
rank: 415
score: 98.62224934895833
patch: break ; case REGULA _ FALSI : / / default :
rank: 415
score: 98.57157897949219
patch: break ; try { break ; ;
rank: 415
score: 98.51993502103366
patch: if ( break > 0 . 0 ) { break ; }
rank: 415
score: 98.46033732096355
patch: break . x 0 = break . x 1 ; }
rank: 416
score: 98.80945763221153
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ;
rank: 416
score: 98.76776994977679
patch: f 0 = compute CaMeL Objective CaMeL Value ( f 0 ) ;
rank: 416
score: 98.64498291015624
patch: return 0 . break ; } } break ;
rank: 416
score: 98.62224786931819
patch: break ; case PEGASUS : try {
rank: 416
score: 98.57054646809895
patch: } / * break ;
rank: 416
score: 98.51978302001953
patch: break ; ; default : ; }
rank: 416
score: 98.499072265625
patch: break ; if ; break ; else break ;
rank: 417
score: 98.80928861177884
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } break ;
rank: 417
score: 98.64424133300781
patch: return break ; while break ; }
rank: 417
score: 98.62215423583984
patch: if ( Fast CaMeL Math . abs ( f 1 ) <= 0 ) {
rank: 417
score: 98.56960042317708
patch: break ; while break ;
rank: 417
score: 98.49903021918402
patch: break ; break ; ; if ; /
rank: 417
score: 98.45972789417614
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 418
score: 98.8089453125
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ;
rank: 418
score: 98.76741536458333
patch: f 1 ] *= 0 . $NUMBER$ ;
rank: 418
score: 98.75796363467262
patch: return x 1 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 418
score: 98.64365641276042
patch: break ; * * / break ; }
rank: 418
score: 98.6219482421875
patch: context . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 418
score: 98.56952776227679
patch: break ; break ; default ;
rank: 418
score: 98.51907348632812
patch: break ; default : break ; } } } * /
rank: 418
score: 98.49877251519098
patch: break ; if ; break ; return ;
rank: 418
score: 98.45945046164773
patch: break . x 0 = break . x 0 ;
rank: 419
score: 98.808427734375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ) ;
rank: 419
score: 98.7818359375
patch: break ; case PEGASUS : f 1 *= f 1 ;
rank: 419
score: 98.76729910714286
patch: switch ( Fast CaMeL Math . abs ( f 1 ) ) {
rank: 419
score: 98.75791422526042
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) ; }
rank: 419
score: 98.64344787597656
patch: break ; null * break ; }
rank: 419
score: 98.62190755208333
patch: / Fast CaMeL Math . abs ( f 1 ) ;
rank: 419
score: 98.56878662109375
patch: break ; break ; } / *
rank: 419
score: 98.51899065290179
patch: break ; case ; } }
rank: 419
score: 98.49857177734376
patch: break ; break ; break ; ( break ;
rank: 419
score: 98.4591397372159
patch: if ( break ) { this . break ; }
rank: 420
score: 98.80824631911058
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } } }
rank: 420
score: 98.76668054917279
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ - f 1 ) ;
rank: 420
score: 98.7569515830592
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( $STRING$ ) ) ;
rank: 420
score: 98.64333767361111
patch: break ; } } if ; break ;
rank: 420
score: 98.62087115119485
patch: break ; case REGULA _ FALSI : inverted = ! inverted ; }
rank: 420
score: 98.56870524088542
patch: } * / break ;
rank: 420
score: 98.51888020833333
patch: break ; default : f 0 = ; } break ;
rank: 420
score: 98.49734497070312
patch: break ; break ; / / *
rank: 421
score: 98.80741743607955
patch: inverted += compute CaMeL Objective CaMeL Value ( ) ;
rank: 421
score: 98.78147194602273
patch: Math . abs ( f 1 * fx ) ;
rank: 421
score: 98.76569010416667
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ; }
rank: 421
score: 98.75679154829545
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 421
score: 98.64323120117187
patch: return 0 . $NUMBER$ ; } } break ;
rank: 421
score: 98.62051595052084
patch: continue ; case PEGASUS : start *= 0 . $NUMBER$ ;
rank: 421
score: 98.56859588623047
patch: break ; break ; out ; ;
rank: 421
score: 98.5184795673077
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; } } ;
rank: 421
score: 98.4968017578125
patch: break ; break ; if ; = / /
rank: 421
score: 98.4584228515625
patch: break ; default : f 1 -- ; }
rank: 422
score: 98.75629625822368
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) + $STRING$ ;
rank: 422
score: 98.64268798828125
patch: break ; break ; break ; } else {
rank: 422
score: 98.62013462611607
patch: { Fast CaMeL Math . abs ( f 1 * fx ) ;
rank: 422
score: 98.51801006610577
patch: break ; default : return Double . value CaMeL Of ( ;
rank: 422
score: 98.49630126953124
patch: break ; if ; = / * break ;
rank: 422
score: 98.45794208233173
patch: switch ( method . get CaMeL Type ( ) ; default :
rank: 423
score: 98.80670720880681
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL
rank: 423
score: 98.78074815538194
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + value ) ;
rank: 423
score: 98.76561063878677
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 423
score: 98.75597426470588
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ; break ;
rank: 423
score: 98.62010904947917
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 423
score: 98.5684585571289
patch: break ; break ; out ; *
rank: 423
score: 98.51760629507211
patch: break ; case ; No CaMeL Such CaMeL Method CaMeL Error :
rank: 423
score: 98.45792643229167
patch: break ; > 0 . $NUMBER$ ; }
rank: 424
score: 98.80668131510417
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ;
rank: 424
score: 98.78063092912946
patch: return x = f 1 ;
rank: 424
score: 98.76560345818015
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 424
score: 98.64222208658855
patch: return break ; } else
rank: 424
score: 98.619970703125
patch: ! Fast CaMeL Math . abs ( f 1 ) <= ftol ;
rank: 424
score: 98.56817626953125
patch: if break ; break ; if break ;
rank: 424
score: 98.49600558810764
patch: break ; break ; if ; ; ;
rank: 424
score: 98.4575439453125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 425
score: 98.80658249627976
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 425
score: 98.64193725585938
patch: break break ; } } } if break ;
rank: 425
score: 98.61984252929688
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( + method ) ; }
rank: 425
score: 98.56796264648438
patch: break ; * try { break ;
rank: 425
score: 98.49578302556819
patch: break ; break ; System ; if ; break ;
rank: 425
score: 98.45732964409723
patch: this . break ; default : break ;
rank: 426
score: 98.780224609375
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this , $STRING$ ) ;
rank: 426
score: 98.76515197753906
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . x 1 + ) ;
rank: 426
score: 98.64159393310547
patch: break ; } return x 1 ;
rank: 426
score: 98.5677261352539
patch: break ; / / while break ;
rank: 426
score: 98.51498413085938
patch: break ; default : throw new ; ; }
rank: 426
score: 98.49552154541016
patch: break ; break ; break ; do
rank: 426
score: 98.45466752485795
patch: if ( break ) return 0 . 0 ; }
rank: 427
score: 98.64139811197917
patch: return 0 . 0 ; break ; ;
rank: 427
score: 98.61978352864584
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 427
score: 98.56678602430556
patch: break ; ; super . break ; }
rank: 427
score: 98.51497192382813
patch: break ; default : throw ; } } ;
rank: 427
score: 98.49550170898438
patch: break ; break ; break ; break ; {
rank: 427
score: 98.45436604817708
patch: break ; > 0 . $NUMBER$ = x $NUMBER$ ; }
rank: 428
score: 98.805498046875
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ;
rank: 428
score: 98.77994384765626
patch: final double fx 0 *= 0 . 0 ;
rank: 428
score: 98.76512654622395
patch: f 1 *= 0 . $NUMBER$ ; return x 1 ;
rank: 428
score: 98.75438096788194
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) ; }
rank: 428
score: 98.64122314453125
patch: return 0 . 0 ; } else if ;
rank: 428
score: 98.61975969587054
patch: return Fast CaMeL Math . abs ( f 1 + fx ) ;
rank: 428
score: 98.56665802001953
patch: break ; break ; case ; value
rank: 428
score: 98.51474609375
patch: b 0 = Math . min ( ; }
rank: 428
score: 98.49538845486111
patch: break ; break ; return break ; /
rank: 428
score: 98.45418701171874
patch: if ( f 1 < 0 . $NUMBER$ )
rank: 429
score: 98.80542931189903
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 429
score: 98.77963256835938
patch: throw new Math CaMeL Internal CaMeL Error ( , ) ;
rank: 429
score: 98.76496233258929
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ;
rank: 429
score: 98.75174560546876
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + ) ; }
rank: 429
score: 98.64101155598958
patch: } } break ; }
rank: 429
score: 98.6197509765625
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . break ; }
rank: 429
score: 98.56631905691964
patch: } * * return break ;
rank: 429
score: 98.51432800292969
patch: break ; default ; ; } ;
rank: 429
score: 98.49507141113281
patch: break ; break ; if ; break
rank: 429
score: 98.45396423339844
patch: break ; default : return false ;
rank: 430
score: 98.80535333806819
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 430
score: 98.75150981702302
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ; }
rank: 430
score: 98.61928147536058
patch: break ; case ANY _ SIDE : if ( inverted ) {
rank: 430
score: 98.56554497612848
patch: break ; ; / * if break ;
rank: 430
score: 98.5140380859375
patch: break ; default : System . ; ; } }
rank: 430
score: 98.49500868055556
patch: break ; break ; } if ; /
rank: 430
score: 98.45341491699219
patch: break . 0 = x 1 ;
rank: 431
score: 98.80520762567934
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 431
score: 98.77947443181819
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Message ( ) ) ;
rank: 431
score: 98.76473236083984
patch: f 1 ; return x 1 ;
rank: 431
score: 98.640625
patch: return 0 . break ; break ; }
rank: 431
score: 98.61915893554688
patch: case REGULA _ FALSI : f
rank: 431
score: 98.56521606445312
patch: break ; * catch break ; ;
rank: 431
score: 98.49395751953125
patch: break ; break ; return ; / / /
rank: 431
score: 98.45314719460227
patch: break ; case ; case ; : case ; :
rank: 432
score: 98.80513139204545
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 432
score: 98.77937825520833
patch: break ; case PEGASUS : verify CaMeL Bracketing ( ) ;
rank: 432
score: 98.76455688476562
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . equals ( ) ) ;
rank: 432
score: 98.75022536057692
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 432
score: 98.64009094238281
patch: break break ; break ; } else
rank: 432
score: 98.51369406960227
patch: break ; > 0 . 0 . 0 : ;
rank: 432
score: 98.49359685724431
patch: break ; break ; if break ; } break ;
rank: 432
score: 98.45296223958333
patch: break ; > 0 . $NUMBER$ : f 1 = ;
rank: 433
score: 98.80509086277173
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ) ;
rank: 433
score: 98.74948120117188
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + $STRING$ ; }
rank: 433
score: 98.63972473144531
patch: break break ; } return break ;
rank: 433
score: 98.61888538707386
patch: case REGULA _ FALSI : / ;
rank: 433
score: 98.56461334228516
patch: break ; ; return break ; ;
rank: 433
score: 98.51364370492789
patch: break ; default : f 0 . append ( $STRING$ ; }
rank: 433
score: 98.49340142144098
patch: break ; break ; * / break ;
rank: 433
score: 98.45293719951923
patch: break ; > 0 . 0 = 0 . $NUMBER$ ; }
rank: 434
score: 98.77891710069444
patch: throw new Math CaMeL Internal CaMeL Error ( get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 434
score: 98.76434326171875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , ) ; }
rank: 434
score: 98.7491455078125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 434
score: 98.61886776194854
patch: break ; case REGULA _ FALSI : inverted *= 1 . $NUMBER$ ;
rank: 434
score: 98.56451416015625
patch: break ; ; / / int break ;
rank: 434
score: 98.51340895432692
patch: break ; default : { System . err . ; } }
rank: 434
score: 98.49333052201705
patch: break ; break ; if break ; ; break ;
rank: 434
score: 98.45237223307292
patch: return Integer . parse CaMeL Int ( x 0 ) ;
rank: 435
score: 98.8035888671875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 435
score: 98.7788330078125
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + ) ;
rank: 435
score: 98.76339382595486
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 435
score: 98.74887566817434
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 435
score: 98.63801574707031
patch: break ; } * * break ;
rank: 435
score: 98.56422424316406
patch: break break ; else { break ;
rank: 435
score: 98.51315307617188
patch: break ; default : throw break ; } }
rank: 435
score: 98.49313790457589
patch: break ; break ; continue ;
rank: 435
score: 98.45212026742789
patch: break ; default : f 0 = x 1 ; break ;
rank: 436
score: 98.77867974175348
patch: Math . abs ( x 1 ) ;
rank: 436
score: 98.74861225328948
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) , ) ;
rank: 436
score: 98.63774108886719
patch: if break ; break ; } }
rank: 436
score: 98.61810772235577
patch: tmp = Fast CaMeL Math . abs ( f 1 ) ;
rank: 436
score: 98.49298095703125
patch: break ; ; break ; ; break ;
rank: 436
score: 98.45118297230114
patch: break ; > 0 . 0 = 1 ; }
rank: 437
score: 98.80172729492188
patch: return x 0 . 0 ; }
rank: 437
score: 98.77859933035714
patch: try { throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 437
score: 98.63744354248047
patch: break break ; } } } else
rank: 437
score: 98.618017578125
patch: it . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 437
score: 98.56296212332589
patch: break ; * case ; /
rank: 437
score: 98.51201171875
patch: break ; default : f 0 -- ; }
rank: 437
score: 98.49254692925348
patch: break ; break ; int break / /
rank: 437
score: 98.45087224786931
patch: break ; case ; case ; : break ; }
rank: 438
score: 98.80125075120192
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; break ;
rank: 438
score: 98.77848677201705
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) ) ; }
rank: 438
score: 98.76260375976562
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . max ( ) ) ;
rank: 438
score: 98.63729519314236
patch: return 0 . length ; } } }
rank: 438
score: 98.61752319335938
patch: table = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 438
score: 98.56185913085938
patch: break ; ; ; ; break ;
rank: 438
score: 98.51161702473958
patch: break ; > 0 . 0 . 0 = ; }
rank: 438
score: 98.49236382378473
patch: break ; break ; return ; / /
rank: 438
score: 98.45052396334134
patch: break ; default : f 1 = x 1 ; break ;
rank: 439
score: 98.80079287574405
patch: inverted = ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ) ;
rank: 439
score: 98.77794300426136
patch: throw new Math CaMeL Internal CaMeL Error ( System .
rank: 439
score: 98.76227569580078
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break }
rank: 439
score: 98.74830264136905
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , x 1 ) ;
rank: 439
score: 98.61749674479167
patch: this . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 439
score: 98.56179809570312
patch: break ; / / ; break ;
rank: 439
score: 98.51154242621527
patch: break ; default : ; ; } ;
rank: 439
score: 98.49229736328125
patch: break ; break ; if / ; / /
rank: 439
score: 98.44964599609375
patch: throw new Runtime CaMeL Exception ( $STRING$ , method ) ;
rank: 440
score: 98.77760716488487
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 440
score: 98.76215362548828
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 440
score: 98.7480236235119
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ; break ;
rank: 440
score: 98.63717990451389
patch: break ; } break ; } else {
rank: 440
score: 98.56178501674107
patch: break ; / / * ;
rank: 440
score: 98.51129150390625
patch: break ; default : return x 0 ;
rank: 440
score: 98.49219621930804
patch: break ; break ; start ;
rank: 440
score: 98.44962252103366
patch: sb . append ( $STRING$ ) . append ( $STRING$ ; }
rank: 441
score: 98.80001126802884
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; / /
rank: 441
score: 98.77714399857955
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Exception ( ) ) ;
rank: 441
score: 98.76197725183823
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ;
rank: 441
score: 98.63699001736111
patch: break ; } * * break ; }
rank: 441
score: 98.61713053385417
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 441
score: 98.56168038504464
patch: break ; / else break ;
rank: 441
score: 98.51122368706598
patch: break ; } default : break ; }
rank: 441
score: 98.49209594726562
patch: break ; if ; = / ;
rank: 442
score: 98.79991736778847
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 442
score: 98.77695534446023
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Exception ( ) ) ;
rank: 442
score: 98.76192016601563
patch: f 1 = get CaMeL Min ( ) ;
rank: 442
score: 98.74691162109374
patch: throw new Internal CaMeL Error ( ) ; }
rank: 442
score: 98.63669259207589
patch: } return break ; } }
rank: 442
score: 98.56143188476562
patch: break ; / / { break ;
rank: 442
score: 98.51114595853366
patch: break ; if ( f 0 . compare CaMeL To ( ;
rank: 442
score: 98.49144829644098
patch: break ; break ; if if break ;
rank: 442
score: 98.44771728515624
patch: break ; default : if ( break ) {
rank: 443
score: 98.79968843005952
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL
rank: 443
score: 98.76182338169643
patch: f 1 += x 1 ;
rank: 443
score: 98.74609375
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 443
score: 98.6366299715909
patch: break ; } else { break ; } } }
rank: 443
score: 98.61609649658203
patch: break ; case REGULA _ FALSI : / return x 1 ;
rank: 443
score: 98.56074741908482
patch: } break ; break ; /
rank: 443
score: 98.50987752278645
patch: b 0 . ; break ; default : break ; }
rank: 443
score: 98.4912997159091
patch: break ; break ; break ; return break ; }
rank: 443
score: 98.44712477463942
patch: break . to CaMeL String ( ) ; break ; default :
rank: 444
score: 98.77644486860795
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Cause ( ) ) ;
rank: 444
score: 98.63612670898438
patch: return break ; } } } if break ;
rank: 444
score: 98.6160888671875
patch: continue ; case REGULA _ FALSI : inverted *= 0 . $NUMBER$ ;
rank: 444
score: 98.5604248046875
patch: } try { break ;
rank: 444
score: 98.5097186748798
patch: f 1 = Double . parse CaMeL Double ( ; } }
rank: 444
score: 98.49125840928819
patch: break ; } break ; if break ;
rank: 444
score: 98.44640435112848
patch: break ; } case ; case ; :
rank: 445
score: 98.7992412860577
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 445
score: 98.76137408088235
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ ) ;
rank: 445
score: 98.745859375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; }
rank: 445
score: 98.63591766357422
patch: break ; f 0 = break ;
rank: 445
score: 98.6158203125
patch: log . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 445
score: 98.55995008680556
patch: break ; break ; case ; break ;
rank: 445
score: 98.50957489013672
patch: z 0 = x 1 ; }
rank: 445
score: 98.49111328125
patch: break ; break ; / / { break ;
rank: 445
score: 98.44629516601563
patch: break ; > 0 . 0 = ; }
rank: 446
score: 98.79923502604167
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ;
rank: 446
score: 98.77590110085227
patch: f 0 *= ( f 1 * fx ) ;
rank: 446
score: 98.63555297851562
patch: break ; } break ; break ; } }
rank: 446
score: 98.61550005744485
patch: exception . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 446
score: 98.55888148716518
patch: break ; * / / /
rank: 446
score: 98.50874837239583
patch: b 1 = ; }
rank: 446
score: 98.49093967013889
patch: break ; break ; break ; continue ;
rank: 446
score: 98.44588012695313
patch: break ; default : case ; case ; :
rank: 447
score: 98.7986996299342
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 447
score: 98.77576700846355
patch: break ; case PEGASUS : return fx ;
rank: 447
score: 98.76123725043402
patch: f 0 = x 1 . $NUMBER$ ;
rank: 447
score: 98.63535853794643
patch: break ; catch break ; }
rank: 447
score: 98.6153205422794
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 447
score: 98.55887179904514
patch: } break ; ; else { break ;
rank: 447
score: 98.50810546875
patch: f 0 = x $NUMBER$ - break ; }
rank: 447
score: 98.4908935546875
patch: break ; break ; if ; / / *
rank: 447
score: 98.4456035907452
patch: break ; case ; ; case ; : break ; default :
rank: 448
score: 98.79862467447917
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; if (
rank: 448
score: 98.77569580078125
patch: throw new Math CaMeL Internal CaMeL Error ( this . this . get CaMeL Exception ( ) ) ;
rank: 448
score: 98.76096017020089
patch: x 1 = f 1 ;
rank: 448
score: 98.7442562705592
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , $STRING$ ;
rank: 448
score: 98.63526916503906
patch: break ; } if break ; else
rank: 448
score: 98.61508178710938
patch: continue ; case REGULA _ FALSI : f 0 *= $NUMBER$ ;
rank: 448
score: 98.55825369698661
patch: } if false ; break ;
rank: 448
score: 98.50799560546875
patch: continue ; default : break ; } }
rank: 448
score: 98.49067518446181
patch: break ; break ; else ; break ;
rank: 449
score: 98.79743303571429
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 449
score: 98.77456868489584
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ 1 . 0 ) ;
rank: 449
score: 98.76021634615384
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / } }
rank: 449
score: 98.74374728732639
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ; break ;
rank: 449
score: 98.63517252604167
patch: return break ; } break ; } }
rank: 449
score: 98.61503092447917
patch: case REGULA _ FALSI : / * /
rank: 449
score: 98.5579833984375
patch: break break ; /
rank: 449
score: 98.50783128004808
patch: break ; default : System . err . ; continue ; }
rank: 449
score: 98.49041748046875
patch: break ; ; break ; if ;
rank: 449
score: 98.44504801432292
patch: break . $NUMBER$ = x $NUMBER$ ; break . $NUMBER$ ;
rank: 450
score: 98.79726155598958
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + ) ;
rank: 450
score: 98.76011439732143
patch: f 1 throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 450
score: 98.635009765625
patch: break ; } * * * /
rank: 450
score: 98.61490631103516
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } else {
rank: 450
score: 98.5572738647461
patch: break ; this . break ; ;
rank: 450
score: 98.50777493990384
patch: break ; default : System . out . ; throw ; }
rank: 451
score: 98.796806640625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; * /
rank: 451
score: 98.77452328330592
patch: final double rtol = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 451
score: 98.76006673177083
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + fx ) ; }
rank: 451
score: 98.74323473478618
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; } }
rank: 451
score: 98.63491482204861
patch: break ; * * * / } }
rank: 451
score: 98.61450913373162
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 = x 0 ;
rank: 451
score: 98.5560073852539
patch: return break ; ; ; / ;
rank: 451
score: 98.50774591619319
patch: break ; default : this . ; } ; }
rank: 451
score: 98.4901123046875
patch: break ; break ; if / / / / /
rank: 451
score: 98.44447835286458
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ;
rank: 452
score: 98.796689453125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ) ;
rank: 452
score: 98.77445983886719
patch: super . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ;
rank: 452
score: 98.6348876953125
patch: } else if break ; break ; }
rank: 452
score: 98.61445168887867
patch: if ( Fast CaMeL Math . abs ( x 1 ) <= ftol ) {
rank: 452
score: 98.55588107638889
patch: } break ; / else { break ;
rank: 452
score: 98.49007568359374
patch: break ; break ; } if ; / /
rank: 452
score: 98.44405423677884
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ , method ;
rank: 453
score: 98.7965087890625
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } }
rank: 453
score: 98.77391899956598
patch: { f 1 *= 0 . $NUMBER$ ;
rank: 453
score: 98.75941685267857
patch: throw new Math CaMeL Internal CaMeL Error ( f 1 ) ; }
rank: 453
score: 98.74149169921876
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( x 1 ) ) ;
rank: 453
score: 98.63469102647569
patch: break ; } } this . break ;
rank: 453
score: 98.61414292279412
patch: if ( Fast CaMeL Math . abs ( f 1 ) == ftol ) {
rank: 453
score: 98.55526297433036
patch: break ; ; * / ;
rank: 453
score: 98.5073954264323
patch: break ; default : f 0 . ; ; } }
rank: 453
score: 98.489990234375
patch: break ; { break ;
rank: 454
score: 98.77332153320313
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ;
rank: 454
score: 98.75894165039062
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 0 + ) ;
rank: 454
score: 98.74116654829545
patch: throw new Math CaMeL Internal CaMeL Error ( ) }
rank: 454
score: 98.63468715122768
patch: break ; } if ; }
rank: 454
score: 98.614013671875
patch: break ; case REGULA _ FALSI : / / / {
rank: 454
score: 98.55513000488281
patch: break ; ; 1 { break ;
rank: 454
score: 98.50738525390625
patch: return ; default : throw new ; }
rank: 454
score: 98.48946533203124
patch: break ; break ; return / * break ;
rank: 454
score: 98.44342719184027
patch: default : f 1 = break ; }
rank: 455
score: 98.79597981770833
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ) ;
rank: 455
score: 98.7585693359375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ) ; }
rank: 455
score: 98.63468170166016
patch: return break ; break ; else }
rank: 455
score: 98.61293381911058
patch: break ; case ANY _ SIDE : return x 1 ; }
rank: 455
score: 98.55417887369792
patch: if false ; break ;
rank: 455
score: 98.50733439127605
patch: if ( f 0 . compare CaMeL To ( ; }
rank: 455
score: 98.48895874023438
patch: break ; break ; if ; -- break ;
rank: 455
score: 98.44310913085937
patch: break ; case ; case ; : if ;
rank: 456
score: 98.79525390625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; * /
rank: 456
score: 98.77269222861842
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( )
rank: 456
score: 98.75855848524306
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Int ( ) ) ;
rank: 456
score: 98.63427734375
patch: break ; else break ; break ;
rank: 456
score: 98.61286163330078
patch: if ( fx < 0 ) {
rank: 456
score: 98.55385044642857
patch: try { break ; ; ;
rank: 456
score: 98.50686410757211
patch: throw new Illegal CaMeL State CaMeL Exception ( break , $STRING$ ;
rank: 456
score: 98.48895818536931
patch: break ; break ; if break ; else break ;
rank: 456
score: 98.44283040364583
patch: break . $NUMBER$ : f 0 = break . 1 ;
rank: 457
score: 98.7950927734375
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 457
score: 98.77250840928819
patch: throw new Math CaMeL Internal CaMeL Error ( Math . to CaMeL String ( ) ) ;
rank: 457
score: 98.74030095880681
patch: f 0 *= x 1 . $NUMBER$ ; break ;
rank: 457
score: 98.63380126953125
patch: break ; } } } } } break ;
rank: 457
score: 98.61263333834134
patch: int ftol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 457
score: 98.55347357855902
patch: break ; break ; ; * * /
rank: 457
score: 98.50631713867188
patch: break ; default : f 0 = ; ;
rank: 457
score: 98.48690185546874
patch: break ; break ; if / / / ;
rank: 457
score: 98.44247775607639
patch: break ; case ; case ; : {
rank: 458
score: 98.79501681857639
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ;
rank: 458
score: 98.77219525505515
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this + ) ;
rank: 458
score: 98.7574462890625
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 0 , x ] ) ;
rank: 458
score: 98.74002511160714
patch: return x 1 . 0 ; case REGULA _ FALSI : f 0 *= f 1 ;
rank: 458
score: 98.63374328613281
patch: break ; else throw break ; }
rank: 458
score: 98.6124626608456
patch: break ; case REGULA _ FALSI : f 0 *= x 0 ;
rank: 458
score: 98.55347357855902
patch: break ; * * / * break ;
rank: 458
score: 98.50600179036458
patch: break ; case ; :
rank: 458
score: 98.44225202287946
patch: z 1 = x 1 ;
rank: 459
score: 98.7949969951923
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ;
rank: 459
score: 98.77217371323529
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 459
score: 98.75740051269531
patch: f 0 *= fx ; break ;
rank: 459
score: 98.74000133167614
patch: f 0 = x 0 . $NUMBER$ ; break ;
rank: 459
score: 98.63334655761719
patch: return 0 . length - break ;
rank: 459
score: 98.61245727539062
patch: continue ; case PEGASUS : f 0 += 0 . $NUMBER$ ;
rank: 459
score: 98.5529556274414
patch: break ; int * * break ;
rank: 459
score: 98.50551147460938
patch: break ; default : break null ; } }
rank: 459
score: 98.48664008246527
patch: break ; break ; break ; } /
rank: 459
score: 98.44222412109374
patch: if ( break != 0 . 0 ) {
rank: 460
score: 98.77202758789062
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $NUMBER$ ) ) ;
rank: 460
score: 98.73988850911458
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Min ( ) ) ;
rank: 460
score: 98.63275701349431
patch: return break ; break ; } } break ; }
rank: 460
score: 98.61231282552083
patch: result = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 460
score: 98.55289713541667
patch: break ; * * * / break ;
rank: 460
score: 98.44184875488281
patch: z 0 = x $NUMBER$ ; }
rank: 461
score: 98.7718838778409
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , ) ;
rank: 461
score: 98.75715467664931
patch: f 1 *= 0 . x 1 ;
rank: 461
score: 98.63267822265625
patch: return 0 . 0 ; } else { }
rank: 461
score: 98.55253092447917
patch: break ; * if break ; break ;
rank: 461
score: 98.50513567243304
patch: f 1 = ; ; }
rank: 461
score: 98.48619927300348
patch: break ; break ; if ; ; /
rank: 461
score: 98.44144381009616
patch: break . $NUMBER$ : f 0 = break . $NUMBER$ ; }
rank: 462
score: 98.771240234375
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ,
rank: 462
score: 98.75712890625
patch: f 1 ; throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 462
score: 98.6325454711914
patch: return break ; } if break ;
rank: 462
score: 98.55197143554688
patch: } * * * break ; ;
rank: 462
score: 98.50478293678977
patch: break ; default : f 1 . ; } }
rank: 462
score: 98.486083984375
patch: break ; break ; return ; ;
rank: 462
score: 98.4412333170573
patch: break ; case ; case ; case ; : return ;
rank: 463
score: 98.79364691840277
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = true ;
rank: 463
score: 98.77094862196181
patch: this . f 0 *= f 1 ;
rank: 463
score: 98.75628255208333
patch: else { throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 463
score: 98.61102701822917
patch: break ; case PEGASUS : f 0 = x 1 ;
rank: 463
score: 98.55145263671875
patch: break ; ; case ; out ;
rank: 463
score: 98.50465611049107
patch: } * break ; default :
rank: 463
score: 98.48533630371094
patch: break ; break ; } / ;
rank: 463
score: 98.44116821289063
patch: break ; default : break ; default : }
rank: 464
score: 98.79353841145833
patch: switch ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) {
rank: 464
score: 98.77093505859375
patch: throw new Math CaMeL Internal CaMeL Error ( this . this . get CaMeL Class ( ) ) ;
rank: 464
score: 98.75606079101563
patch: f 1 *= x 0 . $NUMBER$ ; }
rank: 464
score: 98.7375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 0 ) ) ;
rank: 464
score: 98.6109619140625
patch: break ; case REGULA _ FALSI : f 0 *= fx ;
rank: 464
score: 98.55137634277344
patch: } break ; this . break ;
rank: 464
score: 98.5044937133789
patch: break ; ; default : break ;
rank: 464
score: 98.4847412109375
patch: break ; break ; if ; ! break ;
rank: 464
score: 98.44113393930289
patch: break . x 0 = break . x 1 ; default :
rank: 465
score: 98.79318576388889
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = false ;
rank: 465
score: 98.77088080512152
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + fx ) ;
rank: 465
score: 98.75600179036458
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( x 1 ) ) ;
rank: 465
score: 98.73733956473214
patch: break ; case REGULA _ FALSI : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 465
score: 98.6318359375
patch: break ; if break ; } }
rank: 465
score: 98.61094665527344
patch: continue ; case REGULA _ FALSI : case ANY _ SIDE :
rank: 465
score: 98.55031912667411
patch: return break ; ; * /
rank: 465
score: 98.50430297851562
patch: if ( ; break ; default : break ; } }
rank: 465
score: 98.48431396484375
patch: break ; break ; if / / ;
rank: 465
score: 98.43987482244319
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ )
rank: 466
score: 98.79294162326389
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ; }
rank: 466
score: 98.77080891927083
patch: case PEGASUS : f 0 *= f 1 ; break ;
rank: 466
score: 98.75588989257812
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 + $STRING$ ;
rank: 466
score: 98.73607113486842
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ; break ;
rank: 466
score: 98.63165283203125
patch: break ; break ; } * /
rank: 466
score: 98.6103156594669
patch: break ; case REGULA _ FALSI : 0 *= 0 . $NUMBER$ ;
rank: 466
score: 98.55017852783203
patch: } * break ; break ; /
rank: 466
score: 98.50420270647321
patch: b 0 = ; ; }
rank: 466
score: 98.48396606445313
patch: break ; break ; ( break ; break ;
rank: 466
score: 98.43974165482955
patch: break ; > 0 . 0 = $NUMBER$ ; }
rank: 467
score: 98.63145446777344
patch: } break ; } } else {
rank: 467
score: 98.61025565011161
patch: continue ; case REGULA _ FALSI : / / }
rank: 467
score: 98.55013699001736
patch: break ; ; * / * break ;
rank: 467
score: 98.50417751736111
patch: break ; default : { ; } }
rank: 467
score: 98.48352661132813
patch: break ; break ; for ; / / /
rank: 467
score: 98.43866436298077
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; default :
rank: 468
score: 98.79153603001645
patch: throw new Math CaMeL Internal CaMeL Error ( System . get CaMeL Message ( $STRING$ ) ) ;
rank: 468
score: 98.76995086669922
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; case LEFT _ SIDE :
rank: 468
score: 98.75532670454545
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ +
rank: 468
score: 98.73458158052884
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; break ;
rank: 468
score: 98.63143157958984
patch: } if ( break ; break ;
rank: 468
score: 98.60989379882812
patch: break ; case REGULA _ FALSI : return x 1 / }
rank: 468
score: 98.54989624023438
patch: break ; * * return break ;
rank: 468
score: 98.50417258522727
patch: break ; default : System . break ; } ;
rank: 468
score: 98.43849690755208
patch: break ; default : return 0 . 0 ; ; }
rank: 469
score: 98.7910220497533
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Min ( ) ) ;
rank: 469
score: 98.7698974609375
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . verify CaMeL Bracketing ( method ) ;
rank: 469
score: 98.75478228400735
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } } }
rank: 469
score: 98.73417583264802
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 ) ;
rank: 469
score: 98.6311264038086
patch: } } else { break ; }
rank: 469
score: 98.609619140625
patch: break ; case REGULA _ FALSI : switch ( allowed )
rank: 469
score: 98.54969787597656
patch: } break ; ; if break ;
rank: 469
score: 98.5025634765625
patch: break ; default : break ; } } break ; }
rank: 469
score: 98.48340521918402
patch: break ; break ; if ; = ;
rank: 469
score: 98.4381854717548
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 470
score: 98.79098992598684
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ; }
rank: 470
score: 98.769873046875
patch: break ; case REGULA _ FALSI : return x $NUMBER$ ;
rank: 470
score: 98.75474039713542
patch: verify CaMeL Bracketing ( x 0 , f 1 ) ;
rank: 470
score: 98.73335404829545
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; inverted = ! inverted ;
rank: 470
score: 98.63097034801136
patch: return 0 . 0 ; } else if break ;
rank: 470
score: 98.60955810546875
patch: case REGULA _ FALSI : f 0 -= 0 . $NUMBER$ ;
rank: 470
score: 98.54962158203125
patch: break ; ; ; * ; /
rank: 470
score: 98.50208282470703
patch: break ; ; case break ; }
rank: 470
score: 98.4833984375
patch: break ; break ; break ; = ;
rank: 470
score: 98.4377910907452
patch: break ; case ; case ; case ; : f 1 ;
rank: 471
score: 98.76983087713069
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) + ) ;
rank: 471
score: 98.63095431857639
patch: } if break ; } } break ;
rank: 471
score: 98.54854910714286
patch: break ; catch break ; ;
rank: 471
score: 98.50189208984375
patch: break ; case ; default ; }
rank: 471
score: 98.48333185369319
patch: break ; break ; if break ; break ; }
rank: 471
score: 98.43687855113636
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +
rank: 472
score: 98.79058159722223
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 472
score: 98.76970358455883
patch: throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , ) ;
rank: 472
score: 98.75386555989583
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + 1 ) ;
rank: 472
score: 98.73273315429688
patch: return x 1 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 472
score: 98.63092041015625
patch: break ; break ; } catch ;
rank: 472
score: 98.60833740234375
patch: result = x 1 ;
rank: 472
score: 98.54852294921875
patch: break break ; / ; /
rank: 472
score: 98.50180288461539
patch: break ; default : f 0 = x ; break ; }
rank: 472
score: 98.48158957741477
patch: break ; break ; if break ; / / /
rank: 473
score: 98.769384765625
patch: break ; case PEGASUS : }
rank: 473
score: 98.75364583333334
patch: throw new Math CaMeL Internal CaMeL Error ( ANY _ SIDE + ) ;
rank: 473
score: 98.73260176809211
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 , x 1 ) ;
rank: 473
score: 98.6307601928711
patch: return 0 ; } } } }
rank: 473
score: 98.6081314086914
patch: this . *= 0 . $NUMBER$ ;
rank: 473
score: 98.547607421875
patch: try { break ; ;
rank: 473
score: 98.50172008167614
patch: break ; default : f 0 . break ; ;
rank: 473
score: 98.48156127929687
patch: break ; break ; if ; * ; /
rank: 473
score: 98.43624173677884
patch: return Integer . parse CaMeL Int ( x 1 ) ; }
rank: 474
score: 98.790009765625
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; final
rank: 474
score: 98.76935577392578
patch: final double rtol = compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 474
score: 98.75287828947368
patch: { throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ;
rank: 474
score: 98.73235212053571
patch: return x 0 . 1 ;
rank: 474
score: 98.63073052300348
patch: break ; * break ; break ; }
rank: 474
score: 98.60783168247768
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } else {
rank: 474
score: 98.54621124267578
patch: break break ; / / / /
rank: 474
score: 98.5016581217448
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; } ;
rank: 474
score: 98.48155517578125
patch: break ; break ; ; / { break ;
rank: 474
score: 98.43571333451705
patch: break ; default : f 1 -= break ; }
rank: 475
score: 98.788974609375
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 475
score: 98.75238037109375
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 475
score: 98.73134358723958
patch: inverted = 0 . $NUMBER$ ; break ;
rank: 475
score: 98.63055974786931
patch: return 0 . 0 ; break ; } } }
rank: 475
score: 98.60711669921875
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; } }
rank: 475
score: 98.54570770263672
patch: break ; break ; ; else {
rank: 475
score: 98.48062133789062
patch: break ; break ; if / *
rank: 475
score: 98.43568004261364
patch: break ; > 0 . $NUMBER$ : f 1 ;
rank: 476
score: 98.78871556332237
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) $STRING$ ) ;
rank: 476
score: 98.7688980102539
patch: break ; case PEGASUS : f 0 *= 1 . $NUMBER$ ;
rank: 476
score: 98.73099190848214
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ;
rank: 476
score: 98.63023681640625
patch: break ; } } return break ; break ;
rank: 476
score: 98.6069091796875
patch: e . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 476
score: 98.54534149169922
patch: return break ; ; ; ; ;
rank: 476
score: 98.50114302201705
patch: break ; default : this . ; } } ;
rank: 476
score: 98.48042297363281
patch: break ; if ; -- break ;
rank: 476
score: 98.43543419471153
patch: break ; > 0 . 0 : f 0 = ; }
rank: 477
score: 98.78850188078704
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; }
rank: 477
score: 98.76888834635416
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 477
score: 98.75203450520833
patch: throw new Math CaMeL Internal CaMeL Error ( 0 ; }
rank: 477
score: 98.73084174262152
patch: inverted = 0 . 0 ; break ;
rank: 477
score: 98.6298828125
patch: return break ; } return break ;
rank: 477
score: 98.6066665649414
patch: break ; case REGULA _ FALSI : { return x 1 ;
rank: 477
score: 98.54529571533203
patch: break ; for ( { break ;
rank: 477
score: 98.50095621744792
patch: break ; ; case break ; default : break ; }
rank: 477
score: 98.48019748263889
patch: break ; } ; if ; break ;
rank: 477
score: 98.4352694424716
patch: break . 0 : f 1 = x 1 ;
rank: 478
score: 98.78836763822116
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ;
rank: 478
score: 98.7686996459961
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + value ) ;
rank: 478
score: 98.75193481445312
patch: f 1 = compute CaMeL Objective CaMeL Value (
rank: 478
score: 98.62957000732422
patch: break break ; } else if ;
rank: 478
score: 98.60665130615234
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( ) ; } } }
rank: 478
score: 98.54502868652344
patch: break ; / / ; / /
rank: 478
score: 98.50047810872395
patch: break ; default : f 1 = x 0 ; }
rank: 478
score: 98.48018188476563
patch: break ; break ; try / { break ;
rank: 478
score: 98.434912109375
patch: if ( break == 0 . 0 ) {
rank: 479
score: 98.78834025065105
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ) ;
rank: 479
score: 98.75163438585069
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 479
score: 98.730185546875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 479
score: 98.62947387695313
patch: break ; } break ; } if break ;
rank: 479
score: 98.6064453125
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 479
score: 98.54475402832031
patch: break ; ; / * * ;
rank: 479
score: 98.49984741210938
patch: break ; default : f 0 += break ; } }
rank: 479
score: 98.48008728027344
patch: break ; break ; return ; int
rank: 480
score: 98.78794508713942
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ;
rank: 480
score: 98.76826985677083
patch: super . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 480
score: 98.73011538856908
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) ) ; }
rank: 480
score: 98.54411097935268
patch: break ; ; ; ; /
rank: 480
score: 98.49952189127605
patch: break ; case ; > 0 . 0 : break ;
rank: 480
score: 98.48000759548611
patch: break ; break ; / * break ;
rank: 481
score: 98.76788689108456
patch: super . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ;
rank: 481
score: 98.75135498046875
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ;
rank: 481
score: 98.73007202148438
patch: break ; case REGULA _ FALSI : f 1 *= 0 . $NUMBER$ ; break ;
rank: 481
score: 98.62883911132812
patch: break break ; } } if break ; }
rank: 481
score: 98.60625751201923
patch: { fx = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 481
score: 98.54131208147321
patch: break break ; * break ;
rank: 481
score: 98.49940999348958
patch: break ; default : f 0 . 0 . ; }
rank: 481
score: 98.47988891601562
patch: return ; break ; if break ;
rank: 481
score: 98.433349609375
patch: default : throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 482
score: 98.76726616753473
patch: final double rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ;
rank: 482
score: 98.751318359375
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Error CaMeL Stream ( ) ) ;
rank: 482
score: 98.62872924804688
patch: } else { break ; } break ; }
rank: 482
score: 98.60621226917614
patch: LOG . throw new Math CaMeL Internal CaMeL Error (
rank: 482
score: 98.54124450683594
patch: break ; finally { break ; }
rank: 482
score: 98.49936745383523
patch: break ; default : f 0 ; ; } }
rank: 482
score: 98.479736328125
patch: break ; break ; break ; if return break ;
rank: 482
score: 98.43299449573864
patch: break ; default : f 1 = x $NUMBER$ ;
rank: 483
score: 98.78575642903645
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; ;
rank: 483
score: 98.76711203835227
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , x 1 ) ;
rank: 483
score: 98.75111083984375
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 483
score: 98.72939665421195
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 483
score: 98.62863991477273
patch: return 0 . 0 ; break ; else break ;
rank: 483
score: 98.6060546875
patch: context . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 483
score: 98.54122924804688
patch: } return break ; ;
rank: 483
score: 98.49873490767045
patch: break ; default : f 0 = null ; }
rank: 483
score: 98.47899712456598
patch: break ; break ; } if ; ;
rank: 483
score: 98.43246459960938
patch: } if ( break )
rank: 484
score: 98.78435149016204
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 484
score: 98.76703643798828
patch: break ; this . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 484
score: 98.75072564019098
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Exception ( ) ) ;
rank: 484
score: 98.6285400390625
patch: return 1 ; } break ; }
rank: 484
score: 98.605615234375
patch: e . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 484
score: 98.53994315011161
patch: break { break ; / /
rank: 484
score: 98.49855550130208
patch: break ; default : System . err . ; ; ;
rank: 484
score: 98.47856903076172
patch: break ; break ; } / {
rank: 485
score: 98.76632486979166
patch: final double fx 0 = compute CaMeL Objective CaMeL Value ( x ) ;
rank: 485
score: 98.72698102678571
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , x 1 ) ;
rank: 485
score: 98.62825012207031
patch: return break ; if break ; }
rank: 485
score: 98.6055908203125
patch: if ( Fast CaMeL Math . abs ( f 1 ) >= ftol ) {
rank: 485
score: 98.53946685791016
patch: } * break ; if break ;
rank: 485
score: 98.47805786132812
patch: break ; break ; / / return break ;
rank: 485
score: 98.43191528320312
patch: sb . append ( $STRING$ ) . append ( ; }
rank: 486
score: 98.783759765625
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 486
score: 98.766162109375
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) ;
rank: 486
score: 98.75023057725694
patch: f 1 *= x 1 ; } }
rank: 486
score: 98.72659462376645
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ; }
rank: 486
score: 98.62802124023438
patch: break ; else return 1 ; }
rank: 486
score: 98.6050313313802
patch: break ; case Fast CaMeL Math . RIGHT _ SIDE :
rank: 486
score: 98.53937530517578
patch: } * * / return break ;
rank: 486
score: 98.497900390625
patch: if ( break ; default : break ; }
rank: 486
score: 98.47804953835227
patch: break ; break ; if break ; break ; ;
rank: 486
score: 98.43182373046875
patch: return 0 . 0 ; default : break ;
rank: 487
score: 98.76568924753289
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 0 . 0 ) ;
rank: 487
score: 98.75006103515625
patch: throw new Math CaMeL Internal CaMeL Error ( allowed ) ;
rank: 487
score: 98.7265292080966
patch: return x 0 . 0 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 487
score: 98.62800428602431
patch: break ; } super . break ; }
rank: 487
score: 98.60464242788461
patch: break ; case RIGHT _ SIDE : if ( inverted ) {
rank: 487
score: 98.53806849888393
patch: break ; ] return break ;
rank: 487
score: 98.49765450613839
patch: f 0 = ; } }
rank: 487
score: 98.47791290283203
patch: break ; break ; System ; }
rank: 487
score: 98.431640625
patch: break . $NUMBER$ : f 0 = x $NUMBER$ ;
rank: 488
score: 98.78337890625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , inverted ) ;
rank: 488
score: 98.76565372242646
patch: final double atol = get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ;
rank: 488
score: 98.75003814697266
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 , ) ;
rank: 488
score: 98.60431377704327
patch: Object ftol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 488
score: 98.5377197265625
patch: break ; ; / * * /
rank: 488
score: 98.4968505859375
patch: } * break ; default : break ; }
rank: 488
score: 98.47787136501736
patch: break ; break ; return / / /
rank: 488
score: 98.43156602647569
patch: break ; default : return $STRING$ ; }
rank: 489
score: 98.76542358398437
patch: final double fx 0 = 0 . 0 ;
rank: 489
score: 98.7496273643092
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ] ) ;
rank: 489
score: 98.7262295809659
patch: break ; case REGULA _ FALSI : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 489
score: 98.62755584716797
patch: break ; for break ; } }
rank: 489
score: 98.60393524169922
patch: t 0 *= 0 . 0 ;
rank: 489
score: 98.53720092773438
patch: break ; ; ; return break ;
rank: 489
score: 98.49660081129808
patch: break ; default : System . exit ( 1 ) ; }
rank: 489
score: 98.47733154296876
patch: break ; if ; return break ; break ;
rank: 489
score: 98.4312515258789
patch: default : f 1 = break ;
rank: 490
score: 98.78063025841347
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } break ;
rank: 490
score: 98.76535373263889
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : f 1 ) ;
rank: 490
score: 98.74904378255208
patch: f 0 *= 0 . $NUMBER$ ; return x 1 ;
rank: 490
score: 98.72568969726562
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ; }
rank: 490
score: 98.6274642944336
patch: return 0 . ; } } }
rank: 490
score: 98.6036376953125
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 1 ;
rank: 490
score: 98.47720947265626
patch: break ; break ; if ; try / /
rank: 490
score: 98.43099271334134
patch: break . $NUMBER$ = break . $NUMBER$ ; default : break ;
rank: 491
score: 98.78044921875
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; }
rank: 491
score: 98.74904378255208
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$
rank: 491
score: 98.62745361328125
patch: return break ; } else { break ; }
rank: 491
score: 98.60362955729167
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 ;
rank: 491
score: 98.53678131103516
patch: break ; break ; out ; }
rank: 491
score: 98.49611409505208
patch: break ; System . arraycopy ( ; }
rank: 491
score: 98.47677612304688
patch: break ; break ; break ; return ; {
rank: 491
score: 98.43056233723958
patch: break ; default : f 1 = break ; default :
rank: 492
score: 98.78025390625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ) ;
rank: 492
score: 98.764892578125
patch: break ; case REGULA _ FALSI : f 1 *= 0 . 0 ;
rank: 492
score: 98.74838053385416
patch: else { throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 492
score: 98.62743377685547
patch: break ; * / } } }
rank: 492
score: 98.53663853236607
patch: return break ; return break ;
rank: 492
score: 98.49583082932692
patch: b 0 = Double . parse CaMeL Double ( ; ; }
rank: 492
score: 98.47657359730114
patch: break ; break ; break ; break ; / /
rank: 492
score: 98.43050130208333
patch: if ( ! break )
rank: 493
score: 98.780029296875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } return x 1 ;
rank: 493
score: 98.76457075639205
patch: if ( ftol == 0 . 0 ) {
rank: 493
score: 98.747998046875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . err ) ; }
rank: 493
score: 98.72455124627976
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) ) ; }
rank: 493
score: 98.62734985351562
patch: break ; else * break ; }
rank: 493
score: 98.60282135009766
patch: exception . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 493
score: 98.53520202636719
patch: } break ; ; ; / /
rank: 493
score: 98.49581570095486
patch: break ; default ; break ; ; }
rank: 493
score: 98.47633192274306
patch: break ; ; if ; return break ;
rank: 493
score: 98.43023681640625
patch: break ; default : f 0 = x ;
rank: 494
score: 98.7640625
patch: case PEGASUS : f 0 *= f 1 + fx ;
rank: 494
score: 98.72427222842262
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ; }
rank: 494
score: 98.62729714133523
patch: break ; } else { super . break ; }
rank: 494
score: 98.53482055664062
patch: break ; * / break ; ;
rank: 494
score: 98.49572075737848
patch: break ; > 0 . 0 : ;
rank: 494
score: 98.47612970525569
patch: break ; break ; if * break ; break ;
rank: 494
score: 98.42984008789062
patch: false = true ; }
rank: 495
score: 98.77955386513158
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = true ; }
rank: 495
score: 98.76400417751736
patch: f 0 *= f 1 + fx ;
rank: 495
score: 98.74781036376953
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . start ( ) ) ;
rank: 495
score: 98.72423206676136
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) {
rank: 495
score: 98.60039206112133
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 1 ; break ;
rank: 495
score: 98.53473772321429
patch: } break ; ; * *
rank: 495
score: 98.49539620535714
patch: return x 0 ; } }
rank: 495
score: 98.47597434303977
patch: break ; break ; break ; if break ; /
rank: 495
score: 98.42983774038461
patch: break . 0 = break . 0 ; default : break ;
rank: 496
score: 98.7795181274414
patch: f 0 += 0 . $NUMBER$ ;
rank: 496
score: 98.76393821022727
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) , ) ;
rank: 496
score: 98.74723985460069
patch: f 0 *= x 0 . 1 ;
rank: 496
score: 98.72401646205357
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , $STRING$ ) ; }
rank: 496
score: 98.62693568638393
patch: return 0 ; break ; }
rank: 496
score: 98.53421456473214
patch: break ; break { break ;
rank: 496
score: 98.49526742788461
patch: throw new Illegal CaMeL Argument CaMeL Exception ( break + $STRING$ ;
rank: 496
score: 98.47519356863839
patch: break ; else ; break ;
rank: 496
score: 98.42973109654018
patch: this . break ; default :
rank: 497
score: 98.77916541466347
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; }
rank: 497
score: 98.76373845880681
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Min ( ) ) ;
rank: 497
score: 98.74713541666667
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . out ) ; }
rank: 497
score: 98.62659912109375
patch: } else if break ; } } break ;
rank: 497
score: 98.59951985677084
patch: case REGULA _ FALSI : if ( ! inverted ) {
rank: 497
score: 98.5341796875
patch: if break ; ; ;
rank: 497
score: 98.4952392578125
patch: break ; default : f 0 . ++ ; } }
rank: 497
score: 98.47518920898438
patch: break ; break ; if ; if ; ;
rank: 497
score: 98.42939453125
patch: break ; case ; case ; : default :
rank: 498
score: 98.7790234375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) - 0 ) ;
rank: 498
score: 98.74701334635417
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } } } }
rank: 498
score: 98.72293893914474
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Cause ( ) ) ; }
rank: 498
score: 98.62628936767578
patch: break ; x 1 = break ;
rank: 498
score: 98.59828287760416
patch: break ; case REGULA _ FALSI : / / ; }
rank: 498
score: 98.53416224888393
patch: break ; out ; ; ;
rank: 498
score: 98.49512657752403
patch: b 0 = Double . parse CaMeL Double ( ; break ;
rank: 498
score: 98.47510375976563
patch: break ; break ; return ; * break ;
rank: 498
score: 98.42900085449219
patch: b 1 = break ; default :
rank: 499
score: 98.77837890625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ) ;
rank: 499
score: 98.76325988769531
patch: case PEGASUS : f 0 *= 0 . 0 ; break ;
rank: 499
score: 98.74671936035156
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( x 1 ;
rank: 499
score: 98.72280738467262
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + f 1 ) ;
rank: 499
score: 98.62615966796875
patch: } break ; } } if ;
rank: 499
score: 98.5979248046875
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( this + ) ;
rank: 499
score: 98.53400421142578
patch: break ; for break ; ; ;
rank: 499
score: 98.49339948381696
patch: break ; if ( ; }
rank: 499
score: 98.47508544921875
patch: break ; break ; if ; break ; this
rank: 499
score: 98.42899946732955
patch: return Integer . parse CaMeL Int ( x $NUMBER$ ;
rank: 500
score: 98.77794921875
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ;
rank: 500
score: 98.7462158203125
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ 0 ) ; }
rank: 500
score: 98.72274780273438
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ; }
rank: 500
score: 98.62576293945312
patch: break ; } } ;
rank: 500
score: 98.59779459635416
patch: continue ; case REGULA _ FALSI = 0 . $NUMBER$ ;
rank: 500
score: 98.53360748291016
patch: break ; ; ; * / /
rank: 500
score: 98.49317423502605
patch: break ; default : f 1 = ; } } ;
rank: 500
score: 98.47451443142361
patch: break ; break ; try / / /
rank: 500
score: 98.42891438802083
patch: return 0 . 0 ; default : return break ; }
rank: 501
score: 98.777880859375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; / /
rank: 501
score: 98.76186988467262
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ; }
rank: 501
score: 98.74591423483456
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS ) ; } }
rank: 501
score: 98.7224757982337
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , {
rank: 501
score: 98.62555609809027
patch: return break ; } else if break ;
rank: 501
score: 98.59740193684895
patch: return Fast CaMeL Math . max ( f 1 ) ;
rank: 501
score: 98.5335922241211
patch: } break ; / / / /
rank: 501
score: 98.49282004616477
patch: break ; default : break ; ; } } ;
rank: 501
score: 98.4742431640625
patch: break ; throw break ;
rank: 501
score: 98.42883978949652
patch: break ; default : throw null ; }
rank: 502
score: 98.777822265625
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ;
rank: 502
score: 98.76167127821181
patch: final double fx *= 0 . 0 ;
rank: 502
score: 98.74587673611111
patch: f 0 = f 1 ; } }
rank: 502
score: 98.72185601128473
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( $STRING$ ) ;
rank: 502
score: 98.62554168701172
patch: } break ; } if break ;
rank: 502
score: 98.59735107421875
patch: break ; case PEGASUS : x 0 *= 0 . $NUMBER$ ;
rank: 502
score: 98.49266468394886
patch: if ( break > 0 . 0 ) break ;
rank: 502
score: 98.47411431206598
patch: break ; break ; if ++ break ;
rank: 502
score: 98.428662109375
patch: break ; default : break ; break ; }
rank: 503
score: 98.776611328125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; }
rank: 503
score: 98.76133034446023
patch: case ILLINOIS : return x 1 ;
rank: 503
score: 98.7450927734375
patch: f 1 *= 0 . $NUMBER$ ; break }
rank: 503
score: 98.7217953330592
patch: return x 0 . 1 ; case PEGASUS : f 0 *= f 1 ;
rank: 503
score: 98.62547718394886
patch: break break ; } else { return break ; }
rank: 503
score: 98.59671223958334
patch: break ; case PEGASUS : f 0 = x 0 ;
rank: 503
score: 98.53288051060268
patch: } else { if break ;
rank: 503
score: 98.49254432091347
patch: break ; default : System . out . ; ; ; }
rank: 503
score: 98.47401936848958
patch: break ; break ; { break ; }
rank: 503
score: 98.42856852213542
patch: break . $NUMBER$ : f 0 = x $NUMBER$ ; }
rank: 504
score: 98.7762890625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , $STRING$ ) ;
rank: 504
score: 98.76127115885417
patch: f 1 *= 1 ;
rank: 504
score: 98.74487915039063
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL Lower CaMeL Case ( ) ) ;
rank: 504
score: 98.72171359592014
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Class ( ) ) ;
rank: 504
score: 98.62547302246094
patch: break ; case ; break ; }
rank: 504
score: 98.59659016927084
patch: break ; case REGULA _ FALSI : *= f 1 ;
rank: 504
score: 98.53281947544643
patch: break ; / ++ break ;
rank: 504
score: 98.47399030412946
patch: break ; if / / /
rank: 504
score: 98.42823486328125
patch: break ; > 0 . $NUMBER$ : break ;
rank: 505
score: 98.775458984375
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ;
rank: 505
score: 98.74464416503906
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x ;
rank: 505
score: 98.6252774325284
patch: return 0 . length ; } } break ; }
rank: 505
score: 98.59657796223958
patch: continue ; case RIGHT _ SIDE : return x 1 ;
rank: 505
score: 98.49193318684895
patch: break ; default : System . arraycopy ( ; } }
rank: 505
score: 98.47356622869319
patch: break ; break ; ; if ; return break ;
rank: 505
score: 98.42769077845982
patch: false = true ; break ;
rank: 506
score: 98.77543583622685
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 506
score: 98.76078527113971
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 506
score: 98.7445068359375
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 0 ) ; }
rank: 506
score: 98.62522888183594
patch: return break ; } } else }
rank: 506
score: 98.59652709960938
patch: case REGULA _ FALSI : / / {
rank: 506
score: 98.53257242838542
patch: / * * break ;
rank: 506
score: 98.49143763950893
patch: break ; / * * ;
rank: 506
score: 98.47352294921875
patch: break ; break ; if * break ; /
rank: 506
score: 98.425830078125
patch: break ; default : return 0 . $NUMBER$ ;
rank: 507
score: 98.775361328125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , allowed ) ;
rank: 507
score: 98.76066450639205
patch: f 1 *= ( f 1 + fx ) ;
rank: 507
score: 98.74333753083882
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( 1 ) ) ;
rank: 507
score: 98.71980116102431
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Max CaMeL
rank: 507
score: 98.62455610795455
patch: break ; this . break ; } break ; }
rank: 507
score: 98.59546770368304
patch: return f 1 . $NUMBER$ ;
rank: 507
score: 98.53245326450893
patch: break ; ; - / /
rank: 507
score: 98.49136013454861
patch: break ; default ; break ; } ;
rank: 507
score: 98.47315673828125
patch: break ; break ; if ; int / /
rank: 507
score: 98.42523193359375
patch: break . 0 : f 1 = x 1 ; }
rank: 508
score: 98.7605313387784
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Long ( ) ) ;
rank: 508
score: 98.74323272705078
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 , ) ;
rank: 508
score: 98.62337239583333
patch: } if break ; break ; } }
rank: 508
score: 98.59525553385417
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 508
score: 98.53217424665179
patch: } * break ; * /
rank: 508
score: 98.49114990234375
patch: break ; > 0 . 0 . 0 : break ;
rank: 508
score: 98.47266734730114
patch: break ; break ; break ; if ; if ;
rank: 508
score: 98.42511455829327
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + method ;
rank: 509
score: 98.77447188527961
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 509
score: 98.75997924804688
patch: super . throw new Math CaMeL Internal CaMeL Error ( ) ; } break ;
rank: 509
score: 98.74293348524306
patch: f 1 *= f 1 . x ;
rank: 509
score: 98.71931537828948
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 0 ) ;
rank: 509
score: 98.62306213378906
patch: break ; * * ; * /
rank: 509
score: 98.5950439453125
patch: case REGULA _ FALSI : / *= 0 . $NUMBER$ ;
rank: 509
score: 98.53211975097656
patch: break ; * break ; ; *
rank: 509
score: 98.49065551757812
patch: break ; default : System . arraycopy ; }
rank: 509
score: 98.47166748046875
patch: break ; break ; while ; { break ;
rank: 509
score: 98.42499542236328
patch: break ; > 0 . $NUMBER$ ;
rank: 510
score: 98.774296875
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ;
rank: 510
score: 98.75962201286765
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 0 ) ;
rank: 510
score: 98.742822265625
patch: f 1 *= get CaMeL Min ( ) ;
rank: 510
score: 98.6223388671875
patch: break ; } } break ; return break ;
rank: 510
score: 98.59474182128906
patch: continue ; case PEGASUS : f 1 *= 0 . $NUMBER$ ;
rank: 510
score: 98.53179931640625
patch: break break ; return break ;
rank: 510
score: 98.4906005859375
patch: break ; default : f 0 . close ( ) ; }
rank: 510
score: 98.42496744791667
patch: default : throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 511
score: 98.773916015625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ) ;
rank: 511
score: 98.75893985523896
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 0 , x ) ;
rank: 511
score: 98.74276733398438
patch: f 0 : return x 1 ;
rank: 511
score: 98.71837700737848
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Absolute CaMeL
rank: 511
score: 98.62226867675781
patch: return 0 . break ; break ;
rank: 511
score: 98.59457397460938
patch: break new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 511
score: 98.53103637695312
patch: break ; new break ;
rank: 511
score: 98.490478515625
patch: break ; default : f 0 . break ; break ; }
rank: 511
score: 98.47122192382812
patch: break ; break ; start
rank: 511
score: 98.42431640625
patch: break ; default : f 0 = break ; default :
rank: 512
score: 98.77337036132812
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 512
score: 98.75893267463235
patch: case PEGASUS : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ;
rank: 512
score: 98.62205200195312
patch: return break ; break ; } } break ;
rank: 512
score: 98.59389361213235
patch: case REGULA _ FALSI : / . 0 *= 0 . $NUMBER$ ;
rank: 512
score: 98.5305684407552
patch: break break ; / /
rank: 512
score: 98.49037522536058
patch: break ; default : f 0 = - 1 ; } }
rank: 512
score: 98.47112482244319
patch: break ; break ; break ; ; if break ;
rank: 512
score: 98.42399597167969
patch: float break = 0 . 0 ;
rank: 513
score: 98.75888400607639
patch: if ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) <= 0 . 0 ) {
rank: 513
score: 98.74190848214286
patch: inverted : return x 1 ;
rank: 513
score: 98.71771918402777
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 513
score: 98.62094116210938
patch: break ; f 1 = break ;
rank: 513
score: 98.59306335449219
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; switch ( method ) {
rank: 513
score: 98.52948760986328
patch: } * break ; break ; }
rank: 513
score: 98.49000854492188
patch: break ; > 0 . 0 . 0 ;
rank: 513
score: 98.46964111328126
patch: break ; break ; if ; set / /
rank: 513
score: 98.42386203342014
patch: break ; default : break break ; }
rank: 514
score: 98.75852748325893
patch: f 0 *= x $NUMBER$ ;
rank: 514
score: 98.74167767693015
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 ;
rank: 514
score: 98.71490157277961
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ; break ;
rank: 514
score: 98.6201416015625
patch: return break ; } } } } break ;
rank: 514
score: 98.59298502604166
patch: break ; case PEGASUS : if ( ! inverted ) {
rank: 514
score: 98.52891322544643
patch: break ; * while break ;
rank: 514
score: 98.48987755408653
patch: if ( ! Character . is CaMeL Digit ( $STRING$ ) )
rank: 514
score: 98.46956787109374
patch: break ; break ; try / return break ;
rank: 514
score: 98.4237811748798
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; break ;
rank: 515
score: 98.7726953125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + 0 ) ;
rank: 515
score: 98.75847424958882
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this ) ; }
rank: 515
score: 98.74149816176471
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 515
score: 98.71473039899554
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; break ;
rank: 515
score: 98.61985778808594
patch: break ; false ; break ; }
rank: 515
score: 98.59274471507354
patch: state . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 515
score: 98.52820587158203
patch: break ; ; case { break ;
rank: 515
score: 98.48966217041016
patch: break * / * break * /
rank: 515
score: 98.469482421875
patch: return ; break ;
rank: 515
score: 98.42374877929687
patch: break ; default : return - break ; }
rank: 516
score: 98.772646484375
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; break ;
rank: 516
score: 98.71425267269737
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x ] ) ;
rank: 516
score: 98.61907958984375
patch: return break ; } } catch break ;
rank: 516
score: 98.59273035386029
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . if ( ! inverted ) {
rank: 516
score: 98.52717590332031
patch: break ; * / int break ;
rank: 516
score: 98.48945756392045
patch: break ; default : System . err . break ;
rank: 516
score: 98.46924937855114
patch: break ; break ; if ; return ; break ;
rank: 516
score: 98.42349243164062
patch: break ; default : return - 1 . 0 ; }
rank: 517
score: 98.772314453125
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ;
rank: 517
score: 98.75764545641448
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) , ) ;
rank: 517
score: 98.74119737413194
patch: f 1 = 0 . 0 ; }
rank: 517
score: 98.71330915178571
patch: break ; case PEGASUS : f 0 *= f 1 ; f 0 = f 1 ;
rank: 517
score: 98.61890411376953
patch: break ; ; break ; } }
rank: 517
score: 98.59215590533088
patch: break ; case PEGASUS : f 0 *= 0 . 0 ; }
rank: 517
score: 98.52420479910714
patch: } break ; ; else {
rank: 517
score: 98.48935546875
patch: break ; default : f 0 |= ; }
rank: 517
score: 98.46912231445313
patch: break ; break ; break ; / / {
rank: 517
score: 98.42345252403847
patch: break . to CaMeL String ( ) ; case ; default :
rank: 518
score: 98.75736490885417
patch: this . x 1 = x 1 ;
rank: 518
score: 98.74101706112133
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) ) ; }
rank: 518
score: 98.71284412202381
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) , ) ;
rank: 518
score: 98.61861572265624
patch: return break ; } } return break ; }
rank: 518
score: 98.59191080729167
patch: break ; case REGULA _ FALSI : / / break ;
rank: 518
score: 98.52374267578125
patch: } * * break ; ; /
rank: 518
score: 98.48911539713542
patch: break ; default : { System . err . ; }
rank: 518
score: 98.46898193359375
patch: break ; break ; break ; break ; *
rank: 518
score: 98.4229736328125
patch: b 1 = break ; default : break ; }
rank: 519
score: 98.77170973557692
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ;
rank: 519
score: 98.75735473632812
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ;
rank: 519
score: 98.74092102050781
patch: f 1 = f 0 ; }
rank: 519
score: 98.71280924479167
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . double CaMeL Value ( ) ; }
rank: 519
score: 98.61849539620536
patch: break ; new break ; }
rank: 519
score: 98.59190458409927
patch: break ; case REGULA _ FALSI : f 0 = f 0 ;
rank: 519
score: 98.5234146118164
patch: break ; * * { break ;
rank: 519
score: 98.48860168457031
patch: break ; default : { } }
rank: 519
score: 98.46888427734375
patch: break ; break ; if ; return / /
rank: 519
score: 98.42295328776042
patch: this . break ; case ; case ; case ; :
rank: 520
score: 98.75706481933594
patch: break ; this . throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 520
score: 98.74049377441406
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 ;
rank: 520
score: 98.71228558084239
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; f 0 = f 1 ;
rank: 520
score: 98.61823866102431
patch: break ; } } if ( break ;
rank: 520
score: 98.59160822088069
patch: continue ; case PEGASUS : break ;
rank: 520
score: 98.52341134207589
patch: break ; while break ; ;
rank: 520
score: 98.48833356584821
patch: } if ( f 0 ;
rank: 520
score: 98.4680908203125
patch: break ; break ; if / = break ;
rank: 521
score: 98.770849609375
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 521
score: 98.74044979319854
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ; } }
rank: 521
score: 98.71224814967105
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 ; break ;
rank: 521
score: 98.61810302734375
patch: return break ; this . break ; } }
rank: 521
score: 98.5914306640625
patch: System . throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 521
score: 98.48830159505208
patch: break ; case ; default : break ; } } }
rank: 521
score: 98.467529296875
patch: break ; break ; if ; if break ; break ;
rank: 521
score: 98.42258522727273
patch: break ; default : f 1 = ; break ;
rank: 522
score: 98.77031792534723
patch: f 0 = 0 . 0 ; }
rank: 522
score: 98.75596708409927
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ;
rank: 522
score: 98.74029181985294
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + $STRING$ ;
rank: 522
score: 98.71221368963069
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ; } }
rank: 522
score: 98.61809692382812
patch: return 0 . ; } } } break ;
rank: 522
score: 98.58951822916667
patch: ! Fast CaMeL Math . abs ( f 1 ) {
rank: 522
score: 98.52201843261719
patch: break ; * break { break ;
rank: 522
score: 98.48804728190105
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; } }
rank: 522
score: 98.46739501953125
patch: break ; break ; if ; + break ;
rank: 522
score: 98.42179652622768
patch: false = false ; break ;
rank: 523
score: 98.7554043856534
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ; }
rank: 523
score: 98.7401123046875
patch: f 1 ; throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 523
score: 98.71205832741477
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ; }
rank: 523
score: 98.5889180501302
patch: { Fast CaMeL Math . max ( f 1 ) ;
rank: 523
score: 98.52201080322266
patch: break ; ; $NUMBER$ { break ;
rank: 523
score: 98.487890625
patch: break ; default : f 0 . ; ;
rank: 523
score: 98.46721801757812
patch: break ; if ; break ; break ; int
rank: 523
score: 98.42144775390625
patch: break ; > 0 . 0 = 1 ;
rank: 524
score: 98.7691796875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , true ) ;
rank: 524
score: 98.75458318536931
patch: case PEGASUS : return f 1 ;
rank: 524
score: 98.73965657552084
patch: throw new Math CaMeL Internal CaMeL Error ( - 0 . $NUMBER$ ) ;
rank: 524
score: 98.71193976151316
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Runtime ( ) , ) ;
rank: 524
score: 98.61675347222223
patch: break ; break ; } break ; else
rank: 524
score: 98.58888346354166
patch: it . throw new Math CaMeL Internal CaMeL Error ( + method ) ;
rank: 524
score: 98.5219955444336
patch: break ; break ; if null ;
rank: 524
score: 98.48771362304687
patch: b 0 = x 1 - break ; }
rank: 524
score: 98.4671875
patch: break ; if ; = / / break ;
rank: 524
score: 98.4205322265625
patch: throw new Null CaMeL Pointer CaMeL Exception ( break ) ; }
rank: 525
score: 98.61626642400569
patch: break ; } break ; } else return break ;
rank: 525
score: 98.58867797851562
patch: LOG . log ( $STRING$ + method ) ;
rank: 525
score: 98.52186584472656
patch: break ; * case ; break ;
rank: 525
score: 98.48760516826923
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + break ;
rank: 525
score: 98.466650390625
patch: break ; break ; if / ( break ;
rank: 525
score: 98.42009943181819
patch: f 0 = break ; default : break ; }
rank: 526
score: 98.768876953125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( f 0 ) ) ;
rank: 526
score: 98.71147717927632
patch: return x 1 . $NUMBER$ ; case PEGASUS : f 0 *= f 1 ;
rank: 526
score: 98.61598423549107
patch: break ; ++ break ; }
rank: 526
score: 98.58841959635417
patch: children = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 526
score: 98.48748016357422
patch: v 0 = x 1 ; }
rank: 526
score: 98.46656383167614
patch: break ; break ; / / if ; break ;
rank: 526
score: 98.41943969726563
patch: switch ( method . get CaMeL Type ( ;
rank: 527
score: 98.76876220703124
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; x 0 = f 1 ;
rank: 527
score: 98.75434955797698
patch: final double atol = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 527
score: 98.71138723273026
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) , ) ;
rank: 527
score: 98.61588541666667
patch: break ; break ; for break ; }
rank: 527
score: 98.58831787109375
patch: break ; case REGULA _ FALSI : += 0 . $NUMBER$ ;
rank: 527
score: 98.52072579520089
patch: break ; * ; / ;
rank: 527
score: 98.48696664663461
patch: break ; default : System . out . ; } * /
rank: 527
score: 98.46493530273438
patch: break ; break ; } / / / /
rank: 527
score: 98.41937934027777
patch: i = 0 . 0 ; break ;
rank: 528
score: 98.76841517857143
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ;
rank: 528
score: 98.75392659505208
patch: final double fx = 0 . $NUMBER$ ;
rank: 528
score: 98.73942260742187
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ $STRING$ ) ;
rank: 528
score: 98.7109619140625
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ; }
rank: 528
score: 98.61576704545455
patch: return 0 . 0 ; } } catch break ;
rank: 528
score: 98.58819580078125
patch: if ( inverted ) {
rank: 528
score: 98.52070835658482
patch: break ; ; / * ;
rank: 528
score: 98.4869140625
patch: f 0 = x 0 - break ; }
rank: 528
score: 98.4646484375
patch: break ; if ; ; break ; break ;
rank: 528
score: 98.41907755533855
patch: break ; > 0 . $NUMBER$ : f 1 ; }
rank: 529
score: 98.7681884765625
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 529
score: 98.75384521484375
patch: this . f 1 = f 1 ;
rank: 529
score: 98.73859998914931
patch: f 1 = x 0 . 0 ;
rank: 529
score: 98.61520821707589
patch: return 0 ; } break ;
rank: 529
score: 98.5203857421875
patch: break ; break ; if false ;
rank: 529
score: 98.48650568181819
patch: break ; case ; default : break false ; }
rank: 529
score: 98.46415571732955
patch: break ; break ; ; return break ; break ;
rank: 529
score: 98.41891479492188
patch: false = false ; }
rank: 530
score: 98.76814992804276
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = x 1 ;
rank: 530
score: 98.75366928998162
patch: break ; case PEGASUS : System . err . Error ( ) ;
rank: 530
score: 98.738427734375
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ) ;
rank: 530
score: 98.71080258018092
patch: return x 1 ; case REGULA _ FALSI : f 1 *= f 1 ;
rank: 530
score: 98.61505998883929
patch: { break ; } } }
rank: 530
score: 98.58762904575893
patch: if ( ! inverted ) {
rank: 530
score: 98.51980154854911
patch: break ; return break ; ;
rank: 530
score: 98.4859619140625
patch: f 0 = x $NUMBER$ * break ; }
rank: 530
score: 98.46412353515625
patch: break ; break ; break ; if ; return
rank: 530
score: 98.4184903231534
patch: break ; > 0 . 0 : f 0 ;
rank: 531
score: 98.76809692382812
patch: break ; case REGULA _ FALSI
rank: 531
score: 98.73816731770833
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . trim ( ) ;
rank: 531
score: 98.71071263363487
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , f 1 ) ;
rank: 531
score: 98.61493474786931
patch: return break ; } } else return break ; }
rank: 531
score: 98.58731079101562
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; } }
rank: 531
score: 98.51959228515625
patch: value = break ; break ;
rank: 531
score: 98.48577270507812
patch: break ; default : this . x ; }
rank: 531
score: 98.46404157366071
patch: break ; if ; try /
rank: 531
score: 98.41819411057692
patch: break ; case ; case ; case ; : f 1 :
rank: 532
score: 98.76756527549342
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ; }
rank: 532
score: 98.75249167049633
patch: throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE ) ; }
rank: 532
score: 98.73812662760416
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 1 ) ; }
rank: 532
score: 98.71039782072368
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( method ) ) ;
rank: 532
score: 98.61409505208333
patch: break ; else if ; break ; }
rank: 532
score: 98.58712948069854
patch: break ; case REGULA _ FALSI : / / *= f 1 ;
rank: 532
score: 98.51930454799107
patch: break ; * / ; ;
rank: 532
score: 98.48560587565105
patch: if ( f 0 > 0 . 0 ) break ;
rank: 532
score: 98.46294611150569
patch: break ; break ; break ; break ; return ;
rank: 532
score: 98.41801452636719
patch: break ; equals = true ; }
rank: 533
score: 98.73802083333334
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + inverted ) ; }
rank: 533
score: 98.70915784333882
patch: break ; case PEGASUS : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 533
score: 98.61399332682292
patch: } break ; break ; break ; else
rank: 533
score: 98.58702087402344
patch: return x ;
rank: 533
score: 98.51872035435268
patch: break ; else break ; ;
rank: 533
score: 98.48537772042411
patch: break ; } case break :
rank: 533
score: 98.46249825613839
patch: break ; if break ; /
rank: 533
score: 98.41799490792411
patch: x 0 = x 1 ;
rank: 534
score: 98.737548828125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; } break ;
rank: 534
score: 98.70913214432566
patch: break . default : throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 534
score: 98.61354573567708
patch: break ; x 1 = break ; }
rank: 534
score: 98.58681353400735
patch: continue ; case REGULA _ FALSI : if ( ! inverted ) {
rank: 534
score: 98.5184555053711
patch: break ; ( break ; break ;
rank: 534
score: 98.48388671875
patch: break ; default : throw ; } ; }
rank: 534
score: 98.46246337890625
patch: break ; break ; final
rank: 534
score: 98.41769748263889
patch: break ; case ; case ; TRUE :
rank: 535
score: 98.75140059621711
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( )
rank: 535
score: 98.70857747395833
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ; break ;
rank: 535
score: 98.613525390625
patch: break break ; } } return break ; }
rank: 535
score: 98.51842498779297
patch: return break ; ; break ; ;
rank: 535
score: 98.48385620117188
patch: break ; default : f 0 = 0 ; } }
rank: 535
score: 98.46205444335938
patch: break ; break ; return / / / /
rank: 535
score: 98.41720145089286
patch: z 1 = x $NUMBER$ ;
rank: 536
score: 98.75050184461806
patch: f 1 = f 1 . $NUMBER$ ;
rank: 536
score: 98.61325073242188
patch: } break ; } } } return break ;
rank: 536
score: 98.58643341064453
patch: break ; case REGULA _ FALSI : case RIGHT _ SIDE :
rank: 536
score: 98.4837176983173
patch: f 0 = Double . parse CaMeL Double ( ; } }
rank: 536
score: 98.46180216471355
patch: break ; if ; break ; if ; return break ;
rank: 536
score: 98.41713645241477
patch: break . 1 : f 0 = x 1 ;
rank: 537
score: 98.76503342848558
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 537
score: 98.74911644345238
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , 0 ) ;
rank: 537
score: 98.73682996961806
patch: f 0 = x 1 ; } }
rank: 537
score: 98.70753115699405
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , f 1 ) ;
rank: 537
score: 98.61293723366477
patch: break ; } } } return break ; break ;
rank: 537
score: 98.58595493861607
patch: tmp *= 0 . $NUMBER$ ;
rank: 537
score: 98.51762172154018
patch: } catch break ; break ;
rank: 537
score: 98.48314819335937
patch: break ; default : break ; } * /
rank: 537
score: 98.46169211647727
patch: break ; break ; if ; return break ; }
rank: 537
score: 98.41709594726562
patch: if ( break ) { this . break ;
rank: 538
score: 98.76481119791667
patch: return x 0 . 0 ; } }
rank: 538
score: 98.74909002130681
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ ) ;
rank: 538
score: 98.70734197443181
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) }
rank: 538
score: 98.61257934570312
patch: break ; else } break ; }
rank: 538
score: 98.51715850830078
patch: break ; / * = break ;
rank: 538
score: 98.48301188151042
patch: break ; default break ;
rank: 538
score: 98.4614590731534
patch: break ; break ; } if ; return break ;
rank: 538
score: 98.41673278808594
patch: return 0 . 0 ; default :
rank: 539
score: 98.76326293945313
patch: f 0 *= f 0 . $NUMBER$ ; }
rank: 539
score: 98.74860174005681
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Class ( ) ) ;
rank: 539
score: 98.7069156044408
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Min ( ) , ) ;
rank: 539
score: 98.58528645833333
patch: break ; case REGULA _ FALSI ] :
rank: 539
score: 98.48240152994792
patch: break ; default : f 0 ; ;
rank: 539
score: 98.46117054332386
patch: break ; break ; } if break ; break ;
rank: 539
score: 98.41673278808594
patch: if ( f 1 < break )
rank: 540
score: 98.76303536551339
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ;
rank: 540
score: 98.74854871961806
patch: { f 1 *= 0 . 0 ;
rank: 540
score: 98.73643493652344
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 ) ; break ;
rank: 540
score: 98.70662841796874
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( method ) ) ; }
rank: 540
score: 98.61226806640624
patch: break ; } } } if ; break ;
rank: 540
score: 98.5843505859375
patch: state = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } break ;
rank: 540
score: 98.51654052734375
patch: break { break ; ; / /
rank: 540
score: 98.48239370492789
patch: break ; default : System . err . break ; } }
rank: 540
score: 98.46115112304688
patch: break ; break ; if ; = break ;
rank: 540
score: 98.41670227050781
patch: f 0 = break ; default :
rank: 541
score: 98.74849853515624
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( false ) ) ;
rank: 541
score: 98.70596976902173
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Relative CaMeL Accuracy ( ) ; }
rank: 541
score: 98.61150360107422
patch: return break ; * * break ;
rank: 541
score: 98.58375459558823
patch: while ( Fast CaMeL Math . abs ( f 1 ) < ftol ) {
rank: 541
score: 98.51641845703125
patch: } * * * * break ;
rank: 541
score: 98.4823506673177
patch: break ; default ; ;
rank: 541
score: 98.45961507161458
patch: break ; break ; break ; break ; break ; /
rank: 541
score: 98.41666666666667
patch: break ; case ; case ; default : break ; }
rank: 542
score: 98.76046142578124
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; f 0 = x 1 ;
rank: 542
score: 98.74835759943181
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + ) ;
rank: 542
score: 98.7058742357337
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 542
score: 98.61138916015625
patch: break ; } else return break ; } }
rank: 542
score: 98.58369140625
patch: case REGULA _ FALSI : verify CaMeL Bracketing ( ) ;
rank: 542
score: 98.51587677001953
patch: break ; break ; out ; /
rank: 542
score: 98.48150634765625
patch: break ; default : System . exit ( ) ; }
rank: 542
score: 98.45870971679688
patch: break ; break ; if ; if ; {
rank: 542
score: 98.41633911132813
patch: break . x 0 = x 1 ; }
rank: 543
score: 98.7604347511574
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; } }
rank: 543
score: 98.74790954589844
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . $NUMBER$ ( ) ) ;
rank: 543
score: 98.70584267064145
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) - ) ;
rank: 543
score: 98.61051802201705
patch: return break ; } break ; } break ; }
rank: 543
score: 98.58368682861328
patch: break ; case REGULA _ FALSI : *= 0 . 0 ;
rank: 543
score: 98.51575469970703
patch: break ; ; case ; break ;
rank: 543
score: 98.48101337139423
patch: b 0 = Double . parse CaMeL Double ( f 1 ;
rank: 543
score: 98.45823974609375
patch: break ; if ; { break ; break ;
rank: 543
score: 98.4162930575284
patch: break . 0 : f 0 = x $NUMBER$ ;
rank: 544
score: 98.7598125751202
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } } }
rank: 544
score: 98.74787733289931
patch: break ; case PEGASUS : f 0 *= f 1 / f 1 ;
rank: 544
score: 98.7355224609375
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . 1 ) ; }
rank: 544
score: 98.70451274671052
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Max ( ) + ) ;
rank: 544
score: 98.61037772042411
patch: break ; } } ; }
rank: 544
score: 98.58357238769531
patch: state . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 544
score: 98.48070179332386
patch: break ; default : f 1 = x ; }
rank: 544
score: 98.45749733664773
patch: break ; break ; } if ; / / /
rank: 544
score: 98.41497333233173
patch: break ; > 0 . 0 : f 1 = ; }
rank: 545
score: 98.75800238715277
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ;
rank: 545
score: 98.74779052734375
patch: throw new Math CaMeL Internal CaMeL Error ( this . this . get CaMeL Min ( ) ) ;
rank: 545
score: 98.7354672080592
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( $STRING$ ) ) ;
rank: 545
score: 98.70439220610119
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , x 0 ) ;
rank: 545
score: 98.609912109375
patch: break ; this . break ; } else {
rank: 545
score: 98.5828125
patch: it . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 545
score: 98.51568603515625
patch: return break ; / ;
rank: 545
score: 98.48046875
patch: break ; default : f 0 = x 1 - ; }
rank: 545
score: 98.45703125
patch: break ; break ; break ; if ; return ;
rank: 545
score: 98.41489479758523
patch: throw new Illegal CaMeL State CaMeL Exception ; default :
rank: 546
score: 98.75764683314732
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; break ;
rank: 546
score: 98.747314453125
patch: break ; case REGULA _ FALSI : System . err . Error ( ) ;
rank: 546
score: 98.7353579872533
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL Lower CaMeL Case ( ) ;
rank: 546
score: 98.70401611328126
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy (
rank: 546
score: 98.60982513427734
patch: } else { return ; ; }
rank: 546
score: 98.58247375488281
patch: { Fast CaMeL Math . abs ( f 1 ) ; return x 1 ;
rank: 546
score: 98.5152359008789
patch: break ; ; / ; ; /
rank: 546
score: 98.48035777698864
patch: break ; default : { System . ; } }
rank: 546
score: 98.45668538411458
patch: break ; break ; if ; / / / / /
rank: 546
score: 98.41483561197917
patch: break . 1 : f 0 = ;
rank: 547
score: 98.7565448467548
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ;
rank: 547
score: 98.74725341796875
patch: return x 0 - x 1 ;
rank: 547
score: 98.73516082763672
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL
rank: 547
score: 98.70299183238636
patch: break ; case REGULA _ FALSI : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 547
score: 98.60973510742187
patch: break ; * * break ; } break ;
rank: 547
score: 98.5823745727539
patch: continue ; case REGULA _ FALSI : case LEFT _ SIDE :
rank: 547
score: 98.48008422851562
patch: break ; default : continue ; } ; }
rank: 547
score: 98.45599365234375
patch: break ; ; if ; break ; break ;
rank: 547
score: 98.41428444602273
patch: break . $NUMBER$ : f 1 = x 1 ;
rank: 548
score: 98.75575991030092
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 548
score: 98.74723815917969
patch: fx = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 548
score: 98.73445638020833
patch: f 1 = compute CaMeL Objective CaMeL Value ( x ) ; break ;
rank: 548
score: 98.70224397078805
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; default : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 548
score: 98.60965728759766
patch: break ; * return break ; }
rank: 548
score: 98.581103515625
patch: continue ; case REGULA _ FALSI : switch ( method )
rank: 548
score: 98.51443481445312
patch: } * * / if break ;
rank: 548
score: 98.47957356770833
patch: break ; default : f 1 = f 1 ; }
rank: 548
score: 98.45587158203125
patch: break ; break ; else break ; break ;
rank: 548
score: 98.41387384588069
patch: break ; > 0 . 1 = x 1 ;
rank: 549
score: 98.75556030273438
patch: f 1 = 0 . 0 ; break ;
rank: 549
score: 98.73442731584821
patch: b 1 *= f 1 ;
rank: 549
score: 98.7020327919408
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 , x ] ) ; break ;
rank: 549
score: 98.6096435546875
patch: } else { break ; } } } }
rank: 549
score: 98.58085632324219
patch: case REGULA _ FALSI : / / *= 0 . $NUMBER$ ;
rank: 549
score: 98.51436941964286
patch: break ; / return break ;
rank: 549
score: 98.47924194335937
patch: break ; default : f 0 . } }
rank: 549
score: 98.45456949869792
patch: break ; break ; break ; if ; ( break ;
rank: 549
score: 98.41379616477273
patch: break ; case ; ; case ; : return ;
rank: 550
score: 98.75504244290866
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , rtol ) ;
rank: 550
score: 98.73340606689453
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + fx + $STRING$ ) ;
rank: 550
score: 98.70151881167763
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) + ) ;
rank: 550
score: 98.60955810546875
patch: break ; } } } * ;
rank: 550
score: 98.58055419921875
patch: case REGULA _ FALSI : }
rank: 550
score: 98.51408168247768
patch: break ; * int break ;
rank: 550
score: 98.4788309733073
patch: break ; default : f 0 . ; } ; ;
rank: 550
score: 98.4130859375
patch: break . 0 : f 0 = x $NUMBER$ ; }
rank: 551
score: 98.75487342247597
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 551
score: 98.73297797309027
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : $STRING$ ) ; }
rank: 551
score: 98.70120239257812
patch: return x 0 . $NUMBER$ ; case PEGASUS : f 0 *= 0 . $NUMBER$ ;
rank: 551
score: 98.60941772460937
patch: break ; else break ; } catch break ;
rank: 551
score: 98.58003743489583
patch: if ( f 1 <= 0 ) {
rank: 551
score: 98.47860281808036
patch: } ; if ( ; ;
rank: 551
score: 98.45406087239583
patch: break ; break ; break ; break ; break ; ;
rank: 551
score: 98.41300825639205
patch: break ; case ; default : return break ; }
rank: 552
score: 98.74687756990132
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 552
score: 98.7327880859375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 + $STRING$ ) ;
rank: 552
score: 98.70069376627605
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 552
score: 98.60940551757812
patch: break ; } if break ; break ; }
rank: 552
score: 98.57999420166016
patch: children = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } else {
rank: 552
score: 98.51382010323661
patch: break ; * case ; ;
rank: 552
score: 98.47837999131944
patch: break ; default : ; } } }
rank: 552
score: 98.45389404296876
patch: break ; break ; break ; break ; set
rank: 552
score: 98.41299438476562
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; ;
rank: 553
score: 98.7463623046875
patch: f 0 *= f 1 / f 1 ;
rank: 553
score: 98.73268755744485
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 , x ] ) ;
rank: 553
score: 98.6997958096591
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ; break ;
rank: 553
score: 98.60938110351563
patch: break ; * * break ; } } }
rank: 553
score: 98.57996323529412
patch: break ; case REGULA _ FALSI : / case ANY _ SIDE :
rank: 553
score: 98.513427734375
patch: value * break ; break ;
rank: 553
score: 98.47821514423077
patch: b 0 = Double . parse CaMeL Double ( ; } ;
rank: 553
score: 98.45325724283855
patch: break ; break ; break ; if / * break ;
rank: 553
score: 98.41295166015625
patch: break ; case ; default : return break ;
rank: 554
score: 98.74629974365234
patch: f 1 *= 1 . 1 ;
rank: 554
score: 98.73213704427083
patch: f 1 *= 0 ;
rank: 554
score: 98.69977484809027
patch: return ( f 1 * fx ) ;
rank: 554
score: 98.60930633544922
patch: break ; } } } } else
rank: 554
score: 98.57991790771484
patch: ! Fast CaMeL Math . abs ( f 1 ) <= ftol ) {
rank: 554
score: 98.51338195800781
patch: break break ; / if break ;
rank: 554
score: 98.47819301060268
patch: f 0 = break ; }
rank: 554
score: 98.45260009765624
patch: break ; break ; while ; / / /
rank: 554
score: 98.41255326704545
patch: f 1 = break ; default : break ; }
rank: 555
score: 98.74613683363971
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ 1 ) ;
rank: 555
score: 98.73196411132812
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; default :
rank: 555
score: 98.69943359375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; }
rank: 555
score: 98.60900115966797
patch: break ; * ; break ; }
rank: 555
score: 98.57957548253677
patch: e . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 555
score: 98.51292419433594
patch: } * break ; ; / /
rank: 555
score: 98.4525146484375
patch: break ; break ; if ; } break ;
rank: 555
score: 98.41253107244319
patch: break ; default : f 0 = x $NUMBER$ ;
rank: 556
score: 98.74544949001736
patch: break ; case REGULA _ FALSI : verify CaMeL Bracketing ( method ) ;
rank: 556
score: 98.73188332950367
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( 0 . 0 ) ;
rank: 556
score: 98.69840280633224
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 , x 1 ) ;
rank: 556
score: 98.60846625434027
patch: return 0 . $NUMBER$ ; break ; }
rank: 556
score: 98.57952521829044
patch: log . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 556
score: 98.51272583007812
patch: } / * * break ; /
rank: 556
score: 98.47740760216347
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; } * /
rank: 556
score: 98.4521240234375
patch: break ; break ; break ; break ; =
rank: 556
score: 98.41248497596153
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ; }
rank: 557
score: 98.74844125600961
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 557
score: 98.74539005055146
patch: int fx = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 557
score: 98.73173828125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) ; }
rank: 557
score: 98.60839165581598
patch: return break ; } break ; break ;
rank: 557
score: 98.57939910888672
patch: state = Fast CaMeL Math . max ( f 1 , x 0 ) ;
rank: 557
score: 98.51260375976562
patch: break ; ; / * / ;
rank: 557
score: 98.477294921875
patch: break ; default : System . err . ; } * /
rank: 557
score: 98.45131225585938
patch: break ; break ; break ; break ; if
rank: 557
score: 98.4122314453125
patch: break ; default : return null ;
rank: 558
score: 98.74836335358796
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; } }
rank: 558
score: 98.73139190673828
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 ) ; break ;
rank: 558
score: 98.69772178248355
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Runtime ( ) ) ; }
rank: 558
score: 98.60831451416016
patch: break ; else return false ; }
rank: 558
score: 98.579345703125
patch: if ( Fast CaMeL Math . abs ( f 0 ) <= ftol ) {
rank: 558
score: 98.51239885602679
patch: } * break ; / /
rank: 558
score: 98.476806640625
patch: break ; default : break ; ; } ; }
rank: 558
score: 98.45109252929687
patch: break ; break ; break ; ; if ;
rank: 558
score: 98.4121981534091
patch: break ; ; case ; case ; : break ;
rank: 559
score: 98.74509102957589
patch: x 0 = f 1 ;
rank: 559
score: 98.74464246961806
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + ) ;
rank: 559
score: 98.73105982730263
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( 0 ) ) ;
rank: 559
score: 98.6962890625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x ] ) ;
rank: 559
score: 98.60812038845486
patch: break ; } if ; break ; }
rank: 559
score: 98.51234654017857
patch: break ; ; case ; ;
rank: 559
score: 98.47651890345982
patch: break ; ; case ; }
rank: 559
score: 98.45035400390626
patch: break ; break ; for ; { break ;
rank: 559
score: 98.4119873046875
patch: sb . append ( $STRING$ ) ; break ; default :
rank: 560
score: 98.74472481863839
patch: inverted = false ; break ;
rank: 560
score: 98.74362182617188
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( true ) ) ;
rank: 560
score: 98.7309814453125
patch: f 0 *= 0 . $NUMBER$ ; break }
rank: 560
score: 98.69607979910714
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ; }
rank: 560
score: 98.607666015625
patch: return 0 . ; break ; } }
rank: 560
score: 98.57762953814338
patch: if ( Fast CaMeL Math . abs ( x 1 ) < ftol ) {
rank: 560
score: 98.51229858398438
patch: break { break ; if break ;
rank: 560
score: 98.45008544921875
patch: break ; if ; ; if ; break ;
rank: 560
score: 98.41170247395833
patch: break ; default : break 1 ; }
rank: 561
score: 98.7446922019676
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 561
score: 98.74354137073864
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this ) ;
rank: 561
score: 98.73078070746527
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . equals ( f 1 ) ) ;
rank: 561
score: 98.69576263427734
patch: inverted = ! inverted ; break ;
rank: 561
score: 98.60760498046875
patch: break ; } } * break ;
rank: 561
score: 98.57745361328125
patch: log . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 561
score: 98.51188151041667
patch: * break ; break ;
rank: 561
score: 98.47629220145089
patch: break ; default : * /
rank: 561
score: 98.4500732421875
patch: break ; break ; if / * / /
rank: 561
score: 98.41146850585938
patch: break ; default : return 0 ;
rank: 562
score: 98.74459838867188
patch: else { f 0 *= 0 . $NUMBER$ ;
rank: 562
score: 98.74340102251838
patch: break ; case PEGASUS : f 0 *= f 1 . $NUMBER$ ;
rank: 562
score: 98.695556640625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( f 1 ) ;
rank: 562
score: 98.6075927734375
patch: break ; * * break ; break ; }
rank: 562
score: 98.57676696777344
patch: return x 1 / x 1 ;
rank: 562
score: 98.51175689697266
patch: return break ; ; / / /
rank: 562
score: 98.47608360877403
patch: break ; default : System . out . ; ; } ;
rank: 562
score: 98.4499755859375
patch: break ; break ; = ; { break ;
rank: 562
score: 98.41145463423295
patch: throw new Runtime CaMeL Exception ( $STRING$ + method ;
rank: 563
score: 98.74433051215277
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ;
rank: 563
score: 98.74271647135417
patch: this . f 0 = x 1 ;
rank: 563
score: 98.73030598958333
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ; } }
rank: 563
score: 98.51164899553571
patch: } * / if break ;
rank: 563
score: 98.47589666193181
patch: break ; break ; default : break ; } }
rank: 563
score: 98.4476651278409
patch: break ; break ; if / if ; break ;
rank: 563
score: 98.41027069091797
patch: break . $NUMBER$ = x $NUMBER$ ;
rank: 564
score: 98.74415283203125
patch: f 0 *= x 0 . $NUMBER$ ; }
rank: 564
score: 98.74176989103618
patch: throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , x 1 ) ;
rank: 564
score: 98.6951192220052
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Relative CaMeL Accuracy ( ) ; break ;
rank: 564
score: 98.60723876953125
patch: break ; break ; false ;
rank: 564
score: 98.57481384277344
patch: continue ; case REGULA _ FALSI : switch ( allowed ) {
rank: 564
score: 98.51120431082589
patch: break break ; if break ;
rank: 564
score: 98.47555776742789
patch: break ; default : f 0 . remove ( ) ; }
rank: 564
score: 98.44669596354167
patch: break ; break ; break ; break ; throw break ;
rank: 564
score: 98.4100112915039
patch: z 1 = x $NUMBER$ ; }
rank: 565
score: 98.74382934570312
patch: if ( f 1 <= 0 . 0 )
rank: 565
score: 98.72994232177734
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; }
rank: 565
score: 98.69494047619048
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ; break ;
rank: 565
score: 98.60703735351562
patch: break ; } else return break ; break ;
rank: 565
score: 98.57434844970703
patch: logger . throw new Math CaMeL Internal CaMeL Error ( + method ) ; }
rank: 565
score: 98.4749984741211
patch: break ; * break * / }
rank: 565
score: 98.44619315011161
patch: break ; break ; } {
rank: 565
score: 98.4096450805664
patch: f 1 = break ; default :
rank: 566
score: 98.74290466308594
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 566
score: 98.74163140190973
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : f 0 ) ;
rank: 566
score: 98.72950744628906
patch: f 1 = fx ; break ;
rank: 566
score: 98.694921875
patch: return x 1 ; case REGULA _ FALSI : f 0 *= f 1 ; }
rank: 566
score: 98.60690307617188
patch: } else { ( break ; }
rank: 566
score: 98.57396742876838
patch: break ; case REGULA _ FALSI : / / return x 0 ;
rank: 566
score: 98.47469388521634
patch: break ; default : f 0 = 0 ; break ; }
rank: 566
score: 98.4459228515625
patch: break ; break ; break ; return return break ;
rank: 566
score: 98.40938720703124
patch: break ; > 0 . 0 = $NUMBER$ ;
rank: 567
score: 98.74266790574596
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 567
score: 98.74146225873162
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x 0 ;
rank: 567
score: 98.72948404947917
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ - f 0 ) ;
rank: 567
score: 98.69482421875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , f 1 ) ;
rank: 567
score: 98.60671657986111
patch: return 0 . $NUMBER$ ; break ; else
rank: 567
score: 98.57393646240234
patch: continue ; case REGULA _ FALSI : f 0 *= 1 ;
rank: 567
score: 98.51068987165179
patch: break break ; break ; ;
rank: 567
score: 98.474267578125
patch: break ; default : break ; ; } ;
rank: 567
score: 98.4455057779948
patch: break ; break ; if ; if ; break ; }
rank: 567
score: 98.40924072265625
patch: break ; > 0 . 0 = - 1 ; }
rank: 568
score: 98.72926839192708
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + 0 ) ;
rank: 568
score: 98.69474487304687
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) + ) ; }
rank: 568
score: 98.60670471191406
patch: return break ; break ; } else
rank: 568
score: 98.57340734145221
patch: if ( Fast CaMeL Math . abs ( f 1 ) > ftol ) {
rank: 568
score: 98.51066589355469
patch: } break ; break ; * /
rank: 568
score: 98.4741719563802
patch: break ; default : throw new Runtime CaMeL Exception ( ;
rank: 568
score: 98.44542347301136
patch: if ; break ; break ; break ; break ;
rank: 568
score: 98.40907796223958
patch: break ; case ; case ; : if ( break )
rank: 569
score: 98.74097964638158
patch: final double ftol = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 569
score: 98.72914751838235
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ + f 1 ) ;
rank: 569
score: 98.69459228515625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) , $STRING$ ) ;
rank: 569
score: 98.60627092633929
patch: break ; } return 0 ;
rank: 569
score: 98.5731430053711
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . return x ; break ;
rank: 569
score: 98.50978306361607
patch: / * * = break ;
rank: 569
score: 98.47386756310097
patch: b 0 = Double . value CaMeL Of ( f 1 ;
rank: 569
score: 98.44523111979167
patch: break ; break ; if ; break ; break ; ;
rank: 569
score: 98.4088643391927
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + method
rank: 570
score: 98.74098423549107
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 570
score: 98.74033203125
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this + $STRING$ ) ;
rank: 570
score: 98.72874450683594
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . length ;
rank: 570
score: 98.69450073242187
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , this ) ;
rank: 570
score: 98.60607147216797
patch: break ; x ++ ; } }
rank: 570
score: 98.57266998291016
patch: case REGULA _ FALSI : / 0 *= 0 . $NUMBER$ ;
rank: 570
score: 98.50935581752232
patch: break ; ; while break ;
rank: 570
score: 98.47378540039062
patch: break ; default : throw new ; } ; } ;
rank: 570
score: 98.445068359375
patch: break ; break ; break ; { return break ;
rank: 570
score: 98.40818434495192
patch: throw new Runtime CaMeL Exception ( $STRING$ , method ) ; }
rank: 571
score: 98.74048723493304
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } return x 1 ;
rank: 571
score: 98.7400235262784
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ) ;
rank: 571
score: 98.72845458984375
patch: inverted = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 571
score: 98.60590277777777
patch: break ; } else return break ; else
rank: 571
score: 98.5725959329044
patch: break ; case REGULA _ FALSI : fx *= 0 . $NUMBER$ ;
rank: 571
score: 98.50845772879464
patch: } break ; / else {
rank: 571
score: 98.47372671274039
patch: break ; default : System . err . ; ; break ;
rank: 571
score: 98.44493756975446
patch: break ; break ; set /
rank: 571
score: 98.40792846679688
patch: break ; case ; case ; : f 1 = ;
rank: 572
score: 98.74034288194444
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; / / }
rank: 572
score: 98.72838637408088
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 , x 0 ) ;
rank: 572
score: 98.69414319490132
patch: break ; case PEGASUS : f 0 *= 0 . $NUMBER$ ; break ; }
rank: 572
score: 98.60560607910156
patch: break ; } else return start ;
rank: 572
score: 98.57196403952206
patch: case REGULA _ FALSI : / x 1 *= 0 . $NUMBER$ ;
rank: 572
score: 98.50817108154297
patch: return break ; ; * break ;
rank: 572
score: 98.4737215909091
patch: break ; default : f 1 = ; } ;
rank: 572
score: 98.44449869791667
patch: break ; break ; break ; if ; throw break ;
rank: 572
score: 98.40785725911458
patch: break . $NUMBER$ : f 1 = x 1 ; }
rank: 573
score: 98.73990885416667
patch: f 0 = f 0 . $NUMBER$ ;
rank: 573
score: 98.73874337332589
patch: return x = x 1 ;
rank: 573
score: 98.69337158203125
patch: break ; case REGULA _ FALSI : f 0 *= 0 . 1 ; break ;
rank: 573
score: 98.6053133877841
patch: return break ; } } break ; break ; }
rank: 573
score: 98.5716323852539
patch: state = Fast CaMeL Math . max ( f 1 , x 1 ) ;
rank: 573
score: 98.50807189941406
patch: break ; * * * ; /
rank: 573
score: 98.47361061789773
patch: break ; default : f 0 . = ; }
rank: 573
score: 98.4433085123698
patch: break ; break ; boolean
rank: 573
score: 98.40768432617188
patch: sb . append ( $STRING$ ) ; break ;
rank: 574
score: 98.7386474609375
patch: f 0 = get CaMeL Min ( ) ;
rank: 574
score: 98.73789576480263
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 574
score: 98.7276611328125
patch: f 1 *= x $NUMBER$ ;
rank: 574
score: 98.69334010074013
patch: return x 1 ; case REGULA _ FALSI : f 0 = f 1 ;
rank: 574
score: 98.6048583984375
patch: } break ; break ; } break ; }
rank: 574
score: 98.57151884191177
patch: continue ; case REGULA _ FALSI : start *= 0 . $NUMBER$ ;
rank: 574
score: 98.50802176339286
patch: break ; * } break ;
rank: 574
score: 98.47327769886364
patch: break ; default : System . ; } ; ;
rank: 574
score: 98.40765850360577
patch: break ; default : System . arraycopy ( break ) ; }
rank: 575
score: 98.73814561631944
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ; break ;
rank: 575
score: 98.73779975043402
patch: f 0 *= 1 . $NUMBER$ ; }
rank: 575
score: 98.72730170355902
patch: f 1 *= 0 . 1 ; }
rank: 575
score: 98.6912777549342
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Cause ( ) + ) ;
rank: 575
score: 98.60475158691406
patch: return break ; } } } else
rank: 575
score: 98.57089412913604
patch: continue ; case REGULA _ FALSI : / *= 0 . $NUMBER$ ;
rank: 575
score: 98.50748443603516
patch: break ; break ; ; * ;
rank: 575
score: 98.47301307091347
patch: b 0 . to CaMeL String ( ) ; break ; }
rank: 575
score: 98.4423828125
patch: break ; break ; break ; ; / / /
rank: 575
score: 98.40697564019098
patch: throw new Unsupported CaMeL Operation CaMeL Exception ;
rank: 576
score: 98.73779296875
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 + ) ;
rank: 576
score: 98.72703552246094
patch: f 1 = 0 . 1 ;
rank: 576
score: 98.60347123579545
patch: break ; break ; } else { break ; }
rank: 576
score: 98.57072179457721
patch: break ; case REGULA _ FALSI : / 0 *= f 1 ;
rank: 576
score: 98.50712585449219
patch: break ; ; ; / ; /
rank: 576
score: 98.47275216238839
patch: break ; case ; ; }
rank: 576
score: 98.40664333767361
patch: break ; case ; default : return ;
rank: 577
score: 98.73715389476104
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ;
rank: 577
score: 98.73592122395833
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; break ;
rank: 577
score: 98.72686089409723
patch: f 1 = x 1 . 0 ;
rank: 577
score: 98.69041683799342
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 0 ) ;
rank: 577
score: 98.60332380022321
patch: break ; } catch ; }
rank: 577
score: 98.57066345214844
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ;
rank: 577
score: 98.50690569196429
patch: break ; ( break ; ;
rank: 577
score: 98.47268442007211
patch: break ; default : f 0 . ; } } * /
rank: 577
score: 98.44187233664773
patch: break ; break ; ; / / / / /
rank: 578
score: 98.73711603338069
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ; }
rank: 578
score: 98.73536060474537
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; }
rank: 578
score: 98.72669566761364
patch: if ( f 1 <= 0 . 0 ) {
rank: 578
score: 98.69024336965461
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ; }
rank: 578
score: 98.60320281982422
patch: break ; false * break ; }
rank: 578
score: 98.57035558363971
patch: continue ; case REGULA _ FALSI : f 0 = f 1 ;
rank: 578
score: 98.50592912946429
patch: break ; / * * /
rank: 578
score: 98.47254638671875
patch: break ; case ; default : ; } }
rank: 578
score: 98.439697265625
patch: break ; break ; } return break ; break ;
rank: 579
score: 98.73709445529514
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 0 ) ; }
rank: 579
score: 98.72639465332031
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) ; }
rank: 579
score: 98.69001908735795
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 579
score: 98.60263893821023
patch: break ; } else return break ; break ; }
rank: 579
score: 98.57015991210938
patch: logger . throw new Math CaMeL Internal CaMeL Error ( ) ; } } }
rank: 579
score: 98.50578090122768
patch: break ; int break ; ;
rank: 579
score: 98.47225189208984
patch: } / * break ; default :
rank: 579
score: 98.43827681107955
patch: break ; if ; break ; break ; / /
rank: 579
score: 98.4056063565341
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 580
score: 98.68959738991477
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ; } }
rank: 580
score: 98.60261840820313
patch: break ; break ; } else break ; }
rank: 580
score: 98.56920668658088
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 = x ] ;
rank: 580
score: 98.5053939819336
patch: break ; ; * * ; *
rank: 580
score: 98.47196138822116
patch: break ; default : System . err . ; ; ; }
rank: 580
score: 98.43794389204545
patch: break ; break ; break ; / return break ;
rank: 580
score: 98.40470581054687
patch: break ; default : return break ; } }
rank: 581
score: 98.73644341362848
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Internal CaMeL Error ( ) ) ;
rank: 581
score: 98.73261575137867
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; }
rank: 581
score: 98.68903459821429
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ;
rank: 581
score: 98.60250854492188
patch: break ; else return value ; }
rank: 581
score: 98.56861114501953
patch: c 0 *= 0 . $NUMBER$ ;
rank: 581
score: 98.50523158482143
patch: } / * if break ;
rank: 581
score: 98.47166859019886
patch: break ; default : break ; break ; } }
rank: 581
score: 98.43780517578125
patch: break ; break ; break ; return break ; break ;
rank: 581
score: 98.40460759943181
patch: break ; case ; case ; default : break ;
rank: 582
score: 98.68865094866071
patch: break ; case PEGASUS : f 0 *= f 1 ; f 0 *= f 1 ;
rank: 582
score: 98.6024169921875
patch: } else { break ; } } break ;
rank: 582
score: 98.5684814453125
patch: break ; case REGULA _ FALSI : inverted = x 1 ;
rank: 582
score: 98.50505719866071
patch: break ; break ; * *
rank: 582
score: 98.47121756417411
patch: } } else { break ;
rank: 582
score: 98.43695623224431
patch: break ; break ; if ; break ; return ;
rank: 582
score: 98.40427071707589
patch: if ( break ) break ;
rank: 583
score: 98.7353515625
patch: return x 1 ; case PEGASUS : f 0 *= 0 . $NUMBER$ ;
rank: 583
score: 98.73205172631049
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ;
rank: 583
score: 98.7248176125919
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 + ) ; }
rank: 583
score: 98.68780226934524
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , x 0 ) ;
rank: 583
score: 98.60211736505681
patch: return break ; break ; } } return break ;
rank: 583
score: 98.56839752197266
patch: continue ; case PEGASUS : f 0 -= 0 . $NUMBER$ ;
rank: 583
score: 98.50474548339844
patch: break ; / * while break ;
rank: 583
score: 98.43595747514205
patch: break ; break ; ; if ; / / /
rank: 583
score: 98.40419699928977
patch: break . 0 : f 0 = break . ;
rank: 584
score: 98.73472086588542
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ ) ; break ;
rank: 584
score: 98.72948314525463
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ;
rank: 584
score: 98.68763950892857
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= x 1 ;
rank: 584
score: 98.6019620028409
patch: return 0 . 0 ; } return break ; }
rank: 584
score: 98.56758880615234
patch: break ; case REGULA _ FALSI : start = x 1 ;
rank: 584
score: 98.50435638427734
patch: break ; ; / ; / ;
rank: 584
score: 98.47074672154018
patch: break ; } ; default :
rank: 584
score: 98.4358418782552
patch: break ; break ; if ; if ; break ; ;
rank: 584
score: 98.40360884232955
patch: break ; case ; default : break ; default :
rank: 585
score: 98.73455451516544
patch: break ; case PEGASUS : this . f 0 *= f 1 ;
rank: 585
score: 98.72922092013889
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ; break ;
rank: 585
score: 98.72419569227431
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ; }
rank: 585
score: 98.56714585248162
patch: break ; case REGULA _ FALSI : f 0 *= 0 ; }
rank: 585
score: 98.50408935546875
patch: return break ; break ; * ;
rank: 585
score: 98.4706561748798
patch: break ; default : f 0 = ; ; break ; }
rank: 585
score: 98.4355801669034
patch: break ; break ; while ; break ; break ;
rank: 586
score: 98.73441354851974
patch: final double rtol = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 586
score: 98.72896030970982
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ; break ;
rank: 586
score: 98.72410999644886
patch: throw new Math CaMeL Internal CaMeL Error ( $NUMBER$ ;
rank: 586
score: 98.60160319010417
patch: { break ; } }
rank: 586
score: 98.50389099121094
patch: break ; ; return * break ;
rank: 586
score: 98.47013636997768
patch: f 1 = break ; }
rank: 586
score: 98.43520100911458
patch: break ; break ; break ; if ; else break ;
rank: 586
score: 98.403076171875
patch: break . 1 : f 0 = x 1 ; }
rank: 587
score: 98.73423700747283
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Runtime ( ) + ) ;
rank: 587
score: 98.72873263888889
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 587
score: 98.68665313720703
patch: return f 0 . x 1 ;
rank: 587
score: 98.60157359730114
patch: break ; break ; } break ; break ; }
rank: 587
score: 98.56598977481617
patch: Kit . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 587
score: 98.47010387073864
patch: break ; ; ; default : break ; } }
rank: 587
score: 98.43512517755681
patch: break ; break ; break ; return * break ;
rank: 587
score: 98.40304904513889
patch: break . 0 : f 1 = ;
rank: 588
score: 98.73419189453125
patch: return x 1 ; break ;
rank: 588
score: 98.72824435763889
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 588
score: 98.72215270996094
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . x 1 + $STRING$ ;
rank: 588
score: 98.68634354440789
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) ) ; }
rank: 588
score: 98.60131157769098
patch: return 0 . value ; } else {
rank: 588
score: 98.56539154052734
patch: result = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } else {
rank: 588
score: 98.50327555338542
patch: } break ; * ;
rank: 588
score: 98.4699237530048
patch: break ; default : f 0 = break ; } } ;
rank: 588
score: 98.43505859375
patch: break ; break ; if ; break ; throw break ;
rank: 588
score: 98.40296519886364
patch: throw new Runtime CaMeL Exception ( $STRING$ + name ;
rank: 589
score: 98.72610134548611
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ; }
rank: 589
score: 98.7206298828125
patch: f 1 = 0 . $NUMBER$ ; } }
rank: 589
score: 98.60088433159723
patch: break ; / * * break ; }
rank: 589
score: 98.50305938720703
patch: } * * * / break ;
rank: 589
score: 98.4699237530048
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } ;
rank: 589
score: 98.4346036044034
patch: break ; break ; if break ; throw break ;
rank: 589
score: 98.40293884277344
patch: break ; default : final ; }
rank: 590
score: 98.73393419053819
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 590
score: 98.7200927734375
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL
rank: 590
score: 98.68619384765626
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) + ) ; }
rank: 590
score: 98.60078430175781
patch: break ; else return x 1 ;
rank: 590
score: 98.4693936434659
patch: break ; default : f 0 += break ; }
rank: 590
score: 98.432373046875
patch: break ; if ; break ; return break ; break ;
rank: 590
score: 98.40260823567708
patch: break ; default : throw new Error ( $STRING$ ) ;
rank: 591
score: 98.72454833984375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ; }
rank: 591
score: 98.71992492675781
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ $STRING$ ) ; }
rank: 591
score: 98.60051812065973
patch: break ; } } } throw null ;
rank: 591
score: 98.56458955652573
patch: continue ; case REGULA _ FALSI : f 0 *= x 1 ;
rank: 591
score: 98.50225830078125
patch: break ; ; * while break ;
rank: 591
score: 98.46936974158653
patch: break ; > 0 . 0 . 0 = x 0 ;
rank: 591
score: 98.43087768554688
patch: break ; if ; break ; break ; if break ;
rank: 591
score: 98.40223524305556
patch: break . $NUMBER$ : f 1 = ;
rank: 592
score: 98.73296760110294
patch: ftol = compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 592
score: 98.71988254123264
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Long ( ) ) ;
rank: 592
score: 98.68588738692434
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 0 ) ;
rank: 592
score: 98.60028754340277
patch: break break ; else return break ; }
rank: 592
score: 98.56438849954044
patch: break ; case REGULA _ FALSI : inverted = 0 . $NUMBER$ ;
rank: 592
score: 98.5021743774414
patch: break ; break ; * / *
rank: 592
score: 98.46905987079327
patch: break ; default : f 0 ++ ; break ; } }
rank: 592
score: 98.43080647786458
patch: break ; break ; if ; if ; break ; /
rank: 592
score: 98.40223106971153
patch: break ; default : throw new Illegal CaMeL State CaMeL Exception ;
rank: 593
score: 98.73237537202381
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this + ) ) ;
rank: 593
score: 98.72341657366071
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 593
score: 98.71893865411931
patch: throw new Math CaMeL Internal CaMeL Error ( Math .
rank: 593
score: 98.685302734375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Cause ( ) , ) ;
rank: 593
score: 98.60005187988281
patch: break ; } } if ; }
rank: 593
score: 98.56395721435547
patch: return f 1 / x 1 ;
rank: 593
score: 98.50193568638393
patch: } break ; new break ;
rank: 593
score: 98.46870561079545
patch: break ; default : f 0 . close ; }
rank: 593
score: 98.42926580255681
patch: break ; break ; break ; if ; continue ;
rank: 593
score: 98.4020004272461
patch: case ; case ; : break ;
rank: 594
score: 98.73189968532986
patch: f 0 = f 1 . 1 ;
rank: 594
score: 98.72276475694444
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; }
rank: 594
score: 98.68488512541118
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( f 1 ) ;
rank: 594
score: 98.59996795654297
patch: return break ; else return break ;
rank: 594
score: 98.5638786764706
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 = f 1 ;
rank: 594
score: 98.50186157226562
patch: break ; / * * / /
rank: 594
score: 98.42906605113636
patch: break ; break ; if ; if * break ;
rank: 595
score: 98.73119399126838
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; case PEGASUS :
rank: 595
score: 98.72199616608796
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ; break ;
rank: 595
score: 98.7181625366211
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( f 0 ) ;
rank: 595
score: 98.68487227590461
patch: return x 1 . 0 ; case PEGASUS : f 0 *= f 1 ;
rank: 595
score: 98.59984241832386
patch: break ; } } return break ; break ; }
rank: 595
score: 98.56272259880515
patch: continue ; case REGULA _ FALSI : f 0 = x 1 ;
rank: 595
score: 98.50148228236607
patch: } if null ; break ;
rank: 595
score: 98.46702880859375
patch: f 0 = Math . min ( ; }
rank: 595
score: 98.4287109375
patch: break ; break ; break ; if ( break ;
rank: 595
score: 98.40171595982143
patch: r = x 1 ; }
rank: 596
score: 98.73114624023438
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( 1 ) ) ;
rank: 596
score: 98.72115523726852
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ; }
rank: 596
score: 98.71792941623264
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 596
score: 98.68476947985198
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x ] ) ;
rank: 596
score: 98.59915161132812
patch: break break ; } } * /
rank: 596
score: 98.46689675071023
patch: break ; default : { return x ; } }
rank: 596
score: 98.42840021306819
patch: break ; break ; if ; return * break ;
rank: 596
score: 98.40162963867188
patch: default : f 1 = x 1 ; }
rank: 597
score: 98.73110816592262
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ , ) ) ;
rank: 597
score: 98.72051323784723
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ; break ;
rank: 597
score: 98.71769714355469
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . out ( ) ) ;
rank: 597
score: 98.68467494419643
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) { return x 1 ;
rank: 597
score: 98.56147904829545
patch: break ; case PEGASUS : do {
rank: 597
score: 98.50082397460938
patch: break ; * if ( break ;
rank: 597
score: 98.46673029119319
patch: break ; > 0 . 0 . 0 = ;
rank: 597
score: 98.42624733664773
patch: break ; break ; if ; return break ; ;
rank: 597
score: 98.40127563476562
patch: float break = 0 . $NUMBER$ ;
rank: 598
score: 98.7308285361842
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ftol ) ;
rank: 598
score: 98.72047119140625
patch: f 0 = 0 . $NUMBER$ ; } }
rank: 598
score: 98.71769445082721
patch: f 0 = compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 598
score: 98.5990982055664
patch: break ; } } return value ;
rank: 598
score: 98.56081255744485
patch: if ( Fast CaMeL Math . abs ( f 1 ) != ftol ) {
rank: 598
score: 98.50060272216797
patch: break ; ; * ; break ;
rank: 598
score: 98.46624755859375
patch: if ( f 0 < 0 . 0 )
rank: 598
score: 98.42580159505208
patch: break ; break ; break ; if break ; / /
rank: 598
score: 98.40054931640626
patch: if ( break ) return 0 . $NUMBER$ ;
rank: 599
score: 98.73051183363971
patch: throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE + ) ;
rank: 599
score: 98.71767849392361
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + $STRING$ ) ;
rank: 599
score: 98.68443359375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ,
rank: 599
score: 98.59907670454545
patch: break ; } break ; } } return break ;
rank: 599
score: 98.56059713924633
patch: break ; case REGULA _ FALSI : / : return x 1 ;
rank: 599
score: 98.50054931640625
patch: break ; /
rank: 599
score: 98.46607208251953
patch: break ; default : * / }
rank: 599
score: 98.425537109375
patch: break ; break ; if ; break ; break ; /
rank: 600
score: 98.71985315393519
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ;
rank: 600
score: 98.71760864257813
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ) ;
rank: 600
score: 98.68430786132812
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , true ) ;
rank: 600
score: 98.59898681640625
patch: } return break ;
rank: 600
score: 98.56035299862133
patch: break ; case REGULA _ FALSI : *= 0 . $NUMBER$ ; }
rank: 600
score: 98.500244140625
patch: } * ; } break ;
rank: 600
score: 98.46493869357639
patch: b 0 . x 0 = ; }
rank: 600
score: 98.4239169034091
patch: break ; break ; return break ; return break ;
rank: 600
score: 98.3995694247159
patch: break ; default : throw new ; } break ;
rank: 601
score: 98.72928195529514
patch: final double fx = compute CaMeL Objective CaMeL Value ( x 0 , f 1 ) ;
rank: 601
score: 98.71902126736111
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; default ;
rank: 601
score: 98.71758270263672
patch: if ( f 1 == 0 . 0 ) { return x 1 ; }
rank: 601
score: 98.68421695106908
patch: throw new Math CaMeL Internal CaMeL Error ( ) . to CaMeL String ( ) ; } }
rank: 601
score: 98.59851837158203
patch: return break ; } else { }
rank: 601
score: 98.558349609375
patch: tmp = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = false ;
rank: 601
score: 98.49918365478516
patch: break ; * ++ * break ;
rank: 601
score: 98.46491033380681
patch: if ( break ; default : break ; } }
rank: 601
score: 98.423583984375
patch: break ; break ; return ; break ; break ;
rank: 601
score: 98.39921875
patch: case ; break ; default : break ; }
rank: 602
score: 98.7188949584961
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 602
score: 98.71713256835938
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ;
rank: 602
score: 98.5982666015625
patch: break ; else break ; break ; } }
rank: 602
score: 98.49909973144531
patch: break ; * * while break ;
rank: 602
score: 98.46477716619319
patch: break ; default : break ; ; } } }
rank: 602
score: 98.42281087239583
patch: break ; break ; if ; if ; { break ;
rank: 602
score: 98.3990478515625
patch: if ( break ) { break ; default :
rank: 603
score: 98.72865513392857
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , this ) ;
rank: 603
score: 98.71859628182871
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ; }
rank: 603
score: 98.68368530273438
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + $STRING$ ; }
rank: 603
score: 98.59815673828125
patch: break ; else break ; } } break ;
rank: 603
score: 98.55759564568015
patch: break ; case PEGASUS : if ( f 1 <= 0 ) {
rank: 603
score: 98.4644775390625
patch: break ; default : break ; case ; }
rank: 603
score: 98.42256673177083
patch: break ; break ; if ; break ; else break ;
rank: 603
score: 98.39859008789062
patch: sb . append ( break ) ; default :
rank: 604
score: 98.72861199629934
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : Math . $NUMBER$ ) ;
rank: 604
score: 98.71800885881696
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ; }
rank: 604
score: 98.71594956341912
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x 0 , x ] ) ;
rank: 604
score: 98.59804958767361
patch: break break ; } } catch break ;
rank: 604
score: 98.55729536576705
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) :
rank: 604
score: 98.46376953125
patch: break ; ; ; default : break ; }
rank: 604
score: 98.4216641512784
patch: break ; break ; if ; { if break ;
rank: 604
score: 98.39845106336806
patch: break ; break ; default : break ;
rank: 605
score: 98.72855631510417
patch: return x 1 ; case PEGASUS : f 0 *= 0 . 0 ;
rank: 605
score: 98.7150650024414
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ - f 1 ) ; }
rank: 605
score: 98.59804958767361
patch: break ; * * break ; break ;
rank: 605
score: 98.55668370863971
patch: children = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 605
score: 98.49805559430804
patch: break ; * ; ; ;
rank: 605
score: 98.46375122070313
patch: break ; > 0 . 0 : ; }
rank: 605
score: 98.42137562144886
patch: break ; break ; break ; ; else break ;
rank: 605
score: 98.39687771267361
patch: break ; default : switch ( method )
rank: 606
score: 98.72843852796052
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ ) ; }
rank: 606
score: 98.71634928385417
patch: return x 0 . x $NUMBER$ ; }
rank: 606
score: 98.68266369047619
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 1 *= f 1 ;
rank: 606
score: 98.55651137408088
patch: return get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; case ANY _ SIDE :
rank: 606
score: 98.46372985839844
patch: break ; } / * * ;
rank: 606
score: 98.42099831321023
patch: break ; break ; / if break ; break ;
rank: 606
score: 98.39646606445312
patch: default : break ; default : break ; }
rank: 607
score: 98.7280985514323
patch: f 0 *= 0 ;
rank: 607
score: 98.71625346522177
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 607
score: 98.71434110753677
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : $STRING$ ; }
rank: 607
score: 98.59752546037946
patch: * * break ; } }
rank: 607
score: 98.55641084558823
patch: continue ; case REGULA _ FALSI : f 0 *= f 0 ;
rank: 607
score: 98.4979248046875
patch: break ; int * break ;
rank: 607
score: 98.46298217773438
patch: break ; default : this . ; ; }
rank: 607
score: 98.42088734019886
patch: break ; break ; break ; if / break ;
rank: 607
score: 98.39485307173295
patch: b 0 = break ; default : break ; }
rank: 608
score: 98.72773180509868
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 = x 1 ;
rank: 608
score: 98.71607666015625
patch: x 0 = 0 . $NUMBER$ ; break ;
rank: 608
score: 98.71424018012152
patch: f 0 *= f 0 . x ;
rank: 608
score: 98.68113014914773
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) , $STRING$ ) ;
rank: 608
score: 98.59703369140625
patch: return break ; super . break ; } }
rank: 608
score: 98.55592974494485
patch: break ; case REGULA _ FALSI : inverted *= 0 . 0 ;
rank: 608
score: 98.49759347098214
patch: } * * break break ;
rank: 608
score: 98.4628573330966
patch: break ; default : f 0 . x ; }
rank: 608
score: 98.41941139914773
patch: break ; break ; ; break ; return break ;
rank: 608
score: 98.39463500976562
patch: default : f 0 = x 1 ; }
rank: 609
score: 98.72749159071181
patch: this . f 1 *= f 1 ;
rank: 609
score: 98.716064453125
patch: inverted *= 0 . $NUMBER$ ; break ;
rank: 609
score: 98.714111328125
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + $STRING$ ;
rank: 609
score: 98.68085271661931
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) )
rank: 609
score: 98.596923828125
patch: break ; } } } catch break ;
rank: 609
score: 98.5548454733456
patch: break ; case REGULA _ FALSI : return 0 . $NUMBER$ ; }
rank: 609
score: 98.49745396205357
patch: result = break ; break ;
rank: 609
score: 98.46241978236607
patch: b 0 = x ; }
rank: 609
score: 98.41750081380208
patch: break ; break ; break ; break ; } break ;
rank: 609
score: 98.39429389105902
patch: break ; default : return 1 . ;
rank: 610
score: 98.72730601917614
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , ) ;
rank: 610
score: 98.71475830078126
patch: get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 610
score: 98.71276177300348
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( ) ) ;
rank: 610
score: 98.59690856933594
patch: return 0 . ; ; break ;
rank: 610
score: 98.55455824908088
patch: it . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 610
score: 98.49678257533482
patch: } break ; * break ;
rank: 610
score: 98.46198064630681
patch: break ; default : f 1 = ; ; }
rank: 610
score: 98.4172030362216
patch: break ; if ; break ; / / / /
rank: 610
score: 98.39403686523437
patch: break ; > 0 . 0 = x ;
rank: 611
score: 98.72689819335938
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error (
rank: 611
score: 98.71332659040179
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 611
score: 98.7127197265625
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + $STRING$ ;
rank: 611
score: 98.68001098632813
patch: break ; case PEGASUS : f 0 *= f 1 ; inverted = ! inverted ;
rank: 611
score: 98.59688895089286
patch: break ; * } } }
rank: 611
score: 98.55243474786931
patch: case REGULA _ FALSI : / :
rank: 611
score: 98.4171142578125
patch: break ; break ; return ; if ; break ;
rank: 611
score: 98.39396528764205
patch: break ; > 0 . 0 = - 1 ;
rank: 612
score: 98.72677001953124
patch: return compute CaMeL Objective CaMeL Value ( ) ;
rank: 612
score: 98.71331787109375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ; break ;
rank: 612
score: 98.71247414981617
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ * f 1 ) ;
rank: 612
score: 98.67964099702381
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 , x 1 ) ; break ;
rank: 612
score: 98.59681396484375
patch: return 0 . value ; } } else {
rank: 612
score: 98.55223999023437
patch: case LEFT _ SIDE : return x 1 ;
rank: 612
score: 98.49665178571429
patch: } break ; ; ; *
rank: 612
score: 98.41640218098958
patch: break ; break ; if ; if ; * break ;
rank: 612
score: 98.39360894097223
patch: break ; case ; case ; abs :
rank: 613
score: 98.71231842041016
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; } }
rank: 613
score: 98.71074567522321
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = x 1 ;
rank: 613
score: 98.67933872767857
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + $STRING$ ) ; }
rank: 613
score: 98.59626770019531
patch: } break ; for break ; }
rank: 613
score: 98.55213838465073
patch: if ( Fast CaMeL Math . abs ( f 1 <= ftol ) ) {
rank: 613
score: 98.49650573730469
patch: break ; * break ; case ;
rank: 613
score: 98.46075439453125
patch: break ; default : break )
rank: 613
score: 98.41550514914773
patch: break ; break ; break ; return / break ;
rank: 613
score: 98.39358859592014
patch: b 0 = x $NUMBER$ ; break ;
rank: 614
score: 98.72553567325367
patch: e . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ;
rank: 614
score: 98.7119140625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . abs ( ) ) ;
rank: 614
score: 98.6788330078125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 614
score: 98.59617106119792
patch: return break ; this . break ; else
rank: 614
score: 98.55054473876953
patch: if ( fx == 0 ) {
rank: 614
score: 98.49618530273438
patch: } break ; break ; default ;
rank: 614
score: 98.41542746803977
patch: break ; break ; if ( break ; break ;
rank: 614
score: 98.39218139648438
patch: v 1 = x 1 ; }
rank: 615
score: 98.72536214192708
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( + x 1 ) ;
rank: 615
score: 98.71179962158203
patch: f 1 ] *= f 1 ;
rank: 615
score: 98.70981174045139
patch: if ( fx == 0 . 0 )
rank: 615
score: 98.67835053943452
patch: break ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; break ; }
rank: 615
score: 98.59613715277777
patch: return 0 . ; * break ; else
rank: 615
score: 98.54959106445312
patch: case LEFT _ SIDE :
rank: 615
score: 98.49617767333984
patch: break ; break ; ; ; ;
rank: 615
score: 98.46016068892045
patch: break false ; default : break false ; } }
rank: 615
score: 98.41514078776042
patch: break ; if ; break ; if break ; break ;
rank: 615
score: 98.39142608642578
patch: z 1 = x 1 ; }
rank: 616
score: 98.72513834635417
patch: break ; case PEGASUS : f 0 *= 0 . 1 ; break ;
rank: 616
score: 98.71161566840277
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String f 1 ) ;
rank: 616
score: 98.70945521763393
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 0 ) ;
rank: 616
score: 98.67805480957031
patch: return x 1 = x 1 ;
rank: 616
score: 98.59560546875
patch: break ; else break ; } } } }
rank: 616
score: 98.54943129595588
patch: this . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 616
score: 98.49574497767857
patch: break ; ] * break ;
rank: 616
score: 98.46010520241477
patch: break ; default : throw new Runtime ; } }
rank: 616
score: 98.41439819335938
patch: break ; break ; break ; break ; else break ;
rank: 616
score: 98.39033508300781
patch: break . 0 = x $NUMBER$ ;
rank: 617
score: 98.72473862591912
patch: inverted = ! compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ;
rank: 617
score: 98.71161566840277
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ; }
rank: 617
score: 98.70925467354911
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ;
rank: 617
score: 98.67798961292614
patch: return x 0 . 1 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 617
score: 98.54913689108456
patch: System . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 617
score: 98.49571228027344
patch: break break ; ; ; / /
rank: 617
score: 98.45944213867188
patch: b 0 . x 1 = x 0 ;
rank: 617
score: 98.41371848366477
patch: break ; if ; if ; break ; break ;
rank: 617
score: 98.39000108506944
patch: break ; > 0 . $NUMBER$ = ;
rank: 618
score: 98.72451602711396
patch: return f 1 ; case PEGASUS : f 0 *= f 1 ;
rank: 618
score: 98.71151394314236
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get ( ) ;
rank: 618
score: 98.707275390625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 1 ) ;
rank: 618
score: 98.67793201264881
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 ) ) ; }
rank: 618
score: 98.59505615234374
patch: } break ; break ; } } break ;
rank: 618
score: 98.5483757467831
patch: LOG . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + allowed ) ; }
rank: 618
score: 98.49564034598214
patch: break ; * ; / }
rank: 618
score: 98.41319691051136
patch: break ; break ; if ; if ; / /
rank: 618
score: 98.38973999023438
patch: break ; default : f 1 -= break ;
rank: 619
score: 98.72443704044117
patch: throw new Math CaMeL Internal CaMeL Error ( get CaMeL Runtime ( ) + ) ;
rank: 619
score: 98.71135397518383
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) 1 ) ;
rank: 619
score: 98.70701381138393
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = ! inverted ;
rank: 619
score: 98.59501139322917
patch: break ; * break ; } break ;
rank: 619
score: 98.54771513097427
patch: case REGULA _ FALSI : f 0 *= 0 . 0 ; }
rank: 619
score: 98.49530029296875
patch: break ; break ; err ;
rank: 619
score: 98.45882415771484
patch: break ; default : if ; }
rank: 619
score: 98.41185413707386
patch: break ; if ; break ; break ; if ;
rank: 619
score: 98.38950417258523
patch: if ( f 1 < 0 . $NUMBER$ ) {
rank: 620
score: 98.7242919921875
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) - ) ;
rank: 620
score: 98.71120091488487
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 ) + ) ;
rank: 620
score: 98.70693533761161
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = x 0 ;
rank: 620
score: 98.67717950994319
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= f 1 ; }
rank: 620
score: 98.59414236886161
patch: return 0 ; } } }
rank: 620
score: 98.54701861213235
patch: get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 *= f 1 ;
rank: 620
score: 98.4950180053711
patch: break ; / / / * ;
rank: 620
score: 98.45871988932292
patch: break ; default : continue ; ; }
rank: 620
score: 98.4108553799716
patch: break ; break ; break ; if -- break ;
rank: 620
score: 98.3885165127841
patch: break ; > 0 . 0 = 0 ; }
rank: 621
score: 98.7241741677989
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Message ( $STRING$ ) ) ;
rank: 621
score: 98.71101379394531
patch: f 0 : throw new Math CaMeL Internal CaMeL Error ( ) ; } }
rank: 621
score: 98.67679268973214
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( f
rank: 621
score: 98.59389822823661
patch: } break ; } else {
rank: 621
score: 98.54684627757354
patch: result = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 621
score: 98.49381256103516
patch: try { break ; break ; }
rank: 621
score: 98.45841841264205
patch: break ; default : f 0 ++ ; ; }
rank: 621
score: 98.4094950358073
patch: break ; break ; break ; if ; ++ break ;
rank: 621
score: 98.38671875
patch: break ; default : return x $NUMBER$ ; }
rank: 622
score: 98.72412109375
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) }
rank: 622
score: 98.71068572998047
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 0 ) ; }
rank: 622
score: 98.70570882161458
patch: f 0 *= f 0 ; break ;
rank: 622
score: 98.67646135602679
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = ! inverted ;
rank: 622
score: 98.59355163574219
patch: return value ; } break ; }
rank: 622
score: 98.5464226217831
patch: continue ; case REGULA _ FALSI : f 0 = x 0 ;
rank: 622
score: 98.49122111002605
patch: break ; / else {
rank: 622
score: 98.45817260742187
patch: break ; default : this . ; } ;
rank: 622
score: 98.4087801846591
patch: break ; break ; if ; { break ; /
rank: 622
score: 98.38671875
patch: break ; > 0 . 0 += x 1 ;
rank: 623
score: 98.7240574048913
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) , $STRING$ ) ;
rank: 623
score: 98.70933837890625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , 0 ) ;
rank: 623
score: 98.7056396484375
patch: f 0 = 0 . 1 ; break ;
rank: 623
score: 98.67611929086539
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ;
rank: 623
score: 98.59334019252232
patch: break * break ; } }
rank: 623
score: 98.5463508157169
patch: context . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ; }
rank: 623
score: 98.49110630580357
patch: } * ; break ; /
rank: 623
score: 98.40874689275569
patch: break ; break ; if break ; * break ;
rank: 624
score: 98.72394875919117
patch: double fx = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 624
score: 98.7092514038086
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS , ) ;
rank: 624
score: 98.6751708984375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ;
rank: 624
score: 98.59323952414773
patch: break ; break ; } } catch break ; }
rank: 624
score: 98.54425811767578
patch: tmp 1 *= 0 . $NUMBER$ ;
rank: 624
score: 98.49024309430804
patch: if break ; break ; }
rank: 624
score: 98.45789930555556
patch: break ; default : break true ; }
rank: 624
score: 98.40869140625
patch: break ; break ; break ; / if break ;
rank: 624
score: 98.38596413352273
patch: break ; default : f 0 = ; break ;
rank: 625
score: 98.72392578125
patch: break ; case PEGASUS : String
rank: 625
score: 98.70921630859375
patch: { throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; }
rank: 625
score: 98.70416259765625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ; break ;
rank: 625
score: 98.59323120117188
patch: break ; } break ; for break ; }
rank: 625
score: 98.54411046645221
patch: case REGULA _ FALSI : if ( f 1 <= 0 ) {
rank: 625
score: 98.49018096923828
patch: break ; / / / ; /
rank: 625
score: 98.45776977539063
patch: break ; default : ; } ; } ;
rank: 625
score: 98.40631658380681
patch: break ; break ; break ; ; throw break ;
rank: 625
score: 98.385302734375
patch: this . x 0 = x $NUMBER$ ; }
rank: 626
score: 98.7239002046131
patch: final double rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 626
score: 98.7087761374081
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ,
rank: 626
score: 98.5931063565341
patch: } break ; break ; } } break ; }
rank: 626
score: 98.54334214154412
patch: case REGULA _ FALSI : return x 1 *= 0 . $NUMBER$ ;
rank: 626
score: 98.48985072544643
patch: break ; * * ; ;
rank: 626
score: 98.45736083984374
patch: break ; default : f 0 -= ; }
rank: 626
score: 98.4061612215909
patch: break ; break ; try if break ; break ;
rank: 626
score: 98.38492838541667
patch: return ; default : return break ; }
rank: 627
score: 98.72323947482639
patch: case PEGASUS : break ;
rank: 627
score: 98.70868791852679
patch: x 0 *= f 1 ;
rank: 627
score: 98.70151192801339
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } return x 0 ;
rank: 627
score: 98.67361450195312
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) $STRING$ ) ;
rank: 627
score: 98.59308416193181
patch: break ; break ; } } else return break ;
rank: 627
score: 98.54315185546875
patch: if ( f 1 >= 0 ) {
rank: 627
score: 98.48910958426339
patch: break ; case ; * /
rank: 627
score: 98.45687430245536
patch: b 0 = ; } }
rank: 627
score: 98.40388997395833
patch: break ; break ; if ; if ; / / /
rank: 627
score: 98.38435363769531
patch: } f 0 = x 1 ;
rank: 628
score: 98.72318812779018
patch: switch ( f 1 ) {
rank: 628
score: 98.70836724175348
patch: f 1 = x 0 ; break ;
rank: 628
score: 98.70149230957031
patch: f 0 *= x 0 ; }
rank: 628
score: 98.5929287997159
patch: return 0 . ; break ; } break ; }
rank: 628
score: 98.54273139105902
patch: if ( f 1 <= fx ) {
rank: 628
score: 98.48869977678571
patch: break ; ; - break ;
rank: 628
score: 98.45652553013393
patch: b 0 = x 0 ;
rank: 628
score: 98.40374200994319
patch: break ; break ; break ; } if break ;
rank: 628
score: 98.38401794433594
patch: break ; } break ; default :
rank: 629
score: 98.7227294921875
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( + ) ) ;
rank: 629
score: 98.708251953125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) ; }
rank: 629
score: 98.70144217354911
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } return x 1 ;
rank: 629
score: 98.6735107421875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . index CaMeL Of ( ) ;
rank: 629
score: 98.59290228949652
patch: break ; * / return break ; }
rank: 629
score: 98.54204559326172
patch: s 0 *= 0 . $NUMBER$ ;
rank: 629
score: 98.48866780598958
patch: break ; ; * *
rank: 629
score: 98.45646158854167
patch: break ; default : System . out ;
rank: 629
score: 98.40292358398438
patch: break ; break ; break ; if ; break ; int
rank: 629
score: 98.3834228515625
patch: } break ; default : return break ;
rank: 630
score: 98.72264462425595
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE + ) ;
rank: 630
score: 98.70089721679688
patch: return x 0 . x 0 ; } }
rank: 630
score: 98.67345660665761
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Absolute CaMeL Accuracy ( ) ) ; break ;
rank: 630
score: 98.59288330078125
patch: return 0 . length ; break ; } }
rank: 630
score: 98.48844909667969
patch: } * * / break ; /
rank: 630
score: 98.4564208984375
patch: break ; default : break new ; }
rank: 630
score: 98.4022928873698
patch: break ; break ; if break ; break ; break ;
rank: 630
score: 98.3826904296875
patch: this . break ; case ; case ; :
rank: 631
score: 98.7226329985119
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , ) ;
rank: 631
score: 98.70806206597223
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . equals ( x 1 ) ) ;
rank: 631
score: 98.70020967371323
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ) ;
rank: 631
score: 98.59285278320313
patch: } break ; } break ; break ; }
rank: 631
score: 98.53887939453125
patch: state = x 1 ;
rank: 631
score: 98.48747907366071
patch: break ; start return break ;
rank: 631
score: 98.45635375976562
patch: break ; } ; default : break ; }
rank: 631
score: 98.39992453835227
patch: break ; break ; ; / if ; break ;
rank: 631
score: 98.3825927734375
patch: break ; f 0 = x 1 ; }
rank: 632
score: 98.72257486979167
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + ) ; }
rank: 632
score: 98.70779758029514
patch: f 1 = get CaMeL Absolute CaMeL Accuracy ( ) . do CaMeL Solve ( ) ;
rank: 632
score: 98.69993373325893
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx , atol ) ;
rank: 632
score: 98.67322998046875
patch: return x 0 . 0 ; case PEGASUS : f 0 *= 0 . $NUMBER$ ;
rank: 632
score: 98.59223090277777
patch: break ; } } } break ; else
rank: 632
score: 98.5386474609375
patch: return x 1 . 0 = x 1 ;
rank: 632
score: 98.48746163504464
patch: break break ; / * /
rank: 632
score: 98.456298828125
patch: break ; default : System . ; ; } ;
rank: 632
score: 98.3995361328125
patch: break ; break ; break ; / / / / /
rank: 632
score: 98.38245307074652
patch: } break ; case ; case ; :
rank: 633
score: 98.72230747767857
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ $STRING$ ) ) ;
rank: 633
score: 98.70768657483552
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) 0 ) ;
rank: 633
score: 98.69977438038794
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 0 ) ;
rank: 633
score: 98.67305131392045
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) )
rank: 633
score: 98.59184434678819
patch: return break ; break ; } } }
rank: 633
score: 98.53767903645833
patch: tmp = get CaMeL Min ( ) ;
rank: 633
score: 98.48690795898438
patch: break ; * * for break ;
rank: 633
score: 98.39922540838069
patch: break ; break ; while ; if ; break ;
rank: 633
score: 98.38210623604911
patch: break ; case ; abs :
rank: 634
score: 98.72151322798295
patch: break ; case REGULA _ FALSI : verify CaMeL Bracketing ( x 0 , x 1 ) ;
rank: 634
score: 98.7076416015625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , fx ) ;
rank: 634
score: 98.69890726023706
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ; }
rank: 634
score: 98.5916415127841
patch: break ; } break ; } } break ; }
rank: 634
score: 98.53615025111607
patch: n *= 0 . 0 ;
rank: 634
score: 98.48599679129464
patch: } / * break ; /
rank: 634
score: 98.45584716796876
patch: b 0 = x $NUMBER$ - break ; }
rank: 634
score: 98.39773559570312
patch: break ; break ; =
rank: 634
score: 98.3804931640625
patch: break ; default : break ; break ;
rank: 635
score: 98.72044836956522
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ) ;
rank: 635
score: 98.70762875205592
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( fx ) ) ;
rank: 635
score: 98.6988525390625
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 1 ) ;
rank: 635
score: 98.67300851004464
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; break ;
rank: 635
score: 98.59091525607639
patch: break ; } } } break ; ;
rank: 635
score: 98.53327941894531
patch: b 0 *= 0 . $NUMBER$ ;
rank: 635
score: 98.48587036132812
patch: break ; / ; / / /
rank: 635
score: 98.45516357421874
patch: break ; default : f 1 ; } }
rank: 635
score: 98.397705078125
patch: return ; { break ;
rank: 635
score: 98.37992858886719
patch: b 0 = break ; default :
rank: 636
score: 98.7203952955163
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Message ( ) ) ; }
rank: 636
score: 98.69825060614224
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 1 ) ;
rank: 636
score: 98.67296142578125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ; }
rank: 636
score: 98.59075927734375
patch: return 0 . 0 ; / * break ;
rank: 636
score: 98.48583221435547
patch: break ; ; ; int break ;
rank: 636
score: 98.45506702769886
patch: break ; case ; default : throw ; } }
rank: 636
score: 98.39725748697917
patch: break ; ; if ;
rank: 636
score: 98.3797836303711
patch: break ; >= 0 . 0 :
rank: 637
score: 98.71952892485119
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$
rank: 637
score: 98.70714460100446
patch: f 1 return x 1 ;
rank: 637
score: 98.698046875
patch: return x 0 . x 1 ; } }
rank: 637
score: 98.67202360733695
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , {
rank: 637
score: 98.52921142578126
patch: return x 1 . 0 = x 0 ;
rank: 637
score: 98.48518371582031
patch: break ; / * ; break ;
rank: 637
score: 98.45482526506696
patch: break * / * / ;
rank: 637
score: 98.39712524414062
patch: break ; break ; break ; if ; -- break ;
rank: 637
score: 98.37904052734375
patch: if ( break ) { if ( break )
rank: 638
score: 98.71812679893092
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE ) ;
rank: 638
score: 98.70692443847656
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; } return x 1 ;
rank: 638
score: 98.69743516710069
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , atol ) ;
rank: 638
score: 98.671826171875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , 0 ) ;
rank: 638
score: 98.59059143066406
patch: return break ; / * break ;
rank: 638
score: 98.52066476004464
patch: return x 1 . 0 ;
rank: 638
score: 98.48503875732422
patch: break ; break ; switch break ;
rank: 638
score: 98.39692826704545
patch: break ; break ; } break ; return break ;
rank: 638
score: 98.37811279296875
patch: v 1 = x $NUMBER$ ; }
rank: 639
score: 98.71726296164773
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this ) ) ;
rank: 639
score: 98.69679768880208
patch: break ; case PEGASUS ;
rank: 639
score: 98.67154947916667
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Absolute CaMeL Accuracy ( ) ; break ;
rank: 639
score: 98.51928032769098
patch: if ( f 1 >= fx ) {
rank: 639
score: 98.48462931315105
patch: return * * break ;
rank: 639
score: 98.45343889508929
patch: v 0 = x 1 ;
rank: 639
score: 98.39671741832386
patch: break ; break ; if ; * ; break ;
rank: 640
score: 98.71613226996527
patch: final double fx *= 0 . $NUMBER$ ;
rank: 640
score: 98.7064568014706
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ;
rank: 640
score: 98.59050835503473
patch: break ; } if ; return break ;
rank: 640
score: 98.48458099365234
patch: break break ; break { break ;
rank: 640
score: 98.39669799804688
patch: break ; break ; break ; if ; ; break ;
rank: 640
score: 98.37797037760417
patch: default : f 0 = break ; }
rank: 641
score: 98.71604410807292
patch: { f 0 *= 0 . 1 ;
rank: 641
score: 98.7061767578125
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 641
score: 98.69666399274554
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 1 ) ;
rank: 641
score: 98.66974508351294
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x ] ) ;
rank: 641
score: 98.59047629616477
patch: break ; else break ; } } break ; }
rank: 641
score: 98.51466369628906
patch: first 0 *= 0 . $NUMBER$ ;
rank: 641
score: 98.48399353027344
patch: break ; int * / break ;
rank: 641
score: 98.45147705078125
patch: } ; break ; default :
rank: 641
score: 98.3960293856534
patch: break ; break ; break ; if ; = ;
rank: 641
score: 98.37765842013889
patch: break . 0 = break . 0 ;
rank: 642
score: 98.715771484375
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( method ) ) ;
rank: 642
score: 98.70609828404018
patch: b 1 = f 1 ;
rank: 642
score: 98.66950073242188
patch: break ; case REGULA _ FALSI : f 0 = 0 . $NUMBER$ ; break ;
rank: 642
score: 98.59042019314236
patch: return 0 . length ; } } else
rank: 642
score: 98.48343658447266
patch: break ; break ; / * /
rank: 642
score: 98.39577414772727
patch: break ; break ; break ; if break ; int
rank: 642
score: 98.37509494357639
patch: break ; default : { return ; }
rank: 643
score: 98.71554432744566
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ) ;
rank: 643
score: 98.7057746438419
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 1 , x ] ) ;
rank: 643
score: 98.69530462449596
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ,
rank: 643
score: 98.59036865234376
patch: return 0 . break ; } } else {
rank: 643
score: 98.50150553385417
patch: return 0 . $NUMBER$ ;
rank: 643
score: 98.4833984375
patch: break ; / - * break ;
rank: 643
score: 98.45115966796875
patch: f 0 = x 1 * break ; }
rank: 643
score: 98.39558919270833
patch: break ; break ; break ; return ; return break ;
rank: 643
score: 98.37406616210937
patch: break ; default : return ; } break ;
rank: 644
score: 98.7153653231534
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , f 1 ) ;
rank: 644
score: 98.7056396484375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) - 1 ) ;
rank: 644
score: 98.69488525390625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ; break ;
rank: 644
score: 98.668935546875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ,
rank: 644
score: 98.59035237630208
patch: } break ; } } catch break ;
rank: 644
score: 98.48295593261719
patch: break ; else { return break ;
rank: 644
score: 98.3941317471591
patch: break ; break ; break ; if ; try /
rank: 644
score: 98.373974609375
patch: case ; case ; : break ; default :
rank: 645
score: 98.71523902529762
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) , ) ;
rank: 645
score: 98.70548502604167
patch: { throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ;
rank: 645
score: 98.69482421875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = x 1 ;
rank: 645
score: 98.66861572265626
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ;
rank: 645
score: 98.5902099609375
patch: } if ; return break ; }
rank: 645
score: 98.5003662109375
patch: t 1 *= 0 . 0 ;
rank: 645
score: 98.48274993896484
patch: break ; * else return break ;
rank: 645
score: 98.45093883167614
patch: break ; default : this . x ; } }
rank: 645
score: 98.3911465731534
patch: break ; break ; if ; { else break ;
rank: 645
score: 98.37393951416016
patch: default : f 0 = break ;
rank: 646
score: 98.7148670014881
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) + ) ;
rank: 646
score: 98.69476318359375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ; break ;
rank: 646
score: 98.66824951171876
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) + $STRING$ ) ;
rank: 646
score: 98.59009399414063
patch: return break ; else
rank: 646
score: 98.49957885742188
patch: return x 0 . 0 = x 1 ;
rank: 646
score: 98.48246765136719
patch: break ; break ; case ; out
rank: 646
score: 98.45013982599431
patch: break ; default : f 0 -- ; } }
rank: 646
score: 98.39053344726562
patch: break ; if ; break ; break ; else break ;
rank: 646
score: 98.37391493055556
patch: b 0 = x 1 ; break ;
rank: 647
score: 98.71449788411458
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : x 1 ) ;
rank: 647
score: 98.69472971270162
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Absolute CaMeL Accuracy ( ) ) ) ;
rank: 647
score: 98.66822451636905
patch: return x 0 . 0 ; case REGULA _ FALSI : f 1 *= f 1 ;
rank: 647
score: 98.59008026123047
patch: break ; * / } break ;
rank: 647
score: 98.49500274658203
patch: c 1 *= 0 . $NUMBER$ ;
rank: 647
score: 98.48197937011719
patch: } break ; break ; * ;
rank: 647
score: 98.44971313476563
patch: b 0 . x 1 = x 1 ;
rank: 647
score: 98.39033647017045
patch: break ; break ; break ; { break ; }
rank: 647
score: 98.3724609375
patch: break ; default : throw break false ; }
rank: 648
score: 98.71433423913044
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Runtime ( ) ) ; }
rank: 648
score: 98.70467336554276
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ $STRING$ ;
rank: 648
score: 98.668212890625
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + ) ;
rank: 648
score: 98.58983696831598
patch: } if break ; } break ; }
rank: 648
score: 98.49459228515624
patch: return x 0 . 0 = x 0 ;
rank: 648
score: 98.48178100585938
patch: } break ; break ; out ;
rank: 648
score: 98.44959605823864
patch: if ( ; break ; default : break ; }
rank: 648
score: 98.38958740234375
patch: break ; break ; if / / / / / /
rank: 648
score: 98.37211608886719
patch: break ; default : return - ;
rank: 649
score: 98.71425559303977
patch: break ; case PEGASUS : f 0 *= f 1 / ( f 1 + fx ) ;
rank: 649
score: 98.69410021551724
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 1 = x 1 ;
rank: 649
score: 98.66809692382813
patch: return x 0 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 649
score: 98.5895663174716
patch: break ; } else { break ; break ; }
rank: 649
score: 98.49399239676339
patch: result *= 0 . $NUMBER$ ;
rank: 649
score: 98.48136138916016
patch: break ; ; break ; / /
rank: 649
score: 98.44915093315973
patch: b 0 = ; break ; default :
rank: 649
score: 98.38953746448864
patch: break ; break ; break ; else return break ;
rank: 649
score: 98.37210518973214
patch: break ; default : do {
rank: 650
score: 98.71418200041118
patch: final double atol = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 650
score: 98.70447455512152
patch: return x 1 . x 1 ; }
rank: 650
score: 98.69307708740234
patch: f 0 *= 0 ; break ;
rank: 650
score: 98.66809663318452
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 0 ) ; break ;
rank: 650
score: 98.58933715820312
patch: break ; * break ; } } break ;
rank: 650
score: 98.49237060546875
patch: return - 0 . $NUMBER$ ;
rank: 650
score: 98.481201171875
patch: break ; * * break ; *
rank: 650
score: 98.44884144176136
patch: break ; ; case break ; default : break ;
rank: 650
score: 98.38872736150569
patch: break ; break ; break ; break ; this ;
rank: 650
score: 98.37166137695313
patch: break ; default : break - 1 ; }
rank: 651
score: 98.71389334542411
patch: if ( f 1 ) {
rank: 651
score: 98.70390050551471
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . do CaMeL Solve ( ) ;
rank: 651
score: 98.6928290005388
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 0 = x 1 ;
rank: 651
score: 98.66795935997597
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ] ) ;
rank: 651
score: 98.58904266357422
patch: * break ; } break ; }
rank: 651
score: 98.49169921875
patch: { switch ( method ) {
rank: 651
score: 98.48073323567708
patch: return break ; ; *
rank: 651
score: 98.38841663707386
patch: break ; break ; if ; ; / / /
rank: 651
score: 98.37156677246094
patch: default : f 0 = ; }
rank: 652
score: 98.713720703125
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) }
rank: 652
score: 98.70379997702206
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 1 , x 0 ) ;
rank: 652
score: 98.69260079520089
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 1 = fx ;
rank: 652
score: 98.66794921875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( x 0 , x 1 ) ;
rank: 652
score: 98.58899688720703
patch: return 1 ; } } break ;
rank: 652
score: 98.49153137207031
patch: return f 0 . $NUMBER$ ; }
rank: 652
score: 98.44711739676339
patch: break ; } * break ;
rank: 652
score: 98.38840553977273
patch: break ; break ; break ; if ; * /
rank: 652
score: 98.37122802734375
patch: break ; default : default : break ; }
rank: 653
score: 98.71226099917763
patch: final double rtol = compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 653
score: 98.7037353515625
patch: f 0 *= 0 . x 1 ;
rank: 653
score: 98.69240806842673
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 0 ) ;
rank: 653
score: 98.5885009765625
patch: return * break ; } } break ; }
rank: 653
score: 98.4913330078125
patch: continue ; default :
rank: 653
score: 98.47833251953125
patch: } * * * break ; }
rank: 653
score: 98.44548882378473
patch: break ; default : ; } ; ;
rank: 653
score: 98.38812810724431
patch: break ; break ; if / break ; break ;
rank: 653
score: 98.37099202473958
patch: if ( break ) { return ; }
rank: 654
score: 98.71203031994048
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , $NUMBER$ ) ;
rank: 654
score: 98.70355987548828
patch: f 1 *= fx . $NUMBER$ ;
rank: 654
score: 98.69203404017857
patch: f 0 *= 0 ; }
rank: 654
score: 98.667158203125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , new double [
rank: 654
score: 98.5884121981534
patch: return 0 . 0 ; } break ; } }
rank: 654
score: 98.49055786132813
patch: System . log ( $STRING$ + method ) ;
rank: 654
score: 98.47732543945312
patch: break ; * / break ; /
rank: 654
score: 98.44541625976562
patch: break ; default : this . set ; }
rank: 654
score: 98.38674094460227
patch: break ; break ; if ; * return break ;
rank: 655
score: 98.71194893973214
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , ) ; }
rank: 655
score: 98.70347290039062
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( $STRING$ ) + ) ;
rank: 655
score: 98.69198172433036
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = x 0 ;
rank: 655
score: 98.66690673828126
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Name ( ) + $STRING$ ) ;
rank: 655
score: 98.58831232244319
patch: break ; } } else { break ; } }
rank: 655
score: 98.48873901367188
patch: b 1 *= 0 . $NUMBER$ ;
rank: 655
score: 98.47705078125
patch: break ; break ; * / {
rank: 655
score: 98.44507707868304
patch: b 0 = ; } ;
rank: 655
score: 98.38623046875
patch: break ; if ; break ; ; return break ;
rank: 655
score: 98.37063598632812
patch: if ( f 1 < 0 . $NUMBER$ ;
rank: 656
score: 98.71187918526786
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( f 1 ) ) ;
rank: 656
score: 98.70339626736111
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( ) ) ;
rank: 656
score: 98.69191978717673
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Min ( ) ) ) ;
rank: 656
score: 98.66680617559524
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 0 = f 1 ;
rank: 656
score: 98.58811645507812
patch: break ; } } break ; } else {
rank: 656
score: 98.48819732666016
patch: z 0 *= 0 . $NUMBER$ ;
rank: 656
score: 98.47628784179688
patch: break ; / case { break ;
rank: 656
score: 98.44487847222223
patch: break ; case break ; case break :
rank: 656
score: 98.38320922851562
patch: break ; break ; break ; break ; / / /
rank: 656
score: 98.37036743164063
patch: break ; case ; case ; protected ? :
rank: 657
score: 98.7113620923913
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . new Math CaMeL Internal CaMeL Error ( )
rank: 657
score: 98.7033935546875
patch: f 1 *= f 1 . x 1 ;
rank: 657
score: 98.69181315104167
patch: } f 0 *= 0 . $NUMBER$ ;
rank: 657
score: 98.58790172230114
patch: return break ; } else { break ; } }
rank: 657
score: 98.48759765625
patch: case RIGHT _ SIDE : return x 1 ;
rank: 657
score: 98.4759521484375
patch: break ; * * int break ;
rank: 657
score: 98.44417317708333
patch: break * / * break * / }
rank: 657
score: 98.38309733072917
patch: break ; break ; break ; if ; = break ;
rank: 657
score: 98.36968994140625
patch: return ; default : return - 1 ; }
rank: 658
score: 98.71081012228261
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 658
score: 98.70332641601563
patch: } verify CaMeL Bracketing ( x 0 ) ;
rank: 658
score: 98.6661885579427
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) {
rank: 658
score: 98.58782958984375
patch: } else if ; * break ;
rank: 658
score: 98.48640950520833
patch: t 0 *= 0 . $NUMBER$ ; }
rank: 658
score: 98.4757308959961
patch: break ; ; / / ; ;
rank: 658
score: 98.3826192220052
patch: break ; break ; if ; { if ; break ;
rank: 658
score: 98.36951361762152
patch: b 1 = x $NUMBER$ ; break ;
rank: 659
score: 98.71026000976562
patch: f 1 *= 1 . $NUMBER$ ; break ;
rank: 659
score: 98.7032470703125
patch: f 0 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 659
score: 98.69113251657197
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 659
score: 98.66607111150569
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; inverted = f 1 ;
rank: 659
score: 98.58760209517045
patch: break ; } } } super . break ; }
rank: 659
score: 98.48213195800781
patch: } else { return x 1 ;
rank: 659
score: 98.47470092773438
patch: break { break ; break ; }
rank: 659
score: 98.44321986607143
patch: break ; case break ; ;
rank: 659
score: 98.3824462890625
patch: if ; { break ;
rank: 659
score: 98.36873779296874
patch: return 1 . 0 ; default : break ;
rank: 660
score: 98.70970569957386
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , ftol ) ;
rank: 660
score: 98.69087524414063
patch: inverted : f 0 *= 0 . $NUMBER$ ;
rank: 660
score: 98.58714294433594
patch: return break ; x 1 ; }
rank: 660
score: 98.4745101928711
patch: break ; case ; break ; ;
rank: 660
score: 98.44260079520089
patch: return x 1 * ; }
rank: 660
score: 98.38052368164062
patch: break ; break ; if ; * break ; break ;
rank: 660
score: 98.3684326171875
patch: return 0 . 0 ; case ; default :
rank: 661
score: 98.70921495225694
patch: f 1 *= f 1 + fx ;
rank: 661
score: 98.70191786024306
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + $NUMBER$ ) ;
rank: 661
score: 98.69035993303571
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Min ( ) ) ) ;
rank: 661
score: 98.5869140625
patch: break ; break ; } else if break ; }
rank: 661
score: 98.48128509521484
patch: } else {
rank: 661
score: 98.47422790527344
patch: break ; / * * ; /
rank: 661
score: 98.44212995256696
patch: f 0 = ; break ;
rank: 661
score: 98.37973022460938
patch: break ; break ; break ; break ; if ; ;
rank: 661
score: 98.3681640625
patch: f 0 = x $NUMBER$ ; break ;
rank: 662
score: 98.70911929481908
patch: break ; case REGULA _ FALSI : f 0 *= f 1 . $NUMBER$ ;
rank: 662
score: 98.69011579241071
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 0 ) ;
rank: 662
score: 98.66537475585938
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) + $STRING$ ; }
rank: 662
score: 98.58671431107955
patch: break ; } break ; } catch break ; }
rank: 662
score: 98.480810546875
patch: return x 1 . $NUMBER$ = x 1 ;
rank: 662
score: 98.47393035888672
patch: return break ; break ; out ;
rank: 662
score: 98.44166782924107
patch: break ; default ; continue ;
rank: 662
score: 98.3790283203125
patch: break ; break ; if ; if / / / /
rank: 662
score: 98.36704508463542
patch: break ; default : case ; default :
rank: 663
score: 98.70906372070313
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) }
rank: 663
score: 98.68886021205357
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return f 1 ;
rank: 663
score: 98.66520552201705
patch: return x 1 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; break ;
rank: 663
score: 98.58664279513889
patch: break ; } } else break ; }
rank: 663
score: 98.4735107421875
patch: break ; value * * break ;
rank: 663
score: 98.44157191685268
patch: break * break * / ;
rank: 663
score: 98.37843831380208
patch: break ; break ; break ; if break ; if ;
rank: 663
score: 98.36658586774554
patch: return - 1 ; default :
rank: 664
score: 98.7089599609375
patch: throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) , $STRING$ ) ;
rank: 664
score: 98.70109049479167
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL
rank: 664
score: 98.68875558035714
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ; break ;
rank: 664
score: 98.66514369419643
patch: return x 0 . 0 ; case REGULA _ FALSI : f 0 *= x 1 ;
rank: 664
score: 98.58660333806819
patch: return break ; break ; } } if break ;
rank: 664
score: 98.47340393066406
patch: } * break ; return break ;
rank: 664
score: 98.37741088867188
patch: break ; break ; break ; if / = break ;
rank: 665
score: 98.70092055376838
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Long ( ) ;
rank: 665
score: 98.68784516433189
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 1 = x 0 ;
rank: 665
score: 98.66510564630681
patch: return x 1 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 665
score: 98.5865478515625
patch: break break ; break ; break ;
rank: 665
score: 98.47276814778645
patch: break ; ; finally {
rank: 665
score: 98.3771260579427
patch: break ; break ; break ; if ; / / *
rank: 665
score: 98.36547173394098
patch: if ( break ) break ; default :
rank: 666
score: 98.70085797991071
patch: return x 1 ; default :
rank: 666
score: 98.66420288085938
patch: x 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( ) ;
rank: 666
score: 98.58631243024554
patch: break ; } } * ;
rank: 666
score: 98.47737121582031
patch: { fx *= 0 . $NUMBER$ ;
rank: 666
score: 98.47259521484375
patch: break ; * ++ break ; ;
rank: 666
score: 98.4398193359375
patch: return x 0 * break ;
rank: 666
score: 98.37542724609375
patch: break ; if ;
rank: 666
score: 98.36516655815973
patch: break ; default : return value ; }
rank: 667
score: 98.70795355902777
patch: break ; case ILLINOIS :
rank: 667
score: 98.7005974264706
patch: f 0 *= compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 667
score: 98.687255859375
patch: f 0 += 0 . $NUMBER$ ; }
rank: 667
score: 98.66362915039062
patch: if ( inverted ) { return x 1 ;
rank: 667
score: 98.586279296875
patch: break ; } else return 0 . 0 ;
rank: 667
score: 98.47667585100446
patch: state = 0 . 0 ;
rank: 667
score: 98.47224426269531
patch: break ; break ; / * {
rank: 667
score: 98.37424723307292
patch: break ; break ; void
rank: 667
score: 98.36385345458984
patch: break ; default : false ; }
rank: 668
score: 98.70705052425987
patch: break ; case REGULA _ FALSI : f 0 *= f 1 + fx ;
rank: 668
score: 98.70056762695313
patch: f 1 *= fx / 0 . $NUMBER$ ;
rank: 668
score: 98.68716866629464
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ; }
rank: 668
score: 98.66350446428571
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( f 1 ) ) ; }
rank: 668
score: 98.58626708984374
patch: break ; * * * * break ; }
rank: 668
score: 98.47216796875
patch: break ; / case ; break ;
rank: 668
score: 98.46989440917969
patch: return get CaMeL Min ( ) ;
rank: 668
score: 98.43928745814732
patch: break - 1 ; } }
rank: 668
score: 98.37420654296875
patch: break ; break ; if ; break ; / / /
rank: 668
score: 98.3635986328125
patch: this . x 0 = x 1 ; }
rank: 669
score: 98.70051125919117
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . start ( ) , ) ;
rank: 669
score: 98.68647003173828
patch: f 0 += f 1 ; }
rank: 669
score: 98.66322631835938
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ; }
rank: 669
score: 98.586181640625
patch: break ; } } } return value ;
rank: 669
score: 98.47160034179687
patch: } break ; *
rank: 669
score: 98.4681884765625
patch: return f 0 ;
rank: 669
score: 98.43818359375
patch: if ( break > 0 . 0 ) {
rank: 669
score: 98.37161254882812
patch: break ; break ; if break ; } return break ;
rank: 669
score: 98.3632583618164
patch: break ; default : if ( ;
rank: 670
score: 98.70665218955592
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : Math . 1 ) ;
rank: 670
score: 98.69993189761513
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , $STRING$ ;
rank: 670
score: 98.68601831896552
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 1 ) ;
rank: 670
score: 98.66318581321023
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 - fx ) ) ;
rank: 670
score: 98.5859146118164
patch: throw break ; } break ; }
rank: 670
score: 98.47114562988281
patch: } break ; ; * * ;
rank: 670
score: 98.46720123291016
patch: m 0 *= 0 . 0 ;
rank: 670
score: 98.43810424804687
patch: break ; default : ; } } break ;
rank: 670
score: 98.3712870279948
patch: break ; if ; break ; break ; break ; }
rank: 670
score: 98.3606185913086
patch: default : f 1 = ; }
rank: 671
score: 98.7058636209239
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , $STRING$ ) ;
rank: 671
score: 98.69952392578125
patch: verify CaMeL Bracketing ( x 0 ) ; }
rank: 671
score: 98.6627197265625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 671
score: 98.58585611979167
patch: } else return break ;
rank: 671
score: 98.437744140625
patch: b 0 . x 0 = x 0 ;
rank: 671
score: 98.37115478515625
patch: break ; break ; if break ; / / / /
rank: 671
score: 98.36029924665179
patch: default : f 1 = ;
rank: 672
score: 98.70558471679688
patch: final double fx = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 672
score: 98.69925537109376
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + 0 ) ;
rank: 672
score: 98.68561662946429
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ; } }
rank: 672
score: 98.66166759672619
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , $STRING$ $STRING$ ) ;
rank: 672
score: 98.58583374023438
patch: break break ; } else { break ; }
rank: 672
score: 98.46903991699219
patch: break break ; / / / ;
rank: 672
score: 98.46609933035714
patch: { inverted = ! inverted ;
rank: 672
score: 98.43770345052083
patch: } ; if ( ;
rank: 672
score: 98.37014770507812
patch: break ; final break ;
rank: 672
score: 98.36012776692708
patch: break ; case ; break ; default :
rank: 673
score: 98.70554713199013
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ , ) ;
rank: 673
score: 98.6990966796875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . do CaMeL Solve ( ) ) ; }
rank: 673
score: 98.66166381835937
patch: throw new Internal CaMeL Error ( $STRING$ ; }
rank: 673
score: 98.58574676513672
patch: break ; * else break ; }
rank: 673
score: 98.46875
patch: break ; if break ; ; ;
rank: 673
score: 98.46232604980469
patch: v 0 *= 0 . $NUMBER$ ;
rank: 673
score: 98.43743896484375
patch: break ; default : if ( ; } }
rank: 673
score: 98.3677978515625
patch: break ; break ; break ; if ; / / ;
rank: 674
score: 98.70496826171875
patch: return x 1 ; case BELOW _ SIDE :
rank: 674
score: 98.68497440732759
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 , atol ) ;
rank: 674
score: 98.66097412109374
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( method ) + ) ;
rank: 674
score: 98.58557891845703
patch: break ; } else throw break ;
rank: 674
score: 98.4684829711914
patch: } break ; ; / / ;
rank: 674
score: 98.46128845214844
patch: z 1 *= 0 . $NUMBER$ ;
rank: 674
score: 98.43633422851562
patch: b 0 = x $NUMBER$ * break ; }
rank: 674
score: 98.3651123046875
patch: break ; break ; break ; if / return break ;
rank: 674
score: 98.3595199584961
patch: } if ( ! break ) {
rank: 675
score: 98.70490056818181
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ + method ) ) ;
rank: 675
score: 98.69888466282895
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( ) + ) ;
rank: 675
score: 98.58554416232639
patch: } break ; } break ; break ;
rank: 675
score: 98.46784973144531
patch: break ; while break ; break ;
rank: 675
score: 98.4610595703125
patch: return x 1 ; case ANY _ SIDE :
rank: 675
score: 98.43575439453124
patch: break ; default : return ; } ; }
rank: 675
score: 98.36501057942708
patch: break ; break ; break ; if ; = / /
rank: 675
score: 98.35900006975446
patch: width = x $NUMBER$ ; }
rank: 676
score: 98.69873046875
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get ( ) ;
rank: 676
score: 98.68422514816811
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 0 = x 0 ;
rank: 676
score: 98.66027250744048
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + x 1 ) ;
rank: 676
score: 98.58528442382813
patch: return 0 . ; * break ; } }
rank: 676
score: 98.466796875
patch: break ; ; ; * ; *
rank: 676
score: 98.45747593470982
patch: state *= 0 . $NUMBER$ ;
rank: 676
score: 98.43484497070312
patch: break ; > 0 . 0 . 0 :
rank: 676
score: 98.36367797851562
patch: if ; break ; break ; break ; return break ;
rank: 676
score: 98.35845075334821
patch: return ; default : break ;
rank: 677
score: 98.70405883789063
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) $NUMBER$ ) ;
rank: 677
score: 98.68341674804688
patch: f 0 *= $NUMBER$ . $NUMBER$ ; break ;
rank: 677
score: 98.6597412109375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Max ( ) ;
rank: 677
score: 98.58526611328125
patch: return 0 . $NUMBER$ ; break ;
rank: 677
score: 98.46635437011719
patch: } break ; ; ; * ;
rank: 677
score: 98.45242919921876
patch: continue ; case PEGASUS : }
rank: 677
score: 98.43453216552734
patch: return x 0 * break ; }
rank: 677
score: 98.36285400390625
patch: break ; break ; break ; if * break ; /
rank: 677
score: 98.35796247209821
patch: result = x 1 ; }
rank: 678
score: 98.70400168678977
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , x 0 ) ;
rank: 678
score: 98.69807739257813
patch: f 1 *= f 1 ; } break ;
rank: 678
score: 98.68337486530173
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) { return x 1 ; }
rank: 678
score: 98.65972900390625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( $STRING$ , ) ) ;
rank: 678
score: 98.58514404296875
patch: } if break ; } } return break ;
rank: 678
score: 98.4661865234375
patch: } break ; break ; / /
rank: 678
score: 98.45157470703126
patch: break ; case PEGASUS : /
rank: 678
score: 98.36276245117188
patch: break ; break ; if ; return ; return break ;
rank: 678
score: 98.35745578342014
patch: b 1 = x 1 ; break ;
rank: 679
score: 98.70338199013158
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 0 . 1 ) ;
rank: 679
score: 98.69695685891544
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . x 1 + $STRING$ ) ;
rank: 679
score: 98.682666015625
patch: f 1 += 0 . $NUMBER$ ; break ;
rank: 679
score: 98.65971447172619
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , $STRING$ ) ;
rank: 679
score: 98.58407931857639
patch: break ; break ; } else { }
rank: 679
score: 98.46615600585938
patch: break ; ; ; while break ;
rank: 679
score: 98.45134626116071
patch: state = 0 . $NUMBER$ ;
rank: 679
score: 98.43350830078126
patch: f 0 = x 1 ; break ; }
rank: 679
score: 98.36271158854167
patch: break ; if ; break ; if ; { break ;
rank: 679
score: 98.35732693142361
patch: break ; / * break ; default :
rank: 680
score: 98.70310377038044
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Message ( ) , ) ;
rank: 680
score: 98.69688505284927
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Exception ( ) ;
rank: 680
score: 98.68074951171874
patch: return x 0 . ( x 1 ) ;
rank: 680
score: 98.58392333984375
patch: break ; } else { return break ;
rank: 680
score: 98.46530151367188
patch: break ; * break ; out ;
rank: 680
score: 98.43336791992188
patch: } ; break ; default : break ; }
rank: 680
score: 98.36244710286458
patch: break ; break ; if ; break ; break ; int
rank: 680
score: 98.35716417100694
patch: break ; default : f 1 . ;
rank: 681
score: 98.70208740234375
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( Math . Internal CaMeL Error ( ) ) ;
rank: 681
score: 98.6968017578125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Int ( f 1 ) ) ;
rank: 681
score: 98.67845837823276
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 0 ) ;
rank: 681
score: 98.6596435546875
patch: f 0 = compute CaMeL Objective CaMeL Value (
rank: 681
score: 98.5832290649414
patch: break ; } } ( break ;
rank: 681
score: 98.46477508544922
patch: break ; * else break ; ;
rank: 681
score: 98.45088195800781
patch: rt 0 *= 0 . $NUMBER$ ;
rank: 681
score: 98.43274943033855
patch: v 0 = ; }
rank: 681
score: 98.36217244466145
patch: break ; break ; if / * break ; break ;
rank: 681
score: 98.3570327758789
patch: x 0 = x 1 ; }
rank: 682
score: 98.70167300575658
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . 1 , ) ;
rank: 682
score: 98.69645610608552
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ; }
rank: 682
score: 98.67799535290948
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , atol ) ;
rank: 682
score: 98.65960138494319
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) +
rank: 682
score: 98.58304268973214
patch: return start ; } } }
rank: 682
score: 98.46414947509766
patch: return break ; ; / * /
rank: 682
score: 98.4489501953125
patch: break ; case PEGASUS : {
rank: 682
score: 98.4310302734375
patch: break ; default : f 0 ; } ;
rank: 682
score: 98.35552215576172
patch: x 1 = x 1 ; }
rank: 682
score: 98.35052490234375
patch: break ; break ; double
rank: 683
score: 98.69628143310547
patch: f 1 *= x 0 ; }
rank: 683
score: 98.67795325969827
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; x 1 = x 1 ;
rank: 683
score: 98.65936569940476
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + ) ; }
rank: 683
score: 98.5828857421875
patch: break ; } break ; } } else {
rank: 683
score: 98.46365356445312
patch: } if break ; break ; ;
rank: 683
score: 98.44852905273437
patch: return x 1 . $NUMBER$ = x 0 ;
rank: 683
score: 98.34299723307292
patch: break ; break ; public
rank: 684
score: 98.69909137228261
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Message ( ) + ) ;
rank: 684
score: 98.67743972252156
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 1 ) ;
rank: 684
score: 98.65885416666667
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 ) + ) ;
rank: 684
score: 98.58242797851562
patch: break break ; } else { }
rank: 684
score: 98.46321105957031
patch: break ; * ; * ; /
rank: 684
score: 98.44491916232639
patch: } else { switch ( method ) {
rank: 684
score: 98.43059692382812
patch: break ; default : throw System . err ;
rank: 684
score: 98.35426548549107
patch: r = x $NUMBER$ ; }
rank: 684
score: 98.34279378255208
patch: throw break ; break ;
rank: 685
score: 98.69880981445313
patch: return 0 ; case PEGASUS :
rank: 685
score: 98.69580078125
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; default :
rank: 685
score: 98.65853271484374
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; } break ;
rank: 685
score: 98.58226776123047
patch: break ; break ; } else }
rank: 685
score: 98.462890625
patch: break ; catch break ; break ;
rank: 685
score: 98.44489135742188
patch: return x ; }
rank: 685
score: 98.35302734375
patch: c 0 = x $NUMBER$ ;
rank: 685
score: 98.34231567382812
patch: break ; if ; try
rank: 686
score: 98.69873046875
patch: final double ftol = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ;
rank: 686
score: 98.6955925436581
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( ) ;
rank: 686
score: 98.67652107007575
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 686
score: 98.65833536783855
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f
rank: 686
score: 98.58148193359375
patch: break ; } } } if ( break ;
rank: 686
score: 98.46249389648438
patch: return break ; break ; ; *
rank: 686
score: 98.44473876953126
patch: new Math . abs ( f 1 ) ;
rank: 686
score: 98.43033272879464
patch: break ; ; default ; }
rank: 686
score: 98.35292271205357
patch: } else if ( break )
rank: 686
score: 98.34194946289062
patch: break ; break ; long
rank: 687
score: 98.69539388020833
patch: f 0 *= x 0 . x ;
rank: 687
score: 98.67393756734914
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , atol ) ;
rank: 687
score: 98.6580810546875
patch: break ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; } }
rank: 687
score: 98.58133951822917
patch: break ; } } break ; null ;
rank: 687
score: 98.46006774902344
patch: break ; value / * break ;
rank: 687
score: 98.44395228794643
patch: } switch ( method ) {
rank: 687
score: 98.42912462022569
patch: break ; case ; ; case break :
rank: 687
score: 98.35083770751953
patch: break ; default : break false ;
rank: 687
score: 98.33668009440105
patch: break ; } if ;
rank: 688
score: 98.69790810032895
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : 1 . $NUMBER$ ) ;
rank: 688
score: 98.673828125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; }
rank: 688
score: 98.65790349786931
patch: return x 0 . 0 ; case REGULA _ FALSI : f 0 *= f 1 ; }
rank: 688
score: 98.58053927951389
patch: break ; } } } return false ;
rank: 688
score: 98.45968627929688
patch: break ; * / ;
rank: 688
score: 98.44307454427083
patch: state . x 0 = x 1 ;
rank: 688
score: 98.42799886067708
patch: break ; default : ; continue ; }
rank: 688
score: 98.3505859375
patch: c 0 = x 1 ;
rank: 688
score: 98.33469645182292
patch: break ; boolean break ;
rank: 689
score: 98.69473427220395
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( ) + $STRING$ ;
rank: 689
score: 98.67288523706897
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 1 = x 1 ;
rank: 689
score: 98.57991027832031
patch: { break ; } } break ;
rank: 689
score: 98.45819091796875
patch: break ; ; * / / ;
rank: 689
score: 98.44044494628906
patch: return x 1 + x 1 ;
rank: 689
score: 98.42776828342014
patch: break ; default : throw new ; ;
rank: 689
score: 98.35039411272321
patch: default : return break ; }
rank: 689
score: 98.32668050130208
patch: ; break ; break ;
rank: 690
score: 98.69692160866477
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ,
rank: 690
score: 98.69458770751953
patch: f 1 ] = f 1 ;
rank: 690
score: 98.6728515625
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 690
score: 98.6578369140625
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ; } }
rank: 690
score: 98.57980007595486
patch: return break ; break ; } break ;
rank: 690
score: 98.45685577392578
patch: break ; ; ++ break ; ;
rank: 690
score: 98.42761908637152
patch: if ( break ) { ; } }
rank: 690
score: 98.35037570529514
patch: break ; default : f 1 ++ ;
rank: 690
score: 98.3238525390625
patch: break ; if ; /
rank: 691
score: 98.69685444078948
patch: throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , f 1 ) ;
rank: 691
score: 98.6931640625
patch: return x 1 ; case ABOVE _ SIDE :
rank: 691
score: 98.67194234913794
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; x 1 = x 0 ;
rank: 691
score: 98.57956271701389
patch: break ; * * return break ; }
rank: 691
score: 98.45636749267578
patch: break ; ; break ; ; ;
rank: 691
score: 98.44001007080078
patch: l 0 *= 0 . $NUMBER$ ;
rank: 691
score: 98.42760358537946
patch: break * / * break ;
rank: 691
score: 98.34980119977679
patch: break - 1 ; default :
rank: 692
score: 98.65691528320312
patch: break ; case REGULA _ FALSI : f 0 *= 1 . $NUMBER$ ; break ;
rank: 692
score: 98.57944064670139
patch: } break ; break ; } break ;
rank: 692
score: 98.45623779296875
patch: } else { break ; } ;
rank: 692
score: 98.43866729736328
patch: p 0 *= 0 . $NUMBER$ ;
rank: 692
score: 98.42750244140625
patch: b 0 = x 0 - break ; }
rank: 692
score: 98.34954833984375
patch: v 1 = x 1 ;
rank: 692
score: 98.3175048828125
patch: break ; break ; float
rank: 693
score: 98.69599151611328
patch: verify CaMeL Bracketing ( method ) ;
rank: 693
score: 98.67183685302734
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 693
score: 98.65664527529762
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + ) ; } }
rank: 693
score: 98.57942504882813
patch: break ; } else return 0 . ; }
rank: 693
score: 98.45599975585938
patch: if break ; ;
rank: 693
score: 98.43810163225446
patch: i *= 0 . $NUMBER$ ;
rank: 693
score: 98.42677612304688
patch: break ; case ; default : continue ; }
rank: 693
score: 98.34790802001953
patch: if ( break ) { return ;
rank: 694
score: 98.6956722861842
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ + ) ;
rank: 694
score: 98.69218175551471
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 0 ;
rank: 694
score: 98.67077215786638
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; x 0 = x 1 ;
rank: 694
score: 98.57935180664063
patch: break ; } } } } catch break ;
rank: 694
score: 98.4558334350586
patch: } break ; value return break ;
rank: 694
score: 98.43614196777344
patch: id 0 *= 0 . $NUMBER$ ;
rank: 694
score: 98.42580740792411
patch: break ; case ; } ;
rank: 694
score: 98.34760199652777
patch: break ; case ; case ; : }
rank: 694
score: 98.30836995442708
patch: break ; break ; Throwable
rank: 695
score: 98.69560314360119
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ + ) ) ;
rank: 695
score: 98.69215698242188
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 - fx ) ) ;
rank: 695
score: 98.67003131734914
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 0 ) ;
rank: 695
score: 98.578857421875
patch: return break ; } else if break ; }
rank: 695
score: 98.45579528808594
patch: break ; ; * * * ;
rank: 695
score: 98.43585205078125
patch: case RIGHT _ SIDE :
rank: 695
score: 98.4254150390625
patch: f 1 = x ; }
rank: 695
score: 98.34756130642361
patch: break ; x 0 = x 1 ;
rank: 695
score: 98.30474853515625
patch: break ; if / ;
rank: 696
score: 98.69531860351563
patch: f 0 . x 0 = x 1 ;
rank: 696
score: 98.69215303308823
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 ) ;
rank: 696
score: 98.66867404513889
patch: f 0 = x 0 . 0 ;
rank: 696
score: 98.57859802246094
patch: } break ; if break ; }
rank: 696
score: 98.45565795898438
patch: break ; / / * * ;
rank: 696
score: 98.43388148716518
patch: return 0 . $NUMBER$ ; }
rank: 696
score: 98.42462158203125
patch: break ; default : } ;
rank: 697
score: 98.69505774456522
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , x 1 ) ;
rank: 697
score: 98.66769070095486
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ) ;
rank: 697
score: 98.65575009300595
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; return x 1 ;
rank: 697
score: 98.57856750488281
patch: return ; * * * break ;
rank: 697
score: 98.45541381835938
patch: break ; ; ; * * /
rank: 697
score: 98.43247985839844
patch: my 0 *= 0 . $NUMBER$ ;
rank: 697
score: 98.42369733537946
patch: default : break ; } }
rank: 697
score: 98.34688991970486
patch: break ; f 0 = x 1 ;
rank: 697
score: 98.27984619140625
patch: break ; break ; _
rank: 698
score: 98.69502397017045
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE + fx ) ;
rank: 698
score: 98.69161826685855
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ / ( f 1 + fx ) ) ;
rank: 698
score: 98.66725852272727
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 698
score: 98.6553155307112
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x ] ) ;
rank: 698
score: 98.57839626736111
patch: break ; f 1 = break ; }
rank: 698
score: 98.45536041259766
patch: break ; ; * * / }
rank: 698
score: 98.42958577473958
patch: state = get CaMeL Min ( ) ;
rank: 698
score: 98.42180524553571
patch: z 0 = ; break ;
rank: 698
score: 98.34687805175781
patch: default : return - 1 ; }
rank: 698
score: 98.26514689127605
patch: break ; if ; break
rank: 699
score: 98.69454795435855
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 ) ;
rank: 699
score: 98.66725316540948
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ; }
rank: 699
score: 98.65434337797619
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , $STRING$ ) ; }
rank: 699
score: 98.57833862304688
patch: break ; } for break ; }
rank: 699
score: 98.42938232421875
patch: o 0 *= 0 . $NUMBER$ ;
rank: 699
score: 98.421142578125
patch: break ; default : default :
rank: 699
score: 98.34671783447266
patch: break ; case ; f 1 :
rank: 699
score: 98.26499430338542
patch: break ; break ; max
rank: 700
score: 98.69442894345238
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ;
rank: 700
score: 98.66657967403017
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 1 = x 0 ;
rank: 700
score: 98.6543201264881
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( f 1 ) ) ; }
rank: 700
score: 98.57796630859374
patch: break ; } else { break ; ; }
rank: 700
score: 98.45494079589844
patch: break ; out ; break ; }
rank: 700
score: 98.42681884765625
patch: a 1 *= 0 . $NUMBER$ ;
rank: 700
score: 98.42076110839844
patch: if ( ; break ; } }
rank: 700
score: 98.34591335720486
patch: break . 1 = break . $NUMBER$ ;
rank: 700
score: 98.26271565755208
patch: break ; if ; System
rank: 701
score: 98.69136810302734
patch: f 1 : return x 0 ;
rank: 701
score: 98.6541748046875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 , x ] ) ;
rank: 701
score: 98.577392578125
patch: } else if break ; break ; break ;
rank: 701
score: 98.45470174153645
patch: return false ; break ;
rank: 701
score: 98.42669677734375
patch: curr 0 *= 0 . $NUMBER$ ;
rank: 701
score: 98.42045593261719
patch: break ; default : ; break ;
rank: 701
score: 98.25923665364583
patch: break ; return ; ;
rank: 702
score: 98.69384765625
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) } ;
rank: 702
score: 98.69129136029412
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 0 + $STRING$ ) ;
rank: 702
score: 98.66387728987068
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; x 0 = x 0 ;
rank: 702
score: 98.65414574032738
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 702
score: 98.57709350585938
patch: break ; * * * break ; break ;
rank: 702
score: 98.45455932617188
patch: break ; ; * break ; /
rank: 702
score: 98.42481994628906
patch: p 1 *= 0 . $NUMBER$ ;
rank: 702
score: 98.4201431274414
patch: break ; System . arraycopy ( ;
rank: 702
score: 98.25325520833333
patch: break ; break ; in
rank: 703
score: 98.6933063009511
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) {
rank: 703
score: 98.66354031032986
patch: f 0 *= x 0 ; break ;
rank: 703
score: 98.57695770263672
patch: } break ; } else break ;
rank: 703
score: 98.453857421875
patch: break ; ; - / / /
rank: 703
score: 98.42399597167969
patch: case PEGASUS : f
rank: 703
score: 98.4197998046875
patch: break ; ; case break ; default :
rank: 703
score: 98.250244140625
patch: break ; if / /
rank: 704
score: 98.6630438442888
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 0 = x 1 ;
rank: 704
score: 98.65404296875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; continue ;
rank: 704
score: 98.57694091796876
patch: break ; } else { throw break ; }
rank: 704
score: 98.45374298095703
patch: break ; / 1 { break ;
rank: 704
score: 98.42283630371094
patch: s 1 *= 0 . $NUMBER$ ;
rank: 704
score: 98.41945103236607
patch: } } / * break ;
rank: 704
score: 98.34254673549107
patch: break ; equals = false ;
rank: 704
score: 98.2475341796875
patch: break ; } ;
rank: 705
score: 98.69222259521484
patch: f 0 *= 1 ; break ;
rank: 705
score: 98.69045122931985
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 + ) ; }
rank: 705
score: 98.66295123922414
patch: if ( Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) <= 0 ) { return x 1 ;
rank: 705
score: 98.57672119140625
patch: return break ; ; break ; }
rank: 705
score: 98.45368194580078
patch: break ; break ; * else {
rank: 705
score: 98.42196655273438
patch: i 0 *= 0 . $NUMBER$ ;
rank: 705
score: 98.34239959716797
patch: c 0 = x $NUMBER$ ; }
rank: 705
score: 98.24734497070312
patch: if ; int break ;
rank: 706
score: 98.69206891741071
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + $STRING$ ) ;
rank: 706
score: 98.68995496961806
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 0 ) ;
rank: 706
score: 98.66237035290948
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; x ] = x 1 ;
rank: 706
score: 98.653701171875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , inverted ) ;
rank: 706
score: 98.5763168334961
patch: break ; else return break ; else
rank: 706
score: 98.45355224609375
patch: break { * break ;
rank: 706
score: 98.41953531901042
patch: m 0 *= 0 . $NUMBER$ ; }
rank: 706
score: 98.41840471540179
patch: break ; ; case break :
rank: 706
score: 98.24606323242188
patch: break ; if ; *
rank: 707
score: 98.69178989955357
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this , ) ) ;
rank: 707
score: 98.57622612847223
patch: break ; } else return break ; ;
rank: 707
score: 98.4534912109375
patch: return break ; ; * * /
rank: 707
score: 98.41900634765625
patch: sm 0 *= 0 . $NUMBER$ ;
rank: 707
score: 98.41779920789931
patch: continue ; default : throw new ; }
rank: 707
score: 98.34138997395833
patch: default : f 1 = x 1 ;
rank: 708
score: 98.69168223505434
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ) ;
rank: 708
score: 98.66221618652344
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ,
rank: 708
score: 98.65362258184524
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x ] ) ; break ;
rank: 708
score: 98.5761947631836
patch: break ; else return x ; }
rank: 708
score: 98.45323181152344
patch: break ; ; else if break ;
rank: 708
score: 98.41804504394531
patch: first 1 *= 0 . $NUMBER$ ;
rank: 708
score: 98.41751534598214
patch: break ; continue ; } }
rank: 708
score: 98.34014892578125
patch: x 1 = x $NUMBER$ ;
rank: 709
score: 98.69048751027961
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$
rank: 709
score: 98.68921508789063
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . to CaMeL String ( ) ; }
rank: 709
score: 98.66171369881465
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ; }
rank: 709
score: 98.65292503720238
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Min ( ) , f 1 ) ;
rank: 709
score: 98.57611083984375
patch: break ; * } break ; }
rank: 709
score: 98.45223999023438
patch: break ; * * * / /
rank: 709
score: 98.4166259765625
patch: break ; case ; } else {
rank: 709
score: 98.41422526041667
patch: result = x 0 ;
rank: 709
score: 98.33999972873264
patch: throw new Error ( $STRING$ ) ; }
rank: 709
score: 98.2394510904948
patch: if ; break ; ;
rank: 710
score: 98.69037475585938
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ + method ) ;
rank: 710
score: 98.68909369574652
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . index CaMeL Of ( $STRING$ ) ;
rank: 710
score: 98.66085499730603
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x ] ) ;
rank: 710
score: 98.65275772758152
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) {
rank: 710
score: 98.57610405815973
patch: return 0 . ; break ; } else
rank: 710
score: 98.45145416259766
patch: if null ; break ; break ;
rank: 710
score: 98.41616482204861
patch: f 0 = x 1 ; ; }
rank: 710
score: 98.41350446428571
patch: tmp = 0 . $NUMBER$ ;
rank: 710
score: 98.33922576904297
patch: case ; case ; : return ;
rank: 710
score: 98.23770141601562
patch: break ; if ; else
rank: 711
score: 98.69030151367187
patch: final double fx 0 *= 0 . $NUMBER$ ;
rank: 711
score: 98.68905639648438
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) ;
rank: 711
score: 98.65275435014205
patch: break ; case REGULA _ FALSI : throw new Math CaMeL Internal CaMeL Error ( $STRING$ ; }
rank: 711
score: 98.45125579833984
patch: } break ; / / * /
rank: 711
score: 98.41517469618056
patch: break ; default : continue ; } ;
rank: 711
score: 98.41285705566406
patch: expr 1 *= 0 . $NUMBER$ ;
rank: 711
score: 98.3381118774414
patch: return ; default : return ; }
rank: 711
score: 98.23385620117188
patch: break ; break ; is
rank: 712
score: 98.69023052014802
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 0 ) ;
rank: 712
score: 98.68768920898438
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Min ( ) ;
rank: 712
score: 98.65867456896552
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ; }
rank: 712
score: 98.6526387532552
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ] ) ;
rank: 712
score: 98.57498779296876
patch: return 0 . length ; } else break ;
rank: 712
score: 98.44993591308594
patch: } break ; ; / * ;
rank: 712
score: 98.41497802734375
patch: return ; default : ; }
rank: 712
score: 98.41009521484375
patch: continue ; default : return x 1 ;
rank: 712
score: 98.33611297607422
patch: return ; > 0 . 0 :
rank: 712
score: 98.22970581054688
patch: break ; } ; ;
rank: 713
score: 98.69004420230263
patch: throw new Math CaMeL Internal CaMeL Error ( ILLINOIS : f 1 + ) ;
rank: 713
score: 98.6524325284091
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) }
rank: 713
score: 98.57462565104167
patch: return 0 . 1 ; break ; }
rank: 713
score: 98.44970703125
patch: } break ; / * * /
rank: 713
score: 98.41436767578125
patch: break ; default break ; } } ;
rank: 713
score: 98.40955461774554
patch: result = 0 . 0 ;
rank: 713
score: 98.33594767252605
patch: break ; case Iterable :
rank: 714
score: 98.6892578125
patch: f 1 *= f 1 / f 1 ;
rank: 714
score: 98.68721516927083
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + ) ; }
rank: 714
score: 98.65784085181451
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Absolute CaMeL Accuracy ( ) ) ;
rank: 714
score: 98.65168900923295
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , ) ;
rank: 714
score: 98.57457275390625
patch: break ; } } } throw break ; }
rank: 714
score: 98.44903564453125
patch: break ; / break ;
rank: 714
score: 98.41326032366071
patch: } ; / * break ;
rank: 714
score: 98.33586774553571
patch: / * break ; * /
rank: 714
score: 98.2144775390625
patch: break ; if ; int
rank: 715
score: 98.68886847245066
patch: final double atol = compute CaMeL Objective CaMeL Value ( x 0 , x 0 ) ;
rank: 715
score: 98.6863525390625
patch: if ( fx != 0 . 0 ) {
rank: 715
score: 98.65750369510135
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , atol ) ; }
rank: 715
score: 98.65164317255434
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; case PEGASUS : f 0 *= f 1 ;
rank: 715
score: 98.574462890625
patch: break ; } } break ; if break ;
rank: 715
score: 98.4488525390625
patch: break ; ; * ; / /
rank: 715
score: 98.4132080078125
patch: break ; * break * * / }
rank: 715
score: 98.40650939941406
patch: if ( fx < fx ) {
rank: 715
score: 98.33462524414062
patch: x 1 = x $NUMBER$ ; }
rank: 715
score: 98.21329752604167
patch: return ; int break ;
rank: 716
score: 98.688623046875
patch: break ; case REGULA _ FALSI : f 0 *= f 1 / f 1 ;
rank: 716
score: 98.68613009982639
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ; }
rank: 716
score: 98.6573819247159
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ;
rank: 716
score: 98.65132962740384
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; final
rank: 716
score: 98.57437896728516
patch: break ; x 1 ; } }
rank: 716
score: 98.44849650065105
patch: break ; * ; *
rank: 716
score: 98.40647888183594
patch: return f 1 . $NUMBER$ ; }
rank: 716
score: 98.32957240513393
patch: default : f 0 = ;
rank: 716
score: 98.2118631998698
patch: if ; * break ;
rank: 717
score: 98.68848266601563
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this , ) ; }
rank: 717
score: 98.6859130859375
patch: f 0 *= f 0 . x 1 ;
rank: 717
score: 98.65730116102431
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ) ;
rank: 717
score: 98.65116954985119
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + $STRING$ ) ; }
rank: 717
score: 98.57437472873264
patch: break ; } } } throw break ;
rank: 717
score: 98.4483871459961
patch: break ; break ; case ; next
rank: 717
score: 98.40447235107422
patch: t 0 *= 0 . 1 ;
rank: 717
score: 98.32701110839844
patch: } else if ( break ) {
rank: 717
score: 98.20965576171875
patch: break ; break ; Integer
rank: 718
score: 98.68831787109374
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) 1 ) ;
rank: 718
score: 98.65114339192708
patch: throw new Math CaMeL Internal CaMeL Error ( ) ; default : throw new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 718
score: 98.57398986816406
patch: break ; } else return value ;
rank: 718
score: 98.44776916503906
patch: break ; ; * / / /
rank: 718
score: 98.41119384765625
patch: b 0 = ; break ; }
rank: 718
score: 98.40411376953125
patch: } else { return x 0 ;
rank: 718
score: 98.32697296142578
patch: case ; default : break ; }
rank: 718
score: 98.20826212565105
patch: break ; break ; (
rank: 719
score: 98.6879549893466
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this ) ) ;
rank: 719
score: 98.68525390625
patch: f 1 *= 0 . 0 ; } }
rank: 719
score: 98.65530734592014
patch: return x 1 . x 0 ; }
rank: 719
score: 98.65083240327381
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , f 1 ) ; break ;
rank: 719
score: 98.57393646240234
patch: break ; for break ; } else
rank: 719
score: 98.44692993164062
patch: break ; synchronized break ;
rank: 719
score: 98.41110665457589
patch: f 1 = ; } }
rank: 719
score: 98.40264892578125
patch: return x 1 . $NUMBER$ ; }
rank: 719
score: 98.2075703938802
patch: break ; break ; out
rank: 720
score: 98.6878662109375
patch: break ; case REGULA _ FALSI : verify CaMeL Bracketing ( x 0 , x 0 ) ;
rank: 720
score: 98.68513319227431
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . x 1 ; }
rank: 720
score: 98.65037027994792
patch: return x 0 . $NUMBER$ ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; break ;
rank: 720
score: 98.57340240478516
patch: return 0 . $NUMBER$ ; } }
rank: 720
score: 98.44645182291667
patch: break ; * ; ;
rank: 720
score: 98.41078186035156
patch: z 0 = x 0 ; }
rank: 720
score: 98.40094757080078
patch: m 1 *= 0 . 0 ;
rank: 720
score: 98.32487487792969
patch: break ; > 0 . 0 ;
rank: 720
score: 98.20426940917969
patch: break ; try
rank: 721
score: 98.6874767485119
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) {
rank: 721
score: 98.68447875976562
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , ) ;
rank: 721
score: 98.65477701822917
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 1 ) ; }
rank: 721
score: 98.64933975883152
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , }
rank: 721
score: 98.57299041748047
patch: break ; } return * break ;
rank: 721
score: 98.44591267903645
patch: break ; / ; /
rank: 721
score: 98.41074044363839
patch: if ( ! ; ; }
rank: 721
score: 98.40058135986328
patch: q 0 *= 0 . $NUMBER$ ;
rank: 721
score: 98.32437896728516
patch: v 1 = break ; default :
rank: 721
score: 98.2034912109375
patch: break ; ; System ;
rank: 722
score: 98.68741183810764
patch: f 0 *= 1 . 0 ; }
rank: 722
score: 98.68446180555556
patch: f 1 *= compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ; }
rank: 722
score: 98.65422905815973
patch: f 0 *= x 1 ; } }
rank: 722
score: 98.649189453125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , new int [
rank: 722
score: 98.5721664428711
patch: } if break ; } } }
rank: 722
score: 98.444580078125
patch: return finally { break ;
rank: 722
score: 98.41038295200893
patch: f 1 = ; } ;
rank: 722
score: 98.39859008789062
patch: } else switch ( method ) {
rank: 722
score: 98.20225016276042
patch: break ; return ; {
rank: 723
score: 98.68702043805804
patch: return x 0 - 0 ;
rank: 723
score: 98.68433837890625
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 + fx ) ) ;
rank: 723
score: 98.654052734375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ) ;
rank: 723
score: 98.57179260253906
patch: break ; ; else return break ;
rank: 723
score: 98.44265747070312
patch: return * break ; /
rank: 723
score: 98.40985107421875
patch: continue ; default : ; }
rank: 723
score: 98.39712524414062
patch: tmp = x 1 ;
rank: 724
score: 98.686767578125
patch: final double rtol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 0 ) ;
rank: 724
score: 98.64796031605114
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Absolute CaMeL Accuracy ( ) ) ; }
rank: 724
score: 98.57175699869792
patch: } } if break ;
rank: 724
score: 98.44122314453125
patch: return break ; ; /
rank: 724
score: 98.40948486328125
patch: if ( ; break ;
rank: 724
score: 98.39659288194444
patch: t 1 *= 0 . $NUMBER$ ; }
rank: 724
score: 98.32300567626953
patch: break ; equals = false ; }
rank: 724
score: 98.19358317057292
patch: break ; break ; --
rank: 725
score: 98.68640667459239
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this + ) ;
rank: 725
score: 98.65256696428571
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; } }
rank: 725
score: 98.64706566220238
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ; } } }
rank: 725
score: 98.57062445746527
patch: return 0 . break ; } else {
rank: 725
score: 98.43764241536458
patch: } break ; / ;
rank: 725
score: 98.40944126674107
patch: break ; } / * ;
rank: 725
score: 98.39552815755208
patch: return f 1 ; }
rank: 725
score: 98.32295227050781
patch: } f 1 = x 1 ;
rank: 725
score: 98.19112141927083
patch: break ; void break ;
rank: 726
score: 98.68631417410714
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $NUMBER$ ) ;
rank: 726
score: 98.651318359375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 0 ) ; }
rank: 726
score: 98.64704241071429
patch: return x 0 . 0 ; case REGULA _ FALSI : f 0 = f 1 ;
rank: 726
score: 98.57042846679687
patch: return 0 . 0 ; } break ; else
rank: 726
score: 98.43717447916667
patch: break ; ++ break ;
rank: 726
score: 98.40868123372395
patch: break - 1 ; }
rank: 726
score: 98.39482286241319
patch: n *= get CaMeL Min ( ) ;
rank: 726
score: 98.3226547241211
patch: if ( f 0 < break )
rank: 726
score: 98.188916015625
patch: break ; System ;
rank: 727
score: 98.68335639105902
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 , x 1 ) ;
rank: 727
score: 98.65107727050781
patch: return x 0 . x $NUMBER$ ;
rank: 727
score: 98.64692826704545
patch: return x 1 . 0 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ;
rank: 727
score: 98.5699462890625
patch: break break ; } } else return break ;
rank: 727
score: 98.4368896484375
patch: break break ; ; ;
rank: 727
score: 98.40861002604167
patch: break * / * /
rank: 727
score: 98.39053344726562
patch: LOG . log ( $STRING$ ) ;
rank: 727
score: 98.3226318359375
patch: r = x 1 ; break ;
rank: 727
score: 98.18213907877605
patch: if ; break ; try
rank: 728
score: 98.68476795014881
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . 1 , x 1 ) ;
rank: 728
score: 98.68314401726974
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; f 1 = fx ;
rank: 728
score: 98.65057373046875
patch: f 0 = x 0 ; break ;
rank: 728
score: 98.56937255859376
patch: return 0 . 0 ; } break ; ;
rank: 728
score: 98.43385823567708
patch: } * if break ;
rank: 728
score: 98.38790554470486
patch: tmp = get CaMeL Max ( ) ;
rank: 728
score: 98.32208251953125
patch: break ; default : final ;
rank: 728
score: 98.1655782063802
patch: return ; if break ;
rank: 729
score: 98.68342729048295
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $NUMBER$ ) ) ;
rank: 729
score: 98.68302612304687
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , ) ;
rank: 729
score: 98.65004185267857
patch: f 0 += x 1 ;
rank: 729
score: 98.64592633928571
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . value CaMeL Of ( f 1 ) + ) ;
rank: 729
score: 98.5691162109375
patch: break ; * * * / break ; }
rank: 729
score: 98.42539469401042
patch: value break ; break ;
rank: 729
score: 98.40733506944444
patch: break ; default ; continue ; } }
rank: 729
score: 98.3851318359375
patch: return f 0 . 0 ;
rank: 729
score: 98.32136535644531
patch: return 1 . 0 ; default :
rank: 729
score: 98.16226196289062
patch: break ; break ; Thread
rank: 730
score: 98.68293563179348
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( )
rank: 730
score: 98.68287489149306
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . start ( ) ;
rank: 730
score: 98.56892225477431
patch: break ; f 0 = break ; }
rank: 730
score: 98.42422485351562
patch: break ; / / ;
rank: 730
score: 98.40715196397569
patch: break ; default ; ; } } ;
rank: 730
score: 98.38321940104167
patch: { return x 1 ;
rank: 730
score: 98.32099914550781
patch: if ( ; break ; default :
rank: 730
score: 98.16192626953125
patch: if break ;
rank: 731
score: 98.68292236328125
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( 0 ) ) ;
rank: 731
score: 98.68246023995536
patch: inverted = 0 . $NUMBER$ ;
rank: 731
score: 98.64842122395834
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 1 ) ; }
rank: 731
score: 98.6458270733173
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break 0 ;
rank: 731
score: 98.42291259765625
patch: break break ; / ;
rank: 731
score: 98.40673828125
patch: break ; case ; > 0 :
rank: 731
score: 98.3824234008789
patch: return f 1 / x 0 ;
rank: 731
score: 98.32006072998047
patch: break ; ; case ; default :
rank: 731
score: 98.1612548828125
patch: int break ; break ;
rank: 732
score: 98.68279474431819
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( $NUMBER$ ) ) ;
rank: 732
score: 98.68218315972223
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ;
rank: 732
score: 98.64818522135417
patch: if ( Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) <= 0 ) { return x 1 ; }
rank: 732
score: 98.64474051339286
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) + f 1 ) ;
rank: 732
score: 98.5685302734375
patch: } break ; break ; } catch break ;
rank: 732
score: 98.42169799804688
patch: try { break ;
rank: 732
score: 98.40652029854911
patch: break ; case ; ; ;
rank: 732
score: 98.38203648158482
patch: return x 1 . 1 ;
rank: 732
score: 98.3181381225586
patch: i = ; break ; default :
rank: 732
score: 98.15957641601562
patch: return ; return break ;
rank: 733
score: 98.68238414417614
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error ( ) ) ;
rank: 733
score: 98.68128313337054
patch: f 1 -= f 1 ;
rank: 733
score: 98.64802551269531
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 733
score: 98.64435546875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break }
rank: 733
score: 98.56816270616319
patch: } return break ; } } break ;
rank: 733
score: 98.41935221354167
patch: } break ; else {
rank: 733
score: 98.40636528862848
patch: f 0 = x 1 - break ;
rank: 733
score: 98.38190460205078
patch: tmp 0 *= 0 . 0 ;
rank: 733
score: 98.1520284016927
patch: break ; if ; void
rank: 734
score: 98.68227810329861
patch: this . x 1 = f 1 ;
rank: 734
score: 98.68075222439236
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return f 1 ;
rank: 734
score: 98.64779324001736
patch: x 0 = x 0 . $NUMBER$ ;
rank: 734
score: 98.64426832932692
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; } }
rank: 734
score: 98.56798095703125
patch: break ; } } finally { break ; }
rank: 734
score: 98.4170633951823
patch: break * break ; /
rank: 734
score: 98.40610080295139
patch: break ; default break ; } } }
rank: 734
score: 98.316162109375
patch: return - 1 ; }
rank: 735
score: 98.68212890625
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , 0 ) ;
rank: 735
score: 98.68050130208333
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) 1 ;
rank: 735
score: 98.64629767922794
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , ) ;
rank: 735
score: 98.56793823242188
patch: break ; break ; } if break ; }
rank: 735
score: 98.41636149088542
patch: try { break break ;
rank: 735
score: 98.40550013950893
patch: } ; / * * ;
rank: 735
score: 98.31293596540179
patch: ; if ( break ) {
rank: 735
score: 98.14579264322917
patch: break ; break ; super
rank: 736
score: 98.68196614583333
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) . $STRING$ ) ;
rank: 736
score: 98.64378821331522
patch: break ; case REGULA _ FALSI : f 0 *= f 1 ; f 0 *= f 1 ;
rank: 736
score: 98.5675537109375
patch: break ; } } if ; return break ;
rank: 736
score: 98.41538492838542
patch: } break ; ; }
rank: 736
score: 98.4031753540039
patch: f 0 = ; ; ; }
rank: 736
score: 98.37344360351562
patch: return f 1 . x 1 ;
rank: 736
score: 98.312744140625
patch: } if ( ! break )
rank: 736
score: 98.14059448242188
patch: break ; break ; add
rank: 737
score: 98.68184814453124
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this + ) ; }
rank: 737
score: 98.64546966552734
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 737
score: 98.6430896577381
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x
rank: 737
score: 98.56722005208333
patch: return 0 . ; ; break ; else
rank: 737
score: 98.4144999186198
patch: } else ; break ;
rank: 737
score: 98.4026870727539
patch: } else { f 0 ; }
rank: 737
score: 98.31187220982143
patch: continue ; default : break ;
rank: 737
score: 98.1401875813802
patch: if ; break ; /
rank: 738
score: 98.68101917613636
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , 0 ) ;
rank: 738
score: 98.68007940995066
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ;
rank: 738
score: 98.645263671875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ) ;
rank: 738
score: 98.6420665922619
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 ) , ) ;
rank: 738
score: 98.56591796875
patch: break ; } } if ; break ; }
rank: 738
score: 98.4139912923177
patch: break ; ; * {
rank: 738
score: 98.31143188476562
patch: break ; } default :
rank: 739
score: 98.6809414950284
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ;
rank: 739
score: 98.68002801192434
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get ( $STRING$ ) ;
rank: 739
score: 98.64427971117425
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; }
rank: 739
score: 98.56533474392361
patch: break ; ; } } return break ;
rank: 739
score: 98.36956108940973
patch: this . *= 0 . $NUMBER$ ; }
rank: 739
score: 98.31034633091518
patch: w 0 = x 1 ;
rank: 739
score: 98.13917032877605
patch: break ; return / ;
rank: 740
score: 98.68078082540761
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) , ) ;
rank: 740
score: 98.6416903409091
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) , ) ; }
rank: 740
score: 98.56522216796876
patch: break ; } } super . break ; }
rank: 740
score: 98.40738932291667
patch: / * break ; /
rank: 740
score: 98.39297921316964
patch: return ; / * break ;
rank: 740
score: 98.36910247802734
patch: return x 1 / x 0 ;
rank: 740
score: 98.30795724051339
patch: return 1 . 0 ; }
rank: 740
score: 98.13623046875
patch: ; ; break ;
rank: 741
score: 98.68060302734375
patch: interval . x 0 = x 1 ;
rank: 741
score: 98.67964895148026
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ( ) ;
rank: 741
score: 98.64210611979166
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 0 ) ; }
rank: 741
score: 98.56465657552083
patch: break ; break ; } } * /
rank: 741
score: 98.40737915039062
patch: break = break ; ;
rank: 741
score: 98.39160919189453
patch: } ; if ( f 0 ;
rank: 741
score: 98.36499701605902
patch: break ; case ANY _ SIDE : {
rank: 741
score: 98.12225341796875
patch: return ; ; break ;
rank: 742
score: 98.68052842881944
patch: this . x 0 = f 1 ;
rank: 742
score: 98.67958984375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) x 1 ) ;
rank: 742
score: 98.64075055803572
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ) ) ;
rank: 742
score: 98.5646240234375
patch: break ; break ; else return break ; }
rank: 742
score: 98.40638224283855
patch: } break ; * *
rank: 742
score: 98.39089965820312
patch: f 0 = ; ;
rank: 742
score: 98.36322699652777
patch: if ( fx < f 1 ) {
rank: 742
score: 98.30398123604911
patch: value = x 1 ; }
rank: 742
score: 98.11520385742188
patch: break ; if ; _
rank: 743
score: 98.67976888020833
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ( ) , ) ;
rank: 743
score: 98.67947998046876
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + fx ) ;
rank: 743
score: 98.564306640625
patch: break ; else break ; } } else {
rank: 743
score: 98.4021504720052
patch: } * break break ;
rank: 743
score: 98.39071219308036
patch: if ( ; else break ;
rank: 743
score: 98.36305745442708
patch: case REGULA _ FALSI ;
rank: 743
score: 98.30248413085937
patch: f 0 = ;
rank: 743
score: 98.1143086751302
patch: break ; break ; current
rank: 744
score: 98.67948404947917
patch: this . f 1 = x 1 ;
rank: 744
score: 98.64112490699405
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) ) ; } } }
rank: 744
score: 98.6394551595052
patch: } return x 1 ;
rank: 744
score: 98.56424967447917
patch: return * break ; } } break ;
rank: 744
score: 98.4020487467448
patch: break ; / catch ;
rank: 744
score: 98.36181640625
patch: state . x 1 = x 1 ;
rank: 744
score: 98.30111258370536
patch: default : break ; default :
rank: 744
score: 98.1121114095052
patch: break ; -- break ;
rank: 745
score: 98.67901611328125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( 1 ) ;
rank: 745
score: 98.64044921875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + 1 ) ;
rank: 745
score: 98.63943684895834
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Absolute CaMeL Accuracy ( ) ) ;
rank: 745
score: 98.56389770507812
patch: break ; else this . break ; } }
rank: 745
score: 98.38793182373047
patch: b 0 = ; ; break ;
rank: 745
score: 98.30039760044643
patch: break ; default : else {
rank: 745
score: 98.06121063232422
patch: ; break ;
rank: 746
score: 98.67900390625
patch: f 1 *= x 0 . x 1 ;
rank: 746
score: 98.6771930197011
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Cause ( ) , ) ;
rank: 746
score: 98.63997708834134
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ;
rank: 746
score: 98.63719223484848
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 746
score: 98.56374104817708
patch: return 0 . value ; } } }
rank: 746
score: 98.396484375
patch: try { break ; }
rank: 746
score: 98.35774061414931
patch: return x 1 + 0 . $NUMBER$ ;
rank: 746
score: 98.29872349330357
patch: break ; f 0 = ;
rank: 746
score: 98.05787963867188
patch: break ; return ;
rank: 747
score: 98.67831420898438
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , true ) ;
rank: 747
score: 98.67668805803571
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , false ) ;
rank: 747
score: 98.63986073369566
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . compute CaMeL Objective CaMeL Value ( x ) ;
rank: 747
score: 98.56357828776042
patch: break ; else if break ; } }
rank: 747
score: 98.3951416015625
patch: break ; * break {
rank: 747
score: 98.35737440321181
patch: result = get CaMeL Min ( ) ;
rank: 747
score: 98.29856654575893
patch: v 1 = x $NUMBER$ ;
rank: 747
score: 98.05580139160156
patch: throw break ;
rank: 748
score: 98.67657180059524
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ $NUMBER$ ) ) ;
rank: 748
score: 98.63372802734375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ; }
rank: 748
score: 98.56322021484375
patch: } if break ; } } if break ;
rank: 748
score: 98.39322916666667
patch: } break { break ;
rank: 748
score: 98.38603864397321
patch: b 1 = ; ; }
rank: 748
score: 98.03884887695312
patch: / ; break ;
rank: 749
score: 98.6778564453125
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . abs ( f 1 ) ) ;
rank: 749
score: 98.67635498046874
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this , this ) ;
rank: 749
score: 98.63933454241071
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 , x 1 ) ; break ;
rank: 749
score: 98.63268324908088
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 749
score: 98.56262885199652
patch: return break ; * * break ; }
rank: 749
score: 98.3917236328125
patch: break ; / * /
rank: 749
score: 98.38582938058036
patch: break ; ; default : ;
rank: 749
score: 98.349755859375
patch: continue ; } }
rank: 749
score: 98.2649637858073
patch: return break ; default :
rank: 749
score: 98.0159912109375
patch: } ; break ;
rank: 750
score: 98.67765808105469
patch: inverted = x 1 ; break ;
rank: 750
score: 98.67608351934524
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ; break ;
rank: 750
score: 98.63148600260416
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ; return x 1 ;
rank: 750
score: 98.56256781684027
patch: break ; } if break ; break ;
rank: 750
score: 98.39073486328125
patch: break ; * *
rank: 750
score: 98.38410949707031
patch: b 1 = x 0 ; }
rank: 750
score: 98.34954833984375
patch: assert fx == 0 . 0 ;
rank: 751
score: 98.63861083984375
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . compute CaMeL Objective CaMeL Value ( x 0 ) ;
rank: 751
score: 98.38967895507812
patch: } return * break ;
rank: 751
score: 98.38395472935268
patch: break * / * / }
rank: 751
score: 98.34906005859375
patch: break ; case 1 :
rank: 751
score: 98.23746744791667
patch: return 1 . 0 ;
rank: 751
score: 97.96997680664063
patch: break ; else ;
rank: 752
score: 98.67572312127976
patch: final double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 752
score: 98.631005859375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( )
rank: 752
score: 98.56227620442708
patch: break ; } break ; return break ;
rank: 752
score: 98.38912963867188
patch: return else { break ;
rank: 752
score: 98.38394927978516
patch: f 0 = f 0 ; }
rank: 752
score: 98.34776475694444
patch: m 1 *= 0 . $NUMBER$ ; }
rank: 752
score: 97.96595764160156
patch: break ; else
rank: 753
score: 98.6765380859375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Max ( ) ;
rank: 753
score: 98.63760230654762
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( x 1 ) + $STRING$ ;
rank: 753
score: 98.56223754882812
patch: break ; } break ; return break ; }
rank: 753
score: 98.38600667317708
patch: if null { break ;
rank: 753
score: 98.3835220336914
patch: break ; case ; case break :
rank: 754
score: 98.6723102072011
patch: break ; get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 754
score: 98.63756306966145
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Absolute CaMeL Accuracy ( ) ; } }
rank: 754
score: 98.62847137451172
patch: f 0 = 0 ; break ;
rank: 754
score: 98.56185913085938
patch: return 0 . $NUMBER$ ; } } else {
rank: 754
score: 98.38324846540179
patch: if ( ! ; break ;
rank: 754
score: 98.37776692708333
patch: } * break ; *
rank: 754
score: 98.34625244140625
patch: return x $NUMBER$ ;
rank: 754
score: 97.90350341796875
patch: int break ;
rank: 755
score: 98.67613389756944
patch: f 1 . return x 1 ; }
rank: 755
score: 98.67177946671195
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( $STRING$ ) ) ; }
rank: 755
score: 98.63748779296876
patch: x 1 *= 0 . $NUMBER$ ; break ;
rank: 755
score: 98.6283950805664
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) {
rank: 755
score: 98.56172688802083
patch: return 0 . 1 ; break ; else
rank: 755
score: 98.38270568847656
patch: v 0 = x 0 ; }
rank: 755
score: 98.37601725260417
patch: return value ; break ;
rank: 755
score: 98.34529622395833
patch: found = x 1 ;
rank: 755
score: 98.22344970703125
patch: return - 1 ;
rank: 755
score: 97.87254333496094
patch: { break ;
rank: 756
score: 98.676123046875
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) f 1 ) ;
rank: 756
score: 98.67146809895833
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , 1 ) ;
rank: 756
score: 98.62838309151786
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ) ;
rank: 756
score: 98.56146918402777
patch: break ; } } return break ; ;
rank: 756
score: 98.38262939453125
patch: break ; continue ; }
rank: 756
score: 98.37451171875
patch: return break ; else {
rank: 756
score: 98.34473673502605
patch: tmp = f 1 ;
rank: 757
score: 98.67611355251736
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 1 , x 1 ) ; }
rank: 757
score: 98.6703109741211
patch: f 0 *= $NUMBER$ . $NUMBER$ ;
rank: 757
score: 98.63730093149039
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ) ; break ;
rank: 757
score: 98.56073676215277
patch: break ; break ; } } catch ;
rank: 757
score: 98.381103515625
patch: if ( ; ; break ;
rank: 757
score: 98.37351481119792
patch: break ; for ( {
rank: 757
score: 98.2176513671875
patch: true = false ; }
rank: 757
score: 97.84085693359376
patch: System ; break ;
rank: 758
score: 98.67523193359375
patch: f 1 : throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 ) ;
rank: 758
score: 98.66984419389205
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ;
rank: 758
score: 98.63705679086539
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break 1 ;
rank: 758
score: 98.62709045410156
patch: else { return x 1 ; }
rank: 758
score: 98.55874972873264
patch: break ; } else if ( break ;
rank: 758
score: 98.3689676920573
patch: } * * * /
rank: 758
score: 98.21246337890625
patch: return x $NUMBER$ ; }
rank: 758
score: 97.83153076171875
patch: break ; continue ;
rank: 759
score: 98.67522229646382
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ; }
rank: 759
score: 98.66978388247283
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) + ) ;
rank: 759
score: 98.636923828125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } f
rank: 759
score: 98.55822143554687
patch: break ; break ; } } } else {
rank: 759
score: 98.37911224365234
patch: break ; } ; case ; :
rank: 759
score: 98.3677978515625
patch: break ; * finally {
rank: 759
score: 98.33999294704861
patch: if ( f 1 == 0 ) {
rank: 759
score: 98.20843505859375
patch: true = true ; }
rank: 759
score: 97.82882690429688
patch: break ; int
rank: 760
score: 98.67502267020089
patch: f 1 *= 0 ; }
rank: 760
score: 98.6695223721591
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( false ) ) ;
rank: 760
score: 98.636640625
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ,
rank: 760
score: 98.6251220703125
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; }
rank: 760
score: 98.36580403645833
patch: } catch break ; ;
rank: 760
score: 98.33866882324219
patch: return x 1 / f 1 ;
rank: 760
score: 98.207470703125
patch: z 0 = ;
rank: 761
score: 98.66932744565217
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Class ( ) + ) ;
rank: 761
score: 98.63663736979167
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) , $STRING$ ;
rank: 761
score: 98.62427368164063
patch: inverted = false ;
rank: 761
score: 98.55614013671875
patch: return * break ; } } return break ;
rank: 761
score: 98.37684631347656
patch: f 0 = break ; } }
rank: 761
score: 98.36368815104167
patch: } ; break ; ;
rank: 761
score: 98.33380805121527
patch: it . x 0 = x 1 ;
rank: 761
score: 98.20597330729167
patch: ; break ; default :
rank: 761
score: 97.80643920898437
patch: throw ; break ;
rank: 762
score: 98.66872240149456
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 ) ) ;
rank: 762
score: 98.63619559151786
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = ! inverted ;
rank: 762
score: 98.62388610839844
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Absolute CaMeL Accuracy ( ) ) ) ; }
rank: 762
score: 98.55598280164931
patch: break break ; } if break ; }
rank: 762
score: 98.37638854980469
patch: f 1 = break ; } }
rank: 762
score: 98.3625996907552
patch: return break ; break {
rank: 762
score: 97.80633544921875
patch: break ; log ;
rank: 763
score: 98.67417399088542
patch: f 1 = 0 ;
rank: 763
score: 98.66867994225544
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Long ( $STRING$ ) ) ;
rank: 763
score: 98.636142578125
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + 0 ) ;
rank: 763
score: 98.62205287388393
patch: break ; return x 1 ;
rank: 763
score: 98.55572509765625
patch: return 0 ; } } break ; }
rank: 763
score: 98.3763427734375
patch: return x 0 ; ; }
rank: 763
score: 98.36207071940105
patch: return break ; * ;
rank: 763
score: 98.32923126220703
patch: if ( fx <= 0 ) {
rank: 763
score: 98.20286865234375
patch: default : break ;
rank: 764
score: 98.66795712425595
patch: final double atol = get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 764
score: 98.63576027199075
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; default :
rank: 764
score: 98.62175218986742
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 764
score: 98.55526394314236
patch: break ; break ; } else if ;
rank: 764
score: 98.37505231584821
patch: break ; } * / ;
rank: 764
score: 98.36100260416667
patch: break ; * catch ;
rank: 764
score: 98.32677459716797
patch: assert fx == 0 . $NUMBER$ ;
rank: 765
score: 98.67378315172698
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Int ( ) + ) ;
rank: 765
score: 98.66731770833333
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) {
rank: 765
score: 98.62085723876953
patch: f 1 += 0 . $NUMBER$ ;
rank: 765
score: 98.55374755859376
patch: break ; } if ( break ; break ;
rank: 765
score: 98.37418365478516
patch: f 0 = ; break ; }
rank: 765
score: 98.36049397786458
patch: while break ; break ;
rank: 765
score: 98.32524108886719
patch: c 0 *= 0 . 0 ;
rank: 765
score: 98.19969685872395
patch: b 1 = break ;
rank: 765
score: 97.7915283203125
patch: throw break ; ;
rank: 766
score: 98.6734130859375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Int ( x 1 ) ) ;
rank: 766
score: 98.66714332217262
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , null ) ;
rank: 766
score: 98.63482666015625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Relative CaMeL Accuracy ( ) ; } }
rank: 766
score: 98.61921037946429
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ) ;
rank: 766
score: 98.55363633897569
patch: return * break ; } break ; }
rank: 766
score: 98.373779296875
patch: break ; } default : break ;
rank: 766
score: 98.36024983723958
patch: break break ; break {
rank: 766
score: 98.32518659319196
patch: break ? ANY _ SIDE :
rank: 767
score: 98.67328752790179
patch: f 0 *= fx ; }
rank: 767
score: 98.66639927455357
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( $STRING$ ) {
rank: 767
score: 98.63444718070652
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Message ( ) , $STRING$ ) ;
rank: 767
score: 98.553564453125
patch: return 0 . ; * break ; break ;
rank: 767
score: 98.37293352399554
patch: z 0 = x 0 ;
rank: 767
score: 98.35870361328125
patch: return break ; * /
rank: 767
score: 98.32292829241071
patch: return f 1 . 0 ;
rank: 767
score: 97.7783203125
patch: ; break ; ;
rank: 768
score: 98.6662264737216
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) - ) ;
rank: 768
score: 98.63435546875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . compute CaMeL Objective CaMeL Value ( x ) ; break ;
rank: 768
score: 98.61865234375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , x 0 ) ;
rank: 768
score: 98.55287000868056
patch: } if break ; } return break ;
rank: 768
score: 98.35697428385417
patch: } ; if break ;
rank: 768
score: 98.19446818033855
patch: width = x 1 ;
rank: 768
score: 97.75389404296875
patch: return new break ;
rank: 769
score: 98.67203979492187
patch: f 1 *= ( 0 . $NUMBER$ ) ;
rank: 769
score: 98.66610054347827
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE , f 1 ) ;
rank: 769
score: 98.63432255497685
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; }
rank: 769
score: 98.6182861328125
patch: f 0 = 0 ; }
rank: 769
score: 98.55225219726563
patch: break ; break ; break ; } } }
rank: 769
score: 98.35310872395833
patch: return break ; / /
rank: 769
score: 98.32256208147321
patch: t 0 *= f 1 ;
rank: 770
score: 98.67159873560855
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) ) ;
rank: 770
score: 98.66596912202381
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ( ) + ) ;
rank: 770
score: 98.63430551382211
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) $STRING$ ) ; break ;
rank: 770
score: 98.61746978759766
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; case ANY _ SIDE : return x 1 ;
rank: 770
score: 98.55074055989583
patch: break ; ; } } break ; }
rank: 770
score: 98.37002127511161
patch: break ; default : { ;
rank: 770
score: 98.351318359375
patch: for break ; ; ;
rank: 770
score: 98.32237243652344
patch: { inverted = ! inverted ; }
rank: 770
score: 98.19156901041667
patch: default : return ; }
rank: 770
score: 97.74898681640624
patch: break ; ; try
rank: 771
score: 98.67107833059211
patch: } throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $STRING$ ;
rank: 771
score: 98.66559709821429
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) ;
rank: 771
score: 98.6148322610294
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 771
score: 98.55055067274306
patch: break ; } } * break ; }
rank: 771
score: 98.36699567522321
patch: g $NUMBER$ * break ; }
rank: 771
score: 98.34811401367188
patch: } break ; try {
rank: 771
score: 98.3218994140625
patch: return f 1 / }
rank: 771
score: 98.18489379882813
patch: f 1 = ;
rank: 771
score: 97.73456420898438
patch: return if break ;
rank: 772
score: 98.67104763454861
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) } ;
rank: 772
score: 98.66489955357143
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Class ( ) ;
rank: 772
score: 98.61473034274194
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 1 ) ; break ;
rank: 772
score: 98.55029296875
patch: break ; this . break ; } break ;
rank: 772
score: 98.36519949776786
patch: if ( break ; default :
rank: 772
score: 98.3470967610677
patch: / break ; break ;
rank: 772
score: 98.18336791992188
patch: b 0 = ;
rank: 772
score: 97.71990356445312
patch: break ; try /
rank: 773
score: 98.66331898082386
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( true ) ) ;
rank: 773
score: 98.61467633928571
patch: else { return x 1 ;
rank: 773
score: 98.55009765625
patch: break ; break ; } super . break ;
rank: 773
score: 98.3648681640625
patch: } ; f 0 = ;
rank: 773
score: 98.34405517578125
patch: return break ; } ;
rank: 773
score: 98.31820678710938
patch: return x 1 ; } break ;
rank: 773
score: 98.18295288085938
patch: z 1 = ; }
rank: 774
score: 98.67093234592014
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ;
rank: 774
score: 98.6633068266369
patch: f 0 . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Runtime ( ) ) ;
rank: 774
score: 98.63272798978366
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ;
rank: 774
score: 98.61438706341912
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( method ) ) ) ;
rank: 774
score: 98.54978434244792
patch: } break ; * * break ; }
rank: 774
score: 98.34212239583333
patch: break ; * else ;
rank: 774
score: 98.31642659505208
patch: state = x 0 ;
rank: 775
score: 98.67042846679688
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) 1 ) ; }
rank: 775
score: 98.66305106026786
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + 1 ) ;
rank: 775
score: 98.6326171875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ) ;
rank: 775
score: 98.61422390407986
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ) ; break ;
rank: 775
score: 98.54871283637152
patch: break ; } else { break ; ;
rank: 775
score: 98.3619384765625
patch: break ; if ( ;
rank: 775
score: 98.34192657470703
patch: } * ;
rank: 775
score: 98.314453125
patch: break ; case REGULA _
rank: 775
score: 98.1672607421875
patch: b 1 = ;
rank: 775
score: 97.70382690429688
patch: break ; this ;
rank: 776
score: 98.66286399147727
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this , $STRING$ ) ) ;
rank: 776
score: 98.63144938151042
patch: return x 0 . 0 ; case REGULA _ FALSI : f 0 *= 0 . $NUMBER$ ; break ;
rank: 776
score: 98.61370294744319
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 776
score: 98.54869927300348
patch: } if break ; } catch break ;
rank: 776
score: 98.34142049153645
patch: if true ; break ;
rank: 776
score: 98.31156703404018
patch: ! inverted = ! inverted ;
rank: 776
score: 98.16690063476562
patch: break ; / *
rank: 776
score: 97.6611083984375
patch: break ; } /
rank: 777
score: 98.669921875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; default :
rank: 777
score: 98.66246448863636
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ + fx ) ) ;
rank: 777
score: 98.63136643629808
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } break ;
rank: 777
score: 98.61298963758681
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ) ;
rank: 777
score: 98.54852905273438
patch: break ; if break ; } break ; }
rank: 777
score: 98.35858154296875
patch: v 0 = x ; }
rank: 777
score: 98.3385986328125
patch: break ; * }
rank: 777
score: 98.31153106689453
patch: if ( 0 . 0 ) {
rank: 777
score: 98.16419474283855
patch: break ; default : )
rank: 777
score: 97.650341796875
patch: { break ; ;
rank: 778
score: 98.66981201171875
patch: f 1 *= ( 0 . 0 ) ;
rank: 778
score: 98.66230701264881
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , x ) ;
rank: 778
score: 98.6312945822011
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + }
rank: 778
score: 98.61107003348214
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ) ) ;
rank: 778
score: 98.54834662543402
patch: break break ; } else if break ;
rank: 778
score: 98.33810424804688
patch: return break ; ; ?
rank: 778
score: 98.31117248535156
patch: return x 1 * x 1 ;
rank: 778
score: 98.15673828125
patch: return - x 1 ;
rank: 779
score: 98.668505859375
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ( ) ) ;
rank: 779
score: 98.66126069568452
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math CaMeL Internal CaMeL Error ( ) ) ; }
rank: 779
score: 98.6310614224138
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = ! inverted ; }
rank: 779
score: 98.60993787977431
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ) ;
rank: 779
score: 98.54820421006944
patch: } if ; break ; break ; }
rank: 779
score: 98.34992327008929
patch: return ; } } * /
rank: 779
score: 98.33192952473958
patch: value * break ; ;
rank: 779
score: 98.30824279785156
patch: return x 1 + f 1 ;
rank: 779
score: 98.1565450032552
patch: sb . append ( ;
rank: 779
score: 97.61856689453126
patch: return / break ;
rank: 780
score: 98.66823323567708
patch: throw new Math CaMeL Internal CaMeL Error ( 0 . $NUMBER$ $STRING$ + f 1 ) ;
rank: 780
score: 98.66114342730978
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( $STRING$ , ) ) ;
rank: 780
score: 98.6301739032452
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . compute CaMeL Objective CaMeL Value ( x 0 ) ; break ;
rank: 780
score: 98.60773999763258
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ;
rank: 780
score: 98.54793090820313
patch: break ; else break ; } return break ;
rank: 780
score: 98.34892926897321
patch: } } / * * ;
rank: 780
score: 98.32960001627605
patch: } break ; } ;
rank: 780
score: 98.30714416503906
patch: return x 1 + x 0 ;
rank: 780
score: 98.13930257161458
patch: x 1 = ; }
rank: 781
score: 98.66816791735198
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ; default :
rank: 781
score: 98.66053838315217
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ; }
rank: 781
score: 98.6073226928711
patch: x 0 = 0 . $NUMBER$ ;
rank: 781
score: 98.54728868272569
patch: } break ; break ; } else {
rank: 781
score: 98.34049479166667
patch: b 0 = ; ;
rank: 781
score: 98.30046844482422
patch: return x 1 . 0 ; }
rank: 781
score: 98.1378885904948
patch: r = x 1 ;
rank: 781
score: 97.60945434570313
patch: else ; break ;
rank: 782
score: 98.6605224609375
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ; } break ;
rank: 782
score: 98.62959798177083
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 782
score: 98.60717033617425
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ) ;
rank: 782
score: 98.54701063368056
patch: } break ; } else if break ;
rank: 782
score: 98.3369140625
patch: return ; } * /
rank: 782
score: 98.2975845336914
patch: t 1 *= 0 . 1 ;
rank: 782
score: 98.13165283203125
patch: break ; max = ;
rank: 782
score: 97.60516357421875
patch: if * break ;
rank: 783
score: 98.6677734375
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; f 1 = x 1 ;
rank: 783
score: 98.60671037946429
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ) ; }
rank: 783
score: 98.54700927734375
patch: } break ; } } } if break ;
rank: 783
score: 98.32228597005208
patch: break ; ] break ;
rank: 783
score: 98.12843831380208
patch: b 0 = break ;
rank: 783
score: 97.60219116210938
patch: break ; out ;
rank: 784
score: 98.66622924804688
patch: f 0 = 0 . 1 ;
rank: 784
score: 98.65996759588069
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( false ) ) ;
rank: 784
score: 98.62897359913794
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x ] ) ;
rank: 784
score: 98.6057990579044
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + ) ) ;
rank: 784
score: 98.54651557074652
patch: break ; } } else { break ;
rank: 784
score: 98.33123779296875
patch: } if ( ;
rank: 784
score: 98.31998697916667
patch: break ; byte break ;
rank: 784
score: 98.29132952008929
patch: return f 1 / inverted ;
rank: 784
score: 98.12809244791667
patch: f 1 = break ;
rank: 784
score: 97.5982177734375
patch: break ; ; else
rank: 785
score: 98.65988026494566
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( $STRING$ ) , ) ;
rank: 785
score: 98.62737567608173
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL
rank: 785
score: 98.60301254734848
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; } }
rank: 785
score: 98.54609510633681
patch: return break ; } else break ; }
rank: 785
score: 98.32554117838542
patch: break ; ; ; }
rank: 785
score: 98.31968180338542
patch: break ; out ; }
rank: 785
score: 98.29126739501953
patch: return x 1 ; } else {
rank: 785
score: 98.12613932291667
patch: x 0 = ; }
rank: 785
score: 97.5900146484375
patch: break ; throw ;
rank: 786
score: 98.6598233309659
patch: throw new Math CaMeL Internal CaMeL Error ( Math . Math . abs ( f 1 + fx ) ) ;
rank: 786
score: 98.60251193576389
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , x 1 ) ;
rank: 786
score: 98.54603881835938
patch: return 0 . 0 ; } } else ;
rank: 786
score: 98.31964111328125
patch: value * break ; /
rank: 786
score: 98.29035186767578
patch: b 0 *= 0 . 0 ;
rank: 786
score: 98.12393188476562
patch: f 0 = break ;
rank: 786
score: 97.57750244140625
patch: ; if break ;
rank: 787
score: 98.66570723684211
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 ) ) ; }
rank: 787
score: 98.65980747767857
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $NUMBER$ , ) ) ;
rank: 787
score: 98.60093470982143
patch: inverted = return x 1 ;
rank: 787
score: 98.54577026367187
patch: } else { break ; } } else {
rank: 787
score: 98.3175557454427
patch: break ; ; ; /
rank: 787
score: 98.31448364257812
patch: f 1 = ; ;
rank: 787
score: 98.28659057617188
patch: n *= 0 . $NUMBER$ ; }
rank: 787
score: 98.12229410807292
patch: ; if ( break )
rank: 787
score: 97.55143737792969
patch: break ; do
rank: 788
score: 98.66550990513393
patch: f 1 = fx ; }
rank: 788
score: 98.65964577414773
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . new Math CaMeL Internal CaMeL Error (
rank: 788
score: 98.62656813401442
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x ;
rank: 788
score: 98.60072326660156
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ) ;
rank: 788
score: 98.54454210069444
patch: } else { return break ; } }
rank: 788
score: 98.31406656901042
patch: s 1 = ; }
rank: 788
score: 98.28592681884766
patch: return x 1 || x 1 ;
rank: 788
score: 98.11704508463542
patch: break ; * / }
rank: 788
score: 97.51362609863281
patch: break ; this
rank: 789
score: 98.66549682617188
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , false ) ;
rank: 789
score: 98.65954008556548
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + x 1 + $STRING$ ) ;
rank: 789
score: 98.62641906738281
patch: return x 1 . x 0 ;
rank: 789
score: 98.60048828125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , method ) ;
rank: 789
score: 98.54440646701389
patch: break ; } } * * * /
rank: 789
score: 98.31467692057292
patch: return break ; ; }
rank: 789
score: 98.28544108072917
patch: case ABOVE _ SIDE :
rank: 789
score: 98.11655680338542
patch: case ; f 1 :
rank: 789
score: 97.47020721435547
patch: break ; final
rank: 790
score: 98.66459575452302
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Exception ( ) + $STRING$ ;
rank: 790
score: 98.6593017578125
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error (
rank: 790
score: 98.62618314302884
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + ) ; break ;
rank: 790
score: 98.60006713867188
patch: approximation = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; }
rank: 790
score: 98.544384765625
patch: break ; this . break ; } } }
rank: 790
score: 98.31294759114583
patch: break ; this ; ;
rank: 790
score: 98.28431701660156
patch: tmp 1 *= 0 . 0 ;
rank: 790
score: 97.43665313720703
patch: break ; boolean
rank: 791
score: 98.66397857666016
patch: f 0 ] = x 1 ;
rank: 791
score: 98.65926106770833
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . MAX _ VALUE ) ; }
rank: 791
score: 98.59983915441177
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; atol = get CaMeL Absolute CaMeL Accuracy ( ) ;
rank: 791
score: 98.54429931640625
patch: return 0 . 0 ; break ; ; }
rank: 791
score: 98.31287638346355
patch: return break + break ;
rank: 791
score: 98.29836018880208
patch: b 0 . ; }
rank: 791
score: 98.28429303850446
patch: t 0 = x 1 ;
rank: 791
score: 98.11525472005208
patch: z 0 = break ;
rank: 792
score: 98.6636962890625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) - fx ) ;
rank: 792
score: 98.6589022549716
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( ) - ) ;
rank: 792
score: 98.62456403459821
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ; break ;
rank: 792
score: 98.54425048828125
patch: } break ; break ; } } }
rank: 792
score: 98.31195068359375
patch: break ; += break ;
rank: 792
score: 98.29654947916667
patch: break * / ; }
rank: 792
score: 98.28203582763672
patch: s 0 *= 0 . 0 ;
rank: 792
score: 98.1118876139323
patch: v 1 = break ;
rank: 792
score: 97.35209655761719
patch: long break ;
rank: 793
score: 98.66265869140625
patch: else throw new Math CaMeL Internal CaMeL Error ( $STRING$ . get CaMeL Error CaMeL Stream ( ) ;
rank: 793
score: 98.65857514880952
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) - 1 ) ;
rank: 793
score: 98.62451171875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; break ; }
rank: 793
score: 98.59947620738636
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; }
rank: 793
score: 98.5437255859375
patch: return break ; } } else if break ;
rank: 793
score: 98.31189982096355
patch: break ; / finally {
rank: 793
score: 98.28195626395089
patch: return x = x 0 ;
rank: 793
score: 98.10971069335938
patch: i = ; break ;
rank: 793
score: 97.33706665039062
patch: else break ;
rank: 794
score: 98.65805451766305
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) , x 1 ) ;
rank: 794
score: 98.6241924579327
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ] ) ;
rank: 794
score: 98.54360961914062
patch: return 0 . 0 ; break ; } else
rank: 794
score: 98.3114725748698
patch: / * break ; ;
rank: 794
score: 98.29154459635417
patch: s 0 = ; }
rank: 794
score: 98.28189849853516
patch: return x 1 ; } } }
rank: 794
score: 98.10875447591145
patch: c 0 = ; }
rank: 794
score: 97.32054138183594
patch: return ; {
rank: 795
score: 98.65763854980469
patch: return x 1 - x $NUMBER$ ;
rank: 795
score: 98.6240867332176
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ) ; break ;
rank: 795
score: 98.59373604910714
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , fx ) ;
rank: 795
score: 98.543359375
patch: return 0 . 0 ; } else return ;
rank: 795
score: 98.31105550130208
patch: break ; value * /
rank: 795
score: 98.28338623046875
patch: } else if ( ;
rank: 795
score: 98.28155517578125
patch: return x 1 / }
rank: 795
score: 98.10328369140625
patch: z 1 = ;
rank: 796
score: 98.66217041015625
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) , this ) ;
rank: 796
score: 98.6574474516369
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( this . get CaMeL Min ( ) ;
rank: 796
score: 98.59371185302734
patch: f 0 = fx ; break ;
rank: 796
score: 98.31099446614583
patch: if false { break ;
rank: 796
score: 97.29820251464844
patch: return ; ;
rank: 797
score: 98.65699598524306
patch: f 0 *= f 1 / fx ;
rank: 797
score: 98.62330005787037
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . do CaMeL Solve ( x 0 , x 1 ) ; break ;
rank: 797
score: 98.59351981026786
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; * /
rank: 797
score: 98.54200575086806
patch: break ; } } return * break ;
rank: 797
score: 98.30961100260417
patch: return finally ; break ;
rank: 797
score: 98.27964274088542
patch: end = x 1 ;
rank: 797
score: 98.27884928385417
patch: d 0 = ; }
rank: 797
score: 98.09444173177083
patch: break = x 1 ;
rank: 797
score: 97.29061889648438
patch: break ; throw
rank: 798
score: 98.65679376775569
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $NUMBER$ ) ) ;
rank: 798
score: 98.62010846819196
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) { return x 0 ;
rank: 798
score: 98.5924405184659
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Absolute CaMeL Accuracy ( ) ) ) ; break ;
rank: 798
score: 98.541845703125
patch: return break ; break ; else break ; }
rank: 798
score: 98.30960083007812
patch: } / ; break ;
rank: 798
score: 98.2776590983073
patch: break * break * /
rank: 798
score: 97.28192901611328
patch: break ; return
rank: 799
score: 98.65652901785714
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + 0 ) ;
rank: 799
score: 98.59208540482955
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 799
score: 98.54182942708333
patch: break ; ; else return break ; }
rank: 799
score: 98.30752563476562
patch: break ; ; ; {
rank: 799
score: 98.27719116210938
patch: g $NUMBER$ * break ;
rank: 799
score: 98.276123046875
patch: return x 1 == x 1 ;
rank: 799
score: 98.0931396484375
patch: case ; break ;
rank: 799
score: 97.2818374633789
patch: break ; {
rank: 800
score: 98.66156684027777
patch: f 1 *= f 0 ; break ;
rank: 800
score: 98.65581720525569
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( true ) ) ;
rank: 800
score: 98.61949744591347
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ] ) ; break ;
rank: 800
score: 98.59162671638258
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ,
rank: 800
score: 98.54177856445312
patch: return 0 . 0 ; } } * /
rank: 800
score: 98.30678304036458
patch: } case ; break ;
rank: 800
score: 98.27559661865234
patch: m 0 *= 0 . 1 ;
rank: 800
score: 98.08864339192708
patch: v 1 = ; }
rank: 800
score: 97.23043823242188
patch: final break ;
rank: 801
score: 98.66099853515625
patch: f 1 = x 1 ; } break ;
rank: 801
score: 98.65577334449405
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , value ) ;
rank: 801
score: 98.61905611478366
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; ;
rank: 801
score: 98.58902762276786
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , atol ) ;
rank: 801
score: 98.54163818359375
patch: break ; break ; } break ; } }
rank: 801
score: 98.30602010091145
patch: else { break ; }
rank: 801
score: 98.2751235961914
patch: return x 1 && x 1 ;
rank: 801
score: 98.2744140625
patch: return x ; } }
rank: 801
score: 98.08744303385417
patch: i = 0 ; }
rank: 801
score: 97.20016479492188
patch: break ; finally
rank: 802
score: 98.65571521577381
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) ) ; } }
rank: 802
score: 98.61898099459134
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; } } }
rank: 802
score: 98.54160563151042
patch: break ; } } ; return break ;
rank: 802
score: 98.3032938639323
patch: break ; value break ;
rank: 802
score: 98.27403913225446
patch: return x 1 . $NUMBER$ :
rank: 802
score: 98.26894124348958
patch: break false ; default :
rank: 802
score: 98.08541870117188
patch: break ; case signum :
rank: 802
score: 97.18255615234375
patch: return this ;
rank: 803
score: 98.65507507324219
patch: return x 1 - f 0 ;
rank: 803
score: 98.61842628761575
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ) ; break ;
rank: 803
score: 98.58853934151786
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; case PEGASUS : f 0 *= f 1 ;
rank: 803
score: 98.5414794921875
patch: break ; super . break ; } else {
rank: 803
score: 98.3026123046875
patch: break ; ; / *
rank: 803
score: 98.27381134033203
patch: return x 0 + x 1 ;
rank: 803
score: 98.26190185546875
patch: } } if ( ;
rank: 803
score: 98.08226318359375
patch: false = true ;
rank: 803
score: 97.17992401123047
patch: return false ;
rank: 804
score: 98.66001490542763
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 0 ; }
rank: 804
score: 98.65437117866848
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . this , ) ;
rank: 804
score: 98.61799225983796
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ; }
rank: 804
score: 98.58820452008929
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( f 0 ) ) ) ;
rank: 804
score: 98.54141574435764
patch: break ; * * / } } }
rank: 804
score: 98.30133056640625
patch: value = break ;
rank: 804
score: 98.2560526529948
patch: break ; ; } }
rank: 804
score: 98.07975260416667
patch: z 1 = break ;
rank: 804
score: 97.17933654785156
patch: boolean break ;
rank: 805
score: 98.65953572591145
patch: f 0 = fx ;
rank: 805
score: 98.65422257133152
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ ) , ) ;
rank: 805
score: 98.272705078125
patch: first 0 *= 0 . 0 ;
rank: 805
score: 97.1539306640625
patch: break ; super
rank: 806
score: 98.65865652901786
patch: x 1 *= x 1 ;
rank: 806
score: 98.65414826766305
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) , $STRING$ ) ;
rank: 806
score: 98.61621997974537
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return f 1 ;
rank: 806
score: 98.54069688585069
patch: break ; } break ; } catch ;
rank: 806
score: 98.29894002278645
patch: } ; break ; }
rank: 806
score: 98.272216796875
patch: tmp 0 *= 0 . 1 ;
rank: 806
score: 98.2514139811198
patch: if ( ! ; ;
rank: 806
score: 98.06557210286458
patch: } f 0 = ;
rank: 806
score: 97.1431655883789
patch: return ; try
rank: 807
score: 98.65694387335526
patch: throw new Math CaMeL Internal CaMeL Error ( method . get CaMeL Exception ( ) ) ; }
rank: 807
score: 98.65397135416667
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ 1 ) ) ;
rank: 807
score: 98.614013671875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ; }
rank: 807
score: 98.58649236505681
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 807
score: 98.54001193576389
patch: break ; } } throw break ; }
rank: 807
score: 98.29758707682292
patch: break ; * * ;
rank: 807
score: 98.25054321289062
patch: break * / ;
rank: 807
score: 98.05572509765625
patch: break = x $NUMBER$ ;
rank: 807
score: 97.12680053710938
patch: break ; out
rank: 808
score: 98.65682822779605
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 ) + $STRING$ ;
rank: 808
score: 98.65394658627717
patch: break ; case PEGASUS : System . err . throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 808
score: 98.6138916015625
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 1 ) ; break ;
rank: 808
score: 98.58633761935764
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ) ;
rank: 808
score: 98.53994750976562
patch: try { break ; } catch break ; }
rank: 808
score: 98.29652913411458
patch: return break ; try {
rank: 808
score: 98.27161407470703
patch: return f 1 / f 1 ;
rank: 808
score: 97.10100555419922
patch: / break ;
rank: 809
score: 98.65681537828948
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; f 0 = fx ;
rank: 809
score: 98.61353443287037
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ; break ;
rank: 809
score: 98.58612419577206
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) 0 ) ) ;
rank: 809
score: 98.5397705078125
patch: return 0 . 0 ; } } else }
rank: 809
score: 98.2955322265625
patch: } while break ; ;
rank: 809
score: 98.26630401611328
patch: z 0 *= 0 . 0 ;
rank: 809
score: 98.23103841145833
patch: l 0 = ; }
rank: 809
score: 98.0540771484375
patch: r = x $NUMBER$ ;
rank: 809
score: 97.09152221679688
patch: break ; start
rank: 810
score: 98.65657261439732
patch: inverted = fx ; break ;
rank: 810
score: 98.6535977450284
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( Math . abs ( f 1 + fx ) ) ;
rank: 810
score: 98.58596709280303
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = get CaMeL Relative CaMeL Accuracy ( ) ;
rank: 810
score: 98.53968505859375
patch: } break ; } } else return break ;
rank: 810
score: 98.29544067382812
patch: break ; case ; *
rank: 810
score: 98.26615397135417
patch: case BELOW _ SIDE :
rank: 810
score: 98.22796630859375
patch: } } * /
rank: 810
score: 98.04457397460938
patch: c 0 = ;
rank: 810
score: 97.0842056274414
patch: break ; in
rank: 811
score: 98.65345348011364
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( $STRING$ + value ) ) ;
rank: 811
score: 98.61094835069444
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , inverted ) ; break ;
rank: 811
score: 98.58586774553571
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) - 0 ) ) ;
rank: 811
score: 98.53917236328125
patch: return 0 . 0 ; } } catch ;
rank: 811
score: 98.29527791341145
patch: break ; ; catch ;
rank: 811
score: 98.26553344726562
patch: if ( 0 . $NUMBER$ ) {
rank: 811
score: 98.2265116373698
patch: break ; >= 0 ;
rank: 811
score: 97.08406829833984
patch: ; ; ;
rank: 812
score: 98.65599300986842
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . do CaMeL Solve ( ) , ) ;
rank: 812
score: 98.65318080357143
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . get CaMeL Runtime ( ) }
rank: 812
score: 98.60947963169643
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ] ) ; break ;
rank: 812
score: 98.539111328125
patch: break ; } break ; break ; break ;
rank: 812
score: 98.2625961303711
patch: System . log ( $STRING$ ) ;
rank: 812
score: 98.04061279296874
patch: false = false ;
rank: 812
score: 97.0792236328125
patch: break ; String
rank: 813
score: 98.6546695106908
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . do CaMeL Solve ( ) + ) ;
rank: 813
score: 98.65257626488095
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ + x 1 ) ;
rank: 813
score: 98.60916573660714
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; / * /
rank: 813
score: 98.53843994140625
patch: break ; } } break ; false ; }
rank: 813
score: 98.29484049479167
patch: return start ; break ;
rank: 813
score: 98.26251220703125
patch: result = f 1 ;
rank: 813
score: 97.07666015625
patch: for break ;
rank: 814
score: 98.65452816611842
patch: f 1 . throw new Math CaMeL Internal CaMeL Error ( $STRING$ + f 1 + ) ;
rank: 814
score: 98.65214611235119
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( this ) ) ; }
rank: 814
score: 98.60862379807692
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; final
rank: 814
score: 98.58455984933036
patch: inverted = true ; break ;
rank: 814
score: 98.53770751953125
patch: break ; break ; } } break ; else
rank: 814
score: 98.2937723795573
patch: break ; / ; ;
rank: 814
score: 98.2171122233073
patch: return x 0 ; ;
rank: 814
score: 98.02621459960938
patch: return ; default :
rank: 814
score: 97.07557678222656
patch: break ; if
rank: 815
score: 98.65414910567434
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) * ) ;
rank: 815
score: 98.65154157366071
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) - $NUMBER$ ) ;
rank: 815
score: 98.60846416766827
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . compute CaMeL Objective CaMeL Value ( x 1 ) ; break ;
rank: 815
score: 98.58340541294643
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , this ) ) ;
rank: 815
score: 98.53768310546874
patch: return 0 . length ; break ; break ;
rank: 815
score: 98.2931620279948
patch: } break ; value ;
rank: 815
score: 98.26026916503906
patch: return - 0 . $NUMBER$ ; }
rank: 815
score: 98.00846557617187
patch: / * break ;
rank: 815
score: 97.06617736816406
patch: break ; void
rank: 816
score: 98.65351305509868
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; f 1 = fx ;
rank: 816
score: 98.65140787760417
patch: if ( ftol == 0 ) {
rank: 816
score: 98.60387311662946
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; return x 1 ;
rank: 816
score: 98.25939069475446
patch: state = x 1 ; }
rank: 816
score: 97.03560638427734
patch: break ; set
rank: 817
score: 98.65236118861607
patch: f 0 *= - 1 ;
rank: 817
score: 98.60129123263889
patch: return ( x 0 . 0 ) ;
rank: 817
score: 98.58329380580358
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 817
score: 98.53661499023437
patch: break ; } else break ; break ; }
rank: 817
score: 98.29050699869792
patch: break ; short break ;
rank: 817
score: 98.25844029017857
patch: m 0 *= f 1 ;
rank: 817
score: 98.21049499511719
patch: } ; ;
rank: 817
score: 97.99579467773438
patch: switch ( method )
rank: 817
score: 97.03378295898438
patch: break ; check
rank: 818
score: 98.65210723876953
patch: f 1 . return x 1 ;
rank: 818
score: 98.6488370028409
patch: super . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ;
rank: 818
score: 98.582470703125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ,
rank: 818
score: 98.53629150390626
patch: return break ; } } catch break ; }
rank: 818
score: 98.29024251302083
patch: { break ; break ;
rank: 818
score: 98.25790405273438
patch: n = f 1 ;
rank: 818
score: 98.20074462890625
patch: break ; ; case ;
rank: 818
score: 97.02284240722656
patch: break ; long
rank: 819
score: 98.65126439144737
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) / ) ;
rank: 819
score: 98.64734996448864
patch: throw new Math CaMeL Internal CaMeL Error ( Math CaMeL Internal CaMeL Error . $STRING$ + f 1 + ) ;
rank: 819
score: 98.58228934151786
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ) ) ;
rank: 819
score: 98.53394165039063
patch: break break ; break ; } break ; }
rank: 819
score: 98.2892557779948
patch: * * * break ;
rank: 819
score: 98.25030517578125
patch: n = x 1 ;
rank: 819
score: 98.19525146484375
patch: break ; < ; }
rank: 819
score: 97.97463989257812
patch: return 1 ; }
rank: 819
score: 97.02216339111328
patch: return System ;
rank: 820
score: 98.65105879934211
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) x 1 ;
rank: 820
score: 98.64662863991477
patch: throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( ) + $STRING$ ) ; }
rank: 820
score: 98.59939049030173
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 , x 1 ) ;
rank: 820
score: 98.58147321428571
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , $STRING$ ) ) ;
rank: 820
score: 98.53369140625
patch: break ; break ; } return break ; }
rank: 820
score: 98.28915405273438
patch: return break ; value ;
rank: 820
score: 98.24992152622768
patch: return x 1 / inverted ;
rank: 820
score: 98.1923319498698
patch: if ( ! ; }
rank: 820
score: 97.9727294921875
patch: v 1 = ;
rank: 820
score: 97.01358032226562
patch: return true ;
rank: 821
score: 98.64560768821023
patch: cfw . throw new Math CaMeL Internal CaMeL Error ( new Math CaMeL Internal CaMeL Error ( 1 ) ) ;
rank: 821
score: 98.59927804129464
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ) ;
rank: 821
score: 98.58106186810662
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 821
score: 98.53344116210937
patch: } else if break ; } break ; }
rank: 821
score: 98.24703979492188
patch: if ( fx >= 0 ) {
rank: 821
score: 98.1885274251302
patch: return x ; } ;
rank: 821
score: 97.95069580078125
patch: width = ; }
rank: 821
score: 97.0062255859375
patch: if ; {
rank: 822
score: 98.64956825657895
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Long ( ) + ) ;
rank: 822
score: 98.64486355251736
patch: final double fx 0 = f 1 ;
rank: 822
score: 98.59913013599537
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + 1 ) ; break ;
rank: 822
score: 98.58103314568015
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ] ) ) ;
rank: 822
score: 98.533251953125
patch: break ; } else { return value ; }
rank: 822
score: 98.2860819498698
patch: break ; break ; value
rank: 822
score: 98.24631173270089
patch: t 1 *= f 1 ;
rank: 822
score: 97.93724975585937
patch: i = ; }
rank: 822
score: 96.98065185546875
patch: return ;
rank: 823
score: 98.64936266447368
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) } ) ;
rank: 823
score: 98.64396528764205
patch: System . err . throw new Math CaMeL Internal CaMeL Error ( Math . Math . abs ( ) ) ;
rank: 823
score: 98.58047572544643
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , false ) ) ;
rank: 823
score: 98.53260498046875
patch: } break ; } else { break ; }
rank: 823
score: 98.28566284179688
patch: } break ; /
rank: 823
score: 98.24473063151042
patch: break ; case 0 :
rank: 823
score: 98.18296305338542
patch: g 1 = ; }
rank: 823
score: 97.9349853515625
patch: break - 1 ;
rank: 823
score: 96.96932983398438
patch: assert break ;
rank: 824
score: 98.64936266447368
patch: { throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) ; }
rank: 824
score: 98.64338822798295
patch: throw new Math CaMeL Internal CaMeL Error ( this . new Math CaMeL Internal CaMeL Error ( 1 ) ) ;
rank: 824
score: 98.59828920717592
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; }
rank: 824
score: 98.57997349330357
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , true ) ) ;
rank: 824
score: 98.53232421875
patch: break ; } this . break ; break ;
rank: 824
score: 98.28438313802083
patch: f 0 ; break ;
rank: 824
score: 98.24330139160156
patch: { f 1 *= f 1 ;
rank: 824
score: 98.1825459798177
patch: continue ; default ; }
rank: 824
score: 96.95777893066406
patch: break ; max
rank: 825
score: 98.6478335731908
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) <= ) ;
rank: 825
score: 98.59781901041667
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ) ; break ;
rank: 825
score: 98.2836201985677
patch: } * * / /
rank: 825
score: 98.24018859863281
patch: break ; default : return x ;
rank: 825
score: 98.18218994140625
patch: return ; case ; }
rank: 825
score: 97.92634887695313
patch: break . $NUMBER$ :
rank: 825
score: 96.95562744140625
patch: return ; /
rank: 826
score: 98.64777575041118
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 826
score: 98.57977120535715
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 826
score: 98.53148193359375
patch: } else if break ; } catch break ;
rank: 826
score: 98.27918497721355
patch: break { break ; *
rank: 826
score: 98.23918151855469
patch: return x 1 & x 1 ;
rank: 826
score: 98.18203735351562
patch: } if ( ; ;
rank: 826
score: 96.93540954589844
patch: return start ;
rank: 827
score: 98.64726177014802
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( x 1 ) + ) ;
rank: 827
score: 98.59721317997685
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) return x 1 ;
rank: 827
score: 98.57881433823529
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , atol ) ;
rank: 827
score: 98.53073120117188
patch: break ; break ; } if ( break ;
rank: 827
score: 98.27821858723958
patch: break ; ; } ;
rank: 827
score: 98.23551177978516
patch: if ( fx != 0 ) {
rank: 827
score: 96.9187240600586
patch: if ; try
rank: 828
score: 98.64639442845395
patch: f 1 *= get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 828
score: 98.59631799768519
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 828
score: 98.57770852481617
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( $NUMBER$ ) ) ) ;
rank: 828
score: 98.52955322265625
patch: } else if break ; break ; } }
rank: 828
score: 98.277099609375
patch: break * break ; ;
rank: 828
score: 98.17566935221355
patch: return ; default ; }
rank: 828
score: 97.91267700195313
patch: x 1 = ;
rank: 828
score: 96.91791534423828
patch: return super ;
rank: 829
score: 98.64564273231908
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . parse CaMeL Int ( ) ) ; }
rank: 829
score: 98.61727142333984
patch: x 1 *= 0 . 0 ;
rank: 829
score: 98.5771843405331
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; }
rank: 829
score: 98.52893676757813
patch: break ; break ; } } return value ;
rank: 829
score: 98.27613321940105
patch: } * * * ;
rank: 829
score: 98.17486572265625
patch: } * / ;
rank: 829
score: 97.90142822265625
patch: x 0 = ;
rank: 829
score: 96.88838195800781
patch: break ; public
rank: 830
score: 98.61441802978516
patch: f 0 *= 0 . ] ;
rank: 830
score: 98.59389467592592
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + 0 ) ; break ;
rank: 830
score: 98.57682756696428
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; / /
rank: 830
score: 98.52890625
patch: break ; for break ; } break ; }
rank: 830
score: 98.22794015066964
patch: { return x 1 ; }
rank: 830
score: 97.89010620117188
patch: break . $NUMBER$ ;
rank: 830
score: 96.88068389892578
patch: return ; else
rank: 831
score: 98.64525082236842
patch: f 1 = compute CaMeL Objective CaMeL Value ( x 0 , x 1 ) ; break ;
rank: 831
score: 98.57607693142361
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , rtol ) ) ;
rank: 831
score: 98.52859497070312
patch: return break ; } } if ; break ;
rank: 831
score: 98.27407836914062
patch: break ; break break ;
rank: 831
score: 98.22745186941964
patch: result = x 0 ; }
rank: 831
score: 97.88794555664063
patch: v 0 = ;
rank: 831
score: 96.87971496582031
patch: break ; current
rank: 832
score: 98.64397872121711
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Min ( ) ) ;
rank: 832
score: 98.59329788773148
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; default :
rank: 832
score: 98.57547433035714
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , allowed ) ) ;
rank: 832
score: 98.52813720703125
patch: break ; } } break ; null ; }
rank: 832
score: 98.27384440104167
patch: assert break ; break ;
rank: 832
score: 98.22691345214844
patch: try { switch ( method ) {
rank: 832
score: 98.16764322916667
patch: b 1 = ; ;
rank: 832
score: 97.88046264648438
patch: case ; default :
rank: 832
score: 96.86993408203125
patch: if false ;
rank: 833
score: 98.64310495476974
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = x 1 ;
rank: 833
score: 98.61107635498047
patch: f 0 *= Integer . $NUMBER$ ;
rank: 833
score: 98.59327855603448
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 , x 1 ) ;
rank: 833
score: 98.57518095128677
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( 0 ) ) ) ;
rank: 833
score: 98.52648315429687
patch: } break ; } else return break ; }
rank: 833
score: 98.27316284179688
patch: } * * / }
rank: 833
score: 98.22487095424107
patch: ; inverted = ! inverted ;
rank: 833
score: 98.16734619140625
patch: } ; ; ;
rank: 833
score: 96.86414337158203
patch: public break ;
rank: 834
score: 98.64239180715461
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) + 0 ;
rank: 834
score: 98.60601043701172
patch: final double fx = f 1 ;
rank: 834
score: 98.57416848575367
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ;
rank: 834
score: 98.52545166015625
patch: break break ; } break ; break ; }
rank: 834
score: 98.27208455403645
patch: return true ; break ;
rank: 834
score: 98.2196044921875
patch: state = fx ;
rank: 834
score: 98.16712443033855
patch: f 1 += ; }
rank: 834
score: 97.8584716796875
patch: return - $NUMBER$ ;
rank: 834
score: 96.84711456298828
patch: return $STRING$ ;
rank: 835
score: 98.64178788034539
patch: throw new Math CaMeL Internal CaMeL Error ( Math . abs ( x 1 ) ) ; }
rank: 835
score: 98.59170096261161
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ) ; return x 1 ;
rank: 835
score: 98.57401769301471
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( 1 ) ) ) ;
rank: 835
score: 98.52485961914063
patch: return 0 . ; } break ; break ;
rank: 835
score: 98.27166748046875
patch: break ; out ; *
rank: 835
score: 98.21956961495536
patch: return x 0 ; break ;
rank: 835
score: 98.16424560546875
patch: } * / ; ;
rank: 835
score: 97.85771484375
patch: ret = ; }
rank: 835
score: 96.83190155029297
patch: break ; count
rank: 836
score: 98.64137669613487
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . length ( ) + 1 ) ; }
rank: 836
score: 98.60255432128906
patch: x 1 *= 0 . $NUMBER$ ;
rank: 836
score: 98.57362874348958
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , f 1 ) ;
rank: 836
score: 98.52460327148438
patch: return 0 . 0 ; break ; / }
rank: 836
score: 98.26856689453125
patch: return break break ;
rank: 836
score: 98.21808624267578
patch: case ANY _ SIDE : break ;
rank: 836
score: 98.16405232747395
patch: break * / / ;
rank: 836
score: 97.8533203125
patch: w 0 = ;
rank: 836
score: 96.82587432861328
patch: if $NUMBER$ ;
rank: 837
score: 98.6408627158717
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) >= ) ;
rank: 837
score: 98.59041341145833
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x ] ;
rank: 837
score: 98.57356531479779
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( $STRING$ ) ) ) ;
rank: 837
score: 98.26508178710938
patch: break ; * else
rank: 837
score: 98.21769205729167
patch: return 0 . 1 ;
rank: 837
score: 98.1629638671875
patch: f 0 . ; }
rank: 837
score: 96.82515716552734
patch: if ; break
rank: 838
score: 98.63991827713816
patch: throw new Math CaMeL Internal CaMeL Error ( $STRING$ . to CaMeL String ( ) $NUMBER$ ) ;
rank: 838
score: 98.59020543981481
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . compute CaMeL Objective CaMeL Value ( x 0 , x ] ) ;
rank: 838
score: 98.57290469898896
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ;
rank: 838
score: 98.21434020996094
patch: logger . log ( $STRING$ ) ;
rank: 838
score: 98.16233317057292
patch: throw new break ; }
rank: 838
score: 97.8458480834961
patch: return 1 ;
rank: 838
score: 96.81866455078125
patch: throw ; ;
rank: 839
score: 98.63986045435855
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( f 0 , x 1 ) ;
rank: 839
score: 98.59853690011161
patch: inverted = ! ! inverted ;
rank: 839
score: 98.57258157169117
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ,
rank: 839
score: 98.52249755859376
patch: break break ; } } } } break ;
rank: 839
score: 98.2364013671875
patch: } * * /
rank: 839
score: 98.21321614583333
patch: state = f 1 ;
rank: 839
score: 98.1621602376302
patch: break ; } ; }
rank: 839
score: 97.82744140625
patch: result = ; }
rank: 839
score: 96.79534149169922
patch: return ; *
rank: 840
score: 98.59803771972656
patch: x 0 *= 0 . 0 ;
rank: 840
score: 98.58847992995689
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; inverted = ! inverted ; }
rank: 840
score: 98.57229953342014
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; } } }
rank: 840
score: 98.52245483398437
patch: return break ; this . break ; break ;
rank: 840
score: 98.23007202148438
patch: break break ; *
rank: 840
score: 98.209716796875
patch: return x 1 + f 0 ;
rank: 840
score: 97.82236938476562
patch: true = true ;
rank: 840
score: 96.78120422363281
patch: return $NUMBER$ ;
rank: 841
score: 98.63507080078125
patch: f 1 += f 1 ; }
rank: 841
score: 98.5876693725586
patch: return x 0 = f 1 ;
rank: 841
score: 98.57195172991071
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ) ;
rank: 841
score: 98.52245076497395
patch: return 0 . length ;
rank: 841
score: 98.22654418945312
patch: result = break ;
rank: 841
score: 98.2092056274414
patch: { f 0 *= f 1 ;
rank: 841
score: 97.81944580078125
patch: r = ; }
rank: 841
score: 96.76814270019531
patch: break ; Illegal
rank: 842
score: 98.5860007957176
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ; break ;
rank: 842
score: 98.52171020507812
patch: break ; } break ; else return break ;
rank: 842
score: 98.22198486328125
patch: } catch break ;
rank: 842
score: 98.20884486607143
patch: m 1 *= f 1 ;
rank: 842
score: 97.8189697265625
patch: / * / }
rank: 842
score: 96.75581359863281
patch: System ; ;
rank: 843
score: 98.63276502821181
patch: f 1 *= f 0 ; } }
rank: 843
score: 98.57062445746527
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; } break ;
rank: 843
score: 98.521484375
patch: break break ; break ; } catch break ;
rank: 843
score: 98.20675659179688
patch: return x 1 ? x 1 ;
rank: 843
score: 98.15655517578125
patch: return ; } } ;
rank: 843
score: 96.73577880859375
patch: break ; value
rank: 844
score: 98.5851417824074
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ; }
rank: 844
score: 98.57059054904514
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , method ) ) ; }
rank: 844
score: 98.20654907226563
patch: break ; for (
rank: 844
score: 98.20630645751953
patch: break ; case PEGASUS
rank: 844
score: 98.14847819010417
patch: break / * break ;
rank: 844
score: 97.8045425415039
patch: style = ;
rank: 844
score: 96.73556518554688
patch: return Integer ;
rank: 845
score: 98.58414713541667
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ; }
rank: 845
score: 98.51874389648438
patch: return 0 . value ; break ; } }
rank: 845
score: 98.20355224609375
patch: while ( ! inverted ) {
rank: 845
score: 98.20259399414063
patch: break * break ;
rank: 845
score: 98.14707438151042
patch: } else { ; }
rank: 845
score: 97.80404052734374
patch: true = false ;
rank: 845
score: 96.73175811767578
patch: String break ;
rank: 846
score: 98.51864624023438
patch: return 0 . $NUMBER$ ; break ; } }
rank: 846
score: 97.79177856445312
patch: break . 1 :
rank: 846
score: 96.72352600097656
patch: / ; ;
rank: 847
score: 98.56961495535714
patch: break ; return x 0 ;
rank: 847
score: 98.51823120117187
patch: break ; } if ; return break ; }
rank: 847
score: 98.20039876302083
patch: tmp = x 0 ;
rank: 847
score: 98.19520263671875
patch: value * break ;
rank: 847
score: 98.13812255859375
patch: return x ; ; }
rank: 847
score: 97.79106903076172
patch: width = ;
rank: 847
score: 96.72303771972656
patch: break ; double
rank: 848
score: 98.57937186104911
patch: f 0 *= 1 ; }
rank: 848
score: 98.56958705357142
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ,
rank: 848
score: 98.19327799479167
patch: res = f 1 ;
rank: 848
score: 98.18916625976563
patch: value break ; ;
rank: 848
score: 98.13787841796875
patch: m 0 = ; }
rank: 848
score: 97.78896484375
patch: c 1 = ;
rank: 848
score: 96.71961975097656
patch: double break ;
rank: 849
score: 98.62612915039062
patch: f 0 = 0 ;
rank: 849
score: 98.58216203962054
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , ftol ) ; break ;
rank: 849
score: 98.56819893973214
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , $NUMBER$ ) ) ;
rank: 849
score: 98.5179443359375
patch: break ; } else if break ; } }
rank: 849
score: 98.19105747767857
patch: t 0 = f 1 ;
rank: 849
score: 98.18417358398438
patch: * break ; ;
rank: 849
score: 97.7880126953125
patch: this . break ;
rank: 849
score: 96.71475219726562
patch: return null ;
rank: 850
score: 98.62223052978516
patch: f 0 *= fx . $NUMBER$ ;
rank: 850
score: 98.56810825892858
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; atol = get CaMeL Absolute CaMeL Accuracy ( ) ; }
rank: 850
score: 98.51686401367188
patch: break ; } else if ; break ; }
rank: 850
score: 98.19008091517857
patch: t 0 *= x 1 ;
rank: 850
score: 98.13497924804688
patch: if ( break ; }
rank: 850
score: 97.78656005859375
patch: switch ( break )
rank: 850
score: 96.70919036865234
patch: break ; new
rank: 851
score: 98.62069266183036
patch: b 1 *= x 1 ;
rank: 851
score: 98.58023507254464
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , f 0 ) ; break ;
rank: 851
score: 98.56748046875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( f 1 ) ) ) ;
rank: 851
score: 98.51680297851563
patch: return 0 . ; break ; } break ;
rank: 851
score: 98.1885986328125
patch: { switch ( allowed ) {
rank: 851
score: 98.16798706054688
patch: for break ; ;
rank: 851
score: 98.13340250651042
patch: break ; / * ;
rank: 851
score: 96.68169403076172
patch: * break ;
rank: 852
score: 98.61756896972656
patch: f 1 ; return x 0 ;
rank: 852
score: 98.57976422991071
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ; break ;
rank: 852
score: 98.56732700892857
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + 0 ) ) ;
rank: 852
score: 98.51605834960938
patch: } break ; } } if break ; }
rank: 852
score: 98.1560546875
patch: } break ; value
rank: 852
score: 97.7828369140625
patch: break ; > 0
rank: 852
score: 96.60044352213542
patch: ; ;
rank: 853
score: 98.61697823660714
patch: inverted = 0 . 0 ;
rank: 853
score: 98.57894461495536
patch: ftol = f 1 ;
rank: 853
score: 98.56627371651786
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , } ) ) ;
rank: 853
score: 98.514599609375
patch: } break ; } } } break ; }
rank: 853
score: 98.18699137369792
patch: if ( fx ) {
rank: 853
score: 98.1260477701823
patch: return x 0 * ;
rank: 853
score: 97.77910766601562
patch: y 0 = ;
rank: 853
score: 96.521728515625
patch: throw ;
rank: 854
score: 98.61614990234375
patch: try { return x 1 ;
rank: 854
score: 98.57842145647321
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x ] ) ) ;
rank: 854
score: 98.513134765625
patch: break ; } } } return * break ;
rank: 854
score: 98.18639119466145
patch: ret = x 1 ;
rank: 854
score: 98.14569091796875
patch: }
rank: 854
score: 98.12534586588542
patch: f 0 ++ ; }
rank: 854
score: 97.77461547851563
patch: style = ; }
rank: 854
score: 96.39992268880208
patch: } ;
rank: 855
score: 98.57635708512932
patch: if ( ! Fast CaMeL Math . abs ( method . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) { return x 0 ; }
rank: 855
score: 98.57537078857422
patch: break ; this . f 1 ;
rank: 855
score: 98.56572265625
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) - 1 ) ) ;
rank: 855
score: 98.5115234375
patch: break ; } } break ; while break ;
rank: 855
score: 98.1852294921875
patch: continue x 1 ;
rank: 855
score: 98.13742065429688
patch: } * /
rank: 855
score: 98.1228535970052
patch: break * break ; }
rank: 855
score: 96.39779663085938
patch: break
rank: 856
score: 98.57551522090517
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x ] ) ;
rank: 856
score: 98.56467633928571
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , null ) ) ;
rank: 856
score: 98.51101684570312
patch: break ; } } else throw break ; }
rank: 856
score: 98.18434651692708
patch: res = x 1 ;
rank: 856
score: 98.1349609375
patch: return - break ;
rank: 856
score: 98.12068939208984
patch: return ; }
rank: 856
score: 97.76466064453125
patch: g 1 = ;
rank: 856
score: 96.39215087890625
patch: / ;
rank: 857
score: 98.57013811383929
patch: verify CaMeL Bracketing ( ) ;
rank: 857
score: 98.56260172526042
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , f 0 ) ;
rank: 857
score: 98.51013793945313
patch: return break ; } } else break ; }
rank: 857
score: 98.13353271484375
patch: break break ; else
rank: 857
score: 98.11707560221355
patch: z 0 = ; ;
rank: 857
score: 97.75972900390624
patch: break - $NUMBER$ ;
rank: 857
score: 96.35659790039062
patch: System ;
rank: 858
score: 98.61351776123047
patch: return x 1 : x 1 ;
rank: 858
score: 98.57443763469827
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; inverted = ! inverted ;
rank: 858
score: 98.56241629464286
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; case ABOVE
rank: 858
score: 98.51002197265625
patch: break ; break ; } } break ; ;
rank: 858
score: 98.17994907924107
patch: { if ( inverted ) {
rank: 858
score: 98.11524454752605
patch: } / * * ;
rank: 858
score: 97.74981689453125
patch: break . 0 :
rank: 858
score: 96.23421223958333
patch: if ;
rank: 859
score: 98.61273193359375
patch: f 1 *= 1 ; }
rank: 859
score: 98.57427978515625
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 , x 1 ) ) ;
rank: 859
score: 98.50955810546876
patch: break break ; } else if break ; }
rank: 859
score: 98.17681012834821
patch: return f 1 / fx ;
rank: 859
score: 98.1260986328125
patch: } break ; else
rank: 859
score: 98.11522216796875
patch: break false ; }
rank: 859
score: 97.74671020507813
patch: f 1 ; }
rank: 860
score: 98.61212921142578
patch: inverted = ! inverted ; } }
rank: 860
score: 98.57427106584821
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 0 ) ) ;
rank: 860
score: 98.56189313616072
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , inverted ) ) ;
rank: 860
score: 98.56177520751953
patch: System . Error ( $STRING$ ) ;
rank: 860
score: 98.50903930664063
patch: return break ; } } if ( break ;
rank: 860
score: 98.11521402994792
patch: } ; / * ;
rank: 860
score: 98.112744140625
patch: break ; ; -
rank: 860
score: 97.74577026367187
patch: w 1 = ;
rank: 860
score: 95.97878011067708
patch: logger ;
rank: 861
score: 98.57389884159483
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; break ; }
rank: 861
score: 98.561376953125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 1 ) ) ;
rank: 861
score: 98.50889282226562
patch: break ; * * * / } break ;
rank: 861
score: 98.1731465657552
patch: { return x 0 ;
rank: 861
score: 98.11148681640626
patch: throw new $STRING$ ;
rank: 861
score: 97.7444580078125
patch: image = ; }
rank: 861
score: 95.8283182779948
patch: result ;
rank: 862
score: 98.61003112792969
patch: f 1 ] *= x 1 ;
rank: 862
score: 98.56123744419642
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , ) ; }
rank: 862
score: 98.55943806966145
patch: f 1 *= $NUMBER$ ;
rank: 862
score: 98.50879516601563
patch: return break ; break ; break ; } }
rank: 862
score: 98.17033168247768
patch: break : return x 1 ;
rank: 862
score: 98.09783325195312
patch: break ; / }
rank: 862
score: 95.81417846679688
patch: Assert ;
rank: 863
score: 98.60825020926339
patch: b 0 = f 1 ;
rank: 863
score: 98.57353864397321
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; case PEGASUS : f 0 *= f 1 ;
rank: 863
score: 98.56106305803571
patch: inverted = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 863
score: 98.50864868164062
patch: break ; break ; } } return false ;
rank: 863
score: 98.17021833147321
patch: match ( f 1 ) ;
rank: 863
score: 98.094921875
patch: value return break ;
rank: 863
score: 97.742578125
patch: if ( ; }
rank: 863
score: 95.74735514322917
patch: start ;
rank: 864
score: 98.60523986816406
patch: f 1 ] return x 1 ;
rank: 864
score: 98.56080496651786
patch: int ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 864
score: 98.109130859375
patch: } } * break ;
rank: 864
score: 97.74220581054688
patch: h ++ ; }
rank: 864
score: 95.73399861653645
patch: this ;
rank: 865
score: 98.60500662667411
patch: inverted = f 1 ; }
rank: 865
score: 98.559423828125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 1 ) ,
rank: 865
score: 98.55734252929688
patch: return x 0 + f 1 ;
rank: 865
score: 98.5077880859375
patch: return * * break ; } break ; }
rank: 865
score: 98.16024344308036
patch: return x 1 + fx ;
rank: 865
score: 98.10898844401042
patch: y 0 = ; }
rank: 865
score: 97.73082275390625
patch: m 1 = ;
rank: 865
score: 95.6107686360677
patch: LOG ;
rank: 866
score: 98.55830078125
patch: String ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; break ;
rank: 866
score: 98.50772094726562
patch: break break ; } } if ( break ;
rank: 866
score: 98.15756661551339
patch: tmp = x 1 ; }
rank: 866
score: 98.10684204101562
patch: g 0 = ; }
rank: 866
score: 98.0895751953125
patch: break ; / ?
rank: 866
score: 97.72975158691406
patch: if ( ;
rank: 866
score: 95.56805419921875
patch: try
rank: 867
score: 98.60352325439453
patch: f 0 ] = f 1 ;
rank: 867
score: 98.55828857421875
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) ; return inverted ;
rank: 867
score: 98.55418395996094
patch: return f 1 - f 1 ;
rank: 867
score: 98.50745849609375
patch: break ; } } break ; } } }
rank: 867
score: 98.15754045758929
patch: t 0 = x 0 ;
rank: 867
score: 98.0892822265625
patch: return break ; *
rank: 867
score: 97.7291259765625
patch: m 0 = ;
rank: 867
score: 95.51596069335938
patch: log ;
rank: 868
score: 98.60191345214844
patch: return x 0 : x 1 ;
rank: 868
score: 98.56902204241071
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; break ; / * /
rank: 868
score: 98.506591796875
patch: break ; * break ; } } } }
rank: 868
score: 98.15248616536458
patch: continue ; } break ;
rank: 868
score: 98.10169474283855
patch: f 0 = x ;
rank: 868
score: 98.08259582519531
patch: return value ;
rank: 868
score: 97.72479858398438
patch: while ( break )
rank: 868
score: 95.50204467773438
patch: break /
rank: 869
score: 98.60104370117188
patch: f 0 ; return x 1 ;
rank: 869
score: 98.56775774274554
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ] ) ; break ;
rank: 869
score: 98.54876708984375
patch: else switch ( method ) {
rank: 869
score: 98.50648193359375
patch: break ; } break ; } } } }
rank: 869
score: 98.15115356445312
patch: if ( allowed ) {
rank: 869
score: 98.09985961914063
patch: break * / /
rank: 869
score: 98.0743896484375
patch: break ; else }
rank: 869
score: 97.72460174560547
patch: i = ;
rank: 869
score: 95.47606404622395
patch: / /
rank: 870
score: 98.60087585449219
patch: f 1 *= - f 1 ;
rank: 870
score: 98.55703396267361
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , atol ) ;
rank: 870
score: 98.548583984375
patch: return x $NUMBER$ - x 1 ;
rank: 870
score: 98.50642700195313
patch: return * break ; } } if break ;
rank: 870
score: 98.15090942382812
patch: added = x 1 ;
rank: 870
score: 98.09937540690105
patch: v 0 ++ ; }
rank: 870
score: 98.06873168945313
patch: } break ; int
rank: 870
score: 97.72184448242187
patch: return $NUMBER$ ; }
rank: 870
score: 95.4703369140625
patch: ;
rank: 871
score: 98.6002705891927
patch: else return x 1 ;
rank: 871
score: 98.56747000558036
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x 0 ) ; } }
rank: 871
score: 98.5482177734375
patch: cfw . return x 1 ;
rank: 871
score: 98.50615234375
patch: break ; } else if ; return break ;
rank: 871
score: 98.15080915178571
patch: } else { return x ;
rank: 871
score: 98.09696451822917
patch: } } * / ;
rank: 871
score: 98.06807250976563
patch: break ; } *
rank: 871
score: 97.712353515625
patch: n 1 = ;
rank: 871
score: 95.45217895507812
patch: Logger ;
rank: 872
score: 98.556396484375
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + fx ) ) ;
rank: 872
score: 98.50592651367188
patch: break ; } super . break ; break ;
rank: 872
score: 98.06726684570313
patch: return false ; ;
rank: 872
score: 97.70806884765625
patch: break ; protected ;
rank: 873
score: 98.5653076171875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ; break ; default : throw new Math CaMeL Internal CaMeL Error ( ) ;
rank: 873
score: 98.54739379882812
patch: return x 0 - x 0 ;
rank: 873
score: 98.50542602539062
patch: return start ; }
rank: 873
score: 98.14732142857143
patch: return x 0 . $NUMBER$ :
rank: 873
score: 98.06139526367187
patch: * break ; /
rank: 873
score: 97.61419677734375
patch: image = ;
rank: 873
score: 95.4185791015625
patch: super ;
rank: 874
score: 98.5951156616211
patch: f 0 : return x 0 ;
rank: 874
score: 98.56406586745689
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 , x 1 ) ;
rank: 874
score: 98.55502658420139
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , x ] ) ) ;
rank: 874
score: 98.54631042480469
patch: f 0 *= $NUMBER$ ; break ;
rank: 874
score: 98.50160725911458
patch: break ; } catch ;
rank: 874
score: 98.14682006835938
patch: return x 1 :
rank: 874
score: 97.61192321777344
patch: } default :
rank: 874
score: 95.41067504882812
patch: /
rank: 875
score: 98.59157017299107
patch: x 0 *= x 1 ;
rank: 875
score: 98.56254359654018
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + x 0 ) ; break ;
rank: 875
score: 98.55480278862848
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ) . x 1 ;
rank: 875
score: 98.54499162946429
patch: return x 1 - fx ;
rank: 875
score: 98.0784423828125
patch: } else break ;
rank: 875
score: 98.05440063476563
patch: break ; ; ?
rank: 875
score: 97.60791778564453
patch: label = ;
rank: 875
score: 95.39506022135417
patch: else ;
rank: 876
score: 98.586181640625
patch: b 0 *= f 1 ;
rank: 876
score: 98.56232561383929
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; f 1 = fx ;
rank: 876
score: 98.55405002170139
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , fx ) ) ; }
rank: 876
score: 98.54195404052734
patch: f 0 *= - f 1 ;
rank: 876
score: 98.49521891276042
patch: } break ; } else
rank: 876
score: 98.07225341796875
patch: if ( break ;
rank: 876
score: 98.05341796875
patch: return break ; value
rank: 876
score: 97.60569254557292
patch: break )
rank: 876
score: 95.39434814453125
patch: buffer ;
rank: 877
score: 98.57860310872395
patch: inverted = x 0 ;
rank: 877
score: 98.56209019252232
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) , x 0 ) ;
rank: 877
score: 98.55086263020833
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) + x 0 ) ) ;
rank: 877
score: 98.53362274169922
patch: return x $NUMBER$ - f 1 ;
rank: 877
score: 98.49519856770833
patch: return ; * * /
rank: 877
score: 98.13336181640625
patch: switch ( allowed ) {
rank: 877
score: 98.05277709960937
patch: else { break ;
rank: 877
score: 97.59420776367188
patch: r = ;
rank: 877
score: 95.37235514322917
patch: sb ;
rank: 878
score: 98.57768031529018
patch: f 0 -= f 1 ;
rank: 878
score: 98.55926513671875
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( ) . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 1 ) ; break ;
rank: 878
score: 98.55010986328125
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , 0 ) ) ; }
rank: 878
score: 98.13150460379464
patch: return x 1 . 0 :
rank: 878
score: 98.05155029296876
patch: } if false ;
rank: 878
score: 95.36895751953125
patch: e ;
rank: 879
score: 98.55881173270089
patch: f 1 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 1 ; }
rank: 879
score: 98.54767523871527
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , atol ) ; }
rank: 879
score: 98.53189086914062
patch: inverted = ! false ;
rank: 879
score: 98.12806047712054
patch: return f 0 . $NUMBER$ :
rank: 879
score: 98.04965209960938
patch: } * * ;
rank: 879
score: 98.0493896484375
patch: return ; } }
rank: 879
score: 97.55998229980469
patch: result = ;
rank: 879
score: 95.34893798828125
patch: } else
rank: 880
score: 98.57267543247768
patch: f 1 = ! inverted ;
rank: 880
score: 98.55821010044643
patch: f 0 = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) ; return x 0 ; }
rank: 880
score: 98.54747856987848
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , method ) ; }
rank: 880
score: 98.4593505859375
patch: return value ; }
rank: 880
score: 98.12502034505208
patch: continue ; case 1 :
rank: 880
score: 98.047998046875
patch: break ; else {
rank: 880
score: 98.04658203125
patch: } } ; ;
rank: 880
score: 97.55984497070312
patch: / * /
rank: 880
score: 95.2996826171875
patch: try ;
rank: 881
score: 98.5718994140625
patch: f 1 = 0 ; }
rank: 881
score: 98.54615614149306
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , - 1 ) ) ;
rank: 881
score: 98.52179827008929
patch: return x 1 - 1 ;
rank: 881
score: 98.45372314453125
patch: return ; * /
rank: 881
score: 98.12484305245536
patch: return f 1 ; } }
rank: 881
score: 98.04649658203125
patch: break ; value ;
rank: 881
score: 98.041943359375
patch: if ( ; ;
rank: 881
score: 97.54886627197266
patch: text = ;
rank: 881
score: 95.28052775065105
patch: default ;
rank: 882
score: 98.56486002604167
patch: f 1 ; break ;
rank: 882
score: 98.54557969835069
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , ) ; break ;
rank: 882
score: 98.51212855747768
patch: return x = f 0 ;
rank: 882
score: 98.45064290364583
patch: return value ; } }
rank: 882
score: 98.1226298014323
patch: end = x 0 ;
rank: 882
score: 98.04608154296875
patch: return return break ;
rank: 882
score: 97.54715728759766
patch: color = ;
rank: 882
score: 95.23990885416667
patch: out ;
rank: 883
score: 98.5445556640625
patch: double ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( ) ) , atol ) ;
rank: 883
score: 98.50566755022321
patch: boolean inverted = ! inverted ;
rank: 883
score: 98.11231486002605
patch: return f 0 ; }
rank: 883
score: 98.04490356445312
patch: if new break ;
rank: 883
score: 97.54347229003906
patch: break 1 ;
rank: 883
score: 95.23337809244792
patch: end ;
rank: 884
score: 98.54237196180556
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( ) , - 0 ) ) ;
rank: 884
score: 98.500341796875
patch: break x 1 ;
rank: 884
score: 98.42775472005208
patch: { return break ; }
rank: 884
score: 98.112060546875
patch: prev = f 1 ;
rank: 884
score: 98.03372802734376
patch: break ; / ++
rank: 884
score: 98.02118682861328
patch: } } ;
rank: 884
score: 95.20688883463542
patch: public ;
rank: 885
score: 98.54049343532986
patch: ftol = get CaMeL Function CaMeL Value CaMeL Accuracy ( get CaMeL Function CaMeL Value CaMeL Accuracy ( . get CaMeL Function CaMeL Value CaMeL Accuracy ( x 0 ) ) ) ; }
rank: 885
score: 98.5305887858073
patch: approximation = x 1 ;
rank: 885
score: 98.42474365234375
patch: break ; false ; }
rank: 885
score: 98.11055501302083
patch: removed = x 1 ;
rank: 885
score: 98.03240356445312
patch: super . break ;
rank: 885
score: 98.0053466796875
patch: return ; } ;
rank: 885
score: 95.19088745117188
patch: buf ;
rank: 886
score: 98.54312896728516
patch: f 0 . return x 1 ;
rank: 886
score: 98.48811848958333
patch: f 1 *= inverted ;
rank: 886
score: 98.10716756184895
patch: found = x 0 ;
rank: 886
score: 98.02833862304688
patch: * * break ;
rank: 886
score: 97.51072692871094
patch: } return ;
rank: 886
score: 95.144775390625
patch: final ;
rank: 887
score: 98.54183523995536
patch: f 0 = ! inverted ;
rank: 887
score: 98.49482073102679
patch: x 0 = x 0 ;
rank: 887
score: 98.02079467773437
patch: else break ; }
rank: 887
score: 97.96832275390625
patch: f 0 ; }
rank: 887
score: 97.5083999633789
patch: icon = ;
rank: 887
score: 95.114013671875
patch: throw new
rank: 888
score: 98.48989432198661
patch: inverted *= 0 . 0 ;
rank: 888
score: 98.41304524739583
patch: return 1 ; } }
rank: 888
score: 98.01976318359375
patch: ; return break ;
rank: 888
score: 97.95839233398438
patch: base = ; }
rank: 888
score: 97.49253336588542
patch: default :
rank: 888
score: 95.09501139322917
patch: value ;
rank: 889
score: 98.53187779017857
patch: f 0 = fx ; }
rank: 889
score: 98.48808942522321
patch: return f 1 ; break ;
rank: 889
score: 98.46718343098958
patch: } return x 0 ;
rank: 889
score: 98.40841674804688
patch: return 0 . ; }
rank: 889
score: 98.09691365559895
patch: end = f 1 ;
rank: 889
score: 98.01016235351562
patch: return value ; ;
rank: 889
score: 97.48974609375
patch: ret = ;
rank: 889
score: 95.0218505859375
patch: throw
rank: 890
score: 98.53524780273438
patch: f 0 *= inverted ;
rank: 890
score: 98.52995954241071
patch: ftol = x 1 ;
rank: 890
score: 98.01015625
patch: break break break ;
rank: 890
score: 97.48800659179688
patch: value = ;
rank: 890
score: 94.4814453125
patch: do
rank: 891
score: 98.48677978515624
patch: inverted = true ;
rank: 891
score: 98.46188354492188
patch: approximation = f 1 ;
rank: 891
score: 98.00747680664062
patch: else break ; ;
rank: 891
score: 97.94208984375
patch: fail ( ; }
rank: 891
score: 97.45197296142578
patch: break false ;
rank: 891
score: 94.34320068359375
patch: return
rank: 892
score: 98.52736990792411
patch: f 0 += f 0 ;
rank: 892
score: 98.45894775390624
patch: inverted = fx ;
rank: 892
score: 98.40325927734375
patch: break ; } else }
rank: 892
score: 98.09222412109375
patch: return x ] ;
rank: 892
score: 97.4503173828125
patch: btn = ;
rank: 892
score: 94.33030700683594
patch: int
rank: 893
score: 98.48518589564732
patch: return x 0 - 1 ;
rank: 893
score: 98.39707438151042
patch: break ; false } }
rank: 893
score: 98.00418701171876
patch: break . break ;
rank: 893
score: 97.44645690917969
patch: f 1 ;
rank: 893
score: 94.22535705566406
patch: result
rank: 894
score: 98.52217102050781
patch: f 0 = ! f 1 ;
rank: 894
score: 98.48358154296875
patch: break switch ( method ) {
rank: 894
score: 98.39703369140625
patch: } } return break ;
rank: 894
score: 98.08566284179688
patch: head = f 1 ;
rank: 894
score: 98.0013671875
patch: } while break ;
rank: 894
score: 97.9232177734375
patch: } / ; ;
rank: 894
score: 94.12889099121094
patch: {
rank: 895
score: 98.52152797154018
patch: return x 0 . x ;
rank: 895
score: 98.0848897298177
patch: start = x 1 ;
rank: 895
score: 97.99744873046875
patch: out . break ;
rank: 895
score: 97.41593933105469
patch: false = ;
rank: 895
score: 94.01990509033203
patch: else
rank: 896
score: 98.51799011230469
patch: return f 1 - x 1 ;
rank: 896
score: 98.50995744977679
patch: inverted = x 0 ; }
rank: 896
score: 98.41367594401042
patch: e = f 1 ;
rank: 896
score: 98.39265950520833
patch: result = break ; }
rank: 896
score: 98.08108520507812
patch: xsp = f 1 ;
rank: 896
score: 97.99692993164062
patch: break ; catch ;
rank: 896
score: 97.91090087890625
patch: break * ; }
rank: 896
score: 97.4072265625
patch: space = ;
rank: 896
score: 93.94038391113281
patch: 
rank: 897
score: 98.47240193684895
patch: if ( method ) {
rank: 897
score: 98.40086873372395
patch: return x x 1 ;
rank: 897
score: 98.08029174804688
patch: n = x 0 ;
rank: 897
score: 97.90604248046876
patch: return ; case ;
rank: 897
score: 97.40277099609375
patch: end = ;
rank: 897
score: 93.8483657836914
patch: System
rank: 898
score: 98.47006225585938
patch: inverted = false ; }
rank: 898
score: 98.39708455403645
patch: inverted = - 1 ;
rank: 898
score: 98.386474609375
patch: return 0 . value ;
rank: 898
score: 98.07968139648438
patch: answer = x 1 ;
rank: 898
score: 97.99342041015625
patch: value ; break ;
rank: 898
score: 97.87838134765624
patch: tmp = ; }
rank: 898
score: 97.39883422851562
patch: sb = ;
rank: 898
score: 93.77696228027344
patch: end
rank: 899
score: 98.47914632161458
patch: return return x 1 ;
rank: 899
score: 98.39599609375
patch: else return x 0 ;
rank: 899
score: 98.38346354166667
patch: * break ; } }
rank: 899
score: 98.07591756184895
patch: continue ; } else {
rank: 899
score: 97.993408203125
patch: break return break ;
rank: 899
score: 97.865478515625
patch: cmp = ; }
rank: 899
score: 97.39582824707031
patch: return ) ;
rank: 899
score: 93.71265411376953
patch: finally
rank: 900
score: 98.39255777994792
patch: buf = f 1 ;
rank: 900
score: 97.38890838623047
patch: max = ;
rank: 900
score: 93.7008285522461
patch: check
rank: 901
score: 98.43839518229167
patch: inverted = ! true ;
rank: 901
score: 98.3852030436198
patch: f 1 = inverted ;
rank: 901
score: 98.38108317057292
patch: return ; break ; }
rank: 901
score: 98.06754557291667
patch: return x 1 ] ;
rank: 901
score: 97.99150390625
patch: break ; / else
rank: 901
score: 97.85408935546874
patch: b ; break ;
rank: 901
score: 97.38832092285156
patch: dialog = ;
rank: 901
score: 93.6605224609375
patch: public
rank: 902
score: 98.37905883789062
patch: break break ; } ;
rank: 902
score: 98.06432088216145
patch: n *= f 1 ;
rank: 902
score: 97.97512817382812
patch: } for break ;
rank: 902
score: 97.38775634765625
patch: foreground = ;
rank: 902
score: 93.63590240478516
patch: final
rank: 903
score: 98.47986857096355
patch: f 0 = ) ;
rank: 903
score: 97.97306060791016
patch: value break ;
rank: 903
score: 97.37510681152344
patch: literal = ;
rank: 903
score: 93.59796142578125
patch: new
rank: 904
score: 98.37252807617188
patch: return x 1 ; ;
rank: 904
score: 98.05527750651042
patch: { switch ( method )
rank: 904
score: 97.97172241210937
patch: ; break ; }
rank: 904
score: 97.84151611328124
patch: fail ( $STRING$ ;
rank: 904
score: 97.37015533447266
patch: cmb = ;
rank: 904
score: 93.49066162109375
patch: ret
rank: 905
score: 98.46474202473958
patch: inverted = ! fx ;
rank: 905
score: 98.05433959960938
patch: match ( ) ;
rank: 905
score: 97.83629760742187
patch: s 1 = ;
rank: 905
score: 97.35665130615234
patch: url = ;
rank: 905
score: 93.46583557128906
patch: max
rank: 906
score: 98.36527506510417
patch: return ; * break ;
rank: 906
score: 98.36424763997395
patch: buf = x 1 ;
rank: 906
score: 98.04782104492188
patch: / return x 1 ;
rank: 906
score: 97.968359375
patch: break ; break {
rank: 906
score: 97.82867431640625
patch: float ; break ;
rank: 906
score: 97.34846496582031
patch: variant = ;
rank: 906
score: 93.45578002929688
patch: in
rank: 907
score: 98.3618876139323
patch: throw break ; } }
rank: 907
score: 98.04605102539062
patch: exception = x 1 ;
rank: 907
score: 97.8262939453125
patch: } ; ; }
rank: 907
score: 93.44425964355469
patch: boolean
rank: 908
score: 98.4350077311198
patch: inverted = ! inverted )
rank: 908
score: 98.36316935221355
patch: f 1 = x ;
rank: 908
score: 98.35732014973958
patch: } else break ; }
rank: 908
score: 98.35711669921875
patch: inverted = true ; }
rank: 908
score: 98.04163614908855
patch: match ( allowed ) ;
rank: 908
score: 97.96712646484374
patch: assert new null ;
rank: 908
score: 97.8229248046875
patch: j = ; }
rank: 908
score: 97.34738159179688
patch: return - ;
rank: 908
score: 93.42071533203125
patch: long
rank: 909
score: 98.3546651204427
patch: f 1 = 1 ;
rank: 909
score: 98.35085042317708
patch: return 0 ; } else
rank: 909
score: 98.03873697916667
patch: return x 1 ) ;
rank: 909
score: 97.96669921875
patch: break ; value }
rank: 909
score: 97.82133178710937
patch: b ; ; }
rank: 909
score: 97.343994140625
patch: field = ;
rank: 909
score: 93.38308715820312
patch: current
rank: 910
score: 98.34942626953125
patch: break ; } } finally
rank: 910
score: 98.3446044921875
patch: f 0 = 1 ;
rank: 910
score: 98.3443094889323
patch: } return f 1 ;
rank: 910
score: 98.0382080078125
patch: break ; default : /
rank: 910
score: 97.9572509765625
patch: } * ; }
rank: 910
score: 97.815625
patch: right = ; }
rank: 910
score: 97.34352111816406
patch: pos = ;
rank: 910
score: 93.35484313964844
patch: start
rank: 911
score: 98.3551025390625
patch: inverted += f 1 ;
rank: 911
score: 98.3429463704427
patch: break ; x 1 ;
rank: 911
score: 98.03814697265625
patch: match ( method ) ;
rank: 911
score: 97.8126708984375
patch: z ; break ;
rank: 911
score: 97.34190368652344
patch: score = ;
rank: 911
score: 93.32557678222656
patch: error
rank: 912
score: 98.32511596679687
patch: break x 0 ;
rank: 912
score: 98.03643798828125
patch: direct = ! inverted ;
rank: 912
score: 97.954345703125
patch: break - break ;
rank: 912
score: 97.33424377441406
patch: date = ;
rank: 912
score: 93.28965759277344
patch: set
rank: 913
score: 98.03070068359375
patch: return fx ; }
rank: 913
score: 97.94785766601562
patch: } break break ;
rank: 913
score: 97.80679321289062
patch: break ; null ;
rank: 913
score: 97.33216857910156
patch: expr = ;
rank: 913
score: 93.18659973144531
patch: count
rank: 914
score: 98.3279520670573
patch: inverted *= f 1 ;
rank: 914
score: 98.0303446451823
patch: swt = ! inverted ;
rank: 914
score: 97.94669189453126
patch: return break ; /
rank: 914
score: 97.33016204833984
patch: font = ;
rank: 914
score: 93.1852035522461
patch: found
rank: 915
score: 98.40450032552083
patch: approximation = ! inverted ;
rank: 915
score: 98.32625325520833
patch: inverted = fx ; }
rank: 915
score: 98.30003051757812
patch: { break ; }
rank: 915
score: 97.93953857421874
patch: break + break ;
rank: 915
score: 97.32893371582031
patch: password = ;
rank: 915
score: 93.13362884521484
patch: next
rank: 916
score: 98.2963623046875
patch: if break ; }
rank: 916
score: 98.02097574869792
patch: ret = x 0 ;
rank: 916
score: 97.93201293945313
patch: else return break ;
rank: 916
score: 97.79351196289062
patch: break true ; }
rank: 916
score: 97.31771087646484
patch: } / *
rank: 916
score: 93.02745056152344
patch: register
rank: 917
score: 98.322509765625
patch: f 1 *= $STRING$ ;
rank: 917
score: 98.277880859375
patch: return 0 . ;
rank: 917
score: 98.02095540364583
patch: continue ; case 0 :
rank: 917
score: 97.7907958984375
patch: v ; ; }
rank: 917
score: 97.31562042236328
patch: return 0 ;
rank: 917
score: 92.99967956542969
patch: buf
rank: 918
score: 98.39683024088542
patch: fx = f 1 ;
rank: 918
score: 98.27562255859375
patch: } else if ;
rank: 918
score: 98.01968383789062
patch: return fx ;
rank: 918
score: 97.78993530273438
patch: } ; * /
rank: 918
score: 97.31166076660156
patch: cmp = ;
rank: 918
score: 92.99593353271484
patch: copy
rank: 919
score: 98.31929524739583
patch: e = x 1 ;
rank: 919
score: 98.29263305664062
patch: result *= f 1 ;
rank: 919
score: 98.2669677734375
patch: } } break ;
rank: 919
score: 98.0137939453125
patch: consume ( ) ;
rank: 919
score: 97.91612548828125
patch: value if break ;
rank: 919
score: 97.78872680664062
patch: w = ; }
rank: 919
score: 97.30467224121094
patch: yval = ;
rank: 919
score: 92.95708465576172
patch: this
rank: 920
score: 98.38510131835938
patch: inverted = ! allowed ;
rank: 920
score: 98.28634643554688
patch: inverted = ) ;
rank: 920
score: 98.28541056315105
patch: boolean inverted = false ;
rank: 920
score: 98.0130615234375
patch: } } else {
rank: 920
score: 97.914306640625
patch: finally { break ;
rank: 920
score: 97.2926254272461
patch: sprite = ;
rank: 920
score: 92.94746398925781
patch: pos
rank: 921
score: 98.31709798177083
patch: inverted = f 0 ;
rank: 921
score: 98.25228271484374
patch: throw break ; }
rank: 921
score: 98.0074462890625
patch: table = ! inverted ;
rank: 921
score: 97.9142578125
patch: break ; ; return
rank: 921
score: 97.28736114501953
patch: / * ;
rank: 921
score: 92.93313598632812
patch: value
rank: 922
score: 98.31693522135417
patch: f 0 *= $STRING$ ;
rank: 922
score: 98.2605489095052
patch: return x 0 1 ;
rank: 922
score: 98.0066426595052
patch: table = f 1 ;
rank: 922
score: 97.784521484375
patch: if ( ! ;
rank: 922
score: 97.27555084228516
patch: right = ;
rank: 922
score: 92.91082763671875
patch: post
rank: 923
score: 98.28341674804688
patch: return return x 0 ;
rank: 923
score: 98.00635782877605
patch: ns = x 1 ;
rank: 923
score: 97.90613403320313
patch: } break ; false
rank: 923
score: 97.78310546875
patch: break = ; }
rank: 923
score: 92.88158416748047
patch: code
rank: 924
score: 98.00569661458333
patch: } switch ( method )
rank: 924
score: 97.25818634033203
patch: priority = ;
rank: 924
score: 92.85086059570312
patch: state
rank: 925
score: 98.34850056966145
patch: f 0 = inverted ;
rank: 925
score: 98.30978393554688
patch: f 1 : break ;
rank: 925
score: 98.26429239908855
patch: inverted *= x 1 ;
rank: 925
score: 98.24364217122395
patch: return x = 0 ;
rank: 925
score: 98.20737915039062
patch: break ; } finally
rank: 925
score: 97.77628173828126
patch: z ; ; }
rank: 925
score: 97.25749969482422
patch: return new ;
rank: 925
score: 92.84496307373047
patch: *
rank: 926
score: 98.34286499023438
patch: break 0 . $NUMBER$ ;
rank: 926
score: 98.30657958984375
patch: inverted = x $NUMBER$ ;
rank: 926
score: 98.00367228190105
patch: grid = ! inverted ;
rank: 926
score: 97.84841918945312
patch: } * *
rank: 926
score: 97.76954345703125
patch: } ; } ;
rank: 926
score: 97.25456237792969
patch: } / /
rank: 926
score: 92.81602478027344
patch: VM
rank: 927
score: 98.17496948242187
patch: continue break ; }
rank: 927
score: 98.00297037760417
patch: found = ! inverted ;
rank: 927
score: 97.765478515625
patch: s 0 = ;
rank: 927
score: 97.24911499023438
patch: j = ;
rank: 927
score: 92.8067626953125
patch: String
rank: 928
score: 98.00149536132812
patch: ns = f 1 ;
rank: 928
score: 97.76307373046875
patch: throw new ; }
rank: 928
score: 97.24899291992188
patch: break ) {
rank: 928
score: 92.80669403076172
patch: line
rank: 929
score: 98.24737548828125
patch: return x 0 ) ;
rank: 929
score: 98.22812906901042
patch: inverted = inverted ; }
rank: 929
score: 98.1591796875
patch: return false ; }
rank: 929
score: 97.7571533203125
patch: } * / /
rank: 929
score: 97.2480239868164
patch: cu = ;
rank: 929
score: 92.8011474609375
patch: logger
rank: 930
score: 98.2640380859375
patch: inverted = 0 ;
rank: 930
score: 97.99955240885417
patch: retval = x 1 ;
rank: 930
score: 97.74209594726562
patch: } / ;
rank: 930
score: 97.2448501586914
patch: case ; }
rank: 930
score: 92.79193878173828
patch: add
rank: 931
score: 98.31154378255208
patch: fx = x 1 ;
rank: 931
score: 98.26077270507812
patch: return inverted 1 ;
rank: 931
score: 97.9974873860677
patch: continue ; } } }
rank: 931
score: 97.75037231445313
patch: } ; if ;
rank: 931
score: 97.23992919921875
patch: augs = ;
rank: 931
score: 92.78440856933594
patch: scope
rank: 932
score: 98.23228963216145
patch: inverted += x 1 ;
rank: 932
score: 98.140234375
patch: return ; * ;
rank: 932
score: 97.99540201822917
patch: return x 0 ] ;
rank: 932
score: 97.23880004882812
patch: } if ;
rank: 932
score: 92.76012420654297
patch: display
rank: 933
score: 98.20304361979167
patch: early = ! inverted ;
rank: 933
score: 98.13284301757812
patch: return 0 ; else
rank: 933
score: 97.9952392578125
patch: success = x 1 ;
rank: 933
score: 97.74445190429688
patch: temp = ; }
rank: 933
score: 97.23316192626953
patch: height = ;
rank: 933
score: 92.73870849609375
patch: handle
rank: 934
score: 98.118896484375
patch: break ; false ;
rank: 934
score: 97.99497477213542
patch: match = x 1 ;
rank: 934
score: 97.73983764648438
patch: success = ; }
rank: 934
score: 97.23145294189453
patch: mode = ;
rank: 934
score: 92.72703552246094
patch: thread
rank: 935
score: 98.28003946940105
patch: break 0 . 0 ;
rank: 935
score: 98.19475708007812
patch: return x ) ;
rank: 935
score: 98.16438598632813
patch: f 1 ++ ;
rank: 935
score: 97.7322509765625
patch: timestamp = ; }
rank: 935
score: 97.67549133300781
patch: if null ;
rank: 935
score: 97.226318359375
patch: base = ;
rank: 935
score: 92.71858215332031
patch: to
rank: 936
score: 98.20053100585938
patch: break return x 1 ;
rank: 936
score: 98.15679931640625
patch: return inverted ;
rank: 936
score: 98.09796142578125
patch: * break ; }
rank: 936
score: 97.99183146158855
patch: expr = x 1 ;
rank: 936
score: 92.71122741699219
patch: offset
rank: 937
score: 98.19884236653645
patch: break + f 1 ;
rank: 937
score: 98.1471923828125
patch: inverted = inverted ;
rank: 937
score: 97.98050537109376
patch: return ftol ;
rank: 937
score: 97.7258544921875
patch: continue ; } ;
rank: 937
score: 97.6510238647461
patch: break true ;
rank: 937
score: 97.22074127197266
patch: exc = ;
rank: 937
score: 92.70074462890625
patch: @
rank: 938
score: 98.18024291992188
patch: break x $NUMBER$ ;
rank: 938
score: 98.13439178466797
patch: f 1 :
rank: 938
score: 98.0981689453125
patch: approximation = fx ;
rank: 938
score: 97.95570068359375
patch: flush ( ) ;
rank: 938
score: 97.7178466796875
patch: return ; ; }
rank: 938
score: 97.2026138305664
patch: severity = ;
rank: 938
score: 92.66230010986328
patch: last
rank: 939
score: 98.0877685546875
patch: return length ; }
rank: 939
score: 97.71758422851562
patch: b 0 ; }
rank: 939
score: 97.20158386230469
patch: break = ;
rank: 939
score: 92.63742065429688
patch: insert
rank: 940
score: 98.122412109375
patch: } return fx ;
rank: 940
score: 98.08713989257812
patch: return name ; }
rank: 940
score: 97.5947265625
patch: synchronized break ;
rank: 940
score: 97.20124816894531
patch: f 0 ;
rank: 940
score: 92.62761688232422
patch: system
rank: 941
score: 97.93560791015625
patch: fail ( ) ;
rank: 941
score: 97.71171875
patch: throw new break ;
rank: 941
score: 97.5934346516927
patch: break {
rank: 941
score: 97.19938659667969
patch: time = ;
rank: 941
score: 92.62361145019531
patch: buffer
rank: 942
score: 98.0565185546875
patch: return inverted ; }
rank: 942
score: 97.9708251953125
patch: break ; finally {
rank: 942
score: 97.92708740234374
patch: n *= 1 ;
rank: 942
score: 97.71155395507813
patch: z 0 ; }
rank: 942
score: 97.58837890625
patch: result break ;
rank: 942
score: 97.19869995117188
patch: rect = ;
rank: 942
score: 92.62088012695312
patch: retval
rank: 943
score: 98.0019287109375
patch: inverted = $NUMBER$ ;
rank: 943
score: 97.92330322265624
patch: tmp = fx ;
rank: 943
score: 97.71067504882812
patch: } / break ;
rank: 943
score: 97.58658599853516
patch: break ; -
rank: 943
score: 97.1954574584961
patch: node = ;
rank: 943
score: 92.61088562011719
patch: if
rank: 944
score: 97.94794311523438
patch: break ; 0 ;
rank: 944
score: 97.92235107421875
patch: found = false ;
rank: 944
score: 97.70902099609376
patch: v 0 ; }
rank: 944
score: 92.59859466552734
patch: super
rank: 945
score: 98.24704996744792
patch: return 1 . $NUMBER$ ;
rank: 945
score: 98.07528076171874
patch: f 1 : {
rank: 945
score: 97.99425048828125
patch: break ; case BELOW
rank: 945
score: 97.91976318359374
patch: continue ; break ;
rank: 945
score: 97.70285034179688
patch: d 0 = ;
rank: 945
score: 97.18994903564453
patch: ot = ;
rank: 945
score: 92.59323120117188
patch: Later
rank: 946
score: 98.23765055338542
patch: f 1 = ) ;
rank: 946
score: 98.04913330078125
patch: } else { }
rank: 946
score: 97.93614501953125
patch: break f 1 ;
rank: 946
score: 97.70181884765626
patch: l 0 = ;
rank: 946
score: 97.18643951416016
patch: re = ;
rank: 946
score: 92.59075164794922
patch: skip
rank: 947
score: 98.22866821289062
patch: fx *= f 1 ;
rank: 947
score: 98.04234619140625
patch: f 1 -- ;
rank: 947
score: 97.96320190429688
patch: break ; case RIGHT
rank: 947
score: 97.931103515625
patch: break ; ) {
rank: 947
score: 97.90771484375
patch: end ( ) ;
rank: 947
score: 97.54192352294922
patch: return finally ;
rank: 947
score: 92.5880126953125
patch: Assert
rank: 948
score: 98.03390502929688
patch: f 0 ++ ;
rank: 948
score: 97.18495178222656
patch: file = ;
rank: 948
score: 92.54719543457031
patch: chunk
rank: 949
score: 97.9498046875
patch: break ; case ABOVE
rank: 949
score: 97.70050048828125
patch: } this . ;
rank: 949
score: 97.18217468261719
patch: pt = ;
rank: 949
score: 92.51362609863281
patch: This
rank: 950
score: 98.21433512369792
patch: sb = f 1 ;
rank: 950
score: 98.02029418945312
patch: return break ; try
rank: 950
score: 97.87859497070312
patch: return x 0 :
rank: 950
score: 97.48699951171875
patch: break { ;
rank: 950
score: 97.18202209472656
patch: block = ;
rank: 950
score: 92.49152374267578
patch: type
rank: 951
score: 97.87470703125
patch: break x 1 :
rank: 951
score: 97.8668701171875
patch: final double fx ;
rank: 951
score: 97.69765014648438
patch: b 0 . ;
rank: 951
score: 97.48544311523438
patch: while break ;
rank: 951
score: 97.18196105957031
patch: ; default :
rank: 951
score: 92.48899841308594
patch: record
rank: 952
score: 97.84981689453124
patch: f 0 -- ;
rank: 952
score: 97.46771240234375
patch: } *
rank: 952
score: 92.47570037841797
patch: test
rank: 953
score: 98.00709228515625
patch: break ; null }
rank: 953
score: 97.89183959960937
patch: bound = false ;
rank: 953
score: 97.85648193359376
patch: continue x 1 :
rank: 953
score: 92.47447204589844
patch: LOG
rank: 954
score: 97.86201171875
patch: break ; case ANY
rank: 954
score: 97.8305435180664
patch: case 1 :
rank: 954
score: 97.61549377441406
patch: case ; ;
rank: 954
score: 97.1767578125
patch: indent = ;
rank: 954
score: 92.45344543457031
patch: not
rank: 955
score: 97.86056518554688
patch: } } }
rank: 955
score: 97.81227416992188
patch: return rtol ;
rank: 955
score: 97.61528778076172
patch: } ; }
rank: 955
score: 97.171630859375
patch: break / *
rank: 955
score: 92.44522094726562
patch: on
rank: 956
score: 97.99637451171876
patch: return ( break ;
rank: 956
score: 97.85347900390624
patch: } } } }
rank: 956
score: 97.1681900024414
patch: frame = ;
rank: 956
score: 92.42691802978516
patch: text
rank: 957
score: 97.99954223632812
patch: return x 0 .
rank: 957
score: 97.95846557617188
patch: result = fx ;
rank: 957
score: 97.81048583984375
patch: break ; $NUMBER$ ;
rank: 957
score: 97.40921783447266
patch: throw null ;
rank: 957
score: 97.16729736328125
patch: blue = ;
rank: 957
score: 92.42578887939453
patch: first
rank: 958
score: 97.9803955078125
patch: return null ; }
rank: 958
score: 97.79107666015625
patch: break / $NUMBER$ ;
rank: 958
score: 97.60890197753906
patch: case 0 :
rank: 958
score: 97.44629669189453
patch: float ; ;
rank: 958
score: 97.1632308959961
patch: xval = ;
rank: 958
score: 92.42481994628906
patch: cmp
rank: 959
score: 97.92878723144531
patch: f 0 :
rank: 959
score: 97.56961059570312
patch: true ; }
rank: 959
score: 97.43677520751953
patch: v ; }
rank: 959
score: 97.37638092041016
patch: char break ;
rank: 959
score: 97.16258239746094
patch: operator = ;
rank: 959
score: 92.401611328125
patch: sb
rank: 960
score: 97.7904052734375
patch: if ( method )
rank: 960
score: 97.4269790649414
patch: break * ;
rank: 960
score: 97.37578582763672
patch: if true ;
rank: 960
score: 97.16115315755208
patch: / *
rank: 960
score: 92.37886047363281
patch: internal
rank: 961
score: 97.95050048828125
patch: throw null ; }
rank: 961
score: 97.83538208007812
patch: if ( inverted )
rank: 961
score: 97.7725830078125
patch: f 1 .
rank: 961
score: 97.72026062011719
patch: break ; default
rank: 961
score: 97.42060089111328
patch: b ; }
rank: 961
score: 97.37298583984375
patch: continue ; ;
rank: 961
score: 97.16078186035156
patch: character = ;
rank: 961
score: 92.36955261230469
patch: best
rank: 962
score: 97.94672241210938
patch: set ; break ;
rank: 962
score: 97.83311767578125
patch: * / break ;
rank: 962
score: 97.50080871582031
patch: break ; case
rank: 962
score: 97.36212921142578
patch: break ; f
rank: 962
score: 97.16006469726562
patch: uee = ;
rank: 962
score: 92.3651351928711
patch: modified
rank: 963
score: 97.94503173828124
patch: return out ; }
rank: 963
score: 97.70369720458984
patch: break 0 ;
rank: 963
score: 97.4588623046875
patch: } }
rank: 963
score: 97.3529052734375
patch: end break ;
rank: 963
score: 97.15675354003906
patch: PERCENTAGE = ;
rank: 963
score: 92.35758209228516
patch: left
rank: 964
score: 97.44984436035156
patch: } ) {
rank: 964
score: 92.35665130615234
patch: xsp
rank: 965
score: 97.44845581054688
patch: true ;
rank: 965
score: 97.34976196289062
patch: } else ;
rank: 965
score: 92.34518432617188
patch: virtual
rank: 966
score: 97.87486572265625
patch: += f 1 ;
rank: 966
score: 97.60884857177734
patch: f 0 .
rank: 966
score: 97.34783172607422
patch: z ; }
rank: 966
score: 97.34688568115234
patch: break . ;
rank: 966
score: 92.33993530273438
patch: exc
rank: 967
score: 97.34395599365234
patch: break ; null
rank: 967
score: 97.34028625488281
patch: break * /
rank: 967
score: 92.32583618164062
patch: call
rank: 968
score: 97.49315643310547
patch: f 1 }
rank: 968
score: 97.3435287475586
patch: break ; false
rank: 968
score: 97.33830261230469
patch: false ; }
rank: 968
score: 97.33378601074219
patch: b ; ;
rank: 968
score: 92.32499694824219
patch: stop
rank: 969
score: 97.48019409179688
patch: f 1 =
rank: 969
score: 97.32579803466797
patch: z ; ;
rank: 969
score: 97.32107543945312
patch: return / ;
rank: 969
score: 97.31412506103516
patch: found = ;
rank: 969
score: 96.887939453125
patch: case ;
rank: 969
score: 92.31480407714844
patch: protected
rank: 970
score: 97.3075942993164
patch: for ( }
rank: 970
score: 92.31364440917969
patch: loc
rank: 971
score: 97.47271728515625
patch: break } }
rank: 971
score: 97.31798553466797
patch: break { }
rank: 971
score: 97.25342814127605
patch: break :
rank: 971
score: 92.31303405761719
patch: param
rank: 972
score: 97.5368423461914
patch: } } else
rank: 972
score: 97.45843505859375
patch: f 1
rank: 972
score: 97.31465148925781
patch: break ; err
rank: 972
score: 97.1385498046875
patch: false ;
rank: 972
score: 92.29765319824219
patch: cached
rank: 973
score: 97.4583969116211
patch: x 1 :
rank: 973
score: 97.32560729980469
patch: break ; .
rank: 973
score: 97.280029296875
patch: if ; ;
rank: 973
score: 97.1011454264323
patch: continue :
rank: 973
score: 92.28773498535156
patch: can
rank: 974
score: 97.30127716064453
patch: break ; :
rank: 974
score: 96.6802978515625
patch: ; }
rank: 974
score: 92.28314208984375
patch: scroll
rank: 975
score: 97.52934265136719
patch: return max ;
rank: 975
score: 97.4048843383789
patch: f 0 =
rank: 975
score: 97.29691314697266
patch: start break ;
rank: 975
score: 96.67667643229167
patch: b ;
rank: 975
score: 92.27600860595703
patch: any
rank: 976
score: 97.37541198730469
patch: f 0 *=
rank: 976
score: 97.29337310791016
patch: } break {
rank: 976
score: 97.26519012451172
patch: inverted = ;
rank: 976
score: 96.66368611653645
patch: break false
rank: 976
score: 92.25505065917969
patch: match
rank: 977
score: 97.28964233398438
patch: break ; _
rank: 977
score: 97.06143188476562
patch: break }
rank: 977
score: 96.91245524088542
patch: System .
rank: 977
score: 96.66339111328125
patch: break ,
rank: 977
score: 92.24685668945312
patch: default
rank: 978
score: 97.45083618164062
patch: return name ;
rank: 978
score: 97.2880859375
patch: continue break ;
rank: 978
score: 97.2186050415039
patch: break null ;
rank: 978
score: 97.05131022135417
patch: f 0
rank: 978
score: 96.87123616536458
patch: for (
rank: 978
score: 96.64829508463542
patch: -- ;
rank: 978
score: 92.22856903076172
patch: status
rank: 979
score: 97.27998352050781
patch: } value ;
rank: 979
score: 97.24177551269531
patch: / / }
rank: 979
score: 97.21096801757812
patch: ; } ;
rank: 979
score: 96.89527384440105
patch: try {
rank: 979
score: 96.82954915364583
patch: finally {
rank: 979
score: 92.22832489013672
patch: after
rank: 980
score: 97.2781982421875
patch: break ; (
rank: 980
score: 97.19871520996094
patch: v ; ;
rank: 980
score: 96.86519368489583
patch: VM }
rank: 980
score: 96.52581787109375
patch: return )
rank: 980
score: 92.22777557373047
patch: exception
rank: 981
score: 97.19454956054688
patch: ; ; }
rank: 981
score: 96.85769653320312
patch: return }
rank: 981
score: 96.7711893717448
patch: inverted =
rank: 981
score: 96.5171407063802
patch: ret ;
rank: 981
score: 92.22698211669922
patch: My@@
rank: 982
score: 97.34217834472656
patch: break 0 .
rank: 982
score: 97.18549346923828
patch: RGB break ;
rank: 982
score: 96.78373209635417
patch: * /
rank: 982
score: 96.7369893391927
patch: VM /
rank: 982
score: 96.47808837890625
patch: private ;
rank: 982
score: 92.21290588378906
patch: top
rank: 983
score: 97.32942962646484
patch: break inverted ;
rank: 983
score: 96.60475667317708
patch: inverted :
rank: 983
score: 92.21002197265625
patch: Logger
rank: 984
score: 97.33509063720703
patch: return length ;
rank: 984
score: 97.302978515625
patch: System . }
rank: 984
score: 96.7016092936198
patch: { }
rank: 984
score: 96.60206095377605
patch: e .
rank: 984
score: 96.37916056315105
patch: z ;
rank: 984
score: 92.20736694335938
patch: abstract
rank: 985
score: 96.68898518880208
patch: break .
rank: 985
score: 96.67874145507812
patch: do {
rank: 985
score: 96.55983479817708
patch: logger .
rank: 985
score: 96.35552978515625
patch: r ;
rank: 985
score: 92.18824005126953
patch: ok
rank: 986
score: 96.62930297851562
patch: tmp ;
rank: 986
score: 96.53047688802083
patch: } /
rank: 986
score: 96.33111572265625
patch: image ;
rank: 986
score: 92.18788146972656
patch: bad
rank: 987
score: 96.58909098307292
patch: / }
rank: 987
score: 96.49075317382812
patch: f
rank: 987
score: 96.48872884114583
patch: break =
rank: 987
score: 96.31441243489583
patch: break _
rank: 987
score: 92.18479919433594
patch: token
rank: 988
score: 96.27956136067708
patch: inverted _
rank: 988
score: 92.17320251464844
patch: val
rank: 989
score: 96.50065104166667
patch: true }
rank: 989
score: 96.4381103515625
patch: approximation .
rank: 989
score: 92.17072296142578
patch: min
rank: 990
score: 97.06903076171875
patch: tmp = ;
rank: 990
score: 96.47446695963542
patch: continue }
rank: 990
score: 96.26290893554688
patch: break -
rank: 990
score: 96.2570088704427
patch: v ;
rank: 990
score: 92.16883087158203
patch: height
rank: 991
score: 96.4409688313802
patch: found .
rank: 991
score: 96.24235026041667
patch: w ;
rank: 991
score: 92.16671752929688
patch: parser
rank: 992
score: 96.43289184570312
patch: added .
rank: 992
score: 96.40767415364583
patch: inverted .
rank: 992
score: 96.23604329427083
patch: match ;
rank: 992
score: 92.16667175292969
patch: Bad
rank: 993
score: 96.23464965820312
patch: style ;
rank: 993
score: 96.13222249348958
patch: if false
rank: 993
score: 92.16477966308594
patch: running
rank: 994
score: 96.4183858235677
patch: ++ ;
rank: 994
score: 96.32845052083333
patch: } .
rank: 994
score: 96.23244222005208
patch: text ;
rank: 994
score: 96.12791951497395
patch: * ;
rank: 994
score: 92.16091918945312
patch: comp
rank: 995
score: 96.39248657226562
patch: true :
rank: 995
score: 94.5858383178711
patch: inverted
rank: 995
score: 92.15695190429688
patch: before
rank: 996
score: 96.37137858072917
patch: last CaMeL
rank: 996
score: 96.26835123697917
patch: return f
rank: 996
score: 96.09793090820312
patch: } try
rank: 996
score: 92.15486145019531
patch: progress
rank: 997
score: 96.21097819010417
patch: color ;
rank: 997
score: 92.14012908935547
patch: remaining
rank: 998
score: 94.04495239257812
patch: approximation
rank: 998
score: 92.1365966796875
patch: j
rank: 999
score: 96.091552734375
patch: float ;
rank: 999
score: 92.13119506835938
patch: global
rank: 1000
score: 93.83416748046875
patch: :
rank: 1000
score: 92.12347412109375
patch: wrap
