rank: 1
score: 99.93117453835227
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 2
score: 99.86747472426471
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 2
score: 99.86109212239583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 2
score: 99.84314643012152
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 2
score: 99.80961552372685
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 2
score: 99.79134114583333
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 2
score: 99.78602091471355
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 3
score: 99.833974609375
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 3
score: 99.81309000651042
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 3
score: 99.80181415264423
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 3
score: 99.78385136045259
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 3
score: 99.77365451388889
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 3
score: 99.74876912434895
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 4
score: 99.78920491536458
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 4
score: 99.77376708984374
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 4
score: 99.76492745535714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 4
score: 99.75686961206897
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 4
score: 99.72795999461206
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 4
score: 99.71794048108552
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 5
score: 99.80861900592673
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 5
score: 99.7719089673913
patch: Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 5
score: 99.76789202008929
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 5
score: 99.70792643229167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 6
score: 99.80635579427083
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 6
score: 99.76775926159274
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 6
score: 99.74385288783482
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 6
score: 99.69328870271382
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 6
score: 99.68245796535327
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 7
score: 99.80278862847223
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 7
score: 99.76200648716518
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 7
score: 99.75918344350961
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 7
score: 99.73836517333984
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 7
score: 99.738203125
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 7
score: 99.72144426618304
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) ) ;
rank: 7
score: 99.69022623697917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n ) ) ;
rank: 8
score: 99.7886474609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 8
score: 99.75289916992188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 8
score: 99.73821614583333
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 8
score: 99.71361400462963
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through ;
rank: 8
score: 99.70357572115384
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 9
score: 99.77359008789062
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 9
score: 99.74663628472223
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 9
score: 99.7297030362216
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 9
score: 99.68402569110577
patch: try { try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 9
score: 99.6772793856534
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 9
score: 99.66021728515625
patch: try ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 10
score: 99.7605078125
patch: Node < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 10
score: 99.73114691840277
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 10
score: 99.72730364118304
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 10
score: 99.70255253232759
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 10
score: 99.67449951171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false ) ;
rank: 10
score: 99.66355298913044
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 10
score: 99.65178680419922
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 11
score: 99.740771484375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 11
score: 99.73933919270833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Next ( ) ) ) ;
rank: 11
score: 99.71036503232759
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 11
score: 99.63875679347827
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 12
score: 99.74013491030092
patch: Node < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 12
score: 99.73427734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ;
rank: 12
score: 99.73323305191532
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 12
score: 99.70918543198529
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , fall CaMeL Through ) ;
rank: 12
score: 99.70119065504808
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through ) ;
rank: 12
score: 99.6687520345052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node ) ;
rank: 12
score: 99.6497333233173
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 12
score: 99.63669840494792
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; try {
rank: 13
score: 99.73066850142045
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 13
score: 99.72044788707386
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 13
score: 99.70772750289352
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 13
score: 99.64901572779605
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ;
rank: 13
score: 99.63624267578125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 14
score: 99.7030029296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ;
rank: 14
score: 99.69611328125
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 14
score: 99.66354604867789
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , fall CaMeL Through ) ) ;
rank: 14
score: 99.64733168658088
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 14
score: 99.63523171164773
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) .
rank: 15
score: 99.73363385881696
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ;
rank: 15
score: 99.72808627424568
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 15
score: 99.69642705502717
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 15
score: 99.69490269252232
patch: final Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 15
score: 99.6359332540761
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) ) ;
rank: 15
score: 99.62974964488636
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 16
score: 99.73309795673077
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 16
score: 99.71940104166667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 16
score: 99.70766264816811
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 16
score: 99.69218918372844
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 16
score: 99.63483220880681
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 16
score: 99.62830120584239
patch: try Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 17
score: 99.73196726831897
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 17
score: 99.72215270996094
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 17
score: 99.71515856291118
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 17
score: 99.70265151515152
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 17
score: 99.69117115162037
patch: Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 17
score: 99.68430873325893
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Result ( ) ) ;
rank: 17
score: 99.63456645764802
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 18
score: 99.7193359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) ) ;
rank: 18
score: 99.71361490885417
patch: Node fall CaMeL Through = ( Node ) out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 18
score: 99.70162527901786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) ) ;
rank: 18
score: 99.68465983072916
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 18
score: 99.68081665039062
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 18
score: 99.65892537434895
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true ) ;
rank: 18
score: 99.6266581217448
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , node ) ) ;
rank: 19
score: 99.721923828125
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 19
score: 99.71301850818452
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 19
score: 99.68802584134616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n ) ;
rank: 19
score: 99.67953378182871
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( n ) ) ;
rank: 19
score: 99.62556966145833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( fall CaMeL Through ) ) ;
rank: 20
score: 99.71973560474537
patch: List < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 20
score: 99.71072152944711
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 20
score: 99.69340297154018
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) ) ;
rank: 20
score: 99.68680826822917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ;
rank: 20
score: 99.6741610440341
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 20
score: 99.623486328125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Parent ( ) ) ;
rank: 21
score: 99.71232604980469
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 21
score: 99.68933475378788
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 21
score: 99.68396935096153
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node ) ;
rank: 21
score: 99.66739327566964
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First ( ) ) ;
rank: 21
score: 99.62333540482955
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 21
score: 99.61379076086956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 22
score: 99.71229771205357
patch: List < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 22
score: 99.68822428385417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , false ) ;
rank: 22
score: 99.67626953125
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 22
score: 99.66530936104911
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) ) ;
rank: 22
score: 99.65004475911458
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent ) ;
rank: 22
score: 99.62126922607422
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 22
score: 99.61165578741776
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 23
score: 99.71222686767578
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 23
score: 99.70543170797414
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 1 ) . get CaMeL Value ( ) ;
rank: 23
score: 99.68228585379464
patch: Node fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 23
score: 99.67564325747283
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 23
score: 99.66525390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( n ) ) ) ;
rank: 23
score: 99.64936885127315
patch: Node fall CaMeL Through ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 23
score: 99.61907280815973
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 23
score: 99.61055131392045
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 24
score: 99.71565755208333
patch: Node < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 24
score: 99.70209030877976
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 24
score: 99.68639119466145
patch: Node < Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 24
score: 99.67548479352679
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 24
score: 99.66441932091347
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 24
score: 99.61797540838069
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 24
score: 99.60950425091912
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 25
score: 99.71540436921296
patch: Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 25
score: 99.70176478794643
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 25
score: 99.68178858901516
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 25
score: 99.67517541956019
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null
rank: 25
score: 99.659912109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( 0 ) ) ) ;
rank: 25
score: 99.61597789417614
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 25
score: 99.6086934407552
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ) ;
rank: 26
score: 99.71468379579741
patch: Node < Node < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 26
score: 99.69921033135776
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 26
score: 99.68033329133064
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 26
score: 99.66693115234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , next ) ;
rank: 26
score: 99.64439978966347
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 26
score: 99.61571155894886
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( element ) ) ;
rank: 26
score: 99.60433959960938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . compute CaMeL Following ( n ) ) ;
rank: 27
score: 99.69842529296875
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 27
score: 99.69744110107422
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 27
score: 99.67970872961956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 27
score: 99.64078422214673
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 28
score: 99.71379743303571
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 28
score: 99.695458984375
patch: Node fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 28
score: 99.69331999747983
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 28
score: 99.678955078125
patch: Node next = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 28
score: 99.66120910644531
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ;
rank: 28
score: 99.65284075055804
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Root ( ) ) ;
rank: 29
score: 99.71293308423913
patch: Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 29
score: 99.69521262428977
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 29
score: 99.69151306152344
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 29
score: 99.66037916100544
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND ) {
rank: 29
score: 99.65113208912037
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 1 ) ) ;
rank: 29
score: 99.60001273777173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; try
rank: 30
score: 99.69403286637932
patch: Object fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 30
score: 99.69145856584821
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Value ( ) ;
rank: 30
score: 99.67384935461956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ;
rank: 30
score: 99.67144220525569
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 30
score: 99.65695716594827
patch: org . Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 30
score: 99.64906377377717
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 30
score: 99.6301037016369
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ,
rank: 30
score: 99.59881591796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; n .
rank: 31
score: 99.70559353298611
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 31
score: 99.69119395380434
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 31
score: 99.68942260742188
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 31
score: 99.67014917834052
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 31
score: 99.66995239257812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ) ;
rank: 31
score: 99.65599822998047
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , node ) ;
rank: 31
score: 99.62990159254808
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 31
score: 99.6047871907552
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , parent ) ) ;
rank: 31
score: 99.59120686848958
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; n }
rank: 32
score: 99.66949462890625
patch: Node fall CaMeL Through : try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 32
score: 99.64453125
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 33
score: 99.62655526620371
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( node ) ) ) ;
rank: 33
score: 99.60406203497024
patch: try { try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 33
score: 99.584716796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; Node
rank: 34
score: 99.68789672851562
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 34
score: 99.66639927455357
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 34
score: 99.66548828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else {
rank: 34
score: 99.65402657645089
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 34
score: 99.64375523158482
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Instance ( ) ) ;
rank: 34
score: 99.62548828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , n ) ) ;
rank: 34
score: 99.60201590401786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , fall CaMeL Through ) ;
rank: 34
score: 99.58371988932292
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , true ) ) ;
rank: 35
score: 99.69808846932871
patch: Node < Node < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 35
score: 99.68625112680289
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 35
score: 99.66327776227679
patch: } Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 35
score: 99.64261429398148
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 36
score: 99.68624877929688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 36
score: 99.66217510516827
patch: } Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 36
score: 99.65275573730469
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , null ) ) ;
rank: 36
score: 99.60014011548913
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Parent ( ) ) ;
rank: 36
score: 99.57972476356908
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true ) ;
rank: 37
score: 99.66046875
patch: Node < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 37
score: 99.62094116210938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this ) ;
rank: 37
score: 99.5983553799716
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( this ) ) ;
rank: 37
score: 99.5795389811198
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , compute CaMeL Following ( n ) ) ;
rank: 38
score: 99.68519247731855
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 38
score: 99.68325570913461
patch: Node fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 38
score: 99.66019694010417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , n ) ;
rank: 38
score: 99.65791377314815
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return out CaMeL Edges ;
rank: 38
score: 99.65251159667969
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , null ) ;
rank: 38
score: 99.63859049479167
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 38
score: 99.61702473958333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false ) ) ;
rank: 38
score: 99.5966159986413
patch: this . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 38
score: 99.5784912109375
patch: try { int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 39
score: 99.68387044270834
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) == null
rank: 39
score: 99.65972689924568
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , compute CaMeL Following ( n ) ) ;
rank: 39
score: 99.65203857421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , null ) ) ;
rank: 39
score: 99.63638741629464
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Name ( ) ) ;
rank: 39
score: 99.57826741536458
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; compute CaMeL Following ( n ) ;
rank: 40
score: 99.68101399739584
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 40
score: 99.65876770019531
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 40
score: 99.65381731305804
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , fall CaMeL Through ) ;
rank: 40
score: 99.60879118546195
patch: Node fall CaMeL Through = ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 40
score: 99.59482709099265
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 40
score: 99.57242484714673
patch: try ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 41
score: 99.68238044507575
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 41
score: 99.65039966724537
patch: Node g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 41
score: 99.63290841238839
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Parent ( ) ) ) ;
rank: 41
score: 99.602607421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) compute CaMeL Following ( n ) ) ;
rank: 41
score: 99.59423828125
patch: List < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 41
score: 99.572265625
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) .
rank: 42
score: 99.68931000808189
patch: Node < Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 42
score: 99.67990451388889
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ;
rank: 42
score: 99.648544921875
patch: List < Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 42
score: 99.64852168642241
patch: List < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 42
score: 99.59827270507813
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 42
score: 99.5935291108631
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 42
score: 99.57059518914474
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false ) ;
rank: 43
score: 99.68424479166667
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 43
score: 99.63178542564656
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 43
score: 99.59814453125
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 43
score: 99.59287806919643
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ) ) ;
rank: 43
score: 99.57004123263889
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 44
score: 99.68415436921296
patch: Node < Di CaMeL Graph CaMeL Edge , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 44
score: 99.6751708984375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 44
score: 99.65481770833334
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 44
score: 99.64626639229911
patch: final Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 44
score: 99.63132052951389
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 44
score: 99.59132982336956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ) ;
rank: 45
score: 99.674365234375
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 45
score: 99.67252604166667
patch: final List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 45
score: 99.65418243408203
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) ) ) ;
rank: 45
score: 99.646337890625
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 45
score: 99.63101632254464
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ) ;
rank: 45
score: 99.5974651834239
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Node ( ) ) ;
rank: 46
score: 99.67237807765152
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 46
score: 99.64531418372844
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 46
score: 99.6290616122159
patch: / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 46
score: 99.59618201622597
patch: if ( fall CaMeL Through != null ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 46
score: 99.58891157670455
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( parent ) ) ;
rank: 47
score: 99.68033541165866
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 47
score: 99.67183800899622
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 47
score: 99.67097981770833
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 47
score: 99.65079752604167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , true ) ;
rank: 47
score: 99.64398484002976
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 47
score: 99.64284752155173
patch: List < Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 47
score: 99.5862325032552
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , element ) ) ;
rank: 47
score: 99.56373180042614
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get ( n ) ) ;
rank: 48
score: 99.6466015625
patch: } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 48
score: 99.64267914870689
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 48
score: 99.64239501953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , fall CaMeL Through ) ;
rank: 48
score: 99.62702287946429
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ;
rank: 48
score: 99.59438254616477
patch: Node fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 48
score: 99.58519071691177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent ) ;
rank: 48
score: 99.56292724609375
patch: Node [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 49
score: 99.67982219827586
patch: Node < Node < Di CaMeL Graph CaMeL Edge , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 49
score: 99.645546875
patch: Set < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 49
score: 99.64163208007812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , null ) ;
rank: 49
score: 99.64142477101294
patch: Collection < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 49
score: 99.6267620584239
patch: / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 49
score: 99.5938720703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( ) ) ) ;
rank: 50
score: 99.66837252103366
patch: Node fall CaMeL Through = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 50
score: 99.66810931581439
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 50
score: 99.64136614118304
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null ;
rank: 50
score: 99.63976111778847
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ;
rank: 50
score: 99.5919773267663
patch: Node fall CaMeL Through = { try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 50
score: 99.56165568033855
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ) .
rank: 51
score: 99.67889873798077
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 1 ) . get CaMeL Value ( ) ;
rank: 51
score: 99.66758991109914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 51
score: 99.6437355324074
patch: try { Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 51
score: 99.64132557744566
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 51
score: 99.581865234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Next ( ) ) ;
rank: 51
score: 99.55947477921195
patch: Node Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 52
score: 99.66739628232759
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 52
score: 99.64356208570075
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) . get CaMeL Value ( ) ) ;
rank: 52
score: 99.64105224609375
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Destination ( ) ) ;
rank: 52
score: 99.62613619290866
patch: Node fall CaMeL Through = new Node ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ) ;
rank: 53
score: 99.66686641808712
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 53
score: 99.66570081208882
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 53
score: 99.64264322916667
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 53
score: 99.63880657327586
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 53
score: 99.58122452445652
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching $NUMBER$ ( compute CaMeL Following ( n ) ) ;
rank: 54
score: 99.67748084435097
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , out CaMeL Edges ) ;
rank: 54
score: 99.66555259967673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 54
score: 99.66492880544355
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 54
score: 99.64205729166666
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL First ( ) ) ) ;
rank: 54
score: 99.63843491498162
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , out CaMeL Edges ) ;
rank: 54
score: 99.63772898706897
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; return fall CaMeL Through ;
rank: 54
score: 99.62486530172414
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 54
score: 99.59079214242789
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ,
rank: 54
score: 99.5810879794034
patch: List fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 55
score: 99.64190673828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 55
score: 99.59073893229167
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 55
score: 99.577333984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Node ( ) ) ;
rank: 55
score: 99.55435180664062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , compute CaMeL Following ( n ) ) ;
rank: 56
score: 99.67612641433189
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ; }
rank: 56
score: 99.64168031754032
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 56
score: 99.63798384232955
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 56
score: 99.634365234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return next ;
rank: 56
score: 99.59002216045673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , node ) ) ;
rank: 56
score: 99.57685990767045
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 56
score: 99.5533806295956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ;
rank: 57
score: 99.6752296730324
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 57
score: 99.66226399739584
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 57
score: 99.64162868923611
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 57
score: 99.58970289963942
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false ) ;
rank: 58
score: 99.6747814360119
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 58
score: 99.6328655740489
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 58
score: 99.62065067997685
patch: Node < Node < Node >> fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 58
score: 99.575908203125
patch: Iterator < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 59
score: 99.66041666666666
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 59
score: 99.659912109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL First CaMeL Child ( ) ) ;
rank: 59
score: 99.63691057477679
patch: final Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 59
score: 99.62045393318965
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ; ;
rank: 59
score: 99.5520656419837
patch: ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 60
score: 99.67342435396634
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 60
score: 99.65960903825432
patch: Iterator < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 60
score: 99.659521484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n , n ) ) ;
rank: 60
score: 99.63687626008064
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 60
score: 99.63133704144022
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ] ) ) ;
rank: 60
score: 99.61937604631696
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ; ;
rank: 60
score: 99.58595628004808
patch: Node fall CaMeL Through = new Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 60
score: 99.57305908203125
patch: / * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 61
score: 99.65957845052084
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) . get CaMeL Value ( ) ;
rank: 61
score: 99.63981628417969
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Parent ( ) ) ;
rank: 61
score: 99.6364013671875
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 61
score: 99.61935860770089
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Last ( ) ) ;
rank: 61
score: 99.58577827785327
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 61
score: 99.572900390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n ) ;
rank: 62
score: 99.63583170572916
patch: try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 62
score: 99.63095528738839
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Destination ( ) ) ) ;
rank: 62
score: 99.61903118265086
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ) ;
rank: 62
score: 99.58561197916667
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 63
score: 99.65904498922414
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 63
score: 99.65791459517045
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 63
score: 99.63542624080883
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 63
score: 99.61899636008523
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ;
rank: 63
score: 99.58555094401042
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) {
rank: 63
score: 99.57115589488636
patch: else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 63
score: 99.5490085767663
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ! compute CaMeL Following ( n ) ) ;
rank: 64
score: 99.67104270241477
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 64
score: 99.65546123798077
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 64
score: 99.63492838541667
patch: Node g CaMeL Node = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 64
score: 99.61632879849138
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) , ) ;
rank: 64
score: 99.58529897836539
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node ) ;
rank: 64
score: 99.569853515625
patch: Node < ? > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 64
score: 99.54842476222827
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( compute ( n ) ) ) ;
rank: 65
score: 99.65701941287878
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return next ;
rank: 65
score: 99.65360062210648
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 65
score: 99.6349105834961
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } case Token . RETURN :
rank: 65
score: 99.63037109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) ) ;
rank: 65
score: 99.585126953125
patch: Node fall CaMeL Through = ( int ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 65
score: 99.568583984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Last ( ) ) ;
rank: 65
score: 99.54838230298913
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } }
rank: 66
score: 99.65618341619319
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) ;
rank: 66
score: 99.653505859375
patch: Node node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 66
score: 99.63553059895834
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 66
score: 99.63460023941532
patch: Linked CaMeL List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 66
score: 99.62967354910714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , g CaMeL Node ) ;
rank: 66
score: 99.56833718039773
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( edge ) ) ;
rank: 66
score: 99.54616970486111
patch: = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 67
score: 99.66879754317434
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 67
score: 99.65605311239919
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , out CaMeL Edges . get ( 0 ) ) ;
rank: 67
score: 99.63413373161765
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , cur CaMeL Cfg ) ;
rank: 67
score: 99.63329264322917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) , false ) ;
rank: 67
score: 99.62938391644022
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; {
rank: 68
score: 99.6686279296875
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 68
score: 99.65549538352273
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 68
score: 99.63401840672348
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , compute CaMeL Following ( n ) ) ;
rank: 68
score: 99.63307189941406
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , System . current CaMeL Time CaMeL Millis ( ) ) ;
rank: 68
score: 99.61286031788794
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get CaMeL Value ( ) ) ;
rank: 68
score: 99.5845196063702
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false , false ) ;
rank: 68
score: 99.56810546875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 68
score: 99.54554239908855
patch: try { void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 69
score: 99.66861165364584
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 69
score: 99.63295425907258
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 69
score: 99.61218872070313
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 69
score: 99.54550350413604
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) .
rank: 70
score: 99.65348052978516
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , 0 ) ) ;
rank: 70
score: 99.64966662176724
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 70
score: 99.62662179129464
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) , n ) ;
rank: 70
score: 99.61130934495192
patch: final Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 70
score: 99.57933631310097
patch: Node fall CaMeL Through ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 70
score: 99.567138671875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 70
score: 99.54454549153645
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ( ) ) ) ;
rank: 71
score: 99.66828264508929
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 71
score: 99.65345110212054
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 71
score: 99.649267578125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Next ( ) ) ;
rank: 71
score: 99.63286994485294
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , g CaMeL Node ) ;
rank: 71
score: 99.61057886584052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) , n ) ;
rank: 71
score: 99.56642659505208
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 72
score: 99.64818226207386
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 72
score: 99.6322509765625
patch: Node out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 72
score: 99.631875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 72
score: 99.62370082310268
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through ; }
rank: 72
score: 99.60867745535714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ) ;
rank: 72
score: 99.57882690429688
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 72
score: 99.5647860440341
patch: Block fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 73
score: 99.65282463304925
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ) ;
rank: 73
score: 99.6317471590909
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ) ;
rank: 73
score: 99.63146158854167
patch: Node g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 73
score: 99.60781755118535
patch: if ( fall CaMeL Through ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 73
score: 99.57879638671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( n ) ) ;
rank: 73
score: 99.56396484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , current ) ) ;
rank: 74
score: 99.65204909752156
patch: List < Di CaMeL Graph CaMeL Edge < Node < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 74
score: 99.6451171875
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 74
score: 99.63101399739584
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 74
score: 99.62193561422414
patch: List < Di CaMeL Graph CaMeL Edge > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 74
score: 99.607177734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get ( 0 ) ;
rank: 74
score: 99.57809315557066
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 74
score: 99.54355755974265
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ;
rank: 75
score: 99.66507662259616
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; }
rank: 75
score: 99.65022786458333
patch: out CaMeL Edges . List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 75
score: 99.64388602120536
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 75
score: 99.63125610351562
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 75
score: 99.63037872314453
patch: Node [ ] out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 75
score: 99.57570167824075
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; Node fall CaMeL Through =
rank: 75
score: 99.56248046875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Type ( ) ) ;
rank: 75
score: 99.54206678602431
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 76
score: 99.65019788240132
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( compute CaMeL Following ( n ) ) ;
rank: 76
score: 99.63008626302083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , next ) ;
rank: 76
score: 99.62092808314732
patch: case Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 76
score: 99.60650634765625
patch: fall CaMeL Through = true ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 76
score: 99.560791015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( n ) ) ;
rank: 76
score: 99.5408999794408
patch: try ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 77
score: 99.6634521484375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) ) ;
rank: 77
score: 99.65016174316406
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 77
score: 99.6300407858456
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 77
score: 99.62991431451613
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 77
score: 99.60647147042411
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) , ;
rank: 77
score: 99.5604296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Name ( ) ) ;
rank: 77
score: 99.5394999186198
patch: try { boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 78
score: 99.62998744419643
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 78
score: 99.62973458426339
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Last ( ) ) ) ;
rank: 78
score: 99.60590277777777
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( $NUMBER$ ) ) ;
rank: 78
score: 99.5604296875
patch: Iterator < int > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 78
score: 99.5394287109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ) ;
rank: 79
score: 99.662197265625
patch: Node < Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 79
score: 99.62998334099265
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 79
score: 99.62923431396484
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , fall CaMeL Through ) ;
rank: 79
score: 99.6041949728261
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 79
score: 99.5737774188702
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true ) ;
rank: 79
score: 99.56039428710938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , type ) ) ;
rank: 79
score: 99.53892211914062
patch: Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 80
score: 99.64828786542338
patch: List < Di CaMeL Graph CaMeL Edge < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 80
score: 99.60309968171296
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ;
rank: 80
score: 99.57349571814903
patch: Node fall CaMeL Through = Node CaMeL Util . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 80
score: 99.55758666992188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , current ) ;
rank: 81
score: 99.6596484375
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 81
score: 99.6481704711914
patch: out CaMeL Edges . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 81
score: 99.62870788574219
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } case Token . BREAK :
rank: 81
score: 99.57313889723558
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false , true ) ;
rank: 82
score: 99.64785304214016
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 82
score: 99.6398193359375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Node ( ) . get CaMeL Value ( ) ;
rank: 82
score: 99.6273896188447
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 82
score: 99.5725330171131
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 82
score: 99.55517578125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( current ) ) ;
rank: 83
score: 99.638671875
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 83
score: 99.62778005292338
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return fall CaMeL Through ;
rank: 83
score: 99.62630562160327
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) ) ;
rank: 83
score: 99.57185872395833
patch: else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 83
score: 99.5360819498698
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , this ) ) ;
rank: 84
score: 99.65670211226852
patch: List < Di CaMeL Graph CaMeL Edge , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 84
score: 99.62574817288306
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , ) ;
rank: 84
score: 99.624755859375
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 84
score: 99.5995460792824
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ) ;
rank: 84
score: 99.57102683738425
patch: Node fall CaMeL Through : Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 85
score: 99.65662883890086
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 85
score: 99.6469497680664
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 85
score: 99.6249267578125
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 85
score: 99.6228759765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , null ) ;
rank: 85
score: 99.59926421066811
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ; ;
rank: 85
score: 99.5534765625
patch: try { try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 85
score: 99.5327860514323
patch: Node ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 86
score: 99.63565266927084
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Destination ( ) ) ;
rank: 86
score: 99.62489420572916
patch: final List < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 86
score: 99.62279533617425
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Parent ( ) . get CaMeL Value ( ) ) ;
rank: 86
score: 99.59875909213362
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ) ;
rank: 86
score: 99.553447265625
patch: Collection < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 86
score: 99.53238932291667
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 87
score: 99.6561767578125
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 87
score: 99.6244880922379
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , ) ) ;
rank: 87
score: 99.62254987444196
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ) ;
rank: 87
score: 99.61465018136161
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( ) . has CaMeL Children ( ) ) {
rank: 87
score: 99.5986328125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) , n ) ;
rank: 87
score: 99.56988055889423
patch: if ( fall CaMeL Through == null ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 87
score: 99.55318019701087
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) n ) ;
rank: 87
score: 99.53200461647727
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ( n ) ) ;
rank: 88
score: 99.634697265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Destination ( ) ) ;
rank: 88
score: 99.62348002772177
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 88
score: 99.5964988425926
patch: fall CaMeL Through = true ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 89
score: 99.65505052649456
patch: Node < Node < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 89
score: 99.646533203125
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 89
score: 99.62289724042338
patch: Node node = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 89
score: 99.62169921875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( System . current CaMeL Time CaMeL Millis ( ) ) ;
rank: 89
score: 99.55
patch: Node < int > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 89
score: 99.53012917258523
patch: try { Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 90
score: 99.65488106863839
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 90
score: 99.64586981411638
patch: List < Di CaMeL Graph CaMeL Edge < Node , ? >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 90
score: 99.63397623697917
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 90
score: 99.62150355747768
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) {
rank: 90
score: 99.61226981026786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; { return fall CaMeL Through ;
rank: 90
score: 99.5947265625
patch: if ( n . has CaMeL Children ( ) ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 91
score: 99.6547430630388
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ; }
rank: 91
score: 99.64552659254808
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 91
score: 99.63334147135417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) . get CaMeL Value ( ) ) ;
rank: 91
score: 99.62138671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 91
score: 99.62109375
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION )
rank: 91
score: 99.59364897629311
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 91
score: 99.56862229567308
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true , false ) ;
rank: 91
score: 99.52970805921052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try {
rank: 92
score: 99.65470703125
patch: Node < Node >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 92
score: 99.64404296875
patch: List < Di CaMeL Graph CaMeL Edge < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 92
score: 99.62130638860887
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ;
rank: 92
score: 99.62100040211396
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Destination ( ) ) ;
rank: 92
score: 99.61146897536058
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , out CaMeL Edges . get ( 0 ) ) ;
rank: 92
score: 99.5934346516927
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 92
score: 99.547685546875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Root ( ) ) ;
rank: 92
score: 99.52797002377717
patch: else Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 93
score: 99.65442708333333
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; }
rank: 93
score: 99.62997000558036
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ) ;
rank: 93
score: 99.62056477864583
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 93
score: 99.61990356445312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , false ) ;
rank: 93
score: 99.59323556082589
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Type ( ) ) ;
rank: 93
score: 99.56685697115384
patch: Node fall CaMeL Through = ( Node ) ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 93
score: 99.52787449048913
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; =
rank: 94
score: 99.65420096261161
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 94
score: 99.64381510416666
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( this ) ) ;
rank: 94
score: 99.6195580267137
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == fall CaMeL Through ) ;
rank: 94
score: 99.61092403017241
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get ( 0 ) ) ;
rank: 94
score: 99.56630678530092
patch: Node fall CaMeL Through = compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 95
score: 99.65403464988425
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ; }
rank: 95
score: 99.629521484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Next ( ) ) ;
rank: 95
score: 99.6203143780048
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ;
rank: 95
score: 99.61928423713235
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 95
score: 99.59304283405173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ) ;
rank: 95
score: 99.5660988136574
patch: Node fall CaMeL Through = ( Node ) this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 95
score: 99.54648951480263
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent , n ) ;
rank: 96
score: 99.64300827752976
patch: List < Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 96
score: 99.62916666666666
patch: } List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 96
score: 99.6197509765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Message ( ) ) ;
rank: 96
score: 99.60946219308036
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 96
score: 99.56606264467592
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 96
score: 99.54639781605114
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( children ) ) ;
rank: 96
score: 99.52589000355114
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . null ( n ) ) ;
rank: 97
score: 99.65301106770833
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . RETURN ) ;
rank: 97
score: 99.62911283052884
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , cur CaMeL Cfg ) ;
rank: 97
score: 99.61973987926136
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ) ;
rank: 97
score: 99.60945638020833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch ( n . get CaMeL Next ( ) ) ) ;
rank: 97
score: 99.59222622575432
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Instance ( n ) ) ;
rank: 97
score: 99.546337890625
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) ) ;
rank: 98
score: 99.65272623697916
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . BREAK ) ;
rank: 98
score: 99.64064075100806
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 98
score: 99.61936848958334
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Parent ( ) ) ;
rank: 98
score: 99.61843872070312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ) ;
rank: 98
score: 99.60930786132812
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 98
score: 99.59202665441177
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 98
score: 99.56593831380208
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node , n ) ) ;
rank: 98
score: 99.546259765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) fall CaMeL Through ) ;
rank: 99
score: 99.65242826021634
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 99
score: 99.64007568359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , 0 ) ;
rank: 99
score: 99.61877020474138
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Parent ( ) ) ;
rank: 99
score: 99.590537109375
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 99
score: 99.56584366508152
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 99
score: 99.54545084635417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( this , n ) ) ;
rank: 99
score: 99.52500406901042
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ;
rank: 100
score: 99.65210899939903
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 1 ) . get CaMeL Destination ( ) ;
rank: 100
score: 99.6281505766369
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 100
score: 99.61851399739584
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Last CaMeL Child ( ) ) ;
rank: 100
score: 99.61724494485294
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n . get CaMeL Next ( ) ) ;
rank: 100
score: 99.60796649639423
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , n ) ;
rank: 100
score: 99.59051513671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( g CaMeL Node ) ) ;
rank: 100
score: 99.54518636067708
patch: Node fall CaMeL Through = compute CaMeL Following ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 100
score: 99.52492268880208
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 101
score: 99.6515380859375
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 101
score: 99.62804754849138
patch: Map < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 101
score: 99.61701171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ; }
rank: 101
score: 99.61692527488425
patch: node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 101
score: 99.60730997721355
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) + 0 ) ;
rank: 101
score: 99.54511176215277
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ) ;
rank: 101
score: 99.52372409986413
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) true ) ;
rank: 102
score: 99.65091378348214
patch: Node < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 102
score: 99.61669921875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . CONTINUE ) {
rank: 102
score: 99.60724346454327
patch: fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 102
score: 99.56392867476852
patch: Node fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 102
score: 99.54468936011905
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , n ) ;
rank: 102
score: 99.52356487771739
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) false ) ;
rank: 103
score: 99.64908040364584
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == null && n . has CaMeL Children ( ) ) ;
rank: 103
score: 99.626953125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Parent ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 103
score: 99.61555989583333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) , n ) ) ;
rank: 103
score: 99.60684098868535
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 104
score: 99.63853236607143
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } }
rank: 104
score: 99.62638065732759
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 104
score: 99.61638327205883
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 104
score: 99.6061503092448
patch: Node [ ] out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 104
score: 99.56265258789062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true , compute CaMeL Following ( n ) ) ;
rank: 104
score: 99.543642578125
patch: Node < String > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 104
score: 99.52109781901042
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( compute CaMeL Following ( n ) ) ) ;
rank: 105
score: 99.64879557291667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 105
score: 99.63814290364583
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . FUNCTION ) ;
rank: 105
score: 99.62625325520834
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 105
score: 99.61546223958334
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) , n ) ) ;
rank: 105
score: 99.58950918692129
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ) ;
rank: 105
score: 99.54324473505434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n compute CaMeL Following ( n ) ) ;
rank: 105
score: 99.520751953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; Node ;
rank: 106
score: 99.64876302083333
patch: Node < Node , Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 106
score: 99.6377197265625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 106
score: 99.62617019127156
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Type ( ) ;
rank: 106
score: 99.61549287683823
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ) ;
rank: 106
score: 99.52000843394886
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 107
score: 99.64866536458334
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . BLOCK ) ;
rank: 107
score: 99.62607602719908
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 1 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 107
score: 99.614599609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) , n ) ;
rank: 107
score: 99.58912004743304
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . to CaMeL Array ( ) ) ;
rank: 107
score: 99.54314108455883
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 108
score: 99.62569986979166
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 108
score: 99.61432081653226
patch: Node Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 108
score: 99.56197554976852
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( edge ) ) ) ;
rank: 108
score: 99.54149280894886
patch: Rectangle fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 108
score: 99.51931923314145
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n .
rank: 109
score: 99.64740862165179
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ;
rank: 109
score: 99.6128817471591
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 109
score: 99.588623046875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( 0 ) ) ;
rank: 109
score: 99.54129028320312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , type ) ;
rank: 110
score: 99.64724934895834
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Destination ( ) ) ;
rank: 110
score: 99.63680267333984
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ; }
rank: 110
score: 99.6248291015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Parent ( ) ) ;
rank: 110
score: 99.6128638482863
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) ) ;
rank: 110
score: 99.6032002766927
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 110
score: 99.56026517427884
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent ) ;
rank: 110
score: 99.54114786783855
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Node , n ) ) ;
rank: 110
score: 99.51668294270833
patch: Node fall CaMeL Through = n . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 111
score: 99.63633626302084
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( 0 ) ) ;
rank: 111
score: 99.62433330829327
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 111
score: 99.61263834635416
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 111
score: 99.5406494140625
patch: Statement fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 111
score: 99.51646356997283
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n ) ) ;
rank: 112
score: 99.64679361979167
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 112
score: 99.61237866950758
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . get CaMeL Value ( ) ) ;
rank: 112
score: 99.60220231681035
patch: List < Di CaMeL Graph CaMeL Edge > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 112
score: 99.58673727101294
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) , ) ) ;
rank: 112
score: 99.55968707540761
patch: Node fall CaMeL Through = = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 112
score: 99.5404742697011
patch: final void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 112
score: 99.5163241299716
patch: double fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 113
score: 99.63521321614583
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 113
score: 99.61217080393145
patch: Node try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 113
score: 99.61178681344697
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ) ;
rank: 113
score: 99.602158203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return n ;
rank: 113
score: 99.58632475754311
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 113
score: 99.55868530273438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false , compute CaMeL Following ( n ) ) ;
rank: 113
score: 99.51596069335938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = true ;
rank: 114
score: 99.64510091145833
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == null || n . has CaMeL Children ( ) ) ;
rank: 114
score: 99.63515288254311
patch: g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 114
score: 99.62188720703125
patch: Node fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 114
score: 99.58598109654018
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ;
rank: 114
score: 99.55834021935097
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n ) ) ;
rank: 114
score: 99.53996138139205
patch: Element fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 114
score: 99.51556951349431
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute ( n ) ) ;
rank: 115
score: 99.62112426757812
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 115
score: 99.61119079589844
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 115
score: 99.61109161376953
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Next ( ) ) ;
rank: 115
score: 99.60077373798077
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , null ) ;
rank: 115
score: 99.58548538773148
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Root ( ) ) ;
rank: 115
score: 99.55819702148438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( parent , n ) ) ;
rank: 115
score: 99.51528098366477
patch: Through fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 116
score: 99.64397063078704
patch: Node < Di CaMeL Graph CaMeL Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 116
score: 99.609765625
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 116
score: 99.58529550057871
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , compute ( n ) ) ) ;
rank: 116
score: 99.53968877377717
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Node ) n ) ;
rank: 116
score: 99.5131199048913
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ;
rank: 117
score: 99.62105305989583
patch: Class fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 117
score: 99.61090087890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 117
score: 99.60959388469827
patch: Set < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 117
score: 99.60002188846983
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ;
rank: 117
score: 99.58465576171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Key ( ) ) ;
rank: 117
score: 99.53886274857955
patch: E fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 118
score: 99.64278609664352
patch: if ( out CaMeL Edges . size ( ) == 1 ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 118
score: 99.63421075994319
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 118
score: 99.62091936383929
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , out CaMeL Edges . get ( 0 ) ) ;
rank: 118
score: 99.60932448814656
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 118
score: 99.58392544450432
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 118
score: 99.53871663411458
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , children ) ) ;
rank: 118
score: 99.51212935014205
patch: ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 119
score: 99.64240133351294
patch: Node < List < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 119
score: 99.61009765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) ;
rank: 119
score: 99.60855102539062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , true ) ;
rank: 119
score: 99.556396484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true , true ) ;
rank: 119
score: 99.5386603860294
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 120
score: 99.62019566127232
patch: Node fall CaMeL Through = node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 120
score: 99.60968889508929
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ) ;
rank: 120
score: 99.60838160021552
patch: org . Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 120
score: 99.5985107421875
patch: Node out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 120
score: 99.58233642578125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( n ) ) ) ;
rank: 120
score: 99.55586381392045
patch: fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 120
score: 99.51174444901316
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute , n ) ;
rank: 121
score: 99.6339453125
patch: List < Di CaMeL Graph CaMeL Edge > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 121
score: 99.62015787760417
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 121
score: 99.60835484095982
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) , n ) ;
rank: 121
score: 99.58192661830357
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 121
score: 99.55577256944444
patch: Node fall CaMeL Through ; else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 121
score: 99.51157924107143
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 122
score: 99.6416648582176
patch: Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 122
score: 99.6336669921875
patch: final List < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 122
score: 99.61966378348214
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 122
score: 99.60793631417411
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) , false ) ;
rank: 122
score: 99.60746002197266
patch: Node node = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 122
score: 99.59833635602679
patch: } Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 122
score: 99.55553181966145
patch: Node fall CaMeL Through = super . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 122
score: 99.51141357421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute , compute CaMeL Following ( n ) ) ;
rank: 123
score: 99.63289642333984
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 123
score: 99.58164243344908
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Result ( ) ) ;
rank: 123
score: 99.5368319424716
patch: Token fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 123
score: 99.51137473366477
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) +
rank: 124
score: 99.64145844558189
patch: if ( n . has CaMeL Children ( ) ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 124
score: 99.63204193115234
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n , n . get CaMeL Next ( ) ) ) ;
rank: 124
score: 99.61915690104166
patch: Object fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 124
score: 99.6066650390625
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , out CaMeL Edges ) ;
rank: 124
score: 99.60570501512096
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) ) ;
rank: 124
score: 99.58127170138889
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ) ;
rank: 124
score: 99.55391890914352
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( parent ) ) ) ;
rank: 124
score: 99.53664328835227
patch: short fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 124
score: 99.5113037109375
patch: try { = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 125
score: 99.6412109375
patch: Preconditions . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 125
score: 99.63175201416016
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 125
score: 99.61914876302083
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 125
score: 99.60624186197917
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , fall CaMeL Through ) ;
rank: 125
score: 99.60438537597656
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 125
score: 99.59722430889423
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , null ) ;
rank: 125
score: 99.51113891601562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n + true ) ) ;
rank: 126
score: 99.64059974407327
patch: Node < Node < Di CaMeL Graph CaMeL Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 126
score: 99.58093682650862
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ) ;
rank: 126
score: 99.55372032752403
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( compute CaMeL Following ( n ) ) ) ;
rank: 126
score: 99.53543223505434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Last ( ) ) ;
rank: 127
score: 99.63131398168103
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Next ( ) == null
rank: 127
score: 99.6188720703125
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 127
score: 99.60498809814453
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } case Token . CONTINUE :
rank: 127
score: 99.60374232700893
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Id ( ) ) ;
rank: 127
score: 99.53527113970588
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( element ) ;
rank: 127
score: 99.51038614908855
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , 0 ) ) ;
rank: 128
score: 99.63946940104167
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return fall CaMeL Through ;
rank: 128
score: 99.63131066524622
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 128
score: 99.6049072265625
patch: Node } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 128
score: 99.58044012661638
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ; ;
rank: 128
score: 99.55313223379629
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( compute ( n ) ) ) ;
rank: 128
score: 99.5352450284091
patch: Node fall CaMeL Through ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 129
score: 99.63109537760417
patch: Node next = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 129
score: 99.60484577047414
patch: Collection < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 129
score: 99.6031982421875
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 129
score: 99.55307006835938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , filter ) ;
rank: 130
score: 99.6369873046875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , g CaMeL Node ) ) ;
rank: 130
score: 99.63092595880681
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 130
score: 99.604736328125
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null
rank: 130
score: 99.60277416087963
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false ) ;
rank: 130
score: 99.59542410714286
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) , n ) ;
rank: 130
score: 99.57996026400862
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( n ) ) ;
rank: 130
score: 99.552978515625
patch: ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 130
score: 99.50994873046875
patch: try * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 131
score: 99.63058997844827
patch: g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 131
score: 99.61604527064732
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , out CaMeL Edges ) ;
rank: 131
score: 99.6044921875
patch: Node element = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 131
score: 99.59538664641204
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through -
rank: 131
score: 99.552978515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; Node fall CaMeL Through ;
rank: 131
score: 99.53261847245066
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , n ) ;
rank: 132
score: 99.61542426215277
patch: Node fall CaMeL Through = cur CaMeL Cfg . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 132
score: 99.60411725725446
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ;
rank: 132
score: 99.60196940104167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) , true ) ;
rank: 132
score: 99.57900565011161
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) compute CaMeL Following ( n ) ) ;
rank: 132
score: 99.55268012152777
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 132
score: 99.53086159446023
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ( Node ) n ) ;
rank: 132
score: 99.5094706217448
patch: Node fall CaMeL Through = try . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 133
score: 99.630126953125
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 133
score: 99.61497145432692
patch: Node fall CaMeL Through = fall CaMeL Through = fall CaMeL Through . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 133
score: 99.60140787760416
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) , false ) ) ;
rank: 133
score: 99.57891845703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Parent ( ) ;
rank: 133
score: 99.552451171875
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) {
rank: 133
score: 99.50928795855978
patch: Node fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 134
score: 99.63504231770834
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node , fall CaMeL Through ) ;
rank: 134
score: 99.63010951450893
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 134
score: 99.6147040005388
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( $NUMBER$ ) . get CaMeL Value ( ) ;
rank: 134
score: 99.6040569802989
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) ) {
rank: 134
score: 99.59494454520089
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this , fall CaMeL Through ) ;
rank: 134
score: 99.57877604166667
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First ( ) ) ;
rank: 134
score: 99.551884765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ( Node ) n ) ) ;
rank: 134
score: 99.50871138139205
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return fall CaMeL Through ;
rank: 135
score: 99.634775390625
patch: Node < Node < Token , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 135
score: 99.61442427201705
patch: Node fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 135
score: 99.60067313058036
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( System . current CaMeL Time CaMeL Millis ( ) ) ;
rank: 135
score: 99.59491177262932
patch: Node fall CaMeL Through : try { out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 135
score: 99.5518329326923
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; fall CaMeL Through ;
rank: 135
score: 99.53005801930146
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 136
score: 99.63329264322917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) , n ) ;
rank: 136
score: 99.62952053931451
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) ;
rank: 136
score: 99.60337250808189
patch: Vector < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 136
score: 99.60005950927734
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 136
score: 99.59458705357143
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , g CaMeL Node ) ;
rank: 136
score: 99.5777587890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , n ) ;
rank: 136
score: 99.507080078125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n + 0 ) ) ;
rank: 137
score: 99.61324869791666
patch: Node fall CaMeL Through = ( Node , n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 137
score: 99.60336599042338
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 137
score: 99.59989711216518
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Next ( ) ) ;
rank: 137
score: 99.59456089564732
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( )
rank: 137
score: 99.57748849051339
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ) ;
rank: 137
score: 99.5510965983073
patch: Node { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 137
score: 99.52904163707386
patch: long fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 138
score: 99.5943603515625
patch: List < Di CaMeL Graph CaMeL Edge null >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 138
score: 99.55093149038461
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent , n ) ;
rank: 138
score: 99.50634765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( next ) ;
rank: 139
score: 99.62837890625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 139
score: 99.60320685891544
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) ) ;
rank: 139
score: 99.59966634114583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 139
score: 99.59390995420259
patch: Node fall CaMeL Through = super . out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 139
score: 99.55049189814815
patch: fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 139
score: 99.52864213423295
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( type ) ) ;
rank: 140
score: 99.63174333243535
patch: Node < Di CaMeL Graph CaMeL Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 140
score: 99.62808837890626
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 140
score: 99.60314520474138
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION )
rank: 140
score: 99.599609375
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 140
score: 99.59341543692129
patch: Di CaMeL Graph CaMeL Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 140
score: 99.54715983072917
patch: Node fall CaMeL Through = ( ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 140
score: 99.5278851052989
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Name ( ) ) ;
rank: 140
score: 99.50514729817708
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n + false ) ) ;
rank: 141
score: 99.627685546875
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 141
score: 99.6109619140625
patch: Node fall CaMeL Through = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 141
score: 99.60305989583334
patch: return n ; } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 141
score: 99.59915597098214
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) ;
rank: 141
score: 99.59316781850961
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , this ) ;
rank: 141
score: 99.57648835358796
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( n ) ) ) ;
rank: 141
score: 99.54714731069711
patch: Node fall CaMeL Through = ( Node , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 141
score: 99.505126953125
patch: try ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 142
score: 99.62752278645833
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , compute CaMeL Following ( n ) ) ) ;
rank: 142
score: 99.60302734375
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION
rank: 142
score: 99.59886853448276
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ) ;
rank: 142
score: 99.59273856026786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through 1 ;
rank: 142
score: 99.57635708512932
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( n ) ) ;
rank: 142
score: 99.54661923363095
patch: Node fall CaMeL Through = ( Node ) compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 143
score: 99.630166015625
patch: Node < Node < Node < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 143
score: 99.62729344223484
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ; }
rank: 143
score: 99.60982711226852
patch: Node fall CaMeL Through = node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 143
score: 99.598828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) , n ) ;
rank: 143
score: 99.576318359375
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ;
rank: 143
score: 99.54613318810097
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false , true ) ) ;
rank: 143
score: 99.52479137073864
patch: Iterator fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 144
score: 99.62701205549568
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 144
score: 99.60257273706897
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ; }
rank: 144
score: 99.59171268857759
patch: } case Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 144
score: 99.57611553485577
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( n ) ) ;
rank: 144
score: 99.54600458559783
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 144
score: 99.50346235795455
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . Context ( n ) ) ;
rank: 145
score: 99.62884521484375
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; }
rank: 145
score: 99.6266860961914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 145
score: 99.60872802734374
patch: Node [ ] out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 145
score: 99.60227966308594
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , node ) ) ;
rank: 145
score: 99.57583182198661
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ) ;
rank: 145
score: 99.54593599759616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false , false ) ) ;
rank: 145
score: 99.5242229959239
patch: ? Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 146
score: 99.62869027944711
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) ;
rank: 146
score: 99.6264130563447
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ; return fall CaMeL Through ;
rank: 146
score: 99.60823880709134
patch: Node fall CaMeL Through = fall CaMeL Through : try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 146
score: 99.60221073545259
patch: List < Di CaMeL Graph CaMeL Edge < Node . Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 146
score: 99.598671875
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 146
score: 99.59110201322116
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; break ;
rank: 146
score: 99.52344859730114
patch: Node fall CaMeL Through = compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 146
score: 99.50061565896739
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; else
rank: 147
score: 99.62814127604166
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Next ( ) ) ;
rank: 147
score: 99.60202026367188
patch: Node next = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 147
score: 99.5981216430664
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Parent ( ) ) ) ;
rank: 147
score: 99.59105428059895
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else
rank: 147
score: 99.57470703125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) ) ;
rank: 147
score: 99.49990012428977
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through =
rank: 148
score: 99.6280029296875
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ; }
rank: 148
score: 99.626220703125
patch: g CaMeL Node = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 148
score: 99.60791829427083
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 148
score: 99.60182291666666
patch: Node try { return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 148
score: 99.59788411458334
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) ) ;
rank: 148
score: 99.5909765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; { break ;
rank: 148
score: 99.52155867866848
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Root ( ) ) ;
rank: 149
score: 99.60767415364583
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) . get CaMeL Value ( ) ;
rank: 149
score: 99.59744827835648
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 149
score: 99.59075458233173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , g CaMeL Node ) ) ;
rank: 149
score: 99.57350376674107
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 149
score: 99.545244140625
patch: / * * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 149
score: 99.49808933423913
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching compute ( compute CaMeL Following ( n ) ) ;
rank: 150
score: 99.62778727213542
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , 0 ) ;
rank: 150
score: 99.62530517578125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL First ( ) ) ) ;
rank: 150
score: 99.6073885830966
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges [ 0 ] ) ;
rank: 150
score: 99.60166829427084
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( node ) ) ;
rank: 150
score: 99.59740306712963
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 150
score: 99.59050882273706
patch: break ; } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 150
score: 99.5734332540761
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ;
rank: 150
score: 99.54464017427884
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , parent ) ) ;
rank: 150
score: 99.52116255326705
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( exp ) ) ;
rank: 151
score: 99.62763323102679
patch: if ( out CaMeL Edges . size ( ) == 1 ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; }
rank: 151
score: 99.6251449584961
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) == Branch . FUNCTION ) ;
rank: 151
score: 99.60143171037946
patch: Node Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 151
score: 99.59690504807692
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 151
score: 99.544189453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , {
rank: 151
score: 99.5198974609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent , compute CaMeL Following ( n ) ) ;
rank: 151
score: 99.49702592329545
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL CFG ( n ) ) ;
rank: 152
score: 99.62496185302734
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node . get CaMeL Value ( ) ) ;
rank: 152
score: 99.60647786458334
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) . get CaMeL Value ( ) ;
rank: 152
score: 99.59658351089016
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false ) ) ;
rank: 152
score: 99.59023100754311
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) . get CaMeL Value ( ) ) ;
rank: 152
score: 99.54409555288461
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . null ( ) ) ) ;
rank: 152
score: 99.49693806966145
patch: try { Node compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 153
score: 99.62744140625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 153
score: 99.6249482125947
patch: out CaMeL Edges . add ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 153
score: 99.60113166360294
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) == fall CaMeL Through ) ;
rank: 153
score: 99.59014892578125
patch: Node next = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 153
score: 99.57321506076389
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 153
score: 99.51980251736111
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching $NUMBER$ ( n ) ;
rank: 154
score: 99.62727864583333
patch: Node < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 154
score: 99.62491607666016
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) == Branch . UNCOND )
rank: 154
score: 99.60574001736111
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : out CaMeL Edges . get ( 0 ) ;
rank: 154
score: 99.60095635775862
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null ) ;
rank: 154
score: 99.59596206202652
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Parent ( ) ) ;
rank: 154
score: 99.57308846932871
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( nodes . get ( 0 ) ) ) ;
rank: 154
score: 99.54391479492188
patch: Node fall CaMeL Through ; if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 154
score: 99.51925498560855
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , node ) ;
rank: 154
score: 99.49635145399306
patch: try Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 155
score: 99.62696996228448
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 155
score: 99.62489055765086
patch: out CaMeL Edges . get ( 0 ) . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 155
score: 99.60498046875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Node ( ) ) ;
rank: 155
score: 99.58932495117188
patch: Node try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 155
score: 99.57142857142857
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Input ( ) ) ;
rank: 155
score: 99.54368239182692
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( node ) ) ) ;
rank: 155
score: 99.51883544921876
patch: Node fall CaMeL Through = compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ;
rank: 155
score: 99.496337890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , this ) ;
rank: 156
score: 99.60476158405173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) ) ;
rank: 156
score: 99.60021602746212
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ; }
rank: 156
score: 99.59503173828125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 156
score: 99.54318472055289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , false ) ) ;
rank: 156
score: 99.49603881835938
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ;
rank: 157
score: 99.62676323784723
patch: Node < Node < Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 157
score: 99.62437115293561
patch: Node < Node > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 157
score: 99.60466657366071
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , n ) ;
rank: 157
score: 99.6001205444336
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 157
score: 99.58781215122768
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . size ( ) ) ;
rank: 157
score: 99.54281850961539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( ) ) ) ;
rank: 157
score: 99.51725630326705
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( next ) ) ;
rank: 158
score: 99.62676130022321
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 158
score: 99.6240752249053
patch: out CaMeL Edges . get ( 0 ) . add ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 158
score: 99.6046651204427
patch: Object fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 158
score: 99.59480531754032
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 158
score: 99.57048929148706
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 158
score: 99.54220581054688
patch: ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 158
score: 99.51699431046195
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get ( ) ) ;
rank: 159
score: 99.62605794270833
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ( 0 ) . get CaMeL Value ( ) ;
rank: 159
score: 99.6041259765625
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 159
score: 99.59468078613281
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Parent ( ) ) ;
rank: 159
score: 99.57041196469908
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( 1 ) ) ) ;
rank: 159
score: 99.54123263888889
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 159
score: 99.51676078464673
patch: final int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 159
score: 99.49574788411458
patch: Node try . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 160
score: 99.60279259314903
patch: Node fall CaMeL Through = ( Node ) g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 160
score: 99.59966830549568
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION )
rank: 160
score: 99.594189453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) , true ) ) ;
rank: 160
score: 99.58733661358173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , out CaMeL Edges ) ) ;
rank: 160
score: 99.57032121930804
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Root ( ) ) ) ;
rank: 160
score: 99.54085286458333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , edge ) ) ;
rank: 160
score: 99.49560546875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get ( n ) ) ;
rank: 161
score: 99.625302734375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == Branch . UNCOND ) ;
rank: 161
score: 99.59961751302083
patch: org . < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 161
score: 99.59408365885416
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) ) ;
rank: 161
score: 99.58675443209134
patch: try { return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 161
score: 99.540771484375
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , node ) ) ;
rank: 161
score: 99.49517822265625
patch: try { double fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 162
score: 99.60236065204327
patch: Node fall CaMeL Through = compute CaMeL Following ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 162
score: 99.59361165364584
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get CaMeL Parent ( ) ) ;
rank: 162
score: 99.58647629310344
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 162
score: 99.57015254579741
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Entry ( 0 ) ) ;
rank: 162
score: 99.5402080829327
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this ) ;
rank: 163
score: 99.62486572265625
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 0 ) ;
rank: 163
score: 99.60160006009616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute ( n ) ) ;
rank: 163
score: 99.59340122767857
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 164
score: 99.60142299107143
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 164
score: 99.59799985532408
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 164
score: 99.59319196428571
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . to CaMeL String ( ) ) ;
rank: 164
score: 99.58615638469827
patch: } } Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 164
score: 99.51423783735795
patch: Collection fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 164
score: 99.49403889973958
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get CaMeL Node ( n ) ) ;
rank: 165
score: 99.62437702047414
patch: if ( n . get CaMeL Next ( ) == fall CaMeL Through ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 165
score: 99.60068766276042
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 165
score: 99.59777462121212
patch: Node < Node >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 165
score: 99.58609745420259
patch: for ( Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 165
score: 99.56975188078704
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get ( n ) ;
rank: 166
score: 99.6242254849138
patch: List < List < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 166
score: 99.60061645507812
patch: Node fall CaMeL Through = ( Node ) out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 166
score: 99.59760598575367
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n . get CaMeL Next ( ) ) ) ;
rank: 166
score: 99.59269575639205
patch: try { Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 166
score: 99.58570177801724
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; return out CaMeL Edges ;
rank: 166
score: 99.53758826622597
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , node ) ;
rank: 166
score: 99.5132168856534
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( true ) ) ;
rank: 166
score: 99.49376424153645
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . compute CaMeL Following ( n ) ) ;
rank: 167
score: 99.60012381417411
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) . size ( ) ;
rank: 167
score: 99.59751313308189
patch: Node < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 167
score: 99.59097403067129
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true ) ;
rank: 167
score: 99.58545826099537
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ;
rank: 167
score: 99.56932654747597
patch: / Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 167
score: 99.49331266983695
patch: fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 168
score: 99.62373408564815
patch: Preconditions . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 168
score: 99.59749348958333
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , cur CaMeL Cfg ) ;
rank: 168
score: 99.59095001220703
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Last ( ) ) ) ;
rank: 168
score: 99.58537074497768
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 168
score: 99.56895709859914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First ( ) ) ) ;
rank: 168
score: 99.512548828125
patch: List < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 168
score: 99.49282997532895
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 169
score: 99.62130737304688
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 169
score: 99.59935681573276
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 1 ) . get CaMeL Destination ( ) ;
rank: 169
score: 99.597412109375
patch: public Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 169
score: 99.59076690673828
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 169
score: 99.5852734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 169
score: 99.56892903645833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) , ;
rank: 169
score: 99.53737160011575
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( this ) ) ) ;
rank: 169
score: 99.49224853515625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else {
rank: 170
score: 99.62342325846355
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 170
score: 99.62077331542969
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , cur CaMeL Cfg . get CaMeL Value ( ) ) ;
rank: 170
score: 99.59930013020833
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 170
score: 99.5972541360294
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 170
score: 99.59072875976562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 170
score: 99.5852471713362
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 170
score: 99.53717400045956
patch: Node fall CaMeL Through = new Node ( compute CaMeL Following ( n ) ) ;
rank: 170
score: 99.51228841145833
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( element ) ) ;
rank: 170
score: 99.49077814275569
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . compute ( n ) ) ;
rank: 171
score: 99.62309337797619
patch: Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 171
score: 99.62051286368535
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else {
rank: 171
score: 99.58475167410714
patch: fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 171
score: 99.49006453804348
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try return fall CaMeL Through ;
rank: 172
score: 99.6229938009511
patch: Node < Node < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 172
score: 99.59678994455645
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null
rank: 172
score: 99.56810546875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if ( ;
rank: 172
score: 99.53615993923611
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 172
score: 99.4882100423177
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 173
score: 99.62283890335648
patch: List < Di CaMeL Graph CaMeL Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 173
score: 99.59889322916666
patch: Node fall CaMeL Through = fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 173
score: 99.58397533275463
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through +
rank: 173
score: 99.5671807650862
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get ( 0 ) ) ;
rank: 173
score: 99.535400390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , $STRING$ ) ;
rank: 174
score: 99.59637661637932
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 174
score: 99.58962777944711
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 174
score: 99.58375040690105
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; / /
rank: 174
score: 99.56711341594827
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , n ) ;
rank: 174
score: 99.51113493546195
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) Node ) ;
rank: 174
score: 99.48736572265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , $NUMBER$ ) ) ;
rank: 175
score: 99.619873046875
patch: List < Di CaMeL Graph CaMeL Edge < Node != Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 175
score: 99.59880960398706
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ,
rank: 175
score: 99.5894305889423
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) ) ;
rank: 175
score: 99.53488393930289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( fall CaMeL Through != null ) {
rank: 175
score: 99.50980631510417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , $NUMBER$ ) ;
rank: 176
score: 99.62218366350446
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 176
score: 99.619873046875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Value ( ) ) ;
rank: 176
score: 99.58934733072917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Last ( ) ) ) ;
rank: 176
score: 99.582900390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally {
rank: 176
score: 99.56664167131696
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 176
score: 99.534619140625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , ) ) ;
rank: 176
score: 99.50963774181548
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ;
rank: 176
score: 99.4868694802989
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ) ) ;
rank: 177
score: 99.62217975484914
patch: List < Di CaMeL Graph CaMeL Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 177
score: 99.61971309267241
patch: out CaMeL Edges . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 177
score: 99.59825397359914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 177
score: 99.59575544084821
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , null ) ;
rank: 177
score: 99.58249337332589
patch: Node next = n . get CaMeL First CaMeL Child ( ) ;
rank: 177
score: 99.56638881138393
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value n ) ) ;
rank: 177
score: 99.534541015625
patch: Node fall CaMeL Through = ( ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 177
score: 99.50907389322917
patch: if ( fall CaMeL Through == null ) fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 178
score: 99.6194598858173
patch: out CaMeL Edges . get ( 0 ) . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 178
score: 99.59813639322917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 178
score: 99.580244140625
patch: List < Token >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 178
score: 99.566162109375
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 178
score: 99.5089823404948
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , exp ) ;
rank: 179
score: 99.61921909877232
patch: final Di CaMeL Graph CaMeL Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 179
score: 99.59651973329741
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Out CaMeL Edges ( ) ;
rank: 179
score: 99.5953369140625
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION
rank: 179
score: 99.58865489130434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Next ( ) ;
rank: 179
score: 99.48573996803977
patch: float fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 180
score: 99.62070100203805
patch: Node < Token , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 180
score: 99.59486126077586
patch: org . Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 180
score: 99.56575230189732
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Value ( ) ) ) ;
rank: 180
score: 99.5086669921875
patch: this . Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 180
score: 99.4840671705163
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) .
rank: 181
score: 99.620302734375
patch: Node < Node > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 181
score: 99.59463614004629
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 181
score: 99.58857865767045
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ) ;
rank: 181
score: 99.57980213994566
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . size ( ) ) ;
rank: 181
score: 99.56573016826923
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , true ) ;
rank: 181
score: 99.50841175426136
patch: V fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 182
score: 99.62007472826087
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 182
score: 99.59575737847223
patch: Node fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 182
score: 99.59452550551471
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , out CaMeL Edges . get ( 0 ) ) ;
rank: 182
score: 99.58799743652344
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 182
score: 99.57956368582589
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( out CaMeL Edges . get ( 0 ) ) ;
rank: 182
score: 99.53414212740384
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , compute CaMeL Following ( n ) ) ;
rank: 182
score: 99.48271251860119
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) .
rank: 183
score: 99.61974676724138
patch: Node < Di CaMeL Graph CaMeL Edge < Branch , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 183
score: 99.59567495492789
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 183
score: 99.58790637600806
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 183
score: 99.56548861799568
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ) ;
rank: 183
score: 99.48215203536184
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 184
score: 99.61784362792969
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 184
score: 99.59513346354167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) . get CaMeL Out CaMeL Edges ( ) ;
rank: 184
score: 99.5939423532197
patch: synchronized ( out CaMeL Edges ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 184
score: 99.58783549647177
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 184
score: 99.56537543402777
patch: / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 184
score: 99.5335184733073
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , children ) ;
rank: 184
score: 99.50779030539773
patch: Set fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 185
score: 99.61801252693965
patch: Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 185
score: 99.61780178931451
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 185
score: 99.57862200055804
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; else return fall CaMeL Through ;
rank: 185
score: 99.56534476902173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . ) ) ;
rank: 185
score: 99.5325215657552
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get ( n ) ) ;
rank: 185
score: 99.50741577148438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( element , n ) ) ;
rank: 185
score: 99.481689453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n n ) ) ;
rank: 186
score: 99.59326171875
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 186
score: 99.59316069504311
patch: try { Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 186
score: 99.58756197415866
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , false ) ;
rank: 186
score: 99.56470630787037
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Name ( ) ) ;
rank: 186
score: 99.53196433738425
patch: Node fall CaMeL Through = { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 186
score: 99.50721324573864
patch: Vector fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 186
score: 99.48128609035327
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . }
rank: 187
score: 99.61727413054436
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 187
score: 99.59295654296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , this ) ;
rank: 187
score: 99.59242314877717
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , out CaMeL Edges ) ;
rank: 187
score: 99.5875244140625
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 187
score: 99.56403914741848
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ) ;
rank: 187
score: 99.50716145833333
patch: if ( fall CaMeL Through ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 187
score: 99.48033231847427
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 0 ) ;
rank: 188
score: 99.61725484913794
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 188
score: 99.61684233566811
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 188
score: 99.58748109879032
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ) ;
rank: 188
score: 99.57720656622024
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch ( n ) ) ;
rank: 188
score: 99.56361897786458
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 188
score: 99.5064364346591
patch: Instruction fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 188
score: 99.47963018002717
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; n
rank: 189
score: 99.61662946428571
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Destination ( ) ;
rank: 189
score: 99.59264373779297
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 189
score: 99.59105573381696
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( ) . get CaMeL Value ( ) ;
rank: 189
score: 99.57700020926339
patch: Node fall CaMeL Through ; try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 190
score: 99.59264026988636
patch: Node < Node >> fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 190
score: 99.58985436480978
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 190
score: 99.5865478515625
patch: return null ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 190
score: 99.57697405133929
patch: out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 190
score: 99.56337193080357
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) , n ) ;
rank: 190
score: 99.5050936612216
patch: Result fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 191
score: 99.61695911038306
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 191
score: 99.6142999057112
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Integer > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 191
score: 99.58966064453125
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 191
score: 99.58620383522727
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 191
score: 99.56329977101294
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , ) ;
rank: 191
score: 99.50464928668478
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( ) ) ;
rank: 191
score: 99.47858629728618
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) ;
rank: 192
score: 99.59190784801136
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Destination ( ) ) ; }
rank: 192
score: 99.58619005926724
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 192
score: 99.57565307617188
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 192
score: 99.50409490411931
patch: Nodes fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 193
score: 99.61349171605603
patch: Node < Node , Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 193
score: 99.59159633091518
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 193
score: 99.58932729867789
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , node ) ;
rank: 193
score: 99.56233433314732
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Superclass ( ) ) ;
rank: 193
score: 99.50320434570312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) , n ) ;
rank: 193
score: 99.47651599702381
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through ;
rank: 194
score: 99.61557006835938
patch: out CaMeL Edges . get ( 0 ) . add ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 194
score: 99.58860560825893
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( out CaMeL Edges . get ( 0 ) ) ;
rank: 194
score: 99.52979454627403
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ) ;
rank: 195
score: 99.6127508755388
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; switch ( out CaMeL Edges . size ( ) ) {
rank: 195
score: 99.59145035282258
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 195
score: 99.58773067079741
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL Out CaMeL Edges ( ) , n ) ;
rank: 195
score: 99.58478913483796
patch: try { List < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 195
score: 99.561767578125
patch: if ( fall CaMeL Through ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 195
score: 99.529736328125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n [ 0 ] ) ) ;
rank: 196
score: 99.59142645474138
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) {
rank: 196
score: 99.58649151141827
patch: Node fall CaMeL Through = n . get CaMeL First ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 196
score: 99.58453184185606
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Last ( ) . get CaMeL Value ( ) ) ;
rank: 196
score: 99.573388671875
patch: List < String >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 196
score: 99.56173001802884
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 196
score: 99.5026143391927
patch: Node fall CaMeL Through ; try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 196
score: 99.47513253348214
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true ) ;
rank: 197
score: 99.61402893066406
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) , n . get CaMeL Next ( ) ) ;
rank: 197
score: 99.5912198153409
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) ;
rank: 197
score: 99.58641736260776
patch: Object fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 1 ) . get CaMeL Value ( ) ;
rank: 197
score: 99.5732421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , out CaMeL Edges ) ;
rank: 197
score: 99.52942833533653
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally {
rank: 197
score: 99.47450949928977
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ;
rank: 198
score: 99.61180736400463
patch: Node < Node , Branch > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 198
score: 99.59117542613636
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null ) ;
rank: 198
score: 99.57308523995536
patch: } } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 198
score: 99.56071333451705
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ;
rank: 198
score: 99.50242309570312
patch: Iterator < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 198
score: 99.47447620738636
patch: Integer fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 199
score: 99.611572265625
patch: if ( out CaMeL Edges . size ( ) == 1 && n . has CaMeL Children ( ) ) { break ;
rank: 199
score: 99.59072413589016
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( out CaMeL Edges . get ( 0 ) ) ) ;
rank: 199
score: 99.52840169270833
patch: Node fall CaMeL Through = ( Node ) ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 199
score: 99.47446076766305
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n + ) ) ;
rank: 200
score: 99.59044147359914
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return n ;
rank: 200
score: 99.58388846261161
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) , true ) ;
rank: 200
score: 99.5599698153409
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get ( 0 ) ;
rank: 200
score: 99.52829996744792
patch: Node fall CaMeL Through = node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 200
score: 99.47362603081598
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try
rank: 201
score: 99.61299773185483
patch: List < Di CaMeL Graph CaMeL Edge < Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 201
score: 99.6106593919837
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; return fall CaMeL Through ;
rank: 201
score: 99.58977716619319
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 201
score: 99.58360799153645
patch: Node < Node < Node < Node >> fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 201
score: 99.55979567307692
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ) ;
rank: 201
score: 99.52820763221153
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , true ) ) ;
rank: 201
score: 99.50155639648438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , exp ) ) ;
rank: 201
score: 99.4731778231534
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . Factory ( n ) ) ;
rank: 202
score: 99.61295572916667
patch: Node ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 202
score: 99.60986328125
patch: Preconditions . return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 202
score: 99.58954264322917
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 202
score: 99.58359847530242
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 202
score: 99.57224818638393
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through + }
rank: 202
score: 99.55930873325893
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Result ( ) ;
rank: 202
score: 99.5014139811198
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( this ) ) ;
rank: 202
score: 99.47266734730114
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Value ( n ) ) ;
rank: 203
score: 99.61194299768519
patch: List < Di CaMeL Graph CaMeL Edge < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 203
score: 99.60832868303571
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 203
score: 99.58918980189732
patch: Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 203
score: 99.58343098958333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Last ( ) ) ;
rank: 203
score: 99.58298903245192
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 203
score: 99.57220458984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch ( out CaMeL Edges . get ( 0 ) ) ) ;
rank: 203
score: 99.55893049568965
patch: Node fall CaMeL Through = null ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 203
score: 99.52786959134616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , false ) ;
rank: 203
score: 99.50106811523438
patch: Node fall CaMeL Through = n ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 203
score: 99.4718350497159
patch: Node compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 204
score: 99.61119384765625
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 204
score: 99.60764075969827
patch: Node < List < Di CaMeL Graph CaMeL Edge , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 204
score: 99.58329133064517
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ) ;
rank: 204
score: 99.58290678879311
patch: Node fall CaMeL Through = ( Node ) n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 204
score: 99.57140003551136
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n ) ;
rank: 204
score: 99.55866951778017
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; compute CaMeL Following ( n ) ;
rank: 204
score: 99.50067693536931
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Node ( n ) ) ;
rank: 205
score: 99.58915858114919
patch: try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 205
score: 99.57139756944444
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through /
rank: 205
score: 99.55855887276786
patch: Node fall CaMeL Through = this . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 205
score: 99.52723760190217
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ,
rank: 205
score: 99.50016276041667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( node ) ) ;
rank: 206
score: 99.61099243164062
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 206
score: 99.60679408482143
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return n ;
rank: 206
score: 99.58270670572917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) , false ) ) ;
rank: 206
score: 99.57117571149554
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return out CaMeL Edges ; }
rank: 206
score: 99.55853271484375
patch: fall CaMeL Through = false ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 206
score: 99.47053328804348
patch: / void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 207
score: 99.60649956597223
patch: return new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 207
score: 99.58855646306819
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . RETURN ) {
rank: 207
score: 99.58203864820075
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true ) ) ;
rank: 207
score: 99.5711669921875
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 207
score: 99.5583984375
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 207
score: 99.4996337890625
patch: try { Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 207
score: 99.4695461107337
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching 1 ( compute CaMeL Following ( n ) ) ;
rank: 208
score: 99.58847225413604
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null ) ) ;
rank: 208
score: 99.58205650592673
patch: Node [ ] out CaMeL Edges = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 208
score: 99.58181966145834
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( System . current CaMeL Time CaMeL Millis ( ) ) ;
rank: 208
score: 99.55704171316964
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Result ( ) ) ) ;
rank: 208
score: 99.526533203125
patch: try { final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 208
score: 99.46927315848214
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , fall CaMeL Through ) ;
rank: 209
score: 99.61054057459677
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 209
score: 99.60565396012932
patch: List < Di CaMeL Graph CaMeL Edge < Node , Integer > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 209
score: 99.58836206896552
patch: Collection < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 209
score: 99.58180394665948
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 209
score: 99.55702788254311
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n , n ) ) ) ;
rank: 209
score: 99.5263671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following , n ) ;
rank: 209
score: 99.46875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false ) ;
rank: 210
score: 99.60538155691964
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get ( 0 ) ;
rank: 210
score: 99.58821614583333
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 210
score: 99.58194706357759
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 210
score: 99.57085309709821
patch: if ( n . has CaMeL Children ( ) ) return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 210
score: 99.55673323006465
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Last CaMeL Child ( ) ) ;
rank: 210
score: 99.52633666992188
patch: Node fall CaMeL Through = Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 211
score: 99.60974573206019
patch: List < Di CaMeL Graph CaMeL Edge . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 211
score: 99.60490813078704
patch: if ( out CaMeL Edges . size ( ) == 0 ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 211
score: 99.58776461693549
patch: Linked CaMeL List < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 211
score: 99.58189174107143
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 211
score: 99.58153483072917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) , false ) ;
rank: 211
score: 99.57080950055804
patch: } Di CaMeL Graph CaMeL Node < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 211
score: 99.55658513849431
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( nodes ) ) ;
rank: 211
score: 99.4673739346591
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 212
score: 99.60942225302419
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 212
score: 99.58775227864584
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ; }
rank: 212
score: 99.58143199573864
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First CaMeL Child ( ) . get CaMeL Parent ( ) ) ;
rank: 212
score: 99.57068359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , ) ;
rank: 212
score: 99.52570710358796
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 213
score: 99.60471888950893
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ) ;
rank: 213
score: 99.58175893930289
patch: Node fall CaMeL Through : fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 213
score: 99.581044921875
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 213
score: 99.49771921258224
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , parent ) ;
rank: 213
score: 99.46652088994566
patch: ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 214
score: 99.60455322265625
patch: return ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 214
score: 99.58755696614584
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , g CaMeL Node ) ;
rank: 214
score: 99.5816062644676
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Destination ( ) , n ) ;
rank: 214
score: 99.58092151988636
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 214
score: 99.57046944754464
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( $STRING$ ) ;
rank: 214
score: 99.55609130859375
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 214
score: 99.52541879507211
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent , true ) ;
rank: 214
score: 99.4664639559659
patch: compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 215
score: 99.58730973868535
patch: Hashtable < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 215
score: 99.58135375976562
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 215
score: 99.58055798760776
patch: Node < Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 215
score: 99.49661254882812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , element ) ;
rank: 215
score: 99.46623091264205
patch: Jump fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 216
score: 99.5872290826613
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND ) {
rank: 216
score: 99.581025390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . to CaMeL Array ( ) ) ;
rank: 216
score: 99.580556640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) [ 0 ] ) ;
rank: 216
score: 99.52508075420673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following , compute CaMeL Following ( n ) ) ;
rank: 216
score: 99.49656168619792
patch: if ( fall CaMeL Through != null ) fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 216
score: 99.46586470170455
patch: Branching fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 217
score: 99.60300208782327
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 217
score: 99.58661099137932
patch: Node ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 217
score: 99.58024649784483
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . compute CaMeL Following ( n ) ) ;
rank: 217
score: 99.55589076450893
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 217
score: 99.52479619565217
patch: Node fall CaMeL Through = return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 217
score: 99.49619362571023
patch: Point fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 217
score: 99.46486302425987
patch: try { int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 218
score: 99.60856681034483
patch: List < Di CaMeL Graph CaMeL Edge < Node , ? > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 218
score: 99.58069299768519
patch: Node fall CaMeL Through = fall CaMeL Through . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 218
score: 99.55586460658482
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) , ) ;
rank: 218
score: 99.52464881310097
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent , false ) ;
rank: 218
score: 99.49612765842014
patch: this . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 218
score: 99.46473760190217
patch: try { try { try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 219
score: 99.60827184606481
patch: out CaMeL Edges . get ( 0 ) . return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 219
score: 99.58633858816964
patch: } else return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 219
score: 99.58064488002232
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 219
score: 99.580166015625
patch: Set < String > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 219
score: 99.56940569196429
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node , fall CaMeL Through ) ;
rank: 219
score: 99.55582972935268
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , fall CaMeL Through ) ;
rank: 219
score: 99.49612559442934
patch: Node fall CaMeL Through ; try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 219
score: 99.46330122514205
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) ) ;
rank: 220
score: 99.60146262428977
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 220
score: 99.58625139508929
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , node ) ;
rank: 220
score: 99.58036665482955
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 220
score: 99.580068359375
patch: } try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 220
score: 99.55579876077586
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get CaMeL Parent ( ) ) ;
rank: 220
score: 99.52428668478261
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL State ( ) ) ;
rank: 221
score: 99.60806477864584
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . FUNCTION ) ;
rank: 221
score: 99.60080482219827
patch: List < Di CaMeL Graph CaMeL Edge < Node , Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 221
score: 99.58558654785156
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ; }
rank: 221
score: 99.58
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 221
score: 99.57997131347656
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; ;
rank: 221
score: 99.56886800130208
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) { break ;
rank: 222
score: 99.60797119140625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ; }
rank: 222
score: 99.57991027832031
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) ;
rank: 222
score: 99.56879131610577
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; { break ; }
rank: 222
score: 99.55553327287946
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ;
rank: 222
score: 99.46247664741848
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ;
rank: 223
score: 99.60759866648706
patch: List < Di CaMeL Graph CaMeL Edge < Node < Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 223
score: 99.598720703125
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( ) . get CaMeL Value ( ) ;
rank: 223
score: 99.58480398995536
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ; }
rank: 223
score: 99.57971561316288
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 223
score: 99.57892477101294
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 223
score: 99.56834998497597
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( )
rank: 223
score: 99.55540308459052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) , n ) ;
rank: 223
score: 99.523681640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) .
rank: 223
score: 99.49496459960938
patch: / else Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 223
score: 99.46242357336956
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . compute CaMeL Following ( n ) ) ;
rank: 224
score: 99.60753131734914
patch: g CaMeL Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 224
score: 99.5794677734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , true ) ;
rank: 224
score: 99.55514090401786
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get ( 0 ) ) ;
rank: 224
score: 99.49409623579545
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( null ) ) ;
rank: 225
score: 99.60738820043103
patch: Iterator < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 225
score: 99.58473115808823
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) . get CaMeL Destination ( ) ) ;
rank: 225
score: 99.57780852141204
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL First CaMeL Child ( ) ) ;
rank: 225
score: 99.56764573317308
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ) ;
rank: 225
score: 99.55363516971983
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( n ) ) ;
rank: 225
score: 99.52308146158855
patch: for ( Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 225
score: 99.49347330729167
patch: try { Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 226
score: 99.60724508351294
patch: List < Di CaMeL Graph CaMeL Edge < ? , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 226
score: 99.598427734375
patch: Node < Node < Node < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 226
score: 99.57877604166667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , this ) ;
rank: 226
score: 99.57753569504311
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node , n ) ;
rank: 226
score: 99.56731047453704
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) ) ;
rank: 226
score: 99.52292209201389
patch: Node fall CaMeL Through = ( Node [ ] ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 226
score: 99.4617336107337
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , compute CaMeL Following ( n ) ) ;
rank: 227
score: 99.60721711189517
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 227
score: 99.59803989955357
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 227
score: 99.58338583669355
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ;
rank: 227
score: 99.566962890625
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; if ( next == null ) {
rank: 227
score: 99.49165852864583
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( parent ) ) ;
rank: 228
score: 99.57862955729166
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ; break ;
rank: 228
score: 99.55313546316964
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Node ( ) ) ) ;
rank: 228
score: 99.49157184103261
patch: { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 228
score: 99.46132525275735
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( null ) ;
rank: 229
score: 99.60674641927083
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } } else {
rank: 229
score: 99.5827118844697
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n . get CaMeL Next ( ) == null
rank: 229
score: 99.57847493489584
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) , false ) ;
rank: 229
score: 99.56685836226852
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 229
score: 99.5530206088362
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 229
score: 99.46131963315217
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , fall CaMeL Through ) ;
rank: 230
score: 99.60674176897321
patch: out CaMeL Edges . add ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 230
score: 99.59719322467673
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ;
rank: 230
score: 99.58192767518939
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ;
rank: 230
score: 99.57845365084134
patch: Node fall CaMeL Through = fall CaMeL Through . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 230
score: 99.5217918113426
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( element ) ) ) ;
rank: 230
score: 99.46130901834239
patch: = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 231
score: 99.60655212402344
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 231
score: 99.5969707782452
patch: Node < Node >> out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 231
score: 99.581787109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 231
score: 99.5665995279948
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( out CaMeL Edges ) ) ;
rank: 231
score: 99.52159288194444
patch: if ( fall CaMeL Through ) fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 231
score: 99.46122602982955
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; = fall CaMeL Through ;
rank: 232
score: 99.60630219558189
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 232
score: 99.58172607421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 232
score: 99.57822265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) , false ) ;
rank: 232
score: 99.57673828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL Next ( ) ) ;
rank: 232
score: 99.55225719105114
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( end ) ) ;
rank: 232
score: 99.52155867866848
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false ) ;
rank: 232
score: 99.46068274456522
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return
rank: 233
score: 99.58171844482422
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == Branch . UNCOND ) ;
rank: 233
score: 99.5779296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , 0 ) ;
rank: 233
score: 99.55224609375
patch: fall CaMeL Through = false ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 233
score: 99.52117919921875
patch: Node fall CaMeL Through = null ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 233
score: 99.4901058799342
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 233
score: 99.46030495383523
patch: AST fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 234
score: 99.60594075520834
patch: Node < Node > g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 234
score: 99.596640625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) ) ; return fall CaMeL Through ;
rank: 234
score: 99.58166133996212
patch: Node g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 234
score: 99.57747105189732
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ;
rank: 234
score: 99.55159818209134
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get ( ) ;
rank: 235
score: 99.60584677419355
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 235
score: 99.57578531901042
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 235
score: 99.56519458912037
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; case Token . RETURN :
rank: 235
score: 99.55117361886161
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 235
score: 99.52103365384616
patch: try { try . Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 235
score: 99.48972681949013
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current , n ) ;
rank: 235
score: 99.4599609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Math . next ( n ) ) ;
rank: 236
score: 99.60554750504032
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 236
score: 99.59656213831019
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 236
score: 99.57645961216518
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false ) ) ;
rank: 236
score: 99.57575593171296
patch: Map < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 236
score: 99.56491088867188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( $NUMBER$ ) ) ;
rank: 236
score: 99.55116489955357
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Reference ( ) ) ;
rank: 236
score: 99.48961292613636
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( list ) ) ;
rank: 237
score: 99.59635977909483
patch: Node < Node < Di CaMeL Graph CaMeL Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 237
score: 99.58066693474265
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) ) ) ;
rank: 237
score: 99.57644653320312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) , fall CaMeL Through ) ;
rank: 237
score: 99.57572265625
patch: Node fall CaMeL Through = fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 237
score: 99.48938519021739
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Type ( ) ) ;
rank: 238
score: 99.60458170572916
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL First ( ) ) ;
rank: 238
score: 99.58049982244319
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 238
score: 99.57570393880208
patch: Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 238
score: 99.56413130326705
patch: Branch fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 238
score: 99.5506004050926
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 238
score: 99.52064005533855
patch: finally { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 238
score: 99.48931594122024
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n , n ) ;
rank: 238
score: 99.45736083984374
patch: Node try . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 239
score: 99.6038106282552
patch: out CaMeL Edges . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 239
score: 99.59613909040179
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node , null ) ;
rank: 239
score: 99.58033068426724
patch: Set < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 239
score: 99.57623922413794
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) . get CaMeL Parent ( ) ) ;
rank: 239
score: 99.57562466325432
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; break ;
rank: 239
score: 99.56406075613839
patch: out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 239
score: 99.55018833705357
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get ( 0 ) ) ;
rank: 239
score: 99.520625
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 239
score: 99.4889605978261
patch: Node fall CaMeL Through ++ = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 239
score: 99.45706612723214
patch: try { n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 240
score: 99.59539325420673
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Type ( ) ;
rank: 240
score: 99.57977701822917
patch: T fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 240
score: 99.57606858473558
patch: Node < ) ? > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 240
score: 99.57520640980114
patch: Node fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 240
score: 99.56402033025569
patch: Edges fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 240
score: 99.55016217912946
patch: fall CaMeL Through = true ; } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 240
score: 99.52049842247597
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , true , false ) ) ;
rank: 240
score: 99.48853149414063
patch: Iterator < int > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 240
score: 99.45668247767857
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching = compute CaMeL Following ( n ) ;
rank: 241
score: 99.59536637931035
patch: return < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 241
score: 99.57970473345588
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 241
score: 99.57606243265086
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 241
score: 99.57492300180289
patch: Node fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 241
score: 99.56395612444196
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node , n ) ;
rank: 241
score: 99.54974365234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ; ;
rank: 241
score: 99.52045147235577
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching > compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 241
score: 99.48827514648437
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( ) ) ;
rank: 241
score: 99.45644743546195
patch: CaMeL Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 242
score: 99.60264235276442
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 242
score: 99.5757723721591
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 242
score: 99.57486397879464
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . next ( ) ) ;
rank: 242
score: 99.56358924278847
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 242
score: 99.54961286272321
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , ;
rank: 242
score: 99.52037109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ; ;
rank: 242
score: 99.48814481847427
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 242
score: 99.45607688210227
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through ; }
rank: 243
score: 99.60257720947266
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 243
score: 99.59496228448276
patch: List < Di CaMeL Graph CaMeL Edge < Node , Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 243
score: 99.57933666087963
patch: else return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 243
score: 99.5740966796875
patch: Node fall CaMeL Through = node . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 243
score: 99.563330078125
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) { break ; }
rank: 243
score: 99.54949951171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( - 1 ) ) ;
rank: 243
score: 99.519990234375
patch: Node fall CaMeL Through = ( String ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 243
score: 99.48678588867188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( edge , n ) ) ;
rank: 244
score: 99.60232747395834
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 244
score: 99.5946844692888
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 244
score: 99.57534555288461
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Parent ( ) ) ;
rank: 244
score: 99.57398332868304
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ) ;
rank: 244
score: 99.56328735351562
patch: fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 244
score: 99.51990685096153
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ( n ) ) ;
rank: 244
score: 99.48655007102273
patch: Following fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 244
score: 99.45562189275569
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n ) ;
rank: 245
score: 99.60226966594827
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ; return fall CaMeL Through ;
rank: 245
score: 99.57881927490234
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , fall CaMeL Through ) ;
rank: 245
score: 99.57350667317708
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) ;
rank: 245
score: 99.54914460358796
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Parent ( ) ) ) ;
rank: 245
score: 99.48642985026042
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , next ) ) ;
rank: 245
score: 99.45485617897727
patch: Node should CaMeL Remove = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 246
score: 99.60225423177083
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 246
score: 99.59455217633929
patch: if ( out CaMeL Edges . size ( ) == 0 ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; }
rank: 246
score: 99.57881673177083
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return fall CaMeL Through ;
rank: 246
score: 99.56179809570312
patch: } else { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 246
score: 99.45482288707386
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( 0 ) ) ;
rank: 247
score: 99.60214029947916
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( $STRING$ ) ) ;
rank: 247
score: 99.59449084051724
patch: if ( n . has CaMeL Children ( ) ) { Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 247
score: 99.5787353515625
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 247
score: 99.57323540581598
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 247
score: 99.54878373579545
patch: Node < Node < Node >> fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 247
score: 99.51938100961539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , true , true ) ) ;
rank: 247
score: 99.45460815429688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try continue ;
rank: 248
score: 99.6017333984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( element ) ) ;
rank: 248
score: 99.59390153556035
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ) ;
rank: 248
score: 99.5786865234375
patch: return cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 248
score: 99.57307038483796
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 248
score: 99.561240234375
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) ;
rank: 248
score: 99.54842122395833
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ) ;
rank: 248
score: 99.48577270507812
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 248
score: 99.4540951377467
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 249
score: 99.6015396118164
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) ;
rank: 249
score: 99.59353201729911
patch: Node < Node , Branch >> out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 249
score: 99.57847764756944
patch: return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 249
score: 99.57423502604166
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) , true ) ;
rank: 249
score: 99.56096857244319
patch: if ( out CaMeL Edges . size ( ) == 1 && n . has CaMeL Children ( ) ) {
rank: 249
score: 99.54805210658482
patch: Node fall CaMeL Through = null ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 249
score: 99.51915564903847
patch: Node fall CaMeL Through = try ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 249
score: 99.45371791294643
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n .
rank: 250
score: 99.59316225405092
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ; }
rank: 250
score: 99.57823988970588
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Next ( ) == null ) ;
rank: 250
score: 99.57421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) . get CaMeL Parent ( ) ) ;
rank: 250
score: 99.5608622233073
patch: if ( out CaMeL Edges . size ( ) == 1 && out CaMeL Edges . size ( ) == 1 ) {
rank: 250
score: 99.5189960186298
patch: if ( fall CaMeL Through != null ) return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 250
score: 99.4855244954427
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , end ) ) ;
rank: 251
score: 99.60090855189732
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) == Branch . UNCOND ) ;
rank: 251
score: 99.593125
patch: Node < Di CaMeL Graph CaMeL Edge > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 251
score: 99.57819680606617
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n . has CaMeL Children ( ) ) ;
rank: 251
score: 99.56076388888889
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch ( n . get CaMeL First ( ) ) ) ;
rank: 251
score: 99.51885516826923
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 251
score: 99.45326538085938
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 252
score: 99.60074615478516
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; try {
rank: 252
score: 99.57805989583333
patch: Node try { remove = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 252
score: 99.574169921875
patch: break ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 252
score: 99.560302734375
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 252
score: 99.54773821149554
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( n ) ) ) ;
rank: 252
score: 99.45305841619319
patch: Status fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 253
score: 99.57801055908203
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , out CaMeL Edges ) ;
rank: 253
score: 99.57382664535984
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Node ( ) ) ;
rank: 253
score: 99.571708984375
patch: Node fall CaMeL Through = ( Node , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 253
score: 99.45270330255681
patch: try ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 254
score: 99.60013580322266
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 254
score: 99.57794386340726
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND ) {
rank: 254
score: 99.57374572753906
patch: Node fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 254
score: 99.57138852719908
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL First CaMeL Child ( ) ) ;
rank: 254
score: 99.5474102313702
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( 0 ) ) ) ;
rank: 254
score: 99.51810709635417
patch: fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 254
score: 99.4846524325284
patch: Thread fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 254
score: 99.45236045435855
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , null ) ;
rank: 255
score: 99.57352120535714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true ) ) ;
rank: 255
score: 99.57118803879311
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 255
score: 99.55988018329327
patch: List < Di CaMeL Graph CaMeL Edge 1 >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 255
score: 99.54726736886161
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 255
score: 99.51800827752976
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 255
score: 99.48456420898438
patch: Node fall CaMeL Through = new Node < Node > ( compute CaMeL Following ( n ) ) ;
rank: 256
score: 99.59151905980603
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ) ;
rank: 256
score: 99.57101124730603
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; out CaMeL Edges . add ( fall CaMeL Through ) ;
rank: 256
score: 99.55980573381696
patch: if ( out CaMeL Edges . size ( ) > 1 && n . get CaMeL Next ( ) . has CaMeL Children ( ) ) {
rank: 256
score: 99.54718889508929
patch: / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 256
score: 99.51732494212963
patch: else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 256
score: 99.45121433423913
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ; }
rank: 257
score: 99.57757753314394
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 257
score: 99.5730868252841
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 257
score: 99.57093547952586
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . remove ( 0 ) . get CaMeL Value ( ) ;
rank: 257
score: 99.559775390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . size ( ) , n ) ;
rank: 258
score: 99.590458984375
patch: Node < Node < Node , Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 258
score: 99.57752574573864
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . BREAK ) {
rank: 258
score: 99.57033372961956
patch: Node fall CaMeL Through = ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 258
score: 99.55974469866071
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 259
score: 99.59905242919922
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return fall CaMeL Through ;
rank: 259
score: 99.59033203125
patch: Node < Node > fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 259
score: 99.57745361328125
patch: Node try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 259
score: 99.57302024147727
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ) ;
rank: 259
score: 99.57009652944711
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Out CaMeL Edges ( ) ;
rank: 259
score: 99.5595070167824
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; } else {
rank: 259
score: 99.54674353966347
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) compute ( n ) ) ;
rank: 259
score: 99.45041822350544
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through = true ;
rank: 260
score: 99.59877592941811
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch >> g CaMeL Node = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 260
score: 99.58983357747395
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ;
rank: 260
score: 99.5771905307112
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } break ;
rank: 260
score: 99.54651817908653
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( n ) ) ) ) ;
rank: 260
score: 99.51637961647727
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( can CaMeL Remove ( n ) ) ;
rank: 260
score: 99.48408203125
patch: Node < ? > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 260
score: 99.44966457201087
patch: Node fall CaMeL Through = try try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 261
score: 99.589599609375
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 261
score: 99.57683967141544
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 261
score: 99.57294573102679
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , compute CaMeL Following ( n ) ) ;
rank: 261
score: 99.5462058738426
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Instance ( ) ) ;
rank: 261
score: 99.51634803185097
patch: if ( fall CaMeL Through == null ) { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 261
score: 99.483203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( int ) n ) ;
rank: 261
score: 99.44963272758152
patch: try void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 262
score: 99.57679748535156
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , cur CaMeL Cfg ) ;
rank: 262
score: 99.57286334859914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Node ( ) ) ;
rank: 262
score: 99.5590069110577
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( $STRING$ ) ;
rank: 262
score: 99.51591796875
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , fall CaMeL Through ) ) ;
rank: 262
score: 99.44953264508929
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 263
score: 99.59815357349537
patch: List < Di CaMeL Graph CaMeL Edge < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 263
score: 99.57666829427083
patch: Element fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 263
score: 99.5724868774414
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 263
score: 99.55900355747768
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } return fall CaMeL Through ;
rank: 263
score: 99.54611642020089
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 263
score: 99.51585896809895
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , $STRING$ ) ) ;
rank: 264
score: 99.5980224609375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . FUNCTION ) ;
rank: 264
score: 99.5761947631836
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , false ) ) ;
rank: 264
score: 99.57240513392857
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Node , n ) ) ;
rank: 264
score: 99.568701171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Value ( ) ) ;
rank: 264
score: 99.5589599609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) + 0 ) ;
rank: 264
score: 99.54597077546296
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First ) ) ;
rank: 264
score: 99.51577360733695
patch: fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 264
score: 99.48240152994792
patch: Node fall CaMeL Through : try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 264
score: 99.44916326349431
patch: Word fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 265
score: 99.59789225260417
patch: long fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 265
score: 99.5760726928711
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null ;
rank: 265
score: 99.57193656589673
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 265
score: 99.56859334309895
patch: Node fall CaMeL Through = ( Node ) out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 265
score: 99.558837890625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 265
score: 99.54594282670455
patch: fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 265
score: 99.51541137695312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , info ) ;
rank: 265
score: 99.48218834918478
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . to CaMeL String ( ) ) ;
rank: 265
score: 99.44898570667614
patch: Child fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 266
score: 99.54593912760417
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally {
rank: 266
score: 99.51532660590277
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ( Node ) n ) ) ;
rank: 266
score: 99.44826049804688
patch: try { Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 267
score: 99.59694260817308
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 267
score: 99.5887784090909
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 267
score: 99.56817157451923
patch: Node fall CaMeL Through = n . get CaMeL Parent ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 267
score: 99.55864606584821
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through , this ) ;
rank: 267
score: 99.515283203125
patch: Node fall CaMeL Through = ( Node ) compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 267
score: 99.48121226917614
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( false ) ) ;
rank: 267
score: 99.4477871981534
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . resolve ( n ) ) ;
rank: 268
score: 99.5969002016129
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . FUNCTION ) ;
rank: 268
score: 99.57001953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) , true ) ;
rank: 268
score: 99.56772867838542
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 268
score: 99.48098754882812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( element , compute CaMeL Following ( n ) ) ;
rank: 268
score: 99.44761591372283
patch: try ) fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 269
score: 99.59679782006049
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else { break ;
rank: 269
score: 99.58821614583333
patch: Node ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ) ;
rank: 269
score: 99.57570043103448
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 269
score: 99.56987762451172
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) , false ) ;
rank: 269
score: 99.55810546875
patch: fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 269
score: 99.48097857306985
patch: List fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 269
score: 99.44739300271739
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( compute CaMeL Following ( n ) ) ;
rank: 270
score: 99.58794487847223
patch: Node < Di CaMeL Graph CaMeL Edge < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 270
score: 99.57569986979166
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } }
rank: 270
score: 99.56976787860577
patch: final List < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 270
score: 99.55802408854167
patch: List < Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 270
score: 99.5456034342448
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ( n ) ) ) ;
rank: 270
score: 99.51364617598684
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 270
score: 99.48075358072917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , list ) ) ;
rank: 270
score: 99.44697709517045
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . State ( n ) ) ;
rank: 271
score: 99.59608677455357
patch: g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 271
score: 99.57525079900569
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . TYPE ) {
rank: 271
score: 99.5694247159091
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) . get CaMeL Node ( ) ) ) ;
rank: 271
score: 99.5661090353261
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , fall CaMeL Through ) ;
rank: 271
score: 99.55767578125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) , n ) ;
rank: 271
score: 99.54555838448661
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 271
score: 99.48056030273438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ) {
rank: 271
score: 99.44571940104167
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) ;
rank: 272
score: 99.59598541259766
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 272
score: 99.57525044102823
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 272
score: 99.5658710186298
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 272
score: 99.54527936662946
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ; }
rank: 272
score: 99.48048997961956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; )
rank: 272
score: 99.44553444602273
patch: Children fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 273
score: 99.568896484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) , null ) ;
rank: 273
score: 99.55732421875
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n ) ;
rank: 273
score: 99.51343712439903
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n . get CaMeL Node ( ) ) ) ;
rank: 273
score: 99.48047892252605
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . n ) ) ;
rank: 273
score: 99.44514266304348
patch: Node ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 274
score: 99.5869671365489
patch: Node < Node < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 274
score: 99.57440185546875
patch: if ( ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) ) {
rank: 274
score: 99.56856282552083
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 274
score: 99.5653584798177
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Node ( ) ;
rank: 274
score: 99.51337139423077
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . new ( ) ) ) ;
rank: 274
score: 99.44505399816177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ref ) ;
rank: 275
score: 99.59567495492789
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Next ( ) ) ) ;
rank: 275
score: 99.54428536551339
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get ( ) ) ;
rank: 275
score: 99.48008034446023
patch: Entity fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 275
score: 99.44499067826705
patch: try { try { = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 276
score: 99.5955810546875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; if (
rank: 276
score: 99.58677734375
patch: Node < Node < ? , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 276
score: 99.56820678710938
patch: break ; } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 276
score: 99.56494140625
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Node ( ) ;
rank: 276
score: 99.54427664620536
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; fall CaMeL Through = null ;
rank: 276
score: 99.51320393880208
patch: Node fall CaMeL Through = callback . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 276
score: 99.47988746279762
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , g CaMeL Node ) ;
rank: 276
score: 99.44498697916667
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try {
rank: 277
score: 99.59556579589844
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , cur CaMeL Cfg . get CaMeL Destination ( ) ) ;
rank: 277
score: 99.58671061197917
patch: Node next = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 277
score: 99.57385674838362
patch: Iterator < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 277
score: 99.56809895833334
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 277
score: 99.54392787388393
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 277
score: 99.513115234375
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 277
score: 99.47983186141305
patch: final Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 277
score: 99.44475763494319
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Escaped ( n ) ) ;
rank: 278
score: 99.56808373235887
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Parent ( ) ) ) ;
rank: 278
score: 99.56485098379629
patch: Object fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 278
score: 99.5560811360677
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 278
score: 99.54383263221153
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ;
rank: 278
score: 99.51294849537037
patch: try { Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 278
score: 99.44447544642857
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute , n ) ;
rank: 279
score: 99.58660016741071
patch: if ( n . get CaMeL Next ( ) == null ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; }
rank: 279
score: 99.57339477539062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( cur CaMeL Cfg ) ) ;
rank: 279
score: 99.56791178385417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) , n ) ;
rank: 279
score: 99.55595703125
patch: List < Branch > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 279
score: 99.54359654017857
patch: Node fall CaMeL Through = this ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 279
score: 99.47932703354779
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 280
score: 99.57313447840073
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) . get CaMeL Destination ( ) ) ;
rank: 280
score: 99.56787109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) , false ) ;
rank: 280
score: 99.56473214285714
patch: Node fall CaMeL Through = = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 280
score: 99.55575997488839
patch: try { try { return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 280
score: 99.54336111886161
patch: compute CaMeL Following ( n ) ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 280
score: 99.44418480282738
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , fall CaMeL Through ) ;
rank: 281
score: 99.5943015769676
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , out CaMeL Edges . get ( 0 ) ) ;
rank: 281
score: 99.58638961226852
patch: if ( n . has CaMeL Children ( ) ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ; }
rank: 281
score: 99.57310042842742
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; case Token . RETURN :
rank: 281
score: 99.56453450520833
patch: short fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 281
score: 99.5557110126202
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) , n ) ;
rank: 281
score: 99.54332557091347
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( g CaMeL Node , n ) ) ;
rank: 281
score: 99.51270470252403
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false , null ) ;
rank: 281
score: 99.444091796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . node ( n ) ) ;
rank: 282
score: 99.56750118371212
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ) ;
rank: 282
score: 99.564453125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; switch ( n . get CaMeL Next ( ) ) {
rank: 282
score: 99.543046875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , - 1 ) ) ;
rank: 282
score: 99.47792561848958
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current , compute CaMeL Following ( n ) ) ;
rank: 282
score: 99.4438143643466
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . edge ( n ) ) ;
rank: 283
score: 99.59417527721774
patch: final Branch fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 283
score: 99.564453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 283
score: 99.55457560221355
patch: return n ; } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 283
score: 99.54233579282408
patch: Dim . Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 283
score: 99.4434814453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) .
rank: 284
score: 99.59413146972656
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , cur CaMeL Cfg . get CaMeL Out ( ) ) ;
rank: 284
score: 99.58546799879808
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) . get CaMeL Value ( ) ) ;
rank: 284
score: 99.57242557920259
patch: Queue < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 284
score: 99.5669677734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) , n ) ;
rank: 284
score: 99.5644198330966
patch: Node fall CaMeL Through = fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 284
score: 99.51229194972827
patch: Node fall CaMeL Through = ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 284
score: 99.44313742897727
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( count ) ) ;
rank: 285
score: 99.58534071180556
patch: List < Di CaMeL Graph CaMeL Edge [ ] > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 285
score: 99.5669654107863
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) ) ;
rank: 285
score: 99.54149486400463
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ) ) ;
rank: 285
score: 99.51224949048913
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Id ( ) ) ;
rank: 285
score: 99.4775390625
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 285
score: 99.4431216591283
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , 0 ) ;
rank: 286
score: 99.57234700520833
patch: Node < Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 286
score: 99.56651960100446
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ) ;
rank: 286
score: 99.56391963252315
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 286
score: 99.54147774832589
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Results ( ) ) ;
rank: 286
score: 99.5119098165761
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ,
rank: 286
score: 99.44270125679348
patch: try return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 287
score: 99.59379577636719
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , g CaMeL Node . get CaMeL Next ( ) ) ) ;
rank: 287
score: 99.5851542154948
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == fall CaMeL Through ) ;
rank: 287
score: 99.56602376302084
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 287
score: 99.55362051504629
patch: return fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 287
score: 99.54135018807871
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ; }
rank: 287
score: 99.47665803328805
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 287
score: 99.44253700657895
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ;
rank: 288
score: 99.59371948242188
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( compute CaMeL Following ( n ) ) ; remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 288
score: 99.56595164331897
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 288
score: 99.56324925915948
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 288
score: 99.55287905092592
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Destination ( ) ) ;
rank: 288
score: 99.54068429129464
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 288
score: 99.5115966796875
patch: Node fall CaMeL Through = ( = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 288
score: 99.47587076822917
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( edge ) ) ;
rank: 288
score: 99.44133966619319
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) {
rank: 289
score: 99.59358162715517
patch: List < Di CaMeL Graph CaMeL Edge < Node + Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 289
score: 99.58436414930556
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 289
score: 99.57210811491936
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } }
rank: 289
score: 99.56590955010776
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) , n ) ) ;
rank: 289
score: 99.56316583806819
patch: Node fall CaMeL Through = node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 289
score: 99.552724609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; ;
rank: 289
score: 99.54005859375
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 289
score: 99.51137131911058
patch: Node fall CaMeL Through = ( Node && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 289
score: 99.44113026494566
patch: * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 290
score: 99.58429827008929
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 290
score: 99.57210540771484
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , flow ) ;
rank: 290
score: 99.56578826904297
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent CaMeL Node ( ) , false ) ;
rank: 290
score: 99.56265371817129
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) ;
rank: 290
score: 99.5113055889423
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( fall CaMeL Through , n ) ) ;
rank: 290
score: 99.47520380434783
patch: try { try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 290
score: 99.44075520833333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . Factory ( ) ) ;
rank: 291
score: 99.593310546875
patch: try { out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 291
score: 99.5720443725586
patch: return n ; } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 291
score: 99.5654541015625
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) ;
rank: 291
score: 99.56257847377232
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , cur CaMeL Cfg ) ;
rank: 291
score: 99.53928920200893
patch: Node fall CaMeL Through = n ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 291
score: 99.5113055889423
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , node , n ) ) ;
rank: 292
score: 99.593310546875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 292
score: 99.57197570800781
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , parent ) ;
rank: 292
score: 99.56504469651442
patch: fall CaMeL Through = true ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 292
score: 99.56235758463542
patch: Node fall CaMeL Through = fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 292
score: 99.5518798828125
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Value ( ) == null ) {
rank: 292
score: 99.5392822265625
patch: Node fall CaMeL Through = new Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 292
score: 99.51102701822917
patch: Node } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 292
score: 99.47463989257812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( current , n ) ) ;
rank: 293
score: 99.59328697467673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if ( next == null ) {
rank: 293
score: 99.58361235119048
patch: List < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 293
score: 99.57162039620536
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , next ) ;
rank: 293
score: 99.56494140625
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 293
score: 99.55185372488839
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n , n ) ;
rank: 293
score: 99.539208984375
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 293
score: 99.47458902994792
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , size ) ) ;
rank: 293
score: 99.44058890964673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return fall CaMeL Through ; }
rank: 294
score: 99.58360072544643
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) { return fall CaMeL Through ; }
rank: 294
score: 99.57136804917279
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) . get CaMeL Destination ( ) ) ;
rank: 294
score: 99.56473094019397
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 294
score: 99.56162446120689
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Count ( ) ;
rank: 294
score: 99.55154984085648
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( n . get CaMeL Next ( ) ) ) ;
rank: 294
score: 99.53911481584821
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 294
score: 99.43980823863636
patch: = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 295
score: 99.58358328683036
patch: Preconditions . check CaMeL Exit ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 295
score: 99.5712890625
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 295
score: 99.5645523071289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Node ( ) ) ;
rank: 295
score: 99.56135777064732
patch: Node next = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 295
score: 99.53884451729911
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Next ( ) ;
rank: 295
score: 99.47442626953125
patch: if ( node != null ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 295
score: 99.43978271484374
patch: try { try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 296
score: 99.59297943115234
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) . get CaMeL Value ( ) ;
rank: 296
score: 99.57128092447917
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 296
score: 99.56452178955078
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , g CaMeL Node ) ;
rank: 296
score: 99.561279296875
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 296
score: 99.47419877485795
patch: Rule fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 297
score: 99.59286006804436
patch: if ( out CaMeL Edges . get ( 0 ) == Branch . UNCOND ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 297
score: 99.58292933872768
patch: final List < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 297
score: 99.571142578125
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , null ) ;
rank: 297
score: 99.56429036458333
patch: try { Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 297
score: 99.56101637620192
patch: } else { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ; }
rank: 297
score: 99.55089460100446
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) != null
rank: 297
score: 99.51009114583333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following . get ( n ) ) ;
rank: 297
score: 99.47410824424342
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , element ) ;
rank: 298
score: 99.59260506465517
patch: List < Di CaMeL Graph CaMeL Node < Node < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 298
score: 99.58241624098558
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) { return n ; }
rank: 298
score: 99.5709716796875
patch: Block fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 298
score: 99.56418282645089
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 298
score: 99.56095668247768
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Last ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 298
score: 99.55061479048295
patch: If fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 298
score: 99.51002854567308
patch: compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 298
score: 99.47389622738487
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( element , n ) ;
rank: 298
score: 99.43903551603618
patch: Node [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 299
score: 99.59251403808594
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( fall CaMeL Through ) ) ;
rank: 299
score: 99.57094254032258
patch: Node node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 299
score: 99.53795276988636
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get ( 0 ) ) ;
rank: 299
score: 99.50986891526442
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; try {
rank: 299
score: 99.47385475852273
patch: Range fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 299
score: 99.4389404296875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 300
score: 99.582314453125
patch: Node < Node >> fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 300
score: 99.57065114667338
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 300
score: 99.563720703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( - 1 ) ) ;
rank: 300
score: 99.550537109375
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 300
score: 99.53782435825893
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) , true ) ;
rank: 300
score: 99.47372436523438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ,
rank: 300
score: 99.43873901367188
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ) ;
rank: 301
score: 99.58180638363487
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return fall CaMeL Through ;
rank: 301
score: 99.57058279854911
patch: Node ) = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 301
score: 99.56306966145833
patch: } Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 301
score: 99.56053003771552
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . to CaMeL Array ( ) ;
rank: 301
score: 99.55040147569444
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) ;
rank: 301
score: 99.5094463641827
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , parent , n ) ) ;
rank: 301
score: 99.43844471807066
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ;
rank: 302
score: 99.58147561961206
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 302
score: 99.57041607481061
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , cur CaMeL Cfg ) ;
rank: 302
score: 99.56037008351294
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( - 1 ) ;
rank: 302
score: 99.55016637731481
patch: Node next = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 302
score: 99.53762950067934
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false ) ) ;
rank: 302
score: 99.509296875
patch: Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 302
score: 99.47334621263587
patch: Node ! fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 302
score: 99.4380413552989
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) null ) ;
rank: 303
score: 99.5701904296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , cur CaMeL Cfg ) ) ;
rank: 303
score: 99.56293596540179
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) ) ;
rank: 303
score: 99.55982317243304
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 303
score: 99.537353515625
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 303
score: 99.5092022235577
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . null ) ) ;
rank: 304
score: 99.57011413574219
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; continue ;
rank: 304
score: 99.55973868534483
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , Branch . UNCOND ) ;
rank: 304
score: 99.54998309795673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching : g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 304
score: 99.53733473557692
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 1 ) ) ;
rank: 304
score: 99.50875854492188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , edge ) ;
rank: 304
score: 99.47313435872395
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , content ) ) ;
rank: 305
score: 99.58009620949075
patch: Node < Di CaMeL Graph CaMeL Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 305
score: 99.5698974609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Last CaMeL Child ( ) ) ) ;
rank: 305
score: 99.56261754918981
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n ) ) ;
rank: 305
score: 99.55931775323276
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( ) ) ;
rank: 305
score: 99.537109375
patch: / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 305
score: 99.50834147135417
patch: Node fall CaMeL Through ; if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) &&
rank: 305
score: 99.4367145040761
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , compute CaMeL Following ( n ) ) ;
rank: 306
score: 99.57938929966518
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) , g CaMeL Node ) ;
rank: 306
score: 99.56979896282327
patch: Vector < Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 306
score: 99.56248837425595
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 306
score: 99.55888310185185
patch: Node fall CaMeL Through = out CaMeL Edges . get ( $NUMBER$ ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 306
score: 99.53676932198661
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ) ;
rank: 306
score: 99.43655528192934
patch: n = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 307
score: 99.591064453125
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch > g CaMeL Node = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 307
score: 99.57932826450893
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , 0 ) ) ;
rank: 307
score: 99.56953938802083
patch: protected Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 307
score: 99.5582987467448
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 307
score: 99.4727783203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . compute CaMeL Following ( n ) ) ;
rank: 307
score: 99.43638392857143
patch: compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 308
score: 99.56953699448529
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Next ( ) ) ;
rank: 308
score: 99.54946463448661
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( out CaMeL Edges ) ) ;
rank: 308
score: 99.53630719866071
patch: if ( n . has CaMeL Children ( ) ) { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 308
score: 99.47276814778645
patch: n . add CaMeL All ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 309
score: 99.59100341796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if (
rank: 309
score: 99.57925851004464
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 309
score: 99.56953430175781
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , current ) ;
rank: 309
score: 99.54938616071429
patch: Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; ;
rank: 309
score: 99.53626360212054
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 309
score: 99.50723970853366
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , parent ) ;
rank: 309
score: 99.47263405539773
patch: vfall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 309
score: 99.43600945723684
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ;
rank: 310
score: 99.56200330010776
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . ) ;
rank: 310
score: 99.55729166666667
patch: Node out CaMeL Edges = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 310
score: 99.54931640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through , n ) ;
rank: 310
score: 99.47252887228261
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Instance ( ) ) ;
rank: 310
score: 99.43589716372283
patch: / ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 311
score: 99.59034365699405
patch: out CaMeL Edges . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 311
score: 99.5788995150862
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get ( 1 ) ) ;
rank: 311
score: 99.56930226293103
patch: Enumeration < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 311
score: 99.56194661458333
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 311
score: 99.55685659555289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , true ) ;
rank: 311
score: 99.5359356219952
patch: try { Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 311
score: 99.47163899739583
patch: int [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 312
score: 99.59032440185547
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND )
rank: 312
score: 99.5788104717548
patch: Di CaMeL Graph CaMeL Edge fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 312
score: 99.56915283203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null )
rank: 312
score: 99.56192016601562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 312
score: 99.55670635516827
patch: Node fall CaMeL Through = fall CaMeL Through . get ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 312
score: 99.4716084798177
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 313
score: 99.58984375
patch: List < Di CaMeL Graph CaMeL Edge < Node == Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 313
score: 99.57874891493056
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) { return fall CaMeL Through ;
rank: 313
score: 99.56912231445312
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 313
score: 99.56166585286458
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ) ) ;
rank: 313
score: 99.556220703125
patch: Node fall CaMeL Through = ( Node , out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 313
score: 99.53551793981481
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ) ) ) ;
rank: 313
score: 99.43527088994566
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) $NUMBER$ ) ;
rank: 314
score: 99.57873987268519
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , Branch . UNCOND ) ;
rank: 314
score: 99.53549081307871
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) ) ;
rank: 314
score: 99.47150735294117
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( type ) ;
rank: 314
score: 99.43515412703805
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , true ) ) ;
rank: 315
score: 99.56880950927734
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute ( n . get CaMeL Next ( ) ) ) ;
rank: 315
score: 99.54779052734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following $NUMBER$ Node ( n ) ) ;
rank: 315
score: 99.53511265345982
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ) ;
rank: 315
score: 99.47145182291666
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n ) ;
rank: 316
score: 99.58895979256465
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 316
score: 99.5780498798077
patch: Node < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; ;
rank: 316
score: 99.56863403320312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) , fall CaMeL Through ) ;
rank: 316
score: 99.56136592741936
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; }
rank: 316
score: 99.5476582845052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) + 1 ) ;
rank: 316
score: 99.534833984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ; ;
rank: 316
score: 99.5059814453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get ( ( Node ) n ) ;
rank: 316
score: 99.43479225852273
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Node ) ) ;
rank: 317
score: 99.57783726283482
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) . get ( 1 ) . get CaMeL Value ( ) ;
rank: 317
score: 99.5685791015625
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , ) ;
rank: 317
score: 99.55580873842592
patch: Node fall CaMeL Through ++ ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 317
score: 99.53474934895833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = null ;
rank: 317
score: 99.5059344951923
patch: Node fall CaMeL Through = ( Node || try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 317
score: 99.47139246323529
patch: short fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 317
score: 99.43453846807066
patch: Node fall CaMeL Through ; = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 318
score: 99.57754080636161
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ) ;
rank: 318
score: 99.56850113407258
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( cur CaMeL Cfg ) ) ;
rank: 318
score: 99.560859375
patch: Set < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 318
score: 99.5475186434659
patch: Preconditions fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 318
score: 99.5346912202381
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( parent ) ) ;
rank: 318
score: 99.50576782226562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; else {
rank: 318
score: 99.47109087775735
patch: Block fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 318
score: 99.43430397727273
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) &&
rank: 319
score: 99.5886651400862
patch: List < Di CaMeL Graph CaMeL Edge < Node != Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 319
score: 99.56822620738636
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null
rank: 319
score: 99.55556418678977
patch: Class fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 319
score: 99.54708984375
patch: try { return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 320
score: 99.588427734375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( compute CaMeL Following ( n ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 320
score: 99.57732522898706
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ; }
rank: 320
score: 99.56753077651516
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Next ( ) ) ; }
rank: 320
score: 99.56050931490384
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ) ;
rank: 320
score: 99.54679652622768
patch: Node fall CaMeL Through = node . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 320
score: 99.5340576171875
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Value ( ) ;
rank: 320
score: 99.50552368164062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , start ) ;
rank: 320
score: 99.4332608309659
patch: try { Node info = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 321
score: 99.58837076822917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( parent ) ) ;
rank: 321
score: 99.57711791992188
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) ) ;
rank: 321
score: 99.56698172433036
patch: final Di CaMeL Graph CaMeL Edge < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 321
score: 99.56043294270833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) , false ) ;
rank: 321
score: 99.54670933314732
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 321
score: 99.53396371694711
patch: Node Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 321
score: 99.47048117897727
patch: Type fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 321
score: 99.43275669642857
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . peek ( ) ) ;
rank: 322
score: 99.58818054199219
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n . get CaMeL Next ( ) ) ;
rank: 322
score: 99.57706425107759
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 322
score: 99.5598373413086
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ) ;
rank: 322
score: 99.5464618389423
patch: Node [ ] out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 322
score: 99.43246605282738
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . clone ( ) ) ;
rank: 323
score: 99.588095703125
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 323
score: 99.57700376157408
patch: if ( n . get CaMeL Next ( ) == null ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 323
score: 99.56661987304688
patch: if ( n . has CaMeL Children ( ) ) remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 323
score: 99.54640415736607
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return return fall CaMeL Through ;
rank: 323
score: 99.50490159254808
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node , n ) ;
rank: 324
score: 99.50480143229167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , 1 ) ;
rank: 324
score: 99.46987915039062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ( Node ) fall CaMeL Through ) ;
rank: 325
score: 99.55896935096153
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; }
rank: 325
score: 99.5541522686298
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) : fall CaMeL Through ;
rank: 325
score: 99.54578993055556
patch: case Token . BREAK : if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 325
score: 99.46985973011364
patch: Tree fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 325
score: 99.43169875372024
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true , true ) ;
rank: 326
score: 99.576826171875
patch: try { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ; }
rank: 326
score: 99.56622783954327
patch: if ( fall CaMeL Through && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 326
score: 99.558837890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , true ) . get CaMeL Parent ( ) ) ;
rank: 326
score: 99.54505750868056
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; return next ;
rank: 326
score: 99.53267124720982
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Source ( ) ) ) ;
rank: 326
score: 99.50449782151442
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent , node ) ;
rank: 326
score: 99.46954704733456
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( edge ) ;
rank: 326
score: 99.43131156589673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get CaMeL First ( ) ) ;
rank: 327
score: 99.55877685546875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; }
rank: 327
score: 99.55403999660327
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ;
rank: 327
score: 99.53245261863425
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , compute ( n ) ) ;
rank: 327
score: 99.46942138671875
patch: } else Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 328
score: 99.58723449707031
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else { break ; }
rank: 328
score: 99.576318359375
patch: Node < Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 328
score: 99.55869140625
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . get CaMeL Value ( ) ) ;
rank: 328
score: 99.55391751802884
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , false ) ;
rank: 328
score: 99.54479528356481
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) ;
rank: 328
score: 99.532431640625
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 328
score: 99.5040625
patch: if try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 329
score: 99.58708953857422
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 329
score: 99.57602875808189
patch: Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 329
score: 99.56543810614224
patch: else try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 329
score: 99.55854797363281
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 329
score: 99.5444140625
patch: fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 329
score: 99.50405883789062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , 1 ) ) ;
rank: 329
score: 99.43122016059027
patch: Node fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 330
score: 99.57565743582589
patch: Preconditions . set CaMeL Out ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 330
score: 99.56520080566406
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } case Token . BLOCK :
rank: 330
score: 99.55851236979167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 330
score: 99.544365234375
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through ) ;
rank: 330
score: 99.53233991350446
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get CaMeL Node ( ) ;
rank: 330
score: 99.50405485733695
patch: Node fall CaMeL Through ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 330
score: 99.43114124644886
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . create ( n ) ) ;
rank: 331
score: 99.575625
patch: Node < Node < Object , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 331
score: 99.565185546875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n . get CaMeL Next ( ) == null
rank: 331
score: 99.557890625
patch: continue ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 331
score: 99.55322265625
patch: String fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 331
score: 99.54425048828125
patch: if ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == null || n . has CaMeL Children ( ) ) {
rank: 331
score: 99.5322265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ) ) ;
rank: 331
score: 99.46868575246711
patch: / * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 331
score: 99.43070845170455
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n , n ) ) ;
rank: 332
score: 99.55780029296875
patch: Node < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 332
score: 99.54422433035714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ;
rank: 332
score: 99.53173828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . compute ( n ) ) ;
rank: 332
score: 99.50389607747395
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , list ) ;
rank: 332
score: 99.46856134588069
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( content ) ) ;
rank: 332
score: 99.4306109884511
patch: try int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 333
score: 99.57537286931819
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Destination ( ) ;
rank: 333
score: 99.56481170654297
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . has CaMeL Children ( ) ) ) ;
rank: 333
score: 99.53170072115384
patch: System Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 333
score: 99.50359375
patch: Node fall CaMeL Through = null ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 333
score: 99.4685567220052
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 333
score: 99.43039869225544
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get CaMeL Last ( ) ) ;
rank: 334
score: 99.58607584635416
patch: try { out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 334
score: 99.574873046875
patch: if ( n . has CaMeL Children ( ) ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 334
score: 99.56471301663306
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , null ) ;
rank: 334
score: 99.54353471235795
patch: Expr fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 334
score: 99.4685122841283
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , children ) ;
rank: 334
score: 99.43027131453805
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get CaMeL Parent ( ) ) ;
rank: 335
score: 99.5856697328629
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 335
score: 99.57486397879464
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 335
score: 99.56453080610795
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND )
rank: 335
score: 99.55721028645833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) , n ) ;
rank: 335
score: 99.55162311422414
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; switch ( next . get CaMeL Type ( ) ) {
rank: 335
score: 99.54322160993304
patch: Di CaMeL Graph CaMeL Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 335
score: 99.53162560096153
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , compute ( n ) ) ) ;
rank: 335
score: 99.5034930889423
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) ) ;
rank: 335
score: 99.46773856026786
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n . get CaMeL Parent ( ) ) ;
rank: 335
score: 99.43023322610294
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( list ) ;
rank: 336
score: 99.58555947580645
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 336
score: 99.56452178955078
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , compute ) ;
rank: 336
score: 99.55148654513889
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Next ( ) , n ) ;
rank: 336
score: 99.54315863715277
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; case Token . BREAK :
rank: 336
score: 99.50343831380208
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , mode ) ;
rank: 336
score: 99.46757175611413
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Line ( ) ) ;
rank: 337
score: 99.57429108796296
patch: Node < Di CaMeL Graph CaMeL Edge , Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 337
score: 99.55704752604167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Node ) n ) ;
rank: 337
score: 99.542763671875
patch: Node next = out CaMeL Edges . get ( 1 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 337
score: 99.50335223858173
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( compute ( n ) ) ) ;
rank: 337
score: 99.4675060453869
patch: for ( ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 337
score: 99.4298983487216
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( $STRING$ ) ) ;
rank: 338
score: 99.56432291666667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( id ) ) ;
rank: 338
score: 99.54269748263889
patch: if ( out CaMeL Edges . size ( ) > 1 ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 338
score: 99.503330078125
patch: Node ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 338
score: 99.46736653645833
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n ) ) ;
rank: 339
score: 99.58487141927084
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get CaMeL Value ( ) ) ;
rank: 339
score: 99.5642798639113
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; case Token . CONTINUE :
rank: 339
score: 99.55653381347656
patch: Node fall CaMeL Through = System . current CaMeL Time CaMeL Millis ( ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 339
score: 99.55120218211206
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; switch ( n . get CaMeL Type ( ) ) {
rank: 339
score: 99.5028125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First ( ) ) ;
rank: 339
score: 99.46697443181819
patch: Float fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 340
score: 99.57331452546296
patch: Node < Node < Node >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 340
score: 99.56400844029018
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , false ) ;
rank: 340
score: 99.55647225215517
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( 1 ) ) ;
rank: 340
score: 99.55094691685268
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) . length ( ) ;
rank: 340
score: 99.50241323617789
patch: fall CaMeL Through = ( Node [ ] ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 340
score: 99.46675441576087
patch: final boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 340
score: 99.42964895148026
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) .
rank: 341
score: 99.58467610677083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; out CaMeL Edges . next ( ) ;
rank: 341
score: 99.57286580403645
patch: Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; ;
rank: 341
score: 99.56385387073864
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute ( n ) ) ) ;
rank: 341
score: 99.55641174316406
patch: Node fall CaMeL Through = n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 341
score: 99.54252115885417
patch: else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 341
score: 99.53057183159723
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Last ( ) ) ;
rank: 341
score: 99.46664428710938
patch: Node fall CaMeL Through = false ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 341
score: 99.42955433238636
patch: @ fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 342
score: 99.58444649832589
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) . get CaMeL Type ( ) ) ;
rank: 342
score: 99.55033365885417
patch: Node fall CaMeL Through = ( Node ) out CaMeL Edges . get ( 0 ) ;
rank: 342
score: 99.54237717848558
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else { {
rank: 342
score: 99.53050013950893
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ; }
rank: 342
score: 99.50210173233695
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node . get CaMeL Node ( ) ) ;
rank: 342
score: 99.466064453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , start ) ) ;
rank: 342
score: 99.42927352241848
patch: ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 343
score: 99.5840352376302
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 343
score: 99.56366729736328
patch: Node g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 343
score: 99.5502460186298
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , 0 ) ;
rank: 343
score: 99.4660135904948
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get ( 0 ) ) ;
rank: 343
score: 99.4291927939967
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n }
rank: 344
score: 99.58359200613839
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if ( next == null )
rank: 344
score: 99.5723876953125
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) ) ;
rank: 344
score: 99.55021484375
patch: Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 344
score: 99.54231770833333
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ) ;
rank: 344
score: 99.5016796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( compute CaMeL Following ( n ) ) ) ;
rank: 344
score: 99.46590169270833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( fall CaMeL Through ) {
rank: 344
score: 99.42913263494319
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ref ) ) ;
rank: 345
score: 99.58353678385417
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 345
score: 99.56318721064815
patch: { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 345
score: 99.55576171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false ) . get CaMeL Parent ( ) ) ;
rank: 345
score: 99.55016479492187
patch: Node [ ] fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 345
score: 99.54212364783653
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , $STRING$ ) ;
rank: 345
score: 99.46586100260417
patch: try { try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 345
score: 99.42911430027173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) 1 ) ;
rank: 346
score: 99.58334147135416
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Destination ( ) ) ) ;
rank: 346
score: 99.57184968171296
patch: Node < Node , Branch > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 346
score: 99.55572040264423
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 346
score: 99.52964564732143
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ) ; }
rank: 346
score: 99.42876233552632
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ) ;
rank: 347
score: 99.58296421595982
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } {
rank: 347
score: 99.56259260506465
patch: if ( n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 347
score: 99.555595703125
patch: } else { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 347
score: 99.54963288483796
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Type ( ) ;
rank: 347
score: 99.54193359375
patch: List < String > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 347
score: 99.50146484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get ( ) ) ;
rank: 347
score: 99.4658203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) fall CaMeL Through ) ;
rank: 347
score: 99.42825656467014
patch: Node Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 348
score: 99.5625232514881
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION :
rank: 348
score: 99.549501953125
patch: List < Di CaMeL Graph CaMeL Edge > fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 348
score: 99.5419170673077
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . size ( ) ) ;
rank: 348
score: 99.50135216346153
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true , null ) ;
rank: 349
score: 99.5716083233173
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 1 ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 349
score: 99.555380859375
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ;
rank: 349
score: 99.549501953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL First ( ) ) ;
rank: 349
score: 99.50125826322116
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute CaMeL Following ( n , n ) ) ;
rank: 349
score: 99.46571858723958
patch: if ( n != null ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 349
score: 99.42726536800987
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , $NUMBER$ ) ;
rank: 350
score: 99.582470703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( false ) ) ;
rank: 350
score: 99.56208801269531
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Type ( ) .
rank: 350
score: 99.55528971354167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) , n ) ;
rank: 350
score: 99.54168231670673
patch: Node fall CaMeL Through = this . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 350
score: 99.52920968191964
patch: int fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 350
score: 99.46571180555556
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 350
score: 99.42649439761513
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( ) ) ;
rank: 351
score: 99.57144828464673
patch: Node < Node , Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 351
score: 99.5619873046875
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND )
rank: 351
score: 99.5547265625
patch: Node < Type > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 351
score: 99.52915445963542
patch: Node node = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 351
score: 99.501181640625
patch: Node fall CaMeL Through = new Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 351
score: 99.46556555706522
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Source ( ) ) ;
rank: 351
score: 99.42638629415761
patch: else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 352
score: 99.5619696255388
patch: try { Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 352
score: 99.55470784505208
patch: try { String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 352
score: 99.54150390625
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 352
score: 99.52906334918478
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 352
score: 99.5011676290761
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , true ) ;
rank: 352
score: 99.42633611505681
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; else
rank: 353
score: 99.58157552083334
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) . get CaMeL Value ( ) ;
rank: 353
score: 99.57113882211539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this , n ) ;
rank: 353
score: 99.56187115293561
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Destination ( ) ) ;
rank: 353
score: 99.5545654296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 353
score: 99.54908130787037
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 353
score: 99.52857349537037
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) )
rank: 353
score: 99.50092022235577
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , null ) ;
rank: 353
score: 99.46525065104167
patch: Node fall CaMeL Through = true ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 354
score: 99.57097061820652
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) ) { break ; }
rank: 354
score: 99.561767578125
patch: Node info = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 354
score: 99.55427498653017
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 354
score: 99.548896484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Next ( ) ) ;
rank: 354
score: 99.5411846454327
patch: } } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 354
score: 99.52794958043981
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 354
score: 99.50022291100544
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node ) ;
rank: 355
score: 99.58153392650463
patch: Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 355
score: 99.57094389816811
patch: Node < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 355
score: 99.56170864762932
patch: } try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 355
score: 99.55419049944196
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First ( ) ) ;
rank: 355
score: 99.5487648292824
patch: Node next = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 355
score: 99.50004069010417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( null , compute CaMeL Following ( n ) ) ;
rank: 355
score: 99.46497802734375
patch: Node < int > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 355
score: 99.42552601207386
patch: Node fall CaMeL Through = ( Node [ ] ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 356
score: 99.58124651227679
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else
rank: 356
score: 99.56154174804688
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION
rank: 356
score: 99.55400233114919
patch: try { Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 356
score: 99.54871715198864
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . size ( ) ;
rank: 356
score: 99.54106083622685
patch: case Token . RETURN : if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 356
score: 99.52727141203704
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( n ) ) ) ;
rank: 356
score: 99.4999287923177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . null ) ) ;
rank: 356
score: 99.4644063313802
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 356
score: 99.42551587975544
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , n ) ;
rank: 357
score: 99.58087789601294
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 357
score: 99.57078334263393
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 357
score: 99.56154027478448
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ; }
rank: 357
score: 99.55391438802083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Message ( ) , false ) ;
rank: 357
score: 99.54834888599537
patch: Object fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 357
score: 99.54087477463942
patch: List < Di CaMeL Graph CaMeL Edge $NUMBER$ >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 357
score: 99.52686564127605
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get ( 0 ) ) ;
rank: 357
score: 99.49974646935097
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node , fall CaMeL Through ) ) ;
rank: 357
score: 99.46431477864583
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 358
score: 99.580810546875
patch: Preconditions . check CaMeL Read ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 358
score: 99.5706317608173
patch: Node fall CaMeL Through : try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 358
score: 99.56150512695312
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) ) {
rank: 358
score: 99.54085599459134
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , out CaMeL Edges . get ( 0 ) ) ;
rank: 358
score: 99.52676156850961
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 358
score: 99.49966032608695
patch: final String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 358
score: 99.42512817382813
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get ( n ) ) ;
rank: 359
score: 99.580810546875
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION )
rank: 359
score: 99.57045561691811
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 359
score: 99.56139197716347
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ;
rank: 359
score: 99.553447265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL First CaMeL Child ( ) ;
rank: 359
score: 99.54811096191406
patch: Node fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) ;
rank: 359
score: 99.52664888822116
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . create ( n ) ) ;
rank: 359
score: 99.49960561899039
patch: Node fall CaMeL Through = ( Node ) ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 359
score: 99.46396891276042
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; continue ;
rank: 360
score: 99.58072636045259
patch: try { out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND )
rank: 360
score: 99.57015327785327
patch: Node < ? , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 360
score: 99.56135805191532
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; case Token . BREAK :
rank: 360
score: 99.55330684267241
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 360
score: 99.52658203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) . get ( 0 ) ) ;
rank: 360
score: 99.49953125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 360
score: 99.42459267064145
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node ;
rank: 361
score: 99.58040364583333
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . FUNCTION ) ;
rank: 361
score: 99.5699951171875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 361
score: 99.55302211216518
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . compute CaMeL Following ( ) ) ;
rank: 361
score: 99.54063063401442
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , this ) ;
rank: 361
score: 99.52637657752403
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } catch ( ) {
rank: 361
score: 99.499423828125
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 361
score: 99.42433471679688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( start ( n ) ) ;
rank: 362
score: 99.56978804976852
patch: return new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 362
score: 99.56129673549107
patch: Node get = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 362
score: 99.55272533275463
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 362
score: 99.54771205357143
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ( n . get CaMeL Next ( ) ) ) ;
rank: 362
score: 99.52626546223958
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 362
score: 99.42424858940973
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node
rank: 363
score: 99.56955973307292
patch: Node next = out CaMeL Edges . get ( 0 ) . get ( 0 ) . get CaMeL Value ( ) ;
rank: 363
score: 99.55250707165948
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through ) ;
rank: 363
score: 99.53985126201923
patch: Preconditions . remove ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 363
score: 99.52617938701923
patch: Node fall CaMeL Through = g CaMeL Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 363
score: 99.4991963704427
patch: if ( fall CaMeL Through ) return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 363
score: 99.4630635579427
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) )
rank: 363
score: 99.42424210258152
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( * compute CaMeL Following ( n ) ) ;
rank: 364
score: 99.57989908854167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . has CaMeL Children ( ) ) ;
rank: 364
score: 99.56954390914352
patch: List < Di CaMeL Graph CaMeL Edge [ ] >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 364
score: 99.56038992745536
patch: Node } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 364
score: 99.552490234375
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ; }
rank: 364
score: 99.54732711226852
patch: Di CaMeL Graph CaMeL Node < Node , Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 364
score: 99.5255710767663
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) )
rank: 364
score: 99.498525390625
patch: ; try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 364
score: 99.46291097005208
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , logger ) ;
rank: 364
score: 99.42413689108456
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $NUMBER$ ) ;
rank: 365
score: 99.57953171502976
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else {
rank: 365
score: 99.560302734375
patch: Node g CaMeL Node = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 365
score: 99.55240071614584
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Name ( ) , false ) ;
rank: 365
score: 99.54713948567708
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Type ( ) ;
rank: 365
score: 99.53929759837963
patch: Preconditions . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 365
score: 99.498388671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( compute ( compute ( n ) ) ) ;
rank: 365
score: 99.42410411005434
patch: Node fall CaMeL Through = n ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 366
score: 99.57949393136161
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 366
score: 99.5694921875
patch: if ( out CaMeL Edges . size ( ) == 1 && n . has CaMeL Children ( ) ) { break ; }
rank: 366
score: 99.56016956676136
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 366
score: 99.54706488715277
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , n . get CaMeL Next ( ) ) ;
rank: 366
score: 99.53909067007211
patch: List < Di CaMeL Graph CaMeL Edge null > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 366
score: 99.5254414876302
patch: Node * / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 366
score: 99.4983622233073
patch: Node fall CaMeL Through = try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 366
score: 99.46204427083333
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 366
score: 99.42400568181819
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . Branch ( n ) ) ;
rank: 367
score: 99.55179537259616
patch: Node < Node < Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 367
score: 99.52540940504808
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) . get CaMeL Value ( ) ) ;
rank: 367
score: 99.49830163043478
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ) ;
rank: 367
score: 99.46195068359376
patch: Collection < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 367
score: 99.42399458451705
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( should CaMeL Remove ( n ) ) ;
rank: 368
score: 99.579423828125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ; }
rank: 368
score: 99.56889286747685
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } }
rank: 368
score: 99.5601006869612
patch: try { return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 368
score: 99.55162392893145
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 368
score: 99.54672723067434
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 368
score: 99.538837890625
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( out CaMeL Edges . get ( 0 ) ) ) ;
rank: 368
score: 99.52527307581019
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) . get ( 0 ) ) ;
rank: 368
score: 99.42391164679276
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + true ) ;
rank: 369
score: 99.55988420758929
patch: if ( n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 369
score: 99.55150428185097
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . clone ( ) ) ;
rank: 369
score: 99.53843622622283
patch: fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 369
score: 99.525263671875
patch: / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 369
score: 99.49815016526442
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , $STRING$ , false ) ;
rank: 369
score: 99.46082261029412
patch: long fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 369
score: 99.4237750509511
patch: n . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 370
score: 99.57937825520834
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) . get CaMeL Value ( ) ;
rank: 370
score: 99.568759765625
patch: List < Di CaMeL Graph CaMeL Edge >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 370
score: 99.55963897705078
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return fall CaMeL Through ; }
rank: 370
score: 99.55139973958333
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 370
score: 99.546484375
patch: if ( n . has CaMeL Children ( ) ) { Node next = n . get CaMeL First CaMeL Child ( ) ;
rank: 370
score: 99.53839432565789
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 370
score: 99.52521623883929
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( current ) ) ;
rank: 370
score: 99.42341694078948
patch: try return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 371
score: 99.56820242745536
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , null ) ) ;
rank: 371
score: 99.55931854248047
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( cur CaMeL Cfg ) ) ; }
rank: 371
score: 99.52482096354167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ; ;
rank: 371
score: 99.4230624112216
patch: Offset fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 372
score: 99.57866379310344
patch: try { out CaMeL Edges . get ( 0 ) . return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 372
score: 99.56808035714286
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , this ) ) ;
rank: 372
score: 99.5593017578125
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 372
score: 99.545400390625
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( n . get CaMeL Next ( ) ) ;
rank: 372
score: 99.53814019097223
patch: Preconditions . add ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 372
score: 99.52473958333333
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 372
score: 99.49756798377403
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false ) ) ;
rank: 372
score: 99.45989379882812
patch: Node < String > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 372
score: 99.4226962002841
patch: Node fall CaMeL Through . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 373
score: 99.57835338961694
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 373
score: 99.55904504024622
patch: Node g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 373
score: 99.54532877604167
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 373
score: 99.53786996694711
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; out CaMeL Edges .
rank: 373
score: 99.52421513310185
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Node ( ) ) ;
rank: 373
score: 99.4593838778409
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( name ) ) ;
rank: 373
score: 99.42240767045455
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( iterator ) ) ;
rank: 374
score: 99.56775919596355
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 374
score: 99.55892181396484
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , g CaMeL Node ) ;
rank: 374
score: 99.5510723407452
patch: fall CaMeL Through = false ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 374
score: 99.54529747596153
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( - 1 ) ;
rank: 374
score: 99.53756277901786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching , compute CaMeL Following ( n ) ;
rank: 374
score: 99.52418009440105
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 374
score: 99.45934527853261
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Node ) compute CaMeL Following ( n ) ;
rank: 374
score: 99.42195268110795
patch: n fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 375
score: 99.57797241210938
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 375
score: 99.56760475852273
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) ) { break ;
rank: 375
score: 99.551015625
patch: Node < Position > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 375
score: 99.54443359375
patch: Node [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 375
score: 99.53751627604167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) )
rank: 375
score: 99.5241796875
patch: try try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 375
score: 99.459228515625
patch: Node fall CaMeL Through : Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 376
score: 99.55089393028847
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) . get CaMeL Parent ( ) ) ;
rank: 376
score: 99.52396484375
patch: } Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 376
score: 99.45906336167279
patch: else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 376
score: 99.42131958007812
patch: Node info = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 377
score: 99.57792607060185
patch: List < Di CaMeL Graph CaMeL Edge < ? >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 377
score: 99.56743706597223
patch: return new Di CaMeL Graph CaMeL Edge < Node , Branch >> ( g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 377
score: 99.55838012695312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) == fall CaMeL Through ) ;
rank: 377
score: 99.55072784423828
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ,
rank: 377
score: 99.5438232421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , out CaMeL Edges , null ) ;
rank: 377
score: 99.53737160011575
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) out CaMeL Edges . get ( 0 ) ) ;
rank: 377
score: 99.42125883556548
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ( Node ) n ) ;
rank: 378
score: 99.56742640904018
patch: Node < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; ;
rank: 378
score: 99.55812026515152
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , fall CaMeL Through ) ;
rank: 378
score: 99.55049641927083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; * /
rank: 378
score: 99.5362548828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return next ; }
rank: 378
score: 99.49533081054688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ref ) ;
rank: 378
score: 99.45882515285327
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new compute CaMeL Following ( n ) ) ;
rank: 378
score: 99.421142578125
patch: Operator fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 379
score: 99.55048659752156
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) ) ;
rank: 379
score: 99.54349975585937
patch: String fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 379
score: 99.53609525240384
patch: if ( next == null || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 379
score: 99.52321144386575
patch: fall CaMeL Through = null ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 379
score: 99.4211193266369
patch: try { Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 380
score: 99.57773263113839
patch: try { out CaMeL Edges . get ( 0 ) . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 380
score: 99.557958984375
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , node ) ;
rank: 380
score: 99.55042685231855
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ;
rank: 380
score: 99.54349190848214
patch: Node fall CaMeL Through = fall CaMeL Through * g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 380
score: 99.52309945913461
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 380
score: 99.49518291766827
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent . null ) ;
rank: 380
score: 99.42108513327206
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( children ) ;
rank: 381
score: 99.56656547214673
patch: Node < Node < Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 381
score: 99.55001068115234
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 381
score: 99.54316057477679
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ,
rank: 381
score: 99.5355557528409
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 )
rank: 382
score: 99.57766197467673
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } } }
rank: 382
score: 99.56638816550925
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ; }
rank: 382
score: 99.55756667564656
patch: Set < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 382
score: 99.54979654947917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) , true ) ;
rank: 382
score: 99.54294162326389
patch: Node fall CaMeL Through = compute CaMeL Following ( fall CaMeL Through . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 382
score: 99.53530649038461
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) + 0 , n ) ;
rank: 382
score: 99.52291304976852
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 382
score: 99.4947509765625
patch: Node fall CaMeL Through && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 382
score: 99.45795355902777
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 382
score: 99.42103160511364
patch: T fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 383
score: 99.57743983114919
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) == null ;
rank: 383
score: 99.56608634159483
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return n ; }
rank: 383
score: 99.55745755709134
patch: Node node = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 383
score: 99.52269603587963
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . compute ( n ) ) ) ;
rank: 383
score: 99.49448939732143
patch: compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 383
score: 99.45790318080357
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Parent ( ) ) ;
rank: 383
score: 99.42097611860795
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( $NUMBER$ ) ) ;
rank: 384
score: 99.5771905307112
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ) ;
rank: 384
score: 99.56566510881696
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ; }
rank: 384
score: 99.55735677083334
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ) ;
rank: 384
score: 99.54916381835938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ; }
rank: 384
score: 99.54186072716347
patch: Di CaMeL Graph CaMeL Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 384
score: 99.535185546875
patch: List < Token > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 384
score: 99.42069868607955
patch: try { if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 385
score: 99.5771484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) , n . get CaMeL Next ( ) == null
rank: 385
score: 99.55726207386364
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Destination ( ) ) ;
rank: 385
score: 99.54171142578124
patch: int fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 385
score: 99.53513590494792
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) - 0 ) ;
rank: 385
score: 99.49399820963542
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( compute ( n ) ) ;
rank: 385
score: 99.45644309303977
patch: Reduction fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 385
score: 99.42068614130434
patch: try { compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 386
score: 99.57711226851852
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 386
score: 99.56526131465517
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ==
rank: 386
score: 99.55716145833334
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 386
score: 99.54839680989583
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) ) ;
rank: 386
score: 99.54165414663461
patch: int fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 386
score: 99.53500511532738
patch: List < Token >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 386
score: 99.52144191576087
patch: System Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 386
score: 99.49399038461539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( fall CaMeL Through == null ) {
rank: 386
score: 99.42059616815476
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . pop ( ) ) ;
rank: 387
score: 99.57698567708333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Value ( ) ) ;
rank: 387
score: 99.55709838867188
patch: Node out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 387
score: 99.54751291582662
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Last ( ) ) ) ;
rank: 387
score: 99.52141864483173
patch: int fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 387
score: 99.45627663352273
patch: { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 387
score: 99.4201993075284
patch: ) fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 388
score: 99.546826171875
patch: Node < Object > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 388
score: 99.540380859375
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 388
score: 99.52130126953125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ; }
rank: 388
score: 99.49379660866477
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get ( n ) ) ;
rank: 388
score: 99.45590209960938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = false ;
rank: 388
score: 99.420166015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n . }
rank: 389
score: 99.57661946614583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( null ) ) ;
rank: 389
score: 99.55682842548077
patch: if ( fall CaMeL Through ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return fall CaMeL Through ;
rank: 389
score: 99.54682268415179
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Parent ( ) ) ;
rank: 389
score: 99.54031937210648
patch: Node fall CaMeL Through = out CaMeL Edges . get ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 389
score: 99.5346210186298
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) + 1 ) ;
rank: 389
score: 99.52114076967592
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } return fall CaMeL Through ;
rank: 389
score: 99.49366173377403
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , null ) ) ;
rank: 390
score: 99.57661365327381
patch: Node < Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 390
score: 99.56446154364224
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; if ( next != null ) return fall CaMeL Through ;
rank: 390
score: 99.55664876302083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , {
rank: 390
score: 99.54655852141204
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , n . get CaMeL Next ( ) ) ;
rank: 390
score: 99.53450150923295
patch: out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 390
score: 99.5209327980324
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) , ;
rank: 390
score: 99.45578931725544
patch: Node fall CaMeL Through = this . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 391
score: 99.56436157226562
patch: try { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 391
score: 99.55643265335648
patch: expr = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 391
score: 99.54653635332662
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 391
score: 99.53983561197917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( n ) ) ;
rank: 391
score: 99.52093036358173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . create ( ) ) ;
rank: 391
score: 99.4935302734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , type ) ) ;
rank: 391
score: 99.41959281589673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n 1 ) ) ;
rank: 392
score: 99.57611846923828
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . FUNCTION ) {
rank: 392
score: 99.56427873883929
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; node = fall CaMeL Through ;
rank: 392
score: 99.55630030776516
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ; }
rank: 392
score: 99.54638671875
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ; }
rank: 392
score: 99.53982204861111
patch: if ( fall CaMeL Through ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return fall CaMeL Through ; }
rank: 392
score: 99.53407796223958
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 392
score: 99.52081008184524
patch: fall CaMeL Through . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 392
score: 99.49343637319711
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , edge ) ) ;
rank: 392
score: 99.45546025815217
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n , fall CaMeL Through ) ;
rank: 392
score: 99.41957310267857
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) .
rank: 393
score: 99.56424967447917
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) , n ) ;
rank: 393
score: 99.55622100830078
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , true ) ) ;
rank: 393
score: 99.5205965909091
patch: break fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 394
score: 99.55618851273148
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , Node . UNCOND ) ;
rank: 394
score: 99.5392596905048
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ( ) . get CaMeL Value ( ) ;
rank: 394
score: 99.52052734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( end ( n ) ) ) ;
rank: 394
score: 99.49312337239583
patch: try { Node fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 394
score: 99.4546231356534
patch: K fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 395
score: 99.56397545855978
patch: Node < Object , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 395
score: 99.54628208705357
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Site ( ) ) ;
rank: 395
score: 99.53307653356481
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else { break ;
rank: 395
score: 99.49301382211539
patch: if ( fall CaMeL Through != null ) { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 395
score: 99.4541652513587
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Code ( ) ) ;
rank: 395
score: 99.41855003720238
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } finally {
rank: 396
score: 99.56381330818965
patch: Node < Node < Node < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 396
score: 99.55543736049107
patch: Node type = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 396
score: 99.54608744959677
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 396
score: 99.4927978515625
patch: Node fall CaMeL Through = new = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 396
score: 99.45412375710227
patch: ? fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 397
score: 99.5756103515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( true ) ) ;
rank: 397
score: 99.56377301897321
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; return out CaMeL Edges . get ( 0 ) ;
rank: 397
score: 99.53874602141204
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; out CaMeL Edges . add ( next ) ;
rank: 397
score: 99.4540378736413
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( n ) ) ;
rank: 397
score: 99.41843133223684
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + false ) ;
rank: 398
score: 99.57560729980469
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else { return n ;
rank: 398
score: 99.55489501953124
patch: if ( n . has CaMeL Children ( ) && n . has CaMeL Children ( ) ) {
rank: 398
score: 99.532822265625
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; if ( next != null ) {
rank: 398
score: 99.49275716145833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , count ) ;
rank: 399
score: 99.57555758568549
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; out CaMeL Edges . get ( 0 ) .
rank: 399
score: 99.55430947580645
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ; }
rank: 399
score: 99.532666015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Out CaMeL Edges ( ) ;
rank: 399
score: 99.5188671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) , n ) ;
rank: 399
score: 99.4923095703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , this ) ) ;
rank: 399
score: 99.41830842391305
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return fall CaMeL Through ) ;
rank: 400
score: 99.56338614004629
patch: Node < Node , Branch >> out CaMeL Edges . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 400
score: 99.54540201822917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Source ( ) , true ) ;
rank: 400
score: 99.53810546875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 400
score: 99.532470703125
patch: } else if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 400
score: 99.51845703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( in ( n ) ) ) ;
rank: 400
score: 99.45226520040761
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( float ) n ) ;
rank: 400
score: 99.41823412024456
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; try {
rank: 401
score: 99.57527669270833
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 401
score: 99.55386555989584
patch: try { return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 401
score: 99.54501577524039
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , null , false ) ;
rank: 401
score: 99.5377197265625
patch: Node fall CaMeL Through = out CaMeL Edges . next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 401
score: 99.53233642578125
patch: Node next = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 401
score: 99.518232421875
patch: for ( Node fall CaMeL Through : try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 401
score: 99.4920654296875
patch: Node fall CaMeL Through -= try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 401
score: 99.45188598632812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching compute CaMeL Following ( n ) ;
rank: 402
score: 99.57525634765625
patch: final List < Di CaMeL Graph CaMeL Edge < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 402
score: 99.56265625
patch: Node < Di CaMeL Graph CaMeL Edge >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 402
score: 99.544921875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ;
rank: 402
score: 99.5179951985677
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ; }
rank: 402
score: 99.41795813519022
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , fall CaMeL Through , n ) ;
rank: 403
score: 99.57501220703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) == null ) ;
rank: 403
score: 99.55317034040179
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) == null
rank: 403
score: 99.53720925071023
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : out CaMeL Edges ;
rank: 403
score: 99.532119140625
patch: Node fall CaMeL Through : try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 404
score: 99.56230024857955
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , (
rank: 404
score: 99.54486762152777
patch: Node < Node <= Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 404
score: 99.5319354717548
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . has CaMeL Children ( ) ) {
rank: 404
score: 99.4910137469952
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this . false ) ;
rank: 404
score: 99.41786887428977
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , compute ( n ) ) ;
rank: 405
score: 99.57467447916666
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else ) ;
rank: 405
score: 99.535888671875
patch: Node fall CaMeL Through = ( Node ) Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 405
score: 99.53189086914062
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) ;
rank: 405
score: 99.517822265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ;
rank: 405
score: 99.49045034555289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , if $NUMBER$ true ) ;
rank: 405
score: 99.45124955610795
patch: Event fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 405
score: 99.4177013578869
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; Node compute CaMeL Following ( n ) ;
rank: 406
score: 99.56099446614583
patch: Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 406
score: 99.54471140894397
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n . get CaMeL Next ( ) ) ;
rank: 406
score: 99.53556315104167
patch: Node fall CaMeL Through = ( Node < Branch >> ) g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 406
score: 99.49031982421874
patch: Node parent = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 406
score: 99.45106090198864
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( size ) ) ;
rank: 406
score: 99.41767578125
patch: Node try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 407
score: 99.57437133789062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( next == null ) {
rank: 407
score: 99.5609130859375
patch: Node < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 407
score: 99.54442545572917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . n ) ;
rank: 407
score: 99.53555410879629
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) , out CaMeL Edges ) ;
rank: 407
score: 99.49027193509616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n , next ) ) ;
rank: 407
score: 99.41754760742188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( filter ( n ) ) ;
rank: 408
score: 99.56086948939732
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ) ;
rank: 408
score: 99.544375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) , false ) ;
rank: 408
score: 99.49005448190789
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) )
rank: 408
score: 99.41719193892045
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . format ( n ) ) ;
rank: 409
score: 99.56085205078125
patch: Node try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 409
score: 99.54416128305289
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ) ) ;
rank: 409
score: 99.53452329282408
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . iterator ( ) . next ( ) ) ;
rank: 409
score: 99.53102620442708
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } }
rank: 409
score: 99.489677734375
patch: Node fall CaMeL Through = ( short ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 409
score: 99.45094992897727
patch: Map fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 410
score: 99.57361421130952
patch: g CaMeL Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 410
score: 99.56083461216518
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) == null ) ;
rank: 410
score: 99.5439689390121
patch: System . out . println ( $STRING$ ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 410
score: 99.53432395241477
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 )
rank: 410
score: 99.53073354867789
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) . get CaMeL Value ( ) ) ;
rank: 410
score: 99.45079456676136
patch: void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 411
score: 99.55214991714016
patch: Node try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 411
score: 99.543876953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return false ;
rank: 411
score: 99.51607082201087
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ;
rank: 411
score: 99.48951171875
patch: Node fall CaMeL Through = new ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 411
score: 99.41576430376838
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ) ;
rank: 412
score: 99.57315800107759
patch: synchronized ( out CaMeL Edges ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 412
score: 99.56047453703704
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) ; remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 412
score: 99.55205620659723
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , ) ;
rank: 412
score: 99.53386981670673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching * g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 412
score: 99.53048001802884
patch: Node n = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 412
score: 99.51595052083333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ;
rank: 412
score: 99.41543433779762
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n , true ) ;
rank: 413
score: 99.55205426897321
patch: Node Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 413
score: 99.54343959263393
patch: System . out . println ( $STRING$ + n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ; return null ; }
rank: 413
score: 99.53035481770833
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; return n ;
rank: 413
score: 99.41532566236413
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through ;
rank: 414
score: 99.5520440463362
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching : Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 414
score: 99.5434039572011
patch: return null ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 414
score: 99.53378693953805
patch: Node fall CaMeL Through = ( Node ) n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 414
score: 99.4892069498698
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , nodes ) ;
rank: 414
score: 99.45009543678977
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n fall CaMeL Through ) ;
rank: 414
score: 99.41498093377976
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . get ( ) ) ;
rank: 415
score: 99.55991036551339
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) * g CaMeL Node . get CaMeL Value ( ) ;
rank: 415
score: 99.55184199892241
patch: Vector < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 415
score: 99.54337158203126
patch: } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 415
score: 99.53030831473214
patch: fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 415
score: 99.51515549879808
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 415
score: 99.48910522460938
patch: fall CaMeL Through . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 415
score: 99.44990678267045
patch: Queue fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 415
score: 99.41477272727273
patch: Sibling fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 416
score: 99.5598828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , - 0 ) ;
rank: 416
score: 99.5518211082176
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ; }
rank: 416
score: 99.54307819234914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Ancestor ( 0 ) ) ;
rank: 416
score: 99.53345788043478
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL First CaMeL Child ( ) ;
rank: 416
score: 99.530263671875
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 416
score: 99.51488353587963
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ;
rank: 416
score: 99.44990370008681
patch: final int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 416
score: 99.41459728422619
patch: fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 417
score: 99.57240738407258
patch: List < Di CaMeL Graph CaMeL Node < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 417
score: 99.5515654592803
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , g CaMeL Node ) ;
rank: 417
score: 99.533447265625
patch: Node fall CaMeL Through = fall CaMeL Through + try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 417
score: 99.53016493055556
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; case Token . FUNCTION :
rank: 417
score: 99.514697265625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally { }
rank: 417
score: 99.48841924252717
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent ) ;
rank: 417
score: 99.41443980823864
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through ) ;
rank: 418
score: 99.55916654146634
patch: Node < Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 418
score: 99.54292353877315
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , true ) ) ;
rank: 418
score: 99.5145263671875
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 418
score: 99.41435161389802
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( start ( ) ) ;
rank: 419
score: 99.571923828125
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else {
rank: 419
score: 99.55909264605978
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; return out CaMeL Edges ;
rank: 419
score: 99.54289027622768
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through , false ) ;
rank: 419
score: 99.51402791341145
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( nodes , n ) ) ;
rank: 419
score: 99.4492420014881
patch: Iterator < ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 419
score: 99.41416864809783
patch: try { try { try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 420
score: 99.55892280910327
patch: try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 420
score: 99.55133463541667
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND )
rank: 420
score: 99.5322998046875
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) ;
rank: 420
score: 99.513427734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ;
rank: 420
score: 99.44899615119485
patch: Rectangle fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 421
score: 99.57132844002017
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch extends Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 421
score: 99.55111694335938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , $STRING$ ) ;
rank: 421
score: 99.52849872295673
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; ;
rank: 421
score: 99.48715209960938
patch: try . Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 421
score: 99.41356136924342
patch: loop = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 422
score: 99.57113752693965
patch: out CaMeL Edges . add ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 422
score: 99.55105590820312
patch: node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 422
score: 99.52835787259616
patch: fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 422
score: 99.51263671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ( int ) n ) ) ;
rank: 422
score: 99.48709869384766
patch: Node fall CaMeL Through = ( Node ) compute CaMeL Following ( n ) ;
rank: 422
score: 99.44859095982143
patch: final List < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 422
score: 99.41335577713816
patch: try { void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 423
score: 99.57110005040323
patch: try { List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 423
score: 99.55104018702652
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , out CaMeL Edges ) ;
rank: 423
score: 99.52814453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if ( next
rank: 423
score: 99.486416015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Id ( ) ) ;
rank: 423
score: 99.4483058763587
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( fall CaMeL Through )
rank: 423
score: 99.41335227272727
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching $NUMBER$ ( compute CaMeL Following ( n ) ) ;
rank: 424
score: 99.57109917534723
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ) ;
rank: 424
score: 99.5579250169837
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ; }
rank: 424
score: 99.55078938802083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( current ) ) ;
rank: 424
score: 99.54154459635417
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 424
score: 99.53171115451389
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) = out CaMeL Edges . get ( 0 ) ;
rank: 424
score: 99.51248168945312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( end ( ) ) ) ;
rank: 424
score: 99.48633751502403
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node . null ) ;
rank: 424
score: 99.44815063476562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ,
rank: 424
score: 99.41323852539062
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 425
score: 99.57103430706522
patch: final Branch fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 425
score: 99.55789620535714
patch: if ( out CaMeL Edges . size ( ) > 1 ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; }
rank: 425
score: 99.54151204427083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) , node ) ;
rank: 425
score: 99.53163213315217
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( ) ) ;
rank: 425
score: 99.5274658203125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through ;
rank: 425
score: 99.48629995492789
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , $STRING$ , true ) ;
rank: 425
score: 99.44808959960938
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 425
score: 99.41323020241477
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ||
rank: 426
score: 99.55075412326389
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 426
score: 99.54141671316964
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Parent ( ) ) ;
rank: 426
score: 99.51224459134616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . resolve ( ) ) ;
rank: 426
score: 99.48618570963542
patch: Node fall CaMeL Through = new Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 426
score: 99.44768415178571
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true , null ) ;
rank: 427
score: 99.550615234375
patch: Node n = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 427
score: 99.541357421875
patch: Node < Integer > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 427
score: 99.44744318181819
patch: I fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 427
score: 99.41315252130681
patch: Node fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 428
score: 99.570556640625
patch: out CaMeL Edges . get ( 0 ) . if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 428
score: 99.55058942522321
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL
rank: 428
score: 99.5410625751202
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } ;
rank: 428
score: 99.53103298611111
patch: Node fall CaMeL Through = ( Node < Branch >> ) Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 428
score: 99.486083984375
patch: fall CaMeL Through = ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 428
score: 99.44741423233695
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching n ( compute CaMeL Following ( n ) ) ;
rank: 429
score: 99.57027312247983
patch: if ( out CaMeL Edges . size ( ) == 1 ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 429
score: 99.5572979266827
patch: Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through ;
rank: 429
score: 99.550537109375
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . CONTINUE ) {
rank: 429
score: 99.53096516927083
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 429
score: 99.52681640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; {
rank: 429
score: 99.5116015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , - 1 ) ;
rank: 429
score: 99.486083984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get ( 0 ) ) ;
rank: 429
score: 99.44725952148437
patch: try { final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 430
score: 99.55032552083334
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } return n ;
rank: 430
score: 99.54058430989583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 430
score: 99.52674278846153
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n + 0 ) ;
rank: 430
score: 99.51116943359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , ;
rank: 430
score: 99.48593374399039
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ) ;
rank: 430
score: 99.41289728338069
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( info ) ) ;
rank: 431
score: 99.56901550292969
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 431
score: 99.5565625
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) { return n ;
rank: 431
score: 99.5503165952621
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , out CaMeL Edges ) ; }
rank: 431
score: 99.54025065104166
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) , n ) ;
rank: 431
score: 99.5308837890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , name ) ;
rank: 431
score: 99.52666766826923
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( 0 ) ;
rank: 431
score: 99.51057235054348
patch: } fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 431
score: 99.44690472146739
patch: ? else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 431
score: 99.41269066220238
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( ) ) ;
rank: 432
score: 99.54000854492188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) * / ) ;
rank: 432
score: 99.52650035511364
patch: Preconditions . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 432
score: 99.5104268391927
patch: Node fall CaMeL Through = new Node ( n . get CaMeL First ( ) . get CaMeL Value ( ) ) ;
rank: 432
score: 99.44658868963069
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; if ( fall CaMeL Through != null ) {
rank: 432
score: 99.4126864346591
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ?
rank: 433
score: 99.55628458658855
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 433
score: 99.5399969692888
patch: fall CaMeL Through = true ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 433
score: 99.53078206380208
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Type ( ) ;
rank: 433
score: 99.48541259765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . null ) ;
rank: 433
score: 99.446533203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , current ) ;
rank: 433
score: 99.41258480674342
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try /
rank: 434
score: 99.5501937866211
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ; }
rank: 434
score: 99.53976236979166
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Parent ( ) ) ) ;
rank: 434
score: 99.526103515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n , ) ;
rank: 434
score: 99.4465267783717
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Node , n ) ;
rank: 434
score: 99.4124172044837
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ; ;
rank: 435
score: 99.55017852783203
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 435
score: 99.53953269675925
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ) ;
rank: 435
score: 99.51018817608173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . next ( ) ) ;
rank: 435
score: 99.48529052734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; Node {
rank: 435
score: 99.4463421365489
patch: if ( ! fall CaMeL Through ) fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 435
score: 99.41207885742188
patch: try ; = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 436
score: 99.5553668478261
patch: Node < Node , Token >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 436
score: 99.5390625
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( this ) ) ;
rank: 436
score: 99.51003793569711
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally { ; }
rank: 436
score: 99.48514811197917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ref ) ) ;
rank: 436
score: 99.44631125710227
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , Node fall CaMeL Through ) ;
rank: 436
score: 99.41204279119319
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Source ( n ) ) ;
rank: 437
score: 99.56791469029018
patch: out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 437
score: 99.55523390997024
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ( 0 ) ;
rank: 437
score: 99.54993614783653
patch: if ( fall CaMeL Through || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 437
score: 99.53010697798295
patch: int fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 437
score: 99.525439453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Destination ( ) ) ;
rank: 437
score: 99.4849384014423
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this . n ) ;
rank: 437
score: 99.4450350674716
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( scope ) ) ;
rank: 438
score: 99.56784292367789
patch: if ( out CaMeL Edges . size ( ) == 1 ) remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 438
score: 99.55502717391305
patch: Node < Token , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 438
score: 99.53008355034723
patch: Node next = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 438
score: 99.52542818509616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; try { break ;
rank: 438
score: 99.4446437669837
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 438
score: 99.41128394717262
patch: try ; try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 439
score: 99.5548565204327
patch: if ( n . has CaMeL Children ( ) ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 439
score: 99.54982688210227
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ) ; return fall CaMeL Through ;
rank: 439
score: 99.53825577445652
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Parent ( ) ;
rank: 439
score: 99.52965856481481
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) . next ( ) ;
rank: 439
score: 99.48459879557292
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( next , compute CaMeL Following ( n ) ) ;
rank: 439
score: 99.41128394717262
patch: Node fall CaMeL Through = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 440
score: 99.56732768397177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; try
rank: 440
score: 99.5498046875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return n ; }
rank: 440
score: 99.53802490234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . n ) ;
rank: 440
score: 99.52962239583333
patch: fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ; }
rank: 440
score: 99.5088360126202
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( 0 ) ) ;
rank: 440
score: 99.48423258463542
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 440
score: 99.44446910511364
patch: Node fall CaMeL Through ; else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 440
score: 99.41105143229167
patch: try { ; = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 441
score: 99.5673119329637
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 441
score: 99.55447265625
patch: Node < Node < Type , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 441
score: 99.54969075520833
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ;
rank: 441
score: 99.53739289314517
patch: Node < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 441
score: 99.5251697358631
patch: List < String >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 441
score: 99.50880784254808
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Value ( ) , n . get CaMeL Value ( ) ) ;
rank: 441
score: 99.48419189453125
patch: Node fall CaMeL Through = parent . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 441
score: 99.44413618607955
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following (
rank: 441
score: 99.41082763671875
patch: try ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 442
score: 99.53738968460648
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , false ) ) ;
rank: 442
score: 99.508759765625
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 442
score: 99.41068115234376
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( LT ( n ) ) ;
rank: 443
score: 99.55431640625
patch: Node < Node , Branch >> out CaMeL Edges = this . g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 443
score: 99.53719388521634
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return false ; }
rank: 443
score: 99.52866774338942
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 443
score: 99.52510892427884
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; try {
rank: 443
score: 99.48366292317708
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , filter ) ) ;
rank: 444
score: 99.5542704264323
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( out CaMeL Edges . get ( 0 ) ) ;
rank: 444
score: 99.54958274147727
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . BLOCK ) {
rank: 444
score: 99.53717041015625
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 444
score: 99.52840169270833
patch: Node fall CaMeL Through = ( Node , n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 444
score: 99.52433268229167
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Destination ( ) ;
rank: 444
score: 99.4427157315341
patch: Chunk fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 444
score: 99.41015625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false , true ) ;
rank: 445
score: 99.56632206357759
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } ) ;
rank: 445
score: 99.55414109002976
patch: List < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 445
score: 99.5371514682112
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 445
score: 99.52792593149039
patch: Node fall CaMeL Through = g CaMeL Node , fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 445
score: 99.524169921875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return this ;
rank: 445
score: 99.5076395670573
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 445
score: 99.4833984375
patch: Node fall CaMeL Through = ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 446
score: 99.56626953125
patch: Node < Node > g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 446
score: 99.55390986689815
patch: return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 446
score: 99.54934790826613
patch: Node node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 446
score: 99.52757850060097
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Last CaMeL Child ( ) ;
rank: 446
score: 99.50685546875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 446
score: 99.40963309151786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following $NUMBER$ n ) ;
rank: 447
score: 99.55368874289773
patch: Node fall CaMeL Through = out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 447
score: 99.54922977570564
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , node ) ;
rank: 447
score: 99.5230859375
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 447
score: 99.5067889873798
patch: String fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 447
score: 99.40940163352273
patch: Slot fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 448
score: 99.5491943359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( next ) ) ;
rank: 448
score: 99.53648024338942
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; else
rank: 448
score: 99.50657301682692
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( ) ) ;
rank: 448
score: 99.482890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL State ( ) ) ;
rank: 448
score: 99.40922407670455
patch: View fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 449
score: 99.55357421875
patch: Node < Node < Node , Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 449
score: 99.53561197916666
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 449
score: 99.52275390625
patch: fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 449
score: 99.44132080078126
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n , n ) ) ;
rank: 449
score: 99.4090576171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . Token ( n ) ) ;
rank: 450
score: 99.5534435453869
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ;
rank: 450
score: 99.54908098493304
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , true ) ;
rank: 450
score: 99.52699279785156
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Value ( ) ;
rank: 450
score: 99.52272435238487
patch: Preconditions . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 450
score: 99.5063671875
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 450
score: 99.44126198508523
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 450
score: 99.40870250355114
patch: Loop fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 451
score: 99.56448462701613
patch: out CaMeL Edges . get ( 0 ) . if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 451
score: 99.549072265625
patch: head = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 451
score: 99.52664317255434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . next ( ) ) ;
rank: 451
score: 99.52255859375
patch: List < Node >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 451
score: 99.48236553485577
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , filter ) ;
rank: 451
score: 99.4407958984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ! fall CaMeL Through ) ;
rank: 451
score: 99.408203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , $STRING$ ) ;
rank: 452
score: 99.56442599826389
patch: out CaMeL Edges . add ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 452
score: 99.55284359580592
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 452
score: 99.54896897536058
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n . get CaMeL Next ( ) ) ) ;
rank: 452
score: 99.52634791324013
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Next ( ) ) ;
rank: 452
score: 99.50620680588942
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( $NUMBER$ ) ) ;
rank: 452
score: 99.440673828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( int ) fall CaMeL Through ) ;
rank: 453
score: 99.5526710792824
patch: if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n ) ;
rank: 453
score: 99.5488990045363
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , fall CaMeL Through ) ; }
rank: 453
score: 99.5224609375
patch: Preconditions . set CaMeL State ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 453
score: 99.50615900213069
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ;
rank: 453
score: 99.4822998046875
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else {
rank: 453
score: 99.44062732514881
patch: final Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 453
score: 99.40785910866477
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) , n ) ;
rank: 454
score: 99.56403219288794
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } }
rank: 454
score: 99.54885525173611
patch: try { try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 454
score: 99.50600179036458
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Value ( ) . get CaMeL Value ( ) ) ;
rank: 455
score: 99.55239035866477
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , g CaMeL Node ) ) ;
rank: 455
score: 99.52594866071429
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges , n ) ;
rank: 455
score: 99.44037828947368
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , type ) ;
rank: 456
score: 99.55213512073864
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 456
score: 99.54860924030173
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 456
score: 99.53480266702586
patch: if ( fall CaMeL Through ) { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 456
score: 99.525537109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through . get CaMeL Parent ( ) ) ;
rank: 456
score: 99.50424194335938
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } ) ;
rank: 456
score: 99.40707542782738
patch: try { try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 457
score: 99.55208333333333
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ; }
rank: 457
score: 99.548583984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null Node . FUNCTION
rank: 457
score: 99.53478582974138
patch: compute CaMeL Following ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 457
score: 99.52544921875
patch: Node element = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 457
score: 99.521240234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Destination ( ) ) ;
rank: 457
score: 99.50349609375
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 457
score: 99.48168006310097
patch: if ( fall CaMeL Through != null && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 457
score: 99.439697265625
patch: node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 457
score: 99.40679931640625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true ) ;
rank: 458
score: 99.56332632211539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if ( next ;
rank: 458
score: 99.55198386863425
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ( 0 ) . get CaMeL Destination ( ) ;
rank: 458
score: 99.54826136997768
patch: return n . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 458
score: 99.5253397623698
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 458
score: 99.4813922384511
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , node ) ) ;
rank: 458
score: 99.40678267045455
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( id ) ) ;
rank: 459
score: 99.56236049107143
patch: try { Node next = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 459
score: 99.55185171274039
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) . get CaMeL Next ( ) ) ;
rank: 459
score: 99.5476310483871
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n .
rank: 459
score: 99.534423828125
patch: return fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 459
score: 99.52532489483173
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , parent ) ;
rank: 459
score: 99.52056640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return null ;
rank: 459
score: 99.481259765625
patch: if ( fall CaMeL Through != null ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 459
score: 99.4393643465909
patch: Bucket fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 459
score: 99.40664527529762
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following = n ) ;
rank: 460
score: 99.5622979525862
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) == Branch . UNCOND ) ;
rank: 460
score: 99.54762369791666
patch: else try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 460
score: 99.52524977463942
patch: } else { return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 460
score: 99.51966796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n ;
rank: 460
score: 99.50315504807692
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get = n ) ;
rank: 460
score: 99.43936011904762
patch: if ( ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 461
score: 99.55156915838069
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == null ) ;
rank: 461
score: 99.54752604166667
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , ) ) ;
rank: 461
score: 99.53414756373355
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 461
score: 99.502958984375
patch: Node fall CaMeL Through = n . get ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 461
score: 99.48067533052884
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ) ;
rank: 461
score: 99.43915349786931
patch: Field fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 462
score: 99.5515234375
patch: Node < Branch > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 462
score: 99.52491295855978
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges , g CaMeL Node ) ;
rank: 462
score: 99.51906419836956
patch: } else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 462
score: 99.480595703125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ,
rank: 462
score: 99.43895766314338
patch: Token fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 463
score: 99.56096281828704
patch: List < Di CaMeL Graph CaMeL Edge == Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 463
score: 99.55144794170673
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) , null ) ;
rank: 463
score: 99.54747663225446
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . has CaMeL Children ( ) ) ) ;
rank: 463
score: 99.53384164663461
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Last ( ) ) ;
rank: 463
score: 99.5181551846591
patch: } } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 463
score: 99.502724609375
patch: Node * / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 463
score: 99.4805908203125
patch: Node fall CaMeL Through || try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 463
score: 99.40631462545956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( key ) ;
rank: 464
score: 99.55136108398438
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ) ;
rank: 464
score: 99.53372896634616
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n . get CaMeL Parent ( ) ) ;
rank: 464
score: 99.48001953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ,
rank: 464
score: 99.43793279474431
patch: Double fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 464
score: 99.40615012428977
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( key ) ) ;
rank: 465
score: 99.5513226052989
patch: Control CaMeL Flow CaMeL Analysis . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 465
score: 99.54739583333334
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ; break ;
rank: 465
score: 99.53348482572116
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 465
score: 99.50264115767045
patch: System fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 465
score: 99.43773304332386
patch: Member fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 465
score: 99.40578391335227
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( level ) ) ;
rank: 466
score: 99.54737955729166
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n
rank: 466
score: 99.53336307920259
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) , false ) ) ;
rank: 466
score: 99.517275390625
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 466
score: 99.50217692057292
patch: Node * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 466
score: 99.40528506324405
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true , false ) ;
rank: 467
score: 99.54731602822581
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } break ;
rank: 467
score: 99.53328804347827
patch: } Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 467
score: 99.5172119140625
patch: Node -- out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 467
score: 99.501943359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) . get ;
rank: 467
score: 99.4051577919408
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + 0 ) ;
rank: 468
score: 99.55068359375
patch: try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 468
score: 99.53280436197916
patch: } else if ( n . has CaMeL Children ( ) ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 468
score: 99.524169921875
patch: Node fall CaMeL Through = this . Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 468
score: 99.50177360983456
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 468
score: 99.47952035757211
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , null ) ;
rank: 468
score: 99.40510389539931
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 469
score: 99.55888148716518
patch: Node try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 469
score: 99.550556640625
patch: Node < Node < Node , Integer > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 469
score: 99.54715983072917
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) . has CaMeL Children ( ) ) {
rank: 469
score: 99.53240966796875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , callback ) ;
rank: 469
score: 99.5240234375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) . get CaMeL Value ( ) ;
rank: 469
score: 99.5014117697011
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } ;
rank: 469
score: 99.47946999289773
patch: Node fall CaMeL Through = new Node ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 469
score: 99.43690795898438
patch: Node < Object > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 469
score: 99.4047607421875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try
rank: 470
score: 99.55858435997597
patch: break try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 470
score: 99.54706217447917
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ) ;
rank: 470
score: 99.51673380533855
patch: Node out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 470
score: 99.47939828725961
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ,
rank: 470
score: 99.40458751860119
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , this ) ;
rank: 471
score: 99.54704938616071
patch: Node index = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 471
score: 99.52346934442934
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following : g CaMeL Node ) ;
rank: 471
score: 99.501005859375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ) ;
rank: 471
score: 99.47903603001645
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 471
score: 99.43622147409539
patch: Node fall CaMeL Through = n . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 472
score: 99.54951171875
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; }
rank: 472
score: 99.5469741821289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , ref ) ;
rank: 472
score: 99.53181457519531
patch: Node < Node > fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 472
score: 99.52333803530092
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; if ( next == fall CaMeL Through ) {
rank: 472
score: 99.50077311197917
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) + n ) ;
rank: 472
score: 99.47903575067934
patch: Node { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 472
score: 99.40425248579545
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( 1 ) ) ;
rank: 473
score: 99.55776742788461
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n , n ) ) ;
rank: 473
score: 99.54943359375
patch: Node < Node < Node , Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 473
score: 99.54689127604166
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . CONTINUE ) {
rank: 473
score: 99.53177195581897
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node ) ;
rank: 473
score: 99.52296799879808
patch: Node fall CaMeL Through = super . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 473
score: 99.47879028320312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) + false ) ;
rank: 473
score: 99.43603515625
patch: Node fall CaMeL Through = new Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 473
score: 99.40268380301339
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 474
score: 99.54685756138393
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ) ;
rank: 474
score: 99.53175455729166
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 474
score: 99.51479085286458
patch: Node next = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Destination ( ) ;
rank: 474
score: 99.478515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . null ) ;
rank: 474
score: 99.4024593955592
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , edge ) ;
rank: 475
score: 99.54916381835938
patch: Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 475
score: 99.54681803385417
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION || n . has CaMeL Children ( ) ) {
rank: 475
score: 99.52288140190973
patch: Object fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 475
score: 99.514638671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ; }
rank: 475
score: 99.50004245923913
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( g CaMeL Node ) ) ;
rank: 476
score: 99.54879760742188
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 476
score: 99.53168194110577
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ;
rank: 476
score: 99.5225078876202
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , cur CaMeL Cfg ) ) ;
rank: 476
score: 99.4782245342548
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this . true ) ;
rank: 476
score: 99.43555850074405
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching $NUMBER$ compute CaMeL Following ( n ) ;
rank: 476
score: 99.40203302556819
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ! compute CaMeL Following ( n ) ) ;
rank: 477
score: 99.55712890625
patch: if ( out CaMeL Edges . size ( ) == 1 ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 477
score: 99.54833984375
patch: Node < Node >> out CaMeL Edges . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 477
score: 99.53154754638672
patch: Node fall CaMeL Through = node . get CaMeL Next ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 477
score: 99.51457868303571
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching . compute CaMeL Following ( n ) ;
rank: 477
score: 99.49976603190105
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ; ;
rank: 477
score: 99.47815880408653
patch: Node fall CaMeL Through = ( ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 477
score: 99.4352694424716
patch: node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 477
score: 99.40156482514881
patch: try { if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) )
rank: 478
score: 99.51457776521382
patch: Node next = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 478
score: 99.499599609375
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 478
score: 99.4011166221217
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( next ) ;
rank: 479
score: 99.54744262695313
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 479
score: 99.54638671875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND )
rank: 479
score: 99.53113186743951
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Destination ( ) ) ;
rank: 479
score: 99.52224864130434
patch: Node fall CaMeL Through = ( Node ) out CaMeL Edges . get ( 0 ) . get ( 0 ) ;
rank: 479
score: 99.40083393297698
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) }
rank: 480
score: 99.53098366477273
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true ) ;
rank: 480
score: 99.52187278053977
patch: String fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 480
score: 99.51427734375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( $STRING$ ) ;
rank: 480
score: 99.49929942255434
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( parent , n ) ) ;
rank: 480
score: 99.43404715401786
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent , n ) ;
rank: 480
score: 99.40071244673295
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( line ) ) ;
rank: 481
score: 99.55558268229167
patch: Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 481
score: 99.54625355113636
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , fall CaMeL Through ;
rank: 481
score: 99.53097218480603
patch: fall CaMeL Through = false ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 481
score: 99.52163461538461
patch: int fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 481
score: 99.51416015625
patch: Node next = n . get CaMeL First ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 481
score: 99.49904296875
patch: fall CaMeL Through = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 481
score: 99.47749837239583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , Node ) ) ;
rank: 481
score: 99.43403894761029
patch: Element fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 481
score: 99.40022358141448
patch: try { boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 482
score: 99.55521824048913
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) == null
rank: 482
score: 99.54672475961539
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 1 ) . get CaMeL Type ( ) ;
rank: 482
score: 99.54616135817308
patch: Node node = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 482
score: 99.53096829927884
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ) ;
rank: 482
score: 99.5215625
patch: Node fall CaMeL Through = fall CaMeL Through + out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 482
score: 99.5140625
patch: List < T >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 482
score: 99.47732309194711
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; fall CaMeL Through =
rank: 482
score: 99.43379720052083
patch: ? Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 482
score: 99.40003159466912
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( count ) ;
rank: 483
score: 99.55512084960938
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } }
rank: 483
score: 99.54671577785327
patch: Node < Node , Integer > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 483
score: 99.54570480872844
patch: if ( n . get CaMeL Next ( ) . get CaMeL Value ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 483
score: 99.521513671875
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 483
score: 99.49859375
patch: Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 483
score: 99.477158203125
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ) ;
rank: 483
score: 99.43379350142045
patch: if ( n ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 484
score: 99.5550537109375
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) ) ;
rank: 484
score: 99.54646809895833
patch: Preconditions . if ( n . has CaMeL Children ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 484
score: 99.477099609375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ! node ) ;
rank: 484
score: 99.43364514802632
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( type , n ) ;
rank: 484
score: 99.39993722098214
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . current ( ) ) ;
rank: 485
score: 99.54617309570312
patch: Node fall CaMeL Through = this . g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 485
score: 99.54559326171875
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 485
score: 99.52139892578126
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) + 0 ;
rank: 485
score: 99.51393636067708
patch: if ( out CaMeL Edges . size ( ) > 1 && out CaMeL Edges . size ( ) == 1 ) {
rank: 485
score: 99.47701009114583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , level ) ;
rank: 485
score: 99.4332275390625
patch: Marker fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 485
score: 99.39956325954861
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false ) ;
rank: 486
score: 99.55479079026442
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 486
score: 99.54542495265152
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node (
rank: 486
score: 99.53062855113636
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false ) ;
rank: 486
score: 99.52085810122283
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 1 ) ;
rank: 486
score: 99.3989490327381
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . Context ( ) ) ;
rank: 487
score: 99.54503813244048
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Next ( ) ) ;
rank: 487
score: 99.53059387207031
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 487
score: 99.52070545014881
patch: Object fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 487
score: 99.5136210123698
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) , n ) ;
rank: 487
score: 99.4972265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; if ( )
rank: 487
score: 99.39878627232143
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following > n ) ;
rank: 488
score: 99.55399124710648
patch: List < Di CaMeL Graph CaMeL Node < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 488
score: 99.54472824622844
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION :
rank: 488
score: 99.54464721679688
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Next ( ) ) ; }
rank: 488
score: 99.512763671875
patch: Node fall CaMeL Through = this . g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 488
score: 99.4328845796131
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n , n ) ;
rank: 489
score: 99.5533916766827
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( this ) ) ;
rank: 489
score: 99.54463334517045
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Graph ( n ) ) ;
rank: 489
score: 99.54453716856061
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null Node . UNCOND ) ;
rank: 489
score: 99.53042497306035
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ( 0 ) , false ) ;
rank: 489
score: 99.47559655230978
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this ) ;
rank: 489
score: 99.43284009850544
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 489
score: 99.39800734747024
patch: Node < Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 490
score: 99.54453125
patch: Node < Node < String , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 490
score: 99.54436624461206
patch: if ( n . get CaMeL Type ( ) == Token . FUNCTION ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 490
score: 99.51259358723958
patch: Node ++ out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 490
score: 99.47559611002605
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $NUMBER$ , compute CaMeL Following ( n ) ) ;
rank: 490
score: 99.43272640830592
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent ) ;
rank: 490
score: 99.39727228338069
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ) ;
rank: 491
score: 99.54431522253788
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 491
score: 99.54405799278847
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == Branch . UNCOND ) ; }
rank: 491
score: 99.52960205078125
patch: return fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; }
rank: 491
score: 99.51941856971153
patch: boolean fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) ;
rank: 491
score: 99.512353515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) , n ) ;
rank: 491
score: 99.39686986019737
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , next ) ;
rank: 492
score: 99.5518211082176
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) . get CaMeL Value ( ) ;
rank: 492
score: 99.5441185735887
patch: Node try { return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 492
score: 99.54378568209134
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 492
score: 99.52949580439815
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; }
rank: 492
score: 99.51235129616477
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 492
score: 99.495869140625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; compute CaMeL Following ( n ) ; }
rank: 492
score: 99.39652876420455
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( start ) ) ;
rank: 493
score: 99.55165834780092
patch: Di CaMeL Graph CaMeL Node < Node , Branch > g CaMeL Node = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 493
score: 99.54399108886719
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute ( n ) ) ;
rank: 493
score: 99.5434039572011
patch: Node fall CaMeL Through : return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 493
score: 99.52947387695312
patch: Set < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 493
score: 99.5191066576087
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , n ) ;
rank: 493
score: 99.49556300951087
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ; }
rank: 493
score: 99.39619276258681
patch: ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 494
score: 99.55136899594908
patch: List < Di CaMeL Graph CaMeL Edge instanceof Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 494
score: 99.54339599609375
patch: if ( n . get CaMeL Next ( ) == null || n . has CaMeL Children ( ) ) { break ;
rank: 494
score: 99.52924174647177
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Root ( ) ) ;
rank: 494
score: 99.51874248798077
patch: int fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) . get CaMeL Value ( ) ;
rank: 494
score: 99.47425333658855
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 494
score: 99.39552708675987
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute , compute ) ;
rank: 495
score: 99.5439453125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else return n ;
rank: 495
score: 99.54323323567708
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) ;
rank: 495
score: 99.52920236895162
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) , n ) ;
rank: 495
score: 99.51869553786058
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 495
score: 99.49478515625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( n ) ) ) ) ;
rank: 495
score: 99.43169611150569
patch: try { Node fall CaMeL Through = compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ;
rank: 495
score: 99.39546342329545
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through ;
rank: 496
score: 99.55126953125
patch: out CaMeL Edges . remove ( 0 ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 496
score: 99.54391276041666
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND )
rank: 496
score: 99.542919921875
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( ) . get CaMeL Destination ( ) ;
rank: 496
score: 99.529052734375
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 496
score: 99.49442545572917
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } * /
rank: 496
score: 99.47375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) , n ) ;
rank: 496
score: 99.39530806107955
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return
rank: 497
score: 99.51851399739583
patch: long fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 497
score: 99.51150948660714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , out CaMeL Edges ) ;
rank: 497
score: 99.49427734375
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) , n ) ;
rank: 497
score: 99.43154074928977
patch: if ( fall CaMeL Through != null ) { Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 497
score: 99.39512416294643
patch: try { try return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 498
score: 99.55111328125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ) ;
rank: 498
score: 99.54249108355978
patch: Node < Node , Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 498
score: 99.51845703125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . to CaMeL String ( ) ) ;
rank: 498
score: 99.511494140625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( - 0 ) ) ;
rank: 498
score: 99.4933551290761
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ( ) ) ) ;
rank: 498
score: 99.47353293678977
patch: Tuple fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 498
score: 99.39484197443181
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( refs ) ) ;
rank: 499
score: 99.550634765625
patch: Node < Branch > g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 499
score: 99.54329427083333
patch: org . < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 499
score: 99.5424053485577
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , null , null ) ;
rank: 499
score: 99.51829020182292
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 499
score: 99.43114516314338
patch: Node fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 499
score: 99.39424438476563
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ;
rank: 500
score: 99.54295191271552
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION :
rank: 500
score: 99.54236450195313
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Destination ( ) ) ;
rank: 500
score: 99.49330647786458
patch: } } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 500
score: 99.43085271661931
patch: try { Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 500
score: 99.39407509251645
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ) ;
rank: 501
score: 99.52793441280242
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ) ;
rank: 501
score: 99.51760031960227
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 501
score: 99.510908203125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } break ;
rank: 501
score: 99.47302734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , parent , ) ;
rank: 501
score: 99.39365844726562
patch: Node element = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 502
score: 99.54266826923077
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) return fall CaMeL Through ;
rank: 502
score: 99.542236328125
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) ) ;
rank: 502
score: 99.5171786221591
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 502
score: 99.49285888671875
patch: do { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 502
score: 99.43081825657895
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Parent ( ) ) ;
rank: 502
score: 99.39358340992646
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $STRING$ ) ;
rank: 503
score: 99.55013374660327
patch: out CaMeL Edges . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 503
score: 99.51003011067708
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n - 0 ) ) ;
rank: 503
score: 99.492490234375
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get ( ) ) ) ;
rank: 503
score: 99.3933337983631
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , node ) ;
rank: 504
score: 99.54260706018519
patch: Node get CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 504
score: 99.510009765625
patch: Preconditions . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 504
score: 99.43049172794117
patch: Statement fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 504
score: 99.39303588867188
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ) ) ;
rank: 505
score: 99.54941628196023
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . FUNCTION ) {
rank: 505
score: 99.54230499267578
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( node ) , n ) ;
rank: 505
score: 99.54166666666667
patch: Node out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 505
score: 99.51664225260417
patch: Node fall CaMeL Through = fall CaMeL Through + n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 505
score: 99.47106402853261
patch: Node fall CaMeL Through = && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 505
score: 99.4301990327381
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , this . n ) ;
rank: 506
score: 99.54227447509766
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 506
score: 99.47102864583333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , nodes ) ) ;
rank: 506
score: 99.39293852306548
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( this ) ) ;
rank: 507
score: 99.54194167564656
patch: Attributes < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 507
score: 99.54116423233695
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 507
score: 99.52738896122685
patch: compute CaMeL Following ( n ) ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 507
score: 99.49165852864583
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 507
score: 99.4708584872159
patch: Node source CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 507
score: 99.42987419577206
patch: E fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 507
score: 99.39288039434524
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , n ) ;
rank: 508
score: 99.548828125
patch: List < Di CaMeL Graph CaMeL Edge 0 >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 508
score: 99.5418368252841
patch: Node g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 508
score: 99.54103685461956
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 508
score: 99.52724609375
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 508
score: 99.51598103841145
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , function ) ;
rank: 508
score: 99.49160368546195
patch: Node < Node > n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 508
score: 99.47013671875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( compute ( n ) ) ) ;
rank: 508
score: 99.4298428622159
patch: byte fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 508
score: 99.39276413690476
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching > compute CaMeL Following ( n ) ;
rank: 509
score: 99.54160492995689
patch: Nodes < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 509
score: 99.5408426920573
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 509
score: 99.527197265625
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) ) ;
rank: 509
score: 99.515888671875
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n . get CaMeL Next ( ) ) ;
rank: 509
score: 99.50894165039062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n )
rank: 509
score: 99.4701260653409
patch: Node fall CaMeL Through |= try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 509
score: 99.39154663085938
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ;
rank: 510
score: 99.5476953125
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 510
score: 99.52673828125
patch: List < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 510
score: 99.51558430989583
patch: Node node = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 510
score: 99.469970703125
patch: Query fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 511
score: 99.54749065896739
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Value ( ) ;
rank: 511
score: 99.54142252604167
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 511
score: 99.54065880408653
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Destination ( ) . get CaMeL Type ( ) ) ;
rank: 511
score: 99.51549711681548
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 511
score: 99.5086669921875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n + 1 ) ) ;
rank: 511
score: 99.49109417459239
patch: if Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 511
score: 99.46988932291667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 0 , compute CaMeL Following ( n ) ) ;
rank: 511
score: 99.42915424547698
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 511
score: 99.391357421875
patch: Node ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 512
score: 99.5412361391129
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ;
rank: 512
score: 99.51535034179688
patch: Class fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 512
score: 99.4290771484375
patch: final void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 512
score: 99.39098442925348
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; =
rank: 513
score: 99.54646439985795
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n . get CaMeL Next ( ) ) ;
rank: 513
score: 99.5402323404948
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == Branch . RETURN ) ;
rank: 514
score: 99.54118546195652
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) != Branch . UNCOND ) {
rank: 514
score: 99.5402080829327
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) ) { return fall CaMeL Through ; }
rank: 514
score: 99.525361328125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First ( ) , false ) ;
rank: 514
score: 99.50675048828126
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; break ;
rank: 514
score: 99.49060546875
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get CaMeL Value ( ) ) ;
rank: 514
score: 99.46902465820312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute ( node ) ) ;
rank: 514
score: 99.39061686197917
patch: Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 515
score: 99.54069718070652
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 515
score: 99.54019869290866
patch: Node try { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ; }
rank: 515
score: 99.50563557942708
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else { return n ;
rank: 515
score: 99.49003269361413
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n $NUMBER$ ) ) ;
rank: 515
score: 99.4689432779948
patch: if ( fall CaMeL Through && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 515
score: 99.42859604779412
patch: Iterator fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 516
score: 99.54063760080645
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , cur CaMeL Cfg ) ; }
rank: 516
score: 99.51413981119792
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . to CaMeL Array ( ) ;
rank: 516
score: 99.50547724184783
patch: else { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 516
score: 99.48967179008152
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( double ) n ) ;
rank: 516
score: 99.46873982747395
patch: Node fall CaMeL Through = ( Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 516
score: 99.42847789417614
patch: World fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 517
score: 99.54058837890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) , fall CaMeL Through ) ;
rank: 517
score: 99.52501085069444
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , this ) ;
rank: 517
score: 99.51302083333333
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 517
score: 99.4683329264323
patch: Node fall CaMeL Through ; if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) {
rank: 517
score: 99.38981323242187
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( info ( n ) ) ;
rank: 518
score: 99.54056351273148
patch: Pair < Di CaMeL Graph CaMeL Edge , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 518
score: 99.51291910807292
patch: Node fall CaMeL Through = fall CaMeL Through + n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 518
score: 99.505126953125
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 518
score: 99.4281338778409
patch: Node fall CaMeL Through = new Node $NUMBER$ ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 518
score: 99.38970656622024
patch: try { Node compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ) ;
rank: 519
score: 99.54044242527173
patch: Hashtable < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 519
score: 99.53926418138587
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 519
score: 99.52493286132812
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 519
score: 99.50505264945652
patch: } if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 519
score: 99.48924763997395
patch: } Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 519
score: 99.42785063244048
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n . get CaMeL Next ( ) ) ;
rank: 519
score: 99.38881138392857
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n } else {
rank: 520
score: 99.545126953125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , compute CaMeL Following ( n ) ) ;
rank: 520
score: 99.53872282608695
patch: Node < Node , Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 520
score: 99.5050048828125
patch: jump fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 520
score: 99.46800595238095
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node , n ) ) ;
rank: 520
score: 99.4275235262784
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 520
score: 99.38834874770221
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 1 ) ;
rank: 521
score: 99.54500325520833
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == Branch . FUNCTION ) ;
rank: 521
score: 99.53843622622283
patch: Node < Node , Branch > fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 521
score: 99.52476846018145
patch: } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ;
rank: 521
score: 99.5125262920673
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ; return fall CaMeL Through ;
rank: 521
score: 99.5050048828125
patch: / / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 521
score: 99.42751242897727
patch: Composite fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 522
score: 99.54495004507211
patch: throw try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 522
score: 99.53854166666666
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , (
rank: 522
score: 99.5384051983173
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) . get CaMeL Type ( ) ) ;
rank: 522
score: 99.51017252604167
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 522
score: 99.50468517485119
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; if ( next == null ) {
rank: 522
score: 99.48715209960938
patch: Dim . Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 522
score: 99.42743278952206
patch: float fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 523
score: 99.53839983258929
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null ||
rank: 523
score: 99.52439528245192
patch: try { Node [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 523
score: 99.509755859375
patch: Node next = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ;
rank: 523
score: 99.4871317545573
patch: Node fall CaMeL Through = Factory . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 523
score: 99.387451171875
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node ;
rank: 524
score: 99.544619140625
patch: g CaMeL Node . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 524
score: 99.53836263020834
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else
rank: 524
score: 99.5097147623698
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . remove ( 0 ) ) ;
rank: 524
score: 99.50403849283855
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( $STRING$ ) ) ;
rank: 524
score: 99.48690132472827
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 524
score: 99.46766153971355
patch: if ( ! fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 524
score: 99.42732377485795
patch: synchronized ( n ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 525
score: 99.54433030348558
patch: Node parent = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 525
score: 99.537646484375
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( 1 ) ;
rank: 525
score: 99.50966389973958
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 525
score: 99.46749877929688
patch: try { Node fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 525
score: 99.42720170454545
patch: Entry fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 526
score: 99.54401189630681
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( index ) ) ;
rank: 526
score: 99.53810402199075
patch: final return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 526
score: 99.52388057002315
patch: Node < Node == Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 526
score: 99.50963745117187
patch: Object fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 526
score: 99.48599906589673
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) ) ; }
rank: 526
score: 99.4271240234375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get ( n ) ;
rank: 526
score: 99.38658447265625
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node
rank: 527
score: 99.537939453125
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , false ) ;
rank: 527
score: 99.508857421875
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . next ( ) ;
rank: 527
score: 99.42684326171874
patch: Vector < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 527
score: 99.38502807617188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( consume ( n ) ) ;
rank: 528
score: 99.54378255208333
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 528
score: 99.52304311899039
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n . get CaMeL Next ( ) ) ;
rank: 528
score: 99.42683549360795
patch: Position fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 529
score: 99.537646484375
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 529
score: 99.52284071180556
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL Next ( ) ) ;
rank: 529
score: 99.50236002604167
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ;
rank: 529
score: 99.46584065755208
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , count ) ) ;
rank: 529
score: 99.38485107421874
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; compute CaMeL Following ( n ) ;
rank: 530
score: 99.54298753004808
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 530
score: 99.52262660435268
patch: } Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 530
score: 99.502197265625
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally {
rank: 530
score: 99.46579996744792
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , content ) ;
rank: 531
score: 99.53761393229166
patch: } try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 531
score: 99.52240580897177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ; break ; }
rank: 531
score: 99.50706990559895
patch: Node node = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 531
score: 99.50144449869792
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 531
score: 99.48506673177083
patch: / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 531
score: 99.4656270345052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Node ( n ) ) ;
rank: 531
score: 99.38425806949013
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 0 ) ;
rank: 532
score: 99.54166666666667
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) {
rank: 532
score: 99.53677368164062
patch: if ( n . has CaMeL Children ( ) ) { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 532
score: 99.5064113451087
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ,
rank: 532
score: 99.42506103515625
patch: int fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 532
score: 99.38377743675595
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false , false ) ;
rank: 533
score: 99.54166666666667
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Value ( ) ;
rank: 533
score: 99.521689453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) , true ) ;
rank: 533
score: 99.38366117931548
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ; ;
rank: 534
score: 99.53752367424242
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) . get CaMeL Next ( ) == null ;
rank: 534
score: 99.52130859375
patch: Node <= Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 534
score: 99.5057881673177
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( 0 ) . get CaMeL Value ( ) ;
rank: 534
score: 99.46518776633523
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( filter ) ) ;
rank: 534
score: 99.42432750355114
patch: Sequence fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 534
score: 99.3833240327381
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 535
score: 99.54141939603366
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 535
score: 99.5371826171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , ;
rank: 535
score: 99.505458984375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Di CaMeL Graph CaMeL Edge ( n ) ) ;
rank: 535
score: 99.50039672851562
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First ( ) ) ) ;
rank: 535
score: 99.46504720052083
patch: Node fall CaMeL Through = node ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 535
score: 99.4241943359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( null , n ) ;
rank: 535
score: 99.38328915550595
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . null ( ) ) ;
rank: 536
score: 99.5407081886574
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 536
score: 99.53662109375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) == Branch . UNCOND ) ;
rank: 536
score: 99.521240234375
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 536
score: 99.50490234375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( 0 ) ;
rank: 536
score: 99.49993896484375
patch: Preconditions . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ) ;
rank: 536
score: 99.48394775390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( exp , n ) ) ;
rank: 536
score: 99.4650348165761
patch: Node fall CaMeL Through = * try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 536
score: 99.42373318142361
patch: Node fall CaMeL Through = new Node $NUMBER$ ( compute CaMeL Following ( n ) ) ;
rank: 537
score: 99.53704364483173
patch: final List < Di CaMeL Graph CaMeL Edge > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 537
score: 99.53625
patch: List < Node > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 537
score: 99.521123046875
patch: Node < node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 537
score: 99.50482177734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( index ) ) ;
rank: 537
score: 99.42261904761905
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( this ) ) ;
rank: 537
score: 99.38309054904514
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 538
score: 99.53693033854167
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 538
score: 99.52094096522177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ( n . get CaMeL Next ( ) ) ) ;
rank: 538
score: 99.49881417410714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching : compute CaMeL Following ( n ) ;
rank: 538
score: 99.46463012695312
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , name ) ) ;
rank: 539
score: 99.53912823016827
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( 0 ) ) ;
rank: 539
score: 99.5368423461914
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } case Token . FUNCTION :
rank: 539
score: 99.53572591145833
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( out CaMeL Edges . get ( 0 ) ) ;
rank: 539
score: 99.42209041819854
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( exp ) ;
rank: 539
score: 99.3829345703125
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ;
rank: 540
score: 99.53895060221355
patch: Node < Node > out CaMeL Edges = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 540
score: 99.53664725167411
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , this ) ;
rank: 540
score: 99.53557794744319
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 540
score: 99.52062594506049
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) , false ) ;
rank: 540
score: 99.48354704483695
patch: this Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 540
score: 99.4643046061198
patch: Node fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 540
score: 99.42166573660714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false , null ) ;
rank: 540
score: 99.38134087456598
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } }
rank: 541
score: 99.53835824819711
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 541
score: 99.53651258680556
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n , ) ) ;
rank: 541
score: 99.52061725484914
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; break ; }
rank: 541
score: 99.503798828125
patch: Node fall CaMeL Through = fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 541
score: 99.46385701497395
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node . get CaMeL Node ( n ) ) ;
rank: 541
score: 99.42123558407738
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , source CaMeL Node ) ;
rank: 541
score: 99.38113223805146
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( info ) ;
rank: 542
score: 99.53611755371094
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } break ;
rank: 542
score: 99.46375528971355
patch: finally { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 542
score: 99.38090587797619
patch: try Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 543
score: 99.53610665457589
patch: System . out . println ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 543
score: 99.53502308238636
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Cfg ( n ) ) ;
rank: 543
score: 99.52049037388393
patch: while ( n . has CaMeL Children ( ) ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 543
score: 99.41986374627976
patch: final Node < ? > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 543
score: 99.38073149181548
patch: Node fall CaMeL Through ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 544
score: 99.53607388200432
patch: Hashtable < Di CaMeL Graph CaMeL Edge < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 544
score: 99.5349609375
patch: Node < List < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 544
score: 99.52035958426339
patch: return null ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 544
score: 99.50350288722827
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Out CaMeL Edges ( ) ;
rank: 544
score: 99.41982693142361
patch: Node fall CaMeL Through = = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 544
score: 99.37976655505952
patch: try { Node ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 545
score: 99.5360440340909
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return n ;
rank: 545
score: 99.534921875
patch: Node < Node < Class , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 545
score: 99.52024244225544
patch: Node < ; Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 545
score: 99.503427734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL Destination ( ) ) ;
rank: 545
score: 99.41961310891544
patch: double fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 545
score: 99.3794937133789
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 546
score: 99.53602818080357
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return n ;
rank: 546
score: 99.53570087139423
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 546
score: 99.534443359375
patch: Node < Node < Node , Token >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 546
score: 99.52019133391204
patch: break ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 546
score: 99.5033671061198
patch: Token fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 546
score: 99.49656168619792
patch: Node try { out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 547
score: 99.53595602101294
patch: if ( n . get CaMeL Next ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 547
score: 99.53537222055289
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node (
rank: 547
score: 99.53439453125
patch: Node try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 547
score: 99.52012416294643
patch: Node < Node > try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 547
score: 99.49655151367188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch ( ) ) ;
rank: 547
score: 99.47951341711956
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 547
score: 99.462890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , continue ) ;
rank: 547
score: 99.37939453125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n , false ) ;
rank: 548
score: 99.53576208043981
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 548
score: 99.53394571940105
patch: if ( out CaMeL Edges . size ( ) == 0 && n . has CaMeL Children ( ) ) { break ;
rank: 548
score: 99.49654812282986
patch: if ( n . get CaMeL Next ( ) . has CaMeL Children ( ) ) {
rank: 548
score: 99.462626953125
patch: Node fall CaMeL Through = ( Node && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 548
score: 99.41721017020089
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 548
score: 99.3791259765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try break ;
rank: 549
score: 99.53575032552084
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND )
rank: 549
score: 99.53498979048295
patch: final List < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 549
score: 99.5335693359375
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( ) ;
rank: 549
score: 99.51978515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( fall CaMeL Through == null )
rank: 549
score: 99.50289916992188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , key ) ;
rank: 549
score: 99.47902610085227
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ) ;
rank: 549
score: 99.41702706473214
patch: return ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 549
score: 99.37911551339286
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute ( ) ) ;
rank: 550
score: 99.53561085668103
patch: Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) == Branch . UNCOND )
rank: 550
score: 99.53353515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ] ) , n ) ;
rank: 550
score: 99.51906127929688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; break ; }
rank: 550
score: 99.50252632472827
patch: Object fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 550
score: 99.41567095588235
patch: Node fall CaMeL Through = compute CaMeL Following ( n , fall CaMeL Through ) ;
rank: 550
score: 99.378662109375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( code ( n ) ) ;
rank: 551
score: 99.53347778320312
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == Branch . BLOCK ) ;
rank: 551
score: 99.51867223668981
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 551
score: 99.4957987467448
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , id ) ;
rank: 551
score: 99.41536458333333
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n . get CaMeL Name ( ) ) ;
rank: 552
score: 99.533203125
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 552
score: 99.51840209960938
patch: Node < Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 552
score: 99.50211588541667
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; return fall CaMeL Through ; }
rank: 552
score: 99.49556107954545
patch: return n ; } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 552
score: 99.47862177309783
patch: Node fall CaMeL Through = new Node ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 553
score: 99.47853597005208
patch: fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 553
score: 99.4617336107337
patch: Node fall CaMeL Through $NUMBER$ = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 553
score: 99.37760416666667
patch: compute CaMeL Following ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) ;
rank: 554
score: 99.53487273185483
patch: public Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 554
score: 99.5181172688802
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ;
rank: 554
score: 99.50117631392045
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : fall CaMeL Through ;
rank: 554
score: 99.47840947690217
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , null ) ) ;
rank: 554
score: 99.41271391369048
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n . get CaMeL Node ( ) ) ;
rank: 554
score: 99.37730102539062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try ( n ) ) ;
rank: 555
score: 99.53485979352679
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null &&
rank: 555
score: 99.5333835767663
patch: Node < Node , ? >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 555
score: 99.49409623579545
patch: try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 555
score: 99.47833251953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( code CaMeL Points . get ( 0 ) ) ;
rank: 555
score: 99.41248139880952
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node ( node ) ) ;
rank: 556
score: 99.53481108566811
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Next ( ) == null ;
rank: 556
score: 99.5330078125
patch: Node < Branch > out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 556
score: 99.5323046875
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) ) { return fall CaMeL Through ;
rank: 556
score: 99.46128151633523
patch: SVNURL fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 556
score: 99.37655784970238
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , current ( ) ) ;
rank: 557
score: 99.5345791903409
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n . get CaMeL Next ( ) == null ; }
rank: 557
score: 99.51718026620371
patch: Node < Node < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 557
score: 99.50005812872024
patch: int fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 557
score: 99.4936290922619
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching + compute CaMeL Following ( n ) ;
rank: 557
score: 99.461083984375
patch: Node fall CaMeL Through ; if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) true }
rank: 557
score: 99.41197509765625
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 558
score: 99.5328952955163
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( , n ) ) ;
rank: 558
score: 99.516962890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( fall CaMeL Through != null )
rank: 558
score: 99.49995561079545
patch: int fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 558
score: 99.41154399671052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , node ) ;
rank: 558
score: 99.37642996651786
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Type ( ) ) ;
rank: 559
score: 99.53440699084052
patch: node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n ) ;
rank: 559
score: 99.532060546875
patch: Node < Node < Node < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 559
score: 99.49274291992188
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 559
score: 99.41133880615234
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 559
score: 99.37638033353366
patch: compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 560
score: 99.53433430989584
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 560
score: 99.53270321800595
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , compute CaMeL Following ( n ) ) ;
rank: 560
score: 99.51645002693965
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Parent ( ) ) ; }
rank: 560
score: 99.46065090013587
patch: Node fall CaMeL Through = || try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 560
score: 99.41124203330592
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( edge , n ) ;
rank: 560
score: 99.37623232886905
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . code ( ) ) ;
rank: 561
score: 99.51592807112068
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) , true ) ) ;
rank: 561
score: 99.49943741508152
patch: Node fall CaMeL Through = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 561
score: 99.375732421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . clock ( ) ) ;
rank: 562
score: 99.53330414870689
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute ( n ) ) ) ;
rank: 562
score: 99.51589439655173
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 562
score: 99.49241041100544
patch: List < Token , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 562
score: 99.460498046875
patch: try { try . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 563
score: 99.53218410326087
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ( n ) ) ;
rank: 563
score: 99.531640625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node ) ;
rank: 563
score: 99.51571655273438
patch: this . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 563
score: 99.49177689985795
patch: Next fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 563
score: 99.40990048363095
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n . get CaMeL Type ( ) ) ;
rank: 564
score: 99.53281075613839
patch: { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 564
score: 99.5156882957176
patch: Node < Node extends Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 564
score: 99.47322221235795
patch: this fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 565
score: 99.53271484375
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 565
score: 99.51559315557066
patch: Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 565
score: 99.4989725748698
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 565
score: 99.4909732216283
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; break ;
rank: 565
score: 99.459306640625
patch: if ( fall CaMeL Through == null ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 565
score: 99.40906372070313
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ;
rank: 565
score: 99.37451171875
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ;
rank: 566
score: 99.53191266741071
patch: else return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 566
score: 99.53089396158855
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } case Token . RETURN :
rank: 566
score: 99.53016728940217
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , out CaMeL Edges . get ( 0 ) ) ;
rank: 566
score: 99.49881417410714
patch: } else { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ; }
rank: 566
score: 99.4713134765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . ) ;
rank: 566
score: 99.37434692382813
patch: try { Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 567
score: 99.53173828125
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; return fall CaMeL Through ;
rank: 567
score: 99.53080240885417
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) ) { return n ; }
rank: 567
score: 99.52996356670673
patch: out CaMeL Edges . get ( 0 ) = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 567
score: 99.37430148654514
patch: else Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 568
score: 99.5315185546875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION && n . has CaMeL Children ( ) ) {
rank: 568
score: 99.53076985677083
patch: if ( n . has CaMeL Children ( ) ) { break ; }
rank: 568
score: 99.52981332632211
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; g CaMeL Node .
rank: 568
score: 99.51545662715517
patch: Node fall CaMeL Through = this ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 568
score: 99.498046875
patch: Node fall CaMeL Through = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 568
score: 99.46999193274456
patch: try fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 568
score: 99.458837890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , false ) ; ;
rank: 568
score: 99.40820922851563
patch: Node fall CaMeL Through = new Node < ? > ( compute CaMeL Following ( n ) ) ;
rank: 568
score: 99.37423706054688
patch: try { Node Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 569
score: 99.53068033854167
patch: if ( out CaMeL Edges . size ( ) > 1 && n . has CaMeL Children ( ) ) { break ;
rank: 569
score: 99.52978515625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return n ; }
rank: 569
score: 99.51482421875
patch: Node < T > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 569
score: 99.49014136904762
patch: List < String > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 569
score: 99.458603515625
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 569
score: 99.37332589285714
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL First ( ) ) ;
rank: 570
score: 99.5311279296875
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 570
score: 99.530537109375
patch: fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 570
score: 99.49002511160714
patch: if ( out CaMeL Edges . size ( ) == 1 ) {
rank: 570
score: 99.46947021484375
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 570
score: 99.45802734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node ) ; ;
rank: 570
score: 99.40739360608552
patch: this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 570
score: 99.37313039679276
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . null ) ;
rank: 571
score: 99.52968962296195
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) ) ; return n ;
rank: 571
score: 99.52933756510417
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get CaMeL Value ( ) ) ;
rank: 571
score: 99.49698893229167
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL First CaMeL Child ( ) ;
rank: 571
score: 99.48994584517045
patch: State fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 571
score: 99.4693270596591
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) n ) ;
rank: 571
score: 99.40719604492188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ) ;
rank: 572
score: 99.53095703125
patch: if ( ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) ) {
rank: 572
score: 99.51430257161458
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) + $STRING$ ) ;
rank: 572
score: 99.49686686197917
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get CaMeL Count ( ) ;
rank: 572
score: 99.48987926136364
patch: if ( out CaMeL Edges . size ( ) > 1 && n . has CaMeL Children ( ) ) {
rank: 572
score: 99.45736030910327
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( compute CaMeL Following ( n ) ) )
rank: 572
score: 99.37295532226562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( resolve ( n ) ) ;
rank: 573
score: 99.52810187088816
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( n ) ;
rank: 573
score: 99.51413796164773
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 573
score: 99.49644886363636
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges [ 1 ] ) ;
rank: 573
score: 99.46881658380681
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . get ;
rank: 573
score: 99.40684291294643
patch: Node fall CaMeL Through = Node CaMeL Util . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 573
score: 99.37188361672794
patch: compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 574
score: 99.52805397727273
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 574
score: 99.46880812872024
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ; }
rank: 574
score: 99.45676491477273
patch: Item fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 575
score: 99.52998570033482
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( cur CaMeL Cfg ) ) ;
rank: 575
score: 99.52826171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; / * /
rank: 575
score: 99.51384367766204
patch: Node <= Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 575
score: 99.49621051290761
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . clone ( ) ) ;
rank: 575
score: 99.46868218315973
patch: / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 575
score: 99.40638950892857
patch: Node fall CaMeL Through = new Node < Node > ( n . get CaMeL Parent ( ) ) ;
rank: 575
score: 99.37054802389706
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( size ) ;
rank: 576
score: 99.52996419270833
patch: Node ) ; return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 576
score: 99.51381613991477
patch: try { List < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 576
score: 99.46811311141305
patch: fall CaMeL Through = true ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 576
score: 99.40602416992188
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching $NUMBER$ ( n ) ;
rank: 576
score: 99.36993729440789
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , 1 ) ;
rank: 577
score: 99.52981665826613
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n . get CaMeL Next ( ) . get CaMeL
rank: 577
score: 99.5137109375
patch: return null ; } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 577
score: 99.4881924715909
patch: fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 577
score: 99.36895141601562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new ( n ) ) ;
rank: 578
score: 99.52978515625
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . UNCOND ) {
rank: 578
score: 99.52714206861413
patch: List < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 578
score: 99.4880603608631
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ) ;
rank: 578
score: 99.4561767578125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , break ) ;
rank: 578
score: 99.36854858398438
patch: Node fall CaMeL Through = try ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 579
score: 99.49456787109375
patch: Class fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 579
score: 99.48802490234375
patch: if ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == null ) {
rank: 579
score: 99.40413411458333
patch: Node < ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 579
score: 99.3681640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( index ) ;
rank: 580
score: 99.52682495117188
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) ;
rank: 580
score: 99.513193359375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return true ;
rank: 580
score: 99.49451214334239
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Last CaMeL Child ( ) ;
rank: 580
score: 99.4875847311581
patch: if ( out CaMeL Edges . size ( ) == 1 ) { break ; }
rank: 580
score: 99.46668590198864
patch: Node fall CaMeL Through = new Node ( n . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 580
score: 99.45556640625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Value ( ) ) ;
rank: 580
score: 99.3674560546875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( max ( n ) ) ;
rank: 581
score: 99.529306640625
patch: if ( g CaMeL Node == fall CaMeL Through ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 581
score: 99.52671875
patch: Node try { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 581
score: 99.51302987557871
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node ) ;
rank: 581
score: 99.4666058084239
patch: Node node = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 581
score: 99.40406709558823
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) ;
rank: 581
score: 99.36715698242188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( line ( n ) ) ;
rank: 582
score: 99.52925248579545
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 582
score: 99.52638753255208
patch: Node fall CaMeL Through = ( Node < Node > ) g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 582
score: 99.3668701171875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( node ) ) ;
rank: 583
score: 99.52873461174242
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , n , ) ;
rank: 583
score: 99.4858165922619
patch: return fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 583
score: 99.46635509672619
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ;
rank: 583
score: 99.4550448330966
patch: Task fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 584
score: 99.52846994707662
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , g CaMeL Node ) ; }
rank: 584
score: 99.52627563476562
patch: Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( n ) ;
rank: 584
score: 99.40364155016448
patch: try { Node fall CaMeL Through = new Node ( compute CaMeL Following ( n ) ) ;
rank: 584
score: 99.36646728515625
patch: n = ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 585
score: 99.5262451171875
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) == null ) ;
rank: 585
score: 99.52224864130434
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 585
score: 99.36614312065973
patch: throw try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 586
score: 99.52593994140625
patch: Preconditions . return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 586
score: 99.52191162109375
patch: Node type = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 586
score: 99.511904296875
patch: Node < Node < ; Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 586
score: 99.48422386532738
patch: if ( n . get CaMeL Next ( ) . has CaMeL Children ( ) ) { break ; }
rank: 586
score: 99.40223388671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( double ) n ) ;
rank: 587
score: 99.52822770743535
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Destination ( ) ;
rank: 587
score: 99.5217517671131
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 587
score: 99.46394178602431
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( 0 ) ;
rank: 587
score: 99.40196468955592
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 587
score: 99.36561343544408
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( element ) ;
rank: 588
score: 99.52816068209134
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ==
rank: 588
score: 99.52568359375
patch: Node fall CaMeL Through = new Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 588
score: 99.521416015625
patch: try { out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 588
score: 99.5112890625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ( ) ) ;
rank: 588
score: 99.4835140830592
patch: fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 588
score: 99.46368117559524
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ) ) ; }
rank: 588
score: 99.45439710115132
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true , n ) ;
rank: 588
score: 99.40190197172619
patch: Node fall CaMeL Through = compute CaMeL Following ( n , n . get CaMeL Last ( ) ) ;
rank: 588
score: 99.36555786132813
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 589
score: 99.52750913558468
patch: return cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 589
score: 99.49345259232955
patch: Document fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 589
score: 99.4834216889881
patch: List < Token > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 589
score: 99.46363366168478
patch: / * fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 589
score: 99.40172119140625
patch: Node fall CaMeL Through = ( int ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 589
score: 99.36543354235198
patch: Node compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ) ;
rank: 590
score: 99.52739606584821
patch: if ( n . get CaMeL Next ( ) . get CaMeL Value ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 590
score: 99.48316592261905
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 590
score: 99.46326793323864
patch: v fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 590
score: 99.40164620535714
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , parent ) ;
rank: 591
score: 99.52736900592673
patch: if ( n . get CaMeL Next ( ) . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND ) {
rank: 591
score: 99.52045232599431
patch: return fall CaMeL Through ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 591
score: 99.49260147758152
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ; break ;
rank: 591
score: 99.48313210227273
patch: if ( next . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 591
score: 99.46321244673295
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 591
score: 99.36403294613487
patch: Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 592
score: 99.52713898689517
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; else
rank: 592
score: 99.52498726222827
patch: if ( n . has CaMeL Children ( ) && n . has CaMeL Children ( ) ) { break ; }
rank: 592
score: 99.52013671875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) == null ) ;
rank: 592
score: 99.49249267578125
patch: short fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 592
score: 99.46183638139205
patch: try { Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 592
score: 99.40064086914063
patch: for ( Node fall CaMeL Through : try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 592
score: 99.36336669921874
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ) ;
rank: 593
score: 99.52683021282327
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , null ) ; }
rank: 593
score: 99.49235026041667
patch: Node fall CaMeL Through = ( Node ) n . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 593
score: 99.46168053668478
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get ( 0 ) )
rank: 593
score: 99.3999267578125
patch: Node fall CaMeL Through = new Node < int > ( compute CaMeL Following ( n ) ) ;
rank: 593
score: 99.363330078125
patch: try try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 594
score: 99.52680495689656
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } finally {
rank: 594
score: 99.52420654296876
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) ) ;
rank: 594
score: 99.509208984375
patch: System . out . println ( $STRING$ + n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ; }
rank: 594
score: 99.46165930706522
patch: / fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 594
score: 99.39890423943015
patch: Collection fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 594
score: 99.36274799547698
patch: try * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 595
score: 99.52664500269397
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( node ) ) ;
rank: 595
score: 99.52420043945312
patch: Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 595
score: 99.48250679347827
patch: final Token fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 595
score: 99.46158175998264
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Next ( ) ) ;
rank: 595
score: 99.45178753396739
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 595
score: 99.3625424033717
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( next , n ) ;
rank: 596
score: 99.519814453125
patch: g CaMeL Node . get CaMeL Out CaMeL Edges ( ) = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 596
score: 99.508955078125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; continue ; }
rank: 596
score: 99.49184163411458
patch: Node fall CaMeL Through = fall CaMeL Through : n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 596
score: 99.4609042080966
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ; }
rank: 596
score: 99.45172674005681
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . compute ( n ) ) ;
rank: 596
score: 99.3983642578125
patch: List < int > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 596
score: 99.36234323601974
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , true ) ;
rank: 597
score: 99.52374267578125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 597
score: 99.4917500813802
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following 1 Node ( n ) ) ;
rank: 597
score: 99.39835815429687
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ; ;
rank: 597
score: 99.36215691817434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( peek ( ) ) ;
rank: 598
score: 99.52369225543478
patch: Node < Type , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 598
score: 99.5191066576087
patch: Map < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 598
score: 99.5086086107337
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n ) ;
rank: 598
score: 99.49153999660327
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( g CaMeL Node ) ;
rank: 598
score: 99.48165760869566
patch: switch ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) { case Token . FUNCTION :
rank: 598
score: 99.4596637228261
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 598
score: 99.39763440583882
patch: compute CaMeL Following ( n , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 599
score: 99.52369225543478
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ; }
rank: 599
score: 99.51734375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n . get CaMeL Next ( ) ) ;
rank: 599
score: 99.508349609375
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } catch ( ;
rank: 599
score: 99.49090576171875
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ; }
rank: 599
score: 99.48123301630434
patch: } if ( out CaMeL Edges . size ( ) == 1 && n . has CaMeL Children ( ) ) {
rank: 599
score: 99.45947265625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , $STRING$ ) ) ;
rank: 599
score: 99.39640538832721
patch: Instruction fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 599
score: 99.36076049804687
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( min ( n ) ) ;
rank: 600
score: 99.52365112304688
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL First ( ) == fall CaMeL Through ) ;
rank: 600
score: 99.51730346679688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( [ 0 ] ) ) ;
rank: 600
score: 99.49067518446181
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 600
score: 99.48116932744566
patch: Node try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 600
score: 99.45880998883929
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ;
rank: 600
score: 99.45070578835227
patch: fall CaMeL Through = return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 600
score: 99.39604749177632
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ) ;
rank: 600
score: 99.36044150904605
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 601
score: 99.52484721522177
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; } else
rank: 601
score: 99.4905293782552
patch: Node next = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 601
score: 99.48081752232143
patch: break ; } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 601
score: 99.36043054917279
patch: try { Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 602
score: 99.52480287905092
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) )
rank: 602
score: 99.51703125
patch: Node [ ] out CaMeL Edges = out CaMeL Edges . get ( 0 ) . get CaMeL Out CaMeL Edges ( ) ;
rank: 602
score: 99.5065281080163
patch: } else { Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 602
score: 99.4904296875
patch: String fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 602
score: 99.48063858695652
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . trim ( ) ) ;
rank: 602
score: 99.4572420987216
patch: it fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 603
score: 99.51574176290761
patch: Node < Node , Branch >> out CaMeL Edges = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 603
score: 99.50578125
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; else
rank: 603
score: 99.4902980638587
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , g CaMeL Node ) ;
rank: 603
score: 99.48031005859374
patch: } } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 603
score: 99.39516314338235
patch: V fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 603
score: 99.36002807617187
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( content ( n ) ) ;
rank: 604
score: 99.52415974934895
patch: return cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 604
score: 99.5150390625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 604
score: 99.5056660970052
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , false ) ;
rank: 604
score: 99.48993210565476
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following : n ) ;
rank: 604
score: 99.47983186141305
patch: case Token . BREAK : return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 604
score: 99.45016479492188
patch: try { ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 604
score: 99.39480590820312
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) , n ) ;
rank: 604
score: 99.35940212673611
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ;
rank: 605
score: 99.52413375289352
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) != null
rank: 605
score: 99.52198791503906
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n ) ;
rank: 605
score: 99.5148417154948
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; node .
rank: 605
score: 99.48911354758523
patch: Node fall CaMeL Through = out CaMeL Edges . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 605
score: 99.39445944393383
patch: Point fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 605
score: 99.35936279296875
patch: Node type = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 606
score: 99.52101828835227
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 606
score: 99.51421564275569
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } } else {
rank: 606
score: 99.39423571134868
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( list , n ) ;
rank: 607
score: 99.52397629310344
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) , ) ;
rank: 607
score: 99.48900349934895
patch: Node fall CaMeL Through = this . cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 607
score: 99.47796309621711
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; {
rank: 607
score: 99.39375813802083
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following (
rank: 608
score: 99.52084748641305
patch: Node < Node , Long >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 608
score: 99.50538126627605
patch: compute CaMeL Following ( n ) ; Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 608
score: 99.48900257457386
patch: Node fall CaMeL Through = fall CaMeL Through : g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 608
score: 99.47791108630952
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; if ( next != null ) {
rank: 608
score: 99.45500044389205
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ; ;
rank: 608
score: 99.35891544117646
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( content ) ;
rank: 609
score: 99.5046895345052
patch: Node < ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 609
score: 99.48893229166667
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 1 ) . get CaMeL Value ( ) ;
rank: 609
score: 99.45494495738636
patch: fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 609
score: 99.39280192057292
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Parent ( ) ) ;
rank: 609
score: 99.35877182904412
patch: Through fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 610
score: 99.45468284970238
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get ( ) ;
rank: 610
score: 99.39272589432566
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , exp ) ;
rank: 610
score: 99.35806884765626
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ; ;
rank: 611
score: 99.52271446814903
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ) ;
rank: 611
score: 99.51966349283855
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == Branch . BREAK ) ;
rank: 611
score: 99.51296997070312
patch: Node < Node >> out CaMeL Edges = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 611
score: 99.48759629991319
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Out CaMeL Edges ( ) ;
rank: 611
score: 99.4490079012784
patch: First fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 611
score: 99.39196166992187
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( String ) n ) ;
rank: 611
score: 99.35765923394098
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching compute ( n ) ;
rank: 612
score: 99.51951002038044
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Next ( ) ) ;
rank: 612
score: 99.503681640625
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) . ;
rank: 612
score: 99.4489109205163
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching > ( compute CaMeL Following ( n ) ) ;
rank: 612
score: 99.3916079872533
patch: try { Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 612
score: 99.35739135742188
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ) ;
rank: 613
score: 99.5036328125
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , ;
rank: 613
score: 99.44819779829545
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , compute ( n ) ) ;
rank: 613
score: 99.3570492393092
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ( ) ) ;
rank: 614
score: 99.47602982954545
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) . get ( 0 ) ;
rank: 614
score: 99.39115182976974
patch: this . Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 614
score: 99.35678100585938
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ;
rank: 615
score: 99.4869384765625
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; if ( next == null )
rank: 615
score: 99.4531582919034
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . ) ) ;
rank: 615
score: 99.44770740327381
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching < compute CaMeL Following ( n ) ;
rank: 616
score: 99.47409889914773
patch: Throwable fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 616
score: 99.45261452414773
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( code ) ) ;
rank: 616
score: 99.44769287109375
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) )
rank: 616
score: 99.39038696289063
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ! fall CaMeL Through ) ;
rank: 616
score: 99.3554623252467
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( null ) ;
rank: 617
score: 99.5189541903409
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) ) ; break ;
rank: 617
score: 99.48601531982422
patch: Node fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 617
score: 99.35529174804688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( suspend ( n ) ) ;
rank: 618
score: 99.51793902853261
patch: Node < Node , Token > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 618
score: 99.48589533025569
patch: Object fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 618
score: 99.45179332386364
patch: fall CaMeL Through = true ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 618
score: 99.4468994140625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false , n ) ;
rank: 618
score: 99.39027806332237
patch: Node fall CaMeL Through = super . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 619
score: 99.51780103600544
patch: Node < Node , String >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 619
score: 99.51070149739583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ; if ( next == null ) {
rank: 619
score: 99.50059442934783
patch: final Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 619
score: 99.47191162109375
patch: } else return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 619
score: 99.45131138392857
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get ( 0 ) ) ;
rank: 619
score: 99.38949424342105
patch: else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 619
score: 99.35453073601974
patch: Node ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 620
score: 99.5177001953125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , out CaMeL Edges ) ;
rank: 620
score: 99.48532936789773
patch: Node fall CaMeL Through = fall CaMeL Through * g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 620
score: 99.47112482244319
patch: Destination fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 620
score: 99.45082310267857
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( edge ) ) ;
rank: 620
score: 99.35451049804688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( inline ( n ) ) ;
rank: 621
score: 99.51779174804688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , flow ) ;
rank: 621
score: 99.5
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , true ) ;
rank: 621
score: 99.48470405910327
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( fall CaMeL Through ) ;
rank: 621
score: 99.470703125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; ;
rank: 621
score: 99.38911268446181
patch: { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 621
score: 99.35390111019737
patch: try { double fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 622
score: 99.51754760742188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , compute ) ;
rank: 622
score: 99.47043678977273
patch: return n . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 622
score: 99.45055042613636
patch: continue fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 622
score: 99.35325927734375
patch: try { { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 623
score: 99.5164082845052
patch: Node < Node == null ? > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 623
score: 99.49957275390625
patch: Node < Node < Node <= Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 623
score: 99.45039506392045
patch: Tool fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 623
score: 99.38831284466912
patch: Vector fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 623
score: 99.35277035361842
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( list ) ;
rank: 624
score: 99.51727764423077
patch: VM . log ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 624
score: 99.50850246263587
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else { break ;
rank: 624
score: 99.49950154622395
patch: System . out . println ( $STRING$ + n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 624
score: 99.44557495117188
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 625
score: 99.51726825420673
patch: Arrays . check ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 625
score: 99.51631303267045
patch: Node fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) ;
rank: 625
score: 99.49950154622395
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n - 1 ) ) ;
rank: 625
score: 99.4837646484375
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 625
score: 99.449951171875
patch: Node fall CaMeL Through , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 625
score: 99.4454345703125
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 625
score: 99.38806762695313
patch: Node fall CaMeL Through = new Node < Object > ( compute CaMeL Following ( n ) ) ;
rank: 626
score: 99.48374872622283
patch: } return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 626
score: 99.46839488636364
patch: Value fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 626
score: 99.38800407858456
patch: Set fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 626
score: 99.35215250651042
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 627
score: 99.51718374399039
patch: if ( n . get CaMeL Next ( ) == null ) remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 627
score: 99.49916294642857
patch: Node < Node > fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 627
score: 99.46832830255681
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching . get CaMeL Out CaMeL Edges ( ) ;
rank: 627
score: 99.35167778862848
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 628
score: 99.5165546123798
patch: Node element = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 628
score: 99.51611328125
patch: Node < String , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 628
score: 99.4989013671875
patch: fall CaMeL Through = true ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 628
score: 99.46823120117188
patch: if ( n . get CaMeL Next ( ) . has CaMeL Children ( ) ) { break ;
rank: 628
score: 99.44930419921874
patch: Node < Node < Node < Node >> fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 628
score: 99.38742547286184
patch: / return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 629
score: 99.44797585227273
patch: cfw . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 629
score: 99.38736979166667
patch: Node fall CaMeL Through = new Node > ( compute CaMeL Following ( n ) ) ;
rank: 629
score: 99.35062448601974
patch: ; = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 630
score: 99.51624474158653
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; } else {
rank: 630
score: 99.5152004076087
patch: Node < Node < Node >> fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 630
score: 99.4981180826823
patch: return null ; } Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 630
score: 99.4830906080163
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node , cur CaMeL Cfg ) ;
rank: 630
score: 99.38724772135417
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , ) ;
rank: 630
score: 99.34971110026042
patch: fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 631
score: 99.516201171875
patch: Linked CaMeL List < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 631
score: 99.51469983552632
patch: return ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 631
score: 99.49791899181548
patch: Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 631
score: 99.44404933763587
patch: fall CaMeL Through = super . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 631
score: 99.38707211143092
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 632
score: 99.48216488486842
patch: Node next = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 632
score: 99.44394753196023
patch: char fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 632
score: 99.38666848575367
patch: Integer fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 633
score: 99.5161663552989
patch: Collection < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 633
score: 99.506591796875
patch: Symbol fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 633
score: 99.49673461914062
patch: Node instanceof Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 633
score: 99.4821140455163
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . next ;
rank: 633
score: 99.46671919389205
patch: if ( out CaMeL Edges . size ( ) == 0 && n . has CaMeL Children ( ) ) {
rank: 633
score: 99.44581187855114
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Next ( ) ;
rank: 633
score: 99.44379216974431
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n , n ) ;
rank: 633
score: 99.38654242621527
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ) ;
rank: 633
score: 99.34903114720395
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . null ) ;
rank: 634
score: 99.51528695913461
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 634
score: 99.51441592261905
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) ) ; }
rank: 634
score: 99.4820223721591
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 634
score: 99.466552734375
patch: else fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 634
score: 99.44309400475544
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL In ( ) ) ;
rank: 634
score: 99.34881913034539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , compute ) ;
rank: 635
score: 99.51410466974431
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 635
score: 99.5064113451087
patch: out CaMeL Edges . add ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 635
score: 99.48145141601563
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) + 1 ;
rank: 635
score: 99.46501020951705
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , fall CaMeL Through ) ;
rank: 635
score: 99.44263805042614
patch: Metadata fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 635
score: 99.38631863064236
patch: final Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 635
score: 99.3486572265625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) continue ;
rank: 636
score: 99.5149434407552
patch: if ( cur CaMeL Cfg . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 636
score: 99.5139892578125
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . has CaMeL Children ( ) ) ;
rank: 636
score: 99.46483265269886
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 636
score: 99.38579711914062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Token ) n ) ;
rank: 637
score: 99.50549897693452
patch: Node < Node > out CaMeL Edges = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 637
score: 99.34856100643383
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( refs ) ;
rank: 638
score: 99.51359419389205
patch: if ( n . has CaMeL Children ( ) && n . has CaMeL Children ( ) ) { break ;
rank: 638
score: 99.50515879755434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ! n ) ) ;
rank: 638
score: 99.48053850446429
patch: Iterator < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 638
score: 99.46375621448864
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 638
score: 99.44168223505434
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node . get CaMeL Parent ( ) ) ;
rank: 638
score: 99.38428344726563
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n [ 0 ] ) ;
rank: 638
score: 99.3485107421875
patch: ; try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 639
score: 99.51462026742789
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( node ) ) ;
rank: 639
score: 99.5134808084239
patch: Node < Class , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 639
score: 99.50418701171876
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 639
score: 99.4930087002841
patch: Node < Node <= Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 639
score: 99.44083251953126
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ,
rank: 639
score: 99.38369411892361
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 639
score: 99.34848022460938
patch: try { Node fall CaMeL Through = = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 640
score: 99.51425962094908
patch: if ( fall CaMeL Through && n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 640
score: 99.49260147758152
patch: break ; } Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 640
score: 99.48014831542969
patch: Node fall CaMeL Through = node . get CaMeL Out CaMeL Edges ( ) ;
rank: 640
score: 99.44307084517045
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 640
score: 99.38368530273438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , - 1 ) ;
rank: 641
score: 99.51306733630952
patch: Node < Object >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 641
score: 99.44303624770221
patch: / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 641
score: 99.4396084872159
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Node ( ) ) ;
rank: 641
score: 99.38328247070312
patch: Iterator < Object > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 641
score: 99.34818307976974
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node }
rank: 642
score: 99.51259977921195
patch: Node < Node < Node > fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 642
score: 99.47939665421195
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , out CaMeL Edges ) ;
rank: 642
score: 99.4424715909091
patch: a fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 642
score: 99.38279418945312
patch: try { try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 642
score: 99.34818307976974
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + $NUMBER$ ) ;
rank: 643
score: 99.50288722826087
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( , compute CaMeL Following ( n ) ) ;
rank: 643
score: 99.46258835565476
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Graph ( ) ) ;
rank: 643
score: 99.38253173828124
patch: while ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 643
score: 99.3475341796875
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ;
rank: 644
score: 99.51188520951705
patch: Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ; }
rank: 644
score: 99.44227183948864
patch: fall CaMeL Through = = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 644
score: 99.38238525390625
patch: Node fall CaMeL Through = ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 644
score: 99.34751892089844
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ;
rank: 645
score: 99.51374617866848
patch: if ( ! n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 645
score: 99.51143215013587
patch: Node try { try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 645
score: 99.50145422894022
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( - 0 ) ) ;
rank: 645
score: 99.4418712797619
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( next ) ) ;
rank: 645
score: 99.38195082720588
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 645
score: 99.34705874794408
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n ;
rank: 646
score: 99.5111592610677
patch: Node next = out CaMeL Edges . get ( 0 ) . get ( 1 ) . get CaMeL Destination ( ) ;
rank: 646
score: 99.47731711647727
patch: int fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 646
score: 99.44126981847427
patch: fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 646
score: 99.43916459517045
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( compute ( n ) ) ) ;
rank: 646
score: 99.3814697265625
patch: / * / Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 646
score: 99.34687243009868
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , false ) ;
rank: 647
score: 99.51348876953125
patch: return cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 647
score: 99.4767733487216
patch: String fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 647
score: 99.46143740699405
patch: Node fall CaMeL Through : try { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 647
score: 99.44020774147727
patch: Node fall CaMeL Through = new Node ( compute CaMeL Following ( n ) . get ( 0 ) ) ;
rank: 647
score: 99.4391202059659
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 647
score: 99.38139792049633
patch: Nodes fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 647
score: 99.34678248355263
patch: try { float fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 648
score: 99.512978515625
patch: Node info = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 648
score: 99.47639266304348
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges , out CaMeL Edges ) ;
rank: 648
score: 99.43869850852273
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( original ) ) ;
rank: 648
score: 99.38116133840461
patch: final Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 649
score: 99.51268513997395
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) ) {
rank: 649
score: 99.4382854959239
patch: while ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 650
score: 99.51265775240384
patch: Node node = cur CaMeL Cfg . get CaMeL Cfg ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 650
score: 99.48802601207386
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 650
score: 99.43798828125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . ;
rank: 650
score: 99.38099365234375
patch: Collection < int > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 650
score: 99.346142578125
patch: Node ) { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 651
score: 99.51211547851562
patch: } return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 651
score: 99.49939495584239
patch: Node < Node , Branch > out CaMeL Edges = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 651
score: 99.47471313476562
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) - 0 ;
rank: 651
score: 99.4593505859375
patch: Node next = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) ;
rank: 651
score: 99.43788840553977
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( finally ) ) ;
rank: 651
score: 99.38067948190789
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 651
score: 99.345263671875
patch: Node fall CaMeL Through = new Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 652
score: 99.51175491898148
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 652
score: 99.47392345610119
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges [ 0 ) ;
rank: 652
score: 99.45844060724431
patch: Node [ ] next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 652
score: 99.38056640625
patch: List < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 652
score: 99.34520199424342
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ref ) ;
rank: 653
score: 99.5115625
patch: Collection < Di CaMeL Graph CaMeL Edge > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 653
score: 99.49812117866848
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( . compute CaMeL Following ( n ) ) ;
rank: 653
score: 99.38004557291667
patch: Node fall CaMeL Through = new Node ( n ) ;
rank: 653
score: 99.34488718133224
patch: try { String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 654
score: 99.51149338942308
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ;
rank: 654
score: 99.50866168478261
patch: Node < Node > next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 654
score: 99.4736560639881
patch: Node fall CaMeL Through = fall CaMeL Through . get ( 0 ) . get CaMeL Value ( ) ;
rank: 654
score: 99.45697312127976
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . length ) ;
rank: 654
score: 99.4368896484375
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Value ( ) ) ;
rank: 654
score: 99.37956686580883
patch: try { try { Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 654
score: 99.34480590820313
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , fall CaMeL Through ) ;
rank: 655
score: 99.49740998641305
patch: Node < Node , Branch > g CaMeL Node = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 655
score: 99.48694428943452
patch: return null ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 655
score: 99.47306685014205
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out ( ) . get CaMeL Value ( ) ;
rank: 655
score: 99.43651234019886
patch: Dim fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 655
score: 99.34452514648437
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; n } }
rank: 656
score: 99.50849352384868
patch: Node ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 656
score: 99.47212299547698
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 656
score: 99.4364346590909
patch: Node n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 656
score: 99.3791259765625
patch: Node fall CaMeL Through = new Node < ) > ( compute CaMeL Following ( n ) ) ;
rank: 656
score: 99.34419973273026
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; continue ;
rank: 657
score: 99.49681555706522
patch: List < Branch extends Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 657
score: 99.4868496981534
patch: Boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 657
score: 99.37841796875
patch: final Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 657
score: 99.34381462545956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( level ) ;
rank: 658
score: 99.50816278872283
patch: Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 658
score: 99.37812635633681
patch: Node fall CaMeL Through ++ = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 658
score: 99.343359375
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } Remove
rank: 659
score: 99.50995551215277
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ; break ;
rank: 659
score: 99.4557872953869
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Next ( ) ) ;
rank: 659
score: 99.37750854492188
patch: final int [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 659
score: 99.34297260485198
patch: try { Node fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 660
score: 99.50937124399039
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Generator . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 660
score: 99.50765327785327
patch: Node fall CaMeL Through = this . cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ;
rank: 660
score: 99.49641927083333
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ; }
rank: 660
score: 99.37733154296875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ) ;
rank: 660
score: 99.34248432360198
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $NUMBER$ ) ;
rank: 661
score: 99.5066448709239
patch: Node < Object , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 661
score: 99.49627130681819
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ; return fall CaMeL Through ;
rank: 661
score: 99.48594447544643
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ;
rank: 661
score: 99.45568266369048
patch: List < T >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 661
score: 99.4353915127841
patch: throw fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 661
score: 99.43377130681819
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . null ( n ) ) ;
rank: 661
score: 99.37701094777961
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 661
score: 99.34200889185855
patch: try ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 662
score: 99.50657056725544
patch: Node < Node , ? > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 662
score: 99.377001953125
patch: synchronized ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) {
rank: 662
score: 99.34200439453124
patch: Node < Integer > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 663
score: 99.50865681966145
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $STRING$ , compute CaMeL Following ( n ) ) ;
rank: 663
score: 99.49615478515625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( compute CaMeL Following ( n ) ) ; }
rank: 663
score: 99.48450237771739
patch: Node < Node < Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 663
score: 99.4540951377467
patch: n . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 663
score: 99.43517485119048
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( nodes ) ) ;
rank: 664
score: 99.50639011548913
patch: Preconditions . try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 664
score: 99.49553116508152
patch: List < Branch , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 664
score: 99.48441354851974
patch: Node < try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 664
score: 99.45399693080357
patch: Node next = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 664
score: 99.4311856356534
patch: Term fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 664
score: 99.37694091796875
patch: Iterator < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 665
score: 99.508037109375
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) { break ;
rank: 665
score: 99.50630326704545
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL First CaMeL Child ( ) ;
rank: 665
score: 99.49526145241477
patch: Node fall CaMeL Through = new Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 665
score: 99.45384632457386
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , fall CaMeL Through ) ) ;
rank: 665
score: 99.43265206473214
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get CaMeL First CaMeL Child ( ) ;
rank: 665
score: 99.34022827148438
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; Node fall CaMeL Through = true ;
rank: 666
score: 99.43218703497024
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . get ( 0 ) ;
rank: 666
score: 99.37674753289474
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . n ) ;
rank: 667
score: 99.50740559895833
patch: final List < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 667
score: 99.50594429347827
patch: Node < Node >> out CaMeL Edges = this . g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 667
score: 99.46870754076087
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( out CaMeL Edges ) ;
rank: 667
score: 99.45328776041667
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == null ) {
rank: 667
score: 99.4320068359375
patch: Node fall CaMeL Through = System . current CaMeL Time CaMeL Millis ( ) ;
rank: 668
score: 99.46793989701705
patch: Int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 668
score: 99.452880859375
patch: Preconditions [ 0 ] = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 668
score: 99.43169875372024
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) . get ( 0 ) ;
rank: 668
score: 99.37615003083882
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , parent ) ;
rank: 669
score: 99.49454956054687
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } {
rank: 669
score: 99.4527587890625
patch: int out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 669
score: 99.43028041294643
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 669
score: 99.4280118075284
patch: Text fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 669
score: 99.37601511101974
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , list ) ;
rank: 670
score: 99.50633704144022
patch: Node < Node . Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 670
score: 99.505078125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; / /
rank: 670
score: 99.49425738790761
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( next == null )
rank: 670
score: 99.45132300967262
patch: List < ? > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 670
score: 99.3376529091283
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . n ) ;
rank: 671
score: 99.49418712797619
patch: Node < ? >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 671
score: 99.4673184481534
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . next ( ) ;
rank: 671
score: 99.4269686612216
patch: Cursor fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 671
score: 99.37394883897569
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching 1 ( n ) ;
rank: 672
score: 99.494140625
patch: Object < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 672
score: 99.44818725585938
patch: Preconditions . remove ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) ;
rank: 672
score: 99.37368594898896
patch: try { Node fall CaMeL Through = compute CaMeL Following ( n , n ) ;
rank: 672
score: 99.33723718979779
patch: ; fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 673
score: 99.506103515625
patch: final Node < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 673
score: 99.50443725585937
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Destination ( ) ;
rank: 673
score: 99.46659128289474
patch: Node node = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 673
score: 99.44682384672619
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Token ( n ) ) ;
rank: 673
score: 99.42742309570312
patch: Node nodes = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 673
score: 99.33632202148438
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) } }
rank: 674
score: 99.49336574388587
patch: try { out CaMeL Edges . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 674
score: 99.47831394361413
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; }
rank: 674
score: 99.44564964657738
patch: n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 674
score: 99.4271484375
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( node ) ) ;
rank: 674
score: 99.37163342927632
patch: / else Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 674
score: 99.33603515625
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 675
score: 99.5031101392663
patch: Node < ? , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 675
score: 99.47792561848958
patch: Node < Node < Node > fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 675
score: 99.46639404296874
patch: String fall CaMeL Through = n . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 675
score: 99.44423130580357
patch: Preconditions . error ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 675
score: 99.42711046006944
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 675
score: 99.3357795266544
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( id ) ;
rank: 676
score: 99.5056640625
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ; } }
rank: 676
score: 99.49263332201087
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else {
rank: 676
score: 99.37137001439145
patch: int [ ] fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 677
score: 99.505654296875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) ) ) ; }
rank: 677
score: 99.50282796223958
patch: if ( n . has CaMeL Children ( ) ) { return fall CaMeL Through ; }
rank: 677
score: 99.49244035993304
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 677
score: 99.33464219835069
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ; }
rank: 678
score: 99.5055078125
patch: Node get = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 678
score: 99.4911776455966
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) == null
rank: 678
score: 99.47602395450367
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 678
score: 99.44375128495066
patch: fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 678
score: 99.37088815789474
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , element ) ;
rank: 678
score: 99.33445829503677
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( nodes ) ;
rank: 679
score: 99.46584250710227
patch: Component fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 679
score: 99.443603515625
patch: Preconditions . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ;
rank: 679
score: 99.42471168154762
patch: Node fall CaMeL Through = new Node < Node > ( n . get CaMeL Next ( ) ) ;
rank: 679
score: 99.37082391036184
patch: expr = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 679
score: 99.33437771267361
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , n ) ;
rank: 680
score: 99.50135387073864
patch: Preconditions . try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 680
score: 99.46573893229167
patch: Object fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 680
score: 99.44308471679688
patch: return n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 680
score: 99.4242276278409
patch: Condition fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 680
score: 99.33433622472427
patch: try { Node compute = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ) ;
rank: 681
score: 99.5031268780048
patch: Node try { return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 681
score: 99.49945427389706
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return n ;
rank: 681
score: 99.49010699728261
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 681
score: 99.37059110753677
patch: Result fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 681
score: 99.33321340460526
patch: Node fall CaMeL Through = try . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 682
score: 99.50298602764423
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null
rank: 682
score: 99.49896795099431
patch: Node fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 682
score: 99.48892875339673
patch: Node < Branch , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 682
score: 99.47316672585227
patch: System . out . println ( $STRING$ + n . get CaMeL Next ( ) ) ; return null ; }
rank: 682
score: 99.44282459077381
patch: List < Object >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 682
score: 99.33293714021382
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( children ) ;
rank: 683
score: 99.46454467773438
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; try {
rank: 683
score: 99.44260125411184
patch: } switch ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) {
rank: 683
score: 99.33290010340073
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ;
rank: 684
score: 99.5027188387784
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . CONTINUE ) {
rank: 684
score: 99.49856700067934
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( ) ) ;
rank: 684
score: 99.4880901834239
patch: Node . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 684
score: 99.42299107142857
patch: Node fall CaMeL Through = ( Node , try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 684
score: 99.36860094572368
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , scope ) ;
rank: 685
score: 99.498046875
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 685
score: 99.48804873511905
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } break ;
rank: 685
score: 99.44200303819444
patch: switch ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) {
rank: 685
score: 99.42154091282895
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ; }
rank: 685
score: 99.3682797080592
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ) {
rank: 685
score: 99.33266087582237
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } else {
rank: 686
score: 99.49794224330357
patch: Node < Token >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 686
score: 99.488037109375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) == null
rank: 686
score: 99.4637451171875
patch: String fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Type ( ) ;
rank: 686
score: 99.3674380653783
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , content ) ;
rank: 687
score: 99.46249534970238
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Type ( ) ;
rank: 687
score: 99.44103240966797
patch: if ( out CaMeL Edges . size ( ) == 1 ) { break ;
rank: 687
score: 99.4201427641369
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out ( ) . get ( 0 ) ;
rank: 687
score: 99.36720034950658
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 687
score: 99.33194130345395
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; try ;
rank: 688
score: 99.50225219726562
patch: Node node = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 688
score: 99.47139115767045
patch: Node < Node > fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 688
score: 99.41943359375
patch: Node fall CaMeL Through = ( Node < Node > ) compute CaMeL Following ( n ) ;
rank: 688
score: 99.36657036675348
patch: final String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 689
score: 99.501953125
patch: if ( n . get CaMeL Next ( ) . next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 689
score: 99.4969482421875
patch: Di CaMeL Graph CaMeL Edge fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 689
score: 99.48723810369319
patch: Pointer fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 689
score: 99.44041806175595
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following + n ) ;
rank: 689
score: 99.41901506696429
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; ;
rank: 689
score: 99.33171530330883
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( iterator ) ;
rank: 690
score: 99.5016338641827
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ) ) {
rank: 690
score: 99.49662562779018
patch: if ( n . has CaMeL Children ( ) ) { break ;
rank: 690
score: 99.48721313476562
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; break ;
rank: 690
score: 99.44031343005952
patch: Preconditions . add ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 690
score: 99.41829427083333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( System . current ( ) ) ;
rank: 690
score: 99.3655941611842
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , logger ) ;
rank: 690
score: 99.33115748355263
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) .
rank: 691
score: 99.48710704985119
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( compute CaMeL Following ( n , n ) ) ;
rank: 691
score: 99.46872780539773
patch: Node has CaMeL Children = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 691
score: 99.46043395996094
patch: if ( n . has CaMeL Children ( ) ) { break ; } }
rank: 691
score: 99.43977864583333
patch: fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( $STRING$ ) ;
rank: 691
score: 99.36559380425348
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n n ) ;
rank: 691
score: 99.33106904871323
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( line ) ;
rank: 692
score: 99.46856134588069
patch: Node < Node == Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 692
score: 99.43882533482143
patch: List < Integer >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 692
score: 99.3653094951923
patch: int fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 692
score: 99.32902446546052
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + null ) ;
rank: 693
score: 99.48694378396739
patch: Node < Node , Branch >> g CaMeL Node = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 693
score: 99.45849609375
patch: Node fall CaMeL Through = node . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 693
score: 99.43875732421876
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == $STRING$ ) {
rank: 693
score: 99.36530219184027
patch: try { Node fall CaMeL Through = ( Node ) compute CaMeL Following ( n ) ;
rank: 694
score: 99.49523344494048
patch: Node < Node >> fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 694
score: 99.48691193953805
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 694
score: 99.4679842862216
patch: Node can CaMeL Remove = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 694
score: 99.45820756392045
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Out ( ) . get CaMeL Value ( ) ;
rank: 694
score: 99.43865003083882
patch: switch ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) {
rank: 694
score: 99.36402723524306
patch: Node fall CaMeL Through = new Node 1 ( compute CaMeL Following ( n ) ) ;
rank: 694
score: 99.32741970486111
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute , ) ;
rank: 695
score: 99.49503950639205
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Destination ( ) ;
rank: 695
score: 99.46769575639205
patch: Unit fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 695
score: 99.4579190340909
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ( n ) ) ;
rank: 695
score: 99.41675967261905
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( end ) ) ;
rank: 695
score: 99.41253952752976
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ) ;
rank: 695
score: 99.32695855034723
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute . ) ;
rank: 696
score: 99.49503950639205
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First ( ) . get CaMeL Value ( ) ;
rank: 696
score: 99.43724423363095
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } finally {
rank: 696
score: 99.41598510742188
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; if ( ;
rank: 696
score: 99.41228926809211
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true , false ) ;
rank: 696
score: 99.3616473858173
patch: Node fall CaMeL Through = compute CaMeL Following ( node ) ;
rank: 696
score: 99.32613975123355
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( end ( ) ) ;
rank: 697
score: 99.49501103940217
patch: Node < Node , Long > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 697
score: 99.46678577769886
patch: Node < Node > compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ) ;
rank: 697
score: 99.43703099300987
patch: Preconditions = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 697
score: 99.36139275045956
patch: Entity fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 697
score: 99.32480982730263
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( children , n ) ;
rank: 698
score: 99.49501103940217
patch: Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) , n ) ;
rank: 698
score: 99.46647135416667
patch: Node fall CaMeL Through = fall CaMeL Through . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 698
score: 99.456396484375
patch: Node fall CaMeL Through = node . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 698
score: 99.36121890419408
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( scope , n ) ;
rank: 698
score: 99.3243472450658
patch: Node fall CaMeL Through = compute . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 699
score: 99.49920654296875
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 699
score: 99.49475678943452
patch: List < Object > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 699
score: 99.46607555042614
patch: try { Node parent = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 699
score: 99.43546335320724
patch: if ( out CaMeL Edges . get ( 0 ) . has CaMeL Children ( ) ) {
rank: 699
score: 99.361083984375
patch: Type fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 700
score: 99.49866661658653
patch: VM . error ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND ) ;
rank: 700
score: 99.45593843005952
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following | n ) ;
rank: 700
score: 99.36096869574652
patch: final boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 700
score: 99.32391678659539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , true ) ;
rank: 701
score: 99.49840291341145
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) != Branch . UNCOND ) {
rank: 701
score: 99.49427379261364
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , g CaMeL Node ) ;
rank: 701
score: 99.48319868607955
patch: final List < Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 701
score: 99.32338995682566
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( pop ( ) ) ;
rank: 702
score: 99.4971590909091
patch: return n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 702
score: 99.46483090049342
patch: return fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; }
rank: 702
score: 99.45405505952381
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , cur CaMeL Cfg ) ;
rank: 702
score: 99.32310726768092
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( count ) ;
rank: 703
score: 99.49623325892857
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . CONTINUE )
rank: 703
score: 99.4827190896739
patch: return ( Di CaMeL Graph CaMeL Edge < Node , Branch > ) out CaMeL Edges . get ( 0 ) ;
rank: 703
score: 99.45372924804687
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : n ;
rank: 703
score: 99.43416748046874
patch: try { return out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ; }
rank: 704
score: 99.49224243164062
patch: Preconditions . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 704
score: 99.35943282277961
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( exp , n ) ;
rank: 704
score: 99.32285670230263
patch: Node try . fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 705
score: 99.49517578125
patch: head = n . get CaMeL First CaMeL Child ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 705
score: 99.49210981889205
patch: Node < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 705
score: 99.41129760742187
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) )
rank: 706
score: 99.49437459309895
patch: String next = n . get CaMeL Next ( ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 706
score: 99.49202104048295
patch: Node < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; ;
rank: 706
score: 99.48174493963069
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . compute ( n ) ) ;
rank: 706
score: 99.46257990056819
patch: Box fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 706
score: 99.43282470703124
patch: Preconditions . remove ( n . get CaMeL Destination ( ) . get CaMeL Value ( ) ) ;
rank: 706
score: 99.35716417100694
patch: Node ! fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 706
score: 99.32245836759868
patch: try { Node compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 707
score: 99.494326171875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND ) { break ;
rank: 707
score: 99.46256880326705
patch: break ; } else { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 707
score: 99.35710592830883
patch: Range fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 707
score: 99.32200712316177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( vars ) ;
rank: 708
score: 99.49040985107422
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; break ;
rank: 708
score: 99.4610262784091
patch: Lock fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 708
score: 99.45191539417614
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 708
score: 99.43187255859375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } else {
rank: 708
score: 99.408203125
patch: Node fall CaMeL Through = ( Node < Node > ) n . get CaMeL Next ( ) ;
rank: 708
score: 99.35611765008224
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , start ) ;
rank: 709
score: 99.49382990056819
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) )
rank: 709
score: 99.46057710193452
patch: Node < ) ? > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 709
score: 99.45170454545455
patch: Object fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 709
score: 99.43145461309524
patch: Preconditions . println ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 709
score: 99.32172594572368
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ; ;
rank: 710
score: 99.45131613991477
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . clone ( ) ;
rank: 710
score: 99.42943173363095
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( get CaMeL Cfg ( ) ) ;
rank: 710
score: 99.40732421875
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 710
score: 99.40299907483552
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false , false ) ;
rank: 710
score: 99.35588243272569
patch: * Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 710
score: 99.32155247738487
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; .
rank: 711
score: 99.48063520951705
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 711
score: 99.4511385830966
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : g CaMeL Node ;
rank: 711
score: 99.42937360491071
patch: out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 711
score: 99.406005859375
patch: Node fall CaMeL Through = new Node ( fall CaMeL Through ) ;
rank: 711
score: 99.40222886029412
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( filter ) ;
rank: 711
score: 99.35573216488487
patch: Node { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 711
score: 99.32126336348684
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , node ) ;
rank: 712
score: 99.48894391741071
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get CaMeL Destination ( ) ) ;
rank: 712
score: 99.45086115056819
patch: } } else { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ; }
rank: 712
score: 99.4053955078125
patch: Node < Node < Node >> fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 712
score: 99.32098709909539
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , this ) ;
rank: 713
score: 99.492919921875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) return n ;
rank: 713
score: 99.48887125651042
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , fall CaMeL Through ) ;
rank: 713
score: 99.4801358309659
patch: try { Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 713
score: 99.3554623252467
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 714
score: 99.49260147758152
patch: Pair < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 714
score: 99.45820756392045
patch: Node < Node < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 714
score: 99.39993722098214
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( ( Node ) n ) ;
rank: 715
score: 99.48804820667614
patch: Node < Node , Branch >> out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 715
score: 99.45774536132812
patch: Node < Node < Node < Node > fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 715
score: 99.3978515625
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 715
score: 99.35438296669408
patch: Node fall CaMeL Through = Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 715
score: 99.3205630653783
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $STRING$ ) ;
rank: 716
score: 99.45012464021382
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( cur CaMeL Cfg ) ;
rank: 716
score: 99.42539672851562
patch: Node fall CaMeL Through = new Di CaMeL Graph CaMeL Edge < Node , Branch >> ( ) ;
rank: 716
score: 99.3976806640625
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ;
rank: 716
score: 99.3541259765625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( logger , n ) ;
rank: 716
score: 99.32037353515625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , this ) ;
rank: 717
score: 99.48751395089286
patch: Node fall CaMeL Through = cur CaMeL Cfg . get ( 0 ) . get CaMeL Value ( ) ;
rank: 717
score: 99.4499279203869
patch: Node fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 717
score: 99.42337646484376
patch: if ( out CaMeL Edges . size ( ) == 1 ) { return fall CaMeL Through ; }
rank: 717
score: 99.40135701497395
patch: fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 717
score: 99.35410670230263
patch: n . add CaMeL All ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 718
score: 99.48744419642857
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ;
rank: 718
score: 99.42247924804687
patch: Node try { out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 718
score: 99.3992984169408
patch: Dim . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 718
score: 99.39700753348214
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through , node ) ;
rank: 718
score: 99.3530337685033
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , size ) ;
rank: 719
score: 99.4780606356534
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } }
rank: 719
score: 99.4482088955966
patch: Node fall CaMeL Through : fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 719
score: 99.42120971679688
patch: List < Di CaMeL Graph CaMeL Edge type = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 719
score: 99.35195583767361
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 719
score: 99.3199398643092
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( key ) ;
rank: 720
score: 99.48691628196023
patch: List < Di CaMeL Graph CaMeL Edge nodes = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 720
score: 99.44811248779297
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Destination ( ) ;
rank: 720
score: 99.4205810546875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 1 ) ) ;
rank: 720
score: 99.39718627929688
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out ( n ) ) ;
rank: 720
score: 99.3519287109375
patch: Following fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 720
score: 99.31989602481617
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( events ) ;
rank: 721
score: 99.49140625
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n . get CaMeL Next ( ) == null
rank: 721
score: 99.48649088541667
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ; }
rank: 721
score: 99.45557861328125
patch: Set < String > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 721
score: 99.44776611328125
patch: Node fall CaMeL Through = this . cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 721
score: 99.31938733552632
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( info ) ;
rank: 722
score: 99.491201171875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) . equals ( Token . FUNCTION ) ) {
rank: 722
score: 99.48558213975694
patch: fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 722
score: 99.47733931107955
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } return n ;
rank: 722
score: 99.45557803199405
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ) ;
rank: 722
score: 99.44767252604167
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ; break ;
rank: 722
score: 99.35149383544922
patch: for ( Node fall CaMeL Through : compute CaMeL Following ( n ) ) {
rank: 722
score: 99.31856043198529
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( logger ) ;
rank: 723
score: 99.49064453125
patch: if ( cur CaMeL Cfg . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 723
score: 99.48530717329545
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , out CaMeL Edges ) ) ;
rank: 723
score: 99.4476318359375
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 723
score: 99.4164794921875
patch: Node get CaMeL Out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 723
score: 99.35116416529605
patch: while ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 723
score: 99.31806098090277
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; else
rank: 724
score: 99.41625366210937
patch: Preconditions . switch ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) {
rank: 724
score: 99.35115774054276
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , end ) ;
rank: 724
score: 99.31801243832237
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + 1 ) ;
rank: 725
score: 99.48972389914773
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 725
score: 99.4833096590909
patch: out CaMeL Edges . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 725
score: 99.45255737304687
patch: break ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 725
score: 99.44700985863095
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; if ( next
rank: 725
score: 99.41587999131944
patch: Node next = n . get CaMeL Next ( ) . get CaMeL Destination ( ) ;
rank: 725
score: 99.31752522786458
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute , n ) ;
rank: 726
score: 99.48943536931819
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . EMPTY ) {
rank: 726
score: 99.482470703125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Directed CaMeL Graph CaMeL Node ( ) ;
rank: 726
score: 99.4466552734375
patch: Node fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Following ( n ) ;
rank: 726
score: 99.39435778166118
patch: Node fall CaMeL Through = ( Node ) n . get CaMeL First CaMeL Child ( ) ;
rank: 726
score: 99.39227294921875
patch: Node fall CaMeL Through = this . compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 726
score: 99.35007052951389
patch: Node fall CaMeL Through = ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 726
score: 99.31742136101974
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( edge ) ;
rank: 727
score: 99.48239968039773
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Out CaMeL Edges ( ) ) ;
rank: 727
score: 99.47514038085937
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else
rank: 727
score: 99.44529215494792
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 727
score: 99.39434493215461
patch: i = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 727
score: 99.34928385416667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching n ( n ) ;
rank: 727
score: 99.3173469094669
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ) ;
rank: 728
score: 99.48828125
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } case Token . BREAK :
rank: 728
score: 99.48197798295455
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 ) ) ) ;
rank: 728
score: 99.4748202237216
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } else ) ;
rank: 728
score: 99.44476609002976
patch: Node fall CaMeL Through = ( Node ) g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 728
score: 99.41428833007812
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( g CaMeL Node ) ) ;
rank: 728
score: 99.39427354600694
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 728
score: 99.34915321751645
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( mode , n ) ;
rank: 728
score: 99.31730571546052
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 1 ) ;
rank: 729
score: 99.47479569284539
patch: return return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 729
score: 99.44277615017361
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL First CaMeL Child ( ) ;
rank: 729
score: 99.41387939453125
patch: List < Di CaMeL Graph CaMeL Edge parent = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 729
score: 99.3941650390625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ; }
rank: 729
score: 99.34914679276316
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ;
rank: 729
score: 99.31673177083333
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node , ) ;
rank: 730
score: 99.44274291992187
patch: int fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 730
score: 99.41286010742188
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) - 1 ;
rank: 730
score: 99.348876953125
patch: AST fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 730
score: 99.3164421530331
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( scope ) ;
rank: 731
score: 99.48745329483695
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) break ;
rank: 731
score: 99.44517299107143
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return false ; }
rank: 731
score: 99.34797498914931
patch: int fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 731
score: 99.31611902573529
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( name ) ;
rank: 732
score: 99.487001953125
patch: if ( ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . UNCOND ) ) {
rank: 732
score: 99.48122336647727
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 732
score: 99.44489135742188
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( next ) ;
rank: 732
score: 99.44215698242188
patch: Node fall CaMeL Through = fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) ;
rank: 732
score: 99.41237921463816
patch: switch ( out CaMeL Edges . get ( 0 ) . get CaMeL Type ( ) ) {
rank: 732
score: 99.39244995117187
patch: Node current = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 732
score: 99.390869140625
patch: Node fall CaMeL Through = new Node ( compute CaMeL Following ( n , n ) ) ;
rank: 732
score: 99.34796142578125
patch: Node fall CaMeL Through ; Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 733
score: 99.4861370584239
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n . get CaMeL Next ( ) == null
rank: 733
score: 99.43998790922619
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through = n ) ;
rank: 733
score: 99.40996350740132
patch: else return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 733
score: 99.39191284179688
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 733
score: 99.34718724300987
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 733
score: 99.31594669117646
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ?
rank: 734
score: 99.47894287109375
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , g CaMeL Node ) ;
rank: 734
score: 99.47266787574405
patch: List < ? >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 734
score: 99.40876600477431
patch: Node next = out CaMeL Edges . get ( 0 ) . get ( 0 ) ;
rank: 734
score: 99.39091796875
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 734
score: 99.34694536994485
patch: Float fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 734
score: 99.31584729646382
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; Node try
rank: 735
score: 99.48482082201087
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n == ) ) ;
rank: 735
score: 99.47245483398437
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 735
score: 99.4390804893092
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 735
score: 99.39029733758224
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true , node ) ;
rank: 735
score: 99.39027913411458
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get ( 0 ) ;
rank: 736
score: 99.4786376953125
patch: return new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 736
score: 99.44210379464286
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . clone ( ) ;
rank: 736
score: 99.4083740234375
patch: return fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 736
score: 99.31559922960069
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n + ) ;
rank: 737
score: 99.47789417613636
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Next ( ) , n ) ;
rank: 737
score: 99.47221235795455
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n , n ) ) ;
rank: 737
score: 99.43788364955357
patch: Node fall CaMeL Through = ( Node < Branch >> ) out CaMeL Edges . get ( 0 ) ;
rank: 737
score: 99.40764417146382
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n
rank: 737
score: 99.38761596679687
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node , n ) ;
rank: 737
score: 99.34150247012867
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 737
score: 99.31559753417969
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( next ) ;
rank: 738
score: 99.48350306919643
patch: Node g CaMeL Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 738
score: 99.476806640625
patch: if ( n . get CaMeL Next ( ) == null || n . has CaMeL Children ( ) ) {
rank: 738
score: 99.4384765625
patch: } try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 738
score: 99.4370052939967
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 738
score: 99.34083467371323
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( mode ) ;
rank: 739
score: 99.4833347486413
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . CONTINUE ) ) {
rank: 739
score: 99.40434827302632
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 739
score: 99.38602294921876
patch: Node fall CaMeL Through = ( ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 740
score: 99.47386532738095
patch: Node < String >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 740
score: 99.43505859375
patch: String fall CaMeL Through = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 740
score: 99.38897094726562
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Last CaMeL Child ( ) ) ;
rank: 740
score: 99.385009765625
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ;
rank: 740
score: 99.33979348575367
patch: Thread fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 740
score: 99.3133903952206
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( callback ) ;
rank: 741
score: 99.47263697574013
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ] ) ) ;
rank: 741
score: 99.43496704101562
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : null ;
rank: 741
score: 99.31255026424633
patch: fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 742
score: 99.47113327752976
patch: fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 742
score: 99.47027297247024
patch: Node < Node >> out CaMeL Edges = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 742
score: 99.40316433376736
patch: if ( out CaMeL Edges . size ( ) == 1 ) { return n ; }
rank: 742
score: 99.33881692325367
patch: Class fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 743
score: 99.4702481356534
patch: return fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 743
score: 99.46967163085938
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ( ) ;
rank: 743
score: 99.43414306640625
patch: int fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Type ( ) ;
rank: 743
score: 99.33857278262867
patch: Rule fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 744
score: 99.4815673828125
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . NOT ) {
rank: 744
score: 99.43412853422619
patch: short fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 744
score: 99.40264571340461
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; return out CaMeL Edges ;
rank: 744
score: 99.38587646484375
patch: Node end = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 744
score: 99.33796243106617
patch: Child fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 744
score: 99.3104248046875
patch: try { if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 745
score: 99.480712890625
patch: final List < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 745
score: 99.46961558948864
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ;
rank: 745
score: 99.4341064453125
patch: Node < Node >> fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 745
score: 99.43334350585937
patch: Object fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 745
score: 99.38114420572917
patch: Node fall CaMeL Through = ( Node ) compute CaMeL Following ( n , n ) ;
rank: 745
score: 99.33768956801471
patch: vfall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 746
score: 99.4806795987216
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . NAME ) {
rank: 746
score: 99.46933128720238
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } } }
rank: 746
score: 99.43340100740132
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; * /
rank: 746
score: 99.40020751953125
patch: } else if ( n . get CaMeL Next ( ) . has CaMeL Children ( ) ) {
rank: 746
score: 99.3837890625
patch: Node fall CaMeL Through = this . compute CaMeL Following ( n ) ;
rank: 746
score: 99.37956799958882
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false , node ) ;
rank: 746
score: 99.30874454273896
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( start ) ;
rank: 747
score: 99.480302734375
patch: if ( n . has CaMeL Next ( ) ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 747
score: 99.4691162109375
patch: out CaMeL Edges . = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 747
score: 99.4677798622533
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( 0 ) ;
rank: 747
score: 99.43263549804688
patch: Node < Node > compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 747
score: 99.39883083767361
patch: return fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 747
score: 99.30832806755515
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( definition ) ;
rank: 748
score: 99.46719215029762
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ( n ) ;
rank: 748
score: 99.39869600183823
patch: if ( out CaMeL Edges . size ( ) > 1 ) { break ; }
rank: 748
score: 99.38338623046874
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Parent ( ) ;
rank: 748
score: 99.33607700892857
patch: Node fall CaMeL Through = n . get CaMeL Parent ( ) ;
rank: 749
score: 99.47828258167614
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . CONTINUE ) {
rank: 749
score: 99.43169844777961
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get CaMeL Next ( ) ;
rank: 749
score: 99.39782036675348
patch: return g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 749
score: 99.38324584960938
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; } fall CaMeL Through = true ;
rank: 749
score: 99.33559841579861
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Name ( ) ) ;
rank: 750
score: 99.47805918817934
patch: Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND )
rank: 750
score: 99.46842651367187
patch: if ( out CaMeL Edges . size ( ) == 1 && n . get CaMeL Next ( )
rank: 750
score: 99.43074544270833
patch: fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . get CaMeL Value ( ) ;
rank: 750
score: 99.39754231770833
patch: if ( n . has CaMeL Children ( ) ) {
rank: 750
score: 99.3829409950658
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } * /
rank: 750
score: 99.33556450737848
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 750
score: 99.30494520399306
patch: compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ) ;
rank: 751
score: 99.46720377604167
patch: g CaMeL Node = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 751
score: 99.46452893708882
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return out CaMeL Edges ;
rank: 751
score: 99.43076171875
patch: continue ; } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 751
score: 99.43042602539063
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . next ;
rank: 751
score: 99.39674886067708
patch: int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 751
score: 99.33465576171875
patch: Node fall CaMeL Through ; = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 752
score: 99.47693401834239
patch: Node if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 752
score: 99.46378580729167
patch: Preconditions . add ( Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 752
score: 99.42983863467262
patch: Iterator < String >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 752
score: 99.3764712685033
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , filter ) ;
rank: 752
score: 99.33423569623162
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) Node
rank: 752
score: 99.30249701605902
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , ) .
rank: 753
score: 99.46377902560764
patch: int out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 753
score: 99.42979736328125
patch: short fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 753
score: 99.4283383018092
patch: break ; } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 753
score: 99.3949038856908
patch: try { return out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 753
score: 99.33370632595486
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Node ) true ;
rank: 753
score: 99.30143737792969
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent ) ;
rank: 754
score: 99.42796630859375
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ) ;
rank: 754
score: 99.381787109375
patch: Node edge = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 754
score: 99.37593801398026
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true , true ) ;
rank: 754
score: 99.33308679917279
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( end ) ;
rank: 754
score: 99.30093044704861
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 755
score: 99.4656982421875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . get CaMeL Next ( ) ) ;
rank: 755
score: 99.46320452008929
patch: if ( out CaMeL Edges . size ( ) == 1 && n . has CaMeL Children ( ) )
rank: 755
score: 99.42912946428571
patch: Node fall CaMeL Through = new Node < Branch >> ( n . get CaMeL Next ( ) ) ;
rank: 755
score: 99.38987901475694
patch: if ( out CaMeL Edges . size ( ) == 1 ) { break ; } }
rank: 756
score: 99.46544799804687
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 756
score: 99.4269775390625
patch: Node < Type > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 756
score: 99.38910381610577
patch: Node next = out CaMeL Edges . get ( 0 ) ;
rank: 756
score: 99.33191680908203
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 756
score: 99.30055147058823
patch: Node compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 757
score: 99.4654208096591
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( ] ) ) ;
rank: 757
score: 99.38869757401316
patch: Node fall CaMeL Through = new g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 757
score: 99.38120727539062
patch: if ( fall CaMeL Through ) { Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 757
score: 99.3319091796875
patch: final Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent ) ;
rank: 757
score: 99.29996984145221
patch: Node fall CaMeL Through = fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 758
score: 99.46234421502976
patch: Node < Node , Branch >> list = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 758
score: 99.42809448242187
patch: Node fall CaMeL Through = fall CaMeL Through = fall CaMeL Through . get CaMeL Value ( ) ;
rank: 758
score: 99.3885498046875
patch: Node next = n . get CaMeL Out CaMeL Edges ( ) . get ( 0 ) ;
rank: 758
score: 99.374267578125
patch: Node fall CaMeL Through = ( ( Node ) compute CaMeL Following ( n ) ) ;
rank: 758
score: 99.33180147058823
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( tracker ) ;
rank: 758
score: 99.29889993106617
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( flow ) ;
rank: 759
score: 99.4756192294034
patch: Select fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 759
score: 99.4646883877841
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ; return fall CaMeL Through ;
rank: 759
score: 99.42801063939145
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 759
score: 99.42411499023437
patch: Set < Token > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 759
score: 99.33173370361328
patch: Node fall CaMeL Through = new ( compute CaMeL Following ( n ) ) ;
rank: 759
score: 99.29872759650735
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) {
rank: 760
score: 99.47559703480114
patch: final List < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 760
score: 99.46168823242188
patch: Node fall CaMeL Through = compute CaMeL Follow CaMeL Node ( compute CaMeL Following ( n ) ) ;
rank: 760
score: 99.42559523809524
patch: int fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get CaMeL Type ( ) ;
rank: 760
score: 99.386474609375
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; return fall CaMeL Through ;
rank: 760
score: 99.37879702919408
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } finally {
rank: 760
score: 99.37407836914062
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) node ) ;
rank: 760
score: 99.33159323299633
patch: K fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 760
score: 99.29829237196181
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ; ;
rank: 761
score: 99.4233154296875
patch: Node < Position > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 761
score: 99.378173828125
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; ;
rank: 761
score: 99.2967170266544
patch: Branching fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 762
score: 99.47414232336956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n .
rank: 762
score: 99.46430896577381
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } * /
rank: 762
score: 99.46070556640625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n . get CaMeL Value ( ) ) ;
rank: 762
score: 99.42501220703124
patch: int fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) . size ( ) ;
rank: 762
score: 99.38527960526316
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . size ( ) ) ;
rank: 762
score: 99.37814812911184
patch: b = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 762
score: 99.32964409722223
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching 0 ( n ) ;
rank: 762
score: 99.29601332720588
patch: try { Node fall CaMeL Through = this . compute CaMeL Following ( n ) ;
rank: 763
score: 99.42215126439145
patch: } = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 763
score: 99.37803141276042
patch: return fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 763
score: 99.37300832648026
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) &&
rank: 763
score: 99.32957548253677
patch: = fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 763
score: 99.29591200086806
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return
rank: 764
score: 99.47386633831522
patch: Iterator < Node , Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 764
score: 99.4640880766369
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , n ) ) ; }
rank: 764
score: 99.45815022786458
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ; }
rank: 764
score: 99.424462890625
patch: Node next = g CaMeL Node . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 764
score: 99.38395610608552
patch: if ( out CaMeL Edges . size ( ) == 1 ) { break ; } else {
rank: 764
score: 99.37740285773026
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } ) ;
rank: 764
score: 99.32926432291667
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( Node ) false ;
rank: 765
score: 99.47386633831522
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Node . UNCOND ) {
rank: 765
score: 99.457763671875
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( g CaMeL Node ) ; return fall CaMeL Through ;
rank: 765
score: 99.3704833984375
patch: Node fall CaMeL Through = { try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 765
score: 99.32909342447917
patch: Node fall CaMeL Through = compute CaMeL Following ( n , node ) ;
rank: 765
score: 99.29507785373264
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , node ) ;
rank: 766
score: 99.47336744225544
patch: if ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) == Branch . UNCOND )
rank: 766
score: 99.3814338235294
patch: if ( out CaMeL Edges . size ( ) == 0 ) { break ; }
rank: 766
score: 99.29484727647569
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ;
rank: 767
score: 99.46051897321429
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } ) ;
rank: 767
score: 99.455712890625
patch: Node index = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 767
score: 99.42272367931548
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . to CaMeL Array ( ) ;
rank: 767
score: 99.38141190378289
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 767
score: 99.36992444490132
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . false ) ;
rank: 767
score: 99.32706027560764
patch: Node fall CaMeL Through = new Node 0 ( compute CaMeL Following ( n ) ) ;
rank: 767
score: 99.29479262408088
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 768
score: 99.47304899796195
patch: Hashtable < Node , Branch > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 768
score: 99.45958251953125
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return next ;
rank: 768
score: 99.37606472439236
patch: Node fall CaMeL Through = new Node ( n . get CaMeL First ( ) ) ;
rank: 769
score: 99.47294284986413
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . RETURN ) ) {
rank: 769
score: 99.45885649181548
patch: Set < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 769
score: 99.38053676060268
patch: if ( out CaMeL Edges . size ( ) > 1 ) {
rank: 769
score: 99.32659553079044
patch: byte fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 769
score: 99.29419623480902
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) . }
rank: 770
score: 99.4728367017663
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Follow CaMeL Node ( n ) ) ;
rank: 770
score: 99.45606631324405
patch: Collection < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 770
score: 99.4546130952381
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n ) ; return fall CaMeL Through ;
rank: 770
score: 99.37947805304276
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Value ( $STRING$ ) ;
rank: 770
score: 99.37468405330883
patch: Node fall CaMeL Through = ( Node ) n . get CaMeL Next ( ) ;
rank: 770
score: 99.36835680509868
patch: statements = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 770
score: 99.32533174402573
patch: Node should CaMeL Remove = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 770
score: 99.29387749565973
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; )
rank: 771
score: 99.47256324404762
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . FUNCTION )
rank: 771
score: 99.4556820518092
patch: Node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 771
score: 99.45356750488281
patch: if ( n . has CaMeL Children ( ) ) { return n ; }
rank: 771
score: 99.4205386513158
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 771
score: 99.32526991102431
patch: Node fall CaMeL Through = n . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 771
score: 99.29350011488971
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( NONE ) ;
rank: 772
score: 99.47207302517361
patch: if ( out CaMeL Edges . get ( 0 ) == Branch . UNCOND ) {
rank: 772
score: 99.45406668526786
patch: int < Branch >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 772
score: 99.45317150297619
patch: Node < Branch > fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 772
score: 99.41926879882813
patch: String fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 772
score: 99.41603393554688
patch: Node ref = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 772
score: 99.37912326388889
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ( n ) ) ;
rank: 772
score: 99.36824115953948
patch: if ( fall CaMeL Through && try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 772
score: 99.29233685661765
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( max ) ;
rank: 773
score: 99.47205171130952
patch: if ( fall CaMeL Through ) { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 773
score: 99.41913805509868
patch: Node node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 773
score: 99.32237141927084
patch: Node fall CaMeL Through = new Node < Node > ( n ) ;
rank: 773
score: 99.29213579963235
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ||
rank: 774
score: 99.47191220238095
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . RETURN )
rank: 774
score: 99.45243908110119
patch: Node < Exception >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 774
score: 99.41876541940789
patch: Node fall CaMeL Through = fall CaMeL Through = out CaMeL Edges . get ( 0 ) ;
rank: 774
score: 99.41483764648437
patch: Node -- = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 774
score: 99.36883075420673
patch: fall CaMeL Through = compute CaMeL Following ( n ) ; }
rank: 774
score: 99.32157628676471
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching $NUMBER$ ( ) ;
rank: 775
score: 99.4718350497159
patch: Node g CaMeL Node = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 775
score: 99.36858809621711
patch: Node fall CaMeL Through = this . fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 775
score: 99.36723889802632
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false , true ) ;
rank: 775
score: 99.32072179457721
patch: Tree fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 775
score: 99.29069010416667
patch: / void fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 776
score: 99.447998046875
patch: Node ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 776
score: 99.41852484809027
patch: Node node = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 776
score: 99.41405029296875
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parent ) ;
rank: 776
score: 99.367919921875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( code ) ;
rank: 776
score: 99.2906494140625
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 0 ) ;
rank: 777
score: 99.3663330078125
patch: fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Next ( ) ) ;
rank: 777
score: 99.36588745117187
patch: Node fall CaMeL Through = ( Node ) try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 777
score: 99.31940569196429
patch: Node fall CaMeL Through = compute CaMeL Following ( n , ) ;
rank: 777
score: 99.28915066189236
patch: ) Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 778
score: 99.47134001358695
patch: return out CaMeL Edges . get ( 1 ) . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 778
score: 99.44788208007813
patch: try { Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 778
score: 99.41769891036184
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) 1 ;
rank: 778
score: 99.413330078125
patch: return fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 778
score: 99.37181332236842
patch: } Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 778
score: 99.36545281661184
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( code CaMeL Points ) ;
rank: 778
score: 99.31915961371527
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ; ;
rank: 778
score: 99.28854031032986
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 779
score: 99.36547241210937
patch: Node fall CaMeL Through = null ; Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 779
score: 99.28757731119792
patch: CaMeL Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 780
score: 99.47022545855978
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; return fall CaMeL Through ;
rank: 780
score: 99.44709608289931
patch: break try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 780
score: 99.44611206054688
patch: Node < Node , Branch > g CaMeL Node = out CaMeL Edges . get ( 0 ) ;
rank: 780
score: 99.36827087402344
patch: Node next = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 780
score: 99.36442260742187
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following != ) ;
rank: 780
score: 99.28651258680556
patch: Node fall CaMeL Through = fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 781
score: 99.41590640419408
patch: Node node = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 781
score: 99.40987548828124
patch: Node < Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 781
score: 99.36403294613487
patch: if = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 781
score: 99.31884765625
patch: Node fall CaMeL Through -= try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 781
score: 99.28617589613971
patch: Jump fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 782
score: 99.46979314630681
patch: return n . get CaMeL Destination ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 782
score: 99.44654846191406
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } }
rank: 782
score: 99.44449655633224
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . get ( ) ;
rank: 782
score: 99.3638671875
patch: if $NUMBER$ ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) {
rank: 782
score: 99.31560202205883
patch: Map fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 782
score: 99.28506290211396
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( original ) ;
rank: 783
score: 99.44654482886905
patch: break try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 783
score: 99.44400185032895
patch: fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 783
score: 99.40821597450658
patch: Branching = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 783
score: 99.36713324652777
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; {
rank: 783
score: 99.36218939887152
patch: Node fall CaMeL Through = this . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 783
score: 99.31435977711396
patch: ? fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 783
score: 99.28432888454861
patch: try { fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) .
rank: 784
score: 99.44383329503677
patch: if ( n . has CaMeL Children ( ) ) { return fall CaMeL Through ;
rank: 784
score: 99.41494911595395
patch: Node fall CaMeL Through = compute CaMeL Following ( n . get CaMeL Destination ( ) ) ;
rank: 784
score: 99.36590169270833
patch: } if ( out CaMeL Edges . size ( ) == 1 ) {
rank: 784
score: 99.31391457950367
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 784
score: 99.28427559988839
patch: Node fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 785
score: 99.44403435202206
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } else {
rank: 785
score: 99.40691528320312
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; } ;
rank: 785
score: 99.363232421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . ( ) ) ;
rank: 785
score: 99.3132683249081
patch: Reduction fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 785
score: 99.28426784939236
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n $NUMBER$ ) ;
rank: 786
score: 99.40667403371711
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; break ; }
rank: 786
score: 99.36422390407986
patch: return n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 786
score: 99.36282509251645
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( source CaMeL Node ) ;
rank: 786
score: 99.35956217447917
patch: Node fall CaMeL Through = System . get CaMeL Property ( $STRING$ ) ;
rank: 786
score: 99.28414577907986
patch: Node fall CaMeL Through = ( Node [ ] ) compute CaMeL Following ( n ) ;
rank: 787
score: 99.4106201171875
patch: Node fall CaMeL Through = n . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 787
score: 99.36364028033088
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 787
score: 99.36246530633224
patch: target = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 787
score: 99.35926577919408
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) . get CaMeL Parent ( ) ;
rank: 788
score: 99.46717418323864
patch: Transaction fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 788
score: 99.44244384765625
patch: Node [ > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 788
score: 99.35870682565789
patch: fall CaMeL Through = compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ;
rank: 788
score: 99.28273638556985
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( OTHER ) ;
rank: 789
score: 99.4387939453125
patch: Node < Node , Branch >> = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 789
score: 99.409716796875
patch: Node fall CaMeL Through = fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 789
score: 99.361328125
patch: Node fall CaMeL Through = new Node ( ( Node ) compute CaMeL Following ( n ) ) ;
rank: 789
score: 99.35764674136513
patch: Node fall CaMeL Through = n . get ( n . get CaMeL Next ( ) ) ;
rank: 789
score: 99.31214815027573
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 789
score: 99.28252704326923
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) .
rank: 790
score: 99.46658457880434
patch: if ( n . get CaMeL Next ( ) . get CaMeL Value ( ) == Branch . UNCOND ) {
rank: 790
score: 99.40878475413604
patch: } else if ( n . has CaMeL Children ( ) ) { break ; }
rank: 790
score: 99.35637464021382
patch: s = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 790
score: 99.31208147321429
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) )
rank: 790
score: 99.28117370605469
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( null ) ;
rank: 791
score: 99.36037772042411
patch: if ( out CaMeL Edges . size ( ) == 0 ) {
rank: 791
score: 99.36020914713542
patch: Node fall CaMeL Through = ( Node ) ( compute CaMeL Following ( n ) ) ;
rank: 791
score: 99.31008013556985
patch: Member fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 791
score: 99.28038832720588
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( global ) ;
rank: 792
score: 99.43995971679688
patch: g CaMeL Node = Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 792
score: 99.4031982421875
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . n ) ;
rank: 792
score: 99.35778130425348
patch: } switch ( n . get CaMeL Next ( ) ) { case Token . RETURN :
rank: 792
score: 99.35539245605469
patch: Node fall CaMeL Through = new Node ( fall CaMeL Through , n ) ;
rank: 792
score: 99.30990780101104
patch: I fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 793
score: 99.43739013671875
patch: Node fall CaMeL Through = n . get CaMeL First ( ) . get CaMeL Value ( ) ;
rank: 793
score: 99.40686645507813
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) : 0 ;
rank: 793
score: 99.35764447380515
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( )
rank: 793
score: 99.35506863064236
patch: if ( fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) )
rank: 793
score: 99.30905330882354
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 794
score: 99.46296830610795
patch: Score fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 794
score: 99.43442993164062
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return fall CaMeL Through ; }
rank: 794
score: 99.27613740808823
patch: Status fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 795
score: 99.46286843039773
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . TYPE ) {
rank: 795
score: 99.43846493675595
patch: Node < Branch > out CaMeL Edges = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 795
score: 99.40587158203125
patch: Node fall CaMeL Through = fall CaMeL Through = fall CaMeL Through . get CaMeL Destination ( ) ;
rank: 795
score: 99.35593548943015
patch: Node fall CaMeL Through = this . out CaMeL Edges . get ( 0 ) ;
rank: 795
score: 99.3484748391544
patch: } Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 795
score: 99.30791877297794
patch: Bucket fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 796
score: 99.46272416548295
patch: Leaf fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 796
score: 99.35647743626645
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $NUMBER$ , n ) ;
rank: 796
score: 99.35591634114583
patch: switch ( out CaMeL Edges . get ( 0 ) ) { case Token . RETURN :
rank: 796
score: 99.30722943474265
patch: Double fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 796
score: 99.27439970128677
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( declarations ) ;
rank: 797
score: 99.46259998139881
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . BREAK )
rank: 797
score: 99.4298828125
patch: try { return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ; }
rank: 797
score: 99.35531277126736
patch: Edges fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 797
score: 99.35414751838235
patch: Node fall CaMeL Through = ( Node , compute CaMeL Following ( n ) ) ;
rank: 797
score: 99.34658474392361
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } ;
rank: 797
score: 99.30715044806985
patch: Chunk fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 797
score: 99.27407657398896
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( description ) ;
rank: 798
score: 99.46155894886364
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n
rank: 798
score: 99.35528564453125
patch: } switch ( n . get CaMeL Next ( ) ) { case Token . BREAK :
rank: 798
score: 99.27263997395833
patch: Node compute = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ) ;
rank: 799
score: 99.4613924893466
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . NULL ) {
rank: 799
score: 99.42798614501953
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Destination ( ) ;
rank: 799
score: 99.35398356119792
patch: } case Token . BREAK : if ( n . has CaMeL Children ( ) ) {
rank: 799
score: 99.34091525607639
patch: } fall CaMeL Through ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 799
score: 99.30666934742646
patch: Event fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 800
score: 99.40279541015624
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) + $NUMBER$ ;
rank: 800
score: 99.35393323396382
patch: next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 800
score: 99.3394775390625
patch: Node fall CaMeL Through = nodes . get ( 0 ) . get ( 0 ) ;
rank: 800
score: 99.30612362132354
patch: Field fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 800
score: 99.27205164292279
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( value ) ;
rank: 801
score: 99.46033824573864
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) == null ) {
rank: 801
score: 99.40227307771382
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( fall CaMeL Through ) ;
rank: 801
score: 99.3525326377467
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ( Node ) n ) ;
rank: 801
score: 99.3387092141544
patch: Node fall CaMeL Through = g CaMeL Node . compute CaMeL Following ( n ) ;
rank: 801
score: 99.305908203125
patch: Operator fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 801
score: 99.2707160500919
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( COMMA ) ;
rank: 802
score: 99.46019398082386
patch: if ( ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION )
rank: 802
score: 99.43280639648438
patch: Node property = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 802
score: 99.35255432128906
patch: if ( out CaMeL Edges . size ( ) > 1 ) { break ;
rank: 802
score: 99.33862982855902
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Last CaMeL Child ( ) ;
rank: 803
score: 99.42977905273438
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , node ) ;
rank: 803
score: 99.42508544921876
patch: Node fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Type ( ) ;
rank: 803
score: 99.40078125
patch: Class fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Type ( ) ;
rank: 803
score: 99.39450555098684
patch: System . out . println ( $STRING$ + n . get CaMeL Next ( ) ) ; }
rank: 803
score: 99.35014905427632
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this . true ) ;
rank: 803
score: 99.3050178079044
patch: Position fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 803
score: 99.26943072150735
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( used ) ;
rank: 804
score: 99.46003861860795
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( ) != null ) {
rank: 804
score: 99.39241108141448
patch: } else Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 804
score: 99.34967719184027
patch: fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 804
score: 99.30457414899554
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ) ;
rank: 804
score: 99.26938045726104
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( EQ ) ;
rank: 805
score: 99.42448344983552
patch: return ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 805
score: 99.3996941061581
patch: if ( n . has CaMeL Children ( ) ) { break ; } } }
rank: 805
score: 99.39069567228618
patch: try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 805
score: 99.34910824424342
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ||
rank: 805
score: 99.26881626674107
patch: Node compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 806
score: 99.42515869140625
patch: g CaMeL Node = cur CaMeL Cfg . get CaMeL Directed CaMeL Graph CaMeL Node ( n ) ;
rank: 806
score: 99.39942691200658
patch: Node fall CaMeL Through = ( Node , out CaMeL Edges . get ( 0 ) ) ;
rank: 806
score: 99.35028076171875
patch: Node next = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 806
score: 99.34892721737133
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( changed ) ;
rank: 806
score: 99.30384018841912
patch: Queue fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 806
score: 99.26871984145221
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( options ) ;
rank: 807
score: 99.45793013139205
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . NO ) {
rank: 807
score: 99.38970947265625
patch: compute CaMeL Following ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ; }
rank: 807
score: 99.34995524088542
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges . get ( 0 )
rank: 807
score: 99.33214613970588
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; break ; } }
rank: 807
score: 99.3032585592831
patch: Word fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 807
score: 99.26860046386719
patch: Node fall CaMeL Through = try ( compute CaMeL Following ( n ) ) ;
rank: 808
score: 99.45757501775569
patch: Invocation fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 808
score: 99.3982666015625
patch: fall CaMeL Through = n . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 808
score: 99.34868706597223
patch: switch ( out CaMeL Edges . get ( 0 ) ) { case Token . BREAK :
rank: 808
score: 99.33053768382354
patch: Node fall CaMeL Through = new try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 808
score: 99.30304314108456
patch: Node fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( ) ) ;
rank: 809
score: 99.34743138363487
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , false ) ;
rank: 809
score: 99.34575059678819
patch: switch ( n . get CaMeL Next ( ) . get CaMeL Value ( ) ) {
rank: 809
score: 99.32686360677083
patch: Node fall CaMeL Through = System . current CaMeL Time CaMeL Millis ( ) / $NUMBER$ ;
rank: 809
score: 99.30234375
patch: Node fall CaMeL Through = compute CaMeL Following ( node , n ) ;
rank: 810
score: 99.45744185014205
patch: while ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 810
score: 99.42214786305146
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return null ;
rank: 810
score: 99.39653930664062
patch: Node fall CaMeL Through = compute CaMeL Following ( out CaMeL Edges . get ( 0 ) ) ;
rank: 810
score: 99.34700734991776
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Node n ) ;
rank: 810
score: 99.3452507467831
patch: case Token . BREAK : if ( n . has CaMeL Children ( ) ) {
rank: 810
score: 99.30185834099265
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new ) ;
rank: 810
score: 99.2645263671875
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; try {
rank: 811
score: 99.45549982244319
patch: Node cur CaMeL Cfg = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 811
score: 99.42176729090073
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 811
score: 99.39618530273438
patch: Node fall CaMeL Through = Di CaMeL Graph CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 811
score: 99.34373643663194
patch: Node next = n . get CaMeL Destination ( ) . get CaMeL Destination ( ) ;
rank: 811
score: 99.32504272460938
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Code ( ) ;
rank: 811
score: 99.26448328354779
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( props ) ;
rank: 812
score: 99.42127749794408
patch: remove ( out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ) ;
rank: 812
score: 99.39537353515625
patch: Node fall CaMeL Through ++ ; remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 812
score: 99.34356011284723
patch: else fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 812
score: 99.32459259033203
patch: Node fall CaMeL Through = n . get CaMeL Last CaMeL Child ( ) ;
rank: 812
score: 99.29961081112133
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( input ) ;
rank: 813
score: 99.41826428865132
patch: return = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 813
score: 99.3820736533717
patch: Node < Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 813
score: 99.29932358685662
patch: Sequence fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 813
score: 99.26231474034927
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( min ) ;
rank: 814
score: 99.45493386008523
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Node . FUNCTION ) {
rank: 814
score: 99.41675482855902
patch: Expr fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 814
score: 99.39492315995066
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges [ 0
rank: 814
score: 99.38149126838235
patch: try { Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 814
score: 99.34315490722656
patch: Node fall CaMeL Through = super . get CaMeL Out CaMeL Edges ( ) ;
rank: 814
score: 99.32345241970486
patch: Node < Node > fall CaMeL Through = new Node < Node > ( n ) ;
rank: 814
score: 99.26220703125
patch: try { = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 815
score: 99.41648463199013
patch: final Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 815
score: 99.39489067925348
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) *
rank: 815
score: 99.38116048177083
patch: Node parent = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 815
score: 99.32271321614583
patch: System Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 816
score: 99.417236328125
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) , n ) ;
rank: 816
score: 99.41605631510417
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , out CaMeL Edges ) ;
rank: 816
score: 99.38096788194444
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n . ) ;
rank: 816
score: 99.34239366319444
patch: } switch ( out CaMeL Edges . size ( ) ) { case Token . BREAK :
rank: 816
score: 99.2621711282169
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( BLOCK ) ;
rank: 817
score: 99.41717208059211
patch: out CaMeL Edges . add ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 817
score: 99.41398111979167
patch: try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 817
score: 99.39387817382813
patch: short fall CaMeL Through = n . get CaMeL Next ( ) . get CaMeL Value ( ) ;
rank: 817
score: 99.34351870888158
patch: Node fall CaMeL Through = node . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 817
score: 99.3423713235294
patch: return n . get CaMeL Destination ( ) . get CaMeL Value ( ) ; }
rank: 817
score: 99.31430233226104
patch: Node fall CaMeL Through = n ) . get CaMeL First CaMeL Child ( ) ;
rank: 817
score: 99.29345703125
patch: Node fall CaMeL Through = compute CaMeL Following ( ) ;
rank: 818
score: 99.45429021661931
patch: Operation fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 818
score: 99.3433773643092
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 1 , n ) ;
rank: 818
score: 99.31236921037946
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; }
rank: 819
score: 99.45375754616477
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . ERROR ) {
rank: 819
score: 99.41229926215277
patch: Branch fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 820
score: 99.41371556332237
patch: Node += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 820
score: 99.4122543334961
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 820
score: 99.33481732536765
patch: fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 820
score: 99.2594353170956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( MIN ) ;
rank: 821
score: 99.45210193452381
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . TYPE )
rank: 821
score: 99.38430304276316
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 821
score: 99.29151916503906
patch: Node fall CaMeL Through = compute CaMeL Following ( ( Node ) n ) ;
rank: 821
score: 99.2583869485294
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( references ) ;
rank: 822
score: 99.44923095703125
patch: if ( n . has CaMeL Children ( ) ) { break ; } case Token . BREAK :
rank: 822
score: 99.38360595703125
patch: Document fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 822
score: 99.33265596277573
patch: } if ( out CaMeL Edges . size ( ) == 1 ) { break ;
rank: 822
score: 99.28925030048077
patch: Node fall CaMeL Through = new Node $NUMBER$ ( n ) ;
rank: 822
score: 99.25708770751953
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ref ) ;
rank: 823
score: 99.3819580078125
patch: Class fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 823
score: 99.30703938802084
patch: Node fall CaMeL Through = new Node ( ( Node ) n ) ;
rank: 823
score: 99.25648600260416
patch: Node fall CaMeL Through = compute CaMeL Following ( n , true ) ;
rank: 824
score: 99.38186163651316
patch: int fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 824
score: 99.3286994485294
patch: try { return g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 824
score: 99.28786333869485
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) =
rank: 824
score: 99.25595990349265
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) .
rank: 825
score: 99.40872192382812
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; return n ;
rank: 825
score: 99.32818962545956
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch (
rank: 825
score: 99.30329132080078
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out ( ) ;
rank: 825
score: 99.28526204427084
patch: while ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 825
score: 99.25588809742646
patch: Children fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 826
score: 99.44731212797619
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n == null
rank: 826
score: 99.40926784939236
patch: Preconditions fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 826
score: 99.37209065755208
patch: System . out . println ( $STRING$ + n . get CaMeL Next ( ) ) ;
rank: 826
score: 99.30080997242646
patch: fall CaMeL Through = fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 826
score: 99.28187913161058
patch: String fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 826
score: 99.25582885742188
patch: fall CaMeL Through += try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 827
score: 99.37836657072368
patch: if ( n . has CaMeL Children ( ) ) { break ; } } return n ;
rank: 827
score: 99.29969787597656
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ; }
rank: 827
score: 99.25313074448529
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 828
score: 99.44623093377976
patch: Collection < Node > out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 828
score: 99.40806749131944
patch: if ( n . has CaMeL Children ( ) ) { return out CaMeL Edges ; }
rank: 828
score: 99.40596313476563
patch: Node type = n . get CaMeL First CaMeL Child ( ) . get CaMeL Value ( ) ;
rank: 828
score: 99.33827611019737
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ref , n ) ;
rank: 828
score: 99.32615661621094
patch: if ( out CaMeL Edges . size ( ) == 0 ) { break ;
rank: 828
score: 99.25282197840073
patch: try { Node compute = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 829
score: 99.44464111328125
patch: if ( n . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 829
score: 99.40744018554688
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n + 0 ) ;
rank: 829
score: 99.33798057154605
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( object CaMeL Node ) ;
rank: 829
score: 99.32563781738281
patch: if ( out CaMeL Edges . size ( ) == 1 ) return n ;
rank: 829
score: 99.29881286621094
patch: } fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 829
score: 99.27915852864584
patch: Node fall CaMeL Through = n . compute CaMeL Following ( n ) ;
rank: 830
score: 99.40713500976562
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , null ) ;
rank: 830
score: 99.40446391858552
patch: remove = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 830
score: 99.37690172697368
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 830
score: 99.36475287543402
patch: else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 830
score: 99.2742691040039
patch: boolean fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 830
score: 99.25215418198529
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( parts ) ;
rank: 831
score: 99.4398681640625
patch: if ( n . has CaMeL Children ( ) && n . has CaMeL Next ( ) ) {
rank: 831
score: 99.37590874565973
patch: Token fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 831
score: 99.25112735523896
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( inline ) ;
rank: 832
score: 99.43976702008929
patch: Collection < Node >> out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 832
score: 99.40613555908203
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL First ( ) ;
rank: 832
score: 99.32227280560662
patch: case Token . RETURN : if ( n . has CaMeL Children ( ) ) {
rank: 832
score: 99.29667154947917
patch: return fall CaMeL Through ( compute CaMeL Following ( n ) ) ; }
rank: 832
score: 99.27383626302084
patch: Node fall CaMeL Through = compute CaMeL Following ( this , n ) ;
rank: 832
score: 99.25043083639706
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( errors ) ;
rank: 833
score: 99.43952287946429
patch: try { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return fall CaMeL Through ;
rank: 833
score: 99.40584891183036
patch: Node fall CaMeL Through = n . get CaMeL Destination ( ) ;
rank: 833
score: 99.40326248972039
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , Branch . UNCOND ) ;
rank: 833
score: 99.36156508501838
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( double ) ;
rank: 833
score: 99.27259114583333
patch: Node fall CaMeL Through = compute CaMeL Following ( n , parent ) ;
rank: 834
score: 99.4031918174342
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return g CaMeL Node ;
rank: 834
score: 99.3343441611842
patch: super . try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 834
score: 99.32140395220588
patch: if ( n . get CaMeL Next ( ) != null ) { break ; }
rank: 834
score: 99.2916618795956
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( ) ;
rank: 834
score: 99.27099609375
patch: Object fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 834
score: 99.24982048483456
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) /
rank: 835
score: 99.36920844184027
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL In CaMeL Edges ( ) ;
rank: 835
score: 99.33302708675987
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( 0 , n ) ;
rank: 835
score: 99.29073392427884
patch: fall CaMeL Through = true ; fall CaMeL Through = true ;
rank: 835
score: 99.27097731370192
patch: Node fall CaMeL Through = compute CaMeL Following ( this ) ;
rank: 835
score: 99.24957634420956
patch: Offset fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 836
score: 99.43543701171875
patch: if ( n . has CaMeL Children ( ) ) { break ; } case Token . RETURN :
rank: 836
score: 99.3201042624081
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching [ 0 ] ;
rank: 836
score: 99.2708984375
patch: Node fall CaMeL Through = compute CaMeL Following ( n , false ) ;
rank: 836
score: 99.24952697753906
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( element ) ;
rank: 837
score: 99.39312065972223
patch: g CaMeL Node . get CaMeL Out CaMeL Edges ( ) . remove ( 0 ) ;
rank: 837
score: 99.27035958426339
patch: try { Node fall CaMeL Through = new Node ( n ) ;
rank: 837
score: 99.2494758157169
patch: @ fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 838
score: 99.43241954985119
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . BLOCK )
rank: 838
score: 99.40106201171875
patch: if ( out CaMeL Edges . size ( ) == 0 ) { return n ; }
rank: 838
score: 99.31879739200367
patch: if ( out CaMeL Edges . size ( ) == 1 ) { return n ;
rank: 838
score: 99.28638458251953
patch: Node fall CaMeL Through = compute CaMeL Following ( compute ( n ) ) ;
rank: 838
score: 99.2676773071289
patch: Object fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 838
score: 99.24943991268383
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( site ) ;
rank: 839
score: 99.3665707236842
patch: else fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 839
score: 99.3172607421875
patch: switch ( n . get CaMeL Next ( ) ) { case Token . RETURN :
rank: 839
score: 99.28481876148896
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out ) ;
rank: 839
score: 99.2674789428711
patch: Iterator < Node > fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 839
score: 99.24893008961396
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( NULL ) ;
rank: 840
score: 99.43171037946429
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch . UNCOND
rank: 840
score: 99.39885397518383
patch: if ( n . get CaMeL Next ( ) == null ) { break ; }
rank: 840
score: 99.36613384046052
patch: Node ! fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 840
score: 99.31522863051471
patch: List < Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges =
rank: 840
score: 99.26593424479167
patch: Node fall CaMeL Through = compute CaMeL Following ( fall CaMeL Through ) ;
rank: 840
score: 99.24874674479166
patch: Node fall CaMeL Through = this . fall CaMeL Through ( n ) ;
rank: 841
score: 99.42982177734375
patch: Node get = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 841
score: 99.39092696340461
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 841
score: 99.36602461965461
patch: Node [ ] out CaMeL Edges = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 841
score: 99.31458237591912
patch: if ( out CaMeL Edges . size ( ) != 1 ) { break ; }
rank: 841
score: 99.26524251302084
patch: compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ;
rank: 842
score: 99.42802124023437
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) != Token . FUNCTION
rank: 842
score: 99.39662679036458
patch: if ( n . get CaMeL Next ( ) == null ) { return n ; }
rank: 842
score: 99.36564805772569
patch: Node fall CaMeL Through = fall CaMeL Through == null ? null : fall CaMeL Through ;
rank: 842
score: 99.35616726345486
patch: Node < Node > compute = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ) ;
rank: 842
score: 99.28413660386029
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ; ;
rank: 842
score: 99.2459716796875
patch: compute CaMeL Following = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 843
score: 99.42716064453126
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Next ( ) ) {
rank: 843
score: 99.39658074629934
patch: if ( n . has CaMeL Children ( ) ) { return fall CaMeL Through ; } }
rank: 843
score: 99.36530504728618
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( true ) ;
rank: 843
score: 99.31195475260417
patch: out CaMeL Edges . get ( 0 ) . remove ( 0 ) ;
rank: 843
score: 99.28384835379464
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; ;
rank: 843
score: 99.26368713378906
patch: try fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 844
score: 99.424853515625
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . TYPE
rank: 844
score: 99.39645821707589
patch: Node fall CaMeL Through = n . get CaMeL First ( ) ;
rank: 844
score: 99.28294462316177
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( in ) ;
rank: 844
score: 99.26017761230469
patch: final Node fall CaMeL Through = compute CaMeL Following ( n , n ) ;
rank: 845
score: 99.38974480879934
patch: final Branch out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 845
score: 99.30899047851562
patch: Node fall CaMeL Through = this . get CaMeL Out CaMeL Edges ( ) ;
rank: 845
score: 99.28148696001838
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ) ; }
rank: 845
score: 99.25924682617188
patch: if ( n . get CaMeL Next ( ) == null ) return null ;
rank: 845
score: 99.239892578125
patch: try ; Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 846
score: 99.39307996961806
patch: out CaMeL Edges = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ; }
rank: 846
score: 99.35338677300348
patch: } else fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 846
score: 99.279150390625
patch: Node fall CaMeL Through = null ; Node fall CaMeL Through = null ;
rank: 847
score: 99.36008707682292
patch: Int fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 847
score: 99.32374572753906
patch: fall CaMeL Through = new Node ( compute CaMeL Following ( n ) ) ;
rank: 847
score: 99.30791877297794
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( clone ) ;
rank: 847
score: 99.2766864483173
patch: fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 847
score: 99.25385284423828
patch: String fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 847
score: 99.23341369628906
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; try continue ;
rank: 848
score: 99.419189453125
patch: if ( out CaMeL Edges . size ( ) == 1 && / / ) {
rank: 848
score: 99.27446746826172
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; break ; }
rank: 848
score: 99.25182233537946
patch: node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 849
score: 99.41843872070312
patch: Node ) = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 849
score: 99.35709635416667
patch: Block fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 849
score: 99.34595404730902
patch: Node > fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 849
score: 99.3053207397461
patch: try { remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ;
rank: 849
score: 99.27291434151786
patch: } Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 849
score: 99.25068664550781
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) continue ;
rank: 849
score: 99.22994995117188
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( list ) ;
rank: 850
score: 99.4182373046875
patch: Node element = cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 850
score: 99.38717990451389
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( ) ; return fall CaMeL Through ;
rank: 850
score: 99.32246229383681
patch: String fall CaMeL Through = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 850
score: 99.3043212890625
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 850
score: 99.27082061767578
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ) ;
rank: 850
score: 99.24955240885417
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 850
score: 99.22928619384766
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( $NUMBER$ ) ;
rank: 851
score: 99.38668662623355
patch: final return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 851
score: 99.3043212890625
patch: if ( out CaMeL Edges . size ( ) <= 1 ) { break ; }
rank: 851
score: 99.2703857421875
patch: fall CaMeL Through = compute CaMeL Following ( n , n ) ;
rank: 851
score: 99.21946716308594
patch: Node compute CaMeL Following ( n , compute CaMeL Following ( n ) ) ;
rank: 852
score: 99.35342068142361
patch: Node fall CaMeL Through = ( Node , n . get CaMeL Next ( ) ) ;
rank: 852
score: 99.30405970982143
patch: Node next = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 852
score: 99.27024841308594
patch: try { Node fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 852
score: 99.21920776367188
patch: Node < Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 853
score: 99.416552734375
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ; }
rank: 853
score: 99.38560084292763
patch: Node < Node > out CaMeL Edges = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 853
score: 99.38134765625
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ; }
rank: 853
score: 99.34138039981617
patch: fall CaMeL Through = true ; } else { fall CaMeL Through = true ; }
rank: 853
score: 99.26883638822116
patch: Node fall CaMeL Through = n . get ( 0 ) ;
rank: 853
score: 99.24300944010416
patch: final Node fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 853
score: 99.21878255208334
patch: Node fall CaMeL Through = n ; Node fall CaMeL Through = n ;
rank: 854
score: 99.4136962890625
patch: if ( n . has CaMeL Children ( ) ) { break ; } case Token . CONTINUE :
rank: 854
score: 99.38551240808823
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return next ;
rank: 854
score: 99.35250418526786
patch: Node fall CaMeL Through = fall CaMeL Through : fall CaMeL Through ;
rank: 854
score: 99.30400534237133
patch: if ( out CaMeL Edges . size ( ) >= 1 ) { break ; }
rank: 854
score: 99.26839192708333
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 854
score: 99.2353515625
patch: Node fall CaMeL Through = new Node > ( n ) ;
rank: 854
score: 99.21826171875
patch: try { compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 855
score: 99.38454861111111
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } return n ;
rank: 855
score: 99.35152180989583
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ;
rank: 855
score: 99.34078640407986
patch: try { Node < Node > fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 855
score: 99.30361040900735
patch: out CaMeL Edges . add ( out CaMeL Edges . get ( 0 ) ) ;
rank: 855
score: 99.26722717285156
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Result ( ) ;
rank: 855
score: 99.2350323016827
patch: boolean fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 856
score: 99.37901306152344
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Destination ( ) ;
rank: 856
score: 99.34065755208333
patch: Node < Node > compute = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 856
score: 99.30357450597427
patch: case Token . CONTINUE : if ( n . has CaMeL Children ( ) ) {
rank: 856
score: 99.26568603515625
patch: Node fall CaMeL Through = new Node < Node > ( ) ;
rank: 856
score: 99.23336087740384
patch: Block fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 857
score: 99.408447265625
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Branch ) {
rank: 857
score: 99.37828233506944
patch: Preconditions = out CaMeL Edges . get ( 0 ) . get CaMeL Value ( ) ;
rank: 857
score: 99.35026041666667
patch: Node = out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 857
score: 99.34022521972656
patch: Node < Node > try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 857
score: 99.31904432508681
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( n ) ;
rank: 857
score: 99.26509094238281
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; continue ; }
rank: 857
score: 99.21227213541667
patch: Node info = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 858
score: 99.33758903952206
patch: Node < Node > fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 858
score: 99.30250549316406
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; break ;
rank: 858
score: 99.26371765136719
patch: Node node = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 858
score: 99.22988455636161
patch: Node fall CaMeL Through = n . get CaMeL Node ( ) ;
rank: 859
score: 99.3749008178711
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ; }
rank: 859
score: 99.34865435431985
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( init ) ;
rank: 859
score: 99.337255859375
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 859
score: 99.31642061121323
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( * ) ;
rank: 859
score: 99.29739379882812
patch: Node next = g CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 859
score: 99.2296142578125
patch: / * Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 859
score: 99.20849609375
patch: try { n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 860
score: 99.2939453125
patch: } else if ( n . has CaMeL Children ( ) ) {
rank: 860
score: 99.26174490792411
patch: Node fall CaMeL Through = node . get CaMeL Next ( ) ;
rank: 860
score: 99.2289306640625
patch: if ( ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) )
rank: 860
score: 99.20844268798828
patch: fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( edge ) ;
rank: 861
score: 99.40291748046874
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . BREAK
rank: 861
score: 99.38149542557566
patch: if ( out CaMeL Edges . size ( ) == 1 ) { return fall CaMeL Through ;
rank: 861
score: 99.37254423253677
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; break ; }
rank: 861
score: 99.29331868489584
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; }
rank: 861
score: 99.25851876395089
patch: Node fall CaMeL Through = new Node ( this , n ) ;
rank: 861
score: 99.22836100260416
patch: Node fall CaMeL Through = compute CaMeL Following ( n , this ) ;
rank: 861
score: 99.2076416015625
patch: Node compute = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 862
score: 99.37217881944444
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ; }
rank: 862
score: 99.31532118055556
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through . get ( 1 ) ;
rank: 862
score: 99.29325648716518
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching (
rank: 862
score: 99.22772623697917
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n , n ) ;
rank: 863
score: 99.38048031455592
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) . get ( 0 ) ;
rank: 863
score: 99.37188361672794
patch: return out CaMeL Edges . get ( 0 ) . get CaMeL Destination ( ) ;
rank: 863
score: 99.32990373883929
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 863
score: 99.29325358072917
patch: if ( out CaMeL Edges . get ( 0 ) != null ) {
rank: 863
score: 99.25694861778847
patch: } fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 863
score: 99.22268880208334
patch: int fall CaMeL Through = compute CaMeL Following ( n , n ) ;
rank: 863
score: 99.20131022135416
patch: Node element = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 864
score: 99.39903564453125
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) == Token . CONTINUE
rank: 864
score: 99.36849636501736
patch: Node fall CaMeL Through = n . has CaMeL Children ( ) ? g CaMeL Node ;
rank: 864
score: 99.29070638020833
patch: if ( out CaMeL Edges . size ( ) == 1 ) break ;
rank: 864
score: 99.25679016113281
patch: / fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 864
score: 99.22101236979167
patch: return ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 864
score: 99.20045823317308
patch: Node fall CaMeL Through = fall CaMeL Through ( n ) ;
rank: 865
score: 99.39889365748355
patch: if ( n . has CaMeL Children ( ) || n . has CaMeL Children ( ) )
rank: 865
score: 99.36838785807292
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return n ; }
rank: 865
score: 99.29025704520089
patch: if ( n . get CaMeL Next ( ) != null ) {
rank: 866
score: 99.37679893092105
patch: Node < Node >> out CaMeL Edges = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 866
score: 99.36663818359375
patch: Node < Node > g CaMeL Node = out CaMeL Edges . get ( 0 ) ;
rank: 866
score: 99.33954535590277
patch: Thread fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 866
score: 99.28832244873047
patch: try { Node next = n . get CaMeL First CaMeL Child ( ) ;
rank: 866
score: 99.25566101074219
patch: if ( n . has CaMeL Children ( ) ) { return null ; }
rank: 866
score: 99.21825358072917
patch: Node fall CaMeL Through = compute CaMeL Following ( n , element ) ;
rank: 866
score: 99.194482421875
patch: Node [ ] fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 867
score: 99.36504720052083
patch: if ( out CaMeL Edges . size ( ) == 1 && / /
rank: 867
score: 99.33795844184027
patch: Node fall CaMeL Through = fall CaMeL Through = n . get CaMeL Destination ( ) ;
rank: 867
score: 99.32638729319854
patch: try { Node parent = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 867
score: 99.2514877319336
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Value ( ) ;
rank: 867
score: 99.217822265625
patch: Node fall CaMeL Through = new Node < int > ( n ) ;
rank: 868
score: 99.39620811060855
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 868
score: 99.36432291666667
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 868
score: 99.33780246310764
patch: if ( n . has CaMeL Children ( ) ) { break ; } } else {
rank: 868
score: 99.32319859095982
patch: compute CaMeL Following ( compute CaMeL Following ( n ) ) ; }
rank: 868
score: 99.28359549386161
patch: if ( n . get CaMeL Next ( ) == null ) {
rank: 868
score: 99.25084635416667
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; } }
rank: 868
score: 99.217041015625
patch: if ( n . get CaMeL Next ( ) == null )
rank: 869
score: 99.39586046006944
patch: if ( out CaMeL Edges . size ( ) == 1 && / / / ) {
rank: 869
score: 99.37589304070724
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n , ) ) ;
rank: 869
score: 99.36388397216797
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , this ) ;
rank: 869
score: 99.337646484375
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) {
rank: 869
score: 99.32224408318015
patch: Node < Node > fall CaMeL Through = compute CaMeL Following ( n ) ) ;
rank: 869
score: 99.28246307373047
patch: try { return g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 869
score: 99.2499755859375
patch: compute CaMeL Following ( compute CaMeL Following ( n , n ) ) ;
rank: 869
score: 99.21533203125
patch: try { Node fall CaMeL Through = compute CaMeL Following ( node ) ;
rank: 870
score: 99.39480751439145
patch: head = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( n ) ) ;
rank: 870
score: 99.30653211805556
patch: Node fall CaMeL Through = fall CaMeL Through . get ( ( Node ) n ) ;
rank: 870
score: 99.281884765625
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; {
rank: 870
score: 99.21475423177084
patch: synchronized ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) {
rank: 871
score: 99.3922119140625
patch: if ( n . get CaMeL Type ( ) == Branch . UNCOND ) {
rank: 871
score: 99.30612521701389
patch: Node fall CaMeL Through = new Node ( n . get CaMeL Node ( ) ) ;
rank: 871
score: 99.28187561035156
patch: if ( out CaMeL Edges . size ( ) == 1 && / / /
rank: 871
score: 99.214501953125
patch: if ( n . get CaMeL Next ( ) == null ) break ;
rank: 872
score: 99.39182000411184
patch: if ( n . has CaMeL Children ( ) && n . has CaMeL Children ( ) )
rank: 872
score: 99.35912367876838
patch: Node fall CaMeL Through = this . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 872
score: 99.33261544363839
patch: Node fall CaMeL Through = fall CaMeL Through = fall CaMeL Through ;
rank: 872
score: 99.2818094889323
patch: Node next = n . get CaMeL Next ( ) ;
rank: 872
score: 99.24681803385417
patch: Node fall CaMeL Through = ( compute CaMeL Following ( n ) ) ;
rank: 872
score: 99.17438151041667
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 873
score: 99.36883544921875
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } } else {
rank: 873
score: 99.35891927083334
patch: if ( n . has CaMeL Children ( ) ) { return n ;
rank: 873
score: 99.32062126608456
patch: fall CaMeL Through = false ; } else { fall CaMeL Through = true ; }
rank: 873
score: 99.28132847377232
patch: if ( out CaMeL Edges . size ( ) != 1 ) {
rank: 873
score: 99.21339518229166
patch: Node type = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 874
score: 99.3875732421875
patch: if ( out CaMeL Edges . size ( ) == 1 && / ) {
rank: 874
score: 99.35579187729779
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , n ) ; }
rank: 874
score: 99.33160400390625
patch: Word fall CaMeL Through = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 874
score: 99.31856043198529
patch: fall CaMeL Through = true ; } else { fall CaMeL Through = false ; }
rank: 874
score: 99.3031005859375
patch: try { Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching (
rank: 874
score: 99.24468994140625
patch: Node node = fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 874
score: 99.21255258413461
patch: Node fall CaMeL Through = compute CaMeL Following ( element ) ;
rank: 874
score: 99.17057291666667
patch: n = compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 875
score: 99.35372161865234
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , false ) ;
rank: 875
score: 99.24330491286058
patch: Node fall CaMeL Through = nodes . get ( 0 ) ;
rank: 875
score: 99.2109130859375
patch: Node fall CaMeL Through = compute CaMeL Following ( n , type ) ;
rank: 875
score: 99.1704345703125
patch: Node try = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 876
score: 99.34972426470588
patch: Preconditions . if ( n . has CaMeL Children ( ) ) { break ; }
rank: 876
score: 99.27140808105469
patch: } else if ( out CaMeL Edges . size ( ) == 1 ) {
rank: 876
score: 99.24309895833333
patch: Node fall CaMeL Through = n ) . get CaMeL Next ( ) ;
rank: 876
score: 99.20816744290866
patch: Node fall CaMeL Through = new Node 1 ( n ) ;
rank: 876
score: 99.16866048177083
patch: try { int fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 877
score: 99.36553955078125
patch: return ( Di CaMeL Graph CaMeL Edge < Node , Branch >> out CaMeL Edges ) ;
rank: 877
score: 99.30038113064236
patch: Node fall CaMeL Through = ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 877
score: 99.27113560267857
patch: if ( out CaMeL Edges . size ( ) <= 1 ) {
rank: 877
score: 99.20773550180289
patch: short fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 877
score: 99.1683349609375
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; Node ;
rank: 878
score: 99.23880004882812
patch: Node fall CaMeL Through = n . get CaMeL Last CaMeL Sibling ( ) ;
rank: 879
score: 99.31507219587054
patch: return fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 879
score: 99.2669677734375
patch: if ( out CaMeL Edges . size ( ) != 1 ) { break ;
rank: 879
score: 99.23844691685268
patch: fall CaMeL Through = true ; fall CaMeL Through = false ; }
rank: 879
score: 99.20089721679688
patch: Node fall CaMeL Through = new Node [ 0 ] ;
rank: 879
score: 99.16306849888393
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( node ) ;
rank: 880
score: 99.3147834329044
patch: Value fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 880
score: 99.26688058035714
patch: if ( out CaMeL Edges . size ( ) >= 1 ) {
rank: 880
score: 99.2380142211914
patch: Node fall CaMeL Through = node . get CaMeL First CaMeL Child ( ) ;
rank: 880
score: 99.19844273158482
patch: final int fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 881
score: 99.26658630371094
patch: if ( n . get CaMeL Next ( ) != null ) { break ;
rank: 881
score: 99.23678385416666
patch: if ( fall CaMeL Through = compute CaMeL Following ( n ) ) {
rank: 881
score: 99.16033528645833
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; ) .
rank: 882
score: 99.26519775390625
patch: case Token . BREAK : case Token . BREAK : case Token . CONTINUE :
rank: 882
score: 99.160302734375
patch: try { Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 883
score: 99.33936982996323
patch: if ( n . has CaMeL Children ( ) ) { return out CaMeL Edges ;
rank: 883
score: 99.31102079503677
patch: try { Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 883
score: 99.26508440290179
patch: Node node = n . get CaMeL First CaMeL Child ( ) ;
rank: 883
score: 99.23540387834821
patch: } fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 883
score: 99.19382149832589
patch: Node fall CaMeL Through = n . get CaMeL Line ( ) ;
rank: 883
score: 99.15958077566964
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ;
rank: 884
score: 99.35306803385417
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; }
rank: 884
score: 99.31920514787946
patch: Node fall CaMeL Through = fall CaMeL Through . get ( ) ;
rank: 884
score: 99.23516438802083
patch: Node fall CaMeL Through = new Node fall CaMeL Through ( n ) ;
rank: 884
score: 99.19308706430289
patch: Node fall CaMeL Through = compute CaMeL Following ( parent ) ;
rank: 884
score: 99.15648475060097
patch: Node fall CaMeL Through = should CaMeL Remove ( n ) ;
rank: 885
score: 99.26432800292969
patch: case Token . BREAK : case Token . CONTINUE : case Token . CONTINUE :
rank: 885
score: 99.19094848632812
patch: if ( ! compute CaMeL Following ( n ) ) {
rank: 885
score: 99.15107073102679
patch: Node fall CaMeL Through ( fall CaMeL Through ( n ) ) ;
rank: 886
score: 99.35198974609375
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute ( n ) ) ;
rank: 886
score: 99.26092998798077
patch: if ( out CaMeL Edges . size ( ) == 1 )
rank: 886
score: 99.13593401227679
patch: try return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 887
score: 99.35127088758681
patch: Node next = node . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 887
score: 99.28431803385416
patch: Node fall CaMeL Through = fall CaMeL Through . get ( 0 ) ;
rank: 887
score: 99.26077270507812
patch: if ( out CaMeL Edges . size ( ) >= 1 ) { break ;
rank: 887
score: 99.23146275111607
patch: Node fall CaMeL Through = new Node ( n , n ) ;
rank: 887
score: 99.18872942243304
patch: / return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 887
score: 99.13520159040179
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ;
rank: 888
score: 99.36377671185662
patch: if ( n . has CaMeL Children ( ) ) { return n ; } }
rank: 888
score: 99.35088433159723
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( compute CaMeL Following ( 0 ) ) ;
rank: 888
score: 99.31172180175781
patch: Node node = cur CaMeL Cfg . get CaMeL First CaMeL Child ( ) ;
rank: 888
score: 99.28702218191964
patch: Node < try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 888
score: 99.25923374720982
patch: Node n = n . get CaMeL First CaMeL Child ( ) ;
rank: 888
score: 99.23033854166667
patch: Node fall CaMeL Through = n ; compute CaMeL Following ( n ) ;
rank: 888
score: 99.18362192007211
patch: Iterator fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 888
score: 99.1345966045673
patch: compute CaMeL Following ( fall CaMeL Through ( n ) ) ;
rank: 889
score: 99.35969094669117
patch: if ( n . get CaMeL Type ( ) == Token . UNCOND ) {
rank: 889
score: 99.34895155164931
patch: out CaMeL Edges . add ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 889
score: 99.28662872314453
patch: fall CaMeL Through = System . current CaMeL Time CaMeL Millis ( ) ; }
rank: 889
score: 99.22936197916667
patch: Node fall CaMeL Through = compute CaMeL Following ( g CaMeL Node ) ;
rank: 889
score: 99.18230731670673
patch: if ( n . get CaMeL Parent ( ) == null )
rank: 889
score: 99.130859375
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; Node
rank: 890
score: 99.35645887586806
patch: if ( n . has CaMeL Children ( ) && n . get CaMeL Next ( )
rank: 890
score: 99.28447723388672
patch: try { Node fall CaMeL Through = compute CaMeL Following ( n ) ) ;
rank: 890
score: 99.25602213541667
patch: Node fall CaMeL Through = get CaMeL Out CaMeL Edges ( n ) ;
rank: 890
score: 99.18089881310097
patch: List fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 891
score: 99.35635036892361
patch: } switch ( n . get CaMeL Type ( ) ) { case Token . BREAK :
rank: 891
score: 99.25601196289062
patch: if ( out CaMeL Edges . size ( ) <= 1 ) { break ;
rank: 891
score: 99.2244384765625
patch: fall CaMeL Through = true ; fall CaMeL Through = true ; break ;
rank: 891
score: 99.1806640625
patch: if ( n . get CaMeL Next ( ) != null )
rank: 892
score: 99.22249058314732
patch: System . out . println ( $STRING$ ) ; return null ; }
rank: 892
score: 99.18001883370536
patch: Node fall CaMeL Through = n . get CaMeL State ( ) ;
rank: 892
score: 99.12758091517857
patch: loop = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 893
score: 99.34979248046875
patch: } switch ( n . get CaMeL Type ( ) ) { case Token . RETURN :
rank: 893
score: 99.34639246323529
patch: out CaMeL Edges . get ( 0 ) . add ( fall CaMeL Through ) ;
rank: 893
score: 99.30766027113971
patch: } else { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 893
score: 99.25370279947917
patch: } if ( out CaMeL Edges . size ( ) > 1 ) {
rank: 893
score: 99.22095540364583
patch: fall CaMeL Through = compute CaMeL Following ( n , n ) ; }
rank: 893
score: 99.17801607572116
patch: long fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 894
score: 99.34961615668402
patch: } switch ( n . get CaMeL Type ( ) ) { case Token . CONTINUE :
rank: 894
score: 99.34280395507812
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , node ) ;
rank: 894
score: 99.33021647135416
patch: Node fall CaMeL Through = compute CaMeL Follow CaMeL Node ( n ) ;
rank: 894
score: 99.30757904052734
patch: Node fall CaMeL Through = out CaMeL Edges . to CaMeL Array ( ) ;
rank: 894
score: 99.27569580078125
patch: Node fall CaMeL Through = node . get CaMeL Last CaMeL Child ( ) ;
rank: 894
score: 99.25304361979167
patch: if ( ! out CaMeL Edges . size ( ) == 1 ) {
rank: 894
score: 99.21982247488839
patch: return fall CaMeL Through = compute CaMeL Following ( n ) ; }
rank: 894
score: 99.176025390625
patch: Node fall CaMeL Through = n . get CaMeL Last ( ) ;
rank: 894
score: 99.12618582589286
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 895
score: 99.34906684027777
patch: return cur CaMeL Cfg . get CaMeL Destination ( ) . get CaMeL Value ( ) ;
rank: 895
score: 99.3424933938419
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } } }
rank: 895
score: 99.27627383961396
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( reverse ) ;
rank: 895
score: 99.24530901227679
patch: if ( out CaMeL Edges . size ( ) < 1 ) {
rank: 895
score: 99.2187167080966
patch: Node node = compute CaMeL Following ( n ) ;
rank: 895
score: 99.17595563616071
patch: if ( n . get CaMeL Parent ( ) != null ) {
rank: 895
score: 99.11928885323661
patch: Node Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 896
score: 99.33929084329044
patch: if ( out CaMeL Edges . get ( 0 ) == Branch . FUNCTION ) {
rank: 896
score: 99.32857019761029
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 896
score: 99.24242292131696
patch: if ( out CaMeL Edges . size ( ) > 0 ) {
rank: 896
score: 99.21783040364583
patch: Node fall CaMeL Through = this ; compute CaMeL Following ( n ) ;
rank: 896
score: 99.17327325994319
patch: Node fall CaMeL Through = new Node ( ) ;
rank: 896
score: 99.1169100674716
patch: Node n = compute CaMeL Following ( n ) ;
rank: 897
score: 99.32778930664062
patch: if ( n . get CaMeL Next ( ) == null ) { break ;
rank: 897
score: 99.27236938476562
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n )
rank: 897
score: 99.24051607572116
patch: } switch ( n . get CaMeL Next ( ) ) {
rank: 897
score: 99.21465657552083
patch: Node node = fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 897
score: 99.17136928013393
patch: if ( n . get CaMeL Parent ( ) == null ) {
rank: 898
score: 99.33978271484375
patch: if ( cur CaMeL Cfg . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 898
score: 99.2389404296875
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; ;
rank: 898
score: 99.21356201171875
patch: } fall CaMeL Through = true ; fall CaMeL Through = true ;
rank: 898
score: 99.16586739676339
patch: try { Node fall CaMeL Through = compute CaMeL Following ( ) ;
rank: 898
score: 99.11374337332589
patch: Node fall CaMeL Through = = compute CaMeL Following ( n ) ;
rank: 899
score: 99.32730865478516
patch: Node index = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 899
score: 99.30603790283203
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Type ( ) ;
rank: 899
score: 99.27070617675781
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; break ; }
rank: 899
score: 99.26586151123047
patch: if ( fall CaMeL Through != null ) { return fall CaMeL Through ; }
rank: 899
score: 99.23861490885416
patch: if ( next . has CaMeL Children ( ) ) { break ; }
rank: 899
score: 99.21280343191964
patch: fall CaMeL Through = false ; fall CaMeL Through = true ; }
rank: 899
score: 99.16531808035714
patch: expr = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 900
score: 99.33928087022569
patch: if ( n . has CaMeL Children ( ) ) { break ; } return n ;
rank: 900
score: 99.32670323988971
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; }
rank: 900
score: 99.234130859375
patch: fall CaMeL Through = out CaMeL Edges . get ( 0 ) ;
rank: 900
score: 99.21216759314903
patch: fall CaMeL Through = true ; fall CaMeL Through = false ;
rank: 900
score: 99.1650390625
patch: if ( compute CaMeL Following ( n ) != null ) {
rank: 900
score: 99.10547746930804
patch: n = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( current ) ;
rank: 901
score: 99.33599853515625
patch: if ( n . has CaMeL Children ( ) || n . get CaMeL Next ( )
rank: 901
score: 99.32518095128677
patch: if ( out CaMeL Edges . size ( ) == 0 ) { return n ;
rank: 901
score: 99.30217428768383
patch: Node next = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ;
rank: 901
score: 99.24676106770833
patch: Node fall CaMeL Through = true ; Node fall CaMeL Through = null ;
rank: 901
score: 99.22893817608173
patch: } if ( n . has CaMeL Children ( ) ) {
rank: 901
score: 99.16468224158653
patch: try fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 901
score: 99.1044170673077
patch: Node fall CaMeL Through = can CaMeL Remove ( n ) ;
rank: 902
score: 99.32733154296875
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ) {
rank: 902
score: 99.32694738051471
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges , n ) ;
rank: 902
score: 99.3248291015625
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , true ) ;
rank: 902
score: 99.29800415039062
patch: } if ( n . has CaMeL Children ( ) ) { break ; }
rank: 902
score: 99.22537434895834
patch: } if ( out CaMeL Edges . size ( ) == 0 ) {
rank: 902
score: 99.16194974459134
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 903
score: 99.3266372680664
patch: if ( out CaMeL Edges . size ( ) == 1 && / * /
rank: 903
score: 99.3243049172794
patch: return Control CaMeL Flow CaMeL Analysis . compute CaMeL Follow CaMeL Node ( n ) ;
rank: 903
score: 99.29771513097427
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( ) ==
rank: 903
score: 99.26480305989584
patch: Node ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ) ;
rank: 903
score: 99.22324044363839
patch: if ( out CaMeL Edges . size ( ) == $NUMBER$ ) {
rank: 903
score: 99.204638671875
patch: Node fall CaMeL Through = new Node ( fall CaMeL Through ) ; ;
rank: 903
score: 99.1605224609375
patch: Node fall CaMeL Through = n . get CaMeL Value ( ) ;
rank: 903
score: 99.09034142127403
patch: Node compute CaMeL Following = compute CaMeL Following ( n ) ;
rank: 904
score: 99.32685403262867
patch: if ( n . get CaMeL Next ( ) == null ) { return n ;
rank: 904
score: 99.32511632582721
patch: if ( out CaMeL Edges . size ( ) == 1 && / / * /
rank: 904
score: 99.2372802734375
patch: Node fall CaMeL Through = fall CaMeL Through . get ( n ) ;
rank: 904
score: 99.22298758370536
patch: } } switch ( n . get CaMeL Next ( ) ) {
rank: 904
score: 99.20423990885416
patch: Node fall CaMeL Through = new Node ( compute ( n ) ) ;
rank: 904
score: 99.15978064903847
patch: Node fall CaMeL Through = compute CaMeL Following ( edge ) ;
rank: 904
score: 99.07635967548077
patch: try { Node n = compute CaMeL Following ( n ) ;
rank: 905
score: 99.3263298483456
patch: return n ; } else if ( n . has CaMeL Children ( ) ) {
rank: 905
score: 99.26374816894531
patch: Node fall CaMeL Through = ( Node ) list . get ( 0 ) ;
rank: 905
score: 99.23600006103516
patch: Node fall CaMeL Through = ( Node ) compute CaMeL Following ( node ) ;
rank: 905
score: 99.15594951923077
patch: Node fall CaMeL Through = n . get ( n ) ;
rank: 906
score: 99.32602826286765
patch: if ( out CaMeL Edges . get ( 0 ) == Branch . UNCOND )
rank: 906
score: 99.32274627685547
patch: out CaMeL Edges . add ( n . get CaMeL Next ( ) ) ;
rank: 906
score: 99.32129624310662
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; return false ;
rank: 906
score: 99.2632064819336
patch: Node < Token > fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 906
score: 99.19908854166667
patch: Node fall CaMeL Through = this ; Node fall CaMeL Through = this ;
rank: 906
score: 99.15545654296875
patch: Node ! try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 907
score: 99.32560899522569
patch: while ( out CaMeL Edges . get ( 0 ) == Branch . UNCOND ) {
rank: 907
score: 99.32091567095588
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( new Branch ( n ) ) ;
rank: 907
score: 99.29097747802734
patch: Node fall CaMeL Through = fall CaMeL Through . get CaMeL Next ( ) ;
rank: 908
score: 99.32042694091797
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( g CaMeL Node ) ;
rank: 908
score: 99.22706705729166
patch: Node fall CaMeL Through = false ; Node fall CaMeL Through = null ;
rank: 908
score: 99.21859975961539
patch: switch ( out CaMeL Edges . get ( 0 ) ) {
rank: 908
score: 99.19673665364583
patch: Node fall CaMeL Through = n . get CaMeL Next ( ) ) ;
rank: 908
score: 99.15292794363839
patch: int fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 908
score: 99.06869741586539
patch: = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 909
score: 99.32038879394531
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , 0 ) ;
rank: 909
score: 99.3188247680664
patch: if ( n . get CaMeL Type ( ) == Token . CONTINUE ) {
rank: 909
score: 99.28962258731617
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) +
rank: 909
score: 99.21805245535714
patch: while ( out CaMeL Edges . size ( ) == 1 ) {
rank: 909
score: 99.14804909446023
patch: if ( compute CaMeL Following ( n ) ) {
rank: 909
score: 99.06383260091145
patch: Node fall CaMeL Through = n . get ( ) ;
rank: 910
score: 99.31376378676471
patch: if ( n . has CaMeL Children ( ) ) { break ; } else {
rank: 910
score: 99.21573079427084
patch: Preconditions . add ( out CaMeL Edges . get ( 0 ) ) ;
rank: 910
score: 99.06088491586539
patch: try { Node ( compute CaMeL Following ( n ) ) ;
rank: 911
score: 99.2862907858456
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 ) . next ;
rank: 911
score: 99.18892124720982
patch: try fall CaMeL Through ( compute CaMeL Following ( n ) ) ;
rank: 911
score: 99.14076585036058
patch: Node fall CaMeL Through = new Node 0 ( n ) ;
rank: 911
score: 99.05557861328126
patch: try { compute CaMeL Following ( n ) ;
rank: 912
score: 99.31348419189453
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL Next ( ) ;
rank: 912
score: 99.31331380208333
patch: if ( out CaMeL Edges . size ( ) == 1 ) ) {
rank: 912
score: 99.21900177001953
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching > null *
rank: 912
score: 99.21510667067308
patch: if ( out CaMeL Edges . size ( ) == 1 &&
rank: 912
score: 99.18330601283482
patch: fall CaMeL Through = true ; Node fall CaMeL Through = null ;
rank: 913
score: 99.31283569335938
patch: if ( n . has CaMeL Children ( ) ) return fall CaMeL Through ;
rank: 913
score: 99.31031709558823
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ; }
rank: 913
score: 99.28165435791016
patch: Object fall CaMeL Through = n . get CaMeL Out CaMeL Edges ( ) ;
rank: 913
score: 99.23293235085227
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 913
score: 99.2184829711914
patch: if ( compute CaMeL Following ( compute CaMeL Following ( n ) ) ) {
rank: 913
score: 99.21328735351562
patch: Node next = n . get CaMeL Destination ( ) ;
rank: 913
score: 99.18307729867789
patch: fall CaMeL Through = false ; fall CaMeL Through = true ;
rank: 913
score: 99.14017427884616
patch: else fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 913
score: 99.03941932091347
patch: Node fall CaMeL Through += compute CaMeL Following ( n ) ;
rank: 914
score: 99.31140899658203
patch: Node n = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 914
score: 99.28134591238839
patch: Node fall CaMeL Through = out CaMeL Edges . get ( 0 )
rank: 914
score: 99.2322265625
patch: Node current = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 914
score: 99.21478271484375
patch: Node fall CaMeL Through = try CaMeL Remove CaMeL Unconditional CaMeL Branching > 0 *
rank: 914
score: 99.18278285435268
patch: fall CaMeL Through = null ; fall CaMeL Through = null ; }
rank: 914
score: 99.13803335336539
patch: Node fall CaMeL Through = compute CaMeL Following ( current ) ;
rank: 914
score: 99.03798606178977
patch: Node ( compute CaMeL Following ( n ) ) ;
rank: 915
score: 99.30995178222656
patch: g CaMeL Node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 915
score: 99.20995221819196
patch: if ( fall CaMeL Through . size ( ) == 1 ) {
rank: 915
score: 99.18124825613839
patch: fall CaMeL Through ( compute CaMeL Following ( n ) ) ; }
rank: 915
score: 99.13770470252403
patch: Statement fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 916
score: 99.30913543701172
patch: Preconditions . if ( n . has CaMeL Children ( ) ) { break ;
rank: 916
score: 99.30657599954044
patch: if ( n . has CaMeL Children ( ) ) { break ; break ; }
rank: 916
score: 99.23056265024039
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 916
score: 99.2088623046875
patch: Preconditions . remove ( n . get CaMeL Next ( ) ) ;
rank: 916
score: 99.18067345252403
patch: Node fall CaMeL Through = this . compute ( n ) ;
rank: 916
score: 99.1347186748798
patch: Rectangle fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 916
score: 99.02863018329327
patch: Node fall CaMeL Through = compute CaMeL Following ( true ) ;
rank: 917
score: 99.30783081054688
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } else {
rank: 917
score: 99.3041633157169
patch: if ( n . has CaMeL Children ( ) ) { break ; } break ;
rank: 917
score: 99.30197143554688
patch: Node fall CaMeL Through = cur CaMeL Cfg . get CaMeL First ( ) ;
rank: 917
score: 99.2762222290039
patch: } else if ( n . has CaMeL Children ( ) ) { break ;
rank: 917
score: 99.20413912259616
patch: } switch ( out CaMeL Edges . size ( ) ) {
rank: 917
score: 99.20398821149554
patch: Node fall CaMeL Through = n . get CaMeL Root ( ) ;
rank: 917
score: 99.17997523716518
patch: fall CaMeL Through = new Node < Node > ( n ) ;
rank: 917
score: 99.13134765625
patch: Node fall CaMeL Through = new Node $NUMBER$ ( ) ;
rank: 918
score: 99.29756164550781
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n , $STRING$ ) ;
rank: 918
score: 99.27579498291016
patch: Node node = g CaMeL Node . get CaMeL Out CaMeL Edges ( ) ;
rank: 918
score: 99.22605794270834
patch: Node ref = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 918
score: 99.20363071986607
patch: Node index = n . get CaMeL First CaMeL Child ( ) ;
rank: 918
score: 99.20145961216518
patch: Node fall CaMeL Through = n . get CaMeL Name ( ) ;
rank: 918
score: 99.17817905970982
patch: fall CaMeL Through = n . get CaMeL Next ( ) ; }
rank: 918
score: 99.12833345853366
patch: double fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 919
score: 99.2952651977539
patch: if ( n . get CaMeL Next ( ) == fall CaMeL Through ) {
rank: 919
score: 99.20333426339286
patch: if ( next . has CaMeL Children ( ) ) { break ;
rank: 919
score: 99.19991048177083
patch: Node fall CaMeL Through ; if ( fall CaMeL Through != null ) ;
rank: 919
score: 99.17599923270089
patch: Node node = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( ) ;
rank: 919
score: 99.12732872596153
patch: Token fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 920
score: 99.29341125488281
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ; }
rank: 920
score: 99.26586151123047
patch: Object fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) ;
rank: 920
score: 99.21561686197917
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; break ;
rank: 920
score: 99.1741192157452
patch: Node fall CaMeL Through = ( Node ) fall CaMeL Through ;
rank: 920
score: 99.12652118389423
patch: return fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 921
score: 99.30575741038604
patch: if ( out CaMeL Edges . get ( 0 ) == Token . FUNCTION ) {
rank: 921
score: 99.29465619255515
patch: Node next = n . get CaMeL First CaMeL Child ( ) ; return next ;
rank: 921
score: 99.26104736328125
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Count ( ) ;
rank: 921
score: 99.21375383649554
patch: System . err . println ( $STRING$ ) ; return null ; }
rank: 921
score: 99.19742257254464
patch: Object next = n . get CaMeL First CaMeL Child ( ) ;
rank: 921
score: 99.17369733537946
patch: Node fall CaMeL Through = null ; fall CaMeL Through = null ;
rank: 921
score: 99.12582632211539
patch: if ( n . get CaMeL Parent ( ) != null )
rank: 921
score: 99.02258911132813
patch: n = compute CaMeL Following ( n ) ;
rank: 922
score: 99.29192038143383
patch: switch ( n . get CaMeL Type ( ) ) { case Token . BREAK :
rank: 922
score: 99.19707380022321
patch: Node parent = n . get CaMeL First CaMeL Child ( ) ;
rank: 922
score: 99.12408916766827
patch: float fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 923
score: 99.29924011230469
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } {
rank: 923
score: 99.2905502319336
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n + 1 ) ;
rank: 923
score: 99.2584228515625
patch: Node next = cur CaMeL Cfg . get CaMeL First CaMeL Child ( ) ;
rank: 923
score: 99.19565255301339
patch: } switch ( out CaMeL Edges . get ( 0 ) ) {
rank: 923
score: 99.16484723772321
patch: fall CaMeL Through = true ; } fall CaMeL Through = true ;
rank: 923
score: 99.12349759615384
patch: if ( compute CaMeL Following ( n ) == null ) {
rank: 923
score: 99.01984252929688
patch: try { Node fall CaMeL Through = null ;
rank: 924
score: 99.28980210248162
patch: return n ; } } switch ( n . get CaMeL Type ( ) ) {
rank: 924
score: 99.2897720336914
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( ) ; return n ;
rank: 924
score: 99.19331868489583
patch: if ( next . has CaMeL Children ( ) ) {
rank: 924
score: 99.16478553185097
patch: fall CaMeL Through = compute CaMeL Following ( n ) ) ;
rank: 924
score: 99.12330118815105
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 924
score: 99.01814408735795
patch: Node fall CaMeL Through = compute ( n ) ;
rank: 925
score: 99.28891888786765
patch: switch ( n . get CaMeL Type ( ) ) { case Token . CONTINUE :
rank: 925
score: 99.28849792480469
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 925
score: 99.19252366286058
patch: } switch ( n . get CaMeL Type ( ) ) {
rank: 925
score: 99.1839599609375
patch: Node fall CaMeL Through = compute CaMeL Following ( n ) ; }
rank: 925
score: 99.11468505859375
patch: Node fall CaMeL Through = new Node [ $NUMBER$ ] ;
rank: 926
score: 99.18891252790179
patch: } return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 926
score: 99.16104561941964
patch: Node fall CaMeL Through = new Node ( n , null ) ;
rank: 926
score: 99.01416015625
patch: Node fall CaMeL Through = compute CaMeL Following ( false ) ;
rank: 927
score: 99.28790283203125
patch: String fall CaMeL Through = g CaMeL Node . get CaMeL Next ( ) ;
rank: 927
score: 99.28753662109375
patch: if ( n . get CaMeL Type ( ) == Token . RETURN ) {
rank: 927
score: 99.18723842075893
patch: } } switch ( n . get CaMeL Type ( ) ) {
rank: 927
score: 99.16018676757812
patch: System . out . println ( $STRING$ + n ) ;
rank: 927
score: 99.11243614783653
patch: Element fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 928
score: 99.28715515136719
patch: if ( n == null || n . has CaMeL Children ( ) ) {
rank: 928
score: 99.2555160522461
patch: Node fall CaMeL Through = g CaMeL Node . get CaMeL Parent ( ) ;
rank: 928
score: 99.18333217075893
patch: Node element = n . get CaMeL First CaMeL Child ( ) ;
rank: 928
score: 99.17647879464286
patch: Node < Node < Node > compute CaMeL Following ( n ) ;
rank: 928
score: 99.17109898158482
patch: Node fall CaMeL Through = compute ( compute ( n ) ) ;
rank: 928
score: 99.15620640345982
patch: / Node fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 928
score: 99.1121114095052
patch: if ( n . is CaMeL Empty ( ) ) {
rank: 928
score: 99.01059792258523
patch: try { Node compute CaMeL Following ( n ) ;
rank: 929
score: 99.28487955729166
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( out CaMeL Edges ) ;
rank: 929
score: 99.18162318638393
patch: Node info = n . get CaMeL First CaMeL Child ( ) ;
rank: 929
score: 99.17457798549107
patch: } = try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 929
score: 99.16727120535714
patch: Node fall CaMeL Through = node . get CaMeL Node ( ) ;
rank: 929
score: 99.15252685546875
patch: if ( fall CaMeL Through = compute CaMeL Following ( n ) )
rank: 929
score: 99.10823567708333
patch: if ( ! fall CaMeL Through ( n ) ) {
rank: 929
score: 99.01007549579327
patch: Node try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 930
score: 99.2858657836914
patch: Node next = cur CaMeL Cfg . get CaMeL Out CaMeL Edges ( ) ;
rank: 930
score: 99.28126525878906
patch: Node < Node > next = out CaMeL Edges . get ( 0 ) ;
rank: 930
score: 99.25312805175781
patch: Node fall CaMeL Through = parent . get CaMeL Out CaMeL Edges ( ) ;
rank: 930
score: 99.17537144252232
patch: Node next = next . get CaMeL First CaMeL Child ( ) ;
rank: 930
score: 99.09457632211539
patch: Point fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 931
score: 99.280029296875
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( g CaMeL Node ) ; }
rank: 931
score: 99.25104522705078
patch: String fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) ;
rank: 931
score: 99.17448207310268
patch: try { return out CaMeL Edges . get ( 0 ) ; }
rank: 931
score: 99.15523856026786
patch: Node fall CaMeL Through = n . get CaMeL Instance ( ) ;
rank: 931
score: 99.1466533954327
patch: fall CaMeL Through = null ; fall CaMeL Through = null ;
rank: 931
score: 99.0918438251202
patch: Node fall CaMeL Through = get CaMeL Node ( n ) ;
rank: 932
score: 99.27970123291016
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ; }
rank: 932
score: 99.25040435791016
patch: } else { return n . get CaMeL First CaMeL Child ( ) ; }
rank: 932
score: 99.17345174153645
patch: Node next = n . get CaMeL First ( ) ;
rank: 932
score: 99.16697474888393
patch: return compute CaMeL Following ( compute CaMeL Following ( n ) ) ;
rank: 932
score: 99.14341383713942
patch: Node fall CaMeL Through = new Node ( n ) ; ;
rank: 932
score: 99.09032185872395
patch: Node fall CaMeL Through = compute CaMeL Following ( n ,
rank: 932
score: 99.00086388221153
patch: Through fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 933
score: 99.28303527832031
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 933
score: 99.2502670288086
patch: int fall CaMeL Through = n . get CaMeL First CaMeL Child ( ) ;
rank: 933
score: 99.17252894810268
patch: Node get = n . get CaMeL First CaMeL Child ( ) ;
rank: 933
score: 99.1627948467548
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 933
score: 99.15129743303571
patch: if ( try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ;
rank: 933
score: 99.08623798076923
patch: if ( fall CaMeL Through == null ) { continue ; }
rank: 933
score: 99.00071364182692
patch: Node fall CaMeL Through = compute CaMeL Following ( 0 ) ;
rank: 934
score: 99.2790756225586
patch: if ( ! n . has CaMeL Children ( ) ) { break ; }
rank: 934
score: 99.17232840401786
patch: Node current = n . get CaMeL First CaMeL Child ( ) ;
rank: 934
score: 99.15518798828126
patch: fall CaMeL Through = true ; break ; }
rank: 934
score: 99.13641826923077
patch: Node fall CaMeL Through = Node . create ( n ) ;
rank: 934
score: 99.08603140024039
patch: Node fall CaMeL Through = compute CaMeL Following ( next ) ;
rank: 935
score: 99.2828369140625
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ; }
rank: 935
score: 99.24797712053571
patch: boolean fall CaMeL Through = n . has CaMeL Children ( ) ;
rank: 935
score: 99.16972133091518
patch: Node fall CaMeL Through = get CaMeL Out CaMeL Edges ( ) ;
rank: 935
score: 99.14076450892857
patch: Node fall CaMeL Through = n . get CaMeL Type ( ) ;
rank: 935
score: 99.13594876802884
patch: fall CaMeL Through = compute CaMeL Following ( n ) ; ;
rank: 935
score: 99.08573091947116
patch: Node fall CaMeL Through = compute CaMeL Following ( type ) ;
rank: 935
score: 98.99854454627403
patch: compute CaMeL Following ( compute CaMeL Following ( n ) ) .
rank: 936
score: 99.28228400735294
patch: consume ( n . get CaMeL Next ( ) == Branch . UNCOND ) ;
rank: 936
score: 99.16766826923077
patch: if ( n . has CaMeL Children ( ) ) break ;
rank: 936
score: 99.08405010516827
patch: Instruction fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 937
score: 99.28191061580883
patch: if ( out CaMeL Edges . size ( ) == 1 || / / ) {
rank: 937
score: 99.2538818359375
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this , n ) ;
rank: 937
score: 99.24680001395089
patch: String fall CaMeL Through = n . get CaMeL Value ( ) ;
rank: 937
score: 99.16646030970982
patch: try { if ( n . has CaMeL Children ( ) ) {
rank: 937
score: 99.14000525841347
patch: throw new Runtime CaMeL Exception ( $STRING$ + n ) ; }
rank: 937
score: 99.13552621694711
patch: if ( n . has CaMeL Children ( ) ) continue ;
rank: 937
score: 99.08285757211539
patch: if ( ! n . is CaMeL Empty ( ) ) {
rank: 938
score: 99.26858956473214
patch: g CaMeL Node = out CaMeL Edges . get ( 0 ) ;
rank: 938
score: 99.16321672712054
patch: if ( out CaMeL Edges . has CaMeL Children ( ) ) {
rank: 938
score: 99.13495342548077
patch: / fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 938
score: 99.08258526141827
patch: if ( fall CaMeL Through == null ) { break ; }
rank: 939
score: 99.28064682904412
patch: switch ( n . get CaMeL Type ( ) ) { case Token . RETURN :
rank: 939
score: 99.242724609375
patch: try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 939
score: 99.14383638822116
patch: if ( out CaMeL Edges != null ) { break ; }
rank: 939
score: 99.13320688100961
patch: System . out . println ( $STRING$ + n ) ; }
rank: 939
score: 99.12884990985577
patch: } else if ( n . has CaMeL Children ( ) )
rank: 939
score: 99.08251014122597
patch: for ( Node fall CaMeL Through : fall CaMeL Through ) {
rank: 939
score: 98.9931171123798
patch: Node fall CaMeL Through = n ; return fall CaMeL Through ;
rank: 940
score: 99.24151204427083
patch: if ( out CaMeL Edges . size ( ) > 1 && / /
rank: 940
score: 99.13547926682692
patch: if ( out CaMeL Edges . size ( ) > 1 )
rank: 940
score: 99.08228478064903
patch: E fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 940
score: 98.98965219350961
patch: try { Node fall CaMeL Through = clear ( n ) ;
rank: 941
score: 99.27606964111328
patch: if ( n == null && n . has CaMeL Children ( ) ) {
rank: 941
score: 99.1347147623698
patch: switch ( n . get CaMeL Next ( ) ) {
rank: 941
score: 99.09461558948864
patch: Node fall CaMeL Through = ( Node ) null ;
rank: 941
score: 99.07973069411058
patch: Type fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 941
score: 98.988671875
patch: try { Node fall CaMeL Through = true ;
rank: 942
score: 99.27377319335938
patch: return n ; } switch ( n . get CaMeL Type ( ) ) {
rank: 942
score: 99.2498779296875
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( n ) ; } else
rank: 942
score: 99.23350524902344
patch: Node next = ( Node ) out CaMeL Edges . get ( 0 ) ;
rank: 942
score: 99.13234456380208
patch: } case Token . BREAK : case Token . CONTINUE :
rank: 942
score: 99.12239896334134
patch: fall CaMeL Through = true ; fall CaMeL Through = ) ;
rank: 942
score: 99.07836303710937
patch: if ( compute CaMeL Following ( n ) )
rank: 943
score: 99.27344512939453
patch: if ( out CaMeL Edges . size ( ) == 1 || / ) {
rank: 943
score: 99.13193922776442
patch: if ( ! n . has CaMeL Children ( ) ) {
rank: 943
score: 99.1216064453125
patch: fall CaMeL Through = false ; break ; }
rank: 943
score: 99.11435171274039
patch: Node fall CaMeL Through = new Node ( n . ) ;
rank: 943
score: 99.0890780362216
patch: Node fall CaMeL Through = ( Node ) false ;
rank: 943
score: 99.07720947265625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 943
score: 98.96830444335937
patch: try { Node fall CaMeL Through = n ;
rank: 944
score: 99.27079010009766
patch: if ( n . get CaMeL Type ( ) == Token . BREAK ) {
rank: 944
score: 99.2189190204327
patch: Node node = out CaMeL Edges . get ( 0 ) ;
rank: 944
score: 99.1139385516827
patch: Node fall CaMeL Through = node . get ( 0 ) ;
rank: 944
score: 99.08433837890625
patch: if ( fall CaMeL Through != null ) {
rank: 944
score: 99.07501690204327
patch: Collection fall CaMeL Through = compute CaMeL Following ( n ) ;
rank: 944
score: 98.96583140980114
patch: Node fall CaMeL Through = LT ( n ) ;
rank: 945
score: 99.26956176757812
patch: if ( fall CaMeL Through && n . has CaMeL Children ( ) ) {
rank: 945
score: 99.208447265625
patch: Node fall CaMeL Through = out CaMeL Edges . remove ( 0 ) ;
rank: 945
score: 99.12807053786058
patch: if ( out CaMeL Edges . size ( ) == 0 )
rank: 945
score: 99.11332194010417
patch: Node fall CaMeL Through = new Node ( node ) ;
rank: 945
score: 99.10945434570313
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 945
score: 99.06629527698864
patch: Node fall CaMeL Through = ( Node ) true ;
rank: 945
score: 98.96071370442708
patch: fall CaMeL Through = fall CaMeL Through ( n ) ;
rank: 946
score: 99.26746368408203
patch: if ( next . get CaMeL Type ( ) == Token . FUNCTION ) {
rank: 946
score: 99.1217510516827
patch: try { return out CaMeL Edges . get ( 0 ) ;
rank: 946
score: 99.11155348557692
patch: } Node fall CaMeL Through = new Node ( n ) ;
rank: 947
score: 99.24442545572917
patch: out CaMeL Edges . get ( 0 ) . add ( n ) ;
rank: 947
score: 99.21820940290179
patch: Preconditions . add ( n . get CaMeL Next ( ) ) ;
rank: 947
score: 99.1104736328125
patch: Node fall CaMeL Through = new Node ( this ) ;
rank: 947
score: 99.09588153545673
patch: if ( out CaMeL Edges . size ( ) > 1 &&
rank: 947
score: 99.06695556640625
patch: Node fall CaMeL Through = new int [ 0 ] ;
rank: 947
score: 98.95171564275569
patch: Node type = compute CaMeL Following ( n ) ;
rank: 948
score: 99.24424743652344
patch: if ( n . get CaMeL Next ( ) . get CaMeL Type ( )
rank: 948
score: 99.18580845424107
patch: Node key = n . get CaMeL First CaMeL Child ( ) ;
rank: 948
score: 99.10930926983173
patch: Node fall CaMeL Through = get CaMeL Next ( n ) ;
rank: 948
score: 99.09390258789062
patch: } case Token . BREAK : case Token . BREAK :
rank: 948
score: 98.95106811523438
patch: try { Node fall CaMeL Through = false ;
rank: 949
score: 99.26024627685547
patch: if ( out CaMeL Edges . size ( ) == 1 && / / )
rank: 949
score: 99.24038696289062
patch: if ( out CaMeL Edges . get ( 0 ) == Branch . UNCOND
rank: 949
score: 99.10750638521634
patch: fall CaMeL Through = false ; fall CaMeL Through = false ;
rank: 949
score: 99.09425706129808
patch: try { Node node = compute CaMeL Following ( n ) ;
rank: 949
score: 99.09079214242789
patch: } switch ( n . has CaMeL Children ( ) ) {
rank: 949
score: 99.0615703876202
patch: Node fall CaMeL Through = nodes . get ( n ) ;
rank: 949
score: 98.94725452769886
patch: Node n = fall CaMeL Through ( n ) ;
rank: 950
score: 99.25984191894531
patch: if ( n . get CaMeL Type ( ) != Token . FUNCTION ) {
rank: 950
score: 99.23951067243304
patch: Node type = n . get CaMeL First CaMeL Child ( ) ;
rank: 950
score: 99.17422250600961
patch: Node fall CaMeL Through = out CaMeL Edges [ 0 ] ;
rank: 950
score: 99.10548753004808
patch: Node fall CaMeL Through = new Node ( n , ) ;
rank: 950
score: 99.05277506510417
patch: Node fall CaMeL Through = new Node > ( ) ;
rank: 950
score: 98.94675514914773
patch: Node fall CaMeL Through = new ( n ) ;
rank: 951
score: 99.16969517299107
patch: int fall CaMeL Through = n . get CaMeL Type ( ) ;
rank: 951
score: 99.10545935997597
patch: Node fall CaMeL Through = get CaMeL Result ( n ) ;
rank: 951
score: 99.07918294270833
patch: } case Token . RETURN : case Token . CONTINUE :
rank: 951
score: 99.04764498197116
patch: Node fall CaMeL Through = ( ( Node ) n ) ;
rank: 951
score: 98.9421719637784
patch: Node parent = compute CaMeL Following ( n ) ;
rank: 952
score: 99.20133754185268
patch: Object fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 952
score: 99.16332135881696
patch: Node next = n . get CaMeL Last CaMeL Child ( ) ;
rank: 952
score: 99.0774434407552
patch: if ( n . has CaMeL Next ( ) ) {
rank: 952
score: 99.0524658203125
patch: return fall CaMeL Through ( n ) ; }
rank: 952
score: 99.04679361979167
patch: Node fall CaMeL Through ; if ( fall CaMeL Through ;
rank: 952
score: 99.04615367542614
patch: for ( Node fall CaMeL Through : n ) {
rank: 952
score: 98.93593343098958
patch: switch ( n . get CaMeL Type ( ) ) {
rank: 953
score: 99.25702776227679
patch: if ( n . has CaMeL Children ( ) ) return n ;
rank: 953
score: 99.22538248697917
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( n ) ; } }
rank: 953
score: 99.06868489583333
patch: switch ( out CaMeL Edges . size ( ) ) {
rank: 953
score: 99.05233764648438
patch: compute CaMeL Following ( n ) ; return null ; }
rank: 953
score: 99.03960712139423
patch: Node fall CaMeL Through = node . get ( n ) ;
rank: 953
score: 98.93540261008523
patch: Node fall CaMeL Through = clear ( n ) ;
rank: 954
score: 99.25591278076172
patch: if ( n . has CaMeL Children ( ) ) { break ; break ;
rank: 954
score: 99.19286237444196
patch: String fall CaMeL Through = n . get CaMeL Next ( ) ;
rank: 954
score: 99.15318080357143
patch: Node next = node . get CaMeL First CaMeL Child ( ) ;
rank: 954
score: 99.09311147836539
patch: Node fall CaMeL Through = this . create ( n ) ;
rank: 954
score: 99.03488159179688
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 954
score: 98.92936567826705
patch: Node element = compute CaMeL Following ( n ) ;
rank: 955
score: 99.2522216796875
patch: if ( ! ( n . has CaMeL Children ( ) ) ) {
rank: 955
score: 99.2242431640625
patch: if ( out CaMeL Edges . get ( 0 ) == null ) {
rank: 955
score: 99.18335832868304
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ; }
rank: 955
score: 99.151123046875
patch: Node fall CaMeL Through = fall CaMeL Through + fall CaMeL Through ;
rank: 955
score: 99.05861409505208
patch: } case Token . RETURN : case Token . BREAK :
rank: 955
score: 99.03732299804688
patch: Node fall CaMeL Through ; if ( fall CaMeL Through )
rank: 955
score: 99.0352071126302
patch: compute CaMeL Following ( fall CaMeL Through , n ) ;
rank: 955
score: 99.0347567471591
patch: compute CaMeL Following ( n ) ; break ; }
rank: 955
score: 98.92692057291667
patch: fall CaMeL Through = should CaMeL Remove ( n ) ;
rank: 956
score: 99.22412923177083
patch: Node fall CaMeL Through = new Node < Branch > ( n ) ;
rank: 956
score: 99.17896446814903
patch: remove CaMeL Dead CaMeL Expr CaMeL Statement CaMeL Safely ( ) ;
rank: 956
score: 99.15011160714286
patch: Node fall CaMeL Through = fall CaMeL Through : out CaMeL Edges ;
rank: 956
score: 99.0872051532452
patch: fall CaMeL Through = compute CaMeL Following ( n , ) ;
rank: 956
score: 99.04796346028645
patch: if ( out CaMeL Edges != null ) { break ;
rank: 956
score: 99.03228204900569
patch: if ( ! compute CaMeL Following ( n ) )
rank: 956
score: 98.92549438476563
patch: n = fall CaMeL Through ( n ) ;
rank: 957
score: 99.2502212524414
patch: if ( n . has CaMeL Children ( ) && fall CaMeL Through ) {
rank: 957
score: 99.16939290364583
patch: return out CaMeL Edges . get ( 0 ) ; }
rank: 957
score: 99.03715006510417
patch: } case Token . CONTINUE : case Token . CONTINUE :
rank: 957
score: 99.03490271935097
patch: Node fall CaMeL Through = n . compute ( n ) ;
rank: 957
score: 99.03025512695312
patch: compute CaMeL Following ( n , n ) ;
rank: 957
score: 99.0236104329427
patch: Node < Node > compute CaMeL Following ( n ) ;
rank: 957
score: 98.92317504882813
patch: compute CaMeL Following ( n , true ) ;
rank: 958
score: 99.2492446899414
patch: if ( n . get CaMeL Next ( ) != fall CaMeL Through ) {
rank: 958
score: 99.03395432692308
patch: Node fall CaMeL Through = get CaMeL State ( n ) ;
rank: 958
score: 99.03084309895833
patch: } case Token . BREAK : case Token . FUNCTION :
rank: 958
score: 99.03003946940105
patch: if ( compute CaMeL Following ( n ) ) continue ;
rank: 958
score: 99.01326127485795
patch: fall CaMeL Through = true ; break ; } }
rank: 958
score: 98.9202547940341
patch: Node info = compute CaMeL Following ( n ) ;
rank: 959
score: 99.16079477163461
patch: Node < Node , Branch >> out CaMeL Edges = null ;
rank: 959
score: 99.0828106219952
patch: Node fall CaMeL Through = n . get ( 1 ) ;
rank: 959
score: 99.02784220377605
patch: Node next = n . get CaMeL Parent ( ) ;
rank: 959
score: 98.91520182291667
patch: if ( compute CaMeL Following ( n ) false ) {
rank: 960
score: 99.02672322591145
patch: Node next = n . get CaMeL Value ( ) ;
rank: 960
score: 99.01922052556819
patch: Node fall CaMeL Through = consume ( n ) ;
rank: 960
score: 99.01146351207386
patch: Node fall CaMeL Through = ( Node ) 0 ;
rank: 961
score: 99.24380493164062
patch: if ( fall CaMeL Through || n . has CaMeL Children ( ) ) {
rank: 961
score: 99.01783243815105
patch: if ( compute CaMeL Following ( n ) != null )
rank: 961
score: 99.0170186360677
patch: } case Token . BREAK : case Token . RETURN :
rank: 961
score: 99.00733642578125
patch: if ( fall CaMeL Through != null ) ;
rank: 961
score: 98.91061401367188
patch: try { if ( fall CaMeL Through ( ) ) {
rank: 962
score: 99.24093627929688
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( true ) ;
rank: 962
score: 99.19801548549107
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ; }
rank: 962
score: 99.14256068638393
patch: Node fall CaMeL Through = fall CaMeL Through == null ? n ;
rank: 962
score: 99.01636759440105
patch: case Token . BREAK : case Token . CONTINUE : {
rank: 962
score: 98.9861172762784
patch: n = compute CaMeL Following ( n ) ; }
rank: 962
score: 98.90938313802083
patch: if ( compute CaMeL Following ( n ) true ) {
rank: 963
score: 99.01471557617188
patch: if ( out CaMeL Edges != null ) {
rank: 963
score: 99.01014200846355
patch: Node fall CaMeL Through = new Node 1 ( ) ;
rank: 963
score: 98.98792613636364
patch: Node fall CaMeL Through = get ( n ) ;
rank: 963
score: 98.98356489701705
patch: throw new Internal CaMeL Error ( $STRING$ ) ; }
rank: 964
score: 99.23710632324219
patch: Node try { return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( false ) ;
rank: 964
score: 99.1135762532552
patch: remove ( n . get CaMeL Next ( ) ) ;
rank: 964
score: 99.00933837890625
patch: if ( ! n . is CaMeL Empty ( ) )
rank: 964
score: 98.98325417258523
patch: throw new Assertion CaMeL Error ( $STRING$ ) ; }
rank: 964
score: 98.95698686079545
patch: return n ; } else { return n ; }
rank: 964
score: 98.9043960571289
patch: compute CaMeL Following ( n ) ;
rank: 965
score: 99.23706817626953
patch: if ( n . get CaMeL Next ( ) == null ) return n ;
rank: 965
score: 99.12697190504808
patch: Node fall CaMeL Through = fall CaMeL Through [ 0 ] ;
rank: 965
score: 99.04104614257812
patch: Node fall CaMeL Through = new Node ( $STRING$ ) ;
rank: 965
score: 99.007080078125
patch: Node fall CaMeL Through = new Node [ 1 ] ;
rank: 965
score: 98.98277698863636
patch: fall CaMeL Through = false ; break ; } }
rank: 965
score: 98.98107299804687
patch: if ( fall CaMeL Through == null ) {
rank: 965
score: 98.94142844460227
patch: if ( fall CaMeL Through ) { break ; }
rank: 965
score: 98.90430704752605
patch: Node fall CaMeL Through = n . current ( ) ;
rank: 966
score: 99.00022379557292
patch: if ( compute CaMeL Following ( n ) == null )
rank: 966
score: 98.97951438210227
patch: Node fall CaMeL Through = type ( n ) ;
rank: 966
score: 98.9755526455966
patch: } else { fall CaMeL Through = true ; }
rank: 966
score: 98.91956787109375
patch: Node fall CaMeL Through : try { break ;
rank: 966
score: 98.90272013346355
patch: Node fall CaMeL Through = fall CaMeL Through = n ;
rank: 967
score: 99.230712890625
patch: if ( n . get CaMeL Type ( ) == Token . TYPE ) {
rank: 967
score: 99.00831187855114
patch: Node node = fall CaMeL Through ( n ) ;
rank: 967
score: 98.9748868075284
patch: if ( fall CaMeL Through == null ) continue ;
rank: 967
score: 98.91021118164062
patch: } else { return fall CaMeL Through ; }
rank: 968
score: 99.22990199497768
patch: if ( out CaMeL Edges . size ( ) == 1 && /
rank: 968
score: 99.11326246995192
patch: return try CaMeL Remove CaMeL Unconditional CaMeL Branching ( this ) ;
rank: 968
score: 99.09308330829327
patch: Node fall CaMeL Through = ( Node , fall CaMeL Through )
rank: 968
score: 99.05206298828125
patch: return fall CaMeL Through ; } case Token . RETURN :
rank: 968
score: 99.00243030894886
patch: Node fall CaMeL Through = ( Node ) n ;
rank: 968
score: 98.97474161783855
patch: Node fall CaMeL Through = ( Node , n ) ;
rank: 968
score: 98.90974564985795
patch: if ( fall CaMeL Through == null ) break ;
rank: 968
score: 98.89436848958333
patch: compute CaMeL Following ( compute CaMeL Following ( n ) ;
rank: 969
score: 99.22782897949219
patch: if ( n . get CaMeL Type ( ) == Token . BLOCK ) {
rank: 969
score: 99.0020039876302
patch: System . err . println ( $STRING$ + n ) ;
rank: 969
score: 98.98378684303977
patch: while ( compute CaMeL Following ( n ) ) {
rank: 969
score: 98.90281982421875
patch: if ( out CaMeL Edges == null ) {
rank: 969
score: 98.89302368164063
patch: compute CaMeL Following ( n , false ) ;
rank: 970
score: 99.08106486002605
patch: if ( g CaMeL Node == fall CaMeL Through ) {
rank: 970
score: 99.07932535807292
patch: Node fall CaMeL Through = fall CaMeL Through : n ;
rank: 970
score: 99.0301180752841
patch: return out CaMeL Edges . get ( 0 ) ;
rank: 970
score: 98.95071072048611
patch: throw new Error ( $STRING$ ) ; }
rank: 970
score: 98.89084879557292
patch: Node fall CaMeL Through = n . create ( ) ;
rank: 970
score: 98.86715087890624
patch: return n ; } else { return n ;
rank: 971
score: 99.07997639973958
patch: if ( out CaMeL Edges . length == 1 ) {
rank: 971
score: 99.01798872514205
patch: Node < Node , Branch >> out CaMeL Edges =
rank: 971
score: 98.95042835582386
patch: Node < Node > fall CaMeL Through = null ;
rank: 971
score: 98.89061390269886
patch: Node next = compute CaMeL Following ( n ) ;
rank: 972
score: 99.21097005208334
patch: if ( out CaMeL Edges . size ( ) == 1 && / )
rank: 972
score: 99.0690205891927
patch: Node = out CaMeL Edges . get ( 0 ) ;
rank: 972
score: 98.96826171875
patch: return fall CaMeL Through ; } return n ;
rank: 972
score: 98.88872736150569
patch: try { Node fall CaMeL Through ( n ) ;
rank: 972
score: 98.85370483398438
patch: if ( fall CaMeL Through ) { break ;
rank: 973
score: 99.20801653180804
patch: if ( n . has CaMeL Children ( ) && / ) {
rank: 973
score: 99.0654805501302
patch: Node node = n . get CaMeL Next ( ) ;
rank: 973
score: 98.97313343394886
patch: List ( compute CaMeL Following ( n ) ) ;
rank: 973
score: 98.96757368607955
patch: Node < Node >> out CaMeL Edges = null ;
rank: 973
score: 98.95685424804688
patch: if ( fall CaMeL Through == null ) ;
rank: 973
score: 98.9490966796875
patch: Node fall CaMeL Through = children [ 0 ] ;
rank: 973
score: 98.945361328125
patch: fall CaMeL Through = true ; continue ; }
rank: 973
score: 98.88530939275569
patch: if ( fall CaMeL Through ( n ) ) {
rank: 973
score: 98.82564544677734
patch: } else { return n ; }
rank: 974
score: 99.05799278846153
patch: Node fall CaMeL Through = out CaMeL Edges [ 1 ] ;
rank: 974
score: 99.04390462239583
patch: Node type = n . get CaMeL Next ( ) ;
rank: 974
score: 98.95252574573864
patch: Node fall CaMeL Through = ( Node ) node ;
rank: 974
score: 98.88363037109374
patch: Preconditions . remove ( 0 ) ; break ;
rank: 974
score: 98.87779651988636
patch: Node fall CaMeL Through = filter ( n ) ;
rank: 974
score: 98.80587768554688
patch: return n ; } return fall CaMeL Through ;
rank: 975
score: 99.2015869140625
patch: while ( out CaMeL Edges . size ( ) == 1 && / /
rank: 975
score: 99.01382446289062
patch: out CaMeL Edges . remove ( 0 ) ; break ;
rank: 975
score: 98.9530362215909
patch: try { Node fall CaMeL Through = n ) ;
rank: 975
score: 98.9517822265625
patch: Node fall CaMeL Through = ( Node ) parent ;
rank: 975
score: 98.9369784268466
patch: compute CaMeL Following ( n , n ) ; }
rank: 975
score: 98.93520285866477
patch: } else { fall CaMeL Through = false ; }
rank: 975
score: 98.86541137695312
patch: return out CaMeL Edges ; } return n ;
rank: 975
score: 98.86447975852273
patch: Node fall CaMeL Through = resolve ( n ) ;
rank: 975
score: 98.73471069335938
patch: if ( next == null ) {
rank: 976
score: 99.19948904854911
patch: if ( ( n . has CaMeL Children ( ) ) ) {
rank: 976
score: 99.00653076171875
patch: return fall CaMeL Through ; } return fall CaMeL Through ;
rank: 976
score: 98.94804243607955
patch: Node fall CaMeL Through = new Node n ) ;
rank: 976
score: 98.93354936079545
patch: Node < Node > fall CaMeL Through = this ;
rank: 976
score: 98.89695434570312
patch: return compute CaMeL Following ( n ) ; }
rank: 976
score: 98.860205078125
patch: try { Node fall CaMeL Through = this ;
rank: 976
score: 98.84715576171875
patch: return n ; } case Token . RETURN :
rank: 976
score: 98.73419189453125
patch: return n ; } return n ;
rank: 977
score: 98.99788818359374
patch: if ( g CaMeL Node == null ) {
rank: 977
score: 98.94539794921874
patch: Node fall CaMeL Through = new ( ) ;
rank: 977
score: 98.88684692382813
patch: fall CaMeL Through = true ; } else {
rank: 977
score: 98.85566850142045
patch: try { = compute CaMeL Following ( n ) ;
rank: 977
score: 98.82874755859375
patch: return n . get CaMeL Destination ( ) ;
rank: 977
score: 98.69969177246094
patch: if ( next != null ) {
rank: 978
score: 99.17869349888393
patch: try { switch ( n . get CaMeL Type ( ) ) {
rank: 978
score: 99.00613403320312
patch: Node fall CaMeL Through = fall CaMeL Through ;
rank: 978
score: 98.98598410866477
patch: List < Branch >> out CaMeL Edges = null ;
rank: 978
score: 98.9317959872159
patch: Node < Node > fall CaMeL Through = n ;
rank: 978
score: 98.69157579210069
patch: } } else { return n ; }
rank: 979
score: 98.67760467529297
patch: Node fall CaMeL Through = n ;
rank: 979
score: 98.66609191894531
patch: } } else { return n ;
rank: 980
score: 98.97537231445312
patch: Node fall CaMeL Through = fall CaMeL Through + n ;
rank: 980
score: 98.90700073242188
patch: if ( compute CaMeL Following ( n ) ;
rank: 980
score: 98.85953097873264
patch: compute CaMeL Following ( n ) ; }
rank: 980
score: 98.84619140625
patch: Node compute CaMeL Following ( n , n ) ;
rank: 980
score: 98.83572998046876
patch: return fall CaMeL Through ; } } else {
rank: 980
score: 98.66539764404297
patch: Node fall CaMeL Through = this ;
rank: 980
score: 98.64253743489583
patch: return fall CaMeL Through ;
rank: 981
score: 98.96983846028645
patch: Node next = out CaMeL Edges . get ( 0 )
rank: 981
score: 98.93433227539063
patch: Node fall CaMeL Through = n ) break ;
rank: 981
score: 98.89289994673295
patch: if ( ! compute CaMeL Following ( n ) ;
rank: 981
score: 98.85758056640626
patch: throw new Runtime CaMeL Exception ( ) ; }
rank: 981
score: 98.84430541992188
patch: try ; compute CaMeL Following ( n ) ;
rank: 981
score: 98.8310302734375
patch: out CaMeL Edges . remove ( 0 ) ;
rank: 981
score: 98.60811941964286
patch: return fall CaMeL Through ; }
rank: 982
score: 99.0778096516927
patch: if ( n == null ) { return n ; }
rank: 982
score: 98.89082475142045
patch: Node fall CaMeL Through = ( Node ) break ;
rank: 982
score: 98.85343627929687
patch: fall CaMeL Through = false ; } else {
rank: 982
score: 98.8268798828125
patch: Node fall CaMeL Through = new Node null ;
rank: 982
score: 98.54285430908203
patch: break ; } } return n ;
rank: 983
score: 99.05370076497395
patch: if ( n . size ( ) == 1 ) {
rank: 983
score: 98.92359508167614
patch: Node fall CaMeL Through = new Node $NUMBER$ null ;
rank: 983
score: 98.89140319824219
patch: Node fall CaMeL Through = null ;
rank: 983
score: 98.86964721679688
patch: } else { return out CaMeL Edges ; }
rank: 983
score: 98.80743408203125
patch: out CaMeL Edges . get ( 0 ) .
rank: 983
score: 98.55835723876953
patch: Preconditions . remove ( 0 ) ;
rank: 983
score: 98.30393763950893
patch: } case Token . BREAK :
rank: 984
score: 98.8695068359375
patch: Node fall CaMeL Through = new Node ) ;
rank: 984
score: 98.8605712890625
patch: Node fall CaMeL Through ; if ( n ;
rank: 984
score: 98.84193725585938
patch: Node fall CaMeL Through = out CaMeL Edges ;
rank: 984
score: 98.82437133789062
patch: fall CaMeL Through = true ; }
rank: 984
score: 98.82306463068181
patch: try { = fall CaMeL Through ( n ) ;
rank: 984
score: 98.50748988560268
patch: return out CaMeL Edges ; }
rank: 984
score: 98.21970621744792
patch: Node next = n ;
rank: 985
score: 99.03862970525569
patch: if ( n . has CaMeL Children ( ) )
rank: 985
score: 98.8334716796875
patch: } else { return g CaMeL Node ; }
rank: 985
score: 98.82252807617188
patch: compute CaMeL Following ( n ) ; ) ;
rank: 985
score: 98.80209011501736
patch: throw new Exception ( $STRING$ ) ; }
rank: 985
score: 98.57514190673828
patch: Node fall CaMeL Through = false ;
rank: 985
score: 98.4879150390625
patch: return out CaMeL Edges ;
rank: 985
score: 98.21352132161458
patch: Node fall CaMeL Through =
rank: 986
score: 98.9660977450284
patch: if ( n == null ) { return n ;
rank: 986
score: 98.8943115234375
patch: if ( ! fall CaMeL Through ) continue ;
rank: 986
score: 98.84943237304688
patch: compute CaMeL Following ( n ) ; ; }
rank: 986
score: 98.76966094970703
patch: fall CaMeL Through = false ; }
rank: 986
score: 98.23091634114583
patch: return g CaMeL Node ;
rank: 986
score: 98.20192464192708
patch: case Token . BREAK :
rank: 987
score: 98.84204711914063
patch: Node fall CaMeL Through = g CaMeL Node ;
rank: 987
score: 98.80945434570313
patch: Node fall CaMeL Through = ( Node ) ;
rank: 987
score: 98.75923461914063
patch: try { Node fall CaMeL Through = 0 ;
rank: 987
score: 98.47920227050781
patch: Node fall CaMeL Through = true ;
rank: 987
score: 98.17954508463542
patch: case Token . CONTINUE :
rank: 987
score: 98.11032104492188
patch: return cur CaMeL Cfg ;
rank: 988
score: 98.85234375
patch: if ( n == null ) return n ;
rank: 988
score: 98.75155639648438
patch: try { Node fall CaMeL Through = node ;
rank: 988
score: 98.7238998413086
patch: throw new Error ( $STRING$ ) ;
rank: 988
score: 98.4609375
patch: return n ; } } else {
rank: 988
score: 98.17873128255208
patch: case Token . RETURN :
rank: 989
score: 98.85366821289062
patch: Node fall CaMeL Through = n ) continue ;
rank: 989
score: 98.7489501953125
patch: compute CaMeL Following ( n ) ; try {
rank: 989
score: 98.55950164794922
patch: if ( n == null ) {
rank: 989
score: 98.06834716796875
patch: return n ; }
rank: 990
score: 98.82471923828125
patch: Node node = new Node ( n ) ;
rank: 990
score: 98.74598999023438
patch: if ( fall CaMeL Through ( ) ) {
rank: 990
score: 98.69534640842014
patch: Node fall CaMeL Through = fall CaMeL Through
rank: 990
score: 98.56413269042969
patch: throw new Exception ( $STRING$ ) ;
rank: 990
score: 97.93598937988281
patch: return n ;
rank: 991
score: 98.62339274088542
patch: } else { return n ; } }
rank: 991
score: 98.55124337332589
patch: fall CaMeL Through = true ;
rank: 991
score: 97.84483642578125
patch: return null ; }
rank: 992
score: 98.81707153320312
patch: fall CaMeL Through = false ; continue ; }
rank: 992
score: 98.81209309895833
patch: Node fall CaMeL Through = n ) ;
rank: 992
score: 98.73271484375
patch: Node fall CaMeL Through = current ( ) ;
rank: 992
score: 98.60293579101562
patch: Node fall CaMeL Through = node ;
rank: 992
score: 98.49757603236607
patch: fall CaMeL Through = false ;
rank: 992
score: 97.7426513671875
patch: break ; } }
rank: 992
score: 97.50093078613281
patch: return null ;
rank: 993
score: 98.71310085720486
patch: Node compute CaMeL Following ( n ) ;
rank: 993
score: 97.6817626953125
patch: return next ; }
rank: 993
score: 97.3668441772461
patch: return next ;
rank: 994
score: 98.69013129340277
patch: Node fall CaMeL Through ( n ) ;
rank: 994
score: 97.668017578125
patch: return this ; }
rank: 994
score: 97.63502807617188
patch: } return n ;
rank: 994
score: 97.44078826904297
patch: break ; }
rank: 994
score: 97.28783162434895
patch: break ;
rank: 995
score: 98.4676513671875
patch: } else { return null ; }
rank: 995
score: 97.14016723632812
patch: } else {
rank: 996
score: 98.4585189819336
patch: } else { return this ; }
rank: 996
score: 98.35112653459821
patch: fall CaMeL Through = null ;
rank: 996
score: 97.2465591430664
patch: return this ;
rank: 996
score: 97.1328125
patch: Node try {
rank: 997
score: 98.33379255022321
patch: Node fall CaMeL Through ++ ;
rank: 997
score: 97.06219482421875
patch: return node ;
rank: 998
score: 98.32386271158855
patch: Node fall CaMeL Through ;
rank: 998
score: 96.93054962158203
patch: return false ;
rank: 998
score: 96.31809488932292
patch: } }
rank: 999
score: 98.523681640625
patch: boolean fall CaMeL Through = false ;
rank: 999
score: 98.46353912353516
patch: try { Node ( n ) ;
rank: 999
score: 96.49831136067708
patch: try {
rank: 999
score: 94.35213470458984
patch: }
rank: 1000
score: 95.73874918619792
patch: / /
rank: 1000
score: 94.76639556884766
patch: try
rank: 1000
score: 93.64827728271484
patch: return
